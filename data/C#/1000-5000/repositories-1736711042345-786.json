{
  "metadata": {
    "timestamp": 1736711042345,
    "page": 786,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "videolan/libvlcsharp",
      "stars": 1548,
      "defaultBranch": "3.x",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.3203125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n# intermediary build output for mediaelement android project to circumvent path too long exception\ntmp/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n#*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# cake\ntools/"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.083984375,
          "content": "Please follow the VideoLAN Code of Conduct: https://wiki.videolan.org/Code_of_Conduct/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.5908203125,
          "content": "# Contributing to LibVLCSharp\n\nWe'd love for you to contribute to our source code and to make LibVLCSharp even better than it is\ntoday! Here are the guidelines we'd like you to follow:\n\n - [Code of Conduct](https://wiki.videolan.org/Code_of_Conduct/)\n - [Question or Problem?](#question)\n - [Issues and Bugs](#issue)\n - [Feature Requests](#feature)\n - [Submission Guidelines](#submit)\n - [Coding Rules](#rules)\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\nIf you have questions about how to use LibVLCSharp, please direct these to [StackOverflow](https://stackoverflow.com/questions/tagged/libvlcsharp). The project maintainers hang out on [Discord](https://discord.gg/3h3K3JF).\n\n## <a name=\"issue\"></a> Found an Issue?\n\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our [GitLab](https://code.videolan.org/videolan/LibVLCSharp) Repository. Even better you can submit a Pull Request with a fix.\n\n**Please see the [Submission Guidelines](#submit) below.**\n\n## <a name=\"feature\"></a> Want a Feature?\n\nYou can request a new feature by submitting an issue to our [GitLab](https://code.videolan.org/videolan/LibVLCSharp) Repository.  If you\nwould like to implement a new feature then consider what kind of change it is:\n\n* **Major Changes** that you wish to contribute to the project should be discussed first on [Discord](https://discord.gg/3h3K3JF) so that we can better coordinate our efforts,\n  prevent duplication of work, and help you to craft the change so that it is successfully accepted\n  into the project.\n* **Small Changes** can be crafted and submitted to the [GitLab](https://code.videolan.org/videolan/LibVLCSharp) or [GitHub](https://github.com/videolan/libvlcsharp/pulls) Repository as a Pull\n  Request.\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### Submitting an Issue\n\nIf your issue appears to be a bug, and hasn't been reported, open a new issue. Help us to maximize the effort we can spend fixing issues and adding new features, by not reporting duplicate issues.\n\nProviding the following information will increase the chances of your issue being dealt with\nquickly:\n\n* **Overview of the Issue** - if an error is being thrown a stack trace helps\n* **Motivation for or Use Case** - explain why this is a bug for you\n* **LibVLCSharp/LibVLC Version(s)** - is it a regression?\n* **Operating System** - is this a problem with all platforms or only specific ones?\n* **Reproduce the Error** - provide a example or an unambiguous set of steps.\n* **Related Issues** - has a similar issue been reported before?\n* **Suggest a Fix** - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\n**If you get help, help others. Good karma rulez!**\n\n### Submitting a Pull Request\nBefore you submit your pull request consider the following guidelines:\n\n* Search [GitLab](https://code.videolan.org/videolan/LibVLCSharp/merge_requests) or [GitHub](https://github.com/videolan/libvlcsharp/pulls) for an open or closed Pull Request\n  that relates to your submission. You don't want to duplicate effort.\n* Make your changes in a new git branch:\n\n    ```shell\n    git checkout -b my-fix-branch develop\n    ```\n\n* Create your patch, **including appropriate test cases**.\n* Follow our [Coding Rules](#rules).\n* Run the test suite, as described below.\n* Commit your changes using a descriptive commit message.\n\n    ```shell\n    git commit -a\n    ```\n  Note: the optional commit `-a` command line option will automatically \"add\" and \"rm\" edited files.\n* Make sure you use a distinctive commit author name.\n* Push your branch to GitHub:\n\n    ```shell\n    git push origin my-fix-branch\n    ```\n\nIn GitHub, send a pull request to `libvlcsharp:3.x`.\n\nIf we suggest changes, then:\n\n* Make the required updates.\n* Re-run the test suite to ensure tests are still passing.\n* Commit your changes to your branch (e.g. `my-fix-branch`).\n* Push the changes to your GitHub repository (this will update your Pull Request).\n\nIf the PR gets too outdated we may ask you to rebase and force push to update the PR:\n\n```shell\ngit rebase target_branch -i\ngit push origin my-fix-branch -f\n```\n\nThat's it! Thank you for your contribution!\n\n#### After your pull request is merged\n\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\n* Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n\n    ```shell\n    git push origin --delete my-fix-branch\n    ```\n\n* Check out the master branch:\n\n    ```shell\n    git checkout master -f\n    ```\n\n* Delete the local branch:\n\n    ```shell\n    git branch -D my-fix-branch\n    ```\n\n* Update your master with the latest upstream version:\n\n    ```shell\n    git pull --ff upstream master\n    ```\n## Coding\n\n### Developer Environment\n\nThe latest .NET 6 SDK is required.\n\n- Visual Studio 2022 (with latest patches/updates), with the following workloads/components\n    - .NET desktop development workload\n    - Mobile development with .NET workload and Android/iOS SDKs\n    - .NET Core cross-platform development\n    - Developer packs for .NET Framework 4.7 and 4.7.1\n\nYou will need to install GTK if you want to work on LibVLCSharp.GTK.\n\nIf you want to get started on Windows with minimal configuration requirements, open `LibVLCSharp.Win32.sln`.\n\n### <a name=\"rules\"></a> Coding Rules\n\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\n* All features or bug fixes **must be tested** by one or more unit tests (if possible and applicable).\n* All public API methods **must be documented** with XML documentation.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.904296875,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 21.8359375,
          "content": "LibVLCSharp version 3.9.1\n=========================\n* Add macOS and tvOS NET 8 targets\n* docs and CI improvements\n* MAUI: Add MediaElement support for iOS and Android by @jonx\n* Avalonia: Fix VideoView failing to update Content position when shifted by @Odalith\n* Avalonia: Add GetVisibleRegionAsGeometry() to clip VideoView.Content to parent window bounds by @Odalith\n\nLibVLCSharp version 3.9.0\n=========================\n* [BREAKING CHANGE] Uno: Move to Uno 5 support.\n* [BREAKING CHANGE] MAUI: Move to .NET 8\n* Core: Add support to .NET 8\n* CI: Reduce macOS CI scope as it cannot cross-build old/new TFMs easily.\n* UWP: use speex for audio resampling\n\nLibVLCSharp version 3.8.5\n=========================\n* MAUI: Fix broken release by shipping the modern AWindow binding to NuGet.\n\nLibVLCSharp version 3.8.4\n=========================\n* MAUI: Initial support with simple VideoView for now.\n\nLibVLCSharp version 3.8.3\n=========================\n* UWP: Fix for opaque subtitle background bug while still allowing optional alpha configuration\n* Avalonia: Support UserControl by @taivasverkko\n* Avalonia: Child content support for VideoView by @taivasverkko\n\nLibVLCSharp version 3.8.2\n=========================\n* WPF: ForegroundWindow: Fix regression by @amine2050\n\nLibVLCSharp version 3.8.1\n=========================\n* WPF: ForegroundWindow: support Viewbox contained and scaled video host by @amine2050\n\nLibVLCSharp version 3.8.0\n=========================\n* UWP: Added Clear method on VideoView by @FrayxRulez\n* UWP: Add alpha support to the SwapChain by @FrayxRulez\n* [BREAKING CHANGE] Add support to Avalonia 11. This breaks support to previous versions as Avalonia is not backward compatible.\n\nLibVLCSharp version 3.7.0\n=========================\n[BREAKING CHANGE] for UWP only: The namespaces of the view has been changed from\n```\nLibVLCSharp.Platforms.UWP\nxmlns:lvs=\"using:LibVLCSharp.Platforms.UWP\"\n```\nto\n```\nLibVLCSharp.Platforms.Windows\nxmlns:lvs=\"using:LibVLCSharp.Platforms.Windows\"\n```\nWe needed to have a way to name the view for both UWP and WinUI platforms as having 2 separate names was not possible. Hence the API break.\n\n* WinUI: Add initial View integration.\nBoth Packaged and Unpackaged modes have been tested. For Unpackaged, modify your csproj as the following\n    <EnablePreviewMsixTooling>false</EnablePreviewMsixTooling>\n\t<WindowsPackageType>None</WindowsPackageType>\n    <WindowsAppSdkBootstrapInitialize>false</WindowsAppSdkBootstrapInitialize>\n\t<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>\nand remove Package.appxmanifest.\nThe minimal TFM supported for WinUI is net6.0-windows10.0.17763.0.\n\n* UWP: Fix small D3D11 memory leaks in the VideoView.\n\nLibVLCSharp version 3.6.8\n=========================\n* WPF: Prevent disappear foreground window when closing canceled.\n* Linux [NON-API BREAKING CHANGE]: Fix Wayland support by removing automatic X11 threading system initialization (see docs/linux-setup.md)\n* Documentation improvements\n\nLibVLCSharp version 3.6.7\n=========================\n* Updated samples.\n* Update .NET and Uno.SourceGenerationTasks SDKs.\n* Interop: Fix mediaplayer vmem cleanup callback regression https://code.videolan.org/videolan/LibVLCSharp/-/issues/339\n\nLibVLCSharp version 3.6.6\n=========================\n* Add support to Eto.Forms UI framework thanks to @rafntor.\n* Core: Make Core.Initialize() optional.\n* WPF: Add defensive checks around video view detach process.\n* WPF: Fix .NET 4.x support.\n* WPF: Remove WinForms dependency.\n* Documentation improvements.\n\nLibVLCSharp version 3.6.5\n=========================\n* Fix Xamarin.Forms iOS MediaElement startup regression. https://code.videolan.org/videolan/LibVLCSharp/-/issues/529\n\nLibVLCSharp version 3.6.4\n=========================\n* hotfix for net6 target - third time's the charm.\n* Add .NET 6 support for WinForms and WPF integrations.\n\nLibVLCSharp version 3.6.3\n=========================\n* hotfix for net6 target - missing comoilation directive.\n* build: use C# 9\n\nLibVLCSharp version 3.6.2\n=========================\n* media: rewrite slashes for windows https://code.videolan.org/videolan/LibVLCSharp/-/issues/517\n* media: clarify error message if native media constructor fails\n* iOS: Add additional defensive lifetime check https://code.videolan.org/videolan/LibVLCSharp/-/issues/520\n* WPF: Fix WPF VideoView foreground window position bug by @Yelo420 / Philip https://code.videolan.org/videolan/LibVLCSharp/-/issues/523\n* core: Add .NET 6 support\n\nLibVLCSharp version 3.6.1\n=========================\n* tvOS [BREAKING CHANGE]: Due to upstream breaking packaging change, LibVLCSharp 3.6.1 and above only work with LibVLC.tvOS 3.3.17 and above.\nsee https://code.videolan.org/videolan/libvlc-nuget/-/commit/031ad01a30053208a657d61cbc340f703ac04f32 for more details\n* MediaElement XF: Add visibility property for track and lock buttons by @egbakou\n* MediaElement XF: Fixes TrackSelection taking too much space @egbakou\n* nuget: Use readmes for nuget.org pages\n* documentation improvements\n* Core: add mediaplayer helper SeekTo method\n\nLibVLCSharp version 3.6.0\n=========================\n* Core: Media.AddSlave now has an URI overload, like the Media ctor\n* XF: Add Lock screen feature to the MediaElement by @egbakou https://github.com/videolan/libvlcsharp/pull/223\n* XF [BREAKING CHANGE]: Add Video track selection feature and rework other track management for the MediaElement by @egbakou https://github.com/videolan/libvlcsharp/pull/225\n* WPF: Fix airspace issue to synchronize content over video by @DengQingFeng https://github.com/videolan/libvlcsharp/pull/226\n* WPF: Add TabControl support for the VideoView by @Yelo420 https://github.com/videolan/libvlcsharp/pull/227\n* CI and build improvements.\n\nLibVLCSharp version 3.5.1\n=========================\n* Core: fix Media leaks\n* Core: remove check potentially preventing proper disposal\n* Core: fix support for self contained single file apps https://code.videolan.org/videolan/LibVLCSharp/-/issues/470\n* Core: docs: add hint in exception message for missing libvlc on Android \n* WPF/WinForms: Use stable versions TFMs \n* Samples: Update all dependencies\n* Avalonia: Bump reference to include fix for https://code.videolan.org/videolan/LibVLCSharp/-/issues/458\n* Uno: Uno: Temporary workaround to fix CI build until we move to Uno 3 https://github.com/unoplatform/uno/issues/6137\n* docs and licensing: Mention libvlcsharp commercial licensing.\n\nLibVLCSharp version 3.5.0\n=========================\n* Xamarin.Forms: Fix namespace clashes with newer XF versions.\n* CI and build improvements\n* Various docs improvements\n* Core: Use unicode charset for LoadLibrary https://code.videolan.org/videolan/LibVLCSharp/-/issues/453\n\nLibVLCSharp.Avalonia version 3.4.9-alpha01\n=========================\n* Initial Avalonia support (Linux, macOS, Windows) by @shawnallen85\n\nLibVLCSharp version 3.4.9\n=========================\n* documentation improvements\n* improve samples with systematic libvlc resources disposal\n* WinForms: Add additional null checks\n* Core: Add easier way to enable verbose debug logs, hint with VS intellisense\n* Core: Fix incorrect libvlc interop for imem non-seekable streams by @jeremyVignelles https://github.com/videolan/libvlcsharp/pull/129\n* WPF: Improve the view to make it more reliable in some situations by @SkinnySackboy https://github.com/videolan/libvlcsharp/pull/172\n\nLibVLCSharp version 3.4.8\n=========================\n* documentation improvements\n* Fix memory leak https://code.videolan.org/videolan/LibVLCSharp/-/issues/367\n* Core: Avoid copy in StreamMediaInput by @jeremyVignelles\n* Core: Remove Mediaplayer.Stop() call in Mediaplayer.Dispose() by @mct62\n* Enable nightly build continuous deployment on feedz for 3.x branch\n\nLibVLCSharp version 3.4.7\n=========================\n* documentation updates\n* MediaElement: Fix display bug in landscape mode on iOS by @kakone https://code.videolan.org/videolan/LibVLCSharp/-/issues/270\n\nLibVLCSharp version 3.4.6\n=========================\n* documentation updates\n* android: set audio resampler automatically by @encrypt0r\n* core: \n- fix libvlc log interop for macOS netcore target\n- refactoring libvlc loading.\n* fix WPF xamarin.forms support https://code.videolan.org/videolan/LibVLCSharp/-/issues/364\n\nLibVLCSharp version 3.4.5\n=========================\n* Uno.Android: Fix android packaging import by @kakone. One additional Xamarin.Android tooling issue is still blocking Uno.Android support though.\n* MediaPlayer: Add full chapter descriptions by new contributor @igor-rif-shevchenko\n* Uno / UWP MediaElement: Various fixes by @kakone\n* Core: Add FormattedLog helper.\n* Media: Add libvlc option extra ctor param for convenience.\n\nLibVLCSharp version 3.4.4\n=========================\n* Core: Improve LibVLC loading error messages\n* Core: Remove dead Unity code\n* Core: Bring back C#8 support, nullables, .netstandard2.1 target. Work by @jeremyVignelles, users need an up to date Xamarin.Android build otherwise their linker will freeze. https://code.videolan.org/videolan/LibVLCSharp/-/issues/78\n* Core: Add new constructor to media that accepts a URI, by new contributor @mhmd_azeez https://code.videolan.org/videolan/LibVLCSharp/-/merge_requests/12\n* Uno.UWP: Customize LibVLCSharp.Uno.pri file generation by @kakone, fixes Uno UWP support https://code.videolan.org/videolan/LibVLCSharp/-/issues/294\n\nLibVLCSharp version 3.4.3\n=========================\n* Fix build for older C# compilers\n* Centralize and simplify static callbacks management, and introduce new Media constructor with MediaInput abstraction https://github.com/videolan/libvlcsharp/pull/87\n* Always load libcpp on Android https://github.com/videolan/libvlcsharp/pull/92\n* Align features description in the csproj with the readme.\n* Align msbuild sdk extras usage in Uno project with the rest of the solution.\n\nLibVLCSharp version 3.4.2\n=========================\n* Android: Fix libvlc loading failure on Android < 17 https://code.videolan.org/videolan/LibVLCSharp/issues/280\n* WPF: Fix memory leak in the VideoView by @srollinet https://github.com/videolan/libvlcsharp/pull/90\n\nLibVLCSharp version 3.4.1\n=========================\n* Android: Fix initialization error code check\n* VolumeChanged event bug workaround https://github.com/videolan/libvlcsharp/pull/83\n* Revert part of the C# 8 Nullable support PR to fix https://code.videolan.org/videolan/LibVLCSharp/issues/269\n* CI: Move to Cake and enable sample build\n* Fix callback interop https://github.com/videolan/libvlcsharp/pull/84\n\nLibVLCSharp version 3.4.0\n=========================\n* Logging interop: Fix libvlc logging for Apple platforms\n* Documentation: Markdown pages are now part of the git repo\n* Adds MediaPlayerElement for Uno Platform: https://github.com/videolan/libvlcsharp/pull/77 by @kakone\n* Build: Remove unnecessary defines\n* Enable C# 8 nullable support for all libvlcsharp projects: https://github.com/videolan/libvlcsharp/pull/75 by @jeremyVignelles\n* UWP: Fix crash when VideoView is created Collapsed and allow swapchain creation after the videoview is created (when visibility changes) https://code.videolan.org/videolan/LibVLCSharp/issues/261\n\nLibVLCSharp version 3.3.1\n=========================\n* Add support for the Uno Platform by @kakone https://github.com/videolan/libvlcsharp/pull/76 Fixes https://code.videolan.org/videolan/LibVLCSharp/issues/232\n\nLibVLCSharp version 3.3.0\n=========================\n* Docs: All public APIs are now documented and accessible through intellisense https://code.videolan.org/videolan/LibVLCSharp/issues/33\n* MediaElement: Fix bug on iOS showing renderer item duplicate because of mdns usage. https://code.videolan.org/videolan/LibVLCSharp/issues/237\n* RendererDiscoverer: Simplify API usage by inferring protocol depending on platform (not breaking public API).\n* UWP: Makes the UWP VideoView more MVVM friendly https://github.com/videolan/libvlcsharp/pull/73\n\nLibVLCSharp version 3.2.5\n=========================\n* MediaElement: Fix RendererDiscovery bug triggered when some controls are hidden. https://code.videolan.org/videolan/LibVLCSharp/issues/235\n* Core: Add more docs (on-going https://code.videolan.org/videolan/LibVLCSharp/issues/33)\n\nLibVLCSharp version 3.2.4\n=========================\n* Core: bit of documentation comments for public APIs, remove dead code\n* Media: Fix wrong event handler type\n* MediaConfiguration: Correctly handle FileCaching and NetworkCaching options in MediaConfiguration by contributor Andrei\n* Update MSBuild.Sdk.Extras\n* WPF/WinForms: Add .NET Core 3 support by contributor Ashkan Daie \n\nLibVLCSharp version 3.2.3\n=========================\n* tvOS: Add missing AOT support for native events https://code.videolan.org/videolan/LibVLCSharp/issues/222\n\nLibVLCSharp version 3.2.2\n=========================\n* Core: Fix size_t C# interop https://code.videolan.org/videolan/LibVLCSharp/issues/217\n* Core: libvlc logging https://code.videolan.org/videolan/LibVLCSharp/issues/216:\n    - Allow dynamic buffer size allocation for logs\n    - Fix libvlc log interop on Linux 64 bits\n* WPF: Move the focus to the parent window when ALT+F4 is pressed.\n* tvOS: Fix device link error regression https://code.videolan.org/videolan/LibVLCSharp/issues/218\n\nLibVLCSharp version 3.2.1\n=========================\n* MediaPlayerElement minor fix: Some buttons from PlaybackControls would not hide https://code.videolan.org/videolan/LibVLCSharp/issues/206\n\nLibVLCSharp version 3.2.0\n=========================\n* MediaPlayerElement release https://code.videolan.org/videolan/LibVLCSharp/issues/45\n\nLibVLCSharp version 3.1.1\n=========================\n* Core: MediaPlayer: Allow to unset remote renderer https://code.videolan.org/videolan/LibVLCSharp/issues/198\n* UWP: Fix NullReferenceException when a disposed VideoView is added to the tree https://code.videolan.org/videolan/LibVLCSharp/issues/193\n\nLibVLCSharp version 3.1.0\n=========================\n* Fix Windows XP support by disabling message box for plugins that fail to load https://code.videolan.org/videolan/LibVLCSharp/issues/174\n* [BREAKING API] strong typing Audio Channel API https://code.videolan.org/videolan/LibVLCSharp/issues/169\n\nLibVLCSharp version 3.0.3\n=========================\n* Fix AOT for dialogs callbacks on iOS device https://code.videolan.org/videolan/LibVLCSharp/issues/166\n* WPF: Propagate DataContext to enable databinding for VideoView's child elements\n* MediaConfiguration: Add crossplatform configuration API to enable hardware decoding and a couple other settings https://code.videolan.org/videolan/LibVLCSharp/issues/132\n* Add back libvlc logging support, on all platforms and runtimes.\n\nLibVLCSharp version 3.0.2\n=========================\n* Improve nuget docs\n* Fix iOS linker issue https://code.videolan.org/videolan/LibVLCSharp/issues/163\n\nLibVLCSharp version 3.0.1\n=========================\n* Add libvlc/libvlcsharp version check\n* Add Xamarin.Forms 4.0 support for LibVLCSharp.Forms\n\nLibVLCSharp version 3.0.0\n=========================\n* First stable release: https://mfkl.github.io/libvlc/crossplatform/xamarin/forms/release/2019/05/13/LibVLCSharp-goes-stable.html\n* VS2019 support\n\nLibVLCSharp version 0.8.1\n=========================\n* Fix ARM debug support for UWP.\n* LibVLC: Remove Log API in preparation for 3.0 release\n* Android: Update AWindow aar autogen bindings.\n\nLibVLCSharp version 0.8.0\n=========================\n* Fix root namespace for GTK/WPF X.F backends.\n* Add UWP support for mobile, desktop and Xbox.\n\nLibVLCSharp version 0.7.0\n=========================\n* WPF: Fix HiDPi support in relation to airspace workaround. https://github.com/videolan/libvlcsharp/pull/42\n* Improve MVVM scenario and fix mediaplayer change event. [API CHANGE] https://github.com/videolan/libvlcsharp/pull/36\n\nLibVLCSharp version 0.6.0\n=========================\n* Fix UTF8 interop everywhere and free libvlc strings where needed.\n* Completed libvlc API coverage. [API CHANGE] https://code.videolan.org/videolan/LibVLCSharp/issues/104\n* Add native API coverage unit test\n* Add public API docs\n* Rework main README and add sub-READMEs per platform.\n* Update linux install steps.\n* Fixed native crash when disposing RendererDiscoverer https://code.videolan.org/videolan/LibVLCSharp/issues/124\n\nLibVLCSharp version 0.5.0\n=========================\n* Docs: Fix comments for LibVLC ctor\n* Improve test setup, mostly for CI: \n- can be run from `dotnet run` \n- targets netcoreapp now and uses NUnitLite\n- remove network calls\n* Fix libvlc loading from .NET Core on macOS\n* [API CHANGE] move Media enums outside the Media class\n* [API CHANGE] Media.Parse is now async only.\n* [API CHANGE] Refactor MediaList. Libvlc locking is now handled internally for easier use. LINQ ready.\n* net40 build of libvlcsharp has a new dependency to enable async/await support: Microsoft.Bcl.Async. This means you need binding redirects in your consuming projects.\nexample of binding redirect file: https://code.videolan.org/videolan/LibVLCSharp/blob/master/Samples/LibVLCSharp.Windows.Net40.Sample/app.config\n* Fix network browsing. https://code.videolan.org/videolan/LibVLCSharp/issues/108\n\nLibVLCSharp version 0.4.2\n=========================\n* Android: remove unnecessary native call https://github.com/videolan/libvlcsharp/commit/338d11d1c3619efe7232a8526a12ba195006332b\n* tvOS: Fix device builds\n* Add new assets thanks to Jeremy\n* Core.Initialize refactoring https://code.videolan.org/videolan/LibVLCSharp/issues/98\n- fixes netcore support\n- add docs\n- allow loading libvlc from custom path\n- document Linux custom path loading process\n\nLibVLCSharp version 0.4.1\n=========================\n* Fix viewpoint interop for 360 videos https://code.videolan.org/videolan/LibVLCSharp/issues/101\n\nLibVLCSharp version 0.4.0\n=========================\n* Add tvOS support https://code.videolan.org/videolan/LibVLCSharp/commit/e17a2a3a3a824b3be8401905690b8d7b6aacc970\n* Fix wrong log file pointer return https://code.videolan.org/videolan/LibVLCSharp/commit/014d3802ae2ebc12ff865ccc59d1767442fdf697\n\nLibVLCSharp version 0.3.0\n=========================\n* Add GTK# support (with Xamarin.Forms support) on Linux and Windows. https://code.videolan.org/videolan/LibVLCSharp/commit/a927af513addeacb7c17541d06c6b7d16bfef9c0\n* Fix dialog reset interop bug https://code.videolan.org/videolan/LibVLCSharp/commit/c954cad1be8642bf96a74650e7ecd1c814b323ee\n\nLibVLCSharp version 0.2.0\n=========================\n* [Docs] Add public API comments\n* Use readonly structs https://github.com/videolan/libvlcsharp/pull/27\n* Refactor marshalling logic in generic code\n* Fix Unit tests\n* RendererDiscoverer: Remove service discovery name inference\n* Enable Xamarin Forms gestures on iOS (temporary workaround hopefully) https://github.com/videolan/libvlcsharp/commit/fa455586d1b93ee903fd1e34d49b59b323615754\n\nLibVLCSharp version 0.1.6\n=========================\n* Fix AWindow reference https://code.videolan.org/videolan/LibVLCSharp/issues/84\n\nLibVLCSharp version 0.1.5\n=========================\n* Handle null login/password dialog marshaling https://code.videolan.org/videolan/LibVLCSharp/issues/75\n* Build: Add a way to build all netstandard targets from CLI \n* remove allow unsafe blocks https://code.videolan.org/videolan/LibVLCSharp/merge_requests/6\n* remove nuspec and update csproj https://code.videolan.org/videolan/LibVLCSharp/merge_requests/7:\n-> docs: fixes VS Intellisense\n-> add better description on nuget.org\n\nLibVLCSharp version 0.1.4\n=========================\n* Dialog.Dismiss should be able to be called safely multiple times https://code.videolan.org/videolan/LibVLCSharp/issues/65\n* Remove finalizers introduced in 0.1.3, they become a problem when the GC is under pressure https://code.videolan.org/videolan/LibVLCSharp/issues/73\n* Rework media callbacks, keep delegate ref and enable iOS support (amongst other things) https://code.videolan.org/videolan/LibVLCSharp/issues/72\n\nLibVLCSharp version 0.1.3\n=========================\n* Dialog: Replace cancellation token for existing dialog id https://code.videolan.org/videolan/LibVLCSharp/issues/64\n* Add proper IDisposable implementation for all API types https://code.videolan.org/videolan/LibVLCSharp/issues/36\n* Core.Initialize() is now safe to call on iOS (does nothing) https://code.videolan.org/videolan/LibVLCSharp/commit/733b5e60000966906abfd5992ed2d676b9bc8253\n\nLibVLCSharp version 0.1.2\n=========================\n* Fix SetVideoTrack wrong interop https://code.videolan.org/videolan/LibVLCSharp/issues/62\n* Fix event interop triggering multiple handlers https://code.videolan.org/videolan/LibVLCSharp/issues/44\n\nLibVLCSharp version 0.1.1\n=========================\n* Add .NET Core macOS and net40 macOS support\n\nLibVLCSharp version 0.1.0\n=========================\nPublic API change: VideoView https://github.com/videolan/libvlcsharp/pull/18\n* VideoView supports crossplatform MediaPlayer databinding\n* Background playback support: VideoView can be disposed of and the music/video will keep playing.\n* Renderer API is simplified: The default service discovery protocol is now inferred https://github.com/videolan/libvlcsharp/commit/10d1c4160e3bda2b156d7385d2be42f410780a20\n\nLibVLCSharp version 0.0.4\n=========================\n* Remove API version checks https://github.com/videolan/libvlcsharp/commit/335866b0c2b355c0622e65fa690bad665c78c57e\n* Add versioning document https://github.com/videolan/libvlcsharp/commit/8566221ee0f0654b63b176c2892d98b455e32c20\n* Fix event interop struct layout https://github.com/videolan/libvlcsharp/commit/426bc0dcbe9d2bc7ae1a2a11833765093a8e20d1\n* Fix wrong event type https://github.com/videolan/libvlcsharp/commit/2e8b978cea02b83945de564332e81ca65ddf4c99\n\nLibVLCSharp version 0.0.3\n=========================\n* Support for net40 target\n* Support for netstandard1.1 target\n* Removed [SuppressUnmanagedCodeSecurity] which allowed to remove dependency on System.Runtime.InteropServices.RuntimeInformation\n* Custom libvlc library path support\n* Added build script folder with powershell script to build and package libvlcsharp\n\nLibVLCSharp version 0.0.2\n=========================\n\n* Fix media mrl UTF-8 marshaling #30\n\nLibVLCSharp version 0.0.1\n=========================\n\n* API changes: EventManagers are now encapsulated. Subscribe directly on the objects (Media, MediaPlayer, etc.)\n* Clarify error message when libvlc.dll is not found or cannot be loaded.\n* Fix iOS native reverse callbacks #15"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.4697265625,
          "content": "<h3 align=\"center\">\n    <img src=\"src/assets/banner.png\"/>\n</h3>\n\n# LibVLCSharp\n\n[![Build Status](https://videolan.visualstudio.com/LibVLCSharp/_apis/build/status/videolan.libvlcsharp?branchName=master)](https://videolan.visualstudio.com/LibVLCSharp/_build?definitionId=22)\n[![Join the chat at https://discord.gg/3h3K3JF](https://img.shields.io/discord/716939396464508958?label=discord)](https://discord.gg/3h3K3JF)\n[![LibVLCSharp API Docs](https://img.shields.io/badge/docs-libvlcsharp-1faece)](https://code.videolan.org/videolan/LibVLCSharp/-/blob/3.x/docs/home.md)\n\nLibVLCSharp is a cross-platform audio and video API for .NET platforms based on VideoLAN's LibVLC Library.\nIt provides a comprehensive multimedia API that can be used across mobile, server and desktop to render video and output audio as well as encode and stream.\n\n_The official repository URL for this repo is https://code.videolan.org/videolan/LibVLCSharp._\n\n- [Features](#features)\n  - [MediaPlayerElement](#mediaplayerelement)\n- [Supported platforms](#supported-platforms)\n- [Installation](#installation)\n  - [Preview builds](#Pre-release-versions)\n- [Getting started](#getting-started)\n- [Documentation](#documentation)\n- [Ebook](#ebook)\n- [Migrating from Vlc.DotNet](docs/migrating_from_Vlc.DotNet.md)\n- [Samples](#samples)\n- [Quick API overview](#quick-api-overview)\n- [Roadmap](#roadmap)\n- [Versioning](#versioning)\n- [Release Notes](#release-notes)\n- [Contribute](#contribute)\n  - [Pull request](#pull-request)\n  - [Gitlab issues](#gitlab-issues)\n- [Questions and Support](#questions-and-support)\n  - [Bug trackers](#bug-trackers)\n  - [Discord](#discord)\n  - [StackOverflow](#stackoverflow)\n  - [Commercial Support](#commercial-support)\n- [Code of Conduct](#code-of-conduct)\n- [Licenses](#licenses)\n\n## Features\n\nCheck out [libvlc-nuget](https://code.videolan.org/videolan/libvlc-nuget) to get a basic understanding of how `libvlc` works, what it can offer and how to install it with NuGet.\n\nSome of the [features](https://www.videolan.org/vlc/features.html) include:\n\n- Play every media file formats, every codec and every streaming protocols\n- Run on every platform, from desktop (Windows, Linux, Mac) to mobile (Android, iOS) and TVs\n- Hardware and efficient decoding on every platform, up to 8K\n- Network browsing for distant filesystems (SMB, FTP, SFTP, NFS...) and servers (UPnP, DLNA)\n- Playback of Audio CD, DVD and Bluray with menu navigation\n- Support for HDR, including tonemapping for SDR streams\n- Audio passthrough with SPDIF and HDMI, including for Audio HD codecs, like DD+, TrueHD or DTS-HD\n- Support for video and audio filters\n- Support for 360 video and 3D audio playback, including Ambisonics\n- Able to cast and stream to distant renderers, like Chromecast and UPnP renderers.\n\nMost things you can achieve with the regular VLC desktop app, you can also achieve using `libvlc`.\n\n### MediaPlayerElement\n\nFull featured video control for Xamarin.Forms available in LibVLCSharp.Forms (iOS/Android) and Uno platform (iOS/Android/UWP).\n\n<h3 align=\"center\">\n  <img src=\"src/assets/media-element.jpg\"/>\n</h3>\n\n## Supported platforms\n\nMono, .NET Framework and .NET Core runtimes are supported.\n\n- Xamarin.Android\n- Xamarin.iOS\n- Xamarin.tvOS\n- Xamarin.Mac (Cocoa)\n- Windows Classic (WPF, WinForms, GTK)\n- Windows Universal (UWP for Desktop, mobile and Xbox)\n- Linux including desktop, server and Raspberry Pi (GTK)\n- Xamarin.Forms\n- MAUI\n- Uno Platform 5 (WinUI, Android, iOS)\n- Avalonia (Windows, macOS, Linux)\n- .NET Standard 1.1 and 2.0\n- .NET Framework 4.0 and later\n- .NET Core (including ASP.NET Core)\n- [Unity3D](https://code.videolan.org/videolan/vlc-unity)\n  - Windows Classic\n  - Android\n  - UWP\n  - iOS\n  - macOS\n\n## Installation\n\n1. Install **LibVLC** in your platform specific project.\n\nLibVLC is the actual VLC engine written mostly in C/C++ and compiled for your target platform. More information [here](https://code.videolan.org/videolan/libvlc-nuget).\n\n| Platform          | LibVLC Package                      | NuGet                                  | Minimum OS Version |\n| ----------------- | ----------------------------------- | -------------------------------------- |--------------------|\n| Windows           | VideoLAN.LibVLC.Windows             | [![LibVLCWindowsBadge]][LibVLCWindows] | Windows XP         |\n| UWP               | VideoLAN.LibVLC.UWP                 | [![LibVLCWin10Badge]][LibVLCWin10]     | Windows 10         |\n| Mac               | VideoLAN.LibVLC.Mac                 | [![LibVLCMacBadge]][LibVLCMac]         | macOS 10.7         |\n| Android           | VideoLAN.LibVLC.Android             | [![LibVLCAndroidBadge]][LibVLCAndroid] | Android 2.3        |\n| iOS               | VideoLAN.LibVLC.iOS                 | [![LibVLCiOSBadge]][LibVLCiOS]         | iOS 8.4            |\n| tvOS              | VideoLAN.LibVLC.tvOS                | [![LibVLCtvOSBadge]][LibVLCtvOS]       | tvOS 10.2          |\n| Linux             | [Linux guide](docs/linux-setup.md)  | N/A                                    | N/A                |\n\n```cmd\ndotnet add package VideoLAN.LibVLC.[Windows|UWP|Android|iOS|Mac|tvOS]\n```\n\n2. Install **LibVLCSharp** _or_ **LibVLCSharp.Forms** (if you plan on using Xamarin.Forms)\n\nLibVLCSharp is the .NET wrapper that consumes `LibVLC` and allows you to interact with native code from C#/F#.\n\n| Platform          | LibVLCSharp Package                             | NuGet                                             |\n| ----------------- | ----------------------------------------------- | ------------------------------------------------- |\n| .NET Standard     | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| Xamarin.Android   | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| Xamarin.iOS       | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| Xamarin.tvOS      | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| Xamarin.Mac       | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| UWP               | [LibVLCSharp](src/LibVLCSharp/README.md)        | [![LibVLCSharpBadge]][LibVLCSharp]                |\n| Xamarin.Forms     | [LibVLCSharp.Forms][RLibVLCSharpForms]          | [![LibVLCSharpFormsBadge]][LibVLCSharpForms]      |\n| MAUI              | [LibVLCSharp.MAUI][RLibVLCSharpMAUI]            | [![LibVLCSharpMAUIBadge]][LibVLCSharpMAUI]        |\n| WPF               | [LibVLCSharp.WPF][RLibVLCSharpWPF]              | [![LibVLCSharpWPFBadge]][LibVLCSharpWPF]          |\n| Xamarin.Forms.WPF | [LibVLCSharp.Forms.WPF][RLibVLCSharpFormsWPF]   | [![LibVLCSharpFormsWPFBadge]][LibVLCSharpFormsWPF]|\n| GTK               | [LibVLCSharp.GTK][RLibVLCSharpGTK]              | [![LibVLCSharpGTKBadge]][LibVLCSharpGTK]          |\n| Xamarin.Forms.GTK | [LibVLCSharp.Forms.GTK][RLibVLCSharpFormsGTK]   | [![LibVLCSharpFormsGTKBadge]][LibVLCSharpFormsGTK]|\n| Windows Forms     | [LibVLCSharp.WinForms][RLibVLCSharpWinForms]    | [![LibVLCSharpWinFormsBadge]][LibVLCSharpWinForms]|\n| Uno Platform      | [LibVLCSharp.Uno][RLibVLCSharpUno]              | [![LibVLCSharpUnoBadge]][LibVLCSharpUno]          |\n| Avalonia          | [LibVLCSharp.Avalonia][RLibVLCSharpAvalonia]    | [![LibVLCSharpAvaloniaBadge]][LibVLCSharpAvalonia]|\n| Eto.Forms         | [LibVLCSharp.Eto][RLibVLCSharpEto]              | [![LibVLCSharpEtoBadge]][LibVLCSharpEto]          |\n| Unity3D - Windows | [VLC for Unity (Windows)][VLCUnityStore]        | [![VLCUnityBadge]][VLCUnityStore]                 |\n| Unity3D - UWP     | [VLC for Unity (UWP)][VLCUnityStore]            | [![VLCUnityBadge]][VLCUnityStore]                 |\n| Unity3D - Android | [VLC for Unity (Android)][VLCUnityStore]        | [![VLCUnityBadge]][VLCUnityStore]                 |\n| Unity3D - iOS     | [VLC for Unity (iOS)][VLCUnityStore]            | [![VLCUnityBadge]][VLCUnityStore]                 |\n| Unity3D - macOS   | [VLC for Unity (macOS)][VLCUnityStore]          | [![VLCUnityBadge]][VLCUnityStore]                 |\n\n### Pre-release versions\n\nLibVLCSharp 4 preview and LibVLC 4 nightly builds are distributed using https://feedz.io/ for now. To pull pre-release versions into your project, use the following `NuGet.config` file:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <add key=\"videolan-preview\" value=\"https://f.feedz.io/videolan/preview/nuget/index.json\" />\n  </packageSources>\n</configuration>\n```\n\nSee the docs for [preview builds installation details](docs/libvlc_preview.md).\n\n[RLibVLCSharpForms]: src/LibVLCSharp.Forms/README.md\n[RLibVLCSharpMAUI]: src/LibVLCSharp.MAUI/README.md\n[RLibVLCSharpWPF]: src/LibVLCSharp.WPF/README.md\n[RLibVLCSharpFormsWPF]: src/LibVLCSharp.Forms.Platforms.WPF/README.md\n[RLibVLCSharpGTK]: src/LibVLCSharp.GTK/README.md\n[RLibVLCSharpFormsGTK]: src/LibVLCSharp.Forms.Platforms.GTK/README.md\n[RLibVLCSharpWinForms]: src/LibVLCSharp.WinForms/README.md\n[RLibVLCSharpUno]: src/LibVLCSharp.Uno/README.md\n[RLibVLCSharpAvalonia]: src/LibVLCSharp.Avalonia/README.md\n[RLibVLCSharpEto]: src/LibVLCSharp.Eto/README.md\n\n[LibVLCWindowsBadge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.Windows.svg\n[LibVLCWindows]: https://www.nuget.org/packages/VideoLAN.LibVLC.Windows/\n\n[LibVLCWin10Badge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.UWP.svg\n[LibVLCWin10]: https://www.nuget.org/packages/VideoLAN.LibVLC.UWP/\n\n[LibVLCMac]: https://www.nuget.org/packages/VideoLAN.LibVLC.Mac/\n[LibVLCMacBadge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.Mac.svg\n\n[LibVLCAndroid]: https://www.nuget.org/packages/VideoLAN.LibVLC.Android/\n[LibVLCAndroidBadge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.Android.svg\n\n[LibVLCiOS]: https://www.nuget.org/packages/VideoLAN.LibVLC.iOS/\n[LibVLCiOSBadge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.iOS.svg\n\n[LibVLCtvOS]: https://www.nuget.org/packages/VideoLAN.LibVLC.tvOS/\n[LibVLCtvOSBadge]: https://img.shields.io/nuget/v/VideoLAN.LibVLC.tvOS.svg\n\n[LibVLCSharp]: https://www.nuget.org/packages/LibVLCSharp/\n[LibVLCSharpBadge]: https://img.shields.io/nuget/v/LibVLCSharp.svg\n\n[LibVLCSharpForms]: https://www.nuget.org/packages/LibVLCSharp.Forms/\n[LibVLCSharpFormsBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Forms.svg\n\n[LibVLCSharpMAUI]: https://www.nuget.org/packages/LibVLCSharp.MAUI/\n[LibVLCSharpMAUIBadge]: https://img.shields.io/nuget/v/LibVLCSharp.MAUI.svg\n\n[LibVLCSharpWPF]: https://www.nuget.org/packages/LibVLCSharp.WPF/\n[LibVLCSharpWPFBadge]: https://img.shields.io/nuget/v/LibVLCSharp.WPF.svg\n\n[LibVLCSharpFormsWPF]: https://www.nuget.org/packages/LibVLCSharp.Forms.WPF/\n[LibVLCSharpFormsWPFBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Forms.WPF.svg\n\n[LibVLCSharpGTK]: https://www.nuget.org/packages/LibVLCSharp.GTK/\n[LibVLCSharpGTKBadge]: https://img.shields.io/nuget/v/LibVLCSharp.GTK.svg\n\n[LibVLCSharpFormsGTK]: https://www.nuget.org/packages/LibVLCSharp.Forms.GTK/\n[LibVLCSharpFormsGTKBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Forms.GTK.svg\n\n[LibVLCSharpWinForms]: https://www.nuget.org/packages/LibVLCSharp.WinForms/\n[LibVLCSharpWinFormsBadge]: https://img.shields.io/nuget/v/LibVLCSharp.WinForms.svg\n\n[LibVLCSharpUno]: https://www.nuget.org/packages/LibVLCSharp.Uno/\n[LibVLCSharpUnoBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Uno.svg\n\n[LibVLCSharpAvalonia]: https://www.nuget.org/packages/LibVLCSharp.Avalonia/\n[LibVLCSharpAvaloniaBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Avalonia.svg\n\n[LibVLCSharpEto]: https://www.nuget.org/packages/LibVLCSharp.Eto/\n[LibVLCSharpEtoBadge]: https://img.shields.io/nuget/v/LibVLCSharp.Eto.svg\n\n[VLCUnityStore]: https://videolabs.io/store/unity\n[VLCUnityBadge]: https://img.shields.io/badge/Made%20with-Unity-57b9d3.svg?style=flat&logo=unity\n\n## Getting started\n\nFollow the [Getting started guide](docs/getting_started.md). Make sure you read it since it contains platform-specific caveats\n\n## Documentation\n\nOur [Documentation](docs/home.md) is part of this repository.\n\nFeel free to browse it and if you see something missing, you can improve it by sending a PR.\n\nIt includes helpful documents such as:\n\n### [Best practices](docs/best_practices.md)\n\nThis document details how to use LibVLCSharp in a correct way, notably taking into consideration the native interop part.\n\n### [Q&A guide](docs/how_do_I_do_X.md)\n\nThis is a Q&A document which I compiled from all the questions I got asked regarding LibVLC and LibVLCSharp. Continuously updated.\n\n### [Troubleshooting issues](docs/troubleshooting.md)\n\nWhen you encounter an issue with LibVLC/LibVLCSharp, identifying the cause is not always straightforward. This document gives you clues on how to go about it.\n\n### [Libvlc specific information](docs/libvlc_documentation.md)\n\nThis page focuses on the core native library and contains information regarding advanced libvlc configuration and its versioning strategy by VideoLAN.\n\n### [Tutorials](docs/tutorials.md)\n\nThis page indexes all available tutorial materials about LibVLCSharp. There are currently videos, talks, blogposts and code samples.\n\n### [Community projects](docs/made_with_libvlcsharp.md)\n\nHere we list several interesting projects made by the community using LibVLCSharp. Feel free to send a PR to yours!\n\n## Ebook\n\nIn September 2022, the first book ever about LibVLC, the VideoLAN community and LibVLCSharp was released!\n\n[The Good Parts of LibVLC](https://mfkl.gumroad.com/l/libvlc-good-parts) contains everything you need to know about VLC, LibVLC and how to use it from .NET with LibVLCSharp.\n\n## Samples\n\nFor more advanced samples, have a look at [libvlcsharp-samples](https://code.videolan.org/mfkl/libvlcsharp-samples) with apps such as:\n\n- [Chromecast sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/Chromecast): Discover chromecasts on your local network and select one for playback in 100% shared code (Xamarin.Forms, iOS/Android).\n- [Record HLS sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/RecordHLS): Simple .NET Core CLI app which shows how to record an HLS stream to the filesystem.\n- [RTSP Mosaic sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/VideoMosaic): Cross-platform RTSP player sample with 4 views mosaic (Xamarin.Forms, iOS/Android).\n- [PulseMusic UX sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/PulseMusic): A stylish music player UX example using Skia on iOS and Android.\n- [Gestures sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/Gestures/Gestures): Cross-platform touch gestures and 360 videos on iOS and Android.\n- [LocalNetwork sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/LocalNetwork): Cross-platform local network browsing and playback with network shares (SMB, UPnP) on Android, iOS and WPF.\n- [MediaPlayerElement sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/MediaElement): Minimal iOS/Android sample showing how to get started with the crossplatform MediaPlayerElement control from LibVLCSharp.Forms.\n- [SkiaSharp Preview Thumbnailer sample](https://code.videolan.org/mfkl/libvlcsharp-samples/tree/master/PreviewThumbnailExtractor.Skia): .NET Core sample app showing how to use LibVLC 3 video callbacks and encode the frame with SkiaSharp before saving it to disk.\n- [lvst](https://github.com/mfkl/lvst): Watch a movie while it is downloading! lvst is a .NET Core CLI app using MonoTorrent and LibVLCSharp for macOS, Linux and Windows.\n\nFeel free to suggest and contribute new samples.\n\n## Quick API overview\n\n```csharp\nusing var libvlc = new LibVLC(enableDebugLogs: true);\nusing var media = new Media(libvlc, new Uri(@\"C:\\tmp\\big_buck_bunny.mp4\"));\nusing var mediaplayer = new MediaPlayer(media);\n\nmediaplayer.Play();\n\nConsole.ReadKey();\n```\n\n- [`LibVLC.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/LibVLC.cs): Main object pointing to a native `libvlc` instance in native code.\n- [`MediaPlayer.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/MediaPlayer.cs): Manages playback, offers event listeners and more. Accessible from `VideoView` with data-binding support.\n- [`Media.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/Media.cs): Class representing and providing information about a media such as a video or audio file or stream.\n- `VideoView.cs`: Custom native view which holds a `MediaPlayer` object.\n- [`MediaDiscoverer.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/MediaDiscoverer.cs): This object should be used to find media on NAS and any SMB/UPnP-enabled device on your local network.\n- [`RendererDiscoverer.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/RendererDiscoverer.cs): Use this to find and use a Chromecast or other distant renderers.\n- [`Dialog.cs`](https://code.videolan.org/videolan/LibVLCSharp/-/blob/master/src/LibVLCSharp/Dialog.cs): Dialogs can be raised from the `libvlc` engine in some cases. Register callbacks with this object.\n\nThe [LibVLCSharp.Forms](src/LibVLCSharp.Forms/README.md) and [Uno](src/LibVLCSharp.Uno/README.md) packages features a `MediaPlayerElement` control, similar to the ones provided by the .NET Framework on WPF and UWP. It currently supports iOS, Android and UWP (Uno only).\n\n## Roadmap\n\n- Game engines ([Unity](https://code.videolan.org/videolan/vlc-unity), [Unreal](https://code.videolan.org/videolan/LibVLCSharp/-/issues/357), Godot)\n- [LibVLC 4 support](docs/libvlc_preview.md)\n\nIf you have a request or question regarding the roadmap, feel free to open an [issue](https://code.videolan.org/videolan/LibVLCSharp/issues) (using an issue template) or [PR](https://github.com/videolan/libvlcsharp/pulls).\n\n## Versioning\n\nAs this is a libvlc binding, we try to follow the libvlc versioning scheme as much as possible. The versioning strategy is explained in the [versioning](docs/versioning.md) document.\n\n## Release Notes\n\nCheck out the [NEWS](NEWS) file for details about each release.\n\n## Contribute\n\n### Pull request\n\nPull requests are more than welcome! If you do submit one, please make sure to read the [contributing guidelines](CONTRIBUTING.md) first, and use our pull request template.\n\n### Gitlab issues\n\nYou can look through issues we currently have on the [VideoLAN Gitlab](https://code.videolan.org/videolan/LibVLCSharp). Please pick one of our GitLab issue templates so we can assist you better.\n\nThere are [up for grabs tickets](https://code.videolan.org/videolan/LibVLCSharp/-/issues?label_name%5B%5D=up-for-grabs) as well if you would like to start contributing.\n\n## Questions and Support\n\n### Bug trackers\n\nYou have encountered an issue and wish to report it to the VLC dev team?\n\nYou can create one on our [Gitlab](https://code.videolan.org/videolan/LibVLCSharp/issues) (using an issue template) for .NET related questions/problems.\n\n_For LibVLC/VLC specific issues, usually native code, please go to the [bug tracker of the VLC project](https://code.videolan.org/videolan/vlc/-/issues)._\n\nBefore creating an issue or ticket, please double check for duplicates!\n\n### Discord\n\nWe are on [![Join the chat at https://discord.gg/3h3K3JF](https://img.shields.io/discord/716939396464508958?label=discord)](https://discord.gg/3h3K3JF)\n\n### StackOverflow\n\nWe regularly monitor the `libvlcsharp` tag on [![stackoverflow](https://img.shields.io/stackexchange/stackoverflow/t/libvlcsharp.svg?label=stackoverflow&style=flat)](https://stackoverflow.com/questions/tagged/libvlcsharp)\n\n### Forum\n\nIf you have any question or if you're not sure it's actually an issue, please visit our [forum](https://forum.videolan.org/).\n\n### Commercial services\n\nIf you would like VLC developers to provide you with:\n- custom development on LibVLC and/or LibVLCSharp, \n- training and workshops,\n- [commercial licenses](https://videolabs.io/products/libvlcsharp),\n- support services,\n- consulting services,\n- other multimedia services.\n\nFeel free to [contact us](https://videolabs.io/#contact).\n\n## Code of Conduct\n\nPlease read and follow the [VideoLAN CoC](https://wiki.videolan.org/Code_of_Conduct/) license.\n\n## Licenses\n\nLibVLCSharp is released under the [LGPLv2.1](https://tldrlegal.com/license/gnu-lesser-general-public-license-v2.1-(lgpl-2.1)) and is also available under a [commercial license](https://videolabs.io/products/libvlcsharp).\n\nNote: the .NET4.0 LibVLCSharp build references a nuget package that may indicate its license as the .NET Library license but it's actually [opensource](https://github.com/Microsoft/referencesource/commit/6952d2c3923d30a4d88bf57120688b9532bbe1d8) under MIT.\n\n<br/>\n<div align=\"center\">\n  <a href=\"https://code.videolan.org/videolan/LibVLCSharp\"><img src=\"src/assets/icon.png\"/></a>\n</div>\n"
        },
        {
          "name": "buildsystem",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}