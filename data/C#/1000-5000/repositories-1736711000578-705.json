{
  "metadata": {
    "timestamp": 1736711000578,
    "page": 705,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rosenbjerg/FFMpegCore",
      "stars": 1686,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 10.8779296875,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Don't use tabs for indentation.\n[*]\nindent_style = space\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n\n# Xml project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Xml config files\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\nindent_size = 2\n\n# JSON files\n[*.json]\nindent_size = 2\n\n[*.{sh}]\nend_of_line = lf\nindent_size = 2\n\n# Dotnet code style settings:\n[*.{cs,vb}]\n\n# Sort using and Import directives with System.* appearing first\ndotnet_sort_system_directives_first = true\ndotnet_separate_import_directive_groups = false\n\n# Avoid \"this.\" and \"Me.\" if not necessary\ndotnet_style_qualification_for_field = false:error\ndotnet_style_qualification_for_property = false:error\ndotnet_style_qualification_for_method = false:error\ndotnet_style_qualification_for_event = false:error\n\n# Use language keywords instead of framework type names for type references\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Suggest more modern language features when available\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\n\n# Whitespace options\ndotnet_style_allow_multiple_blank_lines_experimental = false\ndotnet_style_allow_statement_immediately_after_block_experimental = false\n\n# Non-private static fields are PascalCase\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style\n\ndotnet_naming_symbols.non_private_static_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_static_fields.required_modifiers = static\n\ndotnet_naming_style.non_private_static_field_style.capitalization = pascal_case\n\n# Non-private readonly fields are PascalCase\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style\n\ndotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly\n\ndotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case\n\n# Constants are PascalCase\ndotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constants_should_be_pascal_case.symbols = constants\ndotnet_naming_rule.constants_should_be_pascal_case.style = constant_style\n\ndotnet_naming_symbols.constants.applicable_kinds = field, local\ndotnet_naming_symbols.constants.required_modifiers = const\n\ndotnet_naming_style.constant_style.capitalization = pascal_case\n\n# Static fields are camelCase and start with s_\ndotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields\ndotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style\n\ndotnet_naming_symbols.static_fields.applicable_kinds = field\ndotnet_naming_symbols.static_fields.required_modifiers = static\n\ndotnet_naming_style.static_field_style.capitalization = camel_case\ndotnet_naming_style.static_field_style.required_prefix = _\n\n# Instance fields are camelCase and start with _\ndotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields\ndotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style\n\ndotnet_naming_symbols.instance_fields.applicable_kinds = field\n\ndotnet_naming_style.instance_field_style.capitalization = camel_case\ndotnet_naming_style.instance_field_style.required_prefix = _\n\n# Locals and parameters are camelCase\ndotnet_naming_rule.locals_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters\ndotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style\n\ndotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local\n\ndotnet_naming_style.camel_case_style.capitalization = camel_case\n\n# Local functions are PascalCase\ndotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions\ndotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style\n\ndotnet_naming_symbols.local_functions.applicable_kinds = local_function\n\ndotnet_naming_style.local_function_style.capitalization = pascal_case\n\n# By default, name items with PascalCase\ndotnet_naming_rule.members_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.members_should_be_pascal_case.symbols = all_members\ndotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style\n\ndotnet_naming_symbols.all_members.applicable_kinds = *\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# IDE0073: File header\ndotnet_diagnostic.IDE0073.severity = warning\n\n# IDE0035: Remove unreachable code\ndotnet_diagnostic.IDE0035.severity = warning\n\n# IDE0036: Order modifiers\ndotnet_diagnostic.IDE0036.severity = warning\n\n# IDE0043: Format string contains invalid placeholder\ndotnet_diagnostic.IDE0043.severity = warning\n\n# IDE0044: Make field readonly\ndotnet_diagnostic.IDE0044.severity = warning\n\n# IDE0011: Add braces\ncsharp_prefer_braces = when_multiline:warning\n# NOTE: We need the below severity entry for Add Braces due to https://github.com/dotnet/roslyn/issues/44201\ndotnet_diagnostic.IDE0011.severity = warning\n\n# IDE0040: Add accessibility modifiers\ndotnet_diagnostic.IDE0040.severity = warning\n\n# CONSIDER: Are IDE0051 and IDE0052 too noisy to be warnings for IDE editing scenarios? Should they be made build-only warnings?\n# IDE0051: Remove unused private member\ndotnet_diagnostic.IDE0051.severity = warning\n\n# IDE0052: Remove unread private member\ndotnet_diagnostic.IDE0052.severity = warning\n\n# IDE0059: Unnecessary assignment to a value\ndotnet_diagnostic.IDE0059.severity = warning\n\n# IDE0060: Remove unused parameter\ndotnet_diagnostic.IDE0060.severity = warning\n\n# CA1012: Abstract types should not have public constructors\ndotnet_diagnostic.CA1012.severity = warning\n\n# CA1822: Make member static\ndotnet_diagnostic.CA1822.severity = warning\n\n# IDE0005: Using directive is unnecessary\ndotnet_diagnostic.IDE0005.severity = warning\n\n# dotnet_style_allow_multiple_blank_lines_experimental\ndotnet_diagnostic.IDE2000.severity = warning\n\n# csharp_style_allow_embedded_statements_on_same_line_experimental\ndotnet_diagnostic.IDE2001.severity = warning\n\n# csharp_style_allow_blank_lines_between_consecutive_braces_experimental\ndotnet_diagnostic.IDE2002.severity = warning\n\n# dotnet_style_allow_statement_immediately_after_block_experimental\ndotnet_diagnostic.IDE2003.severity = warning\n\n# csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental\ndotnet_diagnostic.IDE2004.severity = warning\n\n# CSharp code style settings:\n[*.cs]\n# Newline settings\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n\n# Whitespace options\ncsharp_style_allow_embedded_statements_on_same_line_experimental = false\ncsharp_style_allow_blank_lines_between_consecutive_braces_experimental = false\ncsharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false\n\n# Prefer \"var\" everywhere\ndotnet_diagnostic.IDE0007.severity = error\ncsharp_style_var_for_built_in_types = true:error\ncsharp_style_var_when_type_is_apparent = true:error\ncsharp_style_var_elsewhere = true:error\n\n# Prefer method-like constructs to have a block body\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\n\n# Prefer property-like constructs to have an expression-body\ncsharp_style_expression_bodied_properties = true:error\ncsharp_style_expression_bodied_indexers = true:error\ncsharp_style_expression_bodied_accessors = true:error\n\n# Suggest more modern language features when available\ncsharp_style_pattern_matching_over_is_with_cast_check = true:error\ncsharp_style_pattern_matching_over_as_with_null_check = true:error\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_throw_expression = true:error\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Spacing\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# Blocks are allowed\ncsharp_prefer_braces = true:silent\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.7392578125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n# ASP.NET Core default setup: bower directory is configured as wwwroot/lib/ and bower restore is true\n**/wwwroot/lib/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n!FFMpegCore/FFMPEG/bin/**/*"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 1.083984375,
          "content": "<Project>\n    <PropertyGroup>\n        <TargetFramework>netstandard2.0</TargetFramework>\n        <NeutralLanguage>en</NeutralLanguage>\n        <AssemblyVersion>5.0.0.0</AssemblyVersion>\n        <LangVersion>default</LangVersion>\n        <Nullable>enable</Nullable>\n        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n        <ImplicitUsings>enable</ImplicitUsings>\n\n        <RepositoryType>GitHub</RepositoryType>\n        <RepositoryUrl>https://github.com/rosenbjerg/FFMpegCore</RepositoryUrl>\n        <PackageProjectUrl>https://github.com/rosenbjerg/FFMpegCore</PackageProjectUrl>\n        <PackageLicenseExpression>MIT</PackageLicenseExpression>\n        <NeutralLanguage>en</NeutralLanguage>\n\n        <PublishRepositoryUrl>true</PublishRepositoryUrl>\n        <IncludeSymbols>true</IncludeSymbols>\n        <SymbolPackageFormat>snupkg</SymbolPackageFormat>\n        <EmbedUntrackedSources>true</EmbedUntrackedSources> \n    </PropertyGroup>\n\n    <PropertyGroup Condition=\"'$(GITHUB_ACTIONS)' == 'true'\">\n        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>\n    </PropertyGroup> \n</Project>"
        },
        {
          "name": "FFMpegCore.Examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "FFMpegCore.Extensions.SkiaSharp",
          "type": "tree",
          "content": null
        },
        {
          "name": "FFMpegCore.Extensions.System.Drawing.Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "FFMpegCore.Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "FFMpegCore.sln",
          "type": "blob",
          "size": 3.1513671875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.31005.135\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FFMpegCore\", \"FFMpegCore\\FFMpegCore.csproj\", \"{19DE2EC2-9955-4712-8096-C22EF6713E4F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FFMpegCore.Test\", \"FFMpegCore.Test\\FFMpegCore.Test.csproj\", \"{F20C8353-72D9-454B-9F16-3624DBAD2328}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FFMpegCore.Examples\", \"FFMpegCore.Examples\\FFMpegCore.Examples.csproj\", \"{3125CF91-FFBD-4E4E-8930-247116AFE772}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FFMpegCore.Extensions.System.Drawing.Common\", \"FFMpegCore.Extensions.System.Drawing.Common\\FFMpegCore.Extensions.System.Drawing.Common.csproj\", \"{9C1A4930-9369-4A18-AD98-929A2A510D80}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FFMpegCore.Extensions.SkiaSharp\", \"FFMpegCore.Extensions.SkiaSharp\\FFMpegCore.Extensions.SkiaSharp.csproj\", \"{5A76F9B7-3681-4551-A9B6-8D3AC5DA1090}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{19DE2EC2-9955-4712-8096-C22EF6713E4F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19DE2EC2-9955-4712-8096-C22EF6713E4F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19DE2EC2-9955-4712-8096-C22EF6713E4F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19DE2EC2-9955-4712-8096-C22EF6713E4F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F20C8353-72D9-454B-9F16-3624DBAD2328}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F20C8353-72D9-454B-9F16-3624DBAD2328}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F20C8353-72D9-454B-9F16-3624DBAD2328}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F20C8353-72D9-454B-9F16-3624DBAD2328}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3125CF91-FFBD-4E4E-8930-247116AFE772}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3125CF91-FFBD-4E4E-8930-247116AFE772}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3125CF91-FFBD-4E4E-8930-247116AFE772}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3125CF91-FFBD-4E4E-8930-247116AFE772}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9C1A4930-9369-4A18-AD98-929A2A510D80}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9C1A4930-9369-4A18-AD98-929A2A510D80}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9C1A4930-9369-4A18-AD98-929A2A510D80}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9C1A4930-9369-4A18-AD98-929A2A510D80}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5A76F9B7-3681-4551-A9B6-8D3AC5DA1090}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5A76F9B7-3681-4551-A9B6-8D3AC5DA1090}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5A76F9B7-3681-4551-A9B6-8D3AC5DA1090}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5A76F9B7-3681-4551-A9B6-8D3AC5DA1090}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F1B53337-60E7-49CB-A171-D4AEF6B4D5F0}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "FFMpegCore",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2023 Vlad Jerca\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.513671875,
          "content": "# [FFMpegCore](https://www.nuget.org/packages/FFMpegCore/) \n[![NuGet Badge](https://buildstats.info/nuget/FFMpegCore)](https://www.nuget.org/packages/FFMpegCore/)\n[![GitHub issues](https://img.shields.io/github/issues/rosenbjerg/FFMpegCore)](https://github.com/rosenbjerg/FFMpegCore/issues)\n[![GitHub stars](https://img.shields.io/github/stars/rosenbjerg/FFMpegCore)](https://github.com/rosenbjerg/FFMpegCore/stargazers)\n[![GitHub](https://img.shields.io/github/license/rosenbjerg/FFMpegCore)](https://github.com/rosenbjerg/FFMpegCore/blob/master/LICENSE)\n[![CI](https://github.com/rosenbjerg/FFMpegCore/workflows/CI/badge.svg)](https://github.com/rosenbjerg/FFMpegCore/actions/workflows/ci.yml)\n[![GitHub code contributors](https://img.shields.io/github/contributors/rosenbjerg/FFMpegCore)](https://github.com/rosenbjerg/FFMpegCore/graphs/contributors)\n\nA .NET Standard FFMpeg/FFProbe wrapper for easily integrating media analysis and conversion into your .NET applications. Supports both synchronous and asynchronous calls\n\n# API\n\n## FFProbe\nUse FFProbe to analyze media files:\n\n```csharp\nvar mediaInfo = await FFProbe.AnalyseAsync(inputPath);\n```\nor \n```csharp\nvar mediaInfo = FFProbe.Analyse(inputPath);\n```\n\n## FFMpeg\nUse FFMpeg to convert your media files.\nEasily build your FFMpeg arguments using the fluent argument builder:\n\nConvert input file to h264/aac scaled to 720p w/ faststart, for web playback\n\n```csharp\nFFMpegArguments\n    .FromFileInput(inputPath)\n    .OutputToFile(outputPath, false, options => options\n        .WithVideoCodec(VideoCodec.LibX264)\n        .WithConstantRateFactor(21)\n        .WithAudioCodec(AudioCodec.Aac)\n        .WithVariableBitrate(4)\n        .WithVideoFilters(filterOptions => filterOptions\n            .Scale(VideoSize.Hd))\n        .WithFastStart())\n    .ProcessSynchronously();\n```\n\nConvert to and/or from streams\n```csharp\nawait FFMpegArguments\n    .FromPipeInput(new StreamPipeSource(inputStream))\n    .OutputToPipe(new StreamPipeSink(outputStream), options => options\n        .WithVideoCodec(\"vp9\")\n        .ForceFormat(\"webm\"))\n    .ProcessAsynchronously();\n```\n\n## Helper methods\nThe provided helper methods makes it simple to perform common operations.\n\n### Easily capture snapshots from a video file:\n```csharp\n// process the snapshot in-memory and use the Bitmap directly\nvar bitmap = FFMpeg.Snapshot(inputPath, new Size(200, 400), TimeSpan.FromMinutes(1));\n\n// or persists the image on the drive\nFFMpeg.Snapshot(inputPath, outputPath, new Size(200, 400), TimeSpan.FromMinutes(1));\n```\n\n### You can also capture GIF snapshots from a video file:\n```csharp\nFFMpeg.GifSnapshot(inputPath, outputPath, new Size(200, 400), TimeSpan.FromSeconds(10));\n\n// or async\nawait FFMpeg.GifSnapshotAsync(inputPath, outputPath, new Size(200, 400), TimeSpan.FromSeconds(10));\n\n// you can also supply -1 to either one of Width/Height Size properties if you'd like FFMPEG to resize while maintaining the aspect ratio\nawait FFMpeg.GifSnapshotAsync(inputPath, outputPath, new Size(480, -1), TimeSpan.FromSeconds(10));\n```\n\n### Join video parts into one single file:\n```csharp\nFFMpeg.Join(@\"..\\joined_video.mp4\",\n    @\"..\\part1.mp4\",\n    @\"..\\part2.mp4\",\n    @\"..\\part3.mp4\"\n);\n```\n\n### Create a sub video\n``` csharp\nFFMpeg.SubVideo(inputPath, \n    outputPath,\n    TimeSpan.FromSeconds(0),\n    TimeSpan.FromSeconds(30)\n);\n```\n\n### Join images into a video:\n```csharp\nFFMpeg.JoinImageSequence(@\"..\\joined_video.mp4\", frameRate: 1,\n    ImageInfo.FromPath(@\"..\\1.png\"),\n    ImageInfo.FromPath(@\"..\\2.png\"),\n    ImageInfo.FromPath(@\"..\\3.png\")\n);\n```\n\n### Mute the audio of a video file:\n```csharp\nFFMpeg.Mute(inputPath, outputPath);\n```\n\n### Extract the audio track from a video file:\n```csharp\nFFMpeg.ExtractAudio(inputPath, outputPath);\n```\n\n### Add or replace the audio track of a video file:\n```csharp\nFFMpeg.ReplaceAudio(inputPath, inputAudioPath, outputPath);\n```\n\n### Combine an image with audio file, for youtube or similar platforms\n```csharp\nFFMpeg.PosterWithAudio(inputPath, inputAudioPath, outputPath);\n// or\nvar image = Image.FromFile(inputImagePath);\nimage.AddAudio(inputAudioPath, outputPath);\n```\n\nOther available arguments could be found in `FFMpegCore.Arguments` namespace.\n\n## Input piping\nWith input piping it is possible to write video frames directly from program memory without saving them to jpeg or png and then passing path to input of ffmpeg. This feature also allows for converting video on-the-fly while frames are being generated or received.\n\nAn object implementing the `IPipeSource` interface is used as the source of data. Currently, the `IPipeSource` interface has two implementations; `StreamPipeSource` for streams, and `RawVideoPipeSource` for raw video frames.\n\n### Working with raw video frames\n\nMethod for generating bitmap frames:\n```csharp\nIEnumerable<IVideoFrame> CreateFrames(int count)\n{\n    for(int i = 0; i < count; i++)\n    {\n        yield return GetNextFrame(); //method that generates of receives the next frame\n    }\n}\n```\n\nThen create a `RawVideoPipeSource` that utilises your video frame source\n```csharp\nvar videoFramesSource = new RawVideoPipeSource(CreateFrames(64))\n{\n    FrameRate = 30 //set source frame rate\n};\nawait FFMpegArguments\n    .FromPipeInput(videoFramesSource)\n    .OutputToFile(outputPath, false, options => options\n        .WithVideoCodec(VideoCodec.LibVpx))\n    .ProcessAsynchronously();\n```\n\nIf you want to use `System.Drawing.Bitmap`s as `IVideoFrame`s, a `BitmapVideoFrameWrapper` wrapper class is provided.\n\n\n# Binaries\n\n## Installation\nIf you prefer to manually download them, visit [ffbinaries](https://ffbinaries.com/downloads) or [zeranoe Windows builds](https://ffmpeg.zeranoe.com/builds/).\n\n### Windows (using choco)\ncommand: `choco install ffmpeg -y`\n\nlocation: `C:\\ProgramData\\chocolatey\\lib\\ffmpeg\\tools\\ffmpeg\\bin`\n\n### Mac OSX\ncommand: `brew install ffmpeg mono-libgdiplus`\n\nlocation: `/usr/local/bin`\n\n### Ubuntu\ncommand: `sudo apt-get install -y ffmpeg libgdiplus`\n\nlocation: `/usr/bin`\n\n\n## Path Configuration\n\n### Option 1\n\nThe default value of an empty string (expecting ffmpeg to be found through PATH) can be overwritten via the `FFOptions` class:\n\n```csharp\n// setting global options\nGlobalFFOptions.Configure(new FFOptions { BinaryFolder = \"./bin\", TemporaryFilesFolder = \"/tmp\" });\n\n// or\nGlobalFFOptions.Configure(options => options.BinaryFolder = \"./bin\");\n\n// on some systems the absolute path may be required, in which case \nGlobalFFOptions.Configure(new FFOptions { BinaryFolder = Server.MapPath(\"./bin\"), TemporaryFilesFolder = Server.MapPath(\"/tmp\") });\n\n// or individual, per-run options\nawait FFMpegArguments\n    .FromFileInput(inputPath)\n    .OutputToFile(outputPath)\n    .ProcessAsynchronously(true, new FFOptions { BinaryFolder = \"./bin\", TemporaryFilesFolder = \"/tmp\" });\n\n// or combined, setting global defaults and adapting per-run options\nGlobalFFOptions.Configure(new FFOptions { BinaryFolder = \"./bin\", TemporaryFilesFolder = \"./globalTmp\", WorkingDirectory = \"./\" });\n\nawait FFMpegArguments\n    .FromFileInput(inputPath)\n    .OutputToFile(outputPath)\n    .Configure(options => options.WorkingDirectory = \"./CurrentRunWorkingDir\")\n    .Configure(options => options.TemporaryFilesFolder = \"./CurrentRunTmpFolder\")\n    .ProcessAsynchronously();\n```\n\n### Option 2\n\nThe root and temp directory for the ffmpeg binaries can be configured via the `ffmpeg.config.json` file, which will be read on first use only.\n\n```json\n{\n  \"BinaryFolder\": \"./bin\",\n  \"TemporaryFilesFolder\": \"/tmp\"\n}\n```\n\n### Supporting both 32 and 64 bit processes\nIf you wish to support multiple client processor architectures, you can do so by creating two folders, `x64` and `x86`, in the `BinaryFolder` directory.\nBoth folders should contain the binaries (`ffmpeg.exe` and `ffprobe.exe`) built for the respective architectures. \n\nBy doing so, the library will attempt to use either `/{BinaryFolder}/{ARCH}/(ffmpeg|ffprobe).exe`.\n\nIf these folders are not defined, it will try to find the binaries in `/{BinaryFolder}/(ffmpeg|ffprobe.exe)`.\n\n(`.exe` is only appended on Windows)\n\n\n# Compatibility\nOlder versions of ffmpeg might not support all ffmpeg arguments available through this library. The library has been tested with version `3.3` to `4.2`\n\n\n## Code contributors\n<a href=\"https://github.com/rosenbjerg/ffmpegcore/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=rosenbjerg/ffmpegcore\" />\n</a>\n\n## Other contributors\n<a href=\"https://github.com/tiesont\"><img src=\"https://avatars3.githubusercontent.com/u/420293?v=4\" title=\"tiesont\" width=\"80\" height=\"80\"></a>\n\n\n### License\n\nCopyright © 2023\n\nReleased under [MIT license](https://github.com/rosenbjerg/FFMpegCore/blob/master/LICENSE)\n"
        },
        {
          "name": "testenvironments.json",
          "type": "blob",
          "size": 0.1640625,
          "content": "{\n    \"version\": \"1\",\n    \"environments\": [\n        {\n            \"name\": \"Ubuntu\",\n            \"type\": \"wsl\",\n            \"wslDistribution\": \"Ubuntu\"\n        }\n    ]\n}"
        }
      ]
    }
  ]
}