{
  "metadata": {
    "timestamp": 1736711074703,
    "page": 855,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xamarin/mobile-samples",
      "stars": 1457,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.205078125,
          "content": "Components\r\npackages\r\nbin\r\nobj\r\n\r\n*.pidb\r\n*.userprefs\r\n*.swp\r\n*.DS_Store\r\n*.nib\r\n*.suo\r\n*.user\r\n*.pfx\r\n*.lock.json\r\n*.nuget.props\r\n*.nuget.targets\r\n.vs\r\n\r\n# ignore Xamarin.Android Resource.Designer.cs files\r\n**/*.Droid/**/[Rr]esource.[Dd]esigner.cs\r\n**/*.Android/**/[Rr]esource.[Dd]esigner.cs\r\n**/Android/**/[Rr]esource.[Dd]esigner.cs\r\n\r\n*/bin/*\r\n*/obj/*\r\n*/*/bin/*\r\n*/*/obj/*\r\n*/*/*/bin/*\r\n*/*/*/obj/*\r\n*_ReSharper.*/\r\n\r\nMWC/MWC.Core/Bin/*\r\nMWC/MWC.Droid/Bin/*\r\nMWC/MWC.WP7/Bin/*\r\nMWC/MWC.Core.WP7/Bin/Debug/**.db\r\n\r\nRazorTodo/*/Components\r\n\r\n/TaskyPro/.bundle/\r\n/TaskyPro/.idea/\r\n/TaskyPro/.irb-history\r\n/TaskyPro-Calabash/.irb-history\r\n/TaskyPro-Calabash/.idea/\r\n/TaskyPro-Calabash/.bundle/\r\n/TaskyPro-Calabash/test_servers/881cf2ba5a1f5085e65ee49f9c92e00c_0.4.21.apk\r\n/TaskyPro-Calabash/test_servers/\r\n/TaskyPro-Calabash/rake_env\r\n\r\n/HelloTestCloudWorld/rake_env\r\n/HelloTestCloudWorld/HelloWorld.Android/mono.samples.helloworld.apk\r\n/HelloTestCloudWorld/.irb-history\r\n/HelloTestCloudWorld/.idea/\r\n/HelloTestCloudWorld/test_servers/\r\n\r\nCreditCardValidation/CreditCardValidation-Calabash/.idea\r\nCreditCardValidation/CreditCardValidation-UITest/packages/Xamarin.UITest.*\r\nCreditCardValidation/.idea\r\nCreditCardValidation/UITest/packages/Xamarin.UITest.0.5.0\r\n\r\n.idea\r\n\r\nTaskyPro/test_servers\r\nTaskyPro-Calabash/screenshot*.png\r\n\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Common/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Common/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Droid/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.iOS/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Droid/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.iOS/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Tests/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Tests/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-Calabash/calabash.framework\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.iOS/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.Droid/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.Common/obj\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.Common/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.Droid/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-Start/CreditCardValidation.iOS/bin\r\nTestCloud/CreditCardValidation/CreditCardValidation-UITest/CreditCardValidation.Tests/xtc-apikey\r\n\r\nCoinTime/CoinTime/Assets/Content/animations/coinanimations.aeproperties\r\nCoinTime/CoinTime/Assets/Content/animations/dooranimations.aeproperties\r\nCoinTime/CoinTime/Assets/Content/animations/playeranimations.aeproperties\r\nCoinTime/CoinTime/Assets/Content/animations/propanimations.aeproperties\r\n\r\nCCDrawNode/Screenshots/Thumbs.db\r\nFruityFalls/FruityFalls/FruityFalls.Android/Assets/Content/Sounds/AndroidObj/\r\nFruityFalls/FruityFalls/FruityFalls.Android/Assets/Content/Sounds/iOSObj/\r\n.vscode/settings.json\n"
        },
        {
          "name": "AnalogClock",
          "type": "tree",
          "content": null
        },
        {
          "name": "AsyncAwait",
          "type": "tree",
          "content": null
        },
        {
          "name": "Azure",
          "type": "tree",
          "content": null
        },
        {
          "name": "BackgroundLocationDemo",
          "type": "tree",
          "content": null
        },
        {
          "name": "BluetoothLEExplorer",
          "type": "tree",
          "content": null
        },
        {
          "name": "BouncingGame",
          "type": "tree",
          "content": null
        },
        {
          "name": "CCAction",
          "type": "tree",
          "content": null
        },
        {
          "name": "CCAudioEngine",
          "type": "tree",
          "content": null
        },
        {
          "name": "CCDrawNode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CCRenderTexture",
          "type": "tree",
          "content": null
        },
        {
          "name": "Camera",
          "type": "tree",
          "content": null
        },
        {
          "name": "CameraMovement3DMG",
          "type": "tree",
          "content": null
        },
        {
          "name": "CoinTime",
          "type": "tree",
          "content": null
        },
        {
          "name": "ContentControls",
          "type": "tree",
          "content": null
        },
        {
          "name": "DataAccess",
          "type": "tree",
          "content": null
        },
        {
          "name": "EmbeddedResources",
          "type": "tree",
          "content": null
        },
        {
          "name": "FruityFalls",
          "type": "tree",
          "content": null
        },
        {
          "name": "GLKeysES30",
          "type": "tree",
          "content": null
        },
        {
          "name": "GoneBananas",
          "type": "tree",
          "content": null
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.7744140625,
          "content": "### Sample\n\n<!-- Provide a link to the sample thereâ€™s an issue with e.g. https://github.com/xamarin/mobile-samples/tree/master/TaskyPro/ -->\n\n### Description\n\n<!-- Describe what the issue is -->\n\n### Steps to Reproduce\n\n1.\n2.\n3.\n\n### Expected Behavior\n\n\n### Actual Behavior\n\n\n### Information\n\n- IDE and IDE version: <!-- Visual Studio 2017 v15.6 / Visual Studio Mac v7.4 -->\n- Platform with the issue: <!-- All that apply -->\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 8.0 -->\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 -->\n- Device or simulator/emulator: <!-- State whether the problem occurs on a device or a simulator/emulator -->"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.548828125,
          "content": " Copyright 2011 Xamarin Inc\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
        },
        {
          "name": "LivePlayer",
          "type": "tree",
          "content": null
        },
        {
          "name": "MWC",
          "type": "tree",
          "content": null
        },
        {
          "name": "ModelRenderingMG",
          "type": "tree",
          "content": null
        },
        {
          "name": "ModelsAndVertsMG",
          "type": "tree",
          "content": null
        },
        {
          "name": "MonoGameTvOs",
          "type": "tree",
          "content": null
        },
        {
          "name": "MultiThreading",
          "type": "tree",
          "content": null
        },
        {
          "name": "Notifications",
          "type": "tree",
          "content": null
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.9482421875,
          "content": "### Description of Change\n\n<!-- Describe your changes here -->\n\n<!-- Notes:\nDo not update the Xamarin.Forms NuGet packages, or Android support libraries.\nDo not use pre-release versions of NuGet packages.\nIf you update a NuGet package in a project, please ensure that you update the same package in the other projects in the sample (if present).\nIf you change code in the library project in a sample, please ensure that you thoroughly test the changes on all platforms.\nIf you change code in a platform project in a sample, please ensure that you thoroughly test the change on the platform.\n-->\n\n### Pull Request Checklist\n\n<!-- Please complete -->\n\n- [ ] Rebased on top of master at time of the pull request.\n- [ ] Changes adhere to coding standard in the sample.\n- [ ] Consolidated NuGet packages across all projects in the sample (when changing existing package versions).\n- [ ] Tested changes on the appropriate platforms (all platforms if changing the library code)."
        },
        {
          "name": "Phoneword",
          "type": "tree",
          "content": null
        },
        {
          "name": "Profiling",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.017578125,
          "content": "# Xamarin cross-platform mobile samples\n==============\n\nThis repository contains a number of samples that show how to share code between Xamarin.iOS and Xamarin.Android.\n\n## License\n\nSee the [license file](LICENSE) and any additional license information attached to each sample.\n\n## Samples submission guidelines\n\nThis repository welcomes contributions and suggestions. If you want to create a new sample, you need to work with an employee to help bring the new sample into the repository. Start by raising a [GitHub issue](https://github.com/xamarin/mobile-samples/issues/new) in this repository that outlines your proposed sample. Please note that samples in the MASTER branch of this repository shouldn't rely on preview or pre-release NuGet packages.\n\nThe Xamarin [sample gallery](https://docs.microsoft.com/samples/browse/?products=xamarin) is powered by this repository, and therefore each sample needs to comply with the following requirements:\n\n- **Screenshots** - a folder called Screenshots that has at least one screen shot of the sample on each platform (preferably a screen shot for every page or every major piece of functionality). For an example of this, see [ios11/MapKitSample](https://github.com/xamarin/ios-samples/tree/master/ios11/MapKitSample/Screenshots).\n\n- **Readme** - a `README.md` file that explains the sample, and contains metadata to help customers find it. For an example of this, see [ios11/MapKitSample](https://github.com/xamarin/ios-samples/tree/master/ios11/MapKitSample/README.md). The README file should begin with a YAML header (delimited by `---`) with the following keys/values:\n\n  - **name** - must begin with `Xamarin -`\n\n    - **description** - brief description of the sample (&lt; 150 chars) that appears in the sample code browser search\n\n    - **page_type** - must be the string `sample`.\n\n    - **languages** - coding language/s used in the sample, such as: `csharp`, `fsharp`, `vb`, `objc`\n\n    - **products**: should be `xamarin` for every sample in this repo\n\n    - **urlFragment**: although this can be auto-generated, please supply an all-lowercase value that represents the sample's path in this repo, except directory separators are replaced with dashes (`-`) and no other punctuation.\n\n    Here is an example:\n\n    ```yaml\n    ---\n    name: Xamarin - Cross-Platform Sample\n    description: Brief 150 character or less description of the sample\n    page_type: sample\n    languages:\n    - csharp\n    products:\n    - xamarin\n    urlFragment: crossplatformsample\n    ---\n    # Heading 1\n\n    rest of README goes here, including screenshot images and requirements/instructions to get it running\n    ```\n\n    > NOTE: This must be valid YAML, so some characters in the name or description will require the entire string to be surrounded by \" or ' quotes.\n\n- **Buildable solution and .csproj file** - the project _must_ build and have the appropriate project scaffolding (solution + .csproj files).\n\nThis approach ensures that all samples integrate with the Microsoft [sample code browser](https://docs.microsoft.com/samples/browse/?products=xamarin).\n\nIf you have any questions, don't hesitate to ask on the [Xamarin Forums](https://forums.xamarin.com/).\n\n## GitHub Integration\n\nWe integrate tightly with Git to make sure we always provide working samples to our customers. This is achieved through a pre-commit hook that runs before your commit goes through, as well as a post-receive hook on GitHub's end that notifies our samples gallery server when changes go through.\n\nTo you, as a sample committer, this means that before you push to the repos, you should run the \"install-hook.bat\" or \"install-hook.sh\" (depending on whether you're on Windows or macOS/Linux, respectively). These will install the Git pre-commit hook. Now, whenever you try to make a Git commit, all samples in the repo will be validated. If any sample fails to validate, the commit is aborted; otherwise, your commit goes through and you can go ahead and push.\n\nThis strict approach is put in place to ensure that the samples we present to our customers are always in a good state, and to ensure that all samples integrate correctly with the sample gallery (README.md, Metadata.xml, etc). Note that the master branch of each sample repo is what we present to our customers for our stable releases, so they must *always* Just Work.\n\nShould you wish to invoke validation of samples manually, simply run \"validate.windows\" or \"validate.posix\" (again, Windows vs macOS/Linux, respectively). These must be run from a Bash shell (i.e. a terminal on macOS/Linux or the Git Bash terminal on Windows).\n\nIf you have any questions, don't hesitate to ask!\n\n## Other samples\n\n### Galleries\n\nWe love samples! Application samples show off our platform and provide a great way for people to learn our stuff. And we even promote them as a first-class feature of the docs site. You can find our two sample galleries here:\n\n- [Xamarin.Forms Samples](https://docs.microsoft.com/samples/browse/?term=Xamarin.Forms)\n\n- [iOS Samples](https://docs.microsoft.com/samples/browse/?term=Xamarin.iOS)\n\n- [Mac Samples](https://docs.microsoft.com/samples/browse/?term=Xamarin.Mac)\n\n- [Android Samples](https://docs.microsoft.com/samples/browse/?term=Xamarin.Android)\n\n### Sample GitHub Repositories\n\nThese sample galleries are populated by samples in our six sample GitHub repos:\n\n- [https://github.com/xamarin/xamarin-forms-samples](https://github.com/xamarin/xamarin-forms-samples)\n\n- [https://github.com/xamarin/mobile-samples](https://github.com/xamarin/mobile-samples)\n\n- [https://github.com/xamarin/monotouch-samples](https://github.com/xamarin/ios-samples)\n\n- [https://github.com/xamarin/mac-samples](https://github.com/xamarin/mac-samples)\n\n- [https://github.com/xamarin/monodroid-samples](https://github.com/xamarin/monodroid-samples)\n\n- [https://github.com/xamarin/mac-ios-samples](https://github.com/xamarin/mac-ios-samples)\n\nThe [mobile-samples](https://github.com/xamarin/mobile-samples) repository is for samples that are cross-platform.\nThe [mac-ios-samples](https://github.com/xamarin/mac-ios-samples) repository is for samples that are Mac/iOS only.\n"
        },
        {
          "name": "RazorTodo",
          "type": "tree",
          "content": null
        },
        {
          "name": "SharingCode",
          "type": "tree",
          "content": null
        },
        {
          "name": "SoMA",
          "type": "tree",
          "content": null
        },
        {
          "name": "SpriteSheetDemo",
          "type": "tree",
          "content": null
        },
        {
          "name": "StandardControls",
          "type": "tree",
          "content": null
        },
        {
          "name": "TablesLists",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tasky",
          "type": "tree",
          "content": null
        },
        {
          "name": "TaskyPortable",
          "type": "tree",
          "content": null
        },
        {
          "name": "TaskyPro",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestCloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "TexturedCubeES30",
          "type": "tree",
          "content": null
        },
        {
          "name": "TipCalc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Touch",
          "type": "tree",
          "content": null
        },
        {
          "name": "VisualBasic",
          "type": "tree",
          "content": null
        },
        {
          "name": "WalkingGameMG",
          "type": "tree",
          "content": null
        },
        {
          "name": "Weather",
          "type": "tree",
          "content": null
        },
        {
          "name": "WebServices",
          "type": "tree",
          "content": null
        },
        {
          "name": "Xamarin.Edu.SampleGallery.Core.dll",
          "type": "blob",
          "size": 22.5,
          "content": null
        },
        {
          "name": "install-hook.bat",
          "type": "blob",
          "size": 0.044921875,
          "content": "copy pre-commit.windows .git\\hooks\\pre-commit\n"
        },
        {
          "name": "install-hook.sh",
          "type": "blob",
          "size": 0.0517578125,
          "content": "#!/bin/sh\n\ncp pre-commit.posix .git/hooks/pre-commit\n"
        },
        {
          "name": "mdtool-build",
          "type": "blob",
          "size": 0.025390625,
          "content": "#!/bin/sh\nmdtool build $@\n"
        },
        {
          "name": "pre-commit.posix",
          "type": "blob",
          "size": 0.8984375,
          "content": "#!/bin/sh\n\nrun_validator()\n{\n    mono --debug xcsv.exe $1 $2 $3;\n\n    if [ $? != 0 ]; then\n        exit 1;\n    fi;\n}\n\nfor dir in `find . -maxdepth 1 -type d | grep -v \"\\.$\" | grep -v \"\\./\\.\" | sed \"s/^\\.\\///\"`; do\n    build_done=\"false\"\n\n    for file in `git diff --cached --name-only | grep \"^$dir\\/\"`; do\n        if ! [ -d $dir ]; then\n            break;\n        fi;\n\n        if [ -f $dir/Makefile ]; then\n            break;\n        fi;\n\n        if [ $file == $dir/README.md ]; then\n            run_validator markdown $dir;\n        elif [ $file == $dir/Metadata.xml ]; then\n            run_validator metadata $dir;\n        elif [ `echo $file | grep \"^$dir\\/Screenshots\\/\"` ]; then\n            run_validator screenshot $dir;\n        else\n            if [ $build_done == \"false\" ]; then\n                run_validator build $dir mdtool-build;\n                build_done=\"true\"\n            fi;\n        fi;\n    done;\ndone;\n"
        },
        {
          "name": "pre-commit.windows",
          "type": "blob",
          "size": 0.875,
          "content": "#!/bin/sh\n\nrun_validator()\n{\n    ./xcsv.exe $1 $2 $3;\n\n    if [ $? != 0 ]; then\n        exit 1;\n    fi;\n}\n\nfor dir in `find . -maxdepth 1 -type d | grep -v \"\\.$\" | grep -v \"\\./\\.\" | sed \"s/^\\.\\///\"`; do\n    build_done=\"false\"\n\n    for file in `git diff --cached --name-only | grep \"^$dir\\/\"`; do\n        if ! [ -d $dir ]; then\n            break;\n        fi;\n\n        if [ -f $dir/Makefile ]; then\n            break;\n        fi;\n\n        if [ $file == $dir/README.md ]; then\n            run_validator markdown $dir;\n        elif [ $file == $dir/Metadata.xml ]; then\n            run_validator metadata $dir;\n        elif [ `echo $file | grep \"^$dir\\/Screenshots\\/\"` ]; then\n            run_validator screenshot $dir;\n        else\n            if [ $build_done == \"false\" ]; then\n                run_validator build $dir;\n                build_done=\"true\"\n            fi;\n        fi;\n    done;\ndone;\n"
        },
        {
          "name": "validate.posix",
          "type": "blob",
          "size": 0.265625,
          "content": "#!/bin/sh\n\nfor dir in `find . -maxdepth 1 -type d | grep -v \"\\.$\" | grep -v \"\\./\\.\" | sed \"s/^\\.\\///\"`; do\n    if ! [ -f $dir/Makefile ]; then\n        mono --debug xcsv.exe all $dir mdtool-build;\n\n        if [ $? != 0 ]; then\n            exit 1;\n        fi;\n    fi;\ndone;\n"
        },
        {
          "name": "validate.windows",
          "type": "blob",
          "size": 0.2421875,
          "content": "#!/bin/sh\n\nfor dir in `find . -maxdepth 1 -type d | grep -v \"\\.$\" | grep -v \"\\./\\.\" | sed \"s/^\\.\\///\"`; do\n    if ! [ -f $dir/Makefile ]; then\n        ./xcsv.exe all $dir;\n\n        if [ $? != 0 ]; then\n            exit 1;\n        fi;\n    fi;\ndone;\n"
        },
        {
          "name": "xcsv.exe",
          "type": "blob",
          "size": 5.5,
          "content": null
        }
      ]
    }
  ]
}