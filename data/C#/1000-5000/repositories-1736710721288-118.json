{
  "metadata": {
    "timestamp": 1736710721288,
    "page": 118,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "XuanchenLin/NanUI",
      "stars": 3735,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 13.1962890625,
          "content": "# WinFormium\n\n# 如果要从更高级别的目录继承 .editorconfig 设置，请删除以下行\nroot = true\n\n# c# 文件\n[*.cs]\n\n#### Core EditorConfig 选项 ####\n\n# 缩进和间距\nindent_size = 4\nindent_style = space\ntab_width = 4\n\n# 新行首选项\nend_of_line = crlf\ninsert_final_newline = false\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n#### .NET 编码约定 ####\n\n# 组织 Using\ndotnet_separate_import_directive_groups = true\ndotnet_sort_system_directives_first = true\nfile_header_template = THIS FILE IS PART OF WinFormium PROJECT\\nTHE WinFormium PROJECT IS AN OPENSOURCE LIBRARY LICENSED UNDER THE MIT License.\\nCOPYRIGHTS (C) Xuanchen Lin. ALL RIGHTS RESERVED.\\nGITHUB: https://github.com/XuanchenLin/NanUI\n\n# this. 和 Me. 首选项\ndotnet_style_qualification_for_event = false\ndotnet_style_qualification_for_field = false\ndotnet_style_qualification_for_method = false\ndotnet_style_qualification_for_property = false\n\n# 语言关键字与 bcl 类型首选项\ndotnet_style_predefined_type_for_locals_parameters_members = true\ndotnet_style_predefined_type_for_member_access = true\n\n# 括号首选项\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity\n\n# 修饰符首选项\ndotnet_style_require_accessibility_modifiers = for_non_interface_members\n\n# 表达式级首选项\ndotnet_style_coalesce_expression = true\ndotnet_style_collection_initializer = true\ndotnet_style_explicit_tuple_names = true\ndotnet_style_namespace_match_folder = true\ndotnet_style_null_propagation = true\ndotnet_style_object_initializer = true\ndotnet_style_operator_placement_when_wrapping = beginning_of_line\ndotnet_style_prefer_auto_properties = true:warning\ndotnet_style_prefer_compound_assignment = true\ndotnet_style_prefer_conditional_expression_over_assignment = true\ndotnet_style_prefer_conditional_expression_over_return = true\ndotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed\ndotnet_style_prefer_inferred_anonymous_type_member_names = true\ndotnet_style_prefer_inferred_tuple_names = true\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true\ndotnet_style_prefer_simplified_boolean_expressions = true\ndotnet_style_prefer_simplified_interpolation = true\n\n# 字段首选项\ndotnet_style_readonly_field = true\n\n# 参数首选项\ndotnet_code_quality_unused_parameters = all\n\n# 禁止显示首选项\ndotnet_remove_unnecessary_suppression_exclusions = none\n\n# 新行首选项\ndotnet_style_allow_multiple_blank_lines_experimental = true\ndotnet_style_allow_statement_immediately_after_block_experimental = true\n\n#### c# 编码约定 ####\n\n# var 首选项\ncsharp_style_var_elsewhere = false:silent\ncsharp_style_var_for_built_in_types = true:silent\ncsharp_style_var_when_type_is_apparent = true:silent\n\n# Expression-bodied 成员\ncsharp_style_expression_bodied_accessors = true:silent\ncsharp_style_expression_bodied_constructors = false:silent\ncsharp_style_expression_bodied_indexers = true:silent\ncsharp_style_expression_bodied_lambdas = true:silent\ncsharp_style_expression_bodied_local_functions = false:silent\ncsharp_style_expression_bodied_methods = false:silent\ncsharp_style_expression_bodied_operators = false:silent\ncsharp_style_expression_bodied_properties = true:silent\n\n# 模式匹配首选项\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_prefer_extended_property_pattern = true:suggestion\ncsharp_style_prefer_not_pattern = true:suggestion\ncsharp_style_prefer_pattern_matching = true:silent\ncsharp_style_prefer_switch_expression = true:suggestion\n\n# Null 检查首选项\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# 修饰符首选项\ncsharp_prefer_static_local_function = true:suggestion\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async\ncsharp_style_prefer_readonly_struct = true:suggestion\ncsharp_style_prefer_readonly_struct_member = true:suggestion\n\n# 代码块首选项\ncsharp_prefer_braces = true:silent\ncsharp_prefer_simple_using_statement = true:warning\ncsharp_style_namespace_declarations = file_scoped:warning\ncsharp_style_prefer_method_group_conversion = true:silent\ncsharp_style_prefer_primary_constructors = true:suggestion\ncsharp_style_prefer_top_level_statements = true:silent\n\n# 表达式级首选项\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_prefer_index_operator = true:suggestion\ncsharp_style_prefer_local_over_anonymous_function = true:suggestion\ncsharp_style_prefer_null_check_over_type_check = true:suggestion\ncsharp_style_prefer_range_operator = true:suggestion\ncsharp_style_prefer_tuple_swap = true:suggestion\ncsharp_style_prefer_utf8_string_literals = true:suggestion\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_unused_value_assignment_preference = discard_variable:suggestion\ncsharp_style_unused_value_expression_statement_preference = discard_variable:silent\n\n# \"using\" 指令首选项\ncsharp_using_directive_placement = outside_namespace:silent\n\n# 新行首选项\ncsharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent\ncsharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent\ncsharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent\ncsharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent\ncsharp_style_allow_embedded_statements_on_same_line_experimental = true:silent\n\n#### C# 格式规则 ####\n\n# 新行首选项\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_else = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_between_query_expression_clauses = true\n\n# 缩进首选项\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = true\ncsharp_indent_labels = one_less_than_current\ncsharp_indent_switch_labels = true\n\n# 空格键首选项\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# 包装首选项\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\n\n#### 命名样式 ####\n\n# 命名规则\n\ndotnet_naming_rule.interface_should_be_begins_with_i.severity = silent\ndotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface\ndotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i\n\ndotnet_naming_rule.types_should_be_pascal_case.severity = silent\ndotnet_naming_rule.types_should_be_pascal_case.symbols = types\ndotnet_naming_rule.types_should_be_pascal_case.style = pascal_case\n\ndotnet_naming_rule.non_field_members_should_be_pascal_case.severity = silent\ndotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members\ndotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case\n\ndotnet_naming_rule.private_or_internal_field_should_be_begins_with__.severity = silent\ndotnet_naming_rule.private_or_internal_field_should_be_begins_with__.symbols = private_or_internal_field\ndotnet_naming_rule.private_or_internal_field_should_be_begins_with__.style = begins_with__\n\ndotnet_naming_rule.private_or_internal_static_field_should_be_c___like_const.severity = silent\ndotnet_naming_rule.private_or_internal_static_field_should_be_c___like_const.symbols = private_or_internal_static_field\ndotnet_naming_rule.private_or_internal_static_field_should_be_c___like_const.style = c___like_const\n\n# 符号规范\n\ndotnet_naming_symbols.interface.applicable_kinds = interface\ndotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.interface.required_modifiers =\n\ndotnet_naming_symbols.private_or_internal_field.applicable_kinds = field\ndotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected\ndotnet_naming_symbols.private_or_internal_field.required_modifiers =\n\ndotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field\ndotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected\ndotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static\n\ndotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum\ndotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.types.required_modifiers =\n\ndotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method\ndotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\ndotnet_naming_symbols.non_field_members.required_modifiers =\n\n# 命名样式\n\ndotnet_naming_style.pascal_case.required_prefix =\ndotnet_naming_style.pascal_case.required_suffix =\ndotnet_naming_style.pascal_case.word_separator =\ndotnet_naming_style.pascal_case.capitalization = pascal_case\n\ndotnet_naming_style.begins_with_i.required_prefix = I\ndotnet_naming_style.begins_with_i.required_suffix =\ndotnet_naming_style.begins_with_i.word_separator =\ndotnet_naming_style.begins_with_i.capitalization = pascal_case\n\ndotnet_naming_style.begins_with__.required_prefix = _\ndotnet_naming_style.begins_with__.required_suffix =\ndotnet_naming_style.begins_with__.word_separator =\ndotnet_naming_style.begins_with__.capitalization = camel_case\n\ndotnet_naming_style.c___like_const.required_prefix =\ndotnet_naming_style.c___like_const.required_suffix =\ndotnet_naming_style.c___like_const.word_separator = _\ndotnet_naming_style.c___like_const.capitalization = all_upper\n\n[*.{cs,vb}]\nend_of_line = crlf\ntab_width = 4\nindent_size = 4\ndotnet_style_qualification_for_field = false:silent\ndotnet_style_qualification_for_property = false:silent\ndotnet_style_qualification_for_method = false:silent\ndotnet_style_qualification_for_event = false:silent\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\ndotnet_code_quality_unused_parameters = all:suggestion\ndotnet_style_readonly_field = true:suggestion\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\ndotnet_style_allow_multiple_blank_lines_experimental = true:silent\ndotnet_style_allow_statement_immediately_after_block_experimental = true:silent\ndotnet_style_operator_placement_when_wrapping = beginning_of_line\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\ndotnet_style_prefer_auto_properties = true:warning\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_prefer_simplified_boolean_expressions = true:suggestion\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_compound_assignment = true:suggestion\ndotnet_style_prefer_simplified_interpolation = true:suggestion\ndotnet_style_namespace_match_folder = true:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = true:silent\ndotnet_style_predefined_type_for_member_access = true:silent"
        },
        {
          "name": ".editorconfig.inferred",
          "type": "blob",
          "size": 6.3115234375,
          "content": "# Rules in this file were initially inferred by Visual Studio IntelliCode from the D:\\Projects\\Repos\\NanUI-0.8 codebase based on best match to current usage at 2021/11/24\n# There already existed an .editorconfig file in this directory. Copy rules from this .editorconfig.inferred file to the existing .editorconfig file as desired to have them take effect at this location.\n# You can modify the rules from these initially generated values to suit your own policies\n# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference\n[*.cs]\n\n\n#Core editorconfig formatting - indentation\n\n#use soft tabs (spaces) for indentation\nindent_style = space\n\n#Formatting - indentation options\n\n#indent switch case contents.\ncsharp_indent_case_contents = true\n#indent switch labels\ncsharp_indent_switch_labels = true\n\n#Formatting - new line options\n\n#place catch statements on a new line\ncsharp_new_line_before_catch = true\n#place else statements on a new line\ncsharp_new_line_before_else = true\n#require members of object initializers to be on the same line\ncsharp_new_line_before_members_in_object_initializers = false\n#require braces to be on a new line for object_collection_array_initializers, control_blocks, properties, lambdas, types, methods, and accessors (also known as \"Allman\" style)\ncsharp_new_line_before_open_brace = object_collection_array_initializers, control_blocks, properties, lambdas, types, methods, accessors\n\n#Formatting - organize using options\n\n#sort System.* using directives alphabetically, and place them before other usings\ndotnet_sort_system_directives_first = true\n\n#Formatting - spacing options\n\n#require NO space between a cast and the value\ncsharp_space_after_cast = false\n#require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_after_colon_in_inheritance_clause = true\n#require a space after a keyword in a control flow statement such as a for loop\ncsharp_space_after_keywords_in_control_flow_statements = true\n#require a space before the colon for bases or interfaces in a type declaration\ncsharp_space_before_colon_in_inheritance_clause = true\n#remove space within empty argument list parentheses\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\n#remove space between method call name and opening parenthesis\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\n#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call\ncsharp_space_between_method_call_parameter_list_parentheses = false\n#remove space within empty parameter list parentheses for a method declaration\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\n#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\n\n#Formatting - wrapping options\n\n#leave code block on single line\ncsharp_preserve_single_line_blocks = true\n#leave statements and member declarations on the same line\ncsharp_preserve_single_line_statements = true\n\n#Style - Code block preferences\n\n#prefer curly braces even for one line of code\ncsharp_prefer_braces = true:suggestion\n\n#Style - expression bodied member options\n\n#prefer block bodies for accessors\ncsharp_style_expression_bodied_accessors = false:suggestion\n#prefer block bodies for constructors\ncsharp_style_expression_bodied_constructors = false:suggestion\n#prefer block bodies for methods\ncsharp_style_expression_bodied_methods = false:suggestion\n#prefer expression-bodied members for properties\ncsharp_style_expression_bodied_properties = true:suggestion\n\n#Style - expression level options\n\n#prefer out variables to be declared inline in the argument list of a method call when possible\ncsharp_style_inlined_variable_declaration = true:suggestion\n#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n#Style - Expression-level  preferences\n\n#prefer default over default(T)\ncsharp_prefer_simple_default_expression = true:suggestion\n#prefer objects to be initialized using object initializers when possible\ndotnet_style_object_initializer = true:suggestion\n\n#Style - implicit and explicit types\n\n#prefer var over explicit type in all cases, unless overridden by another code style rule\ncsharp_style_var_elsewhere = true:suggestion\n#prefer var is used to declare variables with built-in system types such as int\ncsharp_style_var_for_built_in_types = true:suggestion\n#prefer var when the type is already mentioned on the right-hand side of a declaration expression\ncsharp_style_var_when_type_is_apparent = true:suggestion\n\n#Style - language keyword and framework type options\n\n#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\n\n#Style - Miscellaneous preferences\n\n#prefer local functions over anonymous functions\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\n\n#Style - modifier options\n\n#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion\n\n#Style - Modifier preferences\n\n#when this rule is set to a list of modifiers, prefer the specified ordering.\ncsharp_preferred_modifier_order = private,public,internal,protected,static,extern,virtual,unsafe,abstract,readonly,override,sealed:suggestion\n\n#Style - Pattern matching\n\n#prefer pattern matching instead of is expression with type casts\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n\n#Style - qualification options\n\n#prefer fields not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_field = false:suggestion\n#prefer methods not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_method = false:suggestion\n#prefer properties not to be prefaced with this. or Me. in Visual Basic\ndotnet_style_qualification_for_property = false:suggestion\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4580078125,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following\n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n#\n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the\n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.609375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb"
        },
        {
          "name": "CHANELOG",
          "type": "blob",
          "size": 0.0947265625,
          "content": "October 10th, 2023\n==================\nThe source code of WinFormium (AKA.NanUI) v1.0 is released."
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 1.00390625,
          "content": "<Project>\n    <PropertyGroup>\n        <Configuration Condition=\"'$(Configuration)' == ''\">Debug</Configuration>\n        <RepositoryRootDirectory>$(MSBuildThisFileDirectory)</RepositoryRootDirectory>\n        <BinDir>$(RepositoryRootDirectory)bin</BinDir>\n        <BaseOutputPath Condition=\" '$(BaseOutputPath)' == '' \">$(BinDir)\\$(MSBuildProjectName)\\</BaseOutputPath>\n        <LangVersion>latest</LangVersion>\n        <GenerateDocumentationFile>false</GenerateDocumentationFile>\n        <NoWarn>CS1591;CS1701</NoWarn>\n        <Company>Net Dimension Studio</Company>\n        <Authors>Xuanchen Lin</Authors>\n        <Copyright>Copyrights © 2012-$([System.DateTime]::Now.Year) Xuanchen Lin. All rights reserved.</Copyright>\n        <RepositoryUrl>https://github.com/XuanchenLin/WinFormium</RepositoryUrl>\n        <PackageProjectUrl>https://github.com/XuanchenLin/WinFormium</PackageProjectUrl>\n        <IncludeSymbols>true</IncludeSymbols>\n        <SymbolPackageFormat>snupkg</SymbolPackageFormat>\n    </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0966796875,
          "content": "The MIT License (MIT)\n\nCopyrights (C) 2014 - present, Xuanchen Lin (Mr.JSON). All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 0.3916015625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <packageSources>\n        <!-- CEF 运行库非常巨大，如果遇到 Runtime 无法下载的情况，请取消以下注释启用 Nuget 国内镜像源以确保包安装顺利进行。 -->\n        <!--<clear />-->\n        <!--<add key=\"nuget.org\" value=\"https://nuget.cdn.azure.cn/v3/index.json\" />-->\n    </packageSources>\n</configuration>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.8388671875,
          "content": "<p align=\"center\">\n    <img src=\"./artworks/WinFormiumLogo.png\" width=\"144\" />\n</p>\n<h1 align=\"center\">The WinFormium Project<br />(A.K.A. NanUI)</h1>\n<p align=\"center\"><strong>Easily build powerful WinForm applications with HTML, CSS and JavaScript.</strong></p>\n\n# WinFormium\n\n点击[[此处]](https://gitee.com/dotNetChina/NanUI/)切换到**简体中文**仓库首页。\n\n![GitHub](https://img.shields.io/github/license/XuanchenLin/WinFormium)\n![Nuget](https://img.shields.io/nuget/v/NetDimension.NanUI)\n![Nuget](https://img.shields.io/nuget/dt/NetDimension.NanUI)\n\nNanUI has always been in the testing stage. After 9 years, it is time to release the official v1.0 version of NanUI! When version 1.0 is released, the new name of the project will be officially launched - **WinFormium**\n\n## ⭐ About\n\nWinFormium is an open source framework on .NET platform for creating user interface for WinForm Applications using HTML5, CSS3, and JavaScript. It is based on the [Xilium.CefGlue](https://bitbucket.org/xilium/xilium.cefglue/wiki/Home) project, which is a .NET wrapper around the [Chromium Embedded Framework](https://bitbucket.org/chromiumembedded/cef).\n\nIf you are looking for a framework for creating a WinForm application with a modern user interface, WinFormium is a good choice. you can use HTML, CSS, and JavaScript to create a user interface, and use C# to write the business logic of the application.\n\n**Please give WinFormium project a star⭐ if you like it.**\n\nIf this project helps, please consider funding it.\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/mrjson?country.x=C2&locale.x=zh_XC)\n\n## 🖥️ Requirements\n\n**For Development**\n\n- .NET Framework 4.6.2 or higher / .NET 6.0 or higher\n- Visual Studio 2019 or higher (VS2022 is recommended)\n\n**For Deployment**\n\n- Microsoft Windows 7 Service Pack 1 or higher\n- .Net Framework 4.6.2 or higher\n- .NET 6.0 for Windows 7 and higher.\n- .NET 7.0/8.0 for Windows 10 and higher.\n\nThis is a **Windows Only** framework, it can not run on Linux or Mac OS.\n\nThe minimum supported Windows is Windows 7 Service Pack 1, and some features (such as DirectComposition Offscreen Rendering) are not supported on Windows 7.\n\n## 🧰 Getting Started\n\nCreate a simple WinFormium Application by following the steps below:\n\n**1. Create a WinForm Application by default template.**\n\n**2. Install WinFormium NuGet Package**\n\nOpen the NuGet Package Manager to install or use NuGet Package Manager Console, and run the following command to install WinFormium nuget package:\n\n```powershell\nPM> Install-Package NetDimension.NanUI\n```\n\nInstall the dependencies of Chromium Embedded Framework that WinFormium depends on:\n\n```powershell\nPM> Install-Package NetDimension.NanUI.Runtime\n```\n\n**3. A basic WinFormium application requires the following code:**\n\nModify the code in the **Program.cs** file as follows:\n\n```csharp\nusing WinFormium;\n\nclass Program\n{\n    [STAThread]\n    static void Main(string[] args)\n    {\n        var builder = WinFormiumApp.CreateBuilder();\n\n        builder.UseWinFormiumApp<MyApp>();\n\n        var app = builder.Build();\n\n        app.Run();\n    }\n}\n```\n\nCreate a class implements **WinFormiumStartup** for configuring the application:\n\n```csharp\nusing WinFormium;\n\nclass MyAPP : WinFormiumStartup\n{\n    protected override MainWindowCreationAction? UseMainWindow(MainWindowOptions opts)\n    {\n        // Configure the main window of this application\n        return opts.UseMainFormium<MyWindow>();\n    }\n\n    protected override void WinFormiumMain(string[] args)\n    {\n        // The codes in Main function should be here, this function only runs in Main process. So it can prevent the codes in Main process running in sub-processes.\n        ApplicationConfiguration.Initialize();\n    }\n\n    protected override void ConfigurationChromiumEmbedded(ChromiumEnvironmentBuiler cef)\n    {\n        // Configure the Chromium Embedded Framework here\n    }\n\n    protected override void ConfigureServices(IServiceCollection services)\n    {\n        // Configure the services of this application here\n    }\n}\n```\n\nCreate a class implements **Formium** for configuring the main window of the application:\n\n```csharp\nusing WinFormium;\nusing WinFormium.Forms;\n\nclass MyWindow : Formium\n{\n    public MyWindow()\n    {\n        Url = \"https://www.google.com\";\n    }\n\n    protected override FormStyle ConfigureWindowStyle(WindowStyleBuilder builder)\n    {\n        // Configure the style of the window here or leave it blank to use the default style\n\n        var style = builder.UseSystemForm();\n\n        style.TitleBar = false;\n\n        style.DefaultAppTitle = \"My first WinFomrim app\";\n\n        return style;\n    }\n}\n```\n\n**4. Build and run your WinFormium application**\n\n## 📖 Documentation\n\nFor more info please see - [Documentation](docs/README.md)\n\n## 🤖 Demos\n\n- [Minimal WinFormium App](./examples/MinimalWinFormiumApp) - Introduction to the basic usage of WinFormium.\n\n## 🔗 Third-Party References & Tools\n\n- CEF - [https://bitbucket.org/chromiumembedded/cef]()\n- Xilium.CefGlue - [https://gitlab.com/xiliumhq/chromiumembedded/cefglue/]()\n- Vanara.Library - [https://github.com/dahall/Vanara/]()\n- Vortice.Windows - [https://github.com/amerkoleci/Vortice.Windows]()\n- SkiaSharp - [https://github.com/mono/SkiaSharp]()\n- React - [https://github.com/facebook/react]()\n- React-Router - [https://github.com/remix-run/react-router]()\n- Vite - [https://github.com/vitejs/vite]()\n\n## 🏆 Inspirations\n\nI was inspired by the following songs and albums when creating this version of WinFormium.\n\n- **Strandels** - Chance Of Rain\n- **One Direction** - What a Feeling (Made In The A.M.)\n- **Thomas Rhett** - VHS (Center Point Road)\n- **Sammy Kershaw** - She Don't Know She's Beautiful (Haunted Heart)\n- **Chrissy Steele** - Two Bodies (Magnet To Steele)\n- **Halestorm** - I Like It Heavy (Into the Wild Life)\n- **Joan Jett & The Blackhearts** - I Hate Myself for Loving You (Up Your Alley)\n"
        },
        {
          "name": "WinFormiumProject-EN.sln",
          "type": "blob",
          "size": 2.7841796875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.7.34031.279\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WinFormium\", \"src\\WinFormium\\WinFormium.csproj\", \"{39675313-A12E-4F6A-923A-4C28308DF9C3}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{D661C15E-B241-437A-96BC-79EB89B2B45E}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tCHANELOG = CHANELOG\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tLICENSE = LICENSE\n\t\tNuGet.config = NuGet.config\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Examples\", \"Examples\", \"{EE18C1E1-C498-4D14-985D-CD9E963C2C82}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MinimalWinFormiumApp\", \"examples\\MinimalWinFormiumApp\\MinimalWinFormiumApp.csproj\", \"{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WinFormiumSubProcess\", \"examples\\WinFormiumSubProcess\\WinFormiumSubProcess.csproj\", \"{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{39675313-A12E-4F6A-923A-4C28308DF9C3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{39675313-A12E-4F6A-923A-4C28308DF9C3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{39675313-A12E-4F6A-923A-4C28308DF9C3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{39675313-A12E-4F6A-923A-4C28308DF9C3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{F651C9B7-EBB9-4B1D-97E2-4F76D08C1B59} = {EE18C1E1-C498-4D14-985D-CD9E963C2C82}\n\t\t{6FE75BD1-B2C6-4EEF-B9EA-F19CD91E375C} = {EE18C1E1-C498-4D14-985D-CD9E963C2C82}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {3E182896-FC1E-48CA-BB92-55B90C56A174}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "artworks",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}