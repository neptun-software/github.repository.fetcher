{
  "metadata": {
    "timestamp": 1736711048460,
    "page": 798,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "944095635/DMSkin",
      "stars": 1535,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.625,
          "content": "﻿## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\nBuild/\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\npackages/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Pp]ublish/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n/资源文件/codecs\n/资源文件/APlayerSDK\n/资源文件/VLC 精简\n/Wallpaper.Maker/Wallpaper.Web\n/造物主壁纸 1.0.1.1010.7z\n"
        },
        {
          "name": ".vs",
          "type": "tree",
          "content": null
        },
        {
          "name": "DMSkin.Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "DMSkin.sln",
          "type": "blob",
          "size": 4.96484375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.28729.10\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DMSkin.Core\", \"DMSkin.Core\\DMSkin.Core.csproj\", \"{C11FCCC3-4A44-42A1-829B-57E8C146EC89}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Demo\", \"Demo\", \"{C6848568-4FB9-4889-A956-F1E5E0B299C6}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Library\", \"Library\", \"{844580A8-984B-4DA1-AEFB-C0B01D9CED70}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Support\", \"Support\", \"{47FF4E42-A7C2-4188-A4D7-FF0D76DDD90B}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DMSkin\", \"DMSkin\\DMSkin.csproj\", \"{84D6E067-2DB0-4765-8F5C-5B5288A26F0A}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DMSkin.AduDesign\", \"DesignLibrary\\DMSkin.AduDesign\\DMSkin.AduDesign.csproj\", \"{E55F4D48-0893-4DB1-84DC-0844CE3F957B}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DMSkin.CyanDesign\", \"DesignLibrary\\DMSkin.CyanDesign\\DMSkin.CyanDesign.csproj\", \"{4B0EF37D-E012-4153-84B9-76FCE8C84301}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"AduDesignDemo\", \"Demos\\AduDesignDemo\\AduDesignDemo.csproj\", \"{57B60DA8-75ED-42D7-B205-85D24DF8BE6F}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"CyanDesignDemo\", \"Demos\\CyanDesignDemo\\CyanDesignDemo.csproj\", \"{F4C3340C-A5E8-4324-B512-AE8C10C00E14}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"DMSkinDemo\", \"Demos\\DMSkinDemo\\DMSkinDemo.csproj\", \"{4C45508D-0EA6-4932-8869-4F029FB4F0C9}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{C11FCCC3-4A44-42A1-829B-57E8C146EC89}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C11FCCC3-4A44-42A1-829B-57E8C146EC89}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C11FCCC3-4A44-42A1-829B-57E8C146EC89}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C11FCCC3-4A44-42A1-829B-57E8C146EC89}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{84D6E067-2DB0-4765-8F5C-5B5288A26F0A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{84D6E067-2DB0-4765-8F5C-5B5288A26F0A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{84D6E067-2DB0-4765-8F5C-5B5288A26F0A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{84D6E067-2DB0-4765-8F5C-5B5288A26F0A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E55F4D48-0893-4DB1-84DC-0844CE3F957B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E55F4D48-0893-4DB1-84DC-0844CE3F957B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E55F4D48-0893-4DB1-84DC-0844CE3F957B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E55F4D48-0893-4DB1-84DC-0844CE3F957B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4B0EF37D-E012-4153-84B9-76FCE8C84301}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4B0EF37D-E012-4153-84B9-76FCE8C84301}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4B0EF37D-E012-4153-84B9-76FCE8C84301}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4B0EF37D-E012-4153-84B9-76FCE8C84301}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{57B60DA8-75ED-42D7-B205-85D24DF8BE6F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{57B60DA8-75ED-42D7-B205-85D24DF8BE6F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{57B60DA8-75ED-42D7-B205-85D24DF8BE6F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{57B60DA8-75ED-42D7-B205-85D24DF8BE6F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F4C3340C-A5E8-4324-B512-AE8C10C00E14}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F4C3340C-A5E8-4324-B512-AE8C10C00E14}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F4C3340C-A5E8-4324-B512-AE8C10C00E14}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F4C3340C-A5E8-4324-B512-AE8C10C00E14}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4C45508D-0EA6-4932-8869-4F029FB4F0C9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4C45508D-0EA6-4932-8869-4F029FB4F0C9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4C45508D-0EA6-4932-8869-4F029FB4F0C9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4C45508D-0EA6-4932-8869-4F029FB4F0C9}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{C11FCCC3-4A44-42A1-829B-57E8C146EC89} = {47FF4E42-A7C2-4188-A4D7-FF0D76DDD90B}\n\t\t{84D6E067-2DB0-4765-8F5C-5B5288A26F0A} = {47FF4E42-A7C2-4188-A4D7-FF0D76DDD90B}\n\t\t{E55F4D48-0893-4DB1-84DC-0844CE3F957B} = {844580A8-984B-4DA1-AEFB-C0B01D9CED70}\n\t\t{4B0EF37D-E012-4153-84B9-76FCE8C84301} = {844580A8-984B-4DA1-AEFB-C0B01D9CED70}\n\t\t{57B60DA8-75ED-42D7-B205-85D24DF8BE6F} = {C6848568-4FB9-4889-A956-F1E5E0B299C6}\n\t\t{F4C3340C-A5E8-4324-B512-AE8C10C00E14} = {C6848568-4FB9-4889-A956-F1E5E0B299C6}\n\t\t{4C45508D-0EA6-4932-8869-4F029FB4F0C9} = {C6848568-4FB9-4889-A956-F1E5E0B299C6}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {E25D9C2A-99A7-4A4B-945E-4E550E82071B}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "DMSkin",
          "type": "tree",
          "content": null
        },
        {
          "name": "Demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "DesignLibrary",
          "type": "tree",
          "content": null
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6884765625,
          "content": "## 如果你有XAML相关的外包需求，可以通过QQ或微信与我取得联系。(QQ:\"944095635\" 微信号:\"qq944095635\")\n\n\n## 基于DMSkin开发的PC项目，现在运营中你可以前往Steam下载体验。\n[Wallpaper Maker](https://store.steampowered.com/app/1010800)\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/new.png\" align=\"center\">\n\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/wall.jpg\" align=\"center\">\n\n\n# DMSkin\n## 目前可以使用,但是内容较少,持续更新中\n#### 介绍\n#### 这是一个全新的项目，快速开发WPF客户端的框架。\n#### 内容：MVVM 框架模块 + DesignLibrary 控件样式库\n#### 开发PC客户端 一套搞定\n\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/Demo1.png\" align=\"center\">\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/Demo2.png\" align=\"center\">\n\n## 1.开发&编译&环境&问题\n\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/VS.png\" width=\"310\" height=\"101\" align=\"center\">\n\n````xml\n开发环境：Windows 10  +  Visual Studio 2019 Professional  +  .Net Framework 4.5\n\n项目基于Visual Studio 2019 Professional .Net Framework 4.5，源码包括一些C#新语法。\n\n如果你在旧版本Visual Studio版本上编译不通过的话，请自行修改中源码不兼容的部分。\n````\n````xml\n支持环境：Windows 7/10 +  .Net Framework 4.5\n````\n````xml\n1.目前绝对放弃Windows XP\n2.WPF多数是企业软件,如果要适配windows 7,单独装.Net Framework 4.5的库\n3.UI库的初衷就是为了制作更精美的界面,精美的效果在旧系统中并不能正常的显示,\n  为了适配旧版本的系统而放弃语言新特性,得不偿失。\n\n目前Windows 10 占有率已经超过Windows 7\n````\n````xml\n注意：系统阴影(如果用户关闭了窗口阴影,界面边界无法分辨，可以考虑使用Border增加窗口边框)\n我的电脑->此电脑->高级系统设置->性能->设置->√ 在窗口下显示阴影\n````\n````xml\nWindows XP 请自行测试,\n旧版本已经被我转移到[DMSkin-for-WPF](https://github.com/944095635/DMSkin-for-WPF)(备份学习之用)\n````\n## 2.项目模块&使用说明\n\n| 项目               |   DMSkin.dll 和 DMSkin.Core.dll 可以独立存在   | 最新版本            | Nuget  |\n| :----:            |   :----:                                     |   :----:           |:----:  | \n| DMSkin            | DMSkin 窗口&样式 基础控件 基础色 滚动条样式      | 3.0.0.1000         |        |\n| DMSkin.Core       | MVVM,Broadcast,DelegateCommand,ViewModelBase | 3.0.0.1000         |        |\n\n| DesignLibrary样式库| Library样式库都依赖于DMSkin.dll  | 最新版本        | Nuget |\n| :----:            |   :----:                       |   :----:       |:----:  | \n| DMSkin.CyanDesign | CyanDesign 青 \"轻\"              | 1.0.0.1000     |        |\n| DMSkin.AduDesign  | Adu为DMSkin设计的样式库          | 1.0.0.1000     |        |\n\n#### 2.1 新手使用说明\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/Framework1.png\" align=\"center\">\n\n````xml\n使用DMSkin.dll 和 DMSkin.Core.dll,窗口继承自DMSkinWindow\n从DesignLibrary样式库中选择一个来作为软件的样式库。\n非常推荐刚接触WPF,不会自己写样式和模板的开发者使用这种方式。\n\n这种模式,你只需要使用原生组件,通过设置Style Key就可以切换风格。\n通过重写覆盖样式库中的颜色Key实现整体换色(如果目标库有主题色)\n````\n\n#### 2.2 进阶使用说明\n<img src=\"https://raw.githubusercontent.com/944095635/DMSkin/master/Docs/Image/Framework2.png\" align=\"center\">\n\n````xml\n仅用DMSkin.dll 和 DMSkin.Core.dll\n非常推荐会写样式模板的开发者使用这种方式。\n\n这种模式,只会使用到DMSkin的窗口和组件(无外观) 和 Core中的核心辅助类.\n你可以自己为内置组件设计外观。\n非常的轻,不会有多余的代码和样式。\n````\n\n\n#### 2.3 DMSkin.Core模块(DMSkin.Core.dll)\n> UIExecute(跨线程UI调度器) [[使用文档]](https://github.com/944095635/DMSkin/wiki/Execute%E8%B7%A8%E7%BA%BF%E7%A8%8BUI%E8%B0%83%E5%BA%A6%E5%99%A8)\n\n> Broadcast(广播器) [[使用文档]](https://github.com/944095635/DMSkin/wiki/Broadcast%E5%B9%BF%E6%92%AD%E5%99%A8)\n\n> TaskManager(Task管理器)\n\n> Storage(内容存储器)\n\n> DelegateCommand(ICommand实现)\n\n> ViewModelBase(ViewModel基类)\n\n#### 2.4 DMSkin模块(DMSkin.dll)\n> DMSkinWindow[[使用文档]](https://github.com/944095635/DMSkin/wiki/DMSkinWindow%E7%AA%97%E5%8F%A3)\n\n> [[学习WPF的窗口跳转和内容切换]](https://github.com/944095635/DMSkin/wiki/%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD&%E7%AA%97%E5%8F%A3%E8%B7%B3%E8%BD%AC)\n\n> SystemButton(系统按钮)\n\n> Icon(附加属性类)\n\n\n## 3.下载&引用\n> 3.1 可以直接通过   `https://github.com/944095635/DMSkin.git`\n\n克隆代码到本地，通过引用项目的方式导入DMSkin到你的解决方案中\n\n> 3.2 你可以通过Nuget 搜索DMSkin安装到自己的项目中\n\n## 4.代码段\n项目中一般会使用到Visual Studio的智能提示(双tab代码段),\n\n我在项目中提供了3个代码段（在当前项目的Docs文件夹中可以找到）。\n\nVS->工具->代码片段管理器->语言（Csharp）->Visual C#\n\n我的VS安装在C盘路径是:\n````xml\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC#\\Snippets\\2052\\Visual C#\n````\n\n| Dos文件夹                | 描述   |使用率   |\n| :----:              | :---:          | :---:          |\n| propfull  |  刷新属性       |⭐⭐⭐|\n| propob  |  刷新集合属性       |⭐⭐⭐|\n| command   | 命令        |⭐⭐|\n| propdp    | 依赖属性    |⭐|\n| propa    | 附加属性    |⭐|\n"
        },
        {
          "name": "wall.png",
          "type": "blob",
          "size": 720.0732421875,
          "content": null
        }
      ]
    }
  ]
}