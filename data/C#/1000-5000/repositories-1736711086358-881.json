{
  "metadata": {
    "timestamp": 1736711086358,
    "page": 881,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iammukeshm/CleanArchitecture.WebApi",
      "stars": 1423,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.65625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\nWebApi/appsettings.Development.json\nVSIXCore/"
        },
        {
          "name": ".template.config",
          "type": "tree",
          "content": null
        },
        {
          "name": "Application",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.7626953125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [Unreleased]\n## v1.1-release\n\n- Refactored Service Extension at Startup.cs\n- code cleanup\n- added response for confirm-email endpoint\n- secured POST/DELETE/PUT Endpoints with JWT . Only Authorized Users can access these endpoints. To Generate a token, Register a new account at /api/account/register. Get it confirmed. Generate JWTokens at /api/account/authenticate and use the tokens to access the secured endpoints.\n- added default roles (SuperAdmin,Admin,Moderator,Basic). Found at Application/Enums/Roles\n- added default roles seeding on startup\n- added default users seeding at startup. Here are the default credentials ( superadmin@gmail.com / 123Pa$$word! ) ( basic@gmail.com / 123Pa$$word! )\n- updated nugget packages\n- added custom response for 401 & 403\n- any newly registered user will be added to the Basic User Role. All associated roles of a user will be visible on /api/Account/authenticate response.\n- added forgot-password / reset-password endpoints\n- added basic health check at /health\n- added user auditing to track changes / creation of new entities by userId\n\n## Released\n## v1.0-preview\n\n### Added\n- setup folder structure\n- added Swagger UI\n- added API Versioning\n- added Meta Controller\n- added base API Controller\n- added Generic Repostiory with Interface / Implementation\n- added response and paged response wrapper classes\n- added identity context and seperate connection string for Identity\n- custom schema and names for Identity Table\n- added automapper with general profile\n- added endpoints and handlers for product /getall and /post\n- added pagination filters and implemented pagination for GetAll Method of Generic Repository\n- added fluent validations\n- and more.\n\n### Changed\n- None\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at hello@codewithmukesh.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CleanArchitecture.WebApi.sln",
          "type": "blob",
          "size": 5.142578125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.30002.166\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WebApi\", \"WebApi\\WebApi.csproj\", \"{0C542137-D103-4825-B636-C4E9D8E7EFC9}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Docs\", \"Docs\", \"{11FA7E0A-C17E-4ABD-AC92-E666D8C4F76C}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tCHANGELOG.md = CHANGELOG.md\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Source\", \"Source\", \"{79EDE741-1146-4C1F-BE28-82F2709E9C59}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Test\", \"Test\", \"{FE9EA6C6-1E6C-4CBD-886E-4FB321D9A341}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Core\", \"Core\", \"{D0F0FC8A-3AE2-4676-BA02-6762B286D890}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Infrastructure\", \"Infrastructure\", \"{FC49C8DC-04D6-40EE-8F6A-B437B52811BA}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"WebApi\", \"WebApi\", \"{5C13E465-DE64-4510-B539-170F893038FB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Domain\", \"Domain\\Domain.csproj\", \"{5885FCE0-9158-4AF7-9A57-C83FBECA539A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Application\", \"Application\\Application.csproj\", \"{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Infrastructure.Persistence\", \"Infrastructure.Persistence\\Infrastructure.Persistence.csproj\", \"{C772A90E-F5CA-4D58-977D-574C93F8AF3F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Infrastructure.Identity\", \"Infrastructure.Identity\\Infrastructure.Identity.csproj\", \"{876F2CD8-1519-419A-9402-7C8B856DBE7C}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Infrastructure.Shared\", \"Infrastructure.Shared\\Infrastructure.Shared.csproj\", \"{C4009D3B-6161-4494-ADFC-18783719A065}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{0C542137-D103-4825-B636-C4E9D8E7EFC9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0C542137-D103-4825-B636-C4E9D8E7EFC9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0C542137-D103-4825-B636-C4E9D8E7EFC9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0C542137-D103-4825-B636-C4E9D8E7EFC9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5885FCE0-9158-4AF7-9A57-C83FBECA539A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5885FCE0-9158-4AF7-9A57-C83FBECA539A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5885FCE0-9158-4AF7-9A57-C83FBECA539A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5885FCE0-9158-4AF7-9A57-C83FBECA539A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C772A90E-F5CA-4D58-977D-574C93F8AF3F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C772A90E-F5CA-4D58-977D-574C93F8AF3F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C772A90E-F5CA-4D58-977D-574C93F8AF3F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C772A90E-F5CA-4D58-977D-574C93F8AF3F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{876F2CD8-1519-419A-9402-7C8B856DBE7C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{876F2CD8-1519-419A-9402-7C8B856DBE7C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{876F2CD8-1519-419A-9402-7C8B856DBE7C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{876F2CD8-1519-419A-9402-7C8B856DBE7C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C4009D3B-6161-4494-ADFC-18783719A065}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C4009D3B-6161-4494-ADFC-18783719A065}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C4009D3B-6161-4494-ADFC-18783719A065}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C4009D3B-6161-4494-ADFC-18783719A065}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{0C542137-D103-4825-B636-C4E9D8E7EFC9} = {5C13E465-DE64-4510-B539-170F893038FB}\n\t\t{D0F0FC8A-3AE2-4676-BA02-6762B286D890} = {79EDE741-1146-4C1F-BE28-82F2709E9C59}\n\t\t{FC49C8DC-04D6-40EE-8F6A-B437B52811BA} = {79EDE741-1146-4C1F-BE28-82F2709E9C59}\n\t\t{5C13E465-DE64-4510-B539-170F893038FB} = {79EDE741-1146-4C1F-BE28-82F2709E9C59}\n\t\t{5885FCE0-9158-4AF7-9A57-C83FBECA539A} = {D0F0FC8A-3AE2-4676-BA02-6762B286D890}\n\t\t{8BC3FB7C-65EB-46CB-972F-1C158B9EFE1F} = {D0F0FC8A-3AE2-4676-BA02-6762B286D890}\n\t\t{C772A90E-F5CA-4D58-977D-574C93F8AF3F} = {FC49C8DC-04D6-40EE-8F6A-B437B52811BA}\n\t\t{876F2CD8-1519-419A-9402-7C8B856DBE7C} = {FC49C8DC-04D6-40EE-8F6A-B437B52811BA}\n\t\t{C4009D3B-6161-4494-ADFC-18783719A065} = {FC49C8DC-04D6-40EE-8F6A-B437B52811BA}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {65584FD6-4295-480B-B02D-ADAC34713D84}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Domain",
          "type": "tree",
          "content": null
        },
        {
          "name": "Infrastructure.Identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "Infrastructure.Persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "Infrastructure.Shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0703125,
          "content": "MIT License\n\nCopyright (c) 2020 Mukesh Murugan / www.codewithmukesh.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.841796875,
          "content": " # ASP.NET Core WebApi - Clean Architecture\n\n![.NET Core](https://github.com/iammukeshm/CleanArchitecture.WebApi/workflows/.NET%20Core/badge.svg?branch=master)\n![GitHub stars](https://img.shields.io/github/stars/iammukeshm/CleanArchitecture.WebApi)\n[![Twitter Follow](https://img.shields.io/twitter/follow/codewithmukesh?style=social&label=follow)](https://twitter.com/codewithmukesh)\n\n<br/>\n\nAn Implementation of Clean Architecture with ASP.NET Core 3.1 WebApi. With this Open-Source BoilerPlate Template, you will get access to the world of Loosely-Coupled and Inverted-Dependency Architecture in ASP.NET Core 3.1 WebApi with a lot of best practices.\n\nCheck out the [Project Page](https://www.codewithmukesh.com/project/aspnet-core-webapi-clean-architecture/) to learn more about this Open Source Project.\n\nRead the [Changelog file](https://github.com/iammukeshm/CleanArchitecture.WebApi/blob/master/CHANGELOG.md) to see the new changes.\n\n## Annoucement : fullstackhero - .NET 6.0 Clean Architecture WebAPI ! \n\nI am no longer supporting this project. No more new features will be added to this repository.\nI am building a .NET WebApi 6.0 Clean Architecture Boilerplate Project with better features and Multitenancy ofcourse! Visit the new project - https://github.com/fullstackhero/dotnet-webapi-boilerplate\n\n<p align=\"center\">\n    <img src=\"https://codewithmukesh.com/wp-content/uploads/2021/08/fullstackhero-banner.jpg\" alt=\"fullstackhero\">\n</p>\n\n### 0.0.1 RC is available now!\n\nThis is the first pre-release version of the `fullstackhero .NET WebAPI Boilerplate` package. Newer versions will be available on a weekly basis with newer updates and patches. [Read the getting-started guide for more.](https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/)\n\nThe Release Version is expected to be out by Novemeber, 2021 as soon as .NET 6 LTS is launched by Microsoft. Preview versions of this project is available for Initial Developer Testing.\n\n### Important Links & Documentations\n\n[Documentation] Overview - [Read](https://fullstackhero.net/dotnet-webapi-boilerplate/general/overview/)\n\n[Documentation] Getting Started - [Read](https://fullstackhero.net/dotnet-webapi-boilerplate/general/getting-started/)\n\n[Documentation] Development Environment - [Learn about setting up the DEV environment](https://fullstackhero.net/dotnet-webapi-boilerplate/general/development-environment/)\n\nTrack Progress - [Release 1.0 Milestones](https://github.com/fullstackhero/dotnet-webapi-boilerplate/milestone/1)\n\nParticipate in Discussions - [QNA & General Discussions](https://github.com/fullstackhero/dotnet-webapi-boilerplate/discussions)\n\nJoin our Discord - [fullstackhero @ Discord](https://discord.gg/gdgHRt4mMw)\n\n## Releases - ASP.NET Core 3.1 Template\nv1.1 - Stable Release - [Download the Stable Release](https://github.com/iammukeshm/CleanArchitecture.WebApi/releases/tag/v1.1) \n\nv1.0-preview - [Download the first Preview here](https://github.com/iammukeshm/CleanArchitecture.WebApi/releases/tag/v1.0-preview) \n\n## v1.1\n\nFollow these steps to get started with this Boiler Plate Template.\n\n### Download the Extension\nMake sure Visual Studio 2019 is installed on your machine with the latest SDK.\n[Download from Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=MukeshMurugan.CleanArchitectureWebApi). Install it on your machine.\n\nFollow these Steps to get started.\n\n![alt text](https://www.codewithmukesh.com/wp-content/uploads/2020/08/cleanArchitecture_VisualStudio.png)\n\n![alt text](https://www.codewithmukesh.com/wp-content/uploads/2020/08/cleanArchitecture_NewProject.png)\n\nYou Solution Template is Ready!\n\n![alt text](https://www.codewithmukesh.com/wp-content/uploads/2020/08/cleanArchitecture_FolderStructure.png)\n\nVisit the Project Page to learn more - [Click Here](https://www.codewithmukesh.com/project/aspnet-core-webapi-clean-architecture/)\n\n### Alternatively you can also clone the Repository.\n\n1. Clone this Repository and Extract it to a Folder.\n3. Change the Connection Strings for the Application and Identity in the WebApi/appsettings.json - (WebApi Project)\n2. Run the following commands on Powershell in the WebApi Projecct's Directory.\n- dotnet restore\n- dotnet ef database update -Context ApplicationDbContext\n- dotnet ef database update -Context IdentityContext\n- dotnet run (OR) Run the Solution using Visual Studio 2019\n\nCheck out my [blog](https://www.codewithmukesh.com) or say [Hi on Twitter!](https://twitter.com/codewithmukesh)\n\n### How to use MySQL or PostgreSQL as your Data Provider\nThe Project currently uses MSSQL as the default Data Provider. If you are more comfortable with MySQL or PostgreSQL, here is how to migrate to them easily.\n\n\n1. delete all existing file inside migrations folder on both project\n   - {YourProjectName}.Infrastructure.Identity\n   - {YourProjectName}.Infrastructure.Persistence\n\n2. In in `ServiceExtensions.cs` and `ServiceRegistration.cs` change from `options.UseSqlServer` to:\n#### For MySql\n`options.UseMySql`\n#### For PostgreSQL\n`options.UseNpgsql`\n\n3. Add NuGet packages to both projects (Infrastructure.Identity and Infrastructure.Persistence):\n#### For MySql:\nrun `dotnet add package Pomelo.EntityFrameworkCore.MySql --version 3.1.2` (remember to do this on both projects)\n#### For PostgreSQL:\nrun \n```cli\ndotnet add package Npgsql.EntityFrameworkCore.PostgreSQL\ndotnet add package Npgsql.EntityFrameworkCore.PostgreSQL.Design\n```\n(remember to do this on both projects)\n\n4. on `IdentityContext.cs` comment `builder.HasDefaultSchema(\"Identity\");` because ef doesn't support that on mysql\n\n5. cd to `{YourProjectName}.Infrastructure.Identity` and run\n   - `dotnet ef database update --startup-project ../{YourProjectName}.WebApi/{YourProjectName}.WebApi.csproj -c \"IdentityContext\"`\n   - `dotnet ef migrations add Initial --startup-project ../{YourProjectName}.WebApi/{YourProjectName}.WebApi.csproj -c \"IdentityContext\"`\n\n6. cd to `{YourProjectName}.Infrastructure.Persistence` and run\n   - `dotnet ef database update --startup-project ../{YourProjectName}.WebApi/{YourProjectName}.WebApi.csproj -c \"ApplicationDbContext\"`\n   - `dotnet ef migrations add Initial --startup-project ../{YourProjectName}.WebApi/{YourProjectName}.WebApi.csproj -c \"ApplicationDbContext\"`\n   \nThe above guide (To use MySQL) was contributed by [geekz-reno](https://github.com/geekz-reno).\n\n### Default Roles & Credentials\nAs soon you build and run your application, default users and roles get added to the database.\n\nDefault Roles are as follows.\n- SuperAdmin\n- Admin\n- Moderator\n- Basic\n\nHere are the credentials for the default users.\n- Email - superadmin@gmail.com  / Password - 123Pa$$word!\n- Email - basic@gmail.com  / Password - 123Pa$$word!\n\nYou can use these default credentials to generate valid JWTokens at the ../api/account/authenticate endpoint.\n\n## Purpose of this Project\n\nDoes it really make sense to Setup your ASP.NET Core Solution everytime you start a new WebApi Project ? Aren't we wasting quite a lot of time in doing this over and over gain?\n\nThis is the exact Problem that I intend to solve with this Full-Fledged ASP.NET Core 3.1 WebApi Solution Template, that also follows various principles of Clean Architecture.\n\nThe primary goal is to create a Full-Fledged implementation, that is well documented along with the steps taken to build this Solution from Scratch. This Solution Template will also be available within Visual Studio 2019 (by installing the required Nuget Package / Extension).\n- Demonstrate Clean Monolith Architecture in ASP.NET Core 3.1 \n- This is not a Proof of Concept\n- Implementation that is ready for Production\n- Integrate the most essential libraries and packages\n\n## Give a Star ⭐️\nIf you found this Implementation helpful or used it in your Projects, do give it a star. Thanks!\nOr, If you are feeling really generous, [Support the Project with a small contribution!](https://www.buymeacoffee.com/codewithmukesh)\n\n## Technologies\n- ASP.NET Core 3.1 WebApi\n- REST Standards\n- .NET Core 3.1 / Standard 2.1 Libraries\n\n## Features\n- [x] Onion Architecture\n- [x] CQRS with MediatR Library\n- [x] Entity Framework Core - Code First\n- [x] Repository Pattern - Generic\n- [x] MediatR Pipeline Logging & Validation\n- [x] Serilog\n- [x] Swagger UI\n- [x] Response Wrappers\n- [x] Healthchecks\n- [x] Pagination\n- [ ] In-Memory Caching\n- [ ] Redis Caching\n- [x] In-Memory Database\n- [x] Microsoft Identity with JWT Authentication\n- [x] Role based Authorization\n- [x] Identity Seeding\n- [x] Database Seeding\n- [x] Custom Exception Handling Middlewares\n- [x] API Versioning\n- [x] Fluent Validation\n- [x] Automapper\n- [x] SMTP / Mailkit / Sendgrid Email Service\n- [x] Complete User Management Module (Register / Generate Token / Forgot Password / Confirmation Mail)\n- [x] User Auditing\n\n## Brief Overview\n![alt text](https://www.codewithmukesh.com/wp-content/uploads/2020/06/Onion-Architecture-In-ASP.NET-Core.png)\n\n## Prerequisites\n- Visual Studio 2019 Community and above\n- .NET Core 3.1 SDK and above\n- Basic Understanding of Architectures and Clean Code Principles\n- I Recommend that you read [Onion Architecture In ASP.NET Core With CQRS – Detailed](https://www.codewithmukesh.com/blog/onion-architecture-in-aspnet-core/) article to understand this implementation much better. This project is just an Advanced Version of the mentioned article.\n\n## Getting Started\n\n## Changelog\nEvery changes / additions / deletions will be recorded in the [Changelog file](https://github.com/iammukeshm/CleanArchitecture.WebApi/blob/master/CHANGELOG.md).\n\n## Questions? Bugs? Suggestions for Improvement?\nHaving any issues or troubles getting started? [Get in touch with me](https://www.codewithmukesh.com/contact) or [Raise a Bug or Feature Request](https://github.com/iammukeshm/CleanArchitecture.WebApi/issues/new/choose). Always happy to help.\n\n## Support\nHas this Project helped you learn something New? or Helped you at work? Do Consider Supporting.\n\n<a href=\"https://www.buymeacoffee.com/codewithmukesh\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\" alt=\"Buy Me A Coffee\" width=\"200\"  ></a>\n\n## Share it!\nI have personally not come across a clean implementation on a WebAPI, which is the reason that I started building this up. There are quite a lot of improvements and fixes along the way from the day I started out. Thanks to the community for the support and suggestions.\nPlease share this Repository within your developer community, if you think that this would a difference! Thanks.\n\n## About the Author\n### Mukesh Murugan\n- Blogs at [codewithmukesh.com](https://www.codewithmukesh.com)\n- Facebook - [codewithmukesh](https://www.facebook.com/codewithmukesh)\n- Twitter - [Mukesh Murugan](https://www.twitter.com/iammukeshm)\n- Twitter - [codewithmukesh](https://www.twitter.com/codewithmukesh)\n- Linkedin - [Mukesh Murugan](https://www.linkedin.com/in/iammukeshm/)\n\n## Licensing\niammukeshm/CleanArchitecture.WebApi Project is licensed with the [MIT License](https://github.com/iammukeshm/CleanArchitecture.WebApi/blob/master/LICENSE).\n"
        },
        {
          "name": "WebApi",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}