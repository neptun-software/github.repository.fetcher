{
  "metadata": {
    "timestamp": 1736710700988,
    "page": 76,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HJLebbink/asm-dude",
      "stars": 4135,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.537109375,
          "content": "\n#ignore thumbnails created by windows\nThumbs.db\n#Ignore files build by Visual Studio\n*.obj\n*.exe\n*.pdb\n*.user\n*.aps\n*.pch\n*.vspscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.cache\n*.ilk\n*.log\n[Dd]ebug*/\nobj/\n[Rr]elease*/\n_ReSharper*/\n[Tt]est[Rr]esult*\n*.dropbox.attr\n*.tmp_proj\n**/.vs/*\n\nVS/packages/*\nVS/Python/intel-doc-2-md/resources/architecture-instruction-set-extensions-programming-reference.pdf\nVS/CSHARP/asm-dude-vsix/Resources/Performance/instruction_tables.ods\n\n#VS/CSHARP/asm-sim-lib/libs/*\n**/.idea/*\n/VS/CSHARP/asm-dude2-vsix/vsix/**\n"
        },
        {
          "name": "Go",
          "type": "tree",
          "content": null
        },
        {
          "name": "Images",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 Henk-Jan Lebbink\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4091796875,
          "content": "# AsmDude2\nAsmDude2 represents a natural evolution from its predecessor, AsmDude. While AsmDude served as a \nsingle, all-encompassing plugin for VS2015/17/19, providing support for Assembly source code, \nAsmDude2 is built around a Language Server Protocol ([LSP](https://microsoft.github.io/language-server-protocol/))\nand a lightweight Visual Studio extension (for VS2022), drawing its functionality from this LSP. \nTransitioning from a Visual Studio 2019 extension to one compatible with Visual Studio 2022 wasn't \nstraightforward. Many of the features from the older AsmDude have yet to be ported, and some may \nnever be. See the list of known issues and things still todo.\n\nThis extension can be found in the [visual studio extensions gallery](https://marketplace.visualstudio.com/items?itemName=Henk-JanLebbink.AsmDude2)\nor download latest installer [AsmDude.vsix (v2.0.0.4)](https://github.com/HJLebbink/asm-dude/releases/download/v2.0.0.4/Asmdude2.v2-0-0-4.vsix). \n\n### Features\n\n#### Syntax highlighting and Code Folding\nAsmDude2 offers support for the following architectures: the instruction sets of x86 and x64, as well as \nSSE, AVX, AVX2, Xeon-Phi (Knights Corner), and AVX-512 instructions.\nMost of the commonly used Masm directives covered, along with a selection of Nasm directives.\n\n![label-analysis](https://github.com/HJLebbink/asm-dude/blob/master/Images/AsmDude2-syntax-highlighting.png?raw=true \"Syntax highlighting\")\n\n#### Code Descriptions\nWhen you hover over a mnemonic, you may receive a pop-up with descriptions. These descriptions \ncan be modified and added by updating the AsmDudeData.xml file, which will be located alongside\nthe installed plugin binaries (.vsix). Finding the directory where plugins are installed can be\na bit challenging; you might want to try a location like C:\\Users<user>\\AppData\\Local\\Microsoft\\VisualStudio\\17.0\\Extensions\\AsmDude2\\2.0.0.1\\Server.\nI kindly encourage you to share any updates you make.\n\n![code-descriptions](https://github.com/HJLebbink/asm-dude/blob/master/Images/AsmDude2-descriptions.png?raw=true \"Code descriptions\")\n\nPlease note that the formatting of the pop-up does not display Markdown (see the known issues)\n\n#### Code Completion \nWhile typing text, the completion lists will be refined to display the relevant \nlanguage keywords. This applies to all keywords. However, please be aware that code suggestions \nmay not be flawless at this stage; only valid code completions should be proposed.\n\n![code-completion](https://github.com/HJLebbink/asm-dude/blob/master/Images/AsmDude2-code-completion.png?raw=true \"Code Completion\")\n\n#### Signature Help\nSignature Help, also referred to as Parameter Info, presents the method's signature in a tooltip when\na user enters the character marking the start of the parameter list (e.g., in C++, an opening parenthesis). \nAs the user types a parameter and a parameter separator (usually a comma), \nthe tooltip is refreshed to display the next parameter in bold.\n\n![label-analysis](https://github.com/HJLebbink/asm-dude/blob/master/Images/AsmDude2-signature-help.png?raw=true \"Signature Help\")\n\n## Disassembly Window in VS\nSyntax highlighting in the disassembly window. No QuickInfo tooltips yet (see known issues)\n\n## Where is the Source (Are you sure this is not a honeypot?!)\nIf you're reading this, you're probably an assembly programmer. However, if you're still interested \nin some C#, or you're just being cautious, you can run the extension from the source code. To do \nthat, you'll need to have the Visual Studio 2022 SDK installed. To run the extension, press F5 or \nselect the 'Debug > Start Debugging' option from the menu. This will launch a new instance of Visual \nStudio under the experimental environment.\n\n### Things For a next release\n* Update instructions for Sapphire Rapids\n* Support AMX\n* Make the LSP gracefully handle large (+10K lines)\n* Restore hyperlinks in mnemonics (from AsmDude)\n* Restore Label Analysis (from AsmDude)\n* Restore AsmSim (from AsmDude)\n\n### Feature Requests: (desire something - let me know)\n* Support AMX\n* Label rename assistance.\n* Code formatting.\n* Track flag influence. Select an opcode that uses a flag (as input), find the opcodes that produce this flag (as output). E.g.  select opcode cmovc or setc , highlight all opcodes such as btr, sal, sar, shl, shr, etc.\n* Register rename assistance. Highly desirable but very challenging. E.g. rename GPR rdx to rbx, find which rdx, edx, dx, dl and dh will need to be renamed, check if renames will clash with existing occurances of rbx, ebx, bx, bl and bh.\n* Arm support.\n* Nasm macros syntax highlighting.\n* Add support for MASM keyword \"comment\".\n* Add syntax highlighting, statement completion and syntax checks for struct member fields.\n* Disassembly window: show memory content from selected address (see [here](https://github.com/HJLebbink/asm-dude/issues/72)).\n* Disassembly window: show memory content of the stack frame and stack pointer (see [here](https://github.com/HJLebbink/asm-dude/issues/72)).\n* Add comment/uncomment functionality (see [Issue](https://github.com/HJLebbink/asm-dude/issues/76)).\n\n### Updates:\n* 21 September 2022: AsmDude2\n\n### Known issues\n* LSP client extension [for Visual Studio 2022](https://www.nuget.org/packages/Microsoft.VisualStudio.LanguageServer.Protocol.Extensions) does not honor Markdown. Please help me and vote for (https://stackoverflow.com/questions/77015711/popup-hover-with-markdown-from-a-language-server-protocol-lsp)\n* Debug window does not trigger requests to the LSP. \n"
        },
        {
          "name": "VS",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}