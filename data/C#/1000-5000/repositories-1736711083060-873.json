{
  "metadata": {
    "timestamp": 1736711083060,
    "page": 873,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "m4rs-mt/ILGPU",
      "stars": 1429,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 8.900390625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\nBin/\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Xx]64/\n[Xx]86/\n[Bb]uild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# TODO: Un-comment the next line if you do not want to checkin\n# your web deploy settings because they may include unencrypted\n# passwords\n#*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directory\nAppPackages/\nBundleArtifacts/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# LightSwitch generated files\nGeneratedArtifacts/\nModelManifest.xml\n\n# Paket dependency manager\n.paket/paket.exe\n\n# FAKE - F# Make\n.fake/\n\n# Rider\n.idea/\n\n# macOS\n.DS_Store\n\n# VSCode\n.vscode/\n\n# Ignore specific template outputs\nSrc/ILGPU/AtomicFunctions.cs\nSrc/ILGPU/Backends/PTX/PTXIntrinsics.Generated.cs\nSrc/ILGPU/Backends/PTX/PTXLibDeviceMethods.cs\nSrc/ILGPU/Backends/PTX/PTXLibDeviceNvvm.cs\nSrc/ILGPU/Backends/Velocity/Scalar/ScalarOperations.cs\nSrc/ILGPU/Backends/Velocity/Vec128/Vec128Operations.cs\nSrc/ILGPU/Backends/Velocity/VelocityIntrinsics.Generated.cs\nSrc/ILGPU/Frontend/Intrinsic/RemappedIntrinsics.Generated.cs\nSrc/ILGPU/HalfConversion.cs\nSrc/ILGPU/IR/Construction/ArithmeticOperations.cs\nSrc/ILGPU/IR/Construction/CompareOperations.cs\nSrc/ILGPU/IR/Intrinsics/IntrinsicMatchers.cs\nSrc/ILGPU/IR/Types/ValueTuples.cs\nSrc/ILGPU/IndexTypes.cs\nSrc/ILGPU/Interop.Generated.cs\nSrc/ILGPU/IntrinsicMath.CPUOnly.cs\nSrc/ILGPU/Memory.cs\nSrc/ILGPU/Runtime/ArrayViewExtensions.Generated.cs\nSrc/ILGPU/Runtime/ArrayViews.cs\nSrc/ILGPU/Runtime/Cuda/CudaArchitecture.Generated.cs\nSrc/ILGPU/Runtime/Cuda/CudaAsm.Generated.cs\nSrc/ILGPU/Runtime/Cuda/CudaDriverVersion.Generated.cs\nSrc/ILGPU/Runtime/Cuda/CudaInstructionSet.Generated.cs\nSrc/ILGPU/Runtime/Cuda/LibDevice.cs\nSrc/ILGPU/Runtime/KernelLoaders.cs\nSrc/ILGPU/Runtime/MemoryBuffers.cs\nSrc/ILGPU/Runtime/PageLockedArrays.Generated.cs\nSrc/ILGPU/Static/ArithmeticEnums.cs\nSrc/ILGPU/Static/CapabilityContext.cs\nSrc/ILGPU/Static/DllImports.cs\nSrc/ILGPU/StrideTypes.cs\nSrc/ILGPU/Util/DataBlocks.cs\nSrc/ILGPU/Util/PrimitiveDataBlocks.cs\n\n# Ignore specific template outputs (Algorithms)\nSrc/ILGPU.Algorithms/AlgorithmContextMappings.cs\nSrc/ILGPU.Algorithms/CL/CLContext.Generated.cs\nSrc/ILGPU.Algorithms/ComparisonOperations.cs\nSrc/ILGPU.Algorithms/FixedPrecision/FixedInts.cs\nSrc/ILGPU.Algorithms/HistogramLaunchers.cs\nSrc/ILGPU.Algorithms/HistogramOperations.cs\nSrc/ILGPU.Algorithms/IL/ILContext.Generated.cs\nSrc/ILGPU.Algorithms/PTX/PTXContext.Generated.cs\nSrc/ILGPU.Algorithms/RadixSortOperations.cs\nSrc/ILGPU.Algorithms/Random/RandomRanges.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuBlasNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuFFTAPI.Generated.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuFFTNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuFFTWAPI.Generated.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuFFTWNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/CuRandNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/NvJpegNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/API/NvmlNativeMethods.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuBlasMethodsLevel1.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuBlasMethodsLevel2.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuBlasMethodsLevel3.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuFFTPlan.Generated.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuFFTW.Generated.cs\nSrc/ILGPU.Algorithms/Runtime/Cuda/CuFFTWPlan.cs\nSrc/ILGPU.Algorithms/ScanReduceOperations.cs\nSrc/ILGPU.Algorithms/Sequencers.cs\nSrc/ILGPU.Algorithms/UniqueLaunchers.cs\nSrc/ILGPU.Algorithms/Vectors/VectorTypes.cs\nSrc/ILGPU.Algorithms/XMath/Cordic.Log.cs\nSrc/ILGPU.Algorithms/XMath/Cordic.Pow.cs\nSrc/ILGPU.Algorithms/XMath/Cordic.Trig.cs\nSrc/ILGPU.Algorithms/XMath/Cordic.cs\nSrc/ILGPU.Algorithms/XMath/RoundingModes.cs\n\n# Generated test source files\nSrc/ILGPU.Tests/Generic/ConfigurationBase.cs\nSrc/ILGPU.Tests/AtomicCASOperations.cs\nSrc/ILGPU.Tests/AtomicOperations.cs\nSrc/ILGPU.Tests/BasicCalls.Generated.cs\nSrc/ILGPU.Tests/BinaryIntOperations.cs\nSrc/ILGPU.Tests/CompareFloatOperations.cs\nSrc/ILGPU.Tests/CompareIntOperations.cs\nSrc/ILGPU.Tests/ConvertFloatOperations.cs\nSrc/ILGPU.Tests/ConvertIntOperations.Generated.cs\nSrc/ILGPU.Tests/FixedBuffers.cs\nSrc/ILGPU.Tests/MemoryBufferOperations.cs\nSrc/ILGPU.Tests/ReinterpretCasts.cs\nSrc/ILGPU.Tests/SpecializedKernels.Generated.cs\nSrc/ILGPU.Tests/UnaryIntOperations.cs\nSrc/ILGPU.Tests/ValueTuples.cs\n\nSrc/ILGPU.Tests/.test.runsettings\nSrc/ILGPU.Tests.CPU/Configurations.cs\nSrc/ILGPU.Tests.Cuda/Configurations.cs\nSrc/ILGPU.Tests.OpenCL/Configurations.cs\nSrc/ILGPU.Tests.Velocity/Configurations.cs\nSrc/ILGPU.Tests.Velocity128/Configurations.cs\n\n# Generated test source files (Algorithms)\nSrc/ILGPU.Algorithms.Tests/Generic/ConfigurationBase.cs\nSrc/ILGPU.Algorithms.Tests/Generic/AlgorithmsTestData.cs\nSrc/ILGPU.Algorithms.Tests/ArrayExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/GroupExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/HistogramTests.cs\nSrc/ILGPU.Algorithms.Tests/PermutationExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/RadixSortExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/RandomTests.cs\nSrc/ILGPU.Algorithms.Tests/ReductionExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/ReorderExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/ScanExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/SequencerTests.cs\nSrc/ILGPU.Algorithms.Tests/TransformerExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/UniqueExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/WarpExtensionTests.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.BitOperations.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Log.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Pow.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Rem.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Rcp.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Round.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Sqrt.cs\nSrc/ILGPU.Algorithms.Tests/XMathTests.Trig.cs\n\nSrc/ILGPU.Algorithms.Tests.CPU/Configurations.cs\nSrc/ILGPU.Algorithms.Tests.Cuda/Configurations.cs\nSrc/ILGPU.Algorithms.Tests.OpenCL/Configurations.cs\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 7.4697265625,
          "content": "# Contributor Code of Conduct\n\nGuiding us in our day-to-day interactions and decision-making are the values of trust, respect, collaboration and transparency. Our community welcomes participants from around the world with different experiences, personalities, unique perspectives, and great ideas to share.\n\nWe expect this code of conduct to be honored by everyone who participates in the ILGPU community formally or informally.\n\nThis code is not exhaustive or complete, and is a living document. It serves to distill our common understanding of a collaborative, shared environment and goals. We expect it to be followed in spirit as much as in the letter, so that it can enrich all of us and the technical communities in which we participate.\n\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. \n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language.\n* Being respectful of differing viewpoints and experiences.\n* Gracefully accepting constructive criticism.\n* Attempting collaboration before conflict.\n* Focusing on what is best for the community.\n* Appreciating time and effort contributed by members.\n* Showing empathy towards other community members.\n\n\nExamples of unacceptable behavior by participants include:\n\n* Violence, threats of violence, or inciting others to commit self-harm.\n* The use of sexualized language or imagery and unwelcome sexual attention or advances.\n* Trolling, intentionally spreading misinformation, insulting/derogatory comments, and personal or political attacks, including [challenging someone’s self-identity](https://lgbtq.technology/culture.html#discussion-of-labels).\n* Public or private [harassment](https://lgbtq.technology/coc.html#harassment), aggression, deliberate intimidation, or threats.\n* [Feigning or exaggerating surprise](https://www.recurse.com/manual#no-feigned-surprise) when someone admits to not knowing something, or excusing a disrespectful communication as “ironic” or “joking”.\n* Publishing others' private information, such as a physical or electronic address, without explicit permission. This includes any sort of “outing” of any aspect of someone’s identity without their consent.\n* Abuse of the reporting process to intentionally harass or exclude others.\n* Advocating for, or encouraging, any of the above behavior.\n* Other conduct which could reasonably be considered inappropriate in a professional or community setting.\n\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\n## Scope\n\nThis Code of Conduct applies both within spaces involving this project and in other spaces involving community members. This includes the repository, its Pull Requests and Issue tracker, its Twitter community, private email communications in the context of the project, and any events where members of the project are participating, as well as adjacent communities and venues affecting the project’s members.\n\nDepending on the violation, the maintainers may decide that violations of this code of conduct that have happened outside of the scope of the community may deem an individual unwelcome, and take appropriate action to maintain the comfort and safety of its members.\n\nAs a project on GitHub, this project is additionally covered by the [GitHub Community Guidelines](https://help.github.com/articles/github-community-guidelines/).\n\n\n## Enforcement\n\nWhile this code of conduct should be adhered to by participants, we recognize that sometimes people may have a bad day, or be unaware of some of the guidelines in this code of conduct. When that happens, or if they are violating this code of conduct, you may reply to them and point out this code of conduct. Such messages may be in public or in private, whatever is most appropriate. However, regardless of whether the message is public or not, it should still adhere to the relevant parts of this code of conduct and itself should not be abusive or disrespectful. Assume good faith; it is more likely that participants are unaware of their bad behaviour than that they intentionally try to degrade the quality of the discussion. \n\nAs a small and young project, we don’t yet have a Code of Conduct enforcement team. We encourage contributors to try to resolve issues with respectful communication - [here is an example of how to do that](https://github.com/fsprojects/fantomas/pull/649#issuecomment-599965505).\n\nShould there be difficulties in dealing with the situation or you are uncomfortable speaking up, unacceptable behavior may be reported to conduct@ilgpu.net. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.\n\nIf you are unsure whether an incident is a violation, or whether the space where the incident took place is covered by our Code of Conduct, we encourage you to still address or report it. We would prefer to have a few extra reports where we decide to take no action than to let an incident go unnoticed and unresolved, resulting in an individual or group feeling like they can no longer participate in the community. Reports deemed as not a violation will also allow us to improve our Code of Conduct and processes surrounding it. \n\nParticipants asked to stop any harassing behavior are expected to comply immediately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## License\n\nThis Code of Conduct is licensed under the [Creative Commons Attribution-ShareAlike 3.0 Unported License](https://creativecommons.org/licenses/by-sa/3.0/).\n\n## Attribution\n\nThis Code of Conduct is informed by and adapted from multiple sources:\n\n* [Apache Code of Conduct](https://www.apache.org/foundation/policies/conduct).\n* [Auth0 Contributor Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md).\n* [Geek Feminism Wiki Anti-Harassment Policy](https://geekfeminism.wikia.org/wiki/Conference_anti-harassment/Policy).\n* [GitHub Community Guidelines](https://help.github.com/en/github/site-policy/github-community-guidelines).\n* [GitHub Contributor Covenant](https://www.contributor-covenant.org/).\n* [LGBTQ in Technology Slack Code of Conduct](http://lgbtq.technology/coc.html).\n* [Python Code of Conduct](https://www.python.org/psf/conduct/).\n* [Recurse Center User’s Manual](https://www.recurse.com/manual#no-feigned-surprise).\n* [Trio Code of Conduct](https://trio.readthedocs.io/en/stable/code-of-conduct.html).\n"
        },
        {
          "name": "Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE-3RD-PARTY.txt",
          "type": "blob",
          "size": 2.3212890625,
          "content": "********************************************************************************\nCopyrights and Licenses for third party dependencies of ILGPU.\nILGPU Dependencies:\n    - System.Collections.Immutable\n    (https://www.nuget.org/packages/System.Collections.Immutable)\n    - System.Memory\n    (https://www.nuget.org/packages/System.Memory)\n    - System.Reflection.Metadata\n    (https://www.nuget.org/packages/System.Reflection.Metadata)\n    - System.Runtime.CompilerServices.Unsafe\n    (https://www.nuget.org/packages/system.runtime.CompilerServices.Unsafe/)\n    - .NET Runtime\n    (https://github.com/dotnet/runtime/)\n********************************************************************************\n\n********************************************************************************\n     ILGPU Compiler Dependency: System.Collections.Immutable\n********************************************************************************\n\nSystem.Collections.Immutable license can be found via:\nhttp://go.microsoft.com/fwlink/?LinkId=329770\n\n********************************************************************************\n     ILGPU Compiler Dependency: System.Memory\n********************************************************************************\n\nSystem.Memory license can be found via:\nhttp://go.microsoft.com/fwlink/?LinkId=329770\n\n********************************************************************************\n     ILGPU Compiler Dependency: System.Reflection.Metadata\n********************************************************************************\n\nSystem.Reflection.Metadata license can be found via:\nhttp://go.microsoft.com/fwlink/?LinkId=329770\n\n********************************************************************************\n     ILGPU Compiler Dependency: System.Runtime.CompilerServices.Unsafe\n********************************************************************************\n\nSystem.Runtime.CompilerServices.Unsafe license can be found via:\nhttp://go.microsoft.com/fwlink/?LinkId=329770\n\n********************************************************************************\n     ILGPU Compiler Dependency: .NET Runtime\n\nFor compatibility with older frameworks, parts of ILGPU makes use of source\ncode for Nullable Attributes from the .NET runtime. This code is licensed\nunder the MIT license, and can be found via:\nhttps://raw.githubusercontent.com/dotnet/runtime/v7.0.0/LICENSE.TXT\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.84375,
          "content": "********************************************************************************\n                                  ILGPU License\n********************************************************************************\nUniversity of Illinois/NCSA Open Source License\nCopyright (c) 2016-2024 ILGPU Project\nAll rights reserved.\n\nDeveloped by:           Marcel Koester (m4rs@m4rs.net)\n                        www.ilgpu.net\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the documentation\n      and/or other materials provided with the distribution.\n\n    * Neither the names of ILGPU, Marcel Koester, nor the names of its\n      contributors may be used to endorse or promote products derived from this\n      Software without specific prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.0810546875,
          "content": "Current maintainers of the project\n\n* [Marcel Köster](https://github.com/m4rs-mt)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.015625,
          "content": "# ILGPU\n[![CI](https://github.com/m4rs-mt/ILGPU/actions/workflows/ci.yml/badge.svg?style=flat&branch=master&event=push)](https://github.com/m4rs-mt/ILGPU/actions/workflows/ci.yml?query=branch%3Amaster+event%3Apush)\n[![](https://img.shields.io/nuget/v/ilgpu?style=flat&label=release)](https://www.nuget.org/packages/ilgpu/latest)\n[![](https://img.shields.io/nuget/vpre/ilgpu?style=flat&label=pre-release)](https://www.nuget.org/packages/ilgpu/absoluteLatest)\n[![](https://img.shields.io/feedz/vpre/ilgpu/preview/ilgpu?style=flat&color=blue&label=preview)](#preview-versions)\n\nILGPU is a JIT (just-in-time) compiler for high-performance GPU programs written in .Net-based languages.\nILGPU is entirely written in C# without any native dependencies.\nIt offers the flexibility and the convenience of C++ AMP on the one hand and the high performance of Cuda programs on the other hand.\nFunctions in the scope of kernels do not have to be annotated (default C# functions) and are allowed to work on value types.\nAll kernels (including all hardware features like shared memory and atomics) can be executed and debugged on the CPU using the integrated multi-threaded CPU accelerator.\n\n# ILGPU.Algorithms\n\nReal-world applications typically require a standard library and a set of standard algorithms that \"simply work\".\nThe ILGPU Algorithms library meets these requirements by offering a set of auxiliary functions and high-level algorithms (e.g. sorting or prefix sum).\nAll algorithms can be run on all supported accelerator types.\nThe CPU accelerator support is especially useful for kernel debugging.\n\n# Community\n[![Discord](https://img.shields.io/discord/511598552179539988?label=ILGPU)](https://discord.gg/X6RBCff)\n\nThe ILGPU community provides immediate help, feedback and suggestions via Discord ASAP.\nLog on to the server and you can get started right away.\n\nThere are weekly *talk-to-dev* meetings on the Discord server.\nDon't hesitate to join the meeting if you have any questions or suggestions or just want to talk to one of the contributors.\nCheck out the *welcome* channel on our Discord server for more information.\n\n# ILGPU Samples\n\nThe sample projects demonstrate the basic usage of ILGPU to help you get started with high performance GPU programming.\n\n# Build Instructions\n\nILGPU requires Visual Studio 2022 (or higher) and/or a .NET 6.0 SDK toolchain.\n\nUse the provided Visual Studio solution to build the ILGPU libs\nin the desired configurations (Debug/Release).\n\n# Tests\n\nSometimes the XUnit test runner stops execution when all tests are run in parallel.\nThis is not a problem related to the internal tests, but a known XUnit/Visual Studio problem.\nIf the tests stop unexpectedly, you can simply run the remaining tests again to continue working.\n\nNote: You can unload ILGPU.Tests.Cuda (for example) if you do not have a Cuda-capable device to\nexecute the Cuda test cases.\n\n# Related Information\n* ILGPU Homepage (www.ilgpu.net)\n* Latest ILGPU Samples (https://github.com/m4rs-mt/ILGPU/tree/master/Samples)\n* Latest ILGPU Documentation (https://github.com/m4rs-mt/ILGPU/tree/master/Docs)\n* Nuget (https://www.nuget.org/packages/ILGPU)\n* Release (https://github.com/m4rs-mt/ILGPU/releases/)\n\n# Preview versions\nPreview/Daily builds are distributed using https://feedz.io/. To pull preview versions into your project, use the following NuGet.config file:\n~~~xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <add key=\"ilgpu\" value=\"https://f.feedz.io/ilgpu/preview/nuget/index.json\" />\n  </packageSources>\n</configuration>\n~~~\n\n# Symbols\n\nSymbols for ILGPU can be [loaded in VS2022](https://docs.microsoft.com/en-us/visualstudio/debugger/specify-symbol-dot-pdb-and-source-files-in-the-visual-studio-debugger).\nFor official releases, ensure that the built-in `NuGet.org Symbol Server` is enabled. For preview release symbols, add the link:\n```\nhttps://f.feedz.io/ilgpu/preview/symbols\n```\n\n# Source Link\n\nILGPU also provides Source Link support for a better debugging experience. Make sure `Enable Source Link support` is activated in [VS2022 options](https://docs.microsoft.com/en-us/visualstudio/debugger/general-debugging-options-dialog-box).\n\n# General Contribution Guidelines\n\n* Make sure that you agree with the general coding style (in terms of braces, whitespaces etc.).\n* Make sure that ILGPU compiles without warnings in all build modes (Debug, DebugVerification and Release).\n\n# References\n\n* Parallel Thread Execution ISA 7.0\n    - NVIDIA\n* A Graph-Based Higher-Order Intermediate Representation\n    - Roland Leissa, Marcel Koester, and Sebastian Hack\n* Target-Specific Refinement of Multigrid Codes\n    - Richard Membarth, Philipp Slusallek, Marcel Koester, Roland Leissa, and Sebastian Hack\n* Code Refinement of Stencil Codes\n    - Marcel Koester, Roland Leissa, Sebastian Hack, Richard Membarth, and Philipp Slusallek\n* Simple and Efficient Construction of Static Single Assignment Form\n    - Matthias Braun, Sebastian Buchwald, Sebastian Hack, Roland Leissa, Christoph Mallon and Andreas Zwinkau\n* A Simple, Fast Dominance Algorithm\n    - Keith D. Cooper, Timothy J. Harvey and Ken Kennedy\n* Fast Half Float Conversions\n    - Jeroen van der Zijp\n* Identifying Loops In Almost Linear Time\n    - G. Ramalingam\n\n# License information\n\nILGPU is licensed under the University of Illinois/NCSA Open Source License.\nDetailed license information can be found in LICENSE.txt.\n\nCopyright (c) 2016-2024 ILGPU Project. All rights reserved.\n\nOriginally developed by Marcel Koester.\n\n## License information of required dependencies\n\nDifferent parts of ILGPU require different third-party libraries.\n* ILGPU Dependencies\n    - System.Collections.Immutable\n    (https://www.nuget.org/packages/System.Collections.Immutable)\n    - System.Memory\n    (https://www.nuget.org/packages/System.Memory)\n    - System.Reflection.Metadata\n    (https://www.nuget.org/packages/System.Reflection.Metadata)\n    - System.Runtime.CompilerServices.Unsafe\n    (https://www.nuget.org/packages/system.runtime.CompilerServices.Unsafe/)\n\nDetailed copyright and license information of these dependencies can be found in\nLICENSE-3RD-PARTY.txt.\n"
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Site",
          "type": "tree",
          "content": null
        },
        {
          "name": "Src",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1044921875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.0\",\n    \"rollForward\": \"latestFeature\",\n    \"allowPrerelease\": false\n  }\n}"
        }
      ]
    }
  ]
}