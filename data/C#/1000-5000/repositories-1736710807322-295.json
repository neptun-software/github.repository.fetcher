{
  "metadata": {
    "timestamp": 1736710807322,
    "page": 295,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "benaadams/Ben.Demystifier",
      "stars": 2806,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.75,
          "content": "# ASP.NET Core EditorConfig file\n\n# NOTE: This file focuses on settings Visual Studio 2017 supports natively. For example, VS does not support insert_final_newline.\n# We do use it, but it's harder to enforce without a separate VS extension or an editor that supports it.\n# See https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options for more\n\n# Mark this file as the \"root\" for everything below this point. This means that editor config files above\n# this file will be ignored\nroot = true\n\n# Default settings\n[*]\nindent_style = space\nindent_size = 4\ncharset = utf-8\ninsert_final_newline = true\n\n# Unix-only files\n[*.sh]\nend_of_line = lf\n\n# 2-space files\n[{*.json,*.yml}]\nindent_size = 2\n\n# .NET Code Style Settings\n# See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference\n# REVIEW: Should these be errors? warnings? suggestions?\n[{*.cs,*.vb}]\ndotnet_sort_system_directives_first = true\n\n# Don't use 'this.'/'Me.' prefix for anything\ndotnet_style_qualification_for_field = false:error\ndotnet_style_qualification_for_property = false:error\ndotnet_style_qualification_for_method = false:error\ndotnet_style_qualification_for_event = false:error\n\n# Use language keywords over framework type names for type references\n# i.e. prefer 'string' over 'String'\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Prefer object/collection initializers\n# This is a suggestion because there are cases where this is necessary\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\n\n# C# 7: Prefer using named tuple names over '.Item1', '.Item2', etc.\ndotnet_style_explicit_tuple_names = true:error\n\n# Prefer using 'foo ?? bar' over 'foo != null ? foo : bar'\ndotnet_style_coalesce_expression = true:error\n\n# Prefer using '?.' over ternary null checking where possible\ndotnet_style_null_propagation = true:error\n\n# Use 'var' in all cases where it can be used\ncsharp_style_var_for_built_in_types = true:error\ncsharp_style_var_when_type_is_apparent = true:error\ncsharp_style_var_elsewhere = true:error\n\n# C# 7: Prefer using pattern matching over \"if(x is T) { var t = (T)x; }\" and \"var t = x as T; if(t != null) { ... }\"\n# REVIEW: Since this is a new C# 7 feature that replaces an existing pattern, I'm making it a suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:warning\ncsharp_style_pattern_matching_over_as_with_null_check = true:warning\n\n# C# 7: Prefer using 'out var' where possible\n# REVIEW: Since this is a new C# 7 feature that replaces an existing pattern, I'm making it a suggestion\ncsharp_style_inlined_variable_declaration = true:error\n\n# C# 7: Use throw expressions when null-checking\n# @davidfowl hates them :)\ncsharp_style_throw_expression = false:error\n\n# Prefer using \"func?.Invoke(args)\" over \"if(func != null) { func(args); }\"\n# REVIEW: Maybe an error?\ncsharp_style_conditional_delegate_call = true:error\n\n# Newline settings\n# Unsure where docs are. Got these from https://github.com/dotnet/roslyn/blob/master/.editorconfig\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\n\n# Prefer expression-bodied methods, constructors, operators, etc.\ncsharp_style_expression_bodied_methods = true:suggestion\ncsharp_style_expression_bodied_constructors = true:suggestion\ncsharp_style_expression_bodied_operators = true:suggestion\ncsharp_style_expression_bodied_properties = true:suggestion\ncsharp_style_expression_bodied_indexers = true:suggestion\ncsharp_style_expression_bodied_accessors = true:suggestion"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.7451171875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\nBenchmarkDotNet.Artifacts/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n"
        },
        {
          "name": "Ben.Demystifier.sln",
          "type": "blob",
          "size": 4.248046875,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.27019.1\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{A2FCCAAC-BE90-4F7E-B95F-A72D46DDD6B3}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{59CA6310-4AA5-4093-95D4-472B94DC0CD4}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Ben.Demystifier\", \"src\\Ben.Demystifier\\Ben.Demystifier.csproj\", \"{5410A056-89AB-4912-BD1E-A63616AD91D0}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Ben.Demystifier.Test\", \"test\\Ben.Demystifier.Test\\Ben.Demystifier.Test.csproj\", \"{B9E150B0-AEEB-4D98-8BE1-92C1296699A2}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"sample\", \"sample\", \"{455921D3-DD54-4355-85CF-F4009DF2AB70}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"StackTrace\", \"sample\\StackTrace\\StackTrace.csproj\", \"{E161FC12-53C2-47CD-A5FC-3684B86723A9}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{5937ACDF-0059-488E-9604-D84689C72933}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tappveyor.yml = appveyor.yml\n\t\tbuild.ps1 = build.ps1\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tREADME.md = README.md\n\t\tversion.json = version.json\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Ben.Demystifier.Benchmarks\", \"test\\Ben.Demystifier.Benchmarks\\Ben.Demystifier.Benchmarks.csproj\", \"{EF5557DF-C48E-4999-846C-D99A92E86373}\"\nEndProject\nProject(\"{F2A71F9B-5D33-465A-A702-920D77279786}\") = \"FSharpStackTrace\", \"sample\\FSharpStackTrace\\FSharpStackTrace.fsproj\", \"{D6B779D2-A678-47CC-A2F9-A312292EA7A2}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{5410A056-89AB-4912-BD1E-A63616AD91D0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5410A056-89AB-4912-BD1E-A63616AD91D0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5410A056-89AB-4912-BD1E-A63616AD91D0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5410A056-89AB-4912-BD1E-A63616AD91D0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{B9E150B0-AEEB-4D98-8BE1-92C1296699A2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B9E150B0-AEEB-4D98-8BE1-92C1296699A2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B9E150B0-AEEB-4D98-8BE1-92C1296699A2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B9E150B0-AEEB-4D98-8BE1-92C1296699A2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E161FC12-53C2-47CD-A5FC-3684B86723A9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E161FC12-53C2-47CD-A5FC-3684B86723A9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E161FC12-53C2-47CD-A5FC-3684B86723A9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E161FC12-53C2-47CD-A5FC-3684B86723A9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EF5557DF-C48E-4999-846C-D99A92E86373}.Debug|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EF5557DF-C48E-4999-846C-D99A92E86373}.Debug|Any CPU.Build.0 = Release|Any CPU\n\t\t{EF5557DF-C48E-4999-846C-D99A92E86373}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EF5557DF-C48E-4999-846C-D99A92E86373}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D6B779D2-A678-47CC-A2F9-A312292EA7A2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D6B779D2-A678-47CC-A2F9-A312292EA7A2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D6B779D2-A678-47CC-A2F9-A312292EA7A2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D6B779D2-A678-47CC-A2F9-A312292EA7A2}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{5410A056-89AB-4912-BD1E-A63616AD91D0} = {A2FCCAAC-BE90-4F7E-B95F-A72D46DDD6B3}\n\t\t{B9E150B0-AEEB-4D98-8BE1-92C1296699A2} = {59CA6310-4AA5-4093-95D4-472B94DC0CD4}\n\t\t{E161FC12-53C2-47CD-A5FC-3684B86723A9} = {455921D3-DD54-4355-85CF-F4009DF2AB70}\n\t\t{EF5557DF-C48E-4999-846C-D99A92E86373} = {59CA6310-4AA5-4093-95D4-472B94DC0CD4}\n\t\t{D6B779D2-A678-47CC-A2F9-A312292EA7A2} = {455921D3-DD54-4355-85CF-F4009DF2AB70}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {841B7D5F-E810-4F94-A529-002C7E075216}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.3994140625,
          "content": "ï»¿<Project>\n  <PropertyGroup>\n    <LangVersion>latest</LangVersion>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include=\"Nullable\" Version=\"1.3.0\" PrivateAssets=\"All\" />\n  </ItemGroup>\n  <PropertyGroup Condition=\"'$(GITHUB_ACTIONS)' == 'true'\">\n    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.1953125,
          "content": "# Ben.Demystifier\n[![NuGet version (Ben.Demystifier)](https://img.shields.io/nuget/v/Ben.Demystifier.svg?style=flat-square)](https://www.nuget.org/packages/Ben.Demystifier/)\n[![build](https://github.com/benaadams/Ben.Demystifier/workflows/Demystifier%20PR%20Build/badge.svg)](https://github.com/benaadams/Ben.Demystifier/actions)\n\nOutput the modern C# 7.0+ features in stack traces that looks like the C# source code that generated them rather than IL formatted.\n\n## High performance understanding for stack traces \n\n.NET stack traces output the compiler transformed methods; rather than the source code methods, which make them slow to mentally parse and match back to the source code.\n\nThe current output was good for C# 1.0; but has become progressively worse since C# 2.0 (iterators, generics) as new features are added to the .NET languages and at C# 7.1 the stack traces are esoteric (see: [Problems with current stack traces](#problems-with-current-stack-traces)).\n\n### Make error logs more productive\n\nOutput the modern C# 7.0+ features in stack traces in an understandable fashion that looks like the C# source code that generated them.\n\n[![Demystified stacktrace](https://aoa.blob.core.windows.net/aspnet/stacktrace-demystified.png)](https://aoa.blob.core.windows.net/aspnet/stacktrace-demystified.png)\n\n### Usage\n\n```\nexception.Demystify()\n```\nOr instead of Environment.StackTrace\n```\nEnhancedStackTrace.Current()\n```\nResolves the stack back to the C# source format of the calls (and is an inspectable list of stack frames)\n\nCalling `.ToString()` on the Demystified exception will produce a string stacktrace similar to the following (without the comments):\n\n```csharp\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\n   at bool System.Collections.Generic.List<T>+Enumerator.MoveNextRare()\n   at IEnumerable<string> Program.Iterator(int startAt)+MoveNext()                       // Resolved enumerator\n   at bool System.Linq.Enumerable+SelectEnumerableIterator<TSource, TResult>.MoveNext()  // Resolved enumerator\n   at string string.Join(string separator, IEnumerable<string> values)                    \n   at string Program+GenericClass<TSuperType>.GenericMethod<TSubType>(ref TSubType value) \n   at async Task<string> Program.MethodAsync(int value)                                  // Resolved async \n   at async Task<string> Program.MethodAsync<TValue>(TValue value)                       // Resolved async \n   at string Program.Method(string value)+()=>{} [0]                                     // lambda source + ordinal\n   at string Program.Method(string value)+()=>{} [1]                                     // lambda source + ordinal \n   at string Program.RunLambda(Func<string> lambda)                                       \n   at (string val, bool) Program.Method(string value)                                    // Tuple returning\n   at ref string Program.RefMethod(in string value)+LocalFuncRefReturn()                 // ref return local func\n   at int Program.RefMethod(in string value)+LocalFuncParam(string val)                  // local function\n   at string Program.RefMethod(in string value)                                          // in param (readonly ref)    \n   at (string val, bool) static Program()+(string s, bool b)=>{}                         // tuple return static lambda\n   at void static Program()+(string s, bool b)=>{}                                       // void static lambda\n   at void Program.Start((string val, bool) param)                                       // Resolved tuple param\n   at void Program.Start((string val, bool) param)+LocalFunc1(long l)                    // void local function \n   at bool Program.Start((string val, bool) param)+LocalFunc2(bool b1, bool b2)          // bool return local function \n   at string Program.Start()                                                              \n   at void Program()+()=>{}                                                              // ctor defined lambda  \n   at void Program(Action action)+(object state)=>{}                                     // ctor defined lambda \n   at void Program.RunAction(Action<object> lambda, object state)                         \n   at new Program(Action action)                                                         // constructor \n   at new Program()                                                                      // constructor \n   at void Program.Main(String[] args)                                                    \n```\n\nCalling `.ToString()` on the same exception would produce the following output\n\n```csharp\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\n   at System.ThrowHelper.ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion() // ? low value\n   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()                         \n   at Program.<Iterator>d__3.MoveNext()                                                   // which enumerator?\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()                        // which enumerator?\n   at System.String.Join(String separator, IEnumerable`1 values)                          \n   at Program.GenericClass`1.GenericMethod[TSubType](TSubType& value)                     \n   at Program.<MethodAsync>d__4.MoveNext()                                                // which async overload?\n--- End of stack trace from previous location where exception was thrown ---              // ? no value\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()                      // ? no value\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) // ? no value\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()                           // ? no value\n   at Program.<MethodAsync>d__5`1.MoveNext()                                              // which async overload?\n--- End of stack trace from previous location where exception was thrown ---              // ? no value\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()                      // ? no value\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) // ? no value\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()                           // ? no value\n   at Program.<>c__DisplayClass8_0.<Method>b__0()                                         //  Â¯\\_(ã)_/Â¯\n   at Program.<>c__DisplayClass8_0.<Method>b__1()                                         //  Â¯\\_(ã)_/Â¯\n   at Program.RunLambda(Func`1 lambda) \n   at Program.Method(String value)\n   at Program.<RefMethod>g__LocalFuncRefReturn|10_1(<>c__DisplayClass10_0& )              // local function\n   at Program.<RefMethod>g__LocalFuncParam|10_0(String val, <>c__DisplayClass10_0& )      // local function\n   at Program.RefMethod(String value)\n   at Program.<>c.<.cctor>b__18_1(String s, Boolean b)                                    //  Â¯\\_(ã)_/Â¯\n   at Program.<>c.<.cctor>b__18_0(String s, Boolean b)                                    //  Â¯\\_(ã)_/Â¯\n   at Program.Start(ValueTuple`2 param)                                                   // Tuple param?\n   at Program.<Start>g__LocalFunc1|11_0(Int64 l)                                          // local function\n   at Program.<Start>g__LocalFunc2|11_1(Boolean b1, Boolean b2)                           // local function\n   at Program.Start()\n   at Program.<>c.<.ctor>b__1_0()                                                         //  Â¯\\_(ã)_/Â¯\n   at Program.<>c__DisplayClass2_0.<.ctor>b__0(Object state)                              //  Â¯\\_(ã)_/Â¯\n   at Program.RunAction(Action`1 lambda, Object state)\n   at Program..ctor(Action action)                                                        // constructor\n   at Program..ctor()                                                                     // constructor\n   at Program.Main(String[] args)\n```\nWhich is far less helpful, and close to jibberish in places\n\n\n### Problems with current stack traces: \n\n* **constructors** \n\n   Does not match code, output as `.ctor` and `.cctor`\n   \n* **parameters** \n\n   Do not specify qualifier `ref`, `out` or `in`\n   \n* **iterators** \n\n   Cannot determine overload `<Iterator>d__3.MoveNext()` rather than `Iterator(int startAt)+MoveNext()`\n* **Linq**\n\n   Cannot determine overload \n   \n   `Linq.Enumerable.SelectEnumerableIterator``2.MoveNext()` \n   \n   rather than\n   \n   `Linq.Enumerable+SelectEnumerableIterator<TSource, TResult>.MoveNext()`\n* **async**\n\n   Cannot determine overload and no modifier such as `async` \n   \n   `<MethodAsync>d__5``1.MoveNext()` \n   \n   rather than\n   \n   `async Task<string> Program.MethodAsync(int value)`\n\n   Noise!\n   ```\n   --- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task) \n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult() \n   ```\n\n* **lambdas**\n\n   Mostly jibberish `<>c__DisplayClass2_0.<.ctor>b__0(Object state)` with a suggestion of where they are declared but no hint if there are multiple overloads of the method.\n* **local functions**\n\n   Mostly jibberish `<RefMethod>g__LocalFuncParam|10_0(String val, <>c__DisplayClass10_0& )` with a suggestion of where they are declared but no hint if there are multiple overloads of the method.\n   \n* **generic parameters**\n\n   Not resolved, only an indication of the number `RunLambda(Func``1 lambda)` rather than `RunLambda(Func<string> lambda)`\n* **value tuples**\n\n   Do not match code, output as `ValueTuple``2 param` rather than `(string val, bool) param`\n* **primitive types**\n\n   Do not match code, output as `Int64`, `Boolean`, `String` rather than `long`, `bool`, `string`\n* **return types**\n\n   Skipped entirely from method signature\n\n### Benchmarks\n\nTo run benchmarks from the repository root:\n```\ndotnet run -p .\\test\\Ben.Demystifier.Benchmarks\\ -c Release -f netcoreapp2.0 All\n```\n<sub>Note: we're only kicking off via `netcoreapp2.0`, benchmarks will run for all configured platforms like `net462`.</sub>\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.93359375,
          "content": "<#  \n.SYNOPSIS\n  This is a helper function that runs a scriptblock and checks the PS variable $lastexitcode\n  to see if an error occcured. If an error is detected then an exception is thrown.\n  This function allows you to run command-line programs without having to\n  explicitly check the $lastexitcode variable.\n.EXAMPLE\n  exec { svn info $repository_trunk } \"Error executing SVN. Please verify SVN command-line client is installed\"\n#>\nfunction Exec  \n{\n    [CmdletBinding()]\n    param(\n        [Parameter(Position=0,Mandatory=1)][scriptblock]$cmd,\n        [Parameter(Position=1,Mandatory=0)][string]$errorMessage = ($msgs.error_bad_command -f $cmd)\n    )\n    & $cmd\n    if ($lastexitcode -ne 0) {\n        throw (\"Exec: \" + $errorMessage)\n    }\n}\n\nif(Test-Path .\\artifacts) { Remove-Item .\\artifacts -Force -Recurse }\n\nexec { & dotnet test .\\test\\Ben.Demystifier.Test -c Release }\n\nexec { & dotnet pack .\\src\\Ben.Demystifier -c Release -o .\\artifacts }  \n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.json",
          "type": "blob",
          "size": 0.380859375,
          "content": "{\n  \"version\": \"0.4.1\",\n  \"publicReleaseRefSpec\": [\n    \"^refs/heads/main\", // we release out of master\n    \"^refs/heads/dev$\", // we release out of develop\n    \"^refs/tags/v\\\\d+\\\\.\\\\d+\" // we also release tags starting with vN.N\n  ],\n  \"nugetPackageVersion\":{\n    \"semVer\": 2\n  },\n  \"cloudBuild\": {\n    \"buildNumber\": {\n      \"enabled\": true,\n      \"setVersionVariables\": true\n    }\n  }\n}\n"
        }
      ]
    }
  ]
}