{
  "metadata": {
    "timestamp": 1736710868715,
    "page": 423,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thepirat000/Audit.NET",
      "stars": 2341,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.2333984375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\nDocs/\n/src/StrongName/Audit.NET.snk"
        },
        {
          "name": "Audit.NET.sln",
          "type": "blob",
          "size": 63.77734375,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.32014.148\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{E62475E8-0BE1-4464-BBD9-FD06CC546593}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{A5617401-3C5E-4B37-85B0-F33D41F6BEEE}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tCHANGELOG.md = CHANGELOG.md\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\t\tREADME.md = README.md\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{A54B4BB6-3439-432B-AFD9-FE62D6528D42}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WebApi.UnitTest\", \"test\\Audit.WebApi.UnitTest\\Audit.WebApi.UnitTest.csproj\", \"{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Mvc.UnitTest\", \"test\\Audit.Mvc.UnitTest\\Audit.Mvc.UnitTest.csproj\", \"{2E268670-CC83-471E-8A44-92756342140B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET\", \"src\\Audit.NET\\Audit.NET.csproj\", \"{95370B23-ED59-420A-B22C-722BF38DEF42}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.MongoDB\", \"src\\Audit.NET.MongoDB\\Audit.NET.MongoDB.csproj\", \"{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.SqlServer\", \"src\\Audit.NET.SqlServer\\Audit.NET.SqlServer.csproj\", \"{D6C86273-942B-4BE7-8764-FA4567F19C9A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WebApi\", \"src\\Audit.WebApi\\Audit.WebApi.csproj\", \"{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Mvc\", \"src\\Audit.Mvc\\Audit.Mvc.csproj\", \"{1F1C8626-C84B-45F6-9E84-F639212CCB2A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework\", \"src\\Audit.EntityFramework\\Audit.EntityFramework.csproj\", \"{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WCF\", \"src\\Audit.WCF\\Audit.WCF.csproj\", \"{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.AzureStorage\", \"src\\Audit.NET.AzureStorage\\Audit.NET.AzureStorage.csproj\", \"{F878E251-8172-4CF1-9F2F-9DFC348453E7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.DynamicProxy\", \"src\\Audit.DynamicProxy\\Audit.DynamicProxy.csproj\", \"{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.DynamicProxy.UnitTest\", \"test\\Audit.DynamicProxy.UnitTest\\Audit.DynamicProxy.UnitTest.csproj\", \"{C60DF995-E82A-4137-9779-DBB5B21FFD4D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.MySql\", \"src\\Audit.NET.MySql\\Audit.NET.MySql.csproj\", \"{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Udp\", \"src\\Audit.NET.Udp\\Audit.NET.Udp.csproj\", \"{0FFD2976-B8EB-4A65-982C-BE4546502C5A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Redis\", \"src\\Audit.NET.Redis\\Audit.NET.Redis.csproj\", \"{A52C51C4-B236-45D5-ADFA-54FD51A3605A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Redis.UnitTest\", \"test\\Audit.Redis.UnitTest\\Audit.Redis.UnitTest.csproj\", \"{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework.Core\", \"src\\Audit.EntityFramework.Core\\Audit.EntityFramework.Core.csproj\", \"{6C3586EB-84E7-49BB-A356-1C36E85206BE}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.PostgreSql\", \"src\\Audit.NET.PostgreSql\\Audit.NET.PostgreSql.csproj\", \"{109878E3-07D9-4C96-9F8B-17B898D25734}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.FileSystem\", \"src\\Audit.FileSystem\\Audit.FileSystem.csproj\", \"{E49DA113-C5E1-4800-8AF7-A975D50D367F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.SignalR\", \"src\\Audit.SignalR\\Audit.SignalR.csproj\", \"{9F750B91-695D-402A-9570-074D25BB4660}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WebApi.Core\", \"src\\Audit.WebApi.Core\\Audit.WebApi.Core.csproj\", \"{16A5ED20-48BE-484B-8780-43693A3CFF6C}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Mvc.Core\", \"src\\Audit.Mvc.Core\\Audit.Mvc.Core.csproj\", \"{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.log4net\", \"src\\Audit.NET.log4net\\Audit.NET.log4net.csproj\", \"{35345A58-3DE6-4ACF-8951-E8B8DD71E876}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Elasticsearch\", \"src\\Audit.NET.ElasticSearch\\Audit.NET.Elasticsearch.csproj\", \"{51E07A8D-EE59-40EC-BE57-736BE91AD548}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.UnitTest\", \"test\\Audit.UnitTest\\Audit.UnitTest.csproj\", \"{A9877617-7CE9-43F8-A8BD-F2B1B501C652}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.EventLog.Core\", \"src\\Audit.NET.EventLog.Core\\Audit.NET.EventLog.Core.csproj\", \"{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework.Core.UnitTest\", \"test\\Audit.EntityFramework.Core.UnitTest\\Audit.EntityFramework.Core.UnitTest.csproj\", \"{891B030F-5332-42D3-8C82-18CB29C3A7BD}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"templates\", \"templates\", \"{47AB2E9F-353B-4C6E-B04A-6622DE5F407D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Mvc.Template\", \"templates\\MVC\\content\\Audit.Mvc.Template\\Audit.Mvc.Template.csproj\", \"{5A71A8BD-791E-4FE3-8FB7-B2122115056D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WebApi.Template\", \"templates\\WebApi\\content\\Audit.WebApi.Template\\Audit.WebApi.Template.csproj\", \"{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"WebApi\", \"WebApi\", \"{C874D041-824A-4B4B-A27B-851E7B387AED}\"\n\tProjectSection(SolutionItems) = preProject\n\t\ttemplates\\WebApi\\Audit.WebApi.Template.nuspec = templates\\WebApi\\Audit.WebApi.Template.nuspec\n\t\ttemplates\\WebApi\\content\\Audit.WebApi.Template\\.template.config\\template.json = templates\\WebApi\\content\\Audit.WebApi.Template\\.template.config\\template.json\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Mvc\", \"Mvc\", \"{544B332C-74C2-46AE-8298-3FBB3D4E847A}\"\n\tProjectSection(SolutionItems) = preProject\n\t\ttemplates\\MVC\\Audit.Mvc.Template.nuspec = templates\\MVC\\Audit.Mvc.Template.nuspec\n\t\ttemplates\\MVC\\content\\Audit.Mvc.Template\\.template.config\\template.json = templates\\MVC\\content\\Audit.Mvc.Template\\.template.config\\template.json\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.DynamoDB\", \"src\\Audit.NET.DynamoDB\\Audit.NET.DynamoDB.csproj\", \"{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework.Identity\", \"src\\Audit.EntityFramework.Identity\\Audit.EntityFramework.Identity.csproj\", \"{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework.Identity.Core\", \"src\\Audit.EntityFramework.Identity.Core\\Audit.EntityFramework.Identity.Core.csproj\", \"{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.HttpClient\", \"src\\Audit.HttpClient\\Audit.HttpClient.csproj\", \"{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.NLog\", \"src\\Audit.NET.NLog\\Audit.NET.NLog.csproj\", \"{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.EntityFramework.Full.UnitTest\", \"test\\Audit.EntityFramework.Full.UnitTest\\Audit.EntityFramework.Full.UnitTest.csproj\", \"{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.AmazonQLDB\", \"src\\Audit.NET.AmazonQLDB\\Audit.NET.AmazonQLDB.csproj\", \"{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Kafka\", \"src\\Audit.NET.Kafka\\Audit.NET.Kafka.csproj\", \"{A784FB5C-4097-40FC-9CD5-D97AED2A743D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.AzureCosmos\", \"src\\Audit.NET.AzureCosmos\\Audit.NET.AzureCosmos.csproj\", \"{78784E1E-CFFB-47F1-A585-286CD470542B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.JsonNewtonsoftAdapter\", \"src\\Audit.NET.JsonNewtonsoftAdapter\\Audit.NET.JsonNewtonsoftAdapter.csproj\", \"{7547EDD0-241B-48D4-A07D-29CF38A945BA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.JsonAdapter.UnitTest\", \"test\\Audit.JsonAdapter.UnitTest\\Audit.JsonAdapter.UnitTest.csproj\", \"{D4F8D570-565F-45FA-8313-42984E88258D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.WCF.Client\", \"src\\Audit.WCF.Client\\Audit.WCF.Client.csproj\", \"{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Wcf.UnitTest\", \"test\\Audit.Wcf.UnitTest\\Audit.Wcf.UnitTest.csproj\", \"{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.AzureStorageBlobs\", \"src\\Audit.NET.AzureStorageBlobs\\Audit.NET.AzureStorageBlobs.csproj\", \"{18423ECF-EF88-4145-9582-A894A096C1E8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.RavenDB\", \"src\\Audit.NET.RavenDB\\Audit.NET.RavenDB.csproj\", \"{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.RavenDB.UnitTest\", \"test\\Audit.RavenDB.UnitTest\\Audit.RavenDB.UnitTest.csproj\", \"{0A61745A-5FF6-43A1-9634-FE029217A4E4}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.AzureStorageTables\", \"src\\Audit.NET.AzureStorageTables\\Audit.NET.AzureStorageTables.csproj\", \"{934D38BE-7631-430F-B274-07152767F58F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.AzureStorageTables.UnitTest\", \"test\\Audit.AzureStorageTables.UnitTest\\Audit.AzureStorageTables.UnitTest.csproj\", \"{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Serilog\", \"src\\Audit.NET.Serilog\\Audit.NET.Serilog.csproj\", \"{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.SqlServer.UnitTest\", \"test\\Audit.SqlServer.UnitTest\\Audit.SqlServer.UnitTest.csproj\", \"{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.MongoClient\", \"src\\Audit.MongoClient\\Audit.MongoClient.csproj\", \"{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.MongoClient.UnitTest\", \"test\\Audit.MongoClient.UnitTest\\Audit.MongoClient.UnitTest.csproj\", \"{5B3DADC7-981D-42A0-A155-4C3F26DB1991}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.FileSystem.UnitTest\", \"test\\Audit.FileSystem.UnitTest\\Audit.FileSystem.UnitTest.csproj\", \"{9F86985D-E08E-4E87-AE3C-5703774B8FCA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.HttpClient.UnitTest\", \"test\\Audit.HttpClient.UnitTest\\Audit.HttpClient.UnitTest.csproj\", \"{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.AzureCosmos.UnitTest\", \"test\\Audit.AzureCosmos.UnitTest\\Audit.AzureCosmos.UnitTest.csproj\", \"{C4EEAE98-1596-4177-B821-308DEA359A78}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.AzureStorageBlobs.UnitTest\", \"test\\Audit.AzureStorageBlobs.UnitTest\\Audit.AzureStorageBlobs.UnitTest.csproj\", \"{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.DynamoDB.UnitTest\", \"test\\Audit.DynamoDB.UnitTest\\Audit.DynamoDB.UnitTest.csproj\", \"{C0186428-77E9-4317-AE5E-08141D8CADAF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Elasticsearch.UnitTest\", \"test\\Audit.Elasticsearch.UnitTest\\Audit.Elasticsearch.UnitTest.csproj\", \"{04D5CCB9-E095-40D3-9986-C1E41D8F638F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Kafka.UnitTest\", \"test\\Audit.Kafka.UnitTest\\Audit.Kafka.UnitTest.csproj\", \"{F812D4F7-322D-48D0-A275-1AEC6978ED23}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.MongoDB.UnitTest\", \"test\\Audit.MongoDB.UnitTest\\Audit.MongoDB.UnitTest.csproj\", \"{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.MySql.UnitTest\", \"test\\Audit.MySql.UnitTest\\Audit.MySql.UnitTest.csproj\", \"{D81558A2-EC45-4526-88E2-F385D42E79E6}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.PostgreSql.UnitTest\", \"test\\Audit.PostgreSql.UnitTest\\Audit.PostgreSql.UnitTest.csproj\", \"{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Serilog.UnitTest\", \"test\\Audit.Serilog.UnitTest\\Audit.Serilog.UnitTest.csproj\", \"{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.AmazonQLDB.UnitTest\", \"test\\Audit.AmazonQLDB.UnitTest\\Audit.AmazonQLDB.UnitTest.csproj\", \"{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Wcf.Client.UnitTest\", \"test\\Audit.Wcf.Client.UnitTest\\Audit.Wcf.Client.UnitTest.csproj\", \"{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.AspNetCore.UnitTest\", \"test\\Audit.AspNetCore.UnitTest\\Audit.AspNetCore.UnitTest.csproj\", \"{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Polly\", \"src\\Audit.NET.Polly\\Audit.NET.Polly.csproj\", \"{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.Polly.UnitTest\", \"test\\Audit.Polly.UnitTest\\Audit.Polly.UnitTest.csproj\", \"{E3097E23-9191-4028-83F2-D231590563FD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Audit.NET.Channels\", \"src\\Audit.NET.Channels\\Audit.NET.Channels.csproj\", \"{5574EA92-47A5-4483-BF7E-89231D38D318}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Audit.EntityFramework.Abstractions\", \"src\\Audit.EntityFramework.Abstractions\\Audit.EntityFramework.Abstractions.csproj\", \"{59DE2732-27CE-43D3-BFE7-055C51714731}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2E268670-CC83-471E-8A44-92756342140B}.Release|x64.Build.0 = Release|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA}.Release|x64.Build.0 = Release|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3}.Release|x64.Build.0 = Release|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93}.Release|x64.Build.0 = Release|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0}.Release|x64.Build.0 = Release|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF}.Release|x64.Build.0 = Release|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE}.Release|x64.Build.0 = Release|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734}.Release|x64.Build.0 = Release|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9F750B91-695D-402A-9570-074D25BB4660}.Release|x64.Build.0 = Release|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C}.Release|x64.Build.0 = Release|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6}.Release|x64.Build.0 = Release|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876}.Release|x64.Build.0 = Release|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548}.Release|x64.Build.0 = Release|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652}.Release|x64.Build.0 = Release|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66}.Release|x64.Build.0 = Release|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB}.Release|x64.Build.0 = Release|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683}.Release|x64.Build.0 = Release|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1}.Release|x64.Build.0 = Release|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1}.Release|x64.Build.0 = Release|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B}.Release|x64.Build.0 = Release|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D}.Release|x64.Build.0 = Release|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96}.Release|x64.Build.0 = Release|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4}.Release|x64.Build.0 = Release|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{934D38BE-7631-430F-B274-07152767F58F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9}.Release|x64.Build.0 = Release|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8}.Release|x64.Build.0 = Release|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991}.Release|x64.Build.0 = Release|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A}.Release|x64.Build.0 = Release|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78}.Release|x64.Build.0 = Release|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9}.Release|x64.Build.0 = Release|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF}.Release|x64.Build.0 = Release|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23}.Release|x64.Build.0 = Release|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6}.Release|x64.Build.0 = Release|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4}.Release|x64.Build.0 = Release|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8}.Release|x64.Build.0 = Release|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551}.Release|x64.Build.0 = Release|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09}.Release|x64.Build.0 = Release|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78}.Release|x64.Build.0 = Release|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E3097E23-9191-4028-83F2-D231590563FD}.Release|x64.Build.0 = Release|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318}.Release|x64.Build.0 = Release|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731}.Release|x64.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{8A6C8B84-2C46-4CC2-A291-D606E1656FF7} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{2E268670-CC83-471E-8A44-92756342140B} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{95370B23-ED59-420A-B22C-722BF38DEF42} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{D3CEDE4E-620B-40A8-9FFF-E083B3CC6D41} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{D6C86273-942B-4BE7-8764-FA4567F19C9A} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{5D3052CA-00E0-4FCF-9DE0-BD8CBFDAE5DA} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{1F1C8626-C84B-45F6-9E84-F639212CCB2A} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{0E1077B5-0166-46AE-BD6D-7CCEA001D1A3} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{6A20E5D4-1E8C-4155-9AA3-D9346A6FAC93} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{F878E251-8172-4CF1-9F2F-9DFC348453E7} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{0193EA15-7307-4D7F-A7B1-C9EC00686FA0} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{C60DF995-E82A-4137-9779-DBB5B21FFD4D} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{E66283AC-59E0-4BA7-AC5D-F1DAC08F965D} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{0FFD2976-B8EB-4A65-982C-BE4546502C5A} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{A52C51C4-B236-45D5-ADFA-54FD51A3605A} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{F0CA6B9F-0586-4F2A-B895-09CCB45C6FFF} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{6C3586EB-84E7-49BB-A356-1C36E85206BE} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{109878E3-07D9-4C96-9F8B-17B898D25734} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{E49DA113-C5E1-4800-8AF7-A975D50D367F} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{9F750B91-695D-402A-9570-074D25BB4660} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{16A5ED20-48BE-484B-8780-43693A3CFF6C} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{19A96BB9-0FF0-48C5-9DB1-6ED902422EC6} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{35345A58-3DE6-4ACF-8951-E8B8DD71E876} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{51E07A8D-EE59-40EC-BE57-736BE91AD548} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{A9877617-7CE9-43F8-A8BD-F2B1B501C652} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{8CFEFBC8-36E4-4B29-8CA7-C0A8C89DAF66} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{891B030F-5332-42D3-8C82-18CB29C3A7BD} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{5A71A8BD-791E-4FE3-8FB7-B2122115056D} = {544B332C-74C2-46AE-8298-3FBB3D4E847A}\n\t\t{D37736EB-5A3F-4D5B-BCF4-45B04BD187EB} = {C874D041-824A-4B4B-A27B-851E7B387AED}\n\t\t{C874D041-824A-4B4B-A27B-851E7B387AED} = {47AB2E9F-353B-4C6E-B04A-6622DE5F407D}\n\t\t{544B332C-74C2-46AE-8298-3FBB3D4E847A} = {47AB2E9F-353B-4C6E-B04A-6622DE5F407D}\n\t\t{EBA6C83E-3C3A-4FA7-84EA-16BAC7A828D2} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{5D72EC4D-E147-4958-B4E7-AFCC019DE54F} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{CC836548-51B8-48D6-A8D4-DA8ED91C2E9A} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{BC4D2C5B-E0EC-4304-9620-7CCCAF9EC683} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{8660908C-2A22-4FFF-8CB3-D139B1F8ADA1} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{C2A70131-5E99-4070-B8E8-2B4E296C0A6D} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{2E06C8C9-6BF7-4467-BD92-05B1C2E366E1} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{A784FB5C-4097-40FC-9CD5-D97AED2A743D} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{78784E1E-CFFB-47F1-A585-286CD470542B} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{7547EDD0-241B-48D4-A07D-29CF38A945BA} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{D4F8D570-565F-45FA-8313-42984E88258D} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{7EDB1EC7-D0C4-4A4E-BB64-57205101936D} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{E659C62F-FFFC-4C79-BF2B-ADF94628AC96} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{18423ECF-EF88-4145-9582-A894A096C1E8} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{9CFFC932-7B09-4B5D-A7DE-DB5F717BFBEC} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{0A61745A-5FF6-43A1-9634-FE029217A4E4} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{934D38BE-7631-430F-B274-07152767F58F} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{97F2CC5D-6AE6-40E9-AFAC-D4F513C63330} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{BFB6AB47-0ECC-447E-BD37-3D3B8AA5ACE9} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{B9F11735-5303-47C6-A8FA-EF9EDAD5FBE8} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{49E52BFD-5E59-4397-93EB-09DCF16FA9CA} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{5B3DADC7-981D-42A0-A155-4C3F26DB1991} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{9F86985D-E08E-4E87-AE3C-5703774B8FCA} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{0F61820B-9437-48CC-BCBB-76EEE9A4F52A} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{C4EEAE98-1596-4177-B821-308DEA359A78} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{2167C9A6-432A-4B44-AFD1-8B71BCE940B9} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{C0186428-77E9-4317-AE5E-08141D8CADAF} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{04D5CCB9-E095-40D3-9986-C1E41D8F638F} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{F812D4F7-322D-48D0-A275-1AEC6978ED23} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{FDA71427-459F-42CE-9607-CDD6EBE1BEF8} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{D81558A2-EC45-4526-88E2-F385D42E79E6} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{E3821A4F-B1F5-4220-A491-4310D4DC4DE4} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{25E2A9F4-DB37-437D-8688-DDB5C678C0F8} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{ED5B6C4F-87D2-46AA-BA41-3BA4B0B1F551} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{B0EDF983-3AC1-4D8D-9897-A7B639A0001F} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{0DA81364-E5E3-40BD-A0EA-65A8A0C1BC09} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{CA13DD91-30D5-45E8-AD0E-4F9049E7DC78} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{E3097E23-9191-4028-83F2-D231590563FD} = {A54B4BB6-3439-432B-AFD9-FE62D6528D42}\n\t\t{5574EA92-47A5-4483-BF7E-89231D38D318} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\t\t{59DE2732-27CE-43D3-BFE7-055C51714731} = {E62475E8-0BE1-4464-BBD9-FD06CC546593}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {B1989475-43D6-4AA5-9717-6DBF734B0C6E}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 46.638671875,
          "content": "# Changelog\nAll notable changes to Audit.NET and its extensions will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/).\n\n## [27.3.2] - 2024-12-11:\n- Audit.NET.SqlServer: Avoid disposing the DbContext when an instance is provided.\n\n## [27.3.1] - 2024-12-10:\n- Audit.NET.SqlServer:  Introducing configuration options in the SQL Server data provider to enable the use of a custom Entity Framework DbContext for storing and querying audit events.\n- Audit.EntityFramework.Core: New DbContext Data Provider to store audit events using a custom Entity Framework DbContext. (#716)\n\n## [27.3.0] - 2024-12-08:\n- Adding support for NET 9 (#711)\n- Audit.NET.AzureCosmos: Security upgrade Microsoft.Azure.Cosmos from 3.37.0 to 3.46.0 (#713)\n- Audit.NET.Kafka: Adding support to add custom headers to the Kafka messages (#715)\n- Audit.MongoClient: Upgrade MongoDB.Driver reference to the latest version 3.1.0 (#708)\n\n## [27.2.0] - 2024-11-23:\n - Audit.EntityFramework.Abstractions: Introducing `Audit.EntityFramework.Abstractions` assembly to decouple your domain layer from direct dependencies on EntityFramework or EntityFrameworkCore (#714)\n\n## [27.1.1] - 2024-10-28:\n- Audit.NET.MongoDB: Upgrading MongoDB.Driver to latest version 3.0.0 (#708)\n\n## [27.1.0] - 2024-10-24:\n- Audit.EntityFramework.Identity and Audit.EntityFramework.Identity.Core: Adding `SaveChangesGetAudit()` methods to the `AuditIdentityDbContext` (#707)\n- Audit.NET: Upgrading System.Text.Json 6.0.9 to the latest 6.0.10 ([CVE-2024-43485](https://www.cve.org/CVERecord?id=CVE-2024-43485))\n\n## [27.0.3] - 2024-09-25:\n- Audit.EntityFramework.Core: Fixing issue with Complex Type properties when using the EF DataProvider Property Matching (#697)\n\n## [27.0.2] - 2024-09-18:\n- Audit.NET.PostgreSql: Fixing issue with the PostgreSql data provider when using String data column (#695) \n\n## [27.0.1] - 2024-09-05:\n- Audit.EntityFramework.Core: Introducing the CommandSource property to the audit output for EF Core 6 and above, along with configurable options to determine whether to include reader events based on the command event data\n- Audit.WCF: Allow configuring custom `IAuditScopeFactory` and `AuditDataProvider`. \n- Audit.WCF.Client: Allow configuring custom `IAuditScopeFactory` and `AuditDataProvider`. \n\n## [27.0.0] - 2024-09-03:\n- Audit.NET: Introducing an `Items` collection in the `AuditScope` to store custom data accessible throughout the audit scope's lifecycle.\n- Audit.NET: Refactoring `AuditScopeOptions` to eliminate the dependency on the static `Audit.Core.Configuration`.\n- Audit.NET: Adding virtual methods `OnConfiguring`/`OnScopeCreated` method to the `AuditScopeFactory` to enable custom configuration of the audit scope.\n- Audit.NET: Refactoring the `ISystemClock` interface to use a method instead of a property to get the current time.\n- Audit.NET: Enabling Custom Actions to optionally return a boolean value, signaling whether to proceed with or halt the processing of subsequent actions of the same type.\n- Audit.NET: Adding `ExcludeEnvironmentInfo` configuration to the `Audit.Core.Configuration` and `AuditScopeOptions` to allow excluding the environment information from the audit event.\n- Audit.EntityFramework.Core: Enabling configuration of the `IAuditScopeFactory` and `AuditDataProvider` through dependency injection.\n- Audit.WebApi.Core: Enabling configuration of the `IAuditScopeFactory` and `AuditDataProvider` through dependency injection.\n- Audit.Mvc.Core: Enabling configuration of the `IAuditScopeFactory` and `AuditDataProvider` through dependency injection.\n- Audit.SignalR: Enabling configuration of the `IAuditScopeFactory` and `AuditDataProvider` through dependency injection.\n\n## [26.0.1] - 2024-08-22:\n- Audit.WebApi.Core: Adding new SkipResponseBodyContent() configuration to allow deciding whether to skip or include the response body content **after** the action is executed (#690)\n\n## [26.0.0] - 2024-07-19:\n- Audit.NET.Elasticsearch: Upgrading the elasticsearch data provider to use the new client Elastic.Clients.Elasticsearch instead of the deprecated NEST client. [Migration guide](https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/migration-guide.html) (#682)\n\n## [25.0.7] - 2024-07-04:\n- Audit.HttpClient: Allowing to audit the HttpRequestMessage.Options to add contextual information to the HTTP Audit Event.\nAdding GetRequestMessage() and GetResponseMessage() to the HttpAction to be able to retrieve the HttpRequestMessage and HttpResponseMessage objects from the audit event. (#673)\n\n## [25.0.6] - 2024-06-24:\n- Audit.EntityFramework: Fixing EF audit helper to bypass the audit data collecting when the global Audit.Core.Configuration.AuditDisabled is set to true (#672)\n- Audit.EntityFramework: Upgrading EntityFramework package reference from 6.4.4 to 6.5.0\n\n## [25.0.5] - 2024-06-18:\n- Audit.NET.SqlServer: Fixing \"Schema\" configuration in the Fluent Api for SqlServer (#670)\n\n## [25.0.4] - 2024-03-24:\n- Audit.NET.Elasticsearch: Allowing polymorphic serialization of Audit Events. (#660)\n\n## [25.0.3] - 2024-03-12:\n- Audit.NET.AzureCosmos: Exposing GetContainer method as protected to allow customization (#655)\n- Audit.NET.EventLog.Core: Security upgrade Microsoft.Windows.Compatibility from 8.0.1 to 8.0.3 (#656)\n\n## [25.0.2] - 2024-03-11:\n- Audit.NET.AzureStorageBlobs: Adding ability to configure Tags for the audit event BLOBs (#654)\n\n## [25.0.1] - 2024-02-28:\n- Audit.NET: Adding-new OnScopeDisposed action type for custom actions.\n- Audit.NET: New StartActivityTrace optional configuration to indicates whether each audit scope should create and start a new Distributed Tracing Activity.\n- Audit.NET: New BlockingCollectionDataProvider to store the audit events in a BlockingCollection that can be accessed to consume the events. (#651)\n- Audit.NET.Channels: New ChannelDataProvider to store the audit events in a System.Threading.Channels.Channel that can be accessed to consume the events. (#651)\n\n## [25.0.0] - 2024-02-16:\n- Audit.NET: Adding a Weak Reference to the AuditScope in the AuditEvent class, to allow accessing the current AuditScope from the AuditEvent.\n- Audit.NET: Introducing a new struct `Audit.Core.Setting<T>` to standarize Data Provider settings, allowing the value to be set directly or as a function of the `AuditEvent`.\nRefactoring the majority of the Data Providers to use the new `Setting<T>`. \n\n## [24.0.1] - 2024-02-12:\n- Audit.NET.Polly: Adding GetAuditEvent extension method to ResilienceContext.\n\n## [24.0.0] - 2024-02-11:\n- Audit.NET.Polly: New Resilience wrapper Data Provider to define [Polly](https://www.pollydocs.org/index.html) resilience strategies to any Data Provider. (#607, #455, #372)\n- Audit.NET: Adding wrapper providers to allow lazy instantiation of the data providers. LazyDataProvider, DeferredDataProvider and ConditionalDataProvider.\n- Audit.NET.Serilog, Audit.NET.AmazonQLDB, Audit.NET.MySql, Audit.NET.PostgreSql, Audit.NET.RavenDB: Standarizing the namespaces. Removed the \"Audit.NET\" namespace.\n\n## [23.0.0] - 2023-12-13:\n- Beginning with version 23.0.0, this library and its extensions has discontinued support for older .NET Framework and Entity Framework (versions that lost Microsoft support before 2023).\nNew minimum supported .NET framework versions are net462, netstandard2.0 & net6.0. (#637)\n- All the extension versions now uses `System.Text.Json` as the default.\n- Audit.EntityFramework.Core: Support for EF Core versions 3 and earlier has been discontinued. \n- Audit.NET.JsonSystemAdapter has been deprecated.\n\n## [22.1.0] - 2023-12-09:\n- Audit.MongoClient: New extension to audit `MongoClient` instances. \nGenerate Audit Logs by adding a Command Event Subscriber into the configuration of the MongoDB Driver (#640, #641)\n\n## [22.0.2] - 2023-12-01:\n- Audit.NET: Support to include the [Activity](https://learn.microsoft.com/en-us/dotnet/core/diagnostics/distributed-tracing-instrumentation-walkthroughs) distributed trace information into the Audit Event.\n- Audit.NET: Adding `Configuration.Reset()` method to reset the global settings to the default. \n\n## [22.0.1] - 2023-11-15:\n- Audit.EntityFramework.Core: Adding support for [Complex Types](https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-8.0/whatsnew#value-objects-using-complex-types) in EF Core 8. \nComplex types are now included in the `ColumnValues` and `Changes` collections of the EF audit entity.\n\n## [22.0.0] - 2023-11-14:\n- Audit.NET / Audit.EntityFramework.Core / Audit.NET.SqlServer: Adding support for NET8 (#632)\n\n## [21.1.0] - 2023-10-09:\n- Audit.EntityFramework.Core: Fixing bug in the `AuditCommandInterceptor` when multiple result sets are returned. (#521, #628)\n- Audit.NET.MongoDB: Upgrade MongoDB.Driver reference to the latest version (#627)\n\n## [21.0.4] - 2023-09-15\n- Audit.NET.PostgreSql: Fixing postgres double quote issue. (#623) \n\n## [21.0.3] - 2023-07-09\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding `ReloadDatabaseValues` configuration to AuditDbContextAttribute. (#53, #607)\n- Audit.NET.MongoDB: Exposing API to provide the entire MongoDB.Driver.MongoClientSettings instead of the connection string. (#614)\n\n## [21.0.2] - 2023-07-06\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding `ReloadDatabaseValues` configuration setting to query the original values of the entities from the database explicitly to properly set the Original values when using DbContext's `Update` or `Remove` methods. (#53, #167, #291, #335, #345, #606, #607)\n\n## [21.0.1] - 2023-05-28\n- Audit.NET.AzureCosmos: Adding support to dynamically configure the Endpoint, AuthKey, Database and Container from the AuditEvent data.\n\n## [21.0.0] - 2023-04-15\n- Audit.NET and all its extensions: Adding CancellationToken support for all the Async methods (#597)\n\n## [20.2.4] - 2023-03-26\n- Audit.EntityFramework.Core: Fix to allow continuing with the audit process even if the DbContext got disposed within the SaveChanges operation (#589)\n\n## [20.2.3] - 2023-03-17\n- Audit.EntityFramework: Fix to honor Override/Ignore/Format in entity properties for any mapper type (#584)\n- Audit.EntityFramework: Fix EntityType null in the ExplicitMapper when using sync methods (#585)\n- Audit.EntityFramework: Fix Property Matcher for entities with custom column name (#586)\n\n## [20.2.2] - 2023-03-14\n- Audit.EntityFramework / Audit.EntityFramework.Core: Low-Level interceptors support to use the `.AuditDataProvider` property from the `AuditDbContext` instance (#387)\n\n## [20.2.1] - 2023-03-10\n- Audit.NET.SqlServer: Adding support for net462+ targeting EF Core 3 (#581)\n\n## [20.2.0] - 2023-03-06\n- Audit.NET.PostgreSql: Upgrading PostgreSql driver (Npgsql) to vesion 7.0.2\n- Audit.NET.SqlServer: Adding overload to `CustomColumn` configuration to allow passing a guard condition to determine when the column should be included/ignored (#576)\n- Audit.SignalR: Adding support for ASP .NET Core SignalR (#578)\n\n## [20.1.6] - 2023-02-22\n- Audit.NET.PostgreSql: Adding overloads to EnumerateEvents to allow passing where, orderby, limit or select expression. (#569)\n\n## [20.1.5] - 2023-02-08\n- Audit.NET.SqlServer: Adding net7.0 as a target framework and referencing EF Core 7 (#568)\n\n## [20.1.4] - 2023-01-28\n- Audit.NET.PostgreSQL: Adding DataColumn override to allow changing the way to generate the JSON string from the Audit Event (#566)\n\n## [20.1.3] - 2022-12-20\n- Audit.WebApi / Audit.WebApi.Core: Allow configuring the `AuditDataProvider` as a service in the `IServiceCollection` (#557)\n\n## [20.1.2] - 2022-12-14\n- Audit.EntityFramework.Core: Fixing issue with GetColumnName when a property is mapped to JSON using EF Core 7 (#555)\n\n## [20.1.1] - 2022-12-12\n- Audit.Mvc: Adding `IncludeChildActions` configuration to the `AuditAttribute` action filter for MVC 5 (#554)\n\n## [20.1.0] - 2022-12-01\n- Audit.NET / Audit.EntityFramework.Core: Upgrade to net7.0 as target, adding support for EF Core 7.0.0 (#544)\n\n## [20.0.4] - 2022-11-29\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding SaveChangesGetAudit methods in the AuditDbContext to allow obtaining the EF audit event when saving changes (#546, #547)\n\n## [20.0.3] - 2022-10-27\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding new setting on the EntityFramework Data Provider to indicate if the audit DbContext should be disposed after saving (#539)\n\n## [20.0.2] - 2022-10-26\n- Audit.WebApi: Adding missing SerializeActionParameters setting on the fluent API configurator for the global audit filter. (#538)\n\n## [20.0.1] - 2022-10-21\n- Audit.NET: Adding InMemory data provider for testing purposes.\n- Audit.WebApi.Core: Fix issue when serializing some action parameters that are not user input (i.e. CancellationToken) (#536)\n\n## [20.0.0] - 2022-09-30\n\n- Audit.NET.MongoDB: Changing default serialization mechanism for BSON (#531)\n- Audit.NET.Serilog: New data provider for Serilog (#532)\n- Audit.EntityFramework: Adding OnScopeSaved virtual method on DbContext triggered after the scope is saved (#529)\n- Audit.WebApi.Core: Use ReadFormAsync instead of Request.Form to avoid sync over async on net core (#534)\n\n## [19.4.1] - 2022-09-10\n- Audit.NET.AzureStorageTable: New package for Azure Table data provider, using the latest client Azure.Data.Table (#528)\n\n## [19.4.0] - 2022-09-02\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding overloads to `Format()` and `Override()` methods for Entity Framework config fluent API, to override entity values on the audit output (#526)\n\n## [19.3.0] - 2022-08-22\n- Audit.SqlServer: Fixing compatibility with .NET 6 for Audit.SqlServer library (#522)\n- Audit.EntityFramework.Core: Adding DbTransaction interceptor to log transaction events (`AuditTransactionInterceptor`).\n\n## [19.2.2] - 2022-08-08\n- Audit.EntityFramework.Core: Allow optional logging for SQL read results. New setting for command interceptor `AuditCommandIntercaptor.IncludeReaderResults` (#515)\n- Audit.NET: Changing default IgnoreCycles reference handling for JSON serialization on .NET 6 (#517)\n\n## [19.2.1] - 2022-08-06\n- Audit.WCF.Client: Adding .NET Core support to Audit.WCF.Client (#514)\n- Audit.NET.log4net: Security upgrade log4net from 2.0.10 to 2.0.15 (#511)\n\n## [19.2.0] - 2022-07-23\n- Audit.NET.ElasticSearch: Fix issue when pre-serializing the Target object (#509)\n- Audit.NET.AzureStorageBlobs: Bump Azure.Storage.Blobs from 12.9.1 to 12.13.0 (#510)\n- Audit.NET: Fix pre-serialization method on base AuditDataProvider\n\n## [19.1.4] - 2022-05-22\n- Audit.NET.Redis: Adding Redis Stream provider to allow storing the audit events into Redis Streams.\n\n## [19.1.3] - 2022-05-20\n- Audit.NET.Redis: Allow setting redis connection configuration via ConfigurationOptions (#493)\n\n## [19.1.2] - 2022-05-18\n- Audit.MVC / Audit.MVC.Core: Adding extension methods on HttpContext to get the Audit Scope `Audit.Mvc.GetCurrentAuditScope()` (#492)\n\n## [19.1.1] - 2022-04-28\n- Audit.EntityFramework / Audit.EntityFramework.Core: `Changes.NewValue` property on the EF Audit Event was not being updated with the final value from the database \nwhen the value changed was a foreign key to a new entity (#488)\n\n## [19.1.0] - 2022-04-10\n- Audit.NET.JsonNewtonsoftAdapter: New `AuditContractResolver` configured by default on the Newtonsoft.Json adapter to enhance \ncompatibility when targeting newer frameworks (.NET >= 5.0) and still using Newtonsoft.Json as the serializer.\n- Audit.NET.RavenDB: New data provider `Audit.NET.RavenDB` for storing Audit Events as documents on Raven DB. (#485)\n\n## [19.0.7] - 2022-03-13\n- Audit.NET.Elasticsearch: Fix issue using Auto Generated IDs. Change to use an IndexRequest instead of a CreateRequest (#473)\n\n## [19.0.5] - 2022-03-07\n- Audit.NET.PostgreSql: Fix issue when setting null to a custom column (#357)\n\n## [19.0.4] - 2022-01-23\n- Audit.NET.AzureStorage: Azure Table Storage InsertEventAsync bug fix. Method was using sync version of EnsureTable. This was causing the thread to be blocked. (#474)\n\n## [19.0.3] - 2021-12-13\n- Audit.NET.Redis: Ability to add custom Redis commands to the audit event saving batch (#471)\n\n## [19.0.2] - 2021-12-10\n- Audit.NET.Redis: Adding ability to configure the redis database ID to use. Upgrade StackExchange.Redis references to version 2.2.88. (#471)\n\n## [19.0.1] - 2021-11-19\n- Audit.EntityFramework / Audit.EntityFrameworkCore: Adding AuditEntityCreator configuration for EF Data Provider to allow custom audit entity creation (#468)\n\n## [19.0.0] - 2021-11-10\n- Audit.NET / Audit.EntityFrameworkCore: Adding .NET 6.0 and Entity Framework Core 6.0 support (#400)\n\n## [18.1.6] - 2021-09-26\n- Audit.WebApi: Audit Middleware disposing the response body stream if exception was thrown (#459)\n\n## [19.0.0-rc.net60.1] - 2021-09-15\n- Audit.NET / Audit.EntityFrameworkCore: Adding .NET 6.0 and Entity Framework Core 6.0 support, release candidates (#400)\n\n## [18.1.5] - 2021-09-07\n- Audit.EntityFrameworkCore: Adding `AuditCommandInterceptor` for low-level auditing of commands (reads, writes, non-query) on EF Core 3.0 and 5.0. (#100, #449)\n\n## [18.1.4] - 2021-09-05\n- Audit.EntityFrameworkCore: Adding `AuditSaveChangesInterceptor` Save Changes Interceptor as an alternative to configure EF Core 5.0 auditing.\n\n## [18.1.3] - 2021-08-19\n- Audit.NET.MongoDB: Added async methods for InsertEvent / ReplaceEvent\n- Audit.NET.AzureCosmos: Added EnumerateEvents method to CosmosDB provider\n  \n## [18.1.2] - 2021-08-07\n- Audit.NET.AzureCosmos: Added support for .NET Standard 2.0 and .NET 5.0, using latest client library Microsoft.Azure.Cosmos (fixes #434)\n\n## [18.1.1] - 2021-08-04\n- Audit.NET.AzureStorageBlobs: New library to store audit event on Azure Storage blobs, using the latest client [Azure.Storage.Blobs](https://docs.microsoft.com/en-us/dotnet/api/overview/azure/storage.blobs-readme).\n\n## [18.1.0] - 2021-08-01\n- Audit.NET.AzureStorage: Adding support for configuring the Azure Blob Tier after upload, and to set Metadata associated with the blog (#429)\n\n## [18.0.1] - 2021-07-29\n- Audit.WCF.Client: New extension providing client-side audit capabilities for WCF service calls (#427)\n- Audit.NET.SqlServer: Adding support for providing the DbConnection instead of the connection string on .NET framework (#428)\n- Audit.EntityFrameworkCore: Fix issue with OwnedEntities when using the EF data provider (#430)\n- Audit.HttpClient: Removed Newtonsoft.json dependency from Audit.HttpClient\n\n## [18.0.0] - 2021-07-25\n- <span style=\"color:red\">Audit.NET and all the extensions</span>: Changing the JSON serialization default library from Newtonsoft.Json to System.Text.Json for .NET >= 5.0. (#356)\n\n## [17.0.8] - 2021-07-07\n### Modified\n- Audit.EntityFramework.Core: Fix error on SaveChanges() when using EntityFramework Core 5.0 Table-per-Type (#421)\n\n## [17.0.7] - 2021-06-15\n### Modified\n- Audit.NET.MySql: Adding support for custom columns on MySql data provider (#415)\n\n## [17.0.6] - 2021-06-05\n### Modified\n- Audit.EntityFramework: Fix \"Sequence contains more than one element\" exception for EF entities with inheritance, when more than one mapping fragment is defined on an entity (#409)\n\n## [17.0.5] - 2021-05-27\n### Modified\n- Audit.WebApi: Fix to only read the request body stream when the stream can be seek (CanSeek = true) (#404)\n- Audit.EntityFramework: Fix AuditEvent's entitytype not present for explicit mapping (#408)\n\n## [17.0.4] - 2021-05-15\n### Modified\n- Audit.NET: Adding support for asynchronous global custom actions\n\n## [17.0.3] - 2021-05-01\n### Modified\n- Audit.NET.MySql: Fix null reference exception for mySQL data provider when using custom transactions (#395)\n- Audit.NET.EntityFramework / Audit.NET.EntityFramework.Core: Adding Support for asynchronous AuditEntityAction for the Entity Framework Data Provider (#397)\n\n## [17.0.2] - 2021-04-21\n### Modified\n- Audit.NET.AzureCosmos: Deprecated `Audit.NET.AzureDocumentDB` package and replaced with new `Audit.NET.AzureCosmos`\n\n## [17.0.1] - 2021-04-17\n### Modified\n- Audit.NET.AmazonQLDB: Update QLDB Provider to use Async API (#393)\n\n## [17.0.0] - 2021-03-26\n### Modified\n- Audit.NET: Allow to set the data provider as a factory instead of passing the instance, so it creation can be delayed (#387)\n\n## [16.5.6] - 2021-03-24\n### Modified\n- Audit.EntityFramework / Audit.EntityFramework.Core: Fix Property Matching error (*An item with the same key has already been added*) when entity objects have hidden base properties (#384)\n \n## [16.5.5] - 2021-03-22\n### Modified\n- Audit.NET.AzureStorage: Call TableOperation.InsertOrMerge to avoid EntityAlreadyExists Conflict (409) exception\n- Audit.EntityFramework / Audit.EntityFramework.Core: Explicit mapper enhancements for Entity Framework Data Provider. \nAllow mapping from entries not mapped to a type (i.e. implicitly created join tables) (#381)\n\n## [16.5.4] - 2021-03-09\n### Modified\n- Audit.EntityFramework / Audit.EntityFramework.Core: Removing type constraint for EF configuration `ForContext<T>` to allow multiple DbContext to be audited without \ninheriting from `AuditDbContext` and allowing fluent configuration for each context separately (#207)\n\n## [16.5.3] - 2021-02-26\n### Modified\n- Audit.Mvc / Audit.WebApi: Allow the use of AuditIgnore attribute on the return of the MVC actions `[return:AuditIgnore]` (#375)\n\n## [16.5.2] - 2021-02-23\n### Modified\n- Audit.HttpClient: Allow injection of audited HttpClients through HttpClientFactory (#374)\n\n## [16.5.1] - 2021-02-21\n### Modified\n- Audit.EntityFramework.Core: Fix EF Core when using multiple owned entities (#373)\n\n## [16.5.0] - 2021-02-17\n### Modified\n- Audit.NET: Fix AuditScope DisposeAsync return value discrepancy when targeting net472 (#371)\n\n## [16.4.5] - 2021-02-14\n### Modified\n- Audit.NET: Fix FileDataProvider SaveAsync method which was not respecting the JsonSerializerSetttings (#369)\n\n## [16.4.4] - 2021-02-04\n### Modified\n- Audit.NET: Fix AuditScope creation when creating from an existing AuditEvent that has pre-assigned CustomFields (#364)\n- Audit.EntityFramework: Set the event custom fields before the AuditScope creation so they are available from OnScopeCreated event (#364)\n- Audit.NET.SqlServer: Fixed null values on custom columns (#357)\n\n## [16.4.3] - 2021-01-27\n### Modified\n- Audit.EntityFramework.Identity.Core.v3: Fixed reference to Audit.EntityFramework.Core.v3 (#355)\n\n## [16.4.2] - 2021-01-22\n### Modified\n- Audit.EntityFramework.Core: Fixed problem with Owned Entities relationships for EntityFramework Core 5 (#360)\n\n## [16.4.1] - 2021-01-21\n### Modified\n- Audit.EntityFramework.Core: Fixed problem with Many-To-Many relationships without join entity for EntityFramework Core 5 (#360)\n\n## [16.4.0] - 2021-01-10\n### Added\n- Adding new packages `Audit.EntityFramework.Core.v3` and `Audit.EntityFramework.Identity.Core.v3` for backward compatibility to be used when targeting EntityFramework Core 3 on .NET standard >= 2.0 (#355)\n\n## [16.3.3] - 2021-01-08\n### Modified\n- Audit.Mvc / Audit.Mvc.Core: Changing body request read to be asynchronous. Avoiding exception when used on asp.net core 3 (System.InvalidOperationException: Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead) (#259)\n\n## [16.3.2] - 2021-01-02\n### Modified\n- Audit.NET: Adding net461 as base target framework for supporting `IAsyncDisposable` for .NET Framework >= 4.6.1 (#354)\n\n## [16.3.1] - 2020-12-31\n### Modified\n- Audit.SqlServer: Adding support for Microsoft.EntityFrameworkCore 5.0.1 (#353)\n\n## [16.3.0] - 2020-12-30\n### Modified\n- Audit.EntityFramework.Core: Adding support for Microsoft.EntityFrameworkCore 5.0.1 (#352)\n\n## [16.2.1] - 2020-12-27\n### Modified\n- Audit.NET.SqlServer: New optional setting to specify the DbContextOptions for the internal DbContext. (#351)\n\n## [16.2.0] - 2020-10-13\n### Modified\n- Audit.NET (Core): New optional global cofiguration to include the namespaces on the type names logged (#343)\n\n## [16.1.5] - 2020-10-04\n### Modified\n- Audit.PostgreSql: Upgrade npgsql driver to latest version and allowing dynamic configuration of the postgreSQL data provider settings (#340)\n\n## [16.1.4] - 2020-09-17\n### Modified\n- Audit.MongoDB: Adding `SerializeAsBson` setting to allow overriding the serialization method for the target object from JSON to BSON. \n\n## [16.1.3] - 2020-09-13\n### Modified\n- Audit.AmazonQLDB: Update Amazon.QLDB.Driver to 1.0.1 as it supports .NET Framework 4.6.1 now (#334)\n\n## [16.1.2] - 2020-09-09\n### Added\n- Audit.NET.Kafka: New Apache Kafka data provider (#331)\n### Modified\n- Audit.WebApi: Restore original body for upstream pipelines (#333)\n\n## [16.1.1] - 2020-09-02\n### Modified\n- Audit.MVC / Audit.MVC.Core: Adding support for auditing Razor Pages (#329)\n- Audit.MVC: Including minor fix from PR #327 (`GetCurrentAuditScope` extension method)\n\n## [16.1.0] - 2020-08-19\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Fix for respecting creation policy on Audit WebApi Attribute and Middleware (#325).\n\n## [16.0.3] - 2020-08-15\n### Modified\n- Audit.EntityFramework: Fix bug for ColumnValues and Changes when the entity property is a Complex Type (#321).\n\n## [16.0.2] - 2020-08-09\n### Added\n- Audit.NET: Adding fluent API for AuditScope creation.\n\n## [16.0.1] - 2020-08-07\n### Modified\n- Audit.EntityFramework: Enhance CLR entity type resolve in EF Core (#320)\n- Audit.EntityFramework: Adding boolean `EarlySavingAudit` setting to AuditDbContext to allow the audit event to be saved **before** the entity saving operation takes place. Related to #316.\n- Audit.NET.ElasticSearch: Upgrade NEST reference to version 7.8.2 to  fix exception *Could not load type Elasticsearch.Net.IInternalSerializerWithFormatter from assembly Elasticsearch.Net* (#313)\n\n## [16.0.0] - 2020-08-06\n### Modified\n- Audit.NET: Moving the AuditScope creation to an `AuditScopeFactory` implementing an interface `IAuditScopeFactory`. \nAlso added `IAuditScope` interface for unit testing. (#315, #319)\n- Audit.NET: Enable disposable async for netstandard2.0 (#318)\n\n## [15.2.4] - 2020-07-22\n### Modified\n- Audit.EntityFramework.Core: Changing version for Microsoft.EntityFrameworkCore reference when targeting .NET Standard 2.0 or 2.1 (now referencing Microsoft.EntityFrameworkCore 3.1.0) (#310)\n\n## [15.2.3] - 2020-07-13\n### Added\n- Audit.NET.AmazonQLDB: Adding new data provider for Amazon QLDB.\n\n## [15.2.2] - 2020-05-19\n### Modified\n- Audit.Mvc and Audit.WebApi: Remove [obsolete package references](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-3.1&tabs=visual-studio#remove-obsolete-package-references) for netcoreapp >= 3.0 (Microsofot.AspNetCore.*) (#297)\n\n## [15.2.1] - 2020-05-12\n### Modified\n- Audit.Mvc and Audit.WebApi: MissingMethodException Method not found: 'AuditScope.DisposeAsync()' when referencing Audit.Mvc from an ASP.NET core 3.1 application. (#296)\n\n## [15.2.0] - 2020-05-09\n### Modified\n- Audit.NET: Modified `ISystemClock` interface to return a DataTime instead of DateTimeOffset so the DateKind is preserved (#287)\n\n## [15.1.1] - 2020-05-04\n### Modified\n- Audit.EntityFramework: Fix Stack Overflow problem when entity has validation errors. Only for the .NET framework EF. (#294)\n\n## [15.1.0] - 2020-04-13\n### Modified\n- Audit.WebApi: Use GetCurrentAuditScope when an HttpContext is missing (#285)\n- Audit.WebApi: Package reference `Microsoft.AspNetCore.Mvc` downgrade for to version 2.1.0 for compatibility with older net core 2.1 framework (#284)\n\n## [15.0.5] - 2020-03-20\n### Modified\n- Audit.EntityFramework: Fix EF events not being audited when calling EF Core's `SaveChangesAsync(bool acceptAllChangesOnSuccess,CancellationToken cancellationToken = default)` overload on the AuditDbContext. (#277)\n\n## [15.0.4] - 2020-02-28\n### Modified\n- Audit.EntityFramework: Fix audit error when auditing multiple types inheriting from the same entity/table (#273)\n\n## [15.0.3] - 2020-02-26\n### Modified\n- Audit.Mvc: Fix audit event saving when an exception occurs on the action method being audited (ASP.NET) (#274)\n\n## [15.0.2] - 2020-01-20\n### Modified\n- Audit.EntityFramework: EntityFrameworkProvider add the possibility to configure the property matching by type, object-wide. (#269)\n\n## [15.0.1] - 2020-01-10\n### Modified\n- Audit.NET.AzureStorage: Change table mapping cache dictionary to be a ConcurrentDictionary (#268)\n\n## [15.0.0] - 2019-12-16\n### Modified\n- Audit.NET: Renaming properties `SerializedOld` and `SerializedNew` to be `Old` and `New` respectively on `AuditTarget` class. (#261)\n- Audit.EntityFramework / Audit.EntityFramework.Core: Adding net472 as target to allow targeting EF CORE 3 from the full .NET Framework. (#263)\n\n## [14.9.1] - 2019-11-30\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Changing body request/response read to be asynchronous. Avoiding exception when used on asp.net core 3 (System.InvalidOperationException: Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead) (#259)\n\n## [14.9.0] - 2019-11-29\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Removing unneeded references (Microsoft.AspNetCore.Identity and Microsoft.Extensions.PlatformAbstractions) (#258)\n\n## [14.8.1] - 2019-11-26\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Adding execution context getter to AuditApiAction (#257)\n\n## [14.8.0] - 2019-11-20\n### Modified\n- Audit.EntityFramework: Fix 'Property set method not found.' for get-only properties on audit entities (#256)\n- Audit.NET.AzureStorage: Fixed issue with non-concurrent collections (#223, #255)\n\n## [14.7.0] - 2019-10-09\n### Modified\n- Audit.EntityFramework: Adding support for Net Standard >= 2.1 to point to the EntityFramework 6.3.0 library. (#249)\n\n## [14.6.6] - 2019-10-08\n### Modified\n- Audit.NET.Elasticsearch: Updating for Elasticsearch 7 support. NEST library updated to latest release 7.3.1. (#248).\n- Audit.NET.EntityFrameworkCore: Updating Microsoft.EntityFramework.Core library to 3.0.0.\n\n## [14.6.5] - 2019-09-26\n### Modified\n- Audit.NET.MongoDB: Updating MongoDB.Driver library to latest release (2.9.1). This fixes problem when using mongo DB data provider in Net Core 3.0 (#246).\n\n## [14.6.4] - 2019-09-21\n### Modified\n- Audit.EntityFramework: Adding ExcludeValidationResults setting to allow excluding entity validations on the audit output.\n\n## [14.6.3] - 2019-08-12\n### Modified\n- Audit.SqlServer: Adding boolean configuration value (SetDatabaseInitializerNull) to specify if the initializer should be set to NULL on the constructor of the internal DbContext. Only for .NET Framework (#237)\n\n## [14.6.2] - 2019-08-03\n### Modified\n- Audit.EntityFramework: EntityFramework Data Provider support to map a single entity to multiple audit entities.\n\n## [14.6.1] - 2019-08-03\n### Modified\n- Audit.SqlServer: Adding NET Core 3 preview support (#234)\n\n## [14.6.0] - 2019-07-26\n### Modified\n- Audit.EntityFramework.Core: Adding EF Core 3 support (#231)\n\n## [14.5.7] - 2019-07-18\n### Modified\n- Audit.WebApi and Audit.WebApi.Core: Changed the default order on `AuditApiAttribute` and `AuditApiGlobalFilter` to be `int.MinValue` instead of `0`. \nThis allows using `this.GetCurrentAuditScope()` on Controller overrides `OnActionExecutionAsync` and `OnActionExecuting` (#230)\n\n## [14.5.6] - 2019-07-09\n### Modified\n- All: Changed nuget package <ProjectUrl> to point to the base Audit.NET repository, so it can be uploaded to GitHub packages\n- Audit.WebApi: Fix null reference exception when response is null and response headers are included (#229)\n\n## [14.5.5] - 2019-07-01\n### Modified\n- Audit.NET: Added `ISystemClock` interface to allow testing code that depends on `DateTime.UtcNow`, such as event start-date, end-date and duration. Added `Audit.Core.Configuration.SystemClock` static configuration  property.\n\n## [14.5.4] - 2019-06-17\n### Modified\n- Audit.NET.PostgreSql: Fix IdColumnName missing quotes (#226)\n\n## [14.5.3] - 2019-06-05\n### Modified\n- Audit.NET.SqlServer: Update Microsoft.EntityFrameworkCore reference and remove SqlServer.Design reference for netstandard2.0. (#225)\n\n## [14.5.2] - 2019-05-30\n### Added\n- Audit.NET.NLog: New extension library to store the audit events using NLogÂ.\n\n## [14.5.1] - 2019-05-28\n### Modified\n- Audit.EntityFramework: Update Microsoft.EntityFrameworkCore to 2.2.4. Fixed issue with non-concurrent collections in concurrent integration\n\n## [14.5.0] - 2019-05-24\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Allowing the use of `[AuditIgnoreAttribute]` on controllers/action methods when using the Middleware or a mixed approach (Middleware+ActionFilter). (#218)\n\n## [14.4.0] - 2019-05-21\n### Added\n- Audit.HttpClient: New extension library to audit client calls to REST services when using `HttpClient`.\n\n## [14.3.4] - 2019-05-13\n### Added\n- Audit.Mvc and Audit.Mvc.Core: Added `AuditIngoreAttribute` to allow ignoring controllers, actions and/or parameters on the MVC audit output.\n\n## [14.3.3] - 2019-05-09\n### Modified\n- Upgrade newtonsoft.json references to latest version (12.0.2)\n\n## [14.3.2] - 2019-04-30\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Adding constructor to the EF Data Provider that allows fluent API configuration.\n\n## [14.3.1] - 2019-04-27\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Adding `ExcludeTransactionId` setting to allow avoiding the retrieval of the contextual transaction id for the audit events.\n\n## [14.3.0] - 2019-04-24\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Fix compatibility issue with EF Core's Proxied Lazy Loading (Microsoft.EntityFrameworkCore.Proxies) (#214).\n\n## [14.2.3] - 2019-04-17\n### Modified\n- Audit.WebApi and Audit.WebApi.Core: Ignoring action parameters marked with `[FromServicesAttribute]` (#213).\n\n## [14.2.2] - 2019-04-10\n### Added\n- Audit.NET.PostgreSql: Adding ability to configure extra columns on the audit SQL table with `CustomColumn` fluent API.\n\n## [14.2.1] - 2019-04-05\n### Added\n- Audit.NET: Adding ability to re-assign the AuditEvent's Target object after the scope is created.\n\n## [14.2.0] - 2019-03-16\n### Added\n- Audit.NET.SqlServer: Adding ability to configure extra columns on the audit SQL table with `CustomColumn` fluent API, and making JsonColumn optional.\n\n## [14.1.1] - 2019-03-07\n### Modified\n- Audit.EntityFramework: Fix race condition on EntityKeyHelper when obtaining the column names (#208)\n\n## [14.1.0] - 2019-02-11\n### Added\n- Audit.NET.AzureStorage: Added Azure Active Directory Authentication support via Access Token for the BLOB storage Data Provider.\n\n## [14.0.4] - 2019-01-31\n### Modified\n- Audit.EntityFramework: Fixed #198, adding validation to avoid exception when multiple mapping fragments are found.\n\n## [14.0.3] - 2019-01-21\n### Added\n- Audit.AzureStorage: Added constructor overloads to `AzureTableDataProvider` and `AzureBlobDataProvider` that accepts a fluent configuration. Useful for custom providers inheriting from those classes.\n\n## [14.0.2] - 2018-12-15\n### Added\n- Audit.WebApi and Audit.WebApi.Core: Added Response Headers to the event output (optional by `IncludeResponseHeaders` configuration, default is _false_). \n- Audit.Core: Added optional Custom Fields to `AuditEvent.Environment`.\n\n## [14.0.1] - 2018-11-28\n### Added\n- Audit.EntityFramework and Audit.EntityFramework.Core: Added Schema property on entries to complement table name (#182).\nAdded optional Custom Fields to Entity Framework Event and Event.Entries.\n- Audit.NET.MySql: Changed target frameworks to match those on MySqlConnector nuget version 0.47.1.\n\n## [14.0.0] - 2018-11-19\n### Modified\n- Audit.Core: UTC standarization for dates: changing missing dates to be UTC (Event.StartDate, Event.EndDate).\n- Audit.Core: Added `Configuration.Setup().Use()` shortcut method for `UseCustomProvider()` and `UseDynamicProvider()`.\n\n## [13.3.0] - 2018-11-16\n### Modified\n- Audit.Core: Adding support to Xamarin/Mono. Fix incompatible calls to `System.Runtime.InteropServices.Marshal`. (#180)\n\n## [13.2.2] - 2018-11-15\n### Modified\n- Audit.EntityFramework.Core: Fix bug when auditing tables with composite multiple froeign keys related to the same column (#178).\n\n## [13.2.1] - 2018-11-12\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Fix parameter default for `IgnoreMatchedProperties(bool)` on configuration API to be _true_.\n\n\n## [13.2.0] - 2018-10-31\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Allow mapping multiple entity types to the same audit type with independent actions. (#175)\n\n## [13.1.5] - 2018-10-30\n### Modified\n- Audit.PostgreSQL: Fix casing for schema name, allowing case-sensitive schemas. (#174)\n\n## [13.1.4] - 2018-10-25\n### Modified\n- Audit.MongoDB: Fix bug when deserializing custom fields (#173)\n\n## [13.1.3] - 2018-10-17\n### Modified\n- Audit.WebApi and Audit.Mvc: Upgrading AspNetCore libraries from GitHub suggestion because of security vulnerability.\n- Audit.AzureDocumentDB: Adding netstandard2.0 as target\n\n## [13.1.2] - 2018-09-12\n### Modified\n- Audit.WebApi.Core: (#158) Moving `GetAuditScope` extension method to `ControllerBase` instead of `Controller`.\n- Audit.Template.WebApi and Audit.Template Mvc: Using the built-in extension for registering a IHttpContextAccessor (#160)\n- Audit.WebApi.Core: (Fix bug #161) Empty http response when using IncludeResponseBody on both the middleware and the audit filter.\n\n## [13.1.1] - 2018-09-10\n### Modified\n- Audit.WebApi / Audit.WebApi.Core: Have request/response bodies retrieval mutually exclusive between ActionFilter and MiddleWare.\n- Audit.WebApi.Template: Adding middleware to webapi default template. \n\n## [13.1.0] - 2018-09-10\n### Added\n- Audit.WebApi / Audit.WebApi.Core: Added new middleware to complement the action filter audits and be able to log any request regardless\nif an action is reached or not.\n\n\n## [13.0.0] - 2018-08-30\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Created new nuget packages `Audit.EntityFramework.Identity` and `Audit.EntityFramework.Identity.Core` \nto remove the AspNet.Identity dependency.\n\n\n## [12.3.6] - 2018-08-29\n### Added\n- Audit.NET.DynamoDB: Adding new extension **Audit.NET.DynamoDB** to save audit events into Amazon DynamoDB using the `AWSSDK.DynamoDBv2` document model.\n\n### Modified\n- Audit.Core: Adding GetXxxxxEvent() extensions to AuditScope in addition to the AuditEvent.\n- Audit.EntityFramework: Added validation on EF Data Provider to ignore non EF events.\n\n## [12.3.5] - 2018-08-22\n### Modified\n- Audit.EntityFramework: Fix #150: Race condition on Audit.EF .NET Framework version, when multiple threads are calling EF SaveChanges. \n\n\n## [12.3.4] - 2018-08-21\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Allow setting up a different DbContext for storing the audit events on the EF Data Provider. Related to #148.\n\n\n## [12.3.3] - 2018-08-21\n### Modified\n- Audit.WebApi: Fix bug #147 for Microsoft.AspNet.WebApi.Versioning package compatibility.\n\n## [12.3.2] - 2018-08-20\n### Modified\n- Audit.EntityFramework.Core: Replace Microsoft.EntityFrameworkCore.SqlServer dependency in Audit.EntityFramework.Core with Microsoft.EntityFrameworkCore.Relational. (thanks to https://github.com/Deilan).\n\n\n## [12.3.1] - 2018-08-20\n### Modified\n- Audit.WebApi: Fix bug #146 on IsActionIgnored for .NET framework WebApi.\n\n\n## [12.3.0] - 2018-08-20\n### Modified\n- Audit.Core: Changing the exception serialization to include the stacktrace and inner exceptions.\n\n## [12.2.2] - 2018-08-15\n### Modified\n- Audit.WebApi, Audit.WebApi.Core: Adding AuditIgnoreAttribute for controller, actions and arguments.\n- Audit.EntityFramework: Adding DefaultAuditContext and documentation on readme.md about using the library without inheritance.\n\n## [12.2.1] - 2018-08-09\n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Removing SqlServer.Design dependency\n\n## [12.2.0] - 2018-08-08\n### Added\n- Audit.NET: Added FileDataProvider constructor overload with fluent API.\n- Audit.NET.SqlServer: Added SqlDataProvider constructor overload with fluent API.\n- Audit.NET.PostgreSql: Added PostgreSqlDataProvider constructor overload with fluent API.\n- Audit.NET.MySql: Added MySqlDataProvider constructor overload with fluent API.\n- Audit.NET.MongoDB: Added MongoDataProvider constructor overload with fluent API.\n- Audit.NET.log4net: Added Log4netDataProvider constructor overload with fluent API.\n- Audit.NET.ElasticSearch: Added ElasticSearchDataProvider constructor overload with fluent API.\n\n\n## [12.1.11] - 2018-07-30\n### Added\n- Audit.WebApi, Audit.WebApi.Core and Audit.Mvc.Core: Added `TraceId` field on the output, with the internal ASP.NET correlation id per request.\n- Added Audit.WebApi.Template dotnet new template.\n\n## [12.1.10] - 2018-07-20\n### Added\n- Audit.EntityFramework and Audit.EntityFramework.Core: Adding support for ambient transactions (i.e. TransactionScope) on EF Core 2.1. Added AmbientTransactionId field to EF event output.\n\n## [12.1.9] - 2018-07-10\n### Added\n- Audit.NET.AzureStorage: Adding new data provider for storing events on **Azure Tables** `AzureTableDataProvider`.\n\n## [12.1.8] - 2018-07-01\n### Modified\n- Audit.EntityFramework: Fix #127: (For EF 6) Foreign keys are set to NULL when deleting a relation\nentity (many-to-many), this was making NULL the column values holding the foreign key. Adding\na workaround to avoid updating the foreign column values from the foreign key values that are set to NULL by EF.\n\n## [12.1.7] - 2018-06-06\n### Modified\n- Audit.WebApi and Audit.WebApi.Core: Fix #131. Swallow `InvalidDataException` when accessing the Request.Form getter and return NULL is case of that type of exception.\nOnly for the asp.net core version\n\n## [12.1.6] - 2018-06-04\n### Modified\n- Audit.NET.Udp: Fix #129. Allow specifying host name on the Udp Configuration as an alternative to the IP address. \n\n## [12.1.5] - 2018-06-02\n### Added\n- Audit.NET.EventLog.Core: Created this new assembly/package to output events to the windows eventlog when targeting net core 2.0.\n \n### Modified\n- Audit.EntityFramework and Audit.EntityFramework.Core: Fix #128 to be compatible with new EF Core 2.1 lazy loading feature.\n- Audit.NET: Removing Microsoft.Windows.Compatibility dependency from Audit.NET package\n\n## [12.1.4] - 2018-05-25\n### Added\n- Audit.Mvc and Audit.Mvc.Core: Adding request and response bodies to the logs, optional via IncludeRequestBody and IncludeResponseBody properties on the action filter attribute.\n\n## [12.1.3] - 2018-05-15\n### Modified\n- Audit.NET.AzureDocumentDB: Fix #126: AzureDocumentDb not respecting the global JsonSettings.\n\n## [12.1.2] - 2018-05-15\n### Modified\n- Audit.Core: Fix bug #126: FileDataProvider not respecting JsonSettings. Exposed JsonSettings as a property of the FileDataProvider and fixed async methods.\n\n## [12.1.1] - 2018-05-14\n### Modified\n- Audit.EntityFramework: Fix bug on SaveAsync for EntityFrameworkDataProvide. Related to #122.\n\n## [12.1.0] - 2018-05-08\n### Added\n- Audit.WebApi: Adding `AuditApiGlobalFilter` a configurable global filter as an alternative\nto decorate the controllers with `AuditApiAttribute`.\n\n## [12.0.7] - 2018-05-05\n### Modified\n- Audit.WebApi: Adding `IncludeResponseBodyFor` and `ExcludeResponseBodyFor` property on `AuditApiAttribute` \nto allow conditionally Including/Excluding the Response Body from the log, only when certain Http Status codes are returned.\n\n\n## [12.0.6] - 2018-05-04\n### Modified\n- Audit.Core: Adding `AuditDisabled()` method to fluent configuration API.\n- Audit.WebApi: Bypassing the filter when audit is globally disabled.\n- Audit.Mvc: Bypassing the filter when audit is globally disabled.\n\n## [12.0.5] - 2018-05-02\n### Modified\n- Audit.WebApi: Adding context wrapper interface IContextWrapper and injection mechanism for Audit.WebApi on full framework. Related to #124.\n\n## [12.0.4] - 2018-04-30\n### Modified\n- Audit.NET.AzureDocumentDB: Allowing builders to pass the connection string, database and collection.\n- Audit.NET.Elasticsearch: Fixing project URL reference on nuget package.\n\n## [12.0.3] - 2018-04-30\n### Added\n- Audit.NET.Elasticsearch: New Elasticsearch data provider\n\n### Modified\n- Audit.NET.AzureDocumentDB: Cosmos DB provider enhancements by _ovidiu [AT] ovidiudiaconescu.com_. Caching azure client and allow passing the connection policy.\n- Audit.WebApi: (#124) Making GetRequestBody protected virtual\n\n## [12.0.2] - 2018-04-27\n### Modified\n- Audit.EntityFramework: Fix #120 exposing internal properties EventEntry.Entry (GetEntry) and EntityFrameworkEvent.DbContext (GetDbContext) on model objects.\n- Audit.EntityFramework: Fix #122 allow exlude entities via the audit entity action. Now the AuditEntityAction can be a Func that return a boolean indicating whether to include the entity.\n\n\n## [12.0.1] - 2018-04-24\n### Added\n- Audit.Core: Exposing the global JSON serializer settings as a Configuration option to allow changing the serialization behavior for audit events.\n \n## [12.0.0] - 2018-04-22\n### Added\n- Audit.Core: Added a global audit switch off `Configuration.AuditDisabled`.\n- Audit.Core: Added `NullDataProvider` as an anternative to disable the audit logging.\n\n\n## [11.2.0] - 2018-04-11\n### Changed\n- Audit.NET.MongoDB: Fix #114 - MongoDB Dataprovider Date serialization. Changing serialization mechanism to store the .NET DateTime as mongo datetime.\n\n## [11.1.0] - 2018-04-08\n### Added\n- Audit.EntityFramework: Added built-in mechanism to Ignore columns and Override column values on the audit logs.\n\n### Changed\n- Audit.EntityFramework: (Core) fix PrimaryKeys, ForeignKeys and ColumnValues to log the column name instead of the property name.\n\n\n## [11.0.8] - 2018-03-25\n### Changed\n- Audit.EntityFramework - Fix [#106]: DbEntityValidationException causes AuditEntityAction StackOverflowException.\n\n## [11.0.7] - 2018-03-19\n### Changed\n- Audit.NET.AzureDocumentDB - Fix [#103]: Added FeedOptions argument to DocumentDb QueryEvents.\n- Audit.EntityFramework - Fix [#104]: Multiple foreing key using the same field as key, causing audit to fail.\n\n## [11.0.6] - 2018-03-07\n### Changed\n- Audit.WebApi and Audit.Mvc - Fix [#102]: NULL validation on HttpContext.Connection.RemoteIpAddress \n\n\n## [11.0.5] - 2018-02-18\n### Changed\n- Audit.WebApi. Fix [#99]: Output not including body value when type was Microsoft.AspNetCore.Mvc.JsonResult\n\n## [11.0.4] - 2018-02-14\n### Added\n- Audit.WebApi: Added GetCurrentAuditScope(this HttpContext httpContext) extension to get the web api audit scope directly from an HttpContext\n\n### Changed\n- Audit.NET.Postgres: Fix the insert command for the Postgres provider (#98)\n\n## [11.0.3] - 2018-02-12\n### Added\n- Added request body for AspNet Core Web API 2 via IncludeRequestBody property.\n\n## [11.0.2] - 2018-02-09\n### Added\n- Adding NETSTANDARD2.0 support to Audit.NET \n\n### Changed\n- EventLog data provider available on NETCORE 2.0\n- EventLog new MessageBuilder property to allow customizing the logged message\n- Audit.DynamicProxy: allow setting the creation policy.\n- Fixed [#97](https://github.com/thepirat000/Audit.NET/issues/97): WebAPI missing response body when the response was a type inherited from ObjectResult, etc. \n\n## [11.0.1] - 2018-01-28\n### Changed\n- Audit.MySql: refactor by _bgrainger [AT] gmail.com_ to use MySqlConnector instead of MySql.Data to support real async calls.\n\n## [11.0.0] - 2018-01-14\n### Added\n- Async support to the AuditScope and all the data providers.\n- Async support for Audit.EntityFramework, Audit.WCF, Audit.WebAPI and Audit.MVC extensions.\n- Data retrieval methods for most of the data providers.\n- New Custom Action OnEventSaved triggered right after the event is saved.\n\n## [10.0.3] - 2017-12-28\n### Changed\n- Audit.EntityFramework: bug fixing [#92](https://github.com/thepirat000/Audit.NET/issues/92)\n\n## [10.0.2] - 2017-12-25\n### Added\n- New Audit.NET.log4net extension to log events with Apache log4net.\n\n\n"
        },
        {
          "name": "CODE_COVERAGE.md",
          "type": "blob",
          "size": 20.7490234375,
          "content": "# Summary\n|||\n|:---|:---|\n| Generated on: | 12/11/2024 - 5:55:32 AM |\n| Parser: | MultiReport (2x Cobertura) |\n| Assemblies: | 24 |\n| Classes: | 266 |\n| Files: | 203 |\n| **Line coverage:** | 77.5% (8095 of 10436) |\n| Covered lines: | 8095 |\n| Uncovered lines: | 2341 |\n| Coverable lines: | 10436 |\n| Total lines: | 19432 |\n| **Branch coverage:** | 71.3% (3111 of 4362) |\n| Covered branches: | 3111 |\n| Total branches: | 4362 |\n| **Method coverage:** | [Feature is only available for sponsors](https://reportgenerator.io/pro) |\n\n|**Name**|**Covered**|**Uncovered**|**Coverable**|**Total**|**Line coverage**|**Covered**|**Total**|**Branch coverage**|\n|:---|---:|---:|---:|---:|---:|---:|---:|---:|\n|**Audit.DynamicProxy**|**255**|**13**|**268**|**776**|**95.1%**|**119**|**138**|**86.2%**|\n|Audit.DynamicProxy.AuditEventExtensions|5|1|6|32|83.3%|3|6|50%|\n|Audit.DynamicProxy.AuditEventIntercept|1|0|1|19|100%|0|0||\n|Audit.DynamicProxy.AuditInterceptArgument|17|0|17|53|100%|0|0||\n|Audit.DynamicProxy.AuditInterceptor|101|6|107|253|94.3%|56|64|87.5%|\n|Audit.DynamicProxy.AuditInterceptor<T>|101|6|107|253|94.3%|56|64|87.5%|\n|Audit.DynamicProxy.AuditProxy|11|0|11|59|100%|4|4|100%|\n|Audit.DynamicProxy.InterceptEvent|12|0|12|59|100%|0|0||\n|Audit.DynamicProxy.InterceptionSettings|7|0|7|48|100%|0|0||\n|**Audit.EntityFramework**|**1769**|**571**|**2340**|**5254**|**75.5%**|**644**|**852**|**75.5%**|\n|Audit.Core.EntityFrameworkConfiguratorExtensions|15|15|30|72|50%|0|2|0%|\n|Audit.EntityFramework.AssociationEntry|0|3|3|18|0%|0|0||\n|Audit.EntityFramework.AssociationEntryRecord|0|5|5|19|0%|0|0||\n|Audit.EntityFramework.AuditDbContext|26|23|49|249|53%|0|0||\n|Audit.EntityFramework.AuditDbContextAttribute|3|19|22|124|13.6%|0|10|0%|\n|Audit.EntityFramework.AuditEventEntityFramework|1|0|1|15|100%|0|0||\n|Audit.EntityFramework.AuditEventExtensions|2|4|6|82|33.3%|1|6|16.6%|\n|Audit.EntityFramework.Configuration|40|9|49|135|81.6%|5|6|83.3%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping|180|53|233|357|77.2%|31|42|73.8%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<T>|180|53|233|357|77.2%|31|42|73.8%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TAuditEntity>|180|53|233|357|77.2%|31|42|73.8%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TSourceEntity, TAuditEntity>|180|53|233|357|77.2%|31|42|73.8%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TSourceEntity>|180|53|233|357|77.2%|31|42|73.8%|\n|Audit.EntityFramework.ConfigurationApi.ContextConfigurator|8|0|8|35|100%|4|4|100%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity, TProp>|4|2|6|85|66.6%|2|4|50%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity>|20|8|28|85|71.4%|2|4|50%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity>|4|2|6|85|66.6%|2|4|50%|\n|Audit.EntityFramework.ConfigurationApi.ContextSettingsConfigurator<T>|12|4|16|56|75%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EfEntitySettings|3|0|3|30|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EfSettings|18|0|18|33|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EntityFrameworkProviderConfigurator|56|31|87|182|64.3%|7|12|58.3%|\n|Audit.EntityFramework.ConfigurationApi.EntityFrameworkProviderConfigurator<T>|56|31|87|182|64.3%|7|12|58.3%|\n|Audit.EntityFramework.ConfigurationApi.ExcludeConfigurator<T>|2|4|6|26|33.3%|0|0||\n|Audit.EntityFramework.ConfigurationApi.IncludeConfigurator<T>|2|4|6|23|33.3%|0|0||\n|Audit.EntityFramework.ConfigurationApi.MappingInfo|4|0|4|31|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.ModeConfigurator<T>|6|0|6|21|100%|0|0||\n|Audit.EntityFramework.DbContextHelper|312|114|426|976|73.2%|298|392|76%|\n|Audit.EntityFramework.DefaultAuditContext|18|4|22|45|81.8%|0|0||\n|Audit.EntityFramework.EntityFrameworkEvent|11|3|14|81|78.5%|0|0||\n|Audit.EntityFramework.EntityKeyHelper|114|0|114|295|100%|80|84|95.2%|\n|Audit.EntityFramework.EntityName|2|0|2|11|100%|0|0||\n|Audit.EntityFramework.EventEntry|12|4|16|68|75%|0|0||\n|Audit.EntityFramework.EventEntryChange|3|0|3|9|100%|0|0||\n|Audit.EntityFramework.Providers.EntityFrameworkDataProvider|115|17|132|396|87.1%|81|102|79.4%|\n|**Audit.EntityFramework.Abstractions**|**4**|**2**|**6**|**20**|**66.6%**|**0**|**0**|****|\n|Audit.EntityFramework.AuditOverrideAttribute|4|2|6|20|66.6%|0|0||\n|**Audit.EntityFramework.Core**|**1931**|**836**|**2767**|**6687**|**69.7%**|**822**|**1070**|**76.8%**|\n|Audit.Core.DbContextConfiguratorExtensions|0|2|2|26|0%|0|0||\n|Audit.Core.EntityFrameworkConfiguratorExtensions|15|15|30|72|50%|0|2|0%|\n|Audit.EntityFramework.AuditDbContext|33|0|33|249|100%|0|0||\n|Audit.EntityFramework.AuditDbContextAttribute|9|10|19|124|47.3%|0|8|0%|\n|Audit.EntityFramework.AuditEventCommandEntityFramework|1|0|1|14|100%|0|0||\n|Audit.EntityFramework.AuditEventEntityFramework|1|0|1|15|100%|0|0||\n|Audit.EntityFramework.AuditEventExtensions|9|9|18|82|50%|6|18|33.3%|\n|Audit.EntityFramework.AuditEventTransactionEntityFramework|1|0|1|14|100%|0|0||\n|Audit.EntityFramework.AuditSaveChangesInterceptor|21|0|21|61|100%|0|0||\n|Audit.EntityFramework.CommandEvent|7|1|8|58|87.5%|0|0||\n|Audit.EntityFramework.Configuration|41|6|47|135|87.2%|6|6|100%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping|113|120|233|357|48.4%|29|42|69%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<T>|113|120|233|357|48.4%|29|42|69%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TAuditEntity>|113|120|233|357|48.4%|29|42|69%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TSourceEntity, TAuditEntity>|113|120|233|357|48.4%|29|42|69%|\n|Audit.EntityFramework.ConfigurationApi.AuditEntityMapping<TSourceEntity>|113|120|233|357|48.4%|29|42|69%|\n|Audit.EntityFramework.ConfigurationApi.ContextConfigurator|8|0|8|35|100%|4|4|100%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity, TProp>|3|3|6|85|50%|1|4|25%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity>|20|8|28|85|71.4%|2|4|50%|\n|Audit.EntityFramework.ConfigurationApi.ContextEntitySetting<TEntity>|3|3|6|85|50%|1|4|25%|\n|Audit.EntityFramework.ConfigurationApi.ContextSettingsConfigurator<T>|14|0|14|56|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.DbContextProviderConfigurator<TDbContext, TEntity>|5|8|13|43|38.4%|0|0||\n|Audit.EntityFramework.ConfigurationApi.DbContextProviderConfigurator<TDbContext, TEntity>|0|1|1|43|0%|0|0||\n|Audit.EntityFramework.ConfigurationApi.DbContextProviderEntityConfigurator<TEntity>|4|0|4|25|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EfEntitySettings|3|0|3|30|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EfSettings|17|0|17|33|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.EntityFrameworkProviderConfigurator|68|19|87|182|78.1%|9|12|75%|\n|Audit.EntityFramework.ConfigurationApi.EntityFrameworkProviderConfigurator<T>|68|19|87|182|78.1%|9|12|75%|\n|Audit.EntityFramework.ConfigurationApi.ExcludeConfigurator<T>|0|6|6|26|0%|0|0||\n|Audit.EntityFramework.ConfigurationApi.IncludeConfigurator<T>|2|4|6|23|33.3%|0|0||\n|Audit.EntityFramework.ConfigurationApi.MappingInfo|4|0|4|31|100%|0|0||\n|Audit.EntityFramework.ConfigurationApi.ModeConfigurator<T>|6|0|6|21|100%|0|0||\n|Audit.EntityFramework.DbContextHelper|423|31|454|1088|93.1%|356|424|83.9%|\n|Audit.EntityFramework.DefaultAuditContext|17|4|21|45|80.9%|0|0||\n|Audit.EntityFramework.EntityFrameworkEvent|13|1|14|81|92.8%|0|0||\n|Audit.EntityFramework.EntityName|2|0|2|11|100%|0|0||\n|Audit.EntityFramework.EventEntry|15|1|16|68|93.7%|0|0||\n|Audit.EntityFramework.EventEntryChange|3|0|3|9|100%|0|0||\n|Audit.EntityFramework.InterceptorEventBase|8|0|8|56|100%|0|0||\n|Audit.EntityFramework.Interceptors.AuditCommandInterceptor|175|38|213|471|82.1%|112|146|76.7%|\n|Audit.EntityFramework.Interceptors.AuditTransactionInterceptor|156|29|185|390|84.3%|57|86|66.2%|\n|Audit.EntityFramework.Providers.DbContextDataProvider<TDbContext, TEntity>|43|5|48|210|89.5%|15|18|83.3%|\n|Audit.EntityFramework.Providers.DbContextDataProvider<TDbContext, TEntity>|20|3|23|210|86.9%|3|6|50%|\n|Audit.EntityFramework.Providers.EntityFrameworkDataProvider|124|9|133|396|93.2%|96|106|90.5%|\n|Audit.EntityFramework.TransactionEvent|4|1|5|32|80%|0|0||\n|**Audit.EntityFramework.Identity.Core**|**27**|**29**|**56**|**1150**|**48.2%**|**0**|**0**|****|\n|Audit.EntityFramework.AuditIdentityDbContext|2|8|10|358|20%|0|0||\n|Audit.EntityFramework.AuditIdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>|21|7|28|282|75%|0|0||\n|Audit.EntityFramework.AuditIdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>|2|8|10|358|20%|0|0||\n|Audit.EntityFramework.AuditIdentityDbContext<TUser, TRole, TKey>|2|2|4|76|50%|0|0||\n|Audit.EntityFramework.AuditIdentityDbContext<TUser>|0|4|4|76|0%|0|0||\n|**Audit.FileSystem**|**136**|**29**|**165**|**413**|**82.4%**|**36**|**52**|**69.2%**|\n|Audit.FileSystem.AuditEventFileSystem|1|0|1|19|100%|0|0||\n|Audit.FileSystem.FileBinaryContent|0|2|2|12|0%|0|0||\n|Audit.FileSystem.FileContent|0|1|1|11|0%|0|0||\n|Audit.FileSystem.FileSystemEvent|15|0|15|27|100%|0|0||\n|Audit.FileSystem.FileSystemMonitor|102|24|126|248|80.9%|36|52|69.2%|\n|Audit.FileSystem.FileSystemMonitorOptions|16|2|18|85|88.8%|0|0||\n|Audit.FileSystem.FileTextualContent|2|0|2|11|100%|0|0||\n|**Audit.HttpClient**|**181**|**26**|**207**|**604**|**87.4%**|**74**|**82**|**90.2%**|\n|Audit.Http.AuditEventExtensions|3|3|6|32|50%|2|6|33.3%|\n|Audit.Http.AuditEventHttpClient|1|0|1|12|100%|0|0||\n|Audit.Http.AuditHttpClientHandler|130|1|131|282|99.2%|69|72|95.8%|\n|Audit.Http.ClientFactory|1|1|2|28|50%|0|0||\n|Audit.Http.ConfigurationApi.AuditClientHandlerConfigurator|18|20|38|136|47.3%|0|0||\n|Audit.Http.Content|2|0|2|10|100%|0|0||\n|Audit.Http.HttpAction|14|0|14|55|100%|3|4|75%|\n|Audit.Http.HttpClientBuilderAuditExtensions|0|1|1|19|0%|0|0||\n|Audit.Http.Request|6|0|6|16|100%|0|0||\n|Audit.Http.Response|6|0|6|14|100%|0|0||\n|**Audit.MongoClient**|**92**|**25**|**117**|**448**|**78.6%**|**27**|**30**|**90%**|\n|Audit.MongoClient.AuditEventMongoCommand|1|0|1|15|100%|0|0||\n|Audit.MongoClient.ClusterBuilderExtensions|0|2|2|20|0%|0|0||\n|Audit.MongoClient.ConfigurationApi.AuditMongoConfigurator|1|15|16|72|6.2%|0|0||\n|Audit.MongoClient.MongoAuditEventSubscriber|73|2|75|193|97.3%|27|28|96.4%|\n|Audit.MongoClient.MongoClientSettingsExtensions|0|4|4|28|0%|0|2|0%|\n|Audit.MongoClient.MongoCommandEvent|13|2|15|95|86.6%|0|0||\n|Audit.MongoClient.MongoConnection|4|0|4|25|100%|0|0||\n|**Audit.Mvc**|**155**|**34**|**189**|**488**|**82%**|**78**|**138**|**56.5%**|\n|Audit.Mvc.AuditAction|22|2|24|65|91.6%|0|0||\n|Audit.Mvc.AuditAttribute|121|20|141|293|85.8%|70|114|61.4%|\n|Audit.Mvc.AuditEventExtensions|2|4|6|32|33.3%|1|6|16.6%|\n|Audit.Mvc.AuditEventMvcAction|1|0|1|16|100%|0|0||\n|Audit.Mvc.AuditHelper|6|6|12|42|50%|7|18|38.8%|\n|Audit.Mvc.BodyContent|3|0|3|9|100%|0|0||\n|Audit.Mvc.ControllerExtensions|0|2|2|31|0%|0|0||\n|**Audit.Mvc.Core**|**325**|**59**|**384**|**904**|**84.6%**|**202**|**322**|**62.7%**|\n|Audit.Mvc.AuditAction|23|3|26|65|88.4%|0|0||\n|Audit.Mvc.AuditAttribute|166|18|184|381|90.2%|110|154|71.4%|\n|Audit.Mvc.AuditEventExtensions|2|4|6|32|33.3%|1|6|16.6%|\n|Audit.Mvc.AuditEventMvcAction|1|0|1|16|100%|0|0||\n|Audit.Mvc.AuditHelper|14|4|18|57|77.7%|14|22|63.6%|\n|Audit.Mvc.AuditPageFilter|115|28|143|304|80.4%|77|140|55%|\n|Audit.Mvc.BodyContent|3|0|3|9|100%|0|0||\n|Audit.Mvc.ControllerExtensions|1|2|3|40|33.3%|0|0||\n|**Audit.NET**|**1242**|**133**|**1375**|**4786**|**90.3%**|**284**|**360**|**78.8%**|\n|Audit.Core.AuditActivityEvent|2|0|2|80|100%|0|0||\n|Audit.Core.AuditActivityTag|2|0|2|80|100%|0|0||\n|Audit.Core.AuditActivityTrace|10|0|10|80|100%|0|0||\n|Audit.Core.AuditDataProvider|16|0|16|118|100%|4|4|100%|\n|Audit.Core.AuditDataProvider<T>|16|0|16|118|100%|4|4|100%|\n|Audit.Core.AuditEvent|16|0|16|109|100%|0|0||\n|Audit.Core.AuditEventEnvironment|11|0|11|74|100%|0|0||\n|Audit.Core.AuditScope|257|8|265|663|96.9%|155|174|89%|\n|Audit.Core.AuditScopeFactory|67|0|67|209|100%|0|0||\n|Audit.Core.AuditScopeOptions|38|0|38|133|100%|2|2|100%|\n|Audit.Core.AuditScopeOptionsConfigurator|28|5|33|107|84.8%|1|2|50%|\n|Audit.Core.AuditTarget|3|0|3|26|100%|0|0||\n|Audit.Core.Configuration|217|42|259|604|83.7%|8|10|80%|\n|Audit.Core.ConfigurationApi.ActionConfigurator|5|0|5|19|100%|0|0||\n|Audit.Core.ConfigurationApi.ActionEventSelector|14|2|16|48|87.5%|0|0||\n|Audit.Core.ConfigurationApi.BlockingCollectionProviderConfigurator|10|0|10|32|100%|0|0||\n|Audit.Core.ConfigurationApi.BlockingCollectionProviderExtraConfigurator|2|0|2|13|100%|0|0||\n|Audit.Core.ConfigurationApi.ConditionalDataProviderConfigurator|25|12|37|77|67.5%|2|6|33.3%|\n|Audit.Core.ConfigurationApi.Configurator|41|15|56|153|73.2%|0|0||\n|Audit.Core.ConfigurationApi.CreationPolicyConfigurator|10|0|10|35|100%|0|0||\n|Audit.Core.ConfigurationApi.DynamicAsyncDataProviderConfigurator|21|2|23|79|91.3%|0|0||\n|Audit.Core.ConfigurationApi.DynamicDataProviderConfigurator|11|2|13|47|84.6%|0|0||\n|Audit.Core.ConfigurationApi.EventLogProviderConfigurator|9|8|17|54|52.9%|0|0||\n|Audit.Core.ConfigurationApi.FileLogProviderConfigurator|10|0|10|35|100%|0|0||\n|Audit.Core.DefaultSystemClock|1|0|1|16|100%|0|0||\n|Audit.Core.Extensions.ExceptionExtensions|3|0|3|25|100%|2|2|100%|\n|Audit.Core.Extensions.TypeExtensions|13|1|14|43|92.8%|9|10|90%|\n|Audit.Core.JsonAdapter|11|3|14|53|78.5%|4|8|50%|\n|Audit.Core.JsonAdapter<T>|11|3|14|53|78.5%|4|8|50%|\n|Audit.Core.PlatformHelper|5|0|5|16|100%|0|0||\n|Audit.Core.Providers.BlockingCollectionDataProvider|37|2|39|169|94.8%|17|22|77.2%|\n|Audit.Core.Providers.DynamicAsyncDataProvider|41|6|47|169|87.2%|6|6|100%|\n|Audit.Core.Providers.DynamicDataProvider|28|3|31|106|90.3%|6|6|100%|\n|Audit.Core.Providers.EventLogDataProvider|13|14|27|82|48.1%|2|10|20%|\n|Audit.Core.Providers.FileDataProvider|56|0|56|153|100%|12|12|100%|\n|Audit.Core.Providers.FileDataProvider.HiResDateTime|7|0|7|153|100%|2|2|100%|\n|Audit.Core.Providers.FileDataProvider<T>|56|0|56|153|100%|12|12|100%|\n|Audit.Core.Providers.InMemoryDataProvider|26|0|26|76|100%|0|0||\n|Audit.Core.Providers.NullDataProvider|6|0|6|36|100%|0|0||\n|Audit.Core.Providers.Wrappers.ConditionalDataProvider|27|5|32|114|84.3%|14|26|53.8%|\n|Audit.Core.Providers.Wrappers.ConditionalDataProvider.GuardCondition|2|0|2|114|100%|0|0||\n|Audit.Core.Providers.Wrappers.DeferredDataProvider|22|0|22|92|100%|9|18|50%|\n|Audit.Core.Providers.Wrappers.LazyDataProvider|22|0|22|89|100%|7|14|50%|\n|Audit.Core.Setting<T>|14|0|14|81|100%|2|2|100%|\n|**Audit.NET.Channels**|**42**|**11**|**53**|**192**|**79.2%**|**9**|**12**|**75%**|\n|Audit.Channels.Configuration.ChannelProviderConfigurator|6|6|12|34|50%|0|0||\n|Audit.Channels.Providers.ChannelDataProvider|36|1|37|128|97.2%|9|12|75%|\n|Audit.Core.ChannelConfiguratorExtensions|0|4|4|30|0%|0|0||\n|**Audit.NET.JsonNewtonsoftAdapter**|**95**|**35**|**130**|**316**|**73%**|**48**|**66**|**72.7%**|\n|Audit.Core.ConfiguratorExtensions|4|0|4|32|100%|0|0||\n|Audit.Core.JsonNewtonsoftAdapter|17|17|34|91|50%|2|10|20%|\n|Audit.Core.JsonNewtonsoftAdapter<T>|17|17|34|91|50%|2|10|20%|\n|Audit.JsonNewtonsoftAdapter.AuditContractResolver|57|1|58|102|98.2%|44|46|95.6%|\n|**Audit.NET.log4net**|**39**|**15**|**54**|**195**|**72.2%**|**11**|**20**|**55%**|\n|Audit.Core.Log4netConfiguratorExtensions|2|2|4|32|50%|0|0||\n|Audit.log4net.Configuration.Log4netConfigurator|6|6|12|47|50%|0|0||\n|Audit.log4net.Providers.Log4netDataProvider|31|7|38|116|81.5%|11|20|55%|\n|**Audit.NET.NLog**|**39**|**15**|**54**|**193**|**72.2%**|**11**|**20**|**55%**|\n|Audit.Core.NLogConfiguratorExtensions|2|2|4|30|50%|0|0||\n|Audit.NLog.Configuration.NLogConfigurator|6|6|12|47|50%|0|0||\n|Audit.NLog.Providers.NLogDataProvider|31|7|38|116|81.5%|11|20|55%|\n|**Audit.NET.Polly**|**63**|**24**|**87**|**317**|**72.4%**|**4**|**6**|**66.6%**|\n|Audit.Core.PollyConfiguratorExtensions|2|0|2|19|100%|0|0||\n|Audit.Polly.Configuration.PollyProviderConfigurator|5|0|5|19|100%|0|0||\n|Audit.Polly.Configuration.PollyResilienceConfigurator|4|0|4|19|100%|0|0||\n|Audit.Polly.FallbackActionArgumentsExtensions|14|2|16|59|87.5%|1|2|50%|\n|Audit.Polly.HedgingActionGeneratorArgumentsExtensions|7|10|17|65|41.1%|1|2|50%|\n|Audit.Polly.Providers.PollyDataProvider|30|12|42|120|71.4%|2|2|100%|\n|Audit.Polly.ResilienceContextExtensions|1|0|1|16|100%|0|0||\n|**Audit.NET.Serilog**|**36**|**20**|**56**|**223**|**64.2%**|**9**|**20**|**45%**|\n|Audit.Core.SerilogConfiguratorExtensions|2|2|4|37|50%|0|0||\n|Audit.Serilog.Configuration.SerilogConfigurator|6|6|12|53|50%|0|0||\n|Audit.Serilog.Providers.SerilogDataProvider|28|12|40|133|70%|9|20|45%|\n|**Audit.NET.SqlServer**|**414**|**27**|**441**|**1267**|**93.8%**|**198**|**216**|**91.6%**|\n|Audit.Core.SqlServerConfiguratorExtensions|2|0|2|23|100%|0|0||\n|Audit.SqlServer.AuditEventValueModel|1|0|1|88|100%|0|0||\n|Audit.SqlServer.Configuration.SqlServerProviderConfigurator|37|12|49|136|75.5%|0|0||\n|Audit.SqlServer.CustomColumn|12|2|14|32|85.7%|0|0||\n|Audit.SqlServer.DefaultAuditDbContext|16|3|19|88|84.2%|4|4|100%|\n|Audit.SqlServer.Providers.SqlDataProvider|173|5|178|450|97.1%|97|106|91.5%|\n|Audit.SqlServer.Providers.SqlDataProvider<T>|173|5|178|450|97.1%|97|106|91.5%|\n|**Audit.NET.Udp**|**81**|**10**|**91**|**308**|**89%**|**18**|**20**|**90%**|\n|Audit.Core.UdpProviderConfiguratorExtensions|13|0|13|48|100%|0|0||\n|Audit.Udp.Configuration.UdpProviderConfigurator|8|8|16|64|50%|4|4|100%|\n|Audit.Udp.Providers.UdpDataProvider|60|2|62|196|96.7%|14|16|87.5%|\n|**Audit.SignalR**|**341**|**102**|**443**|**1125**|**76.9%**|**144**|**302**|**47.6%**|\n|Audit.SignalR.AuditEventSignalr|1|0|1|15|100%|0|0||\n|Audit.SignalR.AuditHubFilter|99|9|108|196|91.6%|71|104|68.2%|\n|Audit.SignalR.AuditPipelineModule|159|48|207|348|76.8%|68|174|39%|\n|Audit.SignalR.Configuration.AuditHubConfigurator|11|4|15|58|73.3%|0|0||\n|Audit.SignalR.Configuration.AuditHubFilterConfigurator|6|18|24|90|25%|0|0||\n|Audit.SignalR.SignalrEventBase|1|2|3|33|33.3%|0|0||\n|Audit.SignalR.SignalrEventConnect|7|0|7|41|100%|0|0||\n|Audit.SignalR.SignalrEventDisconnect|9|0|9|43|100%|0|0||\n|Audit.SignalR.SignalrEventError|13|0|13|33|100%|0|0||\n|Audit.SignalR.SignalrEventIncoming|13|1|14|49|92.8%|0|0||\n|Audit.SignalR.SignalrEventOutgoing|7|0|7|25|100%|0|0||\n|Audit.SignalR.SignalrEventReconnect|7|0|7|25|100%|0|0||\n|Audit.SignalR.SignalrExtensions|8|20|28|169|28.5%|5|24|20.8%|\n|**Audit.WCF**|**150**|**77**|**227**|**626**|**66%**|**25**|**66**|**37.8%**|\n|Audit.WCF.AuditBehavior|2|6|8|72|25%|0|0||\n|Audit.WCF.AuditBehaviorAttribute|9|11|20|90|45%|0|10|0%|\n|Audit.WCF.AuditEventExtensions|0|6|6|32|0%|0|6|0%|\n|Audit.WCF.AuditEventWcfAction|1|0|1|15|100%|0|0||\n|Audit.WCF.AuditOperationInvoker|106|34|140|260|75.7%|24|46|52.1%|\n|Audit.WCF.AuditScopeAsyncResult|8|3|11|27|72.7%|0|0||\n|Audit.WCF.AuditScopeState|3|0|3|12|100%|0|0||\n|Audit.WCF.AuditWcfEventElement|6|0|6|19|100%|1|2|50%|\n|Audit.WCF.AuditWcfEventFault|0|6|6|15|0%|0|0||\n|Audit.WCF.WcfEvent|15|0|15|26|100%|0|0||\n|Audit.WCF.WcfOperationContext|0|11|11|58|0%|0|2|0%|\n|**Audit.Wcf.Client**|**82**|**23**|**105**|**341**|**78%**|**30**|**50**|**60%**|\n|Audit.Wcf.Client.AuditBehavior|0|11|11|74|0%|0|0||\n|Audit.Wcf.Client.AuditEndpointBehavior|11|6|17|59|64.7%|0|0||\n|Audit.Wcf.Client.AuditEventExtensions|4|2|6|31|66.6%|2|6|33.3%|\n|Audit.Wcf.Client.AuditEventWcfClient|1|0|1|12|100%|0|0||\n|Audit.Wcf.Client.AuditMessageInspector|56|4|60|115|93.3%|28|44|63.6%|\n|Audit.Wcf.Client.WcfClientAction|10|0|10|50|100%|0|0||\n|**Audit.WebApi**|**189**|**143**|**332**|**1193**|**56.9%**|**102**|**226**|**45.1%**|\n|Audit.WebApi.ApiControllerExtensions|1|3|4|92|25%|0|0||\n|Audit.WebApi.AuditApiAction|21|2|23|74|91.3%|0|0||\n|Audit.WebApi.AuditApiAdapter|98|29|127|249|77.1%|59|106|55.6%|\n|Audit.WebApi.AuditApiAttribute|30|3|33|133|90.9%|16|22|72.7%|\n|Audit.WebApi.AuditApiGlobalFilter|0|39|39|140|0%|0|32|0%|\n|Audit.WebApi.AuditApiHelper|8|4|12|139|66.6%|9|18|50%|\n|Audit.WebApi.AuditEventExtensions|2|4|6|32|33.3%|1|6|16.6%|\n|Audit.WebApi.AuditEventWebApi|1|0|1|16|100%|0|0||\n|Audit.WebApi.BodyContent|3|0|3|9|100%|0|0||\n|Audit.WebApi.ConfigurationApi.AuditApiGlobalActionsSelector|0|22|22|64|0%|0|4|0%|\n|Audit.WebApi.ConfigurationApi.AuditApiGlobalConfigurator|0|26|26|109|0%|0|0||\n|Audit.WebApi.ContextWrapper|25|11|36|136|69.4%|17|38|44.7%|\n|**Audit.WebApi.Core**|**407**|**82**|**489**|**1445**|**83.2%**|**216**|**294**|**73.4%**|\n|Audit.WebApi.ApiControllerExtensions|1|5|6|92|16.6%|0|0||\n|Audit.WebApi.AuditApiAction|22|2|24|74|91.6%|0|0||\n|Audit.WebApi.AuditApiAdapter|116|27|143|308|81.1%|91|136|66.9%|\n|Audit.WebApi.AuditApiAttribute|35|2|37|130|94.5%|16|18|88.8%|\n|Audit.WebApi.AuditApiGlobalFilter|32|1|33|140|96.9%|20|22|90.9%|\n|Audit.WebApi.AuditApiHelper|47|5|52|139|90.3%|32|44|72.7%|\n|Audit.WebApi.AuditEventExtensions|2|4|6|32|33.3%|1|6|16.6%|\n|Audit.WebApi.AuditEventWebApi|1|0|1|16|100%|0|0||\n|Audit.WebApi.AuditIgnoreActionFilter|4|0|4|23|100%|0|0||\n|Audit.WebApi.AuditMiddleware|97|2|99|181|97.9%|47|54|87%|\n|Audit.WebApi.AuditMiddlewareExtensions|3|0|3|24|100%|0|0||\n|Audit.WebApi.BodyContent|3|0|3|9|100%|0|0||\n|Audit.WebApi.ConfigurationApi.AuditApiGlobalActionsSelector|10|12|22|64|45.4%|1|6|16.6%|\n|Audit.WebApi.ConfigurationApi.AuditApiGlobalConfigurator|12|14|26|109|46.1%|0|0||\n|Audit.WebApi.ConfigurationApi.AuditMiddlewareConfigurator|22|8|30|104|73.3%|8|8|100%|\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at thepirat000@hotmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.4013671875,
          "content": "# Contribute\n\n## Introduction\n\nFirst, thank you for considering contributing to auditnet! It's people like you that make the open source community such a great community! ð\n\nWe welcome any type of contribution, not only code. You can help with \n- **QA**: file bug reports, the more details you can give the better (e.g. screenshots with the console open)\n- **Marketing**: writing blog posts, howto's, printing stickers, ...\n- **Community**: presenting the project at meetups, organizing a dedicated meetup for the local community, ...\n- **Code**: take a look at the [open issues](issues). Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them.\n- **Money**: we welcome financial contributions in full transparency on our [open collective](https://opencollective.com/auditnet).\n\n## Your First Contribution\n\nWorking on your first Pull Request? You can learn how from this *free* series, [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github).\n\n## Submitting code\n\nAny code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.\n\n## Code review process\n\nThe bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?\n\n## Financial contributions\n\nWe also welcome financial contributions in full transparency on our [open collective](https://opencollective.com/auditnet).\nAnyone can file an expense. If the expense makes sense for the development of the community, it will be \"merged\" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.\n\n## Questions\n\nIf you have any questions, create an [issue](issue) (protip: do a quick search first to see if someone else didn't ask the same question before!).\nYou can also reach us at hello@auditnet.opencollective.com.\n\n## Credits\n\n### Contributors\n\nThank you to all the people who have already contributed to auditnet!\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/auditnet/contributors.svg?width=890\" /></a>\n\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https://opencollective.com/auditnet#backer)]\n\n<a href=\"https://opencollective.com/auditnet#backers\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/backers.svg?width=890\"></a>\n\n\n### Sponsors\n\nThank you to all our sponsors! (please ask your company to also support this open source project by [becoming a sponsor](https://opencollective.com/auditnet#sponsor))\n\n<a href=\"https://opencollective.com/auditnet/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/auditnet/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/auditnet/sponsor/9/avatar.svg\"></a>\n\n<!-- This `CONTRIBUTING.md` is based on @nayafia's template https://github.com/nayafia/contributing-template -->"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.21875,
          "content": "<Project>\n <PropertyGroup>\n\t <Version>27.3.2</Version>\n\t <PackageReleaseNotes></PackageReleaseNotes>\n\t <CheckEolTargetFramework>false</CheckEolTargetFramework>\n\t <LangVersion>latest</LangVersion>\n </PropertyGroup>\n</Project>"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.9609375,
          "content": "<Project>\n\n\t<PropertyGroup Label=\"Default Versions\">\n\n\t</PropertyGroup>\n\n\t<Choose>\n\t\t<When Condition=\"$(MSBuildProjectName.Contains('UnitTest'))\">\n\t\t\t<PropertyGroup>\n\t\t\t\t<IsTestProject>True</IsTestProject>\n\t\t\t</PropertyGroup>\n\t\t\t\n\t\t\t<ItemGroup>\n\t\t\t\t<PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.8.0\" />\n\t\t\t\t<PackageReference Include=\"Moq\" Version=\"4.20.70\" />\n\t\t\t\t<PackageReference Include=\"NUnit\" Version=\"3.14.0\" />\n\t\t\t\t<PackageReference Include=\"NUnit3TestAdapter\" Version=\"4.5.0\" />\n\n\t\t\t\t<PackageReference Include=\"coverlet.collector\" Version=\"6.0.0\">\n\t\t\t\t\t<PrivateAssets>all</PrivateAssets>\n\t\t\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\n\t\t\t\t</PackageReference>\n\n\t\t\t\t<PackageReference Include=\"NUnit.Analyzers\" Version=\"3.10.0\">\n\t\t\t\t\t<PrivateAssets>all</PrivateAssets>\n\t\t\t\t\t<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\n\t\t\t\t</PackageReference>\n\t\t\t</ItemGroup>\n\t\t</When>\n\t</Choose>\n\n</Project>"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "MIT License\n\nCopyright (c) 2019 Federico Daniel Colombo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 65.99609375,
          "content": "# Audit.NET\n\n**[USAGE](#usage) | [OUTPUT](#output) | [CUSTOMIZATION](#custom-fields-and-comments) | [DATA PROVIDERS](#data-providers) | [CREATION POLICY](#event-creation-policy) | [CONFIGURATION](#configuration) | [EXTENSIONS](#extensions)**\n\nissues | build status | chat / support | donations\n------------ | ---------------- | ---------------- |  --------------\n[![issues-open](https://img.shields.io/github/issues-raw/thepirat000/Audit.NET.svg?label=open)](https://github.com/thepirat000/Audit.NET/issues)[![issues-closed](https://img.shields.io/github/issues-closed-raw/thepirat000/Audit.NET.svg?label=closed)](https://github.com/thepirat000/Audit.NET/issues) | [![build-status](https://img.shields.io/github/actions/workflow/status/thepirat000/audit.net/dotnet.yml)](https://github.com/thepirat000/Audit.NET/actions) | [![Gitter](https://img.shields.io/gitter/room/Audit.NET/Lobby.svg?label=english)](https://gitter.im/Audit-NET/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge) [![Gitter](https://img.shields.io/gitter/room/Audit.NET/Audit.NET-Spanish.svg?label=espaÃ±ol)](https://gitter.im/Audit-NET/Audit.NET-Spanish?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge) | [![backers](https://opencollective.com/auditnet/tiers/backer/badge.svg?label=backer&color=brightgreen)](https://opencollective.com/auditnet) [![paypal](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=thepirat000%40hotmail.com&currency_code=USD&source=url)\n\n### An extensible framework to audit executing operations in .NET and .NET Core.\n\nGenerate [audit logs](https://en.wikipedia.org/wiki/Audit_trail) with evidence for reconstruction and examination of activities that have affected specific operations or procedures. \n\nWith Audit.NET you can generate tracking information about operations being executed. It gathers environmental information such as the caller user ID, machine name, method name, and exceptions, including execution time and exposing an extensible mechanism to enrich the logs and handle the audit output.\n\n- [**Interaction extensions**](#extensions) to audit different systems are provided, such as [Entity Framework](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/README.md), \n[MVC](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.Mvc/README.md), \n[WebAPI](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WebApi/README.md), \n[WCF](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WCF/README.md), \n[File System](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.FileSystem/README.md), \n[SignalR](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.SignalR/README.md),\n[MongoClient](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.MongoClient/README.md) \nand [HttpClient](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.HttpClient/README.md).\n\n- [**Output extensions**](#storage-providers) are provided to log to [JSON Files](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/FileDataProvider.cs), \n[Event Log](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/EventLogDataProvider.cs), \n[SQL](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.SqlServer/README.md), \n[MySQL](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MySql/README.md), \n[PostgreSQL](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.PostgreSql/README.md), \n[RavenDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.RavenDB/README.md), \n[MongoDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MongoDB/README.md), \n[AzureBlob](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageBlobs/README.md), \n[AzureTables](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageTables/README.md), \n[AzureCosmos](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureCosmos/README.md), \n[Redis](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Redis/README.md), \n[Elasticsearch](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.ElasticSearch/README.md), \n[DynamoDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.DynamoDB/README.md), \n[UDP datagrams](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.Udp/README.md), [Channels](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.Channels/README.md) and more. \n\n- [**Output wrappers**](#data-provider-wrappers) are included \nto facilitate the encapsulation of other Data Providers for diverse purposes, like resilience or lazy instantiation, such as\n[Polly](#polly-data-provider), \n[Lazy](#lazy-factory-data-provider),\n[Deferred](#deferred-factory-data-provider) and\n[Conditional](#conditional-data-provider).\n\n\n## [NuGet](https://www.nuget.org/packages/Audit.NET/)\n\n[![NuGet Status](https://img.shields.io/nuget/v/Audit.NET.svg?style=flat)](https://www.nuget.org/packages/Audit.NET/)\n[![NuGet Count](https://img.shields.io/nuget/dt/Audit.NET.svg)](https://www.nuget.org/packages/Audit.NET/)\n\nTo install the package run the following command on the Package Manager Console:\n\n```\nPM> Install-Package Audit.NET\n```\n\n## Changelog\nCheck the [CHANGELOG.md](https://github.com/thepirat000/Audit.NET/blob/master/CHANGELOG.md) file.\n\n# Introduction\n\nThe **Audit Scope** and **Audit Event** are the central objects of this framework. \n\n### Audit Scope\nThe `AuditScope` serves as the central object in this framework, representing the scope of an audited operation or event. \nIt acts as a context for auditing, capturing pertinent details like the start time, involved entities, and any additional \ncustom information. Essentially, the `AuditScope` encapsulates an `AuditEvent`, controlling its life cycle.\n\nThe `AuditScope` is a disposable object, commonly utilized within a using statement to ensure proper finalization and recording of audit information upon exiting the scope.\n\nSee the [audit scope statechart](#auditscope-statechart).\n\n### Audit Event\nThe `AuditEvent` functions as an extensible information container that captures the details of the audited operation, \nis the representation of the audited information within an Audit Scope.\nIt includes details about the audited operation, such as the event type, timestamp, execution duration, \nand any custom fields or properties. \n\nThe `AuditEvent` is typically serialized into a format suitable for storage or transmission, such as JSON.\n\nThe audit events are stored using a **Data Provider**. You can use one of the [available data providers](https://github.com/thepirat000/Audit.NET?tab=readme-ov-file#storage-providers) or [implement your own](https://github.com/thepirat000/Audit.NET?tab=readme-ov-file#data-providers).\n\n### Audit Scope Factory\n\nThe preferred method for creating audit scopes is by using an `IAuditScopeFactory` instance. \nThis approach ensures a centralized and consistent configuration for all audit scopes.\n\n```c#\nvar factory = new AuditScopeFactory();\nusing var scope = factory.Create(new AuditScopeOptions(...));\n...\n```\n\nIf you're using a DI container, you can register the `IAuditScopeFactory` as a service and inject it into your classes. \nThe default implementation of `IAuditScopeFactory` is provided by the `AuditScopeFactory` class.\n\n```c#\nservices.AddScoped<IAuditScopeFactory, AuditScopeFactory>();\n```\n\nThen you can inject the IAuditScopeFactory into your classes to create audit scopes:\n\n```c#\npublic class MyService\n{\n  private readonly IAuditScopeFactory _auditScopeFactory;\n\n  public MyService(IAuditScopeFactory auditScopeFactory)\n  {\n    _auditScopeFactory = auditScopeFactory;\n  }\n\n  public void MyMethod()\n  {\n    using var scope = _auditScopeFactory.Create(new AuditScopeOptions(...));\n    ...\n  }\n}\n```\n\nYou can also implement your own `IAuditScopeFactory` to customize the creation of audit scopes. \nThe recommended approach is to inherit from the `AuditScopeFactory` class. \nBy overriding the `OnConfiguring` and `OnScopeCreated` methods, you can configure the audit scope options before creation and customize the audit scope after creation respectively.\n\nFor example:\n\n```c#\npublic class MyAuditScopeFactory : AuditScopeFactory\n{\n  private readonly IMyService _myService;\n  public MyAuditScopeFactory(IMyService myService)\n  {\n    _myService = myService;\n  }\n\n  public override void OnConfiguring(AuditScopeOptions options)\n  {\n    // Set the data provider to use\n    options.DataProvider = new SqlDataProvider(...);\n  }\n\n  public override void OnScopeCreated(AuditScope auditScope)\n  {\n    // Add a custom field to the audit scope\n    auditScope.SetCustomField(\"CustomId\", _myService.GetId());\n  }\n}\n```\n\nSeveral extensions for generating audit events, such as [Audit.EntityFramework.Core](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/README.md), [Audit.WebApi.Core](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WebApi/README.md), [Audit.Mvc.Core](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.Mvc/README.md), and [Audit.SignalR](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.SignalR/README.md), will automatically attempt to resolve the `IAuditScopeFactory` and `AuditDataProvider` instances from the service provider.\n\n# Support for older .NET frameworks\n\nBeginning with version 23.0.0, this library and its extensions have discontinued support for older .NET Framework and Entity Framework (versions that lost Microsoft support before 2023).\n\nFor reference, please consult the following links:\n\n- [.NET Core Support Policy](https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core)\n- [Entity Framework Core releases](https://learn.microsoft.com/en-us/ef/core/what-is-new/#stable-releases)\n\nThis library and its extensions will maintain support for the following **minimum** .NET framework versions:\n\n- .NET Framework 4.6.2 (net462)\n- .NET Standard 2.0 (netstandard2.0)\n- .NET 6 (net6.0)\n\n## Usage\n\nThe **Audit Scope** is the central object of this framework. It encapsulates an audit event, controlling its life cycle. \nThe **Audit Event** is an extensible information container of an audited operation. \n\nThere are several ways to create an Audit Scope:\n\n- Calling the `Create()` / `CreateAsync()` methods of an `AuditScopeFactory` instance.\nThis is the recommended approach. For example:\n\n    ```c#\n    var scope = auditScopeFactory.Create(new AuditScopeOptions(...));\n    ```\n\n- Using the overloads of the static methods `Create()` / `CreateAsync()` on `AuditScope`, for example:\n\n    ```c#\n    var scope = AuditScope.Create(new AuditScopeOptions()\n    {\n      EventType = \"Order:Update\",\n      TargetGetter = () => order,\n      ExtraFields = new { MyProperty = \"value\" }\n    });\n    ```\n\n- Using the provided fluent API, for example:\n\n    ```c#\n    var scope = AuditScope.Create(_ => _\n        .EventType(\"Order:Update\")\n        .ExtraFields(new { MyProperty = \"value\" })\n        .Target(() => order));\n    ```\n\n#### AuditScope options\n\nOption | Type | Description \n------------ | ---------------- | ---------------- \nEventType | `string` | A string representing the type of the event\nTargetGetter | `Func<object>` | Target object getter (a func that returns the object to track)\nExtraFields | `object` | Anonymous object that contains additional fields to be merged into the audit event\nDataProvider | `AuditDataProvider` | The [data provider](#data-providers) to use. Defaults to the DataProvider configured on `Audit.Core.Configuration.DataProvider`\nCreationPolicy | `EventCreationPolicy` | The [creation policy](#creation-policy) to use. Default is `InsertOnEnd` \nIsCreateAndSave | `bool` | Value indicating whether this scope should be immediately ended and saved after creation. Default is false\nAuditEvent | `AuditEvent` | Custom initial audit event to use. By default it will create a new instance of basic `AuditEvent`\nSkipExtraFrames | `int` | Value used to indicate how many frames in the stack should be skipped to determine the calling method. Default is 0\nCallingMethod | `MethodBase` | Specific calling method to store on the event. Default is to use the calling stack to determine the calling method.\nItems | `Dictionary<string, object>` | A dictionary of items that can be used to store additional information on the scope, accessible from the `AuditScope` instance.\n\nFor instance, consider the following code to _cancel an order_ that you want to audit:\n\n```c#\nOrder order = Db.GetOrder(orderId);\norder.Status = -1;\norder.OrderItems = null;\norder = Db.OrderUpdate(order);\n```\n\nTo audit this operation, you can wrap the code in a `using` block that initializes an `AuditScope`, specifying the target object to monitor:\n\n```c#\nOrder order = Db.GetOrder(orderId);\nusing (AuditScope.Create(\"Order:Update\", () => order))\n{\n  order.Status = -1;\n  order.OrderItems = null;\n  order = Db.OrderUpdate(order);\n}\n```\n\n> **Note**\n> \n> Using a `using` block is not required, but it streamlines the syntax when auditing a single code block. It also enables automatic exception detection and duration calculation by implicitly saving the event upon disposal. \n\n> **Note**\n> \n> When using the [extensions](#extensions) that logs interactions with different systems, like [Audit.EntityFramework](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/README.md), [Audit.WebApi](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WebApi/README.md), etc. you don't need to explicitly create the `AuditScope` or `AuditEvent`, they are created internally by the extension.\n\n### Simple logging\n\nIf you are not tracking an object or the duration of an event, you can use the `Log` shortcut method that logs an event immediately. \nFor example:\n```c#\nAuditScope.Log(\"Event Type\", new { ExtraField = \"extra value\" });\n```\n\n### Manual Saving\n\nYou can control the creation and saving logic, by creating a _manual_ `AuditScope`. For example to log a pair of `Start`/`End` method calls as a single event:\n\n```c#\npublic class SomethingThatStartsAndEnds\n{\n    private AuditScope auditScope;\n\n    public int Status { get; set; }\n\n    public void Start()\n    {\n        // Create a manual scope\n        auditScope = AuditScope.Create(new AuditScopeOptions()\n        {\n            EventType = \"MyEvent\",\n            TargetGetter = () => this.Status,\n            CreationPolicy = EventCreationPolicy.Manual\n        });\n    }\n\n    public void End()\n    {\n        // Save the event\n        auditScope.Save();  \n        // Discard to avoid further saving\n        auditScope.Discard();\n    }\n}\n```\n\nFor more information about the `EventCreationPolicy` please see [Event Creation Policy](https://github.com/thepirat000/Audit.NET/blob/master/README.md#event-creation-policy) section.\n\n## Output\n\nThe library will generate an output (`AuditEvent`) for each operation, including:\n- Tracked object's state before and after the operation.\n- Execution time and duration.\n- Environment information such as user, machine, domain, locale, etc.\n- [Comments and Custom Fields](#custom-fields-and-comments) provided.\n\nAn example of the output in JSON:\n\n```javascript\n{\n    \"EventType\": \"Order:Update\",\n    \"Environment\": {\n        \"UserName\": \"Federico\",\n        \"MachineName\": \"HP\",\n        \"DomainName\": \"HP\",\n        \"CallingMethodName\": \"Audit.UnitTest.AuditTests.TestUpdate()\",\n        \"Exception\": null,\n        \"Culture\": \"en-GB\"\n    },\n    \"Activity\": {\n        \"StartTimeUtc\": \"2023-12-01T17:36:52.2256288Z\",\n\t\"SpanId\": \"23a93b9e8cbc457f\",\n\t\"TraceId\": \"2d3e5e90f790c7d2274d9bb047531f66\",\n\t\"ParentId\": \"0000000000000000\",\n\t\"Operation\": \"Update\"\n    },\n    \"StartDate\": \"2016-08-23T11:33:14.653191Z\",\n    \"EndDate\": \"2016-08-23T11:33:23.1820786Z\",\n    \"Duration\": 8529,\n    \"Target\": {\n        \"Type\": \"Order\",\n        \"Old\": {\n            \"OrderId\": \"39dc0d86-d5fc-4d2e-b918-fb1a97710c99\",\n            \"Status\": 2,\n            \"OrderItems\": [{\n                \"Sku\": \"1002\",\n                \"Quantity\": 3.0\n            }]\n        },\n        \"New\": {\n            \"OrderId\": \"39dc0d86-d5fc-4d2e-b918-fb1a97710c99\",\n            \"Status\": -1,\n            \"OrderItems\": null\n        }\n    }\n}\n```\n\n## Output details\n\nThe following tables describe the output fields:\n\n- ### [AuditEvent object](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/AuditEvent.cs)\nField Name | Type | Description \n------------ | ---------------- |  -------------- \n**EventType** | string | User-defined string to group the events \n**Environment** | [**Environment**](#environment-object) | Contains information about the execution environment \n**StartDate** | DateTime | Date and time when the event has started \n**EndDate** | DateTime | Date and time when the event has ended \n**Duration** | integer | Duration of the event in milliseconds \n**Target** | [**Target**](#target-object) | User-defined tracked object \n**Comments** | Array of strings | User-defined comments \n**CustomFields** | Dictionary | User-defined custom fields \n\n\n- ### [Environment object](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/AuditEventEnvironment.cs)\nField Name | Type | Description\n------------ | ---------------- |  --------------\n**UserName** | string | Current logged user name\n**MachineName** | string | Executing machine name\n**DomainName** | string | Current user domain\n**CallingMethodName** | string | Calling method signature information\n**StackTrace** | string | The full stack trace at the moment of the audit scope creation (NULL unless it's enabled by configuration)\n**Exception** | string | Indicates if an Exception has been detected (NULL if no exception has been thrown)\n**Culture** | string | Current culture identifier\n\n- ### [Target object](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/AuditTarget.cs)\nField Name | Type | Description\n------------ | ---------------- |  --------------\n**Type** | string | Tracked object type name\n**Old** | Object | Value of the tracked object at the beginning of the event\n**New** | Object | Value of the tracked object at the end of the event\n\n## Custom Fields and Comments\n\nThe `AuditScope` object provides two methods to extend the event output.\n\n- Use `SetCustomField()` method to add any object as an extra field to the event.\n- Use `Comment()` to add textual comments to the event's `Comments` array.\n\nFor example:\n\n```c#\nOrder order = Db.GetOrder(orderId);\nusing (var audit = AuditScope.Create(\"Order:Update\", () => order))\n{\n    audit.SetCustomField(\"ReferenceId\", orderId);\n    order.Status = -1;\n    order = Db.OrderUpdate(order);\n    audit.Comment(\"Status Updated to Cancelled\");\n}\n```\n\nYou can also set Custom Fields when creating the `AuditScope`, by passing an anonymous object with the properties you want as extra fields. For example:\n\n```c#\nusing (var audit = AuditScope.Create(\"Order:Update\", () => order, new { ReferenceId = orderId }))\n{\n    order.Status = -1;\n    order = Db.OrderUpdate(order);\n    audit.Comment(\"Status Updated to Cancelled\");\n}\n```\n\nYou can also access the Custom Fields directly from `Event.CustomFields` property of the scope. For example:\n```c#\nusing (var audit = AuditScope.Create(\"Order:Update\", () => order, new { ReferenceId = orderId }))\n{\n    audit.Event.CustomFields[\"ReferenceId\"] = orderId;\n}\n```\n\n> **Note**\n> \n> Custom fields are not limited to single properties, you can store any object as well, by default they will be JSON serialized.\n\n### Extending AuditEvent\n\nAnother way to enrich the event output is to create a class inheriting from the `AuditEvent` class, then you can pass an instance of your class to the AuditScope.Create method. For example:\n\n```c#\npublic class YourAuditEvent : AuditEvent\n{\n    public Guid ReferenceId { get; set; } = Guid.NewGuid();\n}\n\nusing (var scope = AuditScope.Create(new AuditScopeOptions { AuditEvent = new YourAuditEvent() }))\n{\n    //...\n}\n```\n\nThe output of the previous examples would be:\n\n```javascript\n{\n    \"EventType\": \"Order:Update\",\n    \"Environment\": {\n        \"UserName\": \"Federico\",\n        \"MachineName\": \"HP\",\n        \"DomainName\": \"HP\",\n        \"CallingMethodName\": \"Audit.UnitTest.AuditTests.TestUpdate()\",\n        \"Exception\": null,\n        \"Culture\": \"en-GB\"\n    },\n    \"Target\": {\n        \"Type\": \"Order\",\n        \"Old\": {\n            \"OrderId\": \"39dc0d86-d5fc-4d2e-b918-fb1a97710c99\",\n            \"Status\": 2,\n            \n        },\n        \"New\": {\n            \"OrderId\": \"39dc0d86-d5fc-4d2e-b918-fb1a97710c99\",\n            \"Status\": -1,\n            \n        }\n    },\n    \"ReferenceId\": \"39dc0d86-d5fc-4d2e-b918-fb1a97710c99\",           // <-- Custom Field\n    \"Comments\": [\"Status Updated to Cancelled\"],                     // <-- Comments\n    \"StartDate\": \"2016-08-23T11:34:44.656101-05:00\",\n    \"EndDate\": \"2016-08-23T11:34:55.1810821-05:00\",\n    \"Duration\": 8531\n}\n```\n\n## Discard option\n\nThe `AuditScope` object has a `Discard()` method to allow the user to discard an event. Discarding an event means it won't be saved.\n\nFor example, if you want to avoid saving the audit event under certain conditions:\n\n```c#\nusing (var scope = AuditScope.Create(new AuditScopeOptions(\"SomeEvent\", () => someTarget)))\n{\n    try\n    {\n        //some operation\n        Critical.Operation();\n    }\n    catch (Exception ex)\n    {\n        //If an exception is thrown, discard the audit event\n        scope.Discard();\n    }\n}\n```\n\n## Data providers\n\nA _data provider_ (or _storage sink_) contains the logic to handle the audit event output, where you define what to do with the audit logs.\n\nYou can use one of the [data providers included](#data-providers-included) or inject your own mechanism \nby creating a class that inherits from `AuditDataProvider` and overrides its methods:\n\n- `InsertEvent`: should store the event and return a unique ID. \n- `ReplaceEvent`: should update an event given its ID. This method is only used for [Creation Policies](#event-creation-policy) **Manual** or **InsertOnStartReplaceOnEnd**.\n\nIf your data provider will support asynchronous operations, you must also implement the following methods:\n\n- `InsertEventAsync`: Asynchronous implementation of the InsertEvent method. \n- `ReplaceEventAsync`: Asynchronous implementation of the ReplaceEvent method.\n\nAlso, if your data provider will support event retrieval, you should implement the following methods:\n\n- `GetEvent`: Retrieves an event by id. \n- `GetEventAsync`: Asynchronous implementation of the GetEvent method. \n\n\nFor example:\n```c#\npublic class MyCustomDataProvider : AuditDataProvider\n{\n    public override object InsertEvent(AuditEvent auditEvent)\n    {\n        var fileName = $\"Log{Guid.NewGuid()}.json\";\n        File.WriteAllText(fileName, auditEvent.ToJson());\n        return fileName;\n    }\n    public override void ReplaceEvent(object eventId, AuditEvent auditEvent)\n    {\n        var fileName = eventId.ToString();\n        File.WriteAllText(fileName, auditEvent.ToJson());\n    }\n    public override T GetEvent<T>(object eventId)\n    {\n        var fileName = eventId.ToString();\n        return JsonConvert.DeserializeObject<T>(File.ReadAllText(fileName));\n    }\n    // async implementation:\n    public override async Task<object> InsertEventAsync(AuditEvent auditEvent, CancellationToken cancellationToken = default)\n    {\n        var fileName = $\"Log{Guid.NewGuid()}.json\";\n        await File.WriteAllTextAsync(fileName, auditEvent.ToJson(), cancellationToken);\n        return fileName;\n    }\n    public override async Task ReplaceEventAsync(object eventId, AuditEvent auditEvent, CancellationToken cancellationToken = default)\n    {\n        var fileName = eventId.ToString();\n        await File.WriteAllTextAsync(fileName, auditEvent.ToJson(), cancellationToken);\n    }\n    public override async Task<T> GetEventAsync<T>(object eventId, CancellationToken cancellationToken = default)\n    {\n        var fileName = eventId.ToString();\n        return await GetFromFileAsync<T>(cancellationToken);\n    }\n}\n```\n\n### Data provider selection\n\nThe data provider can be set globally for the entire application or per audit scope.\n\n> **Note**\n> \n> If you don't specify a global data provider, it will default to a `FileDataProvider` that logs events as .json files into the current working directory.\n\nTo set the global data provider, assign the `DataProvider` property on the static `Audit.Core.Configuration` object, or call the fluent API `Use()`. For example:\n\n```c#\nAudit.Core.Configuration.DataProvider = new MyCustomDataProvider();\n```\n\nOr using the fluent API `Use()` method:\n\n```c#\nAudit.Core.Configuration.Setup()\n  .Use(new MyCustomDataProvider());\n```\n\nTo set the data provider per-scope, use the `AuditScopeOptions` when creating an `AuditScope`. For example:\n\n```c#\nvar scope = AuditScope.Create(new AuditScopeOptions \n{ \n  DataProvider = new MyCustomDataProvider(), ... }\n);\n```\n\nEvery data provider is accompanied by a fluent API accessible during object construction or via its respective `Use___()` method. \nFor instance, in the case of the [SqlDataProvider]((https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.SqlServer/README.md)):\n\n```c#\nvar sqlDataProvider = new SqlDataProvider(_ => _\n    .ConnectionString(\"your connection string\")\n    .TableName(\"your table name\")\n    .IdColumnName(\"your id column name\")\n    .JsonColumnName(\"your json column name\"));\n```\n\n```c#\nAudit.Core.Configuration.Setup()\n  .UseSqlServer(_ => _\n    .ConnectionString(\"your connection string\")\n    .TableName(\"your table name\")\n    .IdColumnName(\"your id column name\")\n    .JsonColumnName(\"your json column name\"));\n```\n\n### Data provider wrappers\n\nA special type of Data Providers that allows wrapping other Data Provider with different purposes.\n\n#### Dynamic data provider\n\nAs an alternative to creating a data provider class, you can define the mechanism at run time by using the `DynamicDataProvider` or `DynamicAsyncDataProvider` classes. For example:\n\n```c#\nAudit.Core.Configuration.Setup()\n  .UseDynamicProvider(config => config\n    .OnInsert(ev => Console.Write(ev.ToJson())));\n```\n\nFor async operations, you should use the `DynamicAsyncDataProvider`, for example:\n\n```c#\nAudit.Core.Configuration.Setup()\n  .UseDynamicAsyncProvider(config => config\n    .OnInsert(async ev => await File.WriteAllTextAsync(filePath, ev.ToJson())));\n```\n\n#### Lazy Factory data provider\n\nYou can set the global data provider using a deferred instantiation technique, with a **lazy factory method** that will be called upon its initial utilization. \nFor instance, in situations where dependency resolution is needed but not immediately accessible during initialization.\n\nAllows to lazily instantiate the data provider to use. The data provider factory method will be called only once; the first time it's needed.\n\nFor example:\n\n```c#\nAudit.Core.Configuration.Setup()\n    .UseLazyFactory(() => app.ApplicationServices.GetService<CustomDataProvider>());\n```\n\n#### Deferred Factory data provider\n\nYou can defer creating the data provider for each Audit Event until it is ready to be saved by using a **deferred factory method**. \nThe factory method will be called for each audit event being saved. \n\nFor example:\n\n```c#\nvar sqlDataProvider = new SqlDataProvider(config => config...);\nvar fileDataProvider = new FileDataProvider(config => config...);\n\nAudit.Core.Configuration.Setup()\n    .UseDeferredFactory(auditEvent => auditEvent is AuditEventWebApi ? sqlDataProvider : fileDataProvider);\n```\n\n#### Conditional data provider\n\nEnables the configuration of different data providers based on conditions related to the audit event.\n  \nFor example:\n\n```c#\nConfiguration.DataProvider = new ConditionalDataProvider(config => config\n  .When(auditEvent => auditEvent.EventType.Equals(\"A\"), new MyCustomDataProvider())\n  .When(auditEvent => auditEvent.EventType.Equals(\"B\"), new SqlDataProvider())\n  .Otherwise(new FileDataProvider()));\n```\n\n#### Polly data provider\n\nAllows to define [Polly](https://www.pollydocs.org/index.html) resilience strategies to any [Data Provider](https://github.com/thepirat000/Audit.NET?tab=readme-ov-file#data-providers).\n\nThis is useful when you want to add resilience to your data provider, for example, to retry failed operations, or to add a circuit breaker.\n\nFor example:\n\n```c#\nAudit.Core.Configuration.Setup()\n  .UsePolly(p => p\n    .DataProvider(new SqlDataProvider(...))\n    .WithResilience(resilience => resilience\n      .AddRetry(new()\n      {\n        ShouldHandle = new PredicateBuilder().Handle<SqlException>(),\n        MaxRetryAttempts = 2\n      })));\n```       \n\nFor more information, please refer to the [Audit.NET.Polly documentation](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Polly/README.md).\n\n### Data providers included\n\nThe Data Providers included are summarized in the following table:\n\n| **Type** | **Technology**    | **Package / Class**                                                                                                                                                                                                                                                                                                       | **Description**                                                                                                              | **[Configuration API](#configuration-fluent-api)**     |\n|----------|-------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------|\n| SQL      | Amazon QLDB       | [Audit.NET.AmazonQLDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AmazonQLDB/README.md) / [AmazonQldbDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AmazonQLDB/Providers/AmazonQldbDataProvider.cs)                                                             | Store the audit events using [Amazon QLDB](https://aws.amazon.com/es/qldb/).                                                 | `.UseAmazonQldb()`                                     |\n| SQL      | Entity Framework  | [Audit.EntityFramework](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/README.md#entity-framework-data-provider) / [EntityFrameworkDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/Providers/EntityFrameworkDataProvider.cs)                 | Store EntityFramework audit events in the same EF context. (This data provider can only be used for Entity Framework audits) | `.UseEntityFramework()`                                |\n| SQL      | MySql             | [Audit.NET.MySql](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.MySql#auditnetmysql) / [MySqlDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MySql/Providers/MySqlDataProvider.cs)                                                                                  | Store the events as rows in a **MySQL** database table, in JSON format.                                                      | `.UseMySql()`                                          |\n| SQL      | Postgre SQL       | [Audit.NET.PostgreSql](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.PostgreSql#auditnetpostgresql) / [PostgreSqlDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.PostgreSql/Providers/PostgreSqlDataProvider.cs)                                                    | Store the events as rows in a **PostgreSQL** database table, in JSON format.                                                 | `.UsePostgreSql()`                                     |\n| SQL      | SQL Server        | [Audit.NET.SqlServer](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.SqlServer#auditnetsqlserver) / [SqlDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.SqlServer/Providers/SqlDataProvider.cs)                                                                      | Store the events as rows in a **MS SQL** Table, in JSON format.                                                              | `.UseSqlServer()`                                      |\n| NoSQL    | Azure Cosmos      | [Audit.NET.AzureCosmos](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.AzureCosmos#auditnetazurecosmos) / [AzureCosmosDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureCosmos/Providers/AzureCosmosDataProvider.cs)                                              | Store the events in an **Azure Cosmos DB** container, in JSON format.                                                        | `.UseAzureCosmos()`                                    |\n| NoSQL    | Azure Storage     | [Audit.NET.AzureStorageBlobs](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.AzureStorageBlobs) / [AzureStorageBlobDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageBlobs/Providers/AzureStorageBlobDataProvider.cs)                                      | Store the events in an **Azure Blob Storage** container, in JSON format.                                                     | `.UseAzureStorageBlobs()`                              |\n| NoSQL    | Azure Tables      | [Audit.NET.AzureStorageTables](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.AzureStorageTables) / [AzureStorageTableDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageTables/Providers/AzureTableDataProvider.cs)                                        | Store the events in an **Azure Table Storage**.                                                                              | `.UseAzureTableStorage()`                              |\n| NoSQL    | Dynamo DB         | [Audit.NET.DynamoDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.DynamoDB/README.md) / [DynamoDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.DynamoDB/Providers/DynamoDataProvider.cs)                                                                           | Store audit events in [Amazon DynamoDBâ¢](https://aws.amazon.com/dynamodb/) tables.                                           | `.UseDynamoDB()`                                       |\n| NoSQL    | Elasticsearch     | [Audit.NET.Elasticsearch](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.ElasticSearch/README.md) / [ElasticsearchDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.ElasticSearch/Providers/ElasticsearchDataProvider.cs)                                              | Store audit events in Elasticsearch indices.                                                                                 | `.UseElasticsearch()`                                  |\n| NoSQL    | Kafka             | [Audit.NET.Kafka](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Kafka/README.md) / [KafkaDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Kafka/Providers/KafkaDataProvider.cs)                                                                                      | Stream the audit events to [Apache Kafka](https://kafka.apache.org/) topics.                                                 | `.UseKafka()` / `.UseKafka<TKey>()`                    |\n| NoSQL    | Mongo DB          | [Audit.NET.MongoDB](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.MongoDB#auditnetmongodb) / [MongoDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MongoDB/Providers/MongoDataProvider.cs)                                                                          | Store the events in a **Mongo DB** collection, in BSON format.                                                               | `.UseMongoDB()`                                        |\n| NoSQL    | Raven DB          | [Audit.NET.RavenDB](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.RavenDB#auditnetravendb) / [RavenDbDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.RavenDB/Providers/RavenDbSqlDataProvider.cs)                                                                   | Store the events as documents in a **Raven DB** database table, in JSON format.                                              | `.UseRavenDB()`                                        |\n| NoSQL    | Redis             | [Audit.NET.Redis](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Redis/README.md) / [RedisDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Redis/Providers/RedisDataProvider.cs)                                                                                      | Store audit logs in Redis as Strings, Lists, SortedSets, Hashes, Streams or publish to a PubSub channel.                     | `.UseRedis()`                                          |\n| Local    | Windows Event Log | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [Audit.NET.EventLog.Core](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.EventLog.Core) 7 [EventLogDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/EventLogDataProvider.cs)                        | Write the audit logs to the Windows EventLog.                                                                                | `.UseEventLogProvider()`                               |\n| Local    | File System       | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [FileDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/FileDataProvider.cs)                                                                                                                                              | Store the audit logs as files. Dynamically configure the directory and path.                                                 | `.UseFileLogProvider()`                                |\n| InMemory | In-Memory List    | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [InMemoryDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/InMemoryDataProvider.cs)                                                                                                                                      | Store the audit logs in memory in a thread-safe list. Useful for testing purposes.                                           | `.UseInMemoryProvider()`                               |\n| InMemory | In-Memory Blocking Collection | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [BlockingCollectionDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/BlockingCollectionDataProvider.cs)                                                                                                      | Store the audit events in a BlockingCollection that can be accessed by different threads to consume the events               | `.UseInMemoryBlockingCollectionProvider()`             |\n| InMemory | In-Memory Channel | [Audit.NET.Channels](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.Channels/README.md) / [ChannelDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Channels/Providers/ChannelDataProvider.cs)                                                                                                                                      | Store the audit events in a Channel (from System.Threading.Channels) that can be accessed to consume the events      | `.UseInMemoryChannelProvider()`                        |\n| Logging  | Log4net           | [Audit.NET.log4net](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.log4net/README.md) / [Log4netDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.log4net/Providers/Log4netDataProvider.cs)                                                                            | Store the audit events using [Apache log4netâ¢](https://logging.apache.org/log4net/).                                         | `.UseLog4net()`                                        |\n| Logging  | NLog              | [Audit.NET.NLog](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.NLog/README.md) / [NLogDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.NLog/Providers/NLogDataProvider.cs)                                                                                           | Store the audit events using [NLog](https://nlog-project.org/).                                                              | `.UseNLog()`                                           |\n| Logging  | Serilog           | [Audit.NET.Serilog](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.Serilog/README.md) / [SerilogDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Serilog/Providers/SerilogDataProvider.cs)                                                                            | Store the audit events using [Serilogâ¢](https://serilog.net/)                                                                | `.UseSerilog()`                                        |\n| Network  | UDP               | [Audit.NET.Udp](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Udp/README.md) / [UdpDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Udp/Providers/UdpDataProvider.cs)                                                                                                | Send Audit Logs as UDP datagrams to a network.                                                                               | `.UseUdp()`                                            |\n| Wrapper  | Conditional       | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [ConditionalDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/Wrappers/ConditionalDataProvider.cs)                                                                                                                       | Allows the configuration of different data providers based on conditions related to the audit event.                         | `.UseConditional()`                                    |\n| Wrapper  | Deferred          | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [DeferredDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/Wrappers/DeferredDataProvider.cs)                                                                                                                             | Facilitates delayed data provider instantiation via a factory method that is invoked for each Audit Event.                   | `.UseDeferredFactory()`                                |\n| Wrapper  | Dynamic           | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [DynamicDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/DynamicDataProvider.cs) / [DynamicAsyncDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/DynamicAsyncDataProvider.cs) | Dynamically change the behavior at run-time. Define _Insert_ and a _Replace_ actions with lambda expressions.                | `.UseDynamicProvider()` / `.UseDynamicAsyncProvider()` |\n| Wrapper  | Lazy              | [Audit.NET](https://github.com/thepirat000/Audit.NET) / [LazyDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/Wrappers/LazyDataProvider.cs)                                                                                                                                     | Facilitates delayed data provider instantiation via a factory method that is invoked just once, upon the initial need.       | `.UseLazyFactory()`                                    |\n| Wrapper  | Polly             | [Audit.NET.Polly](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Polly/README.md) / [PollyDataProvider](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Polly/Providers/PollyDataProvider.cs)                                                                                      | Allows to define [Polly](https://www.pollydocs.org/index.html) resilience strategies to any Data Provider                    | `.UsePolly()`                                          |\n\n\n## Event Creation Policy\n\nThe audit scope allows configuration for invoking its data provider through different approaches:\n\n- **Insert on End** (default): The audit event is recorded when the scope is disposed.\n\n- **Insert on Start, Replace on End**: The initial state of the event is recorded upon scope creation, and the complete event information is updated when the scope is disposed.\n\n- **Insert on Start, Insert on End**: Two versions of the event are recordedâone at scope creation and another at scope disposal.\n\n- **Manual**: Event saving (insert or replace) must be explicitly triggered by calling the `Save()` method on the `AuditScope`.\n\nThe Creation Policy can be set on a per-scope basis. For example, to configure the policy explicitly to Manual:\n\n```c#\nusing (var scope = AuditScope.Create(new AuditScopeOptions { CreationPolicy = EventCreationPolicy.Manual }))\n{\n    //...\n    scope.Save();\n}\n```\n\n> **Note**\n> \n> If you don't provide a Creation Policy when creating the `AuditScope`, the globally configured Creation Policy will be used (see the [configuration](#configuration) section)\n\n## AuditScope statechart\n\nThe following is the internal state machine representation of the `AuditScope` object:\n\n<img src=\"https://i.imgur.com/7WqGECe.png\" alt=\"AuditScope statecart\" />\n\n# Configuration\n\n### Data provider\nTo change the default data provider, set the static property `DataProvider` on `Audit.Core.Configuration` class. This should be done before the `AuditScope` creation, i.e. during application startup.\n\nFor example, to set your own provider as the default data provider:\n```c#\nAudit.Core.Configuration.DataProvider = new MyCustomDataProvider();\n```\n\n> **Note**\n> \n> If you don't specify a Data Provider, a default `FileDataProvider` will be used to write the events as .json files into the current working directory.\n\n### Creation Policy\nTo change the default creation policy, set the static property `CreationPolicy` on `Audit.Core.Configuration` class. This should be done before the `AuditScope` creation, i.e. during application startup.\n \nFor example, to set the default creation policy to Manual:\n```c#\nAudit.Core.Configuration.CreationPolicy = EventCreationPolicy.Manual;\n```\n\n> **Note**\n> \n> If you don't specify a Creation Policy, the default `Insert on End` will be used.\n\n### Custom Actions\nYou can configure Custom Actions to be executed across all Audit Scopes in your application. \nThis allows you to globally modify behavior and data, intercepting scopes after they are created, before they are saved, or during disposal\n\nCall the static `AddCustomAction()` method on `Audit.Core.Configuration` class to attach a custom action. \n\nFor example, to globally discard the events under a certain condition:\n```c#\nAudit.Core.Configuration.AddCustomAction(ActionType.OnScopeCreated, scope =>\n{\n    if (DateTime.Now.Hour >= 17)\n    {\n        scope.Discard();\n        return false;\n    }\n    return true;\n});\n```\n\n> **Note**\n> \n> The custom actions can return a boolean value to indicate if subsequent actions of the same type should be executed.\n\n\nOr to add custom fields/comments globally to all scopes:\n```c#\nAudit.Core.Configuration.AddCustomAction(ActionType.OnEventSaving, scope =>\n{\n    if (scope.Event.Environment.Exception != null)\n    {\n        scope.SetCustomField(\"Oops\", true);\n    }\n    scope.Comment(\"Saved at \" + DateTime.Now);\n});\n```\n\nCustom actions can also be asynchronous, for example:\n```c#\nAudit.Core.Configuration.AddCustomAction(ActionType.OnScopeCreated, async scope =>\n{\n    var result = await svcProvider.GetService<InfoService>().GetInfoAsync();\n    scope.SetCustomField(\"Info\", result);\n});\n```\n\nThe `ActionType` indicates when to perform the action. The allowed values are:\n- `OnScopeCreated`: When the Audit Scope is being created, before any saving. This is executed once per Audit Scope.\n- `OnEventSaving`: When an Audit Scope's Event is about to be saved. \n- `OnEventSaved`: After an Audit Scope's Event is saved. \n- `OnScopeDisposed`: When an Audit Scope is disposed.\n\n### Stack Trace\n\nTo include the stack trace details into the event environment, ensure that the `IncludeStackTrace` configuration is set to `true`. Default is `false`.\n\n```c#\nAudit.Core.Configuration.IncludeStackTrace = true;\n```\n\nor \n\n```c#\nAudit.Core.Configuration.Setup()\n    .IncludeStackTrace();\n```\n\n### Activity Trace\n\nTo include the current activity trace details from [System.Diagnostics.Activity](https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.activity?view=net-8.0) \nAPI into the event, ensure that the `IncludeActivityTrace` configuration is set to `true`. The default is `false`.\n\nIt will include the current `Activity` operation name, ID, and StartTime, along with associated Tags and Events.\n\n```c#\nAudit.Core.Configuration.IncludeActivityTrace = true;\n```\n\nor \n\n```c#\nAudit.Core.Configuration.Setup()\n    .IncludeActivityTrace();\n```\n\nTo create and start a new distributed activity trace, you can use the `StartActivityTrace` configuration:\n\n```c#\nAudit.Core.Configuration.Setup()\n    .StartActivityTrace();\n```\n\n### Global switch off\n\nYou can disable audit logging by setting the static property `Configuration.AuditDisabled` to `true`. \nThe audit events are globally ignored while this flag is set. For example to disable the audits on certain environments:\n\n```c#\nif (environment.IsDevelopment())\n{\n    Audit.Core.Configuration.AuditDisabled = true;\n}\n```\n\n### Global serialization settings\n\nMost of the data providers serialize audit events in JSON format. Audit.NET uses `System.Text.Json` by default for the serialization and deserialization of audit events. \n\nIf you want to change the behavior, you can change the settings via the static property `Configuration.JsonSettings`.\n\nFor example:\n\n```c#\nAudit.Core.Configuration.JsonSettings = new JsonSerializerOptions\n{\n    DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault,\n    AllowTrailingCommas = true\n};\n```\n\n#### Custom serialization mechanism\n\nIf you want to use a custom JSON serialization mechanism for the Audit Events, you can create a class implementing `IJsonAdapter` and assign it to the \nstatic property `Configuration.JsonAdapter`.\n\nFor example:\n```c#\nAudit.Core.Configuration.JsonAdapter = new MyCustomAdapter(); \n```\n\nOr by using the fluent API:\n```c#\nAudit.Core.Configuration.Setup()\n    .JsonAdapter<MyCustomAdapter>()\n    ...\n```\n\n> **Note**\n> \n> Take into account that some of the `AuditEvent` properties rely on attribute decoration for serialization and deserialization.\n> The recommendation is to use the default adapter and, when needed, use the Newtonsoft Json adapter provided (see next section).\n\n#### Alternative serialization mechanism\n\nThis library offers the option to configure an alternative JSON serialization mechanism through the following adapter:\n\n- [`Audit.NET.JsonNewtonsoftAdapter`](https://github.com/thepirat000/Audit.NET/tree/master/src/Audit.NET.JsonNewtonsoftAdapter)\n\n    Use this when you prefer employing Newtonsoft.Json as the serialization mechanism.\n\n    Assign an instance of `JsonNewtonsoftAdapter` to the static configuration property `Configuration.JsonAdapter`. For example:\n\n    ```c#\n    var settings = new JsonSerializerSettings()\n    {\n        TypeNameHandling = TypeNameHandling.All\n    };\n    Audit.Core.Configuration.JsonAdapter = new JsonNewtonsoftAdapter(settings);\n    ```\n\n    Alternatively, you can use the fluent configuration API with the `JsonNewtonsoftAdapter()` method, like this:\n\n\n    ```c#\n    Audit.Core.Configuration.Setup()\n        .JsonNewtonsoftAdapter(settings)\n        ...\n    ```\n\n    > NOTE: This `JsonNewtonsoftAdapter` takes into account `JsonExtensionDataAttribute` and `JsonIgnoreAttribute` decorators from both `System.Text.Json` and `Newtonsoft.Json`, so the Audit Events \n    > will be properly serialized.\n\n## Configuration Fluent API\nAlternatively to the properties/methods mentioned before, you can configure the library using a convenient [Fluent API](http://martinfowler.com/bliki/FluentInterface.html) provided by the method `Audit.Core.Configuration.Setup()`, this is the most straightforward way to configure the library.\n\nFor example, to set the FileLog Provider with its default settings using a Manual creation policy:\n```c#\nAudit.Core.Configuration.Setup\n    .IncludeStackTrace()\n    .IncludeActivityTrace()\n    .UseFileLogProvider()\n    .WithCreationPolicy(EventCreationPolicy.Manual);\n```\n\n## Configuration examples\n\n##### File log provider with dynamic directory path and filename:\n```c#\nAudit.Core.Configuration.Setup()\n    .UseFileLogProvider(config => config\n        .DirectoryBuilder(_ => $@\"C:\\Logs\\{DateTime.Now:yyyy-MM-dd}\")\n        .FilenameBuilder(auditEvent => $\"{auditEvent.Environment.UserName}_{DateTime.Now.Ticks}.json\"));\n```\n\n##### File log provider with an InsertOnStart-ReplaceOnEnd creation policy, and a global custom field set in a custom action:\n```c#\nAudit.Core.Configuration.Setup()\n    .UseFileLogProvider(config => config\n        .FilenamePrefix(\"Event_\")\n        .Directory(@\"C:\\AuditLogs\\1\"))\n    .WithCreationPolicy(EventCreationPolicy.InsertOnStartReplaceOnEnd)\n    .WithAction(x => x.OnScopeCreated(scope => scope.SetCustomField(\"ApplicationId\", \"MyApplication\")));\n```\n\n\n##### Event log provider with an InsertOnEnd creation policy:\n```c#\nAudit.Core.Configuration.Setup()\n    .UseEventLogProvider(config => config\n        .SourcePath(\"My Audited Application\")\n        .LogName(\"Application\"))\n    .WithCreationPolicy(EventCreationPolicy.InsertOnEnd);\n```\n\n##### Dynamic provider to log to the console:\n```c#\nAudit.Core.Configuration.Setup()\n    .UseDynamicProvider(config => config\n        .OnInsert(ev => Console.WriteLine(\"{0}: {1}->{2}\", ev.StartDate, ev.Environment.UserName, ev.EventType)));\n```\n\n##### Multiple providers with conditional logic:\n\n```c#\nvar sqlDataProvider = new SqlDataProvider(sql => sql.ConnectionString(CnnString).TableName(\"Logs\"));\nvar fileDataProvider = new FileDataProvider(file => file.Directory(@\"C:\\logs\"));\n\nAudit.Core.Configuration.Setup()\n    .UseConditional(c => c\n        .When(ev => ev.EventType == \"API\", sqlDataProvider)\n        .Otherwise(fileDataProvider));\n```\n\n-----------\n\n# Extensions\n\nThe following packages are extensions to log interactions with different systems such as MVC, WebApi, WCF, and Entity Framework: \n\n<a></a> | Package | Description \n------------ | ------------------- | ------------------\n<img src=\"https://i.imgur.com/hVMM5WF.png\" alt=\"icon\" width=\"90\"/> | **[Audit.DynamicProxy](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.DynamicProxy/README.md)** | Generate detailed audit logs for **any class** without changing its code by using a proxy.\n<img src=\"https://i.imgur.com/wdVHFoc.png\" alt=\"icon\" width=\"90\"/> | **[Audit.EntityFramework](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.EntityFramework/README.md)** | Generate detailed audit logs for saving operations on **Entity Framework**, by inheriting from a provided `DbContext` or `IdentityDbContext`.  Includes support for EF 6 and EF 7 (EF Core).\n<img src=\"https://i.imgur.com/Fn4thn0.png\" alt=\"icon\" width=\"90\"/> | **[Audit.FileSystem](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.FileSystem/README.md)** | Generate audit logs by intercepting **file system** events via FileSystemWatcher.\n<img src=\"https://i.imgur.com/8lV5DRk.png\" alt=\"icon\" width=\"90\" /> | **[Audit.HttpClient](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.HttpClient/README.md)** | Generate detailed client-side audit logs for **HttpClient** REST calls, by configuring a provided message handler.\n<img src=\"https://i.imgur.com/ap6CeoG.png\" alt=\"icon\" width=\"90\"/> | **[Audit.MVC](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.Mvc/README.md)** | Generate detailed audit logs by decorating **MVC** Actions and Controllers with an action filter attribute. Includes support for ASP.NET Core MVC.\n<img src=\"https://i.imgur.com/GB2e52X.jpg\" alt=\"icon\" width=\"90\"/> | **[Audit.SignalR](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.SignalR/README.md)** | Generate audit logs for **SignalR** and **SignalR Core** invocations by intercepting the hub processing\n<img src=\"https://i.imgur.com/p6knit4.png\" alt=\"icon\" width=\"90\" /> | **[Audit.WCF](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WCF/README.md)** | Generate detailed **server-side** audit logs for **Windows Communication Foundation (WCF)** service calls, by configuring a provided behavior.\n<img src=\"https://i.imgur.com/p6knit4.png\" alt=\"icon\" width=\"90\" /> | **[Audit.WCF.Client](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WCF.Client/README.md)** | Generate detailed **client-side** audit logs for **Windows Communication Foundation (WCF)** service calls, by configuring a provided behavior.\n<img src=\"https://i.imgur.com/9go2b0f.png\" alt=\"icon\" width=\"90\"/> | **[Audit.WebApi](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.WebApi/README.md)** | Generate detailed audit logs by decorating **Web API** Methods and Controllers with an action filter attribute, or by using a middleware. Includes support for ASP.NET Core.\n<img src=\"https://i.imgur.com/1nMVLQo.png\" alt=\"icon\" width=\"90\"/> | **[Audit.MongoClient](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.MongoClient/README.md)** | Generate detailed audit logs by adding a [Command Event Subscriber](https://mongodb.github.io/mongo-csharp-driver/2.8/reference/driver_core/events/) into the configuration of the MongoDB Driver.\n\n# Data providers\n\nA Data Provider (or Storage Provider) is a component responsible for handling how audit event data is stored or processed. The purpose of the Data Provider is to manage the persistence of audit logs once an audit event is triggered and captured. The Data Provider defines how the Audit Event is saved.\n\nAudit.NET offers a range of built-in Data Providers for various storage solutions, including [File System](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/FileDataProvider.cs), [Event Log](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/EventLogDataProvider.cs), [InMemory List](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/InMemoryDataProvider.cs), and [InMemory Blocking Collection](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET/Providers/BlockingCollectionDataProvider.cs). \n\nMoreover, several [Data Provider Wrappers](#data-provider-wrappers) are available to encapsulate other Data Providers for various purposes, such as resilience and lazy instantiation. Examples include [Polly](#polly-data-provider), [Lazy](#lazy-factory-data-provider), [Deferred](#deferred-factory-data-provider), and [Conditional](#conditional-data-provider).\n\nIn addition, a variety of other Data Providers are available through separate packages, as shown below:\n\n<a></a> | Package | Description\n------------- | ------------------- | ------------------\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/amazondynamodb.svg\" /> | **[Audit.NET.AmazonQLDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AmazonQLDB/README.md)** | Store the audit events in **Amazon QLDB** (Quantum Ledger Database).\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/microsoftazure.svg\" /> | **[Audit.NET.AzureCosmos](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureCosmos/README.md)** | Store the events in an **Azure Cosmos DB** container, in JSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/microsoftazure.svg\" /> | **[Audit.NET.AzureStorage](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorage/README.md)** | Store the events in an **Azure Blob Storage** container or an **Azure Table** using the legacy client [WindowsAzure.Storage](https://www.nuget.org/packages/WindowsAzure.Storage/).\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/microsoftazure.svg\" /> | **[Audit.NET.AzureStorageBlobs](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageBlobs/README.md)** | Store the events in an **Azure Blob Storage** container using the latest client [Azure.Storage.Blobs](https://docs.microsoft.com/en-us/dotnet/api/overview/azure/storage.blobs-readme).\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/microsoftazure.svg\" /> | **[Audit.NET.AzureStorageTables](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.AzureStorageTables/README.md)** | Store the events in an **Azure Table Storage** using the latest client [Azure.Data.Tables](https://docs.microsoft.com/en-us/dotnet/api/overview/azure/data.tables-readme).\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.Channels](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Channels/README.md)** | Store the audit events in a Channel (from System.Threading.Channels) that can be accessed to consume the events.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/amazondynamodb.svg\" /> | **[Audit.NET.DynamoDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.DynamoDB/README.md)** | Store the audit events in Amazon DynamoDB tables.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/elasticsearch.svg\" /> | **[Audit.NET.Elasticsearch](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.ElasticSearch/README.md)** | Store the audit events in Elasticsearch indices.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/apachekafka.svg\" /> | **[Audit.NET.Kafka](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Kafka/README.md)** | Stream the audit events to an **Apache Kafka** server.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.log4net](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.log4net/README.md)** | Store the audit events using Apache log4netâ¢.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/mongodb.svg\" /> | **[Audit.NET.MongoDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MongoDB/README.md)** | Store the events in a **Mongo DB** Collection, in BSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/mysql.svg\" /> | **[Audit.NET.MySql](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.MySql/README.md)** | Store the events as rows in **MySQL** database, in JSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.NLog](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.NLog/README.md)** | Store the audit events using NLogâ¢.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.Polly](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Polly/README.md)** | Define [Polly](https://www.pollydocs.org/) resiliencie strategies to any data provider.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/postgresql.svg\" /> | **[Audit.NET.PostgreSql](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.PostgreSql/README.md)** | Store the events as rows in a **PostgreSQL** database, in JSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.RavenDB](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.RavenDB/README.md)** | Store the events as documents in a **Raven DB** database, in JSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/redis.svg\" /> | **[Audit.NET.Redis](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Redis/README.md)** | Store Audit Logs in a **Redis** database as String, List, Hash, Sorted Set, Streams or publishing to a Redis PubSub channel.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/microsoftsqlserver.svg\" /> | **[Audit.NET.SqlServer](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.SqlServer/README.md)** | Store the events as rows in a **SQL** Table, in JSON format.\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.Serilog](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Serilog/README.md)** | Store the audit events using [Serilogâ¢](https://serilog.net/)\n<img width=\"80\" src=\"https://unpkg.com/simple-icons@v11/icons/csharp.svg\" /> | **[Audit.NET.Udp](https://github.com/thepirat000/Audit.NET/blob/master/src/Audit.NET.Udp/README.md)** | Send audit events as **UDP datagrams** to a network.\n\n# Change Log\n\nFor detailed information on changes in the new release refer to the [change log](https://github.com/thepirat000/Audit.NET/blob/master/CHANGELOG.md).\n\n# Contribute\n\nIf you like this project please contribute in any of the following ways:\n\n- [Sponsoring this project](https://github.com/sponsors/thepirat000).\n- [Star](https://github.com/thepirat000/Audit.NET/stargazers) this project on GitHub.\n- Request a new feature or expose any bug you found by creating a [new issue](https://github.com/thepirat000/Audit.NET/issues/new).\n- Ask any questions about the library on [StackOverflow](http://stackoverflow.com/questions/ask?tags=Audit.NET).\n- Subscribe to and use the [Gitter Audit.NET channel](https://gitter.im/Audit-NET/Lobby).\n- Support the project by [becoming a Backer](https://opencollective.com/auditnet):\n[![Backer](https://opencollective.com/auditnet/tiers/backer.svg?avatarHeight=36&width=600)](https://opencollective.com/auditnet) Â Â Â  \n- Spread the word by blogging about it, or sharing it on social networks:\n  <p class=\"share-buttons\">\n    <a href=\"https://www.facebook.com/sharer/sharer.php?u=https://nuget.org/packages/Audit.NET/&amp;t=Check+out+Audit.NET\" target=\"_blank\">\n      <img width=\"24\" height=\"24\" alt=\"Share this package on Facebook\" src=\"https://nuget.org/Content/gallery/img/facebook.svg\" / >\n    </a>\n    <a href=\"https://twitter.com/intent/tweet?url=https://nuget.org/packages/Audit.NET/&amp;text=Check+out+Audit.NET\" target=\"_blank\">\n      <img width=\"24\" height=\"24\" alt=\"Tweet this package\" src=\"https://nuget.org/Content/gallery/img/twitter.svg\" />\n    </a>\n  </p>\n- Donate via PayPal:\n[![paypal](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=thepirat000%40hotmail.com&currency_code=USD&source=url)\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.3642578125,
          "content": "theme: jekyll-theme-hacker\nlogo: \"src/Audit.NET/images/icon.png\"\nsearch: true,\nplugins:\n  - jekyll-relative-links\n  - jekyll-sitemap\nrelative_links:\n  enabled: true\n  collections: true\ninclude:\n  - CONTRIBUTING.md\n  - README.md\n  - LICENSE.md\n  - COPYING.md\n  - CODE_OF_CONDUCT.md\n  - CONTRIBUTING.md\n  - ISSUE_TEMPLATE.md\n  - PULL_REQUEST_TEMPLATE.md\n  - CODE_COVERAGE.md\n"
        },
        {
          "name": "nuget.config",
          "type": "blob",
          "size": 0.2763671875,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\n    <clear />\n    <add key=\"nuget\" value=\"https://api.nuget.org/v3/index.json\" />\n  </packageSources>\n</configuration>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}