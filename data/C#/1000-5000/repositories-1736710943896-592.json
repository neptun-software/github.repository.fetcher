{
  "metadata": {
    "timestamp": 1736710943896,
    "page": 592,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pnp/PnP",
      "stars": 1900,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7685546875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# NuGet Packages Directory\npackages/\n## TODO: If the tool you use requires repositories.config uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n# This line needs to be after the ignore of the build folder (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# Prevent the checkin of publishing settings as they typically contain environment \n# specific information which should not be in the repo\n*.pubxml\n/Solutions/BusinessApps.HelpDesk/BusinessApps.HelpDesk\n/Samples/Provisioning.Cloud.Async.WebJob\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.1357421875,
          "content": "# PnP Changelog\n*Please do not commit changes to this file, it is maintained by the repo owner.*\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/).\n\n## [May 2019]\n\n### Added\n\n## [April 2019]\n\n### Added\n\n### Changed\n\n- Updates to Core.LargeFileUpload sample by mariusRT.\n\n## [March 2019]\n\n### Added\n\n### Changed\n\n## [February 2019]\n\n### Added\n\n### Changed\n\n## [January 2019]\n\n### Added\n\n- Added MicrosoftGraph.SPOConsumer sample: This is simplistic ASP.net MVC application to consume SharePoint Online using the Microsoft Graph.\n\n### Changed\n\n## [December 2018]\n\n### Added\n\n### Changed\n\n## [November 2018]\n\n### Added\n\n### Changed\n\n- Upgraded Modernization.PageTransformation sample to use the first production release of the PnP Modernization framework\n\n## [October 2018]\n\n### Added\n\n### Changed\n\n- Upgraded Modernization.PageTransformation sample to use the first production release of the PnP Modernization framework\n\n## [September 2018]\n\n### Added\n\n- New solution Migration.Utilities.Discussions: shows how to extract and upload SharePoint discussion list data [manvirb4u]\n\n### Changed\n\n## [August 2018]\n\n### Added\n\n### Changed\n\n- Updated Modernization.PageTransformation sample to use the beta version of the modernization framework\n\n## [July 2018]\n\n### Added\n\n- New sample Provisioning.CreateSite.Mvc: This sample shows how to use OfficeDevPnP core component to create sub sites or new site collections using MVC 5 and a Provider Hosted Add-In. [mike-morr]\n\n### Changed\n\n- Flow redesigned in order to have better performance and minor bug fixes #1794 [giuleon]\n\n## [June 2018]\n\n### Added\n\n- New sample Modernization.PageTransformation: This code sample demonstrates how to use the preview version of the SharePoint Modernization library to modernize classic wiki and web part pages into modern client side pages.\n\n### Changed\n\n### Deprecated\n\n## [May 2018]\n\n### Added\n\n### Changed\n\n- Enabled taxonomy picker synonym matching for search [colindekker]\n\n### Deprecated\n\n## [April 2018]\n\n### Added\n\n### Changed\n\n- O365.Modern.Provisioning updates: Waterfall logic completely refactored with dialogs, Added speech skills for Cortana, UI improved and minor bug fixes [giuleon]\n- PnP Starter Intranet version 2.2: Added link to the full features list in the README file (OneDrive Excel File) and added a badge indicating the current version [FrankyC]\n\n### Deprecated\n\n## [March 2018]\n\n### Added\n\n- New solution O365.Modern.Provisioning: demonstrates how to integrate a typical enterprise scenario where the user can submit a creation's request for a new SharePoint team site, communication site or a Microsoft team through a node.js Bot (App Only) which is available on Teams, Skype, Direct line and so on\n- New sample MultiGeo.TenantInformationCollectionCSOM: shows how to use CSOM to get geo location details for a multi-geo tenant\n- New sample Provisioning.Extensibility.Pages: an extensibility handler that exports all client side pages of a site\n\n### Changed\n\n- Updated the Business.StarterIntranet solution: avoid conflicts in local storage data when using multiple instances of the solution\n\n### Deprecated\n"
        },
        {
          "name": "Components",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1201171875,
          "content": "SharePoint Patterns and Practices (PnP)\n\nThe MIT License (MIT)\n\nCopyright (c) Microsoft Corporation\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.7138671875,
          "content": "---\npage_type: sample\nproducts:\n- office-sp\nlanguages:\n- csharp\nextensions:\n  contentType: samples\n  createdDate: 7/26/2014 7:08:15 PM\n---\n# Patterns and Practices #\n\n> **ARCHIVED** - Notice that many of the samples in this repository are for legacy add-in model. You should be using [SharePoint Framework](https://aka.ms/spfx) for UX layer extensibility for SharePoint and Microsoft Teams. You can find [SPFx web part](https://aka.ms/spfx-webparts) and [SPFx extension](https://aka.ms/spfx-webparts) samples from different repository. You can use Azure AD and Microsoft Teams Solution model as replacement for the provider hosted add-in model. Please see https://aka.ms/m365pnp for the up to date guidance and samples.\n\nThis is the main repository for the community driven [Microsoft 365 Patterns and Practices](http://aka.ms/m365pnp) (PnP) initiative. If you are looking for latest news around PnP or related topics, please have a look on our one pager at [http://aka.ms/m365pnp](http://aka.ms/m365pnp). \n\nPnP initiative has numerous GitHub repositories, so that you can more easily find what's relevant for you depending on your interest. Easiest way to follow up on latest changes is our landing page at http://aka.ms/m365pnp. \n\n- [Projects and tools](http://aka.ms/m365pnp)\n- [Community blog](http://aka.ms/m365pnp/community/blog)\n- [PnP videos](http://aka.ms/m365pnp/videos) at YouTube\n\n## \"Sharing is caring\" \n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments. \n  \n"
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Solutions",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme-template.md",
          "type": "blob",
          "size": 1.1220703125,
          "content": "# title of the PnP sample #\n\n### Summary ###\nShort summary.\n\n### Applies to ###\n-  Office 365 Multi Tenant (MT)\n-  Office 365 Dedicated (D)\n-  SharePoint 2013 on-premises\n\n-> Remove platforms if needed\n\n### Prerequisites ###\nAny special pre-requisites?\n\n### Solution ###\nSolution | Author(s)\n---------|----------\nsolution name | Author\n\n### Version history ###\nVersion  | Date | Comments\n---------| -----| --------\n2.0  | March 21st 2014 (to update/remove)| comment\n1.0  | November 6th 2013 (to update) | Initial release\n\n### Disclaimer ###\n**THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.**\n\n\n----------\n\n# Doc scenario 1 #\nDescription\nImage\n\n\n## Sub level 1.1 ##\nDescription:\nCode snippet:\n```C#\nstring scenario1Page = String.Format(\"scenario1-{0}.aspx\", DateTime.Now.Ticks);\nstring scenario1PageUrl = csomService.AddWikiPage(\"Site Pages\", scenario1Page);\n```\n\n## Sub level 1.2 ##\n\n# Doc scenario 2 #\n\n## Sub level 2.1 ##\n\n## Sub level 2.2 ##\n\n### Note: ###\n\n## Sub level 2.3 ##\n\n# Doc scenario 3#\n\n"
        }
      ]
    }
  ]
}