{
  "metadata": {
    "timestamp": 1736710967059,
    "page": 638,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SamboyCoding/Cpp2IL",
      "stars": 1806,
      "defaultBranch": "development",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 2.53125,
          "content": "root = true\n# top-most EditorConfig file\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n# ReSharper properties\nresharper_indent_inside_namespace = true\n\n# Matches multiple files with brace expansion notation\n# Set default charset\n[*.{cs,yml,config}]\ncharset = utf-8\nindent_style = space\nindent_size = 4\n\n[*.cs]\ndotnet_sort_system_directives_first = true\ndotnet_style_qualification_for_field = false:silent\ndotnet_style_qualification_for_property = false:silent\ndotnet_style_qualification_for_method = false:silent\ndotnet_style_qualification_for_event = false:silent\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:silent\ndotnet_style_readonly_field = true:suggestion\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\n# Newlines\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n#var\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\n#wrapping\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.076171875,
          "content": "\npackages/\n\n\\.idea/\n\nbin/\nobj/\n\n.vs/\n\n*.user\n\nlaunchsettings.json\n\nartifacts/\n"
        },
        {
          "name": "Cpp2IL.Core.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Plugin.BuildReport",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Plugin.ControlFlowGraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Plugin.OrbisPkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Plugin.Pdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.Plugin.StrippedCodeRegSupport",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp2IL.sln",
          "type": "blob",
          "size": 7.5869140625,
          "content": "ï»¿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 17\r\nVisualStudioVersion = 17.4.33122.133\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL\", \"Cpp2IL\\Cpp2IL.csproj\", \"{E8BA3E8E-3CDC-4562-AE61-CA48ECA270DE}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LibCpp2IL\", \"LibCpp2IL\\LibCpp2IL.csproj\", \"{7C9601B4-B53B-48CD-866F-DB908B3BF54D}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{46226B08-22BA-455E-8B99-F496E90EDCBC}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\t.editorconfig = .editorconfig\r\n\t\t.gitignore = .gitignore\r\n\t\tdo-release.ps1 = do-release.ps1\r\n\t\t.github\\workflows\\dotnet-core.yml = .github\\workflows\\dotnet-core.yml\r\n\t\t.github\\FUNDING.yml = .github\\FUNDING.yml\r\n\t\tglobal.json = global.json\r\n\t\tLICENSE = LICENSE\r\n\t\tnuget.config = nuget.config\r\n\t\tREADME.md = README.md\r\n\t\tLibCpp2Il\\README.md = LibCpp2Il\\README.md\r\n\t\tCpp2IL.Core\\README_CORE.md = Cpp2IL.Core\\README_CORE.md\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LibCpp2ILTests\", \"LibCpp2ILTests\\LibCpp2ILTests.csproj\", \"{EB3CFC80-2125-48D2-AA2F-548F5AA58342}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL.Core\", \"Cpp2IL.Core\\Cpp2IL.Core.csproj\", \"{81509778-676E-4DC3-89FE-56BC5E37CCE6}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"WasmDisassembler\", \"WasmDisassembler\\WasmDisassembler.csproj\", \"{D410F8FC-0853-403B-8017-2870745EDF5B}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"StableNameDotNet\", \"StableNameDotNet\\StableNameDotNet.csproj\", \"{E5890928-8F71-4B74-8332-D5A6E75AF8C2}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL.Plugin.BuildReport\", \"Cpp2IL.Plugin.BuildReport\\Cpp2IL.Plugin.BuildReport.csproj\", \"{E4E1E12D-3F51-422C-8FBB-26B36C9F1FA5}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL.Plugin.OrbisPkg\", \"Cpp2IL.Plugin.OrbisPkg\\Cpp2IL.Plugin.OrbisPkg.csproj\", \"{A621899A-564D-4CD0-97AC-097EBABA5ACD}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Docs\", \"Docs\", \"{51C7C919-3561-4630-827C-7FF8173AF665}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tdocs\\CallAnalyzer.md = docs\\CallAnalyzer.md\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL.Core.Tests\", \"Cpp2IL.Core.Tests\\Cpp2IL.Core.Tests.csproj\", \"{9DA1EAC8-05D8-4CB6-80D6-AB6C304DF834}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Cpp2IL.Plugin.StrippedCodeRegSupport\", \"Cpp2IL.Plugin.StrippedCodeRegSupport\\Cpp2IL.Plugin.StrippedCodeRegSupport.csproj\", \"{B2425628-0D69-44FA-AD34-997595512785}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Cpp2IL.Plugin.ControlFlowGraph\", \"Cpp2IL.Plugin.ControlFlowGraph\\Cpp2IL.Plugin.ControlFlowGraph.csproj\", \"{29683659-D4B0-444B-8D35-F35309535EE6}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Cpp2IL.Plugin.Pdb\", \"Cpp2IL.Plugin.Pdb\\Cpp2IL.Plugin.Pdb.csproj\", \"{ED407C97-534B-476C-8CCC-BF9D2FB5458A}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{E8BA3E8E-3CDC-4562-AE61-CA48ECA270DE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E8BA3E8E-3CDC-4562-AE61-CA48ECA270DE}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E8BA3E8E-3CDC-4562-AE61-CA48ECA270DE}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E8BA3E8E-3CDC-4562-AE61-CA48ECA270DE}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{7C9601B4-B53B-48CD-866F-DB908B3BF54D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{7C9601B4-B53B-48CD-866F-DB908B3BF54D}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{7C9601B4-B53B-48CD-866F-DB908B3BF54D}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{7C9601B4-B53B-48CD-866F-DB908B3BF54D}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{EB3CFC80-2125-48D2-AA2F-548F5AA58342}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{EB3CFC80-2125-48D2-AA2F-548F5AA58342}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{EB3CFC80-2125-48D2-AA2F-548F5AA58342}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{EB3CFC80-2125-48D2-AA2F-548F5AA58342}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{81509778-676E-4DC3-89FE-56BC5E37CCE6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{81509778-676E-4DC3-89FE-56BC5E37CCE6}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{81509778-676E-4DC3-89FE-56BC5E37CCE6}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{81509778-676E-4DC3-89FE-56BC5E37CCE6}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{D410F8FC-0853-403B-8017-2870745EDF5B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{D410F8FC-0853-403B-8017-2870745EDF5B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{D410F8FC-0853-403B-8017-2870745EDF5B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{D410F8FC-0853-403B-8017-2870745EDF5B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{E5890928-8F71-4B74-8332-D5A6E75AF8C2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E5890928-8F71-4B74-8332-D5A6E75AF8C2}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E5890928-8F71-4B74-8332-D5A6E75AF8C2}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E5890928-8F71-4B74-8332-D5A6E75AF8C2}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{E4E1E12D-3F51-422C-8FBB-26B36C9F1FA5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{E4E1E12D-3F51-422C-8FBB-26B36C9F1FA5}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{E4E1E12D-3F51-422C-8FBB-26B36C9F1FA5}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{E4E1E12D-3F51-422C-8FBB-26B36C9F1FA5}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{A621899A-564D-4CD0-97AC-097EBABA5ACD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{A621899A-564D-4CD0-97AC-097EBABA5ACD}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{A621899A-564D-4CD0-97AC-097EBABA5ACD}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{A621899A-564D-4CD0-97AC-097EBABA5ACD}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{9DA1EAC8-05D8-4CB6-80D6-AB6C304DF834}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{9DA1EAC8-05D8-4CB6-80D6-AB6C304DF834}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{9DA1EAC8-05D8-4CB6-80D6-AB6C304DF834}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{9DA1EAC8-05D8-4CB6-80D6-AB6C304DF834}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{B2425628-0D69-44FA-AD34-997595512785}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{B2425628-0D69-44FA-AD34-997595512785}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{B2425628-0D69-44FA-AD34-997595512785}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{B2425628-0D69-44FA-AD34-997595512785}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{29683659-D4B0-444B-8D35-F35309535EE6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{29683659-D4B0-444B-8D35-F35309535EE6}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{29683659-D4B0-444B-8D35-F35309535EE6}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{29683659-D4B0-444B-8D35-F35309535EE6}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{ED407C97-534B-476C-8CCC-BF9D2FB5458A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{ED407C97-534B-476C-8CCC-BF9D2FB5458A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{ED407C97-534B-476C-8CCC-BF9D2FB5458A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{ED407C97-534B-476C-8CCC-BF9D2FB5458A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{51C7C919-3561-4630-827C-7FF8173AF665} = {46226B08-22BA-455E-8B99-F496E90EDCBC}\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {E9A45B2C-AAEF-4D66-ADD6-7DD234DA3F39}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "Cpp2IL.sln.DotSettings",
          "type": "blob",
          "size": 0.3876953125,
          "content": "ï»¿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=ISIL/@EntryIndexedValue\">True</s:Boolean></wpf:ResourceDictionary>"
        },
        {
          "name": "Cpp2IL",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2020 Sam Byass\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LibCpp2IL",
          "type": "tree",
          "content": null
        },
        {
          "name": "LibCpp2ILTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.3330078125,
          "content": "# Cpp2IL\n\n[![NuGet](https://img.shields.io/nuget/v/Samboy063.Cpp2IL.Core)](https://www.nuget.org/packages/Samboy063.Cpp2IL.Core/)\n[![Coverage Status](https://coveralls.io/repos/github/SamboyCoding/Cpp2IL/badge.svg?branch=development)](https://coveralls.io/github/SamboyCoding/Cpp2IL?branch=development)\n\n### Need Help? Join [the discord](https://discord.gg/XdggT7XZXm)!\n\nWIP Tool to reverse Unity's IL2CPP build process back to the original managed DLLs.\n\nThe information below almost entirely applies to the CLI application available on github releases. For documentation on\nusing the \"core\" module - which the CLI is just a wrapper around - in your own projects,\nsee [README_CORE.md](Cpp2IL.Core/README_CORE.md)\n\nUses [LibCpp2IL](LibCpp2IL) for the initial parsing and loading of metadata structures. LibCpp2IL is obtainable from the\nbuild artifacts if you want to do something yourself with IL2CPP metadata, and is released under the MIT license. The\nlink above will take you to the documentation for LibCpp2IL.\n\n### Development Branch Notes\n\nCpp2IL is currently undergoing a major rewrite. This branch represents work in progress, and is subject to change.\n\nCI builds for developers can be obtained from [My Nuget Feed](https://nuget.samboy.dev/). \n\nThe command-line interface has been simplified, going from a lot of command line options to a concept of output formats\nand processing layers. However, a lot of these formats and layers are not yet implemented, so functionality is limited\ncompared to the previously released versions.\n\n#### Obvious Changes:\n\nMany options, such as `--analysis-level`, `--skip-analysis`, etc, have been removed. Ignoring the fact that analysis is not yet implemented, these options will not be coming back.\nAnalysis will be off by default, and will be enabled via the usage of a processing layer. \n\nEqually, options like `--supress-attributes`, which previously suppressed the Cpp2ILInjected attributes, have been replaced with a process layer - this one is actually implemented,\nand is called `attributeinjector`. You can enable this layer using the `--use-processor` option, and you can list other options using `--list-processors`. \n\nMetadata dumps and method dumps will be their own output format too, instead of both being default-on, and controlled via a dedicated option. Currently this means you'll need to run\nCpp2IL multiple times if you want both dumps, though this may change in the future if we add support for outputting to multiple formats simultaneously. Like processing layers,\noutput formats can be listed via the `--list-output-formats` option, and are selected via the `--output-as` option.\n\n#### Less obvious changes:\n\nUnder the hood, the application has been almost completely rewritten. Primarily, this was necessary due to the degree Cpp2IL was dependent on the Mono.Cecil library, which had some\nlimitations. When we looked into switching, we realised how reliant we were on the library. This is no longer the case - the application is written around LibCpp2IL types and \nthe new Analysis Context objects, and the Mono.Cecil library is no longer used, having been replaced with AsmResolver.DotNet. \n\nOn top of that, we are currently in the process of reimplementing analysis based around an intermediate representation called ISIL (Instruction-Set-Independent Language), which\nwill allow for much easier support of new instruction sets. The ISIL is then converted into a Control Flow Graph, which can be analysed more intelligently than a raw disassembly.\n\nWe're also working on a Plugin system which will allow third-party developers to write plugins to add support for custom instruction sets, binary formats, and eventually load \nobfuscated or encrypted metadata or binary files. \n\n## Command Line Options\n\n### Basic Usage\n\nThe simplest usage of this application is for a windows x86 or x64 unity game. In that case you can just\nrun `Cpp2IL-Win.exe --game-path=C:\\Path\\To\\Your\\Game`\nand Cpp2IL will detect your unity version, locate the files it needs, and dump the output into a cpp2il_out folder\nwherever you ran the command from.\n\nAssuming you have a single APK file (not an APKM or XAPK), and are running at least cpp2il 2021.4.0, you can use the\nsame argument as above but pass in the path to the APK, and cpp2il will extract the files it needs from the APK.\n\n### Supported Command Line Option Listing\n\n|        Option         |       Argument Example        |                                                                                         Description                                                                                          |\n|:---------------------:|:-----------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n|      --game-path      |        C:\\Path\\To\\Game        |                                                                        Specify the path to the game folder. Required.                                                                        |\n|      --exe-name       |           TestGame            |                                Specify the name of the game's exe file in case auto detection fails (because there are other exe files in the game directory)                                |\n|       --verbose       |           &lt;None>           |                                                                         Log more information about what we are doing                                                                         |\n|   --list-processors   |           &lt;None>           |                                                                         List available processing layers, then exit.                                                                         |\n|    --use-processor    |       attributeinjector       |                                 Select a processing layer to use, which can change the raw data prior to outputting. This option can appear multiple times.                                  |\n|  --processor-config   |           key=value           |                           Provide configuration options to the selected processing layers. These will be documented by the plugin which adds the processing layer.                           |\n| --list-output-formats |           &lt;None>           |                                                                          List available output formats, then exit.                                                                           |\n|      --output-as      |           dummydll            |                                                                          Specify the output format you wish to use.                                                                          |\n|      --output-to      |          cpp2il_out           |                     Root directory to output to. This path will be passed to the selected output format, which may then create subdirectories etc. within this location.                     |\n| --wasm-framework-file | C:\\Path\\To\\webgl.framework.js | Only used in conjunction with WASM binaries. Some of these have obfuscated exports but they can be recovered via a framework.js file, which you can provide the path to using this argument. |\n\n## Release Structure\n\nEvery single commit is built to a CI build using Github Actions - the action file can be found in the .github folder,\nif you want to reproduce the builds yourself. Be aware these may not be the most stable - while there are tests to\nensure compatibility with a range of games, sometimes things do break! These are versioned by the commit they were built\nfrom.\n\nThe release files can be downloaded from the Actions tab if you are signed into GitHub, or you can use the following links,\nwhich always point to the latest successful CI build. Note that the .NET Framework build is provided for compatibility with \nwine/proton.\n\n- [Windows Native Build](https://nightly.link/SamboyCoding/Cpp2IL/workflows/dotnet-core/development/Cpp2IL-net9-win-x64.zip)\n- [Linux Native Build](https://nightly.link/SamboyCoding/Cpp2IL/workflows/dotnet-core/development/Cpp2IL-net9-linux-x64.zip)\n- [Mac Native Build](https://nightly.link/SamboyCoding/Cpp2IL/workflows/dotnet-core/development/Cpp2IL-net9-osx-x64.zip)\n- [.NET Framework 4.7.2 Windows Build](https://nightly.link/SamboyCoding/Cpp2IL/workflows/dotnet-core/development/Cpp2IL-Netframework472-Windows.zip)\n\n\nOn top of this, I manually release \"milestone\" release builds whenever I think a major set of improvements have been made. These\nare NOT marked as pre-releases on github, and should (at least in theory) be stable and suitable for use on a range of\ngames.\n\n## Terminal Colors and Debug Logging\n\nFrom the first milestone build 2021.0, and onwards, Cpp2IL now outputs more rigidly-structured data to the console. This\nincludes log levels (VERB, INFO, WARN, FAIL) and associated colours (Grey for VERB, Blue for INFO, Yellow for WARN, Red\nfor FAIL).\n\nAs of milestone 2021.1, if Cpp2IL is able to detect that you're running in Wine/Proton, these ANSI colour codes are\ndisabled, as they are not supported by wine and look awful.\n\nVERB messages will only be logged if Cpp2IL is launched with the `--verbose` option, and it would be helpful if you\ncould report issues with this flag enabled. For normal operation, they shouldn't be needed, unless you're curious.\n\nIf you do not wish for the output to be coloured, set the Environment Variable `NO_COLOR=true`.\n\n## Credits\n\nThis application is built primarily using .NET 9.0, but a .NET Framework 4.7.2 build is also published for legacy purposes.\n\nIt uses the following libraries, for which I am very thankful:\n\n(All are MIT licensed aside from XUnit which is Apache 2.0+MIT)\n\n- [iced](https://github.com/icedland/iced) disassembler for x86\n- [Capstone.NET](https://github.com/ds5678/Capstone.NET) for ARMv8 and ARMv7 disassembly, though its usage is deprecated in favor of:\n- My own [Disarm](https://github.com/SamboyCoding/Disarm) library for fully-managed ARMv8/ARM64 disassembly.\n- My own WasmDisassembler library for WebAssembly disassembly. This can be found in the `WasmDisassembler` subdirectory.\n- [Pastel](https://github.com/silkfire/Pastel) for the console colours.\n- [CommandLineParser](https://github.com/commandlineparser/commandline) so I didn't need to write one myself.\n- [AsmResolver](https://github.com/Washi1337/AsmResolver) for any output formats which produce managed .NET assemblies.\n- [xUnit](https://github.com/xunit/xunit) for the unit tests.\n- [AssetRipper.CIL](https://github.com/AssetRipper/AssetRipper.CIL) for filling stub method bodies with IL that decompiles cleanly. \n- [AssetRipper.Primitives](https://github.com/AssetRipper/AssetRipper.Primitives) for unity version handling.\n\nThe net472 build uses the following additional libraries:\n- [System.ValueTuple](https://www.nuget.org/packages/System.ValueTuple/) for value tuples in .NET Framework.\n- [PolySharp](https://github.com/Sergio0694/PolySharp/) (licensed under the MIT license) for polyfilling newer runtime features in .NET Framework.\n\nSome plugins also use additional libraries:\n- The OrbisPkg plugin uses [LibOrbisPkg](https://github.com/maxton/LibOrbisPkg), which is licensed under the LGPL, version 3.\n- The ControlFlowGraph plugin uses [DotNetGraph](https://github.com/vfrz/DotNetGraph), which is licensed under the MIT license, for creating dot files.\n- The Pdb plugin uses [AssetRipper.Bindings.MsPdbCore](https://github.com/AssetRipper/AssetRipper.Bindings.MsPdbCore), which is licensed under the MIT license.\n\nCpp2IL is (very loosely, at this point) based off of [Il2CppDumper](https://github.com/Perfare/Il2CppDumper), which I forked\nin 2018 and removed a lot of code, rewrote a lot, and added a lot more. But at its core, it's still got some dumper left\nin it, mostly in LibCpp2IL.\n\nIt contains bits and pieces from [Il2CppInspector](https://github.com/djkaty/Il2CppInspector/), taken with permission\nfrom djKaty, and I'd like to express my gratitude to her here for her invaluable help.\n\nI'd like to thank the Audica Modding community and Discord for the initial inspiration for this project, lots of support\nin the early days, and feature requests these days.\n\nAnd finally, check out some other cool projects which link in with this one. Of course, I\nmentioned [Il2CppInterop](https://github.com/BepInEx/Il2CppInterop/)\nfurther up, but also check out [MelonLoader](https://github.com/LavaGang/MelonLoader/), which uses Cpp2IL for Dummy DLL\ngeneration.\n"
        },
        {
          "name": "StableNameDotNet",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestFiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "WasmDisassembler",
          "type": "tree",
          "content": null
        },
        {
          "name": "do-release.ps1",
          "type": "blob",
          "size": 5.9609375,
          "content": "param (\n    [switch]$help,\n    [string]$version\n)\n\n$ErrorActionPreference = \"Stop\"\n\n$NugetPackages = @(\n    \"Cpp2IL.Core\"\n    \"LibCpp2IL\"\n    \"StableNameDotNet\"\n    \"WasmDisassembler\"\n)\n\n$Plugins = @(\n    \"Cpp2IL.Plugin.BuildReport\"\n    \"Cpp2IL.Plugin.OrbisPkg\"\n    \"Cpp2IL.Plugin.Pdb\"\n    \"Cpp2IL.Plugin.StrippedCodeRegSupport\"\n)\n\n$ZippedPlugins = @(\n    \"Cpp2IL.Plugin.ControlFlowGraph\"\n)\n\nif ($help) {\n    Write-Host \"Usage: do-release.ps1 [-help] [-version <version>]\"\n    Write-Host \"  -help: Display this help message\"\n    Write-Host \"  -version: The version to build\"\n    exit\n}\n\nif (-not $version) {\n    Write-Host \"You must specify a version to build\"\n    exit\n}\n\nWrite-Host \"===CPP2IL RELEASE SCRIPT===\"\n\n$ProjectRoot = Split-Path -Parent $MyInvocation.MyCommand.Path\n$MainCommandLineAppDir = Join-Path $ProjectRoot \"Cpp2IL\"\n$ArtifactsDir = Join-Path $ProjectRoot \"artifacts\"\n$BuildDir = Join-Path $MainCommandLineAppDir \"bin\"\n$ReleaseBuildDir = Join-Path $BuildDir \"release\"\n\nWrite-Host \"Cleaning up old bin and artifacts directories\"\n\nforeach($proj in $NugetPackages) \n{\n    $projDir = Join-Path $ProjectRoot $proj\n    $projBuildDir = Join-Path $projDir \"bin\"\n    \n    if(Test-Path $projBuildDir)\n    {\n        Remove-Item -Recurse -Force $projBuildDir\n    }\n}\n\nif(Test-Path $ArtifactsDir)\n{\n    Remove-Item -Recurse -Force $ArtifactsDir\n}\n\n$null = New-Item -ItemType Directory -Force -Path $ArtifactsDir\n\nWrite-Host \"Building all Nuget packages...\"\n\nforeach($proj in $NugetPackages) \n{\n    Write-Host \"    Building $proj...\"\n    $projDir = Join-Path $ProjectRoot $proj\n    $projBuildDir = Join-Path $projDir \"bin\\Release\"\n    \n    $null = dotnet build -c Release /p:VersionSuffix=$version $projDir\n    \n    # Should only be one nupkg file in the bin directory \n    $files = Get-ChildItem $projBuildDir -Filter \"*.nupkg\"\n   \n    if($files.Count -ne 1)\n    {\n        Write-Host \"Error: Expected 1 nupkg file in $projBuildDir, found $($files.Count)\"\n        exit 1\n    }\n    \n    $nupkgFileName = $files[0].Name\n    $nupkgFile = $files[0].FullName\n    $nupkgDestFile = Join-Path $ArtifactsDir $nupkgFileName\n   \n    Write-Host \"    Copying $nupkgFileName to artifacts directory...\"\n    \n    Copy-Item $nupkgFile $nupkgDestFile\n}\n\ncd $MainCommandLineAppDir\n\n$baseVersion = (Select-Xml -XPath \"//Project/PropertyGroup/VersionPrefix\" -Path \".\\Cpp2IL.csproj\").Node.InnerText\n$fullVersionString = \"$baseVersion-$version\"\nWrite-Host \"Building Cpp2IL command line executable, release version $fullVersionString\"\n\nWrite-Host \"    Building Cpp2IL - Windows, Standalone .NET\"\n\n$null = dotnet publish -c Release -f \"net9.0\" -r \"win-x64\" /p:VersionSuffix=$version /p:PublishSingleFile=true --self-contained\n\nWrite-Host \"    Building Cpp2IL - Linux, Standalone .NET\"\n\n$null = dotnet publish -c Release -f \"net9.0\" -r \"linux-x64\" /p:VersionSuffix=$version /p:PublishSingleFile=true --self-contained\n\nWrite-Host \"    Building Cpp2IL - MacOS, Standalone .NET\"\n\n$null = dotnet publish -c Release -f \"net9.0\" -r \"osx-x64\" /p:VersionSuffix=$version /p:PublishSingleFile=true --self-contained\n\nWrite-Host \"    Building Cpp2IL - Windows, .NET Framework\"\n\n$null = dotnet publish -c Release -f \"net472\" -r \"win-x64\" /p:VersionSuffix=$version\n\nfunction CopyAndRename($rid, $platform, $releasePlatformString, $extension)\n{\n    $ridDir = Join-Path $ReleaseBuildDir $rid\n    $platformDir = Join-Path $ridDir $platform\n    $publishDir = Join-Path $platformDir \"publish\"\n    $file = Join-Path $publishDir \"Cpp2IL$extension\"\n    \n    if(Test-Path $file)\n    {\n        # Cpp2IL-2022.1.0.pre-release-17-Windows.exe\n        $destFileName = \"Cpp2IL-$fullVersionString-$releasePlatformString$extension\"\n        Write-Host \"    Copying $destFileName...\"\n        $newFile = Join-Path $ArtifactsDir $destFileName \n        Copy-Item $file $newFile\n    }\n}\n\nfunction ZipAndRename($rid, $platform, $releasePlatformString, $extension)\n{\n    $ridDir = Join-Path $ReleaseBuildDir $rid\n    $platformDir = Join-Path $ridDir $platform\n    $publishDir = Join-Path $platformDir \"publish\"\n    \n    # Zip all files in the publish directory\n    $zipFileName = \"Cpp2IL-$fullVersionString-$releasePlatformString.zip\"\n    Write-Host \"    Zipping $zipFileName...\"\n    $zipFile = Join-Path $ArtifactsDir $zipFileName\n    $null = Compress-Archive -Path $publishDir\\* -DestinationPath $zipFile\n}\n\nWrite-Host \"Moving files to artifacts directory\"\n\nCopyAndRename \"net9.0\" \"win-x64\" \"Windows\" \".exe\"\nCopyAndRename \"net9.0\" \"linux-x64\" \"Linux\" \"\"\nCopyAndRename \"net9.0\" \"osx-x64\" \"OSX\" \"\"\nZipAndRename \"net472\" \"win-x64\" \"Windows-Netframework472\" \".exe\"\n\nSet-Location $ProjectRoot\n\nWrite-Host \"Building plugins...\"\n\nforeach($plugin in $Plugins) \n{\n    Write-Host \"    Building $plugin...\"\n    $pluginDir = Join-Path $ProjectRoot $plugin\n    $pluginBuildDir = Join-Path $pluginDir \"bin\\Release\"\n    \n    if(Test-Path $pluginBuildDir)\n    {\n        Remove-Item -Recurse -Force $pluginBuildDir\n    }\n    \n    $null = dotnet build -c Release $pluginDir\n    \n    $directories = Get-ChildItem $pluginBuildDir -Directory\n    $pluginBuildDir = $directories[0].FullName\n    \n    $pluginFileName = \"$plugin.dll\"\n    $pluginFile = Join-Path $pluginBuildDir $pluginFileName\n    $pluginDestFile = Join-Path $ArtifactsDir $pluginFileName\n    \n    Write-Host \"    Copying $pluginFileName to artifacts directory...\"\n    Copy-Item $pluginFile $pluginDestFile\n}\n\nforeach($plugin in $ZippedPlugins) \n{\n    Write-Host \"    Building $plugin...\"\n    $pluginDir = Join-Path $ProjectRoot $plugin\n    $pluginBuildDir = Join-Path $pluginDir \"bin\\Release\"\n    \n    if(Test-Path $pluginBuildDir)\n    {\n        Remove-Item -Recurse -Force $pluginBuildDir\n    }\n    \n    $null = dotnet build -c Release $pluginDir\n    \n    $directories = Get-ChildItem $pluginBuildDir -Directory\n    $pluginBuildDir = $directories[0].FullName\n   \n    Write-Host \"    Zipping $pluginFileName to artifacts directory...\"\n    $zipFileName = \"$plugin.zip\"\n    $zipFile = Join-Path $ArtifactsDir $zipFileName\n    $null = Compress-Archive -Path $pluginBuildDir\\* -DestinationPath $zipFile\n}\n\nWrite-Host \"Done!\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.103515625,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.0\",\n    \"rollForward\": \"latestMinor\",\n    \"allowPrerelease\": false\n  }\n}\n"
        },
        {
          "name": "nuget.config",
          "type": "blob",
          "size": 0.1513671875,
          "content": "<configuration>\n    <packageSources>\n        <add key=\"SamboyDev\" value=\"https://nuget.samboy.dev/v3/index.json\" />\n    </packageSources>\n</configuration>\n"
        }
      ]
    }
  ]
}