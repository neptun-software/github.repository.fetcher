{
  "metadata": {
    "timestamp": 1736711132449,
    "page": 983,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GhostPack/SharpUp",
      "stars": 1294,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": ".vs\n*.user\n[Dd]ebug/\n[Rr]elease/\n[Bb]in/\n[Oo]bj/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5439453125,
          "content": "SharpUp is provided under the 3-clause BSD license below.\r\n\r\n*************************************************************\r\n\r\nCopyright (c) 2018, Will Schroeder\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n    The names of its contributors may not be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.908203125,
          "content": "# SharpUp\r\n\r\n----\r\n\r\nSharpUp is a C# port of various [PowerUp](https://github.com/PowerShellMafia/PowerSploit/blob/dev/Privesc/PowerUp.ps1) functionality. Currently, only the most common checks have been ported; no weaponization functions have yet been implemented.\r\n\r\n[@harmj0y](https://twitter.com/harmj0y) is the primary author.\r\n\r\nSharpUp is licensed under the BSD 3-Clause license.\r\n\r\n## Usage\r\n\r\n```\r\nSharpUp.exe [audit] [check1] [check2]...\r\n\r\n    audit   - Specifies whether or not to enable audit mode. If enabled, SharpUp will run vulenrability checks\r\n              regardless if the process is in high integrity or the user is in the local administrator's group.\r\n              If no checks are specified, audit will run all checks. Otherwise, each check following audit will\r\n              be ran.\r\n\r\n    check*  - The individual vulnerability check to be ran. Must be one of the following:\r\n\r\n              - AlwaysInstallElevated\r\n              - CachedGPPPassword\r\n              - DomainGPPPassword\r\n              - HijackablePaths\r\n              - McAfeeSitelistFiles\r\n              - ModifiableScheduledTask\r\n              - ModifiableServiceBinaries\r\n              - ModifiableServiceRegistryKeys\r\n              - ModifiableServices\r\n              - ProcessDLLHijack\r\n              - RegistryAutoLogons\r\n              - RegistryAutoruns\r\n              - TokenPrivileges\r\n              - UnattendedInstallFiles\r\n              - UnquotedServicePath\r\n            \r\n\r\n    Examples:\r\n        SharpUp.exe audit\r\n            -> Runs all vulnerability checks regardless of integrity level or group membership.\r\n        \r\n        SharpUp.exe HijackablePaths\r\n            -> Check only if there are modifiable paths in the user's %PATH% variable.\r\n\r\n        SharpUp.exe audit HijackablePaths\r\n            -> Check only for modifiable paths in the user's %PATH% regardless of integrity level or group membership. \r\n```\r\n\r\n## Compile Instructions\r\n\r\nWe are not planning on releasing binaries for SharpUp, so you will have to compile yourself :)\r\n\r\nSharpUp has been built against .NET 3.5 and is compatible with [Visual Studio 2015 Community Edition](https://go.microsoft.com/fwlink/?LinkId=532606&clcid=0x409). Simply open up the project .sln, choose \"release\", and build.\r\n\r\n## Acknowledgments\r\n\r\nSharpUp incorporates various code C# snippets and bits of PoCs found throughout research for its capabilities. These snippets and authors are highlighted in the appropriate locations in the source code, and include:\r\n\r\n* [Igor Korkhov's code to retrieve current token group information](https://stackoverflow.com/questions/2146153/how-to-get-the-logon-sid-in-c-sharp/2146418#2146418)\r\n* [JGU's snippet on file/folder ACL right comparison](https://stackoverflow.com/questions/1410127/c-sharp-test-if-user-has-write-access-to-a-folder/21996345#21996345)\r\n* [Rod Stephens' pattern for recursive file enumeration](http://csharphelper.com/blog/2015/06/find-files-that-match-multiple-patterns-in-c/)\r\n* [SwDevMan81's snippet for enumerating current token privileges](https://stackoverflow.com/questions/4349743/setting-size-of-token-privileges-luid-and-attributes-array-returned-by-gettokeni)\r\n* [Nikki Locke's code for querying service security descriptors](https://stackoverflow.com/questions/15771998/how-to-give-a-user-permission-to-start-and-stop-a-particular-service-using-c-sha/15796352#15796352)\r\n* [Raika](https://github.com/Raikia) for providing example unquoted service path search code.\r\n* [RemiEscourrou](https://github.com/RemiEscourrou) for contributing additional ACE checking code and example modifiable service registry key code.\r\n* [Coder666](https://github.com/Coder666) for adding ACE filtering code to filter only ACEs with access allowed.\r\n* [vysecurity](https://github.com/vysecurity) for providing Registry Auto Logon and Domain GPP Password example code.\r\n* [djhohnstein](https://github.com/djhohnstein) for merging in several outdated PRs and refactoring the entire code base."
        },
        {
          "name": "SharpUp.sln",
          "type": "blob",
          "size": 0.96484375,
          "content": "ï»¿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 14\r\nVisualStudioVersion = 14.0.25420.1\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"SharpUp\", \"SharpUp\\SharpUp.csproj\", \"{FDD654F5-5C54-4D93-BF8E-FAF11B00E3E9}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{FDD654F5-5C54-4D93-BF8E-FAF11B00E3E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{FDD654F5-5C54-4D93-BF8E-FAF11B00E3E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{FDD654F5-5C54-4D93-BF8E-FAF11B00E3E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{FDD654F5-5C54-4D93-BF8E-FAF11B00E3E9}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "SharpUp",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}