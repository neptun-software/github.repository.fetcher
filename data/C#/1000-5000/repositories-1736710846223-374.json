{
  "metadata": {
    "timestamp": 1736710846223,
    "page": 374,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scriptcs/scriptcs",
      "stars": 2477,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.5654296875,
          "content": "# Auto detect text files and perform LF normalization\n# http://davidlaing.com/2012/09/19/customise-your-gitattributes-to-become-a-git-ninja/\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc    diff=astextplain\n*.DOC    diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF    diff=astextplain\n*.rtf    diff=astextplain\n*.RTF    diff=astextplain"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.3427734375,
          "content": "# Files relevant to ScriptCS project\n\nartifacts\n/scriptcs_packages\n\n# Diff files\n*.orig\n\n# These are extra items from the original ignore file\n# keeping the items here until I submit PR to gitignore.io\n*.sln.ide\n*.bak\n*.ncrunch*\n*.Cache\n[Ss]tyle[Cc]op.*\n\n# -----------------------------------------------------------------------\n# Created by https://www.gitignore.io/api/visualstudio\n\n### VisualStudio ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Uncomment the next line to ignore your web deploy settings.\n# By default, sensitive information, such as encrypted password\n# should be stored in the .pubxml.user file.\n#*.pubxml\n*.pubxml.user\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n### VisualStudio Patch ###\n# By default, sensitive information, such as encrypted password\n# should be stored in the .pubxml.user file.\n\n# End of https://www.gitignore.io/api/visualstudio\n*.DS_Store\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.373046875,
          "content": "Filip W <wojcieszyn@gmail.com> <wojcieszyn@gmail.com>\nKristian Hellang <kristian@hellang.com> <khellang@hotmail.com>\nJustin Rusbatch <jrusbatch@gmail.com> <jrusbatch@users.noreply.github.com>\ndschenkelman <damian.schenkelman@gmail.com> <damian.schenkelman@gmail.com>\nNick Berardi <nick@managedfusion.com> <nberardi@gmail.com>\nestoy <erik.stoy@bigfoot.com> <erik.stoy@tretton37.com>\n"
        },
        {
          "name": ".nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": ".paket",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4404296875,
          "content": "language: csharp\ndotnet: 2.0.0\nsudo: required\ndist: trusty\nenv:\n  global:\n    - secure: m2PtYwYOhaK0uFMZ19ZxApZwWZeAIq1dS//jx/5I3txpIWD+TfycQMAWYxycFJ/GJkeVF29P4Zz1uyS2XKKjPJpp2Pds98FNQyDv3OftpLAVa0drsjfhurVlBmSdrV7GH6ncKfvhd+h7KVK5vbZc+NeR4dH7eNvN/jraS//AMJg=\n    - DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true\n    - DOTNET_CLI_TELEMETRY_OPTOUT=true\nmono:\n  - 5.8.0\n  \nos:\n  - linux\n  - osx\n\nscript:\n  - ulimit -n8192  \n  - chmod +x build.sh\n  - ./build.sh"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.1806640625,
          "content": "# Contributing\n\nWe've seen some great energy from folks around contributing to scriptcs and WE LOVE IT. scriptcs *welcomes* your contributions! In order to make it easy we've come up with the following model so that you can [Jump in](http://nikcodes.com/2013/05/10/new-contributor-jump-in/). The guidelines will help us all to operate in harmony.\n\nWe definitely want to soak up all that energy you have!\n\n## The issue tracker and how you can contribute.\n\n* Bugs - For bugs, if you see one filed, just go fix it. If there is no bug filed, please file one first. You don't need to seek approval from core unless the bug starts to turn into a feature. _Any bug fix which is a significant code contribution (say more than 10 lines of code), which introduces new APIs or which introduces breaking changes will be treated in the same way as we treat a feature (see below)._\n* Features - By default all issues tagged as enhancements which we file will be fixed by the core team. However if you'd like to take it, please comment in the issue that you'd like to implement it so we can discuss before you put in a potentially wasted effort.\n* YOU TAKE IT - These are items that are important, but which we'd available for the community to take. One place we use this is for investigations and prototyping for features that would be really awesome, but which the core team just don't have bandwith for. As an example @dschenkelman [investigated](https://github.com/scriptcs/scriptcs/issues/68?source=cc) a VS debugging story. This lead to him ultimately implementing the feature, however don't feel pressure that you have to that. It's extremely valuable if you can just show us how it might be done.\n\n### Other points\n\n* If an issue is marked as \"Taken\" then it is assigned to another member of the community.\n* To take an issue, reply in the comments \"I'll take it\" and wait for confirmation from a member of the core team.\n\n## Discussing features\n\nWe'd like the design for all features to get socialized either via github issues or our [discussion group](https://groups.google.com/forum/?fromgroups#!forum/scriptcs). Please do this before you implement so that we can all get on the same page of the feature and not waste your time, which we really appreciate.\n\n## Summary\n\n* Unassigned bug - Available for you\n* Assigned bug / Taken bug - unavailable\n* You take it issue - Available for you once it is confirmed.\n* Taken issue - Unavailable as someone already took it.\n\nWe really appreciate your help in taking scriptcs forward!\n\nAlso please see the discussion [here](https://github.com/scriptcs/scriptcs/issues/79) on which things are open for contribution.\n\n## Workflow\n\n* We use the **dev** branch for active development. All pull requests should be made to this branch.\n* The master branch is only updated via pull requests from the dev branch.\n* Tests need to be provided for every bug/feature that is completed.\n* Please do not submit a PR unless without running all unit tests. If any tests are failing in the PR they will be rejected.\n\n## Issue Management\n\nWe use some tags to manage issue priority.\n\n* **P1**: This is a big deal. It's either really awesome, terribly broken, or it's holding other awesome things up.\n* **P2**: This is kind of important and we're really looking forward to doing it, but there are more important things that need done first. \n* **P3**: We'd like to see these get implemented, but we're just not sure when we'll get to them. Want to take a shot at it? Go for it!\n\nIf the issue isn't marked with one of the above tags it's either still under discussion or not something we think we'll get to.\n\n## Code Style\n\n* Indent with spaces (4) instead of tabs.\n* Prefix private instance field names with an underscore and be camel-cased. The `this` keyword should be avoided.\n* Use the `var` keyword unless the inferred type is not obvious.\n* Use the C# type aliases for types that have them (ex. `int` instead of `Int32`).\n* Use meaningful names (no hungarian notation).\n* Unit tests should follow the conventions detailed in [this blog post](http://haacked.com/archive/2012/01/02/structuring-unit-tests.aspx) by Phil Haack.\n* Unit tests assertions should be declared using the [Should Assertion Library](https://github.com/erichexter/Should) by Eric Hexter.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.0927734375,
          "content": "<Project>\n  <PropertyGroup>\n    <LangVersion>latest</LangVersion>\n  </PropertyGroup>\n</Project>"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 1.388671875,
          "content": "<Project>\n  <ItemGroup>\n    <PackageReference Update=\"Autofac\" Version=\"4.6.2\" />\n    <PackageReference Update=\"Autofac.Mef\" Version=\"4.0.0\" />\n    <PackageReference Update=\"McMaster.Extensions.CommandLineUtils\" Version=\"2.2.5\" />\n    <PackageReference Update=\"Microsoft.CodeAnalysis.Scripting\" Version=\"3.6.0\" />\n    <PackageReference Update=\"Microsoft.CSharp\" Version=\"4.5.0\" />\n    <PackageReference Update=\"Microsoft.Web.Xdt\" Version=\"2.1.2\" />\n    <PackageReference Update=\"Newtonsoft.Json\" Version=\"11.0.2\" />\n    <PackageReference Update=\"NuGet.Core\" Version=\"2.14.0\" />\n    <PackageReference Update=\"System.ComponentModel.Composition\" Version=\"4.5.0\" />\n    <PackageReference Update=\"System.Security.Cryptography.Algorithms\" Version=\"4.3.1\" />\n    <PackageReference Update=\"System.Security.Cryptography.Primitives\" Version=\"4.3.0\" />\n\n    <!-- testing -->\n    <PackageReference Update=\"AutoFixture.AutoMoq\" Version=\"4.1.0\" />\n    <PackageReference Update=\"AutoFixture.Xunit2\" Version=\"4.1.0\" />\n    <PackageReference Update=\"Microsoft.TestPlatform.ObjectModel\" Version=\"15.7.2\" />\n    <PackageReference Update=\"Moq\" Version=\"4.7.99\" />\n    <PackageReference Update=\"Should\" Version=\"1.1.20\" />\n    <PackageReference Update=\"Xbehave.Core\" Version=\"2.4.0\" />\n    <PackageReference Update=\"xunit\" Version=\"2.4.0\" />\n    <PackageReference Update=\"xunit.runner.visualstudio\" Version=\"2.4.0\" />\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.5693359375,
          "content": "Copyright 2013 Glenn Block, Justin Rusbatch, Filip Wojcieszyn\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.09765625,
          "content": "# scriptcs\n\n[![Chocolatey Version](http://img.shields.io/chocolatey/v/scriptcs.svg?style=flat-square)](http://chocolatey.org/packages/scriptcs) [![Chocolatey Downloads](http://img.shields.io/chocolatey/dt/scriptcs.svg?style=flat-square)](http://chocolatey.org/packages/scriptcs) [![NuGet version (ScriptCs.Hosting)](https://img.shields.io/nuget/v/ScriptCs.Hosting.svg?style=flat-square)](https://www.nuget.org/packages/ScriptCs.Hosting/)\n\n[![*nix Build Status](http://img.shields.io/travis/scriptcs/scriptcs/dev.svg?style=flat-square&label=linux-build)](https://travis-ci.org/scriptcs/scriptcs) [![Windows Build Status](http://img.shields.io/teamcity/codebetter/Scriptcs_Ci.svg?style=flat-square&label=windows-build)](http://ci.scriptcs.net) [![Coverity Scan Build Status](https://img.shields.io/badge/coverity-passed-brightgreen.svg?style=flat-square)](https://scan.coverity.com/projects/2356)\n\n[![Issue Stats](http://issuestats.com/github/scriptcs/scriptcs/badge/pr?style=flat-square)](http://issuestats.com/github/scriptcs/scriptcs) [![Issue Stats](http://issuestats.com/github/scriptcs/scriptcs/badge/issue?style=flat-square)](http://issuestats.com/github/scriptcs/scriptcs)\n\n## What is it?\n\nscriptcs makes it easy to write and execute C# with a simple text editor.\n\nWhile Visual Studio, and other IDEs, are powerful tools, they can sometimes hinder productivity more than they promote it. You don’t always need, or want, the overhead of a creating a new solution or project. Sometimes you want to just type away in your favorite text editor.\n\nscriptcs frees you from Visual Studio, without sacrificing the advantages of a strongly-typed language. \n\n* Write C# in your favorite text editor.\n* Use NuGet to manage your dependencies.\n* The relaxed C# scripting syntax means you can write and execute an application with only one line of code. \n* Script Packs allow you to bootstrap the environment for new scripts, further reduces the amount of code necessary to take advantage of your favorite C# frameworks.\n\n\n## Getting scriptcs\n\nReleases and nightly builds should be installed using [Chocolatey](http://chocolatey.org/). To install Chocolatey, execute the following command in your command prompt:\n\n    @powershell -NoProfile -ExecutionPolicy Unrestricted -Command \"iex ((New-Object Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET PATH=%PATH%;%systemdrive%\\chocolatey\\bin\n\nIf the above fails with the error indicating that proxy authentication is required (i.e. [HTTP 407](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.8)) then try again with the following on the command prompt that uses your default credentials:\n\n    @powershell -NoProfile -ExecutionPolicy Unrestricted -Command \"[Net.WebRequest]::DefaultWebProxy.Credentials = [Net.CredentialCache]::DefaultCredentials; iex ((New-Object Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET PATH=%PATH%;%systemdrive%\\chocolatey\\bin\n\n**Note:** If you are using a version of Chocolatey > 0.9.9.0 you can pass the `-y` into the install and upgrade commands to prevent the confirmation that will appear.\n\n### Installing scriptcs\n\nOnce Chocolatey has been installed, you can install the latest stable version of scriptcs from your command prompt:\n\n    choco install scriptcs\n\nChocolatey will install scriptcs to `%LOCALAPPDATA%\\scriptcs\\` and update your PATH accordingly.\n\n**Note:** You may need to restart your command prompt after the installation completes.\n\n### Staying up-to-date\n\nWith Chocolatey, keeping scriptcs updated is just as easy:\n\n    choco upgrade scriptcs\n\n**Note:** If you are using a version of Chocolatey < 0.9.0.0 you will need to use `choco update scriptcs`, but also think about updating Chocolatey itself.\n\n### Nightly builds\n\nNightly builds are hosted on [MyGet](https://www.myget.org/), and can also be installed through with Chocolatey:\n\n    choco install scriptcs -pre -source https://www.myget.org/F/scriptcsnightly/ \n\n### Building from source\n\n#### Windows\n\n1. Ensure you have .NET Framework 4.6.1 installed.\n\n2. Execute the build script.\n\n    `build.cmd`\n\n#### Linux\n\n1. Ensure you have [Mono 5.12](https://www.mono-project.com/download/stable/) or later installed.\n    \n2. Execute the build script\n\n    `./build.sh`\n\n## Getting Started\n\n### Using the REPL\nThe scriptcs REPL can be started by running scriptcs without any parameters. The REPL allows you to execute C# statements directly from your command prompt.\n\n```batchfile\nC:\\> scriptcs\nscriptcs (ctrl-c or blank to exit)\n\n> var message = \"Hello, world!\";\n> Console.WriteLine(message);\nHello, world!\n> \n\nC:\\>\n```\n\nREPL supports all C# language constructs (i.e. class definition, method definition), as well as multi-line input. For example:\n\n```batchfile\nC:\\> scriptcs\nscriptcs (ctrl-c or blank to exit)\n\n> public class Test {\n    public string Name { get; set; }\n  }\n> var x = new Test { Name = \"Hello\" };\n> x\n{Name: \"Hello\"}\n\nC:\\>\n```\n\n### Writing a script\n\n* In an empty directory, create a new file named `app.csx`:\n\n```c#\nusing Raven.Client;\nusing Raven.Client.Embedded;\nusing Raven.Client.Indexes;\n\nConsole.WriteLine(\"Starting RavenDB server...\");\n\nusing (var documentStore = new EmbeddableDocumentStore { UseEmbeddedHttpServer = true })\n{\n    documentStore.Initialize();\n    Console.WriteLine($\"RavenDB started, listening on http://localhost:{documentStore.Configuration.Port}\");\n    Console.ReadKey();\n}\n```\n\n* Install the [RavenDB.Embedded](https://nuget.org/packages/RavenDB.Embedded/) package from NuGet using the [install command](https://github.com/scriptcs/scriptcs/wiki/Package-installation).\n\n```batchfile\nscriptcs -install RavenDB.Embedded\n```\n\n* Execute your script. Note that listening on a port requires that the command prompt be launched using the **Run as Administrator** option.\n\n```batchfile\n> scriptcs app.csx\nINFO : Starting to create execution components\nINFO : Starting execution\nStarting RavenDB server...\n.. snip ..\nRavenDB started, listening on http://localhost:8080.\n```\n\n* Navigating to the URL that Raven is listening on will now bring up the RavenDB management studio.\n\n### Bootstrap scripts with Script Packs\n\nScript Packs can be used to further reduce the amount of code you need to write when working with common frameworks. \n\n* In an empty directory, install the [ScriptCs.WebApi](https://nuget.org/packages/ScriptCs.WebApi/) script pack from NuGet. The script pack automatically imports the Web API namespaces and provides a convenient factory method for initializing the Web API host. It also replaces the default `ControllerResolver` with a custom implementation that allows Web API to discover controllers declared in scripts.\n\n```batchfile\nscriptcs -install ScriptCs.WebApi\n```\n\n* Script packs can be imported into a script by calling `Require<TScriptPack>()`. Create a file named `server.csx` that contains the following code:\n\n```c#\npublic class TestController : ApiController {\n    public string Get() {\n        return \"Hello world!\";\n    }\n}\n\nvar webApi = Require<WebApi>();\nvar server = webApi.CreateServer(\"http://localhost:8888\");\nserver.OpenAsync().Wait();\n\nConsole.WriteLine(\"Listening...\");\nConsole.ReadKey();\nserver.CloseAsync().Wait();\n```\n\n* In a command prompt running as administrator, execute the `server.csx` file.\n\n```batchfile\nscriptcs server.csx \n```\n\n* Browse to http://localhost:8888/test/ to see the result of the TestController.Get method.\n\n```xml\n<string xmlns=\"http://schemas.microsoft.com/2003/10/Serialization/\">Hello world!</string>\n```\n\n### Referencing scripts\n\n* Move the TestController class from the previous example into a new file named `controller.csx` with the following content.\n\n* On the first line of `server.csx`, reference `controller.csx` using the [#load directive](https://github.com/scriptcs/scriptcs/wiki/Writing-a-script#loading-referenced-scripts). **Note:** #load directives must be placed at the top of a script, otherwise they will be ignored.\n\n```c#\n#load \"controller.csx\"\n```\n\n* In a command prompt running as administrator, execute the `server.csx` file.\n\n```batchfile\nscriptcs server.csx \n```\n\n* Browse to http://localhost:8888/test/ to see the result of the TestController.Get method.\n\n```xml\n<string xmlns=\"http://schemas.microsoft.com/2003/10/Serialization/\">Hello world!</string>\n```\n\n\n### Referencing assemblies\n\nYou can reference additional assemblies from the GAC or from the `bin` folder in your script's directory using the [#r directive](https://github.com/scriptcs/scriptcs/wiki/Writing-a-script#referencing-assemblies):\n\n```c#\n#r \"nunit.core.dll\"\n#r \"nunit.core.interfaces.dll\"\n\nvar path = \"UnitTests.dll\";\nvar runner = TestSetup.GetRunner(new[] {path});\nvar result = runner.Run(new ConsoleListener(msg => Console.WriteLine(msg)), TestFilter.Empty, true,     LoggingThreshold.All);\n\nConsole.ReadKey();\n```\n\n### Debugging\n\nInstructions for debugging scripts using Visual Studio can be found on the [wiki](https://github.com/scriptcs/scriptcs/wiki/Debugging-a-script).\n\n### Package installation\n\nYou can install any NuGet packages directly from the scriptcs CLI. This will pull the relevant packages from NuGet, and install them in the scriptcs_packages folder.\n\nOnce the packages are installed, you can simply start using them in your script code directly (just import the namespaces - no additional bootstrapping or DLL referencing is needed).\n\nThe `install` command will also create a `scriptcs_packages.config` file if you don't have one - so that you can easily redistribute your script (without having to copy the package binaries).\n\n - `scriptcs -install {package name}` will install the desired package from NuGet. \n \t\n\tFor example: \n\n\t\tscriptcs -install ServiceStack\n\t\t\n - `scriptcs -install` (without package name) will look for the `scriptcs_packages.config` file located in the current execution directory, and install all the packages specified there. You only need to specify **top level** packages.\n\nFor example, you might create the following `scriptcs_packages.config`:\n\n\t<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t<packages>\n  \t\t<package id=\"Nancy.Hosting.Self\" version=\"0.16.1\" targetFramework=\"net40\" />\n  \t\t<package id=\"Nancy.Bootstrappers.Autofac\" version=\"0.16.1\" targetFramework=\"net40\" />\n  \t\t<package id=\"Autofac\" version=\"2.6.3.862\" targetFramework=\"net40\" />\n\t</packages>\n\nAnd then just call:\n\n    scriptcs -install\n\nAs a result, all packages specified in the `scriptcs_packages.config`, including all dependencies, will be downloaded and installed in the `scriptcs_packages` folder. \n\n\n## Contributing\n\n* Read our [Contribution Guidelines](https://github.com/scriptcs/scriptcs/blob/master/CONTRIBUTING.md). \n\n\n## Samples and Documentation\n\nAdditional samples can be contributed to our [samples repository](https://github.com/scriptcs/scriptcs-samples). Documentation can be found on our [wiki](https://github.com/scriptcs/scriptcs/wiki). \n\n\n## Community\n\nWant to chat? In addition to Twitter, you can find us on [Google Groups](https://groups.google.com/forum/?fromgroups#!forum/scriptcs) and [JabbR](https://jabbr.net/#/rooms/scriptcs)!\n\n\n## Coordinators\n\n* [Glenn Block](https://github.com/glennblock) ([@gblock](https://twitter.com/intent/user?screen_name=gblock))\n* [Justin Rusbatch](https://github.com/jrusbatch) ([@jrusbatch](https://twitter.com/intent/user?screen_name=jrusbatch))\n* [Filip Wojcieszyn](https://github.com/filipw) ([@filip_woj](https://twitter.com/intent/user?screen_name=filip_woj))\n\n\n## Core Committers\n\n* [Damian Schenkelman](http://github.com/dschenkelman) ([@dschenkelman](https://twitter.com/intent/user?screen_name=dschenkelman))\n* [Kristian Hellang](http://github.com/khellang) ([@khellang](https://twitter.com/intent/user?screen_name=khellang))\n* [Adam Ralph](http://github.com/adamralph) ([@adamralph](https://twitter.com/intent/user?screen_name=adamralph))\n* [Paul Bouwer](http://github.com/paulbouwer) ([@pbouwer](https://twitter.com/intent/user?screen_name=pbouwer))\n\n## Credits \n\n* Check out the [list of developers](https://github.com/scriptcs/scriptcs/wiki/Contributors) responsible for getting scriptcs to where it is today! \n* Special thanks to Filip Wojcieszyn for being the inspiration behind this with his Roslyn Web API posts.\n* Thanks to the Roslyn team who helped point me in the right direction.\n\n\n## License \n\n[Apache 2 License](https://github.com/scriptcs/scriptcs/blob/master/LICENSE.md)\n"
        },
        {
          "name": "ScriptCs.sln",
          "type": "blob",
          "size": 6.6845703125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29709.97\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs\", \"src\\ScriptCs\\ScriptCs.csproj\", \"{25080671-1A80-4041-B9C7-260578FF4849}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Contracts\", \"src\\ScriptCs.Contracts\\ScriptCs.Contracts.csproj\", \"{6049E205-8B5F-4080-B023-70600E51FD64}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Tests\", \"test\\ScriptCs.Tests\\ScriptCs.Tests.csproj\", \"{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Core\", \"src\\ScriptCs.Core\\ScriptCs.Core.csproj\", \"{E590E710-E159-48E6-A3E6-1A83D3FE732C}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Core.Tests\", \"test\\ScriptCs.Core.Tests\\ScriptCs.Core.Tests.csproj\", \"{AC228213-7356-4F0D-BA48-EBA5FB8A7506}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Engine.Roslyn.Tests\", \"test\\ScriptCs.Engine.Roslyn.Tests\\ScriptCs.Engine.Roslyn.Tests.csproj\", \"{28D11DE5-9F98-4E0A-8CCC-9CDC19110451}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Hosting\", \"src\\ScriptCs.Hosting\\ScriptCs.Hosting.csproj\", \"{9AEF2D95-87FB-4829-B384-34BFE076D531}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Hosting.Tests\", \"test\\ScriptCs.Hosting.Tests\\ScriptCs.Hosting.Tests.csproj\", \"{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \".nuget\", \".nuget\", \"{B138045D-DC04-4A04-A2BA-F771173BCC32}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.nuget\\packages.config = .nuget\\packages.config\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Engine.Roslyn\", \"src\\ScriptCs.Engine.Roslyn\\ScriptCs.Engine.Roslyn.csproj\", \"{E79EC231-E27D-4057-91C9-2D001A3A8C3B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ScriptCs.Tests.Acceptance\", \"test\\ScriptCs.Tests.Acceptance\\ScriptCs.Tests.Acceptance.csproj\", \"{10684649-2922-41F5-AB9B-20B127CBF92C}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{8C5ABCEF-82F9-4850-B2B8-1D7B73D9C5C3}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Build.targets = Directory.Build.targets\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{25080671-1A80-4041-B9C7-260578FF4849}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{25080671-1A80-4041-B9C7-260578FF4849}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{25080671-1A80-4041-B9C7-260578FF4849}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{25080671-1A80-4041-B9C7-260578FF4849}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6049E205-8B5F-4080-B023-70600E51FD64}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6049E205-8B5F-4080-B023-70600E51FD64}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6049E205-8B5F-4080-B023-70600E51FD64}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6049E205-8B5F-4080-B023-70600E51FD64}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E590E710-E159-48E6-A3E6-1A83D3FE732C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E590E710-E159-48E6-A3E6-1A83D3FE732C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E590E710-E159-48E6-A3E6-1A83D3FE732C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E590E710-E159-48E6-A3E6-1A83D3FE732C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AC228213-7356-4F0D-BA48-EBA5FB8A7506}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AC228213-7356-4F0D-BA48-EBA5FB8A7506}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AC228213-7356-4F0D-BA48-EBA5FB8A7506}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AC228213-7356-4F0D-BA48-EBA5FB8A7506}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{28D11DE5-9F98-4E0A-8CCC-9CDC19110451}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{28D11DE5-9F98-4E0A-8CCC-9CDC19110451}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{28D11DE5-9F98-4E0A-8CCC-9CDC19110451}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{28D11DE5-9F98-4E0A-8CCC-9CDC19110451}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9AEF2D95-87FB-4829-B384-34BFE076D531}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9AEF2D95-87FB-4829-B384-34BFE076D531}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9AEF2D95-87FB-4829-B384-34BFE076D531}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9AEF2D95-87FB-4829-B384-34BFE076D531}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E79EC231-E27D-4057-91C9-2D001A3A8C3B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E79EC231-E27D-4057-91C9-2D001A3A8C3B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E79EC231-E27D-4057-91C9-2D001A3A8C3B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E79EC231-E27D-4057-91C9-2D001A3A8C3B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{10684649-2922-41F5-AB9B-20B127CBF92C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{10684649-2922-41F5-AB9B-20B127CBF92C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{10684649-2922-41F5-AB9B-20B127CBF92C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{10684649-2922-41F5-AB9B-20B127CBF92C}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{4D6A2A55-BB17-40CB-9567-EAFF80BEFDCE} = {A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\n\t\t{AC228213-7356-4F0D-BA48-EBA5FB8A7506} = {A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\n\t\t{28D11DE5-9F98-4E0A-8CCC-9CDC19110451} = {A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\n\t\t{EC03EAA0-94FD-4145-8F78-5F2E30E3FF9A} = {A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\n\t\t{10684649-2922-41F5-AB9B-20B127CBF92C} = {A59C6538-62EA-4BF6-AA00-E0E9A2892D47}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {AD80B19D-7299-4CBD-B59F-6DB868FF6A9C}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "ScriptCs.sln.DotSettings",
          "type": "blob",
          "size": 0.4921875,
          "content": "﻿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"_\" Suffix=\"\" Style=\"aaBb\" /&gt;</s:String></wpf:ResourceDictionary>"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.2294921875,
          "content": "version: 1.0.{build}\n\nimage: Visual Studio 2017\n\nenvironment:\n  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true\n  DOTNET_CLI_TELEMETRY_OPTOUT: true\n\ninit:\n- git config --global core.autocrlf false\n\nbuild_script:\n- cmd:\n    build.cmd\n\ntest: off"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.1982421875,
          "content": "@echo off\ncls\n\n.paket\\paket.bootstrapper.exe\nif errorlevel 1 (\n    exit /b %errorlevel%\n)\n\n.paket\\paket.exe restore\nif errorlevel 1 (\n    exit /b %errorlevel%\n)\n\npackages\\FAKE\\tools\\FAKE.exe build.fsx %*"
        },
        {
          "name": "build.fsx",
          "type": "blob",
          "size": 1.568359375,
          "content": "#r \"packages/FAKE/tools/FakeLib.dll\"\n\nopen Fake\nopen Fake.DotNetCli\nopen Fake.Testing\nopen System.IO\n\nTarget \"Clean\" (fun _ ->\n    !! \"artifacts\" ++ \"src/*/bin\" ++ \"test/*/bin\" ++ \"src/*/obj\" ++ \"test/*/obj\"\n        |> DeleteDirs\n)\n\nTarget \"Build\" (fun _ ->\n    DotNetCli.Restore id\n\n    \"ScriptCs.sln\"\n    |> MSBuildHelper.build (fun p ->\n        { p with\n             RestorePackagesFlag = true\n             Verbosity = Some Minimal\n             Targets = [ \"Build\" ] \n             Properties =\n                [\n                    \"Optimize\", \"True\"\n                    \"Configuration\", \"Release\"\n                ]\n        } ) \n)\n\nTarget \"Test\" (fun _ ->\n#if MONO\n    !! \"test/**/bin/**/*Tests.Acceptance.dll\"\n    |> xUnit2 (fun c -> \n         {c with \n             MaxThreads = CollectionConcurrencyMode.MaxThreads 1\n         })\n#else\n    !! \"test/**/*Tests*.csproj\"\n    |> Seq.iter (fun p -> \n         DotNetCli.Test (fun c -> \n            {c with \n                WorkingDir = Path.GetDirectoryName p\n                AdditionalArgs = [\"--no-build\"]\n            })\n    )\n#endif\n)\n\nTarget \"Pack\" (fun _ ->\n    \"ScriptCs.sln\"\n    |> MSBuildHelper.build (fun p ->\n        { p with\n             RestorePackagesFlag = true\n             Verbosity = Some Minimal\n             Targets = [ \"Pack\" ] \n             Properties =\n                [\n                    \"Optimize\", \"True\"\n                    \"Configuration\", \"Release\"\n                    \"PackageOutputPath\", \"../../artifacts\"\n                ]\n        } ) \n)\n\n\"Clean\"\n      ==> \"Build\"\n      ==> \"Test\"\n      ==> \"Pack\"\n\nRunTargetOrDefault \"Pack\""
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.6435546875,
          "content": "#!/bin/bash\nif test \"$OS\" = \"Windows_NT\"\nthen\n  # use .Net\n\n  .paket/paket.bootstrapper.exe prerelease\n  exit_code=$?\n  if [ $exit_code -ne 0 ]; then\n  \texit $exit_code\n  fi\n\n  .paket/paket.exe restore\n  exit_code=$?\n  if [ $exit_code -ne 0 ]; then\n  \texit $exit_code\n  fi\n\n  packages/FAKE/tools/FAKE.exe $@ --nocache --fsiargs build.fsx \nelse\n  # use mono\n  mono .paket/paket.bootstrapper.exe prerelease\n  exit_code=$?\n  if [ $exit_code -ne 0 ]; then\n  \texit $exit_code\n  fi\n\n  mono .paket/paket.exe restore\n  exit_code=$?\n  if [ $exit_code -ne 0 ]; then\n  \texit $exit_code\n  fi\n  mono packages/FAKE/tools/FAKE.exe $@ --nocache --fsiargs -d:MONO build.fsx\nfi"
        },
        {
          "name": "build_brew.sh",
          "type": "blob",
          "size": 0.3154296875,
          "content": "#!/usr/bin/env bash\nset -e\nset -o pipefail\nset -x\n\n# install\nmozroots --import --sync --quiet\nmono ./.nuget/NuGet.exe restore ./ScriptCs.sln\n\n# script\nmkdir -p artifacts/Release/bin\nmsbuild ./ScriptCs.sln /property:Configuration=Release /nologo /verbosity:normal\ncp src/ScriptCs/bin/Release/net461/* artifacts/Release/bin/\n"
        },
        {
          "name": "paket.dependencies",
          "type": "blob",
          "size": 0.068359375,
          "content": "source https://nuget.org/api/v2\n\nnuget FAKE\nnuget xunit.runner.console"
        },
        {
          "name": "paket.lock",
          "type": "blob",
          "size": 0.0947265625,
          "content": "NUGET\n  remote: https://www.nuget.org/api/v2\n    FAKE (4.64.13)\n    xunit.runner.console (2.4.1)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}