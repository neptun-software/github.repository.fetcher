{
  "metadata": {
    "timestamp": 1736710680985,
    "page": 35,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "accord-net/framework",
      "stars": 4507,
      "defaultBranch": "development",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 1.1650390625,
          "content": "version: 3.8.2.{build}\n\r\nimage:\r\n- Visual Studio 2017\r\n\r\nconfiguration:\r\n- mono\r\n- net35\r\n- net40\r\n- net45\r\n- net46\r\n- net462\r\n\r\nplatform: Any CPU\r\n\r\nmatrix:\r\n  exclude:\r\n    - configuration: net35\r\n      image: Visual Studio 2017\r\n\r\nclone_depth: 5\r\n\r\nbefore_build:\r\n- cmd: set PATH=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%\r\n\r\nbuild:\r\n  project: Sources/Accord.NET.sln\r\n  parallel: true\r\n  verbosity: normal\r\n  \r\ntest:\r\n  assemblies:\n    only:\n    - Accord.Tests.Audio.dll\n    - Accord.Tests.Controls.dll\n    - Accord.Tests.Core.dll\n    - Accord.Tests.Imaging.dll\n    - Accord.Tests.IO.dll\n    - Accord.Tests.MachineLearning.dll\n    - Accord.Tests.Math.dll\n    - Accord.Tests.Math.Cpp.dll\n    - Accord.Tests.Math.Interop.dll\n    - Accord.Tests.Neuro.dll\n    - Accord.Tests.Statistics.dll\n    - Accord.Tests.Statistics.VB.dll\n    - Accord.Tests.Text.dll\n    - Accord.Tests.Video.dll\n    - Accord.Tests.Vision.dll\n    \r\n  categories:\r\n    except:\r\n    - Office\r\n    - Random\n    - Slow\r\n    \r\nnotifications:\r\n- provider: Webhook\r\n  url: https://webhooks.gitter.im/e/322469abaeff8aca5bc9\r\n  method: POST\r\n  on_build_success: false\r\n  on_build_failure: false\r\n  on_build_status_changed: true"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8388671875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* binary\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n#*.c   text\n#*.cpp text\n#*.h   text\n\n# Declare files that will always have CRLF line endings on checkout.\n#*.sln    text eol=crlf\n#*.bat    text eol=crlf\n#*.svg    text eol=crlf\n#*.csproj text eol=crlf\n#*.cs     text eol=crlf\n#*.tt     text eol=crlf\n#*.xml    text=auto\n\n# Denote all files that are truly binary and should not be modified.\n#*.png binary\n#*.jpg binary\n#*.csv binary\n#*.xls binary\n#*.xlsx binary\n\n\n\n*.txt     diff\n*.c       diff\n*.cpp     diff\n*.h       diff\n*.sln     diff\n*.tt      diff\n*.bat     diff\n*.svg     diff\n*.csproj  diff\n*.targets diff\n*.vcxproj diff\n*.cs      diff\n*.tt      diff\n*.xml     diff\n.gitattributes diff\n.gitignore     diff"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5244140625,
          "content": "bin\r\nobj\r\n\r\n.vs\r\n*.user\r\n*.pidb\r\n*.suo\r\n*.vsp\r\n*.ipch\r\n\r\n/Setup/Accord.Setup.dll\r\n/Setup/Accord.Setup.pdb\r\n\r\n/Sources/Accord.Music\r\n/Sources/TestResults\r\n*.sdf\r\n*.shfbproj_*\r\n\r\n/Release\r\n/Debug\r\n\r\n/Docs\r\n/Unit Tests/Accord.Tests.Math.Cpp/Debug\r\n/Unit Tests/Accord.Tests.Math.Cpp/Release\r\n/Unit Tests/packages\r\n\r\n/Sources/Debug\r\n/Sources/Release\r\n\r\n/Sources/*.opensdf\r\n/autom4te.cache/\r\n/Makefile.in\r\n/Makefile\r\n/configure\r\n/config.status\r\n/config.log\r\n*.m4\r\n/accord.pc\r\n\r\nhtml\r\n\r\n/install-sh\r\n/missing\r\n\r\n!Externals/NUnit/*/bin\r\n/Nuget\r\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2890625,
          "content": "[submodule \"Samples/Statistics/Workbench (Distributions)\"]\n\tpath = Samples/Statistics/Workbench (Distributions)\n\turl = ../../cesarsouza/statistics-workbench.git\n[submodule \"Samples/Video/Screencast Capture\"]\n\tpath = Samples/Video/Screencast Capture\n\turl = ../../cesarsouza/screencast-capture.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8095703125,
          "content": "language: csharp\r\n\r\nos:\r\n  - linux\r\n  - osx\r\n\r\nmono:\r\n  - latest\r\n  - 4.8.0\r\n  - 4.4.2\r\n  \r\ninstall:\r\n  - nuget restore Sources/Accord.NET.sln\r\n  - nuget restore Samples/Samples.sln\r\n  \r\nscript:\r\n  - ./autogen.sh\r\n  - make\r\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]] ; then make test-reduced ; else make test ; fi\r\n  - make check\r\n    \r\nbefore_install:\r\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then \r\n       brew update;\r\n       brew cask install mono-mdk; \r\n       export PKG_CONFIG_PATH=/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig/;\r\n       export MONO=/Library/Frameworks/Mono.framework/Versions/Current/bin/mono;\r\n       export XBUILD=/Library/Frameworks/Mono.framework/Versions/Current/bin/xbuild;\r\n    fi\r\n\r\nmatrix:\r\n  exclude:\r\n    - os: osx\r\n      mono: 4.4.2\r\n    - os: osx\r\n      mono: 4.8.0\r\n      "
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1494140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at conduct@accord-framework.net. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7763671875,
          "content": "\n# Contributing\n\nPlease send pull requests against the development branch instead of master. The\nmaster branch is reserved to contain only the latest official public release of \nthe framework.\n\n\n## Please stick to C# 4.0 (avoid features from C# 5, 6 and 7)\n\nIf possible, when contributing code to the framework, please avoid using C# language features from above C# 4.0. There are at least two reasons for this restriction:\n\n 1. **Mono:** To keep compatibility with the most widespread versions of Mono (4.x). If you take a look at our Travis-CI builds, you might see that the builds are actually done and run using Mono, so using any language feature that is not supported there will cause a failing build;\n 1. **Unity:** Some language features might not be accessible when targeting .NET 3.5, which for a long time has been the only .NET Framework version that could be run from inside [Unity](https://unity3d.com).\n\nMore specifically, when submitting pull-requests, please avoid using:\n\n * The nameof(.) operator;\n * Expression-bodied members;\n * Null-conditional operators\n * string interpolation\n * async/await *\n * value tuples\n\n_\\* Unless you can guard those sections using conditional compilation clauses (i.e. ```#if NET35```) and either exclude those code sections from the .NET 3.5 / Mono 4.0 builds or provide specific (possibly non-optimal) implementations for those platforms. Please take a look at the Accord.Compat namespace for help in filling missing functionality from higher platform versions if you run into any of those cases._\n \n## Please use Visual Studio's default code formatting\n\nIf possible, please use the same code formatting style as the default format offered by Visual Studio. This is the style that Visual Studio will format your code with when pressing Ctrl+E, D while in the editor.\n"
        },
        {
          "name": "Contributors.txt",
          "type": "blob",
          "size": 1.341796875,
          "content": " The Accord.NET Framework \n http://accord-framework.net\n\n\n This project has been the result of years of work, in which several\n contributors, including engineers, researchers and hobbyists alike\n decided to share their work and contribute to its development. The \n space below enlists a few of those people who either agreed to help\n or actively participated on its development:\n \n  - Alex Cross\n  - Anders Gustafsson \n  - Antonino Porcino \n  - Antonis Kalapodis \n  - Andrew Kirillov\n  - Ashley Messer\n  - Benjamin Collins\n  - Darko Juric \n  - Darren Schroeder\n  - David Durrleman\n  - Doug Blank\n  - Hans Wolff\n  - Hashem Zawary\n  - Ivan Pizhenko\n  - Marcos Diego Catalano\n  - Max Bügler\n  - Mathias Brandewinder\n  - Mikkel Porse Rasmussen\n  - Peter Sergio Larsen \n  - Remy Disp\n  - Yang Ting\n\n  \nIn May 2015, the project has been merged with the AForge.NET codebase,\nincorporating the work of even more contributors. In a true spirit of\ncommunity, notorious previous contributors are also listed below:\n\n  - Andrew Kirillov (the project creator, with the best ideas)\n  - Fábio Caversan\n  - Alejandro Pirola\n  - Cezary Wagner\n  - Dale McCoy\n  - Fabio Caversan\n  - Frank Nagl\n  - Israel Lot\n  - Jeremy Noring\n  - Joan Charmant\n  - Joris Geurts\n  - Krzysztof Blacha\n  - Kyle Parrigan\n  - Markus Falkensteiner\n  - Mladen Prajdic\n  - Volodymyr Goncharov\n  - Yves Vander Haeghen\n"
        },
        {
          "name": "Copyright.txt",
          "type": "blob",
          "size": 27.23046875,
          "content": "﻿The Accord.NET Framework\r\n\r\nCopyright (c) 2009-2017, Accord.NET Authors <authors @ accord-framework.net>\r\n\r\n    This library is free software; you can redistribute it and/or modify it under the terms of\r\n    the GNU Lesser General Public License as published by the Free Software Foundation; either\r\n    version 2.1 of the License, or (at your option) any later version.\r\n\r\n    The copyright holders provide no reassurances that the source code provided does\r\n    not infringe any patent, copyright, or any other intellectual property rights of\r\n    third parties. The copyright holders disclaim any liability to any recipient for\r\n    claims brought against recipient by any third party for infringement of that parties\r\n    intellectual property rights.\r\n\r\n    This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\r\n    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n    See the GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n\r\nSome modules of this library are distributed under the GPL, and not the LGPL. Those modules\r\nhave been marked with .GPL.dll in their name. All relevant licensing information should also\r\nbe accompanying each respective source code. Other extra modules may carry other restrictions.\r\nPlease see relevant source headers for details.\r\n\r\n\r\nThe documentation sections contains references to Wikipedia and is thus entirely available under the\r\nCreative Commons Attribution/Share-Alike License. All referenced sections include a hyperlink to the\r\noriginal article page. If you think you have found something which has not been properly linked, please\r\nlet me know so it can be corrected.\r\n\r\nOverall framework architecture and style was greatly inspired by AForge.NET. In May 2015, this project\r\nhas been merged with the AForge.NET framework since public support for AForge.NET has ended. The original\r\nAForge.NET Framework is a copyrighted work by Andrew Kirillov, altough developed and shared under the same\r\nLGPL license.\r\n\r\n\r\n\r\nThis library also contains routines adapted from Lutz Roeder's Mapack for .NET, LAPACK and Jama\r\nroutines. Jama has been released under the public domain. LAPACK has been released under a compatible\r\n3-clause BSD license, listed below. Original ArrayDataView code is copyright (c) 2004 Mihail Stefanov,\r\nlicensed under the LGPL with permission of the original author. Original SortableBindingList source\r\ncode is copyright (c) 2008 Tim Van Wassenhove, licensed under the LGPL with permission of the original\r\nauthor. Statistics module contains code for computing the Kolmogorov-Smirnov distribution based on\r\noriginal code by Richard Simard, redistributed under the LGPL with permission of the original author.\r\nImaging module contains code for Gabor filter based on the original code by Max Bügler, redistributed\r\nunder the LGPL with permission of the original author. \r\n\r\nThe Augmented Lagrangian Solver implementation is based on the NLopt Numerical Optimization Library, \r\ncopyright (c) 2008 Steven G. Johnson, distributed under the MIT license. Some image filters have been\r\ncontributed by Diego Catalano, distributed under the LGPL license and included with permission of the\r\noriginal author. Mathematics module includes the Kinematic joint models by Rémy Dispagne, licensed\r\nunder the LGPL with permission of the original author. The Haar Object detector contains contributions\r\nfrom Darko Jurić, added with permission of the original author.\r\n\r\nThe Accord.Vision module includes definitions for Haar Cascades created by Modesto Castrillon-Santana,\r\ndistributed under the LGPL with permission of the original author. The SURF interest points detector\r\nimplementation is based on code by Christopher Evans, licensed under the LGPL with permission of the\r\noriginal author. The FAST corners detector has been created using a code generation tool created by\r\nEdward Rosten, distributed under a compatible 3-clause BSD license, listed below. The Camshift tracker\r\nimplementation is based on the FaceIt ActionScript Camshift tracker, copyright (c) 2009 Benjamin Jung,\r\ndistributed under the MIT license, listed below. The Project Marilena is copyright (c) 2008 Masakazu\r\nOhtsuka, distributed under a compatible 2-clause BSD license, listed below. See actual sources for\r\ndetails. \r\n\r\n\r\n\r\nBelow are the licenses applying to specific sections of the code. Those are not\r\napplicable to the work as a whole (the Framework), but to the specifics of each\r\nportion of the framework. See actual sources for details.\r\n\r\n\r\nThe FaceIt Library - Copyright (C) 2009 Benjamin Jung\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n\r\n\r\nThe Marilena Project - Copyright (C) 2008 Masakazu Ohtsuka\r\n\r\n     Redistribution and use in source and binary forms, with or without modification,\r\n     are permitted provided that the following conditions are met:\r\n\r\n       * Redistribution's of source code must retain the above copyright notice,\r\n         this list of conditions and the following disclaimer.\r\n\r\n       * Redistribution's in binary form must reproduce the above copyright notice,\r\n         this list of conditions and the following disclaimer in the documentation\r\n         and/or other materials provided with the distribution.\r\n\r\n     This software is provided by the copyright holders and contributors \"as is\" and\r\n     any express or implied warranties, including, but not limited to, the implied\r\n     warranties of merchantability and fitness for a particular purpose are disclaimed.\r\n     In no event shall the Intel Corporation or contributors be liable for any direct,\r\n     indirect, incidental, special, exemplary, or consequential damages\r\n     (including, but not limited to, procurement of substitute goods or services;\r\n     loss of use, data, or profits; or business interruption) however caused\r\n     and on any theory of liability, whether in contract, strict liability,\r\n     or tort (including negligence or otherwise) arising in any way out of\r\n     the use of this software, even if advised of the possibility of such damage.\r\n\r\n\r\nThe FAST corners detector - Copyright (C) 2006-2010 Edward Rosten\r\n\r\n     Redistribution and use in source and binary forms, with or without\r\n     modification, are permitted provided that the following conditions\r\n     are met:\r\n\r\n       * Redistributions of source code must retain the above copyright\r\n         notice, this list of conditions and the following disclaimer.\r\n\r\n       * Redistributions in binary form must reproduce the above copyright\r\n         notice, this list of conditions and the following disclaimer in the\r\n         documentation and/or other materials provided with the distribution.\r\n\r\n       * Neither the name of the University of Cambridge nor the names of \r\n         its contributors may be used to endorse or promote products derived \r\n         from this software without specific prior written permission.\r\n\r\n     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n     \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n     A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n     CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n     EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n     PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n     PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n     LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nThe Cephes Math Library - Copyright (C) 1984-2000 Stephen L. Moshier\r\n\r\n     Release 2.8 - June, 2000 Copyright 1984, 1987, 1988, 2000 by Stephen L. Moshier\r\n\r\n       Some software in this archive may be from the book _Methods and\r\n     Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster\r\n     International, 1989) or from the Cephes Mathematical Library, a\r\n     commercial product. In either event, it is copyrighted by the author.\r\n     What you see here may be used freely but it comes with no support or\r\n     guarantee.\r\n\r\n       The two known misprints in the book are repaired here in the\r\n     source listings for the gamma function and the incomplete beta\r\n     integral.\r\n\r\n\r\n       Stephen L. Moshier\r\n       moshier@na-net.ornl.gov\r\n\r\n\r\nThe LAPACK Linear Algebra Package - Copyright (C) 1992-2010\r\n\r\n     Copyright (c) 1992-2010 The University of Tennessee and The University of Tennessee Research Foundation.  All rights reserved.\r\n     Copyright (c) 2000-2010 The University of California Berkeley. All rights reserved.\r\n     Copyright (c) 2006-2010 The University of Colorado Denver. All rights reserved.\r\n\r\n     Redistribution and use in source and binary forms, with or without\r\n     modification, are permitted provided that the following conditions are\r\n     met:\r\n\r\n     - Redistributions of source code must retain the above copyright\r\n       notice, this list of conditions and the following disclaimer.\r\n \r\n     - Redistributions in binary form must reproduce the above copyright\r\n       notice, this list of conditions and the following disclaimer listed\r\n       in this license in the documentation and/or other materials\r\n       provided with the distribution.\r\n\r\n     - Neither the name of the copyright holders nor the names of its\r\n       contributors may be used to endorse or promote products derived from\r\n       this software without specific prior written permission.\r\n\r\n     The copyright holders provide no reassurances that the source code\r\n     provided does not infringe any patent, copyright, or any other\r\n     intellectual property rights of third parties.  The copyright holders\r\n     disclaim any liability to any recipient for claims brought against\r\n     recipient by any third party for infringement of that parties\r\n     intellectual property rights.\r\n\r\n     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n     \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n     A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n     OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n     SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n     LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n     DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n     THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n     OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nNLopt Numerical Optimization Library - Copyright (c) 2008-2014 Steven G. Johnson\r\n\r\n    Copyright (c) 2007-2011 Massachusetts Institute of Technology\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining\r\n    a copy of this software and associated documentation files (the\r\n    \"Software\"), to deal in the Software without restriction, including\r\n    without limitation the rights to use, copy, modify, merge, publish,\r\n    distribute, sublicense, and/or sell copies of the Software, and to\r\n    permit persons to whom the Software is furnished to do so, subject to\r\n    the following conditions:\r\n  \r\n    The above copyright notice and this permission notice shall be\r\n    included in all copies or substantial portions of the Software.\r\n  \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \r\n\r\n\r\n Peter Kovesi's Computer Vision functions - Copyright (c) 1995-2010 Peter Kovesi\r\n\r\n    Copyright (c) 1995-2010 Peter Kovesi\r\n    Centre for Exploration Targeting\r\n    School of Earth and Environment\r\n    The University of Western Australia\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights \r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n    of the Software, and to permit persons to whom the Software is furnished to do\r\n    so, subject to the following conditions:\r\n   \r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n   \r\n    The software is provided \"as is\", without warranty of any kind, express or\r\n    implied, including but not limited to the warranties of merchantability, \r\n    fitness for a particular purpose and noninfringement. In no event shall the\r\n    authors or copyright holders be liable for any claim, damages or other liability,\r\n    whether in an action of contract, tort or otherwise, arising from, out of or in\r\n    connection with the software or the use or other dealings in the software.\r\n\r\n\r\n LibSVM & liblinear library for Support Vector Machines\r\n\r\n    Copyright (c) 2000-2014 Chih-Chung Chang and Chih-Jen Lin\r\n    All rights reserved.\r\n    \r\n    Redistribution and use in source and binary forms, with or without\r\n    modification, are permitted provided that the following conditions\r\n    are met:\r\n    \r\n    1. Redistributions of source code must retain the above copyright\r\n    notice, this list of conditions and the following disclaimer.\r\n    \r\n    2. Redistributions in binary form must reproduce the above copyright\r\n    notice, this list of conditions and the following disclaimer in the\r\n    documentation and/or other materials provided with the distribution.\r\n    \r\n    3. Neither name of copyright holders nor the names of its contributors\r\n    may be used to endorse or promote products derived from this software\r\n    without specific prior written permission.\r\n    \r\n    \r\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n    A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR\r\n    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\n Circular Statistics Toolbox (Directional Statistics)\r\n\r\n    Copyright © Philipp Berens, 2006-2012\r\n    All rights reserved.\r\n\r\n    Redistribution and use in source and binary forms, with or without\r\n    modification, are permitted provided that the following conditions are\r\n    met:\r\n\r\n        * Redistributions of source code must retain the above copyright\r\n          notice, this list of conditions and the following disclaimer.\r\n        * Redistributions in binary form must reproduce the above copyright\r\n          notice, this list of conditions and the following disclaimer in\r\n          the documentation and/or other materials provided with the distribution\r\n    \r\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n   POSSIBILITY OF SUCH DAMAGE.\r\n\r\n   \r\n LumenWorks.Framework.IO.CSV.CsvReader - A Fast CSV Reader\r\n\r\n   Copyright © Sebastien Lorion, 2005-2011\r\n   All rights reserved.\r\n\r\n   MIT license (http://en.wikipedia.org/wiki/MIT_License)\r\n\r\n   Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   of this software and associated documentation files (the \"Software\"), to deal\r\n   in the Software without restriction, including without limitation the rights \r\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n   of the Software, and to permit persons to whom the Software is furnished to do\r\n   so, subject to the following conditions:\r\n\r\n   The above copyright notice and this permission notice shall be included in all \r\n   copies or substantial portions of the Software.\r\n\r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n   CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n Munkres algorithm - The Hungarian method for solving the assignment problem\r\n\r\n    The MIT License (MIT)\r\n\r\n    Copyright (c) 2000 Robert A. Pilgrim\r\n                       Murray State University\r\n                       Dept. of Computer Science & Information Systems\r\n                       Murray,Kentucky\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n   SOFTWARE.\r\n\r\n\r\nLIBLINEAR - A library for large linear classification\r\n\r\n   Copyright (c) 2007-2011 The LIBLINEAR Project.\r\n   All rights reserved.\r\n\r\n   Redistribution and use in source and binary forms, with or without\r\n   modification, are permitted provided that the following conditions\r\n   are met:\r\n\r\n      1. Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n\r\n      2. Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n\r\n      3. Neither name of copyright holders nor the names of its contributors\r\n      may be used to endorse or promote products derived from this software\r\n      without specific prior written permission.\r\n\r\n\r\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR\r\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n   \r\n   \r\nSnowball: A language for stemming algorithms   \r\n   \r\n   Copyright (c) 2001, Dr Martin Porter\r\n   Copyright (c) 2004,2005, Richard Boulton\r\n   All rights reserved.\r\n   \r\n   Redistribution and use in source and binary forms, with or without\r\n   modification, are permitted provided that the following conditions\r\n   are met:\r\n   \r\n     1. Redistributions of source code must retain the above copyright notice,\r\n        this list of conditions and the following disclaimer.\r\n     2. Redistributions in binary form must reproduce the above copyright notice,\r\n        this list of conditions and the following disclaimer in the documentation\r\n        and/or other materials provided with the distribution.\r\n     3. Neither the name of the Snowball project nor the names of its contributors\r\n        may be used to endorse or promote products derived from this software\r\n        without specific prior written permission.\r\n   \r\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\n   ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n   ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\n MathExtension: Mathematical extensions and structures for the .NET framework \r\n\r\n    The MIT License(MIT)\r\n    \r\n    Copyright(c) 2015 AJ Richardson\r\n    \r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n    \r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n\r\n\r\n Partitioning around medoids and Voronoi iteration algorithm for \r\n the K-Medoids clustering: algorithm implementation and unit tests\r\n\r\n    The MIT License (MIT)\r\n    \r\n    Copyright (c) 2017 Ivan Pizhenko\r\n    \r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n    \r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n\r\n\r\n  Statistical Quantiles: implementation and unit tests\r\n\r\n    The MIT License (MIT)\r\n    \r\n    Copyright (c) 2017 Ivan Pizhenko\r\n    \r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n    \r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n"
        },
        {
          "name": "Externals",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.8408203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n(This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.)\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year} {fullname}\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  {signature of Ty Coon}, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 30.70703125,
          "content": "The Accord.NET Framework\n\nCopyright (c) 2009-2017, Accord.NET Authors <authors@accord-framework.net>\n\n    This library is free software; you can redistribute it and/or modify it\n\tunder the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation; either version 2.1 of the License, or (at \n\tyour option) any later version.\n\n    The copyright holders provide no reassurances that the source code provided\n\tdoes not infringe any patent, copyright, or any other intellectual property\n\trights of third parties. The copyright holders disclaim any liability to \n\tany recipient for claims brought against recipient by any third party for \n\tinfringement of that parties intellectual property rights.\n\n    This library is distributed in the hope that it will be useful, but WITHOUT\n\tANY WARRANTY; without even the implied warranty of MERCHANTABILITY or \n\tFITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License\n\tfor more details.\n\n Warning: Depending on your installation options, some modules of the library \n may be available under different licenses. Those modules have been identified \n as GPL or noncommercial only. In this case, check the copyright headers of each\n extra module for more details before installing or using them.\n \n The integral text of the GNU Lesser General Public License is reproduced \n below. Installing or using this software means you have understand and agreed \n by the terms of the license. A official version of the license is also \n available at <http://www.gnu.org/licenses/>.\n \n    \n    \n            \n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n         Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n             51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n         Everyone is permitted to copy and distribute verbatim copies\n         of this license document, but changing it is not allowed.\n\n        [This is the first released version of the Lesser GPL.  It also counts\n         as the successor of the GNU Library Public License, version 2, hence\n         the version number 2.1.]\n\n                        Preamble\n\n          The licenses for most software are designed to take away your\n        freedom to share and change it.  By contrast, the GNU General Public\n        Licenses are intended to guarantee your freedom to share and change\n        free software--to make sure the software is free for all its users.\n\n          This license, the Lesser General Public License, applies to some\n        specially designated software packages--typically libraries--of the\n        Free Software Foundation and other authors who decide to use it.  You\n        can use it too, but we suggest you first think carefully about whether\n        this license or the ordinary General Public License is the better\n        strategy to use in any particular case, based on the explanations below.\n\n          When we speak of free software, we are referring to freedom of use,\n        not price.  Our General Public Licenses are designed to make sure that\n        you have the freedom to distribute copies of free software (and charge\n        for this service if you wish); that you receive source code or can get\n        it if you want it; that you can change the software and use pieces of\n        it in new free programs; and that you are informed that you can do\n        these things.\n\n          To protect your rights, we need to make restrictions that forbid\n        distributors to deny you these rights or to ask you to surrender these\n        rights.  These restrictions translate to certain responsibilities for\n        you if you distribute copies of the library or if you modify it.\n\n          For example, if you distribute copies of the library, whether gratis\n        or for a fee, you must give the recipients all the rights that we gave\n        you.  You must make sure that they, too, receive or can get the source\n        code.  If you link other code with the library, you must provide\n        complete object files to the recipients, so that they can relink them\n        with the library after making changes to the library and recompiling\n        it.  And you must show them these terms so they know their rights.\n\n          We protect your rights with a two-step method: (1) we copyright the\n        library, and (2) we offer you this license, which gives you legal\n        permission to copy, distribute and/or modify the library.\n\n          To protect each distributor, we want to make it very clear that\n        there is no warranty for the free library.  Also, if the library is\n        modified by someone else and passed on, the recipients should know\n        that what they have is not the original version, so that the original\n        author's reputation will not be affected by problems that might be\n        introduced by others.\n         \n          Finally, software patents pose a constant threat to the existence of\n        any free program.  We wish to make sure that a company cannot\n        effectively restrict the users of a free program by obtaining a\n        restrictive license from a patent holder.  Therefore, we insist that\n        any patent license obtained for a version of the library must be\n        consistent with the full freedom of use specified in this license.\n\n          Most GNU software, including some libraries, is covered by the\n        ordinary GNU General Public License.  This license, the GNU Lesser\n        General Public License, applies to certain designated libraries, and\n        is quite different from the ordinary General Public License.  We use\n        this license for certain libraries in order to permit linking those\n        libraries into non-free programs.\n\n          When a program is linked with a library, whether statically or using\n        a shared library, the combination of the two is legally speaking a\n        combined work, a derivative of the original library.  The ordinary\n        General Public License therefore permits such linking only if the\n        entire combination fits its criteria of freedom.  The Lesser General\n        Public License permits more lax criteria for linking other code with\n        the library.\n\n          We call this license the \"Lesser\" General Public License because it\n        does Less to protect the user's freedom than the ordinary General\n        Public License.  It also provides other free software developers Less\n        of an advantage over competing non-free programs.  These disadvantages\n        are the reason we use the ordinary General Public License for many\n        libraries.  However, the Lesser license provides advantages in certain\n        special circumstances.\n\n          For example, on rare occasions, there may be a special need to\n        encourage the widest possible use of a certain library, so that it becomes\n        a de-facto standard.  To achieve this, non-free programs must be\n        allowed to use the library.  A more frequent case is that a free\n        library does the same job as widely used non-free libraries.  In this\n        case, there is little to gain by limiting the free library to free\n        software only, so we use the Lesser General Public License.\n\n          In other cases, permission to use a particular library in non-free\n        programs enables a greater number of people to use a large body of\n        free software.  For example, permission to use the GNU C Library in\n        non-free programs enables many more people to use the whole GNU\n        operating system, as well as its variant, the GNU/Linux operating\n        system.\n\n          Although the Lesser General Public License is Less protective of the\n        users' freedom, it does ensure that the user of a program that is\n        linked with the Library has the freedom and the wherewithal to run\n        that program using a modified version of the Library.\n\n          The precise terms and conditions for copying, distribution and\n        modification follow.  Pay close attention to the difference between a\n        \"work based on the library\" and a \"work that uses the library\".  The\n        former contains code derived from the library, whereas the latter must\n        be combined with the library in order to run.\n         \n                  GNU LESSER GENERAL PUBLIC LICENSE\n           TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n          0. This License Agreement applies to any software library or other\n        program which contains a notice placed by the copyright holder or\n        other authorized party saying it may be distributed under the terms of\n        this Lesser General Public License (also called \"this License\").\n        Each licensee is addressed as \"you\".\n\n          A \"library\" means a collection of software functions and/or data\n        prepared so as to be conveniently linked with application programs\n        (which use some of those functions and data) to form executables.\n\n          The \"Library\", below, refers to any such software library or work\n        which has been distributed under these terms.  A \"work based on the\n        Library\" means either the Library or any derivative work under\n        copyright law: that is to say, a work containing the Library or a\n        portion of it, either verbatim or with modifications and/or translated\n        straightforwardly into another language.  (Hereinafter, translation is\n        included without limitation in the term \"modification\".)\n\n          \"Source code\" for a work means the preferred form of the work for\n        making modifications to it.  For a library, complete source code means\n        all the source code for all modules it contains, plus any associated\n        interface definition files, plus the scripts used to control compilation\n        and installation of the library.\n\n          Activities other than copying, distribution and modification are not\n        covered by this License; they are outside its scope.  The act of\n        running a program using the Library is not restricted, and output from\n        such a program is covered only if its contents constitute a work based\n        on the Library (independent of the use of the Library in a tool for\n        writing it).  Whether that is true depends on what the Library does\n        and what the program that uses the Library does.\n          \n          1. You may copy and distribute verbatim copies of the Library's\n        complete source code as you receive it, in any medium, provided that\n        you conspicuously and appropriately publish on each copy an\n        appropriate copyright notice and disclaimer of warranty; keep intact\n        all the notices that refer to this License and to the absence of any\n        warranty; and distribute a copy of this License along with the\n        Library.\n\n          You may charge a fee for the physical act of transferring a copy,\n        and you may at your option offer warranty protection in exchange for a\n        fee.\n         \n          2. You may modify your copy or copies of the Library or any portion\n        of it, thus forming a work based on the Library, and copy and\n        distribute such modifications or work under the terms of Section 1\n        above, provided that you also meet all of these conditions:\n\n            a) The modified work must itself be a software library.\n\n            b) You must cause the files modified to carry prominent notices\n            stating that you changed the files and the date of any change.\n\n            c) You must cause the whole of the work to be licensed at no\n            charge to all third parties under the terms of this License.\n\n            d) If a facility in the modified Library refers to a function or a\n            table of data to be supplied by an application program that uses\n            the facility, other than as an argument passed when the facility\n            is invoked, then you must make a good faith effort to ensure that,\n            in the event an application does not supply such function or\n            table, the facility still operates, and performs whatever part of\n            its purpose remains meaningful.\n\n            (For example, a function in a library to compute square roots has\n            a purpose that is entirely well-defined independent of the\n            application.  Therefore, Subsection 2d requires that any\n            application-supplied function or table used by this function must\n            be optional: if the application does not supply it, the square\n            root function must still compute square roots.)\n\n        These requirements apply to the modified work as a whole.  If\n        identifiable sections of that work are not derived from the Library,\n        and can be reasonably considered independent and separate works in\n        themselves, then this License, and its terms, do not apply to those\n        sections when you distribute them as separate works.  But when you\n        distribute the same sections as part of a whole which is a work based\n        on the Library, the distribution of the whole must be on the terms of\n        this License, whose permissions for other licensees extend to the\n        entire whole, and thus to each and every part regardless of who wrote\n        it.\n\n        Thus, it is not the intent of this section to claim rights or contest\n        your rights to work written entirely by you; rather, the intent is to\n        exercise the right to control the distribution of derivative or\n        collective works based on the Library.\n\n        In addition, mere aggregation of another work not based on the Library\n        with the Library (or with a work based on the Library) on a volume of\n        a storage or distribution medium does not bring the other work under\n        the scope of this License.\n\n          3. You may opt to apply the terms of the ordinary GNU General Public\n        License instead of this License to a given copy of the Library.  To do\n        this, you must alter all the notices that refer to this License, so\n        that they refer to the ordinary GNU General Public License, version 2,\n        instead of to this License.  (If a newer version than version 2 of the\n        ordinary GNU General Public License has appeared, then you can specify\n        that version instead if you wish.)  Do not make any other change in\n        these notices.\n         \n          Once this change is made in a given copy, it is irreversible for\n        that copy, so the ordinary GNU General Public License applies to all\n        subsequent copies and derivative works made from that copy.\n\n          This option is useful when you wish to copy part of the code of\n        the Library into a program that is not a library.\n\n          4. You may copy and distribute the Library (or a portion or\n        derivative of it, under Section 2) in object code or executable form\n        under the terms of Sections 1 and 2 above provided that you accompany\n        it with the complete corresponding machine-readable source code, which\n        must be distributed under the terms of Sections 1 and 2 above on a\n        medium customarily used for software interchange.\n\n          If distribution of object code is made by offering access to copy\n        from a designated place, then offering equivalent access to copy the\n        source code from the same place satisfies the requirement to\n        distribute the source code, even though third parties are not\n        compelled to copy the source along with the object code.\n\n          5. A program that contains no derivative of any portion of the\n        Library, but is designed to work with the Library by being compiled or\n        linked with it, is called a \"work that uses the Library\".  Such a\n        work, in isolation, is not a derivative work of the Library, and\n        therefore falls outside the scope of this License.\n\n          However, linking a \"work that uses the Library\" with the Library\n        creates an executable that is a derivative of the Library (because it\n        contains portions of the Library), rather than a \"work that uses the\n        library\".  The executable is therefore covered by this License.\n        Section 6 states terms for distribution of such executables.\n\n          When a \"work that uses the Library\" uses material from a header file\n        that is part of the Library, the object code for the work may be a\n        derivative work of the Library even though the source code is not.\n        Whether this is true is especially significant if the work can be\n        linked without the Library, or if the work is itself a library.  The\n        threshold for this to be true is not precisely defined by law.\n\n          If such an object file uses only numerical parameters, data\n        structure layouts and accessors, and small macros and small inline\n        functions (ten lines or less in length), then the use of the object\n        file is unrestricted, regardless of whether it is legally a derivative\n        work.  (Executables containing this object code plus portions of the\n        Library will still fall under Section 6.)\n\n          Otherwise, if the work is a derivative of the Library, you may\n        distribute the object code for the work under the terms of Section 6.\n        Any executables containing that work also fall under Section 6,\n        whether or not they are linked directly with the Library itself.\n         \n          6. As an exception to the Sections above, you may also combine or\n        link a \"work that uses the Library\" with the Library to produce a\n        work containing portions of the Library, and distribute that work\n        under terms of your choice, provided that the terms permit\n        modification of the work for the customer's own use and reverse\n        engineering for debugging such modifications.\n\n          You must give prominent notice with each copy of the work that the\n        Library is used in it and that the Library and its use are covered by\n        this License.  You must supply a copy of this License.  If the work\n        during execution displays copyright notices, you must include the\n        copyright notice for the Library among them, as well as a reference\n        directing the user to the copy of this License.  Also, you must do one\n        of these things:\n\n            a) Accompany the work with the complete corresponding\n            machine-readable source code for the Library including whatever\n            changes were used in the work (which must be distributed under\n            Sections 1 and 2 above); and, if the work is an executable linked\n            with the Library, with the complete machine-readable \"work that\n            uses the Library\", as object code and/or source code, so that the\n            user can modify the Library and then relink to produce a modified\n            executable containing the modified Library.  (It is understood\n            that the user who changes the contents of definitions files in the\n            Library will not necessarily be able to recompile the application\n            to use the modified definitions.)\n\n            b) Use a suitable shared library mechanism for linking with the\n            Library.  A suitable mechanism is one that (1) uses at run time a\n            copy of the library already present on the user's computer system,\n            rather than copying library functions into the executable, and (2)\n            will operate properly with a modified version of the library, if\n            the user installs one, as long as the modified version is\n            interface-compatible with the version that the work was made with.\n\n            c) Accompany the work with a written offer, valid for at\n            least three years, to give the same user the materials\n            specified in Subsection 6a, above, for a charge no more\n            than the cost of performing this distribution.\n\n            d) If distribution of the work is made by offering access to copy\n            from a designated place, offer equivalent access to copy the above\n            specified materials from the same place.\n\n            e) Verify that the user has already received a copy of these\n            materials or that you have already sent this user a copy.\n\n          For an executable, the required form of the \"work that uses the\n        Library\" must include any data and utility programs needed for\n        reproducing the executable from it.  However, as a special exception,\n        the materials to be distributed need not include anything that is\n        normally distributed (in either source or binary form) with the major\n        components (compiler, kernel, and so on) of the operating system on\n        which the executable runs, unless that component itself accompanies\n        the executable.\n\n          It may happen that this requirement contradicts the license\n        restrictions of other proprietary libraries that do not normally\n        accompany the operating system.  Such a contradiction means you cannot\n        use both them and the Library together in an executable that you\n        distribute.\n         \n          7. You may place library facilities that are a work based on the\n        Library side-by-side in a single library together with other library\n        facilities not covered by this License, and distribute such a combined\n        library, provided that the separate distribution of the work based on\n        the Library and of the other library facilities is otherwise\n        permitted, and provided that you do these two things:\n\n            a) Accompany the combined library with a copy of the same work\n            based on the Library, uncombined with any other library\n            facilities.  This must be distributed under the terms of the\n            Sections above.\n\n            b) Give prominent notice with the combined library of the fact\n            that part of it is a work based on the Library, and explaining\n            where to find the accompanying uncombined form of the same work.\n\n          8. You may not copy, modify, sublicense, link with, or distribute\n        the Library except as expressly provided under this License.  Any\n        attempt otherwise to copy, modify, sublicense, link with, or\n        distribute the Library is void, and will automatically terminate your\n        rights under this License.  However, parties who have received copies,\n        or rights, from you under this License will not have their licenses\n        terminated so long as such parties remain in full compliance.\n\n          9. You are not required to accept this License, since you have not\n        signed it.  However, nothing else grants you permission to modify or\n        distribute the Library or its derivative works.  These actions are\n        prohibited by law if you do not accept this License.  Therefore, by\n        modifying or distributing the Library (or any work based on the\n        Library), you indicate your acceptance of this License to do so, and\n        all its terms and conditions for copying, distributing or modifying\n        the Library or works based on it.\n\n          10. Each time you redistribute the Library (or any work based on the\n        Library), the recipient automatically receives a license from the\n        original licensor to copy, distribute, link with or modify the Library\n        subject to these terms and conditions.  You may not impose any further\n        restrictions on the recipients' exercise of the rights granted herein.\n        You are not responsible for enforcing compliance by third parties with\n        this License.\n         \n          11. If, as a consequence of a court judgment or allegation of patent\n        infringement or for any other reason (not limited to patent issues),\n        conditions are imposed on you (whether by court order, agreement or\n        otherwise) that contradict the conditions of this License, they do not\n        excuse you from the conditions of this License.  If you cannot\n        distribute so as to satisfy simultaneously your obligations under this\n        License and any other pertinent obligations, then as a consequence you\n        may not distribute the Library at all.  For example, if a patent\n        license would not permit royalty-free redistribution of the Library by\n        all those who receive copies directly or indirectly through you, then\n        the only way you could satisfy both it and this License would be to\n        refrain entirely from distribution of the Library.\n\n        If any portion of this section is held invalid or unenforceable under any\n        particular circumstance, the balance of the section is intended to apply,\n        and the section as a whole is intended to apply in other circumstances.\n\n        It is not the purpose of this section to induce you to infringe any\n        patents or other property right claims or to contest validity of any\n        such claims; this section has the sole purpose of protecting the\n        integrity of the free software distribution system which is\n        implemented by public license practices.  Many people have made\n        generous contributions to the wide range of software distributed\n        through that system in reliance on consistent application of that\n        system; it is up to the author/donor to decide if he or she is willing\n        to distribute software through any other system and a licensee cannot\n        impose that choice.\n\n        This section is intended to make thoroughly clear what is believed to\n        be a consequence of the rest of this License.\n\n          12. If the distribution and/or use of the Library is restricted in\n        certain countries either by patents or by copyrighted interfaces, the\n        original copyright holder who places the Library under this License may add\n        an explicit geographical distribution limitation excluding those countries,\n        so that distribution is permitted only in or among countries not thus\n        excluded.  In such case, this License incorporates the limitation as if\n        written in the body of this License.\n\n          13. The Free Software Foundation may publish revised and/or new\n        versions of the Lesser General Public License from time to time.\n        Such new versions will be similar in spirit to the present version,\n        but may differ in detail to address new problems or concerns.\n\n        Each version is given a distinguishing version number.  If the Library\n        specifies a version number of this License which applies to it and\n        \"any later version\", you have the option of following the terms and\n        conditions either of that version or of any later version published by\n        the Free Software Foundation.  If the Library does not specify a\n        license version number, you may choose any version ever published by\n        the Free Software Foundation.\n         \n          14. If you wish to incorporate parts of the Library into other free\n        programs whose distribution conditions are incompatible with these,\n        write to the author to ask for permission.  For software which is\n        copyrighted by the Free Software Foundation, write to the Free\n        Software Foundation; we sometimes make exceptions for this.  Our\n        decision will be guided by the two goals of preserving the free status\n        of all derivatives of our free software and of promoting the sharing\n        and reuse of software generally.\n\n                        NO WARRANTY\n\n          15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\n        WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\n        EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\n        OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\n        KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n        PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\n        LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\n        THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n          16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\n        WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\n        AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\n        FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\n        CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\n        LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\n        RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\n        FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\n        SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n        DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n         \n                   How to Apply These Terms to Your New Libraries\n\n          If you develop a new library, and you want it to be of the greatest\n        possible use to the public, we recommend making it free software that\n        everyone can redistribute and change.  You can do so by permitting\n        redistribution under these terms (or, alternatively, under the terms of the\n        ordinary General Public License).\n\n          To apply these terms, attach the following notices to the library.  It is\n        safest to attach them to the start of each source file to most effectively\n        convey the exclusion of warranty; and each file should have at least the\n        \"copyright\" line and a pointer to where the full notice is found.\n\n            <one line to give the library's name and a brief idea of what it does.>\n            Copyright (C) <year>  <name of author>\n\n            This library is free software; you can redistribute it and/or\n            modify it under the terms of the GNU Lesser General Public\n            License as published by the Free Software Foundation; either\n            version 2.1 of the License, or (at your option) any later version.\n\n            This library is distributed in the hope that it will be useful,\n            but WITHOUT ANY WARRANTY; without even the implied warranty of\n            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n            Lesser General Public License for more details.\n\n            You should have received a copy of the GNU Lesser General Public\n            License along with this library; if not, write to the Free Software\n            Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n        Also add information on how to contact you by electronic and paper mail.\n\n        You should also get your employer (if you work as a programmer) or your\n        school, if any, to sign a \"copyright disclaimer\" for the library, if\n        necessary.  Here is a sample; alter the names:\n\n          Yoyodyne, Inc., hereby disclaims all copyright interest in the\n          library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n          <signature of Ty Coon>, 1 April 1990\n          Ty Coon, President of Vice\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 4.111328125,
          "content": "SUBDIRS = \nDIST_SUBDIRS = \n\nDIR_DEBUG = $(srcdir)/Debug\nDIR_RELEASE = $(srcdir)/Release\nLIBDIR = $(srcdir)/Release/mono\n\nACCORD_ASSEMBLY_PC = $(srcdir)/$(PACKAGE_NAME).pc\n\nDIR_TEST = \"$(srcdir)/Unit Tests\"\nNUNIT    = \"$(srcdir)/Externals/NUnit/NUnit.Console-3.6.1/nunit3-console.exe\"\n\nLIBFILES = \\\n\t$(LIBDIR)/Accord.Vision.dll \\\n\t$(LIBDIR)/Accord.Video.Ximea.dll \\\n\t$(LIBDIR)/Accord.Video.VFW.dll \\\n\t$(LIBDIR)/Accord.Video.Kinect.dll \\\n\t$(LIBDIR)/Accord.Video.dll \\\n\t$(LIBDIR)/Accord.Video.DirectShow.dll \\\n\t$(LIBDIR)/Accord.Neuro.dll \\\n\t$(LIBDIR)/Accord.Math.dll \\\n\t$(LIBDIR)/Accord.Math.Core.dll \\\n\t$(LIBDIR)/Accord.MachineLearning.dll \\\n\t$(LIBDIR)/Accord.Text.dll \\\n\t$(LIBDIR)/Accord.IO.dll \\\n\t$(LIBDIR)/Accord.DataSets.dll \\\n\t$(LIBDIR)/Accord.Imaging.dll \\\n\t$(LIBDIR)/Accord.Genetic.dll \\\n\t$(LIBDIR)/Accord.Fuzzy.dll \\\n\t$(LIBDIR)/Accord.dll \\\n\t$(LIBDIR)/Accord.Controls.Vision.dll \\\n\t$(LIBDIR)/Accord.Controls.Imaging.dll \\\n\t$(LIBDIR)/Accord.Controls.Audio.dll \\\n\t$(LIBDIR)/Accord.Audition.dll \\\n\t$(LIBDIR)/Accord.Audio.dll \n\nTESTFILES = \\\n\t${DIR_TEST}/Accord.Tests.Controls/bin/mono/AnyCPU/Accord.Tests.Controls.dll \\\n\t${DIR_TEST}/Accord.Tests.Core/bin/mono/AnyCPU/Accord.Tests.Core.dll \\\n\t${DIR_TEST}/Accord.Tests.Imaging/bin/mono/AnyCPU/Accord.Tests.Imaging.dll \\\n\t${DIR_TEST}/Accord.Tests.IO/bin/mono/AnyCPU/Accord.Tests.IO.dll \\\n\t${DIR_TEST}/Accord.Tests.MachineLearning/bin/mono/AnyCPU/Accord.Tests.MachineLearning.dll \\\n\t${DIR_TEST}/Accord.Tests.Math/bin/mono/AnyCPU/Accord.Tests.Math.dll \\\n\t${DIR_TEST}/Accord.Tests.Neuro/bin/mono/AnyCPU/Accord.Tests.Neuro.dll \\\n\t${DIR_TEST}/Accord.Tests.Vision/bin/mono/AnyCPU/Accord.Tests.Vision.dll \\\n\t${DIR_TEST}/Accord.Tests.Statistics/bin/mono/AnyCPU/Accord.Tests.Statistics.dll \n\n\nDEBUG_FILES = $(addsuffix .mdb, $(LIBFILES))\nRELEASE_FILE = $(PACKAGE)-$(VERSION)\n\n\n#magic automake variables\npkgconfigdir = $(LIBDIR)/pkgconfig\npkgconfig_DATA = $(ACCORD_ASSEMBLY_PC)\n#end\n\n\n\n# target: all - Default target: build\nall: build\n\n# target: help - Display callable targets.\nhelp:\n\tegrep \"^# target:\" Makefile | sed 's/^# target:/make/'\n\n# target: build - Build Accord.NET Framework\nbuild: Sources/Accord.NET.sln\n\t$(XBUILD) /p:Configuration=Mono Sources/Accord.NET.sln\n\n# target: samples - Build sample applications\nsamples: Samples/Samples.sln\n\t$(XBUILD) /p:Configuration=Mono /p:Platform=x86 Samples/Samples.sln\n\n# target: docs - Build documentation\ndocs:\n\tmdoc update --lib=Release/mono/ --out=Docs/monodoc Release/mono/*.dll\n\tmdoc export-html -o htmldocs docfiles\n\n# target: test - Run unit tests\n# Notes:\n#    Timeout: 30 min = 30 * 60 * 10000 = 1800000\n#    First line runs as 64-bit, second line as 32-bits\n#\ntest: build\n\t$(MONO) --runtime=v4.0 ${NUNIT} --labels=All --timeout=1800000 \\\n\t\t--where \"cat != Serialization && cat != Intensive && cat != WinForms && cat != Office && cat != MonoNotSupported && cat != Random\" \\\n\t\t${TESTFILES}\n\t$(MONO) --runtime=v4.0 ${NUNIT} --labels=All --timeout=1800000 --x86 \\\n\t\t--where \"cat != Serialization && cat != Intensive && cat != WinForms && cat != Office && cat != MonoNotSupported && cat != Random\" \\\n\t\t${TESTFILES}\n\t\t\ntest-reduced: build\n\t$(MONO) --runtime=v4.0 ${NUNIT} --labels=All --timeout=1800000 \\\n\t\t--where \"cat != Serialization && cat != Intensive && cat != WinForms && cat != Office && cat != MonoNotSupported && cat != Slow && cat != Random\" \\\n\t\t${TESTFILES}\n\t$(MONO) --runtime=v4.0 ${NUNIT} --labels=All --timeout=1800000 --x86 \\\n\t\t--where \"cat != Serialization && cat != Intensive && cat != WinForms && cat != Office && cat != MonoNotSupported && cat != Slow && cat != Random\" \\\n\t\t${TESTFILES}\n\n# target: clean - remove all obj and bin directories\nclean-local: \n\trm -rvf $(LIBDIR)/*\n\trm -rvf $(DIR_RELEASE)/*\n\trm -rvf $(DIR_DEBUG)/*\n\tfind $(srcdir)/ -type d -name obj | xargs rm -rvf\n\nmaintainer-clean-local:\n\trm -rf autom4te.cache\n\ninstall-exec-local:\n\tmkdir -p $(DESTDIR)$(libdir)/$(PACKAGE)\n\t$(INSTALL_SCRIPT) -t $(DESTDIR)$(libdir)/$(PACKAGE)/ $(LIBFILES)\n\nuninstall-local: \n\trm -rf $(DESTDIR)$(libdir)/$(PACKAGE)\n\nMAINTAINERCLEANFILES = Makefile.in \\\n\t\t       install-sh \\\n\t\t       configure \\\n\t\t       aclocal.m4 \\\n\t\t       missing \\\n\t\t       compile\n\n.PHONY: install uninstall cleanbin cleanobj \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.263671875,
          "content": "# Accord.NET Framework\r\n\r\nThis project is currently archived. Please fork the project into your own GitHub account if you would like to continue its development.\r\n\r\n# Archiving\r\n\r\nAfter 14~15 years of development, the Accord.NET project has finally been archived. I would like to send a big thank you to everyone who has ever comitted, dedicated, or otherwise devoted their time and effort into making this repository better every day. What had started as a project to store knowledge in the form of algorithms and implementations had grown way beyond my expectations since I first joined university and started working on research ~15 years ago.\r\n\r\nIn the meantime, many things have happened, and the ML landscape had also greatly evolved since then.\r\n\r\nHowever, I pledge you to absolutely not interpret the archiving of this project as a loss. The main goal of this project since day 1 was to crystalize the ML knowledge available at the time in the form of source code and store it under a number of compatible free software licenses. As such, if you would like to, *do not feel afraid of copy and pasting portions of this project into your own implementations*. If I (Cesar De Souza) am the solely implementor of any of the classes you would like to port, I hereby grant you an irrevocable license to do so. If I am not, and the current license of the file you would like to port does not suit your needs, I can help you contact their original developers to help you with the transition.\r\n\r\n<pre>\r\n\"We reject kings, presidents and voting.  We\r\n   believe in rough consensus and running code\"\r\n   -- David Clark\r\n</pre>\r\n\r\nAll this said. This has been an amazing ride.\r\n\r\nThanks everyone for their ever growing support all those years.\r\n\r\nLet's keep in touch,\r\n\r\nCesar\r\n\r\n\r\n# Previous\r\n\r\n[![DOI](https://zenodo.org/badge/3964514.svg)](https://zenodo.org/badge/latestdoi/3964514)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/ns9h9opjmu8iw3ep?svg=true)](https://ci.appveyor.com/project/cesarsouza/framework)\r\n[![Build Status](https://travis-ci.org/accord-net/framework.svg?branch=development)](https://travis-ci.org/accord-net/framework)\r\n[![NuGet Downloads](https://img.shields.io/nuget/dt/Accord.svg)](https://www.nuget.org/packages/Accord/)\r\n[![License](https://img.shields.io/badge/license-LGPL--2.1-blue.svg)](LICENSE)\r\n[![NuGet](https://img.shields.io/nuget/v/Accord.svg)](https://www.nuget.org/packages/Accord/)\r\n[![NuGet Pre Release](https://img.shields.io/nuget/vpre/Accord.svg)](https://www.nuget.org/packages/Accord/)\r\n\r\nThe Accord.NET project provides machine learning, statistics, artificial intelligence, computer vision and image processing methods to .NET. It can be used on Microsoft Windows, Xamarin, Unity3D, Windows Store applications, Linux or mobile.\r\n\r\nAfter merging with the AForge.NET project, the framework now offers a unified API for learning/training machine learning models that is both easy to use *and* extensible. It is based on the following pattern:\r\n\r\n- Choose a [learning algorithm](http://accord-framework.net/docs/html/N_Accord_MachineLearning.htm) that provides a Learn(x, y) or Learn(x) method;\r\n- [Use the Learn(x, y)](http://accord-framework.net/docs/html/M_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_Learn.htm) to create a [machine learning model](http://accord-framework.net/docs/html/T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm) learned from the data; \r\n- Use the model's [Transform](http://accord-framework.net/docs/html/M_Accord_MachineLearning_ClassifierBase_2_Transform.htm), [Decide](http://accord-framework.net/docs/html/M_Accord_MachineLearning_ClassifierBase_2_Decide_1.htm), [Scores](http://accord-framework.net/docs/html/M_Accord_MachineLearning_BinaryScoreClassifierBase_1_Scores_3.htm), [Probabilities](http://accord-framework.net/docs/html/M_Accord_MachineLearning_BinaryLikelihoodClassifierBase_1_Probabilities.htm) or [LogLikelihoods](http://accord-framework.net/docs/html/M_Accord_MachineLearning_VectorMachines_SupportVectorMachine_2_LogLikelihood.htm) methods.\r\n\r\nFor more information, please see the [getting started guide](https://github.com/accord-net/framework/wiki/Getting-started), and check [the classfication wiki](https://github.com/accord-net/framework/wiki/Classification). *Please do not hesitate to edit the wiki if you would like!*\r\n\r\n**Update (10/05/2020):** Please see the [current status section](https://github.com/accord-net/framework#current-status) below before you start using this library in any new projects.\r\n\r\n# Installing\r\n\r\nTo install the framework in your application, please use NuGet. If you are on Visual Studio, right-click on the \"References\" item in your solution folder, and select \"Manage NuGet Packages.\" Search for Accord.MachineLearning ([or equivalently, Accord.Math, Accord.Statistics or Accord.Imaging depending on your initial goal](https://www.nuget.org/packages?q=accord.net)) and select \"Install.\"\r\n\r\nIf you would like to install the framework on [Unity3D applications](https://unity3d.com), download the \"libsonly\" compressed archive from the [framework releases page](https://github.com/accord-net/framework/releases). Navigate to the Releases/Mono folder, and copy the .dll files to the Plugins folder in your Unity project. Finally, find and add the System.ComponentModel.DataAnnotations.dll assembly that should be available from your system to the Plugin folders as well.\r\n\r\n## Sample applications\r\n\r\nThe framework comes with a wide range of sample applications to help get you started quickly. If you downloaded the framework sources or cloned the repository, open the *Samples.sln* solution file in the Samples folder.\r\n\r\n\r\n# Building\r\n\r\n#### With Visual Studio 2015\r\n\r\nPlease download and install the following dependencies:\r\n\r\n- [T4 Toolbox for Visual Studio 2015](https://visualstudiogallery.msdn.microsoft.com/34b6d489-afbc-4d7b-82c3-dded2b726dbc)\r\n- [Sandcastle Help File Builder (with VS2015 extension)](https://github.com/EWSoftware/SHFB/releases)\r\n- [NUnit 3 Test Adapter](https://marketplace.visualstudio.com/items?itemName=NUnitDevelopers.NUnit3TestAdapter)\r\n\r\nThen navigate to the Sources directory, and open the *Accord.NET.sln* solution file. Note: the solution includes F# unit test projects that can be disabled/unloaded from the solution in case you do not have support for F# tools in your version of Visual Studio.\r\n\r\n\r\n#### With Visual Studio 2017\r\n\r\nPlease download and install the following dependencies:\r\n\r\n- [T4 Toolbox for Visual Studio 2017](https://github.com/hagronnestad/T4Toolbox/releases/tag/vs2017-b1)\r\n- [Sandcastle Help File Builder (with VS2017 extension)](https://github.com/EWSoftware/SHFB/releases)\r\n- [NUnit 3 Test Adapter](https://marketplace.visualstudio.com/items?itemName=NUnitDevelopers.NUnit3TestAdapter)\r\n- [Visual C++ Redistributable for Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145&751be11f-ede8-5a0c-058c-2ee190a24fa6) (both x64 and x86)\r\n\r\nThen navigate to the Sources directory, and open the *Accord.NET.sln* solution file. Note: the solution includes F# unit test projects that can be disabled/unloaded from the solution in case you do not have support for F# tools in your version of Visual Studio.\r\n\r\n\r\n#### With Mono in Linux\r\n\r\n```bash\r\n# Install Mono\r\nsudo apt-get install mono-complete monodevelop monodevelop-nunit git autoconf make\r\n\r\n# Clone the repository\r\ngit clone https://github.com/accord-net/framework.git\r\n\r\n# Enter the directory\r\ncd framework\r\n\r\n# Build the framework solution using Mono\r\n./autogen.sh\r\nmake build\r\nmake samples\r\nmake test\r\n```\r\n\r\n#### With Mono in OS X\r\n\r\n```bash\r\n# Install Mono\r\nbrew update\r\nbrew cask install mono-mdk pkg-config automake\r\n\r\n# Clone the repository\r\ngit clone https://github.com/accord-net/framework.git\r\n\r\n# Enter the directory\r\ncd framework\r\n\r\n# Set some environment variables with OSX-specific paths\r\nexport PKG_CONFIG_PATH=/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig/\r\nexport MONO=/Library/Frameworks/Mono.framework/Versions/Current/bin/mono\r\nexport XBUILD=/Library/Frameworks/Mono.framework/Versions/Current/bin/xbuild\r\n\r\n# Build the framework solution using Mono\r\n./autogen.sh\r\nmake build\r\nmake samples\r\nmake test\r\n```\r\n\r\n# Contributing\r\n\r\nIf you would like to contribute, please do so by helping us update the [project's Wiki pages](https://github.com/accord-net/framework/wiki). While you could also make a donation through PayPal [![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=N4Q6YQSPWN8BG), Flattr [![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=cesarsouza&url=https://github.com/accord-net/framework&title=Accord.NET&language=&tags=github&category=software), or any of the cryptocurrencies shown below, as well as fill-in bug reports and contribute code in the form of pull requests, the most precious donation we could receive would be a bit of your time - [please take some minutes to submit us more documentation examples to our Wiki pages](https://github.com/accord-net/framework/wiki) :wink: \r\n\r\nDonate using cryptocurrencies:\r\n- ```BTC: 1FC5gxLs2TsvuiHPP1tRLh5mPboQJQghvZ```\r\n- ```ETH: 0x36FDA635Ef5773d8B376037D7BAfF22FeB987d92```\r\n- ```LTC: LNjkZkMdSyncUvg5WnnhDNirdux4Q95gdt```\r\n\r\nNote: all donations are 100% invested towards improving the framework, including, but not limited to, the hiring of extra developers to work on issues currently present at the project's issue tracker. If you would like to donate resources towards the development of a particular issue, please let us know!\r\n\r\nJoin the chat at https://gitter.im/accord-net/framework - but to have issues and questions answered, [post it as an issue](https://github.com/accord-net/framework/issues).\r\n\r\n# Current status\r\n\r\nBefore you decide to use the framework for new projects, please see the following personal note below.\r\n\r\n>\r\n> I am writing this note to give an official status for the project.\r\n>\r\n> This project has certainly been the most important thing I have ever created, but I could not keep up with maintaining it as well as I wanted. This project allowed me to achieve the biggest dream I had, and that I never though I would have been able to achieve in my life, which was (some may laugh and possibly not understand - specially if you did not know where I came from): starting a new life, and a new career, here in Europe. \r\n> \r\n> For about 10 years, I had worked on this project almost every day of my life.\r\n> \r\n> But with the new life, there came new steps to be climbed, and I suddently had new responsabilities and things that I absolutely needed to accomplish very well. I started a PhD and had to focus on it so I could not keep up maintaining the library for about three years. I tried to hire freelance developers to help maintain the project in the meantime I had to be absent, and it worked to some extent, but at some point, I did not have the resources to keep up with the development anymore. Eventually, I developed panic-level anxiety since I felt I had left so many people behind by not being able to keep up with the development of the project anymore. I found out that I would always _avoid opening up_ the issues page of the project, or even _checking my own personal e-mails_, just to avoid receiving new inquiries about the status of the project. \r\n>\r\n> Then, a few months before my PhD defense (which happened very well, actually!), Microsoft announced that they wanted to make ML.net (which I actually fully support), the standard approach for machine learning in .NET. While this is great news (because I fully support MS giving more support for all ML practitioners out there), this eventually meant **that Accord.NET would eventually become obsolete as ML.net was on its path to become the de-facto ML library for .NET** in the foreseeing future.\r\n> \r\n> I think that the reasons above would have been already enough to explain why I decided to not update Accord.NET anymore after that. However... in addition, I have to say that, as a researcher, and not solely as a developer, I have also published in, and attended to, **the most important machine learning conferences in the world to date, and under this context, I need to say that in the academia world, no one has ever heard of the framework or the project itself**. Actually, from my experience, people in those conferences can laugh or even mistreat you, **if you ever mention you have ever developed anything in C#**, specially for machine learning, as everyone [understandably] uses Python nowadays to accomplish tasks in this domain. **This happened even when those people were from Microsoft itself**. \r\n\r\n> I could  actually understand the reaction, as I myself only use Python to do my day-to-day work, and while I love C#/.NET, I have to say that there is nothing that could even remotely compete with Python/Pytorch at this day and age). \r\n\r\n> Anyways, therefore, in the past months, I have been pondering about archiving the project. To avoid that, **I am willing to make someone who would like, also an administrator of the project**.\r\n> \r\n> I am also willing to change the license of any file where I am the single author (you can check the copyright headers in each file) to **MIT** so people can reuse individual pieces of code more easily. Anyone who becomes administrator is welcome to slice the parts of the project that still make sense to exist (e.g., the FFmpeg wrappers, statistical distributions, statistical tests and the simple transforms like PCA) and even start new libraries (hopefully in .NET Core) providing only them if wanted.\r\n>\r\n> Also, when I started this project back in 2007 (and when the original AForge library started, even way before that), there were almost no other libraries we could built upon, so we had to do start almost everything from scratch. This is not the case anymore. Any new libraries coming out of this project should **definitely reuse existing libraries for basic tasks such as matrix operations and image processing**.\r\n> \r\n> Cesar De Souza  \r\n> 10-May-2020\r\n\r\n\r\n# Citing\r\n\r\nPlease cite this work as:\r\n```bibtex\r\n@misc{souza2014accord,\r\n  title={The Accord.NET Framework},\r\n  author={C{\\'e}sar Souza and Andrew Kirillov and Marcos Diego Catalano and Accord.NET contributors},\r\n  year={2014},\r\n  doi={10.5281/zenodo.1029480},\r\n  url={http://accord-framework.net}\r\n}\r\n```\r\n[[bibtex](https://zenodo.org/record/1029481/export/hx#.We0_zCyXeUk)]\r\n"
        },
        {
          "name": "Release notes.txt",
          "type": "blob",
          "size": 119.8935546875,
          "content": "Accord.NET Framework 3.8.0 release notes\r\n-----------------------------------------\r\n22.10.2017.\r\n\r\nVersion updates and fixes:\r\n  - GH-82: Add support for weighted PCA;\r\n  - GH-127: Fast KMeans (Request);\r\n  - GH-145: MovingNormalStatistics;\r\n  - GH-157: Issue in Survival analysis using VB.NET;\r\n  - GH-184: Add an Example for Graylevel coocurrences;\r\n  - GH-211: Any samples on how to use Boosted Decision Trees;\r\n  - GH-257: DFT functions in AForge.Math.FourierTransform and Accord.Math.Transforms;\r\n  - GH-262: C45Learning Discrete vs Real;\r\n  - GH-374: Dictionary of video capabilities doesn't take into account the video framerate;\r\n  - GH-376: Add an Example for VideoCaptureDevice Class;\r\n  - GH-377: Add an Example for LevenbergMarquardt Class;\r\n  - GH-415: Add an Example for AdaBoost(TModel);\r\n  - GH-421: Add an Example for KalmanFilter2D Class;\r\n  - GH-422: Add an Example for DecisionStump.Learn Method;\r\n  - GH-424: Add an Example for AdaBoost(TModel) Class;\r\n  - GH-430: Add an Example for GeneralConfusionMatrix Constructor (Int32, Int32[], Int32[]);\r\n  - GH-440: BagOfWords for audio signals;\r\n  - GH-441: Add Mel Frequency Cepstral Coefficients (MFCC);\r\n  - GH-466: Add an Example for Distance.Mahalanobis Method (Double[], Double[]);\r\n  - GH-467: Add an Example for Spline Class;\r\n  - GH-473: Add an Example for IParallel.ParallelOptions Property;\r\n  - GH-476: Add an Example for TwoWayAnova Constructor (Double[][][], TwoWayAnovaModel);\r\n  - GH-483: Add an Example for Haralick Class;\r\n  - GH-486: Add an Example for LibSvmModel.Save Method (String);\r\n  - GH-498: Add an Example for QLearning Class;\r\n  - GH-500: Add an Example for FourierTransform2.FFT Method (Complex[], FourierTransform.Direction);\r\n  - GH-505: Add an Example for ConfusionMatrix Constructor (Int32[], Int32[], Int32, Int32);\r\n  - GH-517: Add an Example for Sarsa Class;\r\n  - GH-519: Add an Example for NelderMead Class;\r\n  - GH-530: Add an Example for Matrix.Inverse Method (Double[][]);\r\n  - GH-532: Add an Example for GaussNewton Class;\r\n  - GH-547: Add an Example for HaralickDescriptor Class;\r\n  - GH-554: Add an Example for BinaryTree(TNode) Class;\r\n  - GH-557: Add an Example for Matrix.Sort(TKey, TValue) Method (TKey[], TValue[,], IComparer(TKey));\r\n  - GH-560: Add an Example for FourierTransform2.FFT Method (Double[], Double[], FourierTransform.Direction);\r\n  - GH-566: Add an Example for Distance.GetDistance(T) Method;\r\n  - GH-569: Add an Example for Distance.Euclidean Method (Double, Double, Double, Double);\r\n  - GH-575: Add an Example for LuDecomposition Class;\r\n  - GH-576: RandomForestLearning: Examples can't run with SampleRatio not equal 1.0;\r\n  - GH-582: Add an Example for Matrix.Multiply Method (Double[], Double[,]);\r\n  - GH-610: Add an Example for UnivariateContinuousDistribution.Fit Method (Double[]);\r\n  - GH-616: Add an Example for LevenbergMarquardt Class;\r\n  - GH-618: Add an Example for Apriori Class;\r\n  - GH-629: Add an Example for AdaBoost(TModel) Class;\r\n  - GH-636: Add an Example for Measures.Correlation Method (Double[][]);\r\n  - GH-640: Add an Example for GaussianKernel Class;\r\n  - GH-642: Add an Example for Matrix.PseudoInverse Method (Decimal[,]);\r\n  - GH-653: Add an Example for HistogramsOfOrientedGradients Class;\r\n  - GH-656: Add an Example for MatReader.Read Method (String);\r\n  - GH-660: Add an Example for LogLikelihoodLoss Class;\r\n  - GH-665: Add an Example for FourierTransform.FFT Method;\r\n  - GH-687: Add an Example for ShapiroWilkTest Class;\r\n  - GH-695: Add an Example for TFIDF.Transform Method (String[][]);\r\n  - GH-703: Add an Example for Imputation Class;\r\n  - GH-717: Possible issue with DynamicTimeWarp kernel class;\r\n  - GH-718: Add an Example for Cosine.Distance Method;\r\n  - GH-723: Procrustes analysis is giving weird/wrong results;\r\n  - GH-727: Add an Example for IRadialBasisKernel Interface;\r\n  - GH-730: Binary-Split with normalized FREAK;\r\n  - GH-739: Add an Example for MultipleLinearRegression.CoefficientOfDetermination Method;\r\n  - GH-756: Add an Example for ProportionalHazardsAnalysis.LogLikelihood Property;\r\n  - GH-764: Add an Example for AndersonDarlingTest Class;\r\n  - GH-769: Issue using visual bag of words with large images;\r\n  - GH-783: Add an Example for LocalBinaryPattern Class;\r\n  - GH-785: Add an Example for Tools.RandomGroups Method (Int32, Double);\r\n  - GH-787: Add an Example for HiddenMarkovModel(TDistribution, TObservation).Predict Method (TObservation[]);\r\n  - GH-789: Add support for OS X;\r\n  - GH-792: Add an Example for FisherExactTest Class;\r\n  - GH-793: Add an Example for HoughLineTransformation Class;\r\n  - GH-798: System.AccessViolationException in FastBoxBlur;\r\n  - GH-800: Missing dependency for Accord.Neuro in NuGet;\r\n  - GH-802: Index outside of the bounds of the array in Naive Bayes;\r\n  - GH-803: NaN probabilities from large features with MultinomialLogisticRegression;\r\n  - GH-805: Unsafe keyword being exposed in the public API;\r\n  - GH-807: Add an Example for CrossValidating NaiveBayes;\r\n  - GH-809: The Codification filter should honor the value of DefaultMissingValueReplacement unless overriden;\r\n  - GH-811: Naive Bayes should provide better argument checking for negative symbols;\r\n  - GH-812: ZhangSuenSkeletonization filter not exist to use;\r\n  - GH-814: Add an Example for MulticlassSupportVectorMachine(TKernel, TInput) Class;\r\n  - GH-818: Add an Example for LinearConstraint Class;\r\n  - GH-819: Quadratic Objective Function to support basic vector operations;\r\n  - GH-820: Augmented Lagrangian to support linear constraints;\r\n  - GH-824: Improve number of class inference in ZeroOneLoss;\r\n  - GH-825: Replace multi-dimentional with jagged arrays in IntegralImage.cs;\r\n  - GH-828: Accord.Neuro under .Net Standard 2.0;\r\n  - GH-830: Read PGM image pending;\r\n  - GH-831: Index outside of the bounds of the array in Naive Bayes;\r\n  - GH-843: Where is Accord.NET AdaBoost Decide method;\r\n  - GH-845: Add an Example for Decision Structure;\r\n  - GH-848: Wilcoxon Signed Rank Test for PAIRED samples: TwoSampleWilcoxonSignedRankTest;\r\n  - GH-849: TwoSampleWilcoxonSignedRankTest crashing when sample vectors are exactly the same values;\r\n  - GH-852: Add an Example for DecisionSet Class;\r\n  - GH-853: Access to last Hessian in BoundedBroydenFletcherGoldfarbShanno;\r\n  - GH-856: Add an overload to IsSymmetric that accepts a tolerance;\r\n  - GH-857: Mann-Whitney-U Test producing strange results;\r\n  - GH-862: Accord.Math -> Vector -> T[] Sample<T>(T[] values, int size) incorrect;\r\n  - GH-865: Measures.Quartiles: value for Q1 (lower quartile) wrong in QuantileMethod.R;\r\n  - GH-873: Add an Example for DecisionRule Class;\r\n  - GH-876: Allow the maximum frame rate possible in DirectShow for VideoCaptureDevice;\r\n  - GH-877: Add an Example for HaarCascadeWriter Class;\r\n  - GH-878: Accord.Math.Transforms.FourierTransform2.DFT2 Is bugged;\r\n  - GH-882: Adding lazy evaluation to matrix decompositions;\r\n  - GH-885: Add an Example for Signal.GetEnergy Method;\r\n  - GH-890: Add an Example for MultinomialLogisticRegressionAnalysis Class;\r\n  - GH-897: Wrong status text in ImageView from DebugVisualizer;\r\n  - GH-898: The Range method is producing some unexpected results;\r\n  - GH-899: Add an Example for IntegralImage2 Class;\r\n  - GH-900: Add an Example for ExhaustiveTemplateMatching Class;\r\n  - GH-901: Add an Example for HSL Class;\r\n  - GH-911: Character case of folder name;\r\n  - GH-913: KNearestNeighbors can not be serialized;\r\n  - GH-917: Two C++ projects require \"Platform toolset v141\" which is only available on VS2017;\r\n  - GH-919: Build failed for Samples.sln on VS 2015;\r\n  - GH-921: Fix for the normal random number generator when a seed is specified;\r\n  - GH-924, GH-925: Fixing the seeded exponential generator;\r\n  - GH-927: Broadcasting dimension seems counter-intuitive;\r\n  - GH-929: Add an Example for SpeededUpRobustFeaturesDescriptor Class;\r\n  - GH-930: Add an Example for FastCornersDetector Class;\r\n  - GH-931: Add an Example for MatchingTracker Class;\r\n  - GH-937: Add an Example for LogisticRegression Class;\r\n  - GH-948: Accord.Video.FFMPEG.VideoFileReader should provide frame-based random access;\r\n  - GH-949: Add the Free Spoken Digits Dataset to Accord.DataSets;\r\n  - GH-950: Add a dataset for example test videos;\r\n  - GH-955: KalmanFilter2D throws System.NullReferenceException;\r\n  - GH-956: Integrate AForge.NET fixes (up to September 6);\r\n\r\n* General\r\n  - The libsonly script is now in RAR4 format instead of RAR5 so they \r\n    will not be listed as corrupted files by Linux/MacOSX decompressors;\r\n\r\n* Core\r\n  - Splitting ITransform into ITransform and ICovariantTransform (to support generic covariance);\r\n\r\n* Video.FFMPEG\r\n  - Standardizing the C++ projects to depend on VS2015 runtime instead of VS2017 to keep compatibility with VS2015;\r\n  - Adding a static constructor in the FFMPEG project to check whether the system has those dependencies installed;\r\n\r\n* Audio\r\n  - Adding the initial version for a MelFrequencyCepstrumCoefficients audio feature extractor;\r\n  - Adding a IAudioFeatureExtractor interface (akin to the IImageFeatureExtractor for Accord.Imaging);\r\n  - Adding a Mono filter to convert multi-channel audio signals into single channel (mono) signals;\r\n  - Adding a Signal.FromFile() method to load audio signals from file similarly to Bitmap.FromFile();\r\n  - Adding an AudioDecoder class akin to ImageDecoder to find audio format decoders based on file extension;\r\n\r\n* Audition\r\n  - Adding BagOfAudioWords class to compute bag-of-word representations from audio signals;\r\n\r\n* Imaging\r\n  - Adding support for decoding PNM files in format P2 and P3 (besides the already supported P5 and P6);\r\n  - Updating Haralick's to use the same normalization method as HOG and LBP;\r\n  - Updating the color classes (RGB, HSL, YCbCr) to be structs;\r\n  - Adding conversion operators between different color classes;\r\n  - Updating ImageDecoder to find decoders using reflection instead of manual registration;\r\n  - Updating the feature extraction framelet to implement the ITransform interfaces and deprecating IFeatureDetector;\r\n  - Updating all feature descriptors to be classes rather than structs so the generics covariance can work;\r\n  - Integrating AForge.NET's texture generation classes: Adding a base class for texture\r\n    generation methods, updating them to use the framework-wide random number generator,\r\n\tand deprecating their Reset method;\r\n\r\n* DataSets:\r\n  - Adding the Yin-Yang dataset as an example of a non-linear 2D binary classification problem;\r\n  - Adding the Servo dataset as an example of a mixed discrete/continuous dataset for regression;\r\n\r\n* Math\r\n  - Adding a methods for the numerical calculation of the Hessian in the FiniteDifferences class;\r\n  - Updating Vector.Interval and Vector.Range to behave similar to NumPy's linspance and arange functions;\r\n  - Adding new overloads in element-wise operations that accept a VectorType enumeration instead \r\n    of a integer for specifying to which dimension the element-wise operation should be performed;\r\n  - Updating the Digamma and Trigamma functions to handle negative values;\r\n\r\n* MachineLearning\r\n  - Updating the AdaBoost classes to implement the more recent classification framelet;\r\n  - Adding a Error property in ConfusionMatrix and GeneralConfusionMatrix (1.0 - Accuracy);\r\n  - Adding named constructors to ConfusionMatrix to create matrices \r\n    directly from classifiers, their inputs and expected outputs;\r\n  - Adding a new IsColor8bpp extension method to detect whether an 8-bpp image is a color image (non-grayscale);\r\n  - Adding a new ConvertColor8bppToGrayscale8bpp extension methods to convert these into grayscale 8-bpp images;\r\n  - Fixing Codification filter transformation for DataTables when only some columns should be converted;\r\n  - NumberOfOutputs and NumberOfSymbols should have different implementations depending on the variable type;\r\n  - Enforcing alphabetical/default sorted order for symbols in Codification filter (this is a breaking change);\r\n  - Codification filter should now transform columns in the same order as specified by the user;\r\n\r\n* Statistics\r\n  - Adding exponentially weighted moving average (ewma) methods in Statistics.Measures partial classes;\r\n\r\n* Sample applications\r\n  - Adding a new sample application demonstrating how to use the framework in Unity 3D.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.7.0 release notes\r\n-----------------------------------------\r\n20.08.2017.\r\n\r\nVersion updates and fixes:\r\n  - GH-53: K-Medoids algorithm;\r\n  - GH-335: Nelder-mead solver not converged;\r\n  - GH-444: Reenable F# Unit Tests;\r\n  - GH-587: UnmanagedImage does not supported in ExtractBiggestBlob filter;\r\n  - GH-594: FFMPEG net35 not working;\r\n  - GH-621: How to calculate the cache size in respect of the available RAM;\r\n  - GH-662: 64-bit FFMPEG binaries not in output after installing with NuGet;\r\n  - GH-669: Confusion Matrix;\r\n  - GH-673: Stream closes after serialization with GZip compression;\r\n  - GH-676: DoubleArrayChromosome CreateNew ignores Balancer properties;\r\n  - GH-684: BalancedKMeans gets stuck;\r\n  - GH-688: Cobyla constraint definitions only work with constant values;\r\n  - GH-690: Add an Example for Cross-Validation with DecisionTrees;\r\n  - GH-692: Add an Example for StochasticGradientDescent Class;\r\n  - GH-693: One-class SVM decision rule;\r\n  - GH-694: Add support for Weighted Least Squares;\r\n  - GH-696: IndexOutOfRangeException exception in Matrix.First method;\r\n  - GH-697: Add an Example for HiddenMarkovModel(TDistribution, TObservation);\r\n  - GH-699: MJPEGStream throws NotImplementedException in .NET Core 2.0;\r\n  - GH-700: MJPEGStream throws InvalidOperationException in .NET Core 2.0;\r\n  - GH-706: DecisionTree.ToCode() returns code that does not compile;\r\n  - GH-707: DecisionTree.ToCode() returns code that compiles;\r\n  - GH-711: Nonlinear Regression in VB.NET;\r\n  - GH-712: Update MJPEGStream.cs ;\r\n  - GH-715: GeneralizedParetoDistribution shape param;\r\n  - GH-717: Possible issue with DynamicTimeWarping kernel class;\r\n  - GH-723: Procrustes analysis is giving weird/wrong results;\r\n  - GH-729: Error in ExhaustiveBlockMatching;\r\n  - GH-731: Dilatation;\r\n  - GH-736: Measures.Quartiles() for double Vectors of size 2 is wrong;\r\n  - GH-737: Add examples for C45Learning Class with missing data and thresholds;\r\n  - GH-745: Cannot change degree of a default Polynomial kernel;\r\n  - GH-746: Add an Example for CrossValidation Class;\r\n  - GH-747: How to understand the Probabilities;\r\n  - GH-749: 64 bit release for .NET 4.0;\r\n  - GH-752: Speed up matrix-vector operations;\r\n  - GH-758: NullReferenceException on NaiveBayes Learn;\r\n  - GH-765: NaiveBayes 'System.IndexOutOfRangeException' occurred in Accord.Statistics.dll when calling from sample application;\r\n  - GH-767: DebugVisualizers;\r\n  - GH-777: Bug in LinearConstraintCollection documentation;\r\n  - GH-778: Setter for bounds in BoundedBroydenFletcherGoldfarbShanno.\r\n \r\n* General\r\n  - Adding support for targetting NET Standard 1.4;\r\n  - Adding Newtonsoft.Json (Json.NET) in externals.\r\n\r\n* DataSets\r\n  - Adding Wisconsin's Breast Cancer (original, prognostic and diagnostic) datasets;\r\n  - Adding Oxford's Parkinsons dataset;\r\n  - Updating download links for the RCV1v2 dataset.\r\n \r\n* Imaging\r\n  - Fixing multiple typos regarding the spelling of \"Dilation\" (this is a breaking change).\r\n  \r\n* IO\r\n - Adding a ReadLine method to CsvReader to read individual lines from the CSV file.\r\n\r\n* MachineLearning\r\n  - Adding K-Medoids (PAM) and Voronoi Iteration clustering algorithms;\r\n  - Fixing epsilon in Sequential Minimal Optimization for Regression;\r\n  - Adding a MiniBatch static class that can be used to create mini-batch definitions from training data;\r\n  - Update LevenbergMarquardtLearning.cs to allow for different activation functions;\r\n  - Update BackPropagationLearning.cs to allow for different activation functions;\r\n  - Adding support for missing values in C4.5;\r\n  - Updating GeneralConfusionMatrix to represent columns as ground-truth instead of predictions;\r\n  - Improving memory usage for Second Order (LibSVM) Sequential Minimal Optimization;\r\n  - Adding more overloads to the method that helps determine how many lines can \r\n    be included in the SVM kernel cache given a total amount of memory;\r\n  - Fixing ToMulticlass() methods included in multi-label and binary classifiers;\r\n  - Fixing the Probabilities and LogLikelihoods methods for multi-label and multi-class SVMs;\r\n  - Adding an option for OneVsOneLearning/Multiclass SVMs stop at the first exception \r\n    found during training instead of waiting until the all machines have been trained;\r\n  - Adding Precision, Recall, RowErrors and ColumnErrors to GeneralConfusionMatrix.\r\n  \r\n* Math\r\n  - Adding support for .Learn() methods in NonlinearLeastSquares;\r\n  - Updates GH-762: DotAndDot performance for small problem sizes;\r\n  - Removing the deprecated extension methods for Accord.Math.Matrix.Multiply\r\n    (such that calls should now be redirected to Elementwise.Multiply);\r\n  - Fix BinarySearch so that it works with decreasing functions;\r\n  - Search interval in BinarySearch was meant to be [a;b) (i.e. with inclusive a and exclusive b);\r\n  - Fixing the behavior of Matrix.Get() method when negative indices are passed;\r\n  - Fixing Matrix's ToTable method to use the most high level type possible when creating columns.\r\n\r\n* Statistics\r\n  - Adding multiple methods for computing quartiles/quantiles;\r\n  - Adding a more advanced version of the discretization filter;\r\n  - Adding an example for fraud detection using HMMs with MaximumLikelihoodLearning class.\r\n  \r\n* Neuro\r\n  - Adding support for networks with multiple activation functions in Levenberg-Marquardt.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.6.0 release notes\r\n-----------------------------------------\r\n09.07.2017.\r\n\r\nVersion updates and fixes:\r\n  - GH-168: Text naive bayes classification gives wrong results;\r\n  - GH-207: ResizeBilinear filter can support more pixel formats;\r\n  - GH-259: K-means clustering exception;\r\n  - GH-318: Adding support for .NET Standard 2.0;\r\n  - GH-389: Wilcoxon Signed Rank Test / Mann-Whitney-Wilcoxon Test - differences to R;\r\n  - GH-407: Upgrade to NUnit 3;\r\n  - GH-470: Multiclass SVM and DTW System.AggregateException;\r\n  - GH-499: Add an example for K-means with mixed categorical and continuous data;\r\n  - GH-540: Add an example for BaumWelchLearning(TDistribution, TObservation, TOptions) Class;\r\n  - GH-549: Multithreaded BagOfVisualWords: \"memory corrupt\" problem;\r\n  - GH-571: Accord.Controls is referencing wrong version of ZedGraph on NuGet;\r\n  - GH-602: Robust multivariate regression causes IndexOutOfRangeException;\r\n  - GH-605: Renaming AudioCodec.M4A to AudioCodec.MP4ALS;\r\n  - GH-604: ColorSlider component resource path's fix;\r\n  - GH-606: LowerBoundNewtonRaphson: how to check if converged;\r\n  - GH-607: from perezale/aleperez-development;\r\n  - GH-611: Framerate issues when transcoding video;\r\n  - GH-614: Index out of bounds error in SingularValueDecomposition.Solve;\r\n  - GH-619: AugmentedLagrangian hangs on linear problem;\r\n  - GH-621: How to calculate the cache size in respect of the available ram;\r\n  - GH-624: Add an Example for Chart Class;\r\n  - GH-627: Exposing more distribution fields as public properties;\r\n  - GH-628: Inject other Random.Generators (like Mersenne Twister);\r\n  - GH-630: GeneralizedBetaDistribution.ProbabilityDensityFunction does not have an area of 1;\r\n  - GH-631: Adding test case for  GoldfarbIdnaniStatus is Success even when Solution violates constraints;\r\n  - GH-632: ExponentialDistribution.DistributionFunction return values outside [0,1];\r\n  - GH-647: Adding weighted versions of the Euclidean and Square Euclidean distances;\r\n  - GH-649: Add an example for NonNegativeLeastSquares Class;\r\n  - GH-654: Adding the Distance Transform and Watershed algorithms;\r\n  - GH-663: Adding examples for the CsvWriter Class.\r\n\r\n* General\r\n  - Adding support for targetting .NET 4.6.2 and NET Standard 2.0;\r\n  - Improving documentation and expanding number of examples.\r\n\r\n* Core\r\n  - Moving IParallel and ISupportsCancellation interfaces to Accord.Core.\r\n  \r\n* IO\r\n  - Adding a parser for the UNIPEN file format used by the pendigits dataset;\r\n  - Whitespace as a candidate delimiter in CSV parser;\r\n  - Adding more overloads to SparseReader's Read method.\r\n\r\n* DataSets\r\n  - Renaming the previous Iris dataset to SparseIris since it was a LibSVM dataset;\r\n  - Adding the original Iris, Wine, Pendigits, Chunking and Test Images datasets.\r\n\r\n* MachineLearning\r\n  - Updating Learn() methods now throw exceptions when weights are \r\n    passed to learning algorithms which does not yet support them;\r\n  - Updating CrossValidation, Bootstrap, Split Set Validation and \r\n    Grid-Search to use the new Learn() API;\r\n  - Adding support for creating decision trees using collection \r\n    initializers for the attribute/decision variables;\r\n  - Mitigating the impact of a numerical precision issue when normalizing \r\n    distances to probabilities in the K-Means++ initialization;\r\n  - Fixing issue with K-Means in which the input observations would be \r\n    changed by the randomization algorithm when using uniform seeding;\r\n  - Correcting the design of the framelet for cluster algorithms so clusterings that are \r\n    not based on distance proximity to centroids are not forced to implement those methods;\r\n  - Changing the default caching mechanism for Support Vector Machines \r\n    to keep rows of the kernel matrix instead of individual elements;\r\n  - Adding methods to calculate the cache size given a number of bytes;\r\n  - Adding cache support for Fan Chen Lin's QP (SMO's SecondOrder strategy);\r\n  - Updating IClassifier interface to offer a NumberOfClasses property besides NumberOfOutputs;\r\n  - Updating the base classes for IClassifier such that the Score, Probability \r\n    and LogLikelihood functions only have to be defined once;\r\n  - Correcting the Score, Probability and LogLikelihood functions of GeneralizedLinearRegression;\r\n  - Updating ITransform and IClassifier's NumberOfInputs, NumberOfOutputs and \r\n    NumberOfClasses properties to be read-and-write rather than read-only.\r\n\r\n* Imaging\r\n  - Adding the Zhang-Suen Thinning Algorithm by Hashem Zawary (thanks!);\r\n  - Adding a FromUrl method to the Image class to download images directly from the web;\r\n  - Adding support for jagged matrices in the ImageToMatrix and MatrixToImage converters;\r\n  - Adding convenience methods PixelSize and Offset to UnmanagedImage;\r\n  - Adding a constructor method in UnmanagedImage to construct from byte arrays.\r\n  \r\n* Vision\r\n  - Fixing reproducibility of Bag-Of-Visual-Words when using parallel processing.\r\n\r\n* Statistics\r\n  - Marking Sparse kernel classes as deprecated;\r\n  - Adding Dirac's Delta as a (non-metric) Distance function;\r\n  - Updating the SquareEuclidean distance to support also Sparse<T> arrays;\r\n  - Adding a dummy random number generator that generates always the same constant;\r\n  - Fixing the implementation of the new API for Cox's Proportional Hazards;\r\n  - Updating HMM, CRF, and HCRF learning algorithms to support creating HMMs, HMM-based classifiers, \r\n    CRFs and HCRFs directly from the data samples instead of requiring them to be defined by hand;\r\n  - Adding a new MatrixContinuousDistribution base class for Wishart and Inverse-Wishart distributions;\r\n  - Adding a RBF version of the Dynamic Time Warping kernel\r\n    that can be used with any distance metric/cost function;\r\n  - Updating Hidden Markov Model learning classes to use RelativeConvergence;\r\n  - Improving discrete hidden Markov models performance;\r\n  - Adding a base class for HCRF learning algorithms based on \r\n    the available IGradientOptimizationMethod optimizers;\r\n  - Adding extension methods to simplify how distributions can be estimated \r\n    from the data (without requiring the distribution to be created first);\r\n  - Fixing gradient computation in CRF learning;\r\n  - Updating base classes for probability distributions to perform input \r\n    validation before calling distribution-specific implementations;\r\n  - Adding automatic testing of all univariate probability distributions;\r\n  - Mass fixing issues detected by automatic testing in multiple distributions.\r\n  \r\n* Math\r\n  - Fixing an issue with Bounded L-BFGS in which the optimization algorithm \r\n    would not respect the maximum number of iterations determined by the user;\r\n  - Adding HasConverged, MaxIterations and CurrentIteration properties \r\n    as required members in IConvergenceLearning interface;\r\n  - Adding parsing methods for Vector class;\r\n  - Fixing Sparse SquareEuclidean distance;\r\n  - Removing duplicated extension method To<T>() from Matrix.Conversions.cs\r\n  - Marking Conjugate Gradient and BFGS as supporting execution cancellation;\r\n\r\n* Controls\r\n  - Updating ImageBox to support the fluent syntax and .Hold() methods.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.5.0 release notes\r\n-----------------------------------------\r\n21.05.2017.\r\n\r\nVersion updates and fixes:\r\n  - GH-55: Adding support for computing TF-IDF vector representations;\r\n  - GH-213: Linear SVM with SGD Training Support;\r\n  - GH-297: Looking for \"multinomial Logistic Regression (cross-entropy loss)\" in accord like sklearn;\r\n  - GH-330: Liblinear (Linear SVMs) does not train, exits with \"index out of range\";\r\n  - GH-352: Take so much time create a SequentialMinimalOptimizationRegression in Accord.NET;\r\n  - GH-355: SVM non-sequential 0 to n class outputs causes index out of bounds;\r\n  - GH-365: Updating LBP to work with BoW;\r\n  - GH-373: FrameRate as double in Accord.Video.FFMPEG;\r\n  - GH-379: Updating NuGet specification files so assemblies are placed under net452 and net461;\r\n  - GH-386: KNearestNeighbors Constructor (Int32, Int32, Double[][], Int32[], IMetric(Double[]));\r\n  - GH-389: Wilcoxon Signed Rank Test | Mann-Whitney-Wilcoxon Test - differences to R;\r\n  - GH-390: MachineLearning.KMeans: Balanced clustering;\r\n  - GH-396: Using Parallel.For with LinearCoordinateDescent;\r\n  - GH-397: Add an Example for OneclassSupportVectorLearning(TModel, TKernel, TInput) Class;\r\n  - GH-398: PrincipalComponentAnalysis serialization error in v3.4.0;\r\n  - GH-391: Add an Example for DecisionTree Class;\r\n  - GH-392: Add an Example for GrayLevelCooccurrenceMatrix Constructor;\r\n  - GH-393: Add an Example for GrayLevelCooccurrenceMatrix Constructor (Int32, CooccurrenceDegree, Boolean, Boolean);\r\n  - GH-396: Using Parallel.For with LinearCoordinateDescent;\r\n  - GH-399: Add an Example for HaarObjectDetector Class;\r\n  - GH-401: KNearestNeighbors parallel;\r\n  - GH-402: Add an Example for BagOfWords Class;\r\n  - GH-405: Add an Example for RandomForest Class;\r\n  - GH-409: Add an Example for Serializer.Load(T) Method (String);\r\n  - GH-419: Add an Example for Combinatorics.Subsets(T) Method (ISet(T), Int32, Boolean);\r\n  - GH-431: AugmentedLagrangian fails on standard convex quadratic problem;\r\n  - GH-434: Possible issue with PolynomialLeastSquares() Class;\r\n  - GH-438: Error on LocalBinaryPattern Clone();\r\n  - GH-446: Add an Example for PolynomialRegression Class;\r\n  - GH-448: Could not load type 'SharpDX.Bool' from assembly 'SharpDX, Version=3.1.1.0;\r\n  - GH-451: BalancedKMeans does not find a solution for this case;\r\n  - GH-538: CSVReader Ignores specified delimiter;\r\n  - GH-556: Display license on repository top;\r\n  \r\n* General\r\n  - Fixing target framework versions: projects that were targetting 4.5.2 and \r\n    4.6.1 have been updated to target 4.5 and 4.6, respectively;\r\n  - Adding a Accord.DataSets namespace to contain classes that can download and\r\n    pre-process well-known machine learning datasets directly from the web;\r\n  - Adding a Accord.Text namespace to contain classes related to text processing;\r\n  - Creating a separate Accord.Video.FFMPEG NuGet package to target x64 (Win64);\r\n  - Upgrading C++ projects to VS2017 and removing dependencies on VS2013 and VS2015;\r\n\r\n* Core\r\n  - Updating the framework random generator to allow fixing the seed of independent threads:\r\n    new random generators created from existing threads will be initialized with the global\r\n    random seed, except if their thread-specific random seed has been manually overwritten;\r\n  - Adding support for using GZip compression when serializing through Accord.Serializer;\r\n  - Adding initial support for rational numbers;\r\n\r\n* IO\r\n  - Adding support for reading and writing NumPy's .npy and .npz formats;\r\n  - Adding a SparseWriter to save Sparse<T> in LibSVM sparse file format;\r\n  \r\n* Video\r\n  - Updating FFMPEG library to version 3.2.2;\r\n  - Updating Accord.Video.FFMPEG to support both x86 and x64 platforms;\r\n  - Updating FrameRate properties of VideoFileWriter and VideoFileReader \r\n    to be represented in Rationals instead of Int32;\r\n  \r\n* DataSets\r\n  - Adding downloaders for the RCV1v2, MNIST and News20 datasets;\r\n  \r\n* Text  \r\n  - Adding C# versions of Snowball's stemmers;\r\n  \r\n* Math\r\n  - Fixing ToString() method of Sparse<T> vectors such that they are compatible with LibSVM;\r\n  - Adding Angular distance metric (proper distance metric based on the Cosine similarity);\r\n  - Updating distance metrics to be structs rather than classes, allowing for optimizations\r\n    when used in conjunction with generic classes and methods;\r\n  - Adding generic versions of the IOptimizationMethod interfaces, and adding a specific \r\n    IFunctionOptimizationMethod interface to specify function optimization methods that do \r\n    not necessarily require a gradient function;\r\n  \r\n* Statistics\r\n  - Fixing serialization of PCA, KPCA, LDA, KDA and other classes containing a CancellationToken;\r\n  - Adding support for learning multinomial logistic regression with any optimization algorithm;\r\n  - Correcting/improving Wilcoxon distribution: Adding a separate method for the ComplementaryDistributionFunction\r\n    for more precision; adding the approximation distribution using an actual NormalDistribution, and new parameters \r\n    at its constructor to control whether exact or approximate distribution should be used; adding parameters to \r\n    determine whether to apply different types of continuity corrections; adding an option to determine whether to \r\n    correct for ties when computing the rankings;\r\n  - Correcting/improving Mann-Whitney U's distribution: Adding most corrections as mentioned above, plus checks to ensure\r\n    we are computing the distribution for the case when the first sample is smaller than the second; adding a correction \r\n    to the variance of the approximation distribution for the case of ties; adding parallelization support when computing \r\n    the table of exact values;\r\n  - Correcting/improving Wilcoxon and Mann-Whitney tests: adding a correction for ties in the variance of the Normal \r\n    approximation; adding checks to make sure we don't generate p-values higher than 1; adding more comparison tests \r\n    against results generated by R;\r\n  - Wavelet kernel is now a struct and has support for Int32 inputs;\r\n\r\n* MachineLearning\r\n  - Improving the performance for LinearDualCoordinateDescent and OneVsRest SVMs;\r\n  - Adding a ToMulticlass method to Multilabel classifiers based on scores;\r\n  - Updating K-Nearest Neighbor to use the new classification/learning interfaces;\r\n  - Adding parallelism to the non-data-structure-based version of K-Nearest Neighbors;\r\n  \r\n* Accord.Imaging\r\n  - Adding support for LocalBinaryPattern and Haralick in Bag-of-Visual-Words.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.4.0 release notes\r\n-----------------------------------------\r\n14.01.2017.\r\n\r\nVersion updates and fixes:\r\n  - GH-19: Implement Grubbs' test;\r\n  - GH-129: Possible error in Special.BSpline function;\r\n  - GH-153: Visual Studio 2015;\r\n  - GH-172: Add Random Forest Implementation;\r\n  - GH-177: AugmentedLagrangian with NonlinearConstraints - Gradient NullReferenceException issue;\r\n  - GH-183: Severity Check in NumberOfVertices Set Property on DiscreteCurveEvolution Class;\r\n  - GH-229: Can't build cloned repository;\r\n  - GH-250: Prediction interval - Accord.Statistics.Models.Regression.LogisticRegression;\r\n  - GH-264: Integer division instead of double in GetSpectralResolution;\r\n  - GH-264: Incorrect use of loop variables in sample converter;\r\n  - GH-264: Checking same arguments multiple times in blob counter;\r\n  - GH-264: Checking length of same vector in a loop;\r\n  - GH-264: Integer division instead of double in Math.Tools;\r\n  - GH-264: Dependency classes of Denavit Harternberg IK solver should be marked as Serializable;\r\n  - GH-264: Error when checking whether component mixtures implement IFormattable;\r\n  - GH-264: Multivariate Empirical Distribution outdated/unecessary argument checks;\r\n  - GH-264: Correcting the support for weighted samples in Inverse Gaussian Distribution;\r\n  - GH-275: Examples for the GoldfarbIdnani solver are not up to date and do not compile;\r\n  - GH-291: Accord.Imaging nuget dependencies;\r\n  - GH-295: Accord.Video.FFMPEG.VideoFileWriter ignores bitrate;\r\n  - GH-296: Update documentation for hidden Markov models;\r\n  - GH-299: Update to .NET 4.6 and VS2015;\r\n  - GH-302: Regression (SVMs) : NullReferenceException on clicking 'Create Machine';\r\n  - GH-309: Compile error with release 3.2.2;\r\n  - GH-310: Examples for L1-regularized (Logistic) regression;\r\n  - GH-313: Inaccuracy in Accord.Math Pseudoinverse;\r\n  - GH-314: V3.3.0 Cannot set input and output names in LogisticRegressionAnalysis;\r\n  - GH-320: Shared Covariance Matrix for Gaussian Mixture Models;\r\n  - GH-325: ClusterCollection doesn't implement IEnumerable properly (runtime error);\r\n  - GH-327: NegativeBinomialDistribution Cum Dist func not returning expected value;\r\n  - GH-301: Bug in Accord.Statistics.Analysis.DistributionAnalysis\r\n  - GH-304: Bug in GammaDistribution.ProbabilityDensityFunction\r\n  - GH-330: Liblinear (Linear SVMs) does not train, exits with \"index out of range\";\r\n  - GH-331: RandomForest is not serializable;\r\n  - GH-332: Partial Least Squares issue with NIPALS method and the new API;\r\n  - GH-337: ExpectationMaximization max Iterations can't be changed;\r\n  - GH-340: PoissonDistribution InverseDistributionFunction not returning expected value;\r\n  - GH-365: Can HOG to work with BoW'2 with SVM or OSVM.\r\n\r\n* General\r\n  - Fixing make install on Linux/Mono.\r\n   \r\n* Imaging\r\n  - Updating BagOfVisualWords to implement the updated IBagOfWords interface;\r\n  - Adding methods to facilitate the creation of BoVW with arbitrary extractors;\r\n  - Adding examples in the documentation on how to learn SVMs on the extracted Bo(V)Ws;\r\n  - Updating IFeatureDetector interfaces to use covariance and contravariance to avoid element-by-element type conversions.\r\n\r\n* Math\r\n  - Adding support for computing the full QR decomposition (besides only the economy one);\r\n  - Adding methods to compute the null-space of a given matrix.\r\n\r\n* MachineLearning\r\n  - Updating the IBagOfWords interface and implementing classes to implement the IUnsupervisedLearning and ITransform interfaces;\r\n  - Updating ZeroOneLoss to handle class labels in the -1/+1 format;\r\n  - Updating the kernel cache to pre-compute the entire kernel matrix by default.\r\n\r\n* Statistics\r\n  - Adding random generators for the von-Mises Fisher distribution;\r\n  - Updating documentation examples for Hidden Markov Models, Hidden Markov Classifiers and their respective algorithms;\r\n  - Adding a new GammaOptions class to pass fitting options to Gamma distributions;\r\n  - Updating DistributionAnalysis to use the new machine learning interfaces/API;\r\n  - Updating code and documentation for Dynamic Time warping kernel;\r\n  - Updating Gamma distribution so probabilities are computed in the log-domain by default;\r\n  - Marking Moving and Running statistics as ISerializable;\r\n  - Adding methods to compute the marginals in multivariate discrete distributions;\r\n  - Adding RunningRangeStatistics and MovingRangeStatistics.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.3.0 release notes\r\n-----------------------------------------\r\n17.09.2016.\r\n\r\nVersion updates and fixes:\r\n  - GC-62:  Add support for computing prediction intervals in linear and generalized linear models\r\n  - GH-113: System.AggregateException thrown in C45Learning.Run;\r\n  - GH-115: Add documentation about how to work with sparse data;\r\n  - GH-130: Multi class support vector machine doesn't work with SparseGaussian kernel;\r\n  - GH-139: Examples using explicit kernel matrices;\r\n  - GH-178: DecisionTreeWriter uses local CultureInfo when writing values;\r\n  - GH-249: Potential bug in RandomForest or C45Learning;\r\n  - GH-201: Adding Generalized Pareto Distribution;\r\n  - GH-245: Incorrect method usage in Distance.GetDistance;\r\n  - GH-255: Adding examples on how to use Laplace rule in Naive Bayes learning;\r\n  - GH-253: BlobCounter needs a IDisposable implementation;\r\n  - GH-252: Bug in Kurtosis Contrast Function;\r\n  - GH-270: Adding example to show to use continuous variables in C4.5;\r\n  - GH-271: OneclassSupportVectorLearning does not use shrinking heuristics property;\r\n  - GH-281: Possible bug in GammaDistribution generation function when k < 1;\r\n  - GH-282: Issue in LogisticRegression.Transform() returns true for all inputs;\r\n  - GH-280: Merge pull request #280 from fch-aa/Fix-SMO-CacheSize;\r\n  - GH-278: Merge pull request #278 from kulov/development;\r\n  - GH-272: Merge pull request #272 from kdbanman/GH-271;\r\n  - GH-269: Merge pull request #269 from mikhail-barg/minor-fix;\r\n  - GH-273: VideoFileWriter not working;\r\n  - GH-274: Merge pull request #274 from hzawary:development;\r\n  - GH-285: Deserialize of Codification error in 3.2.0;\r\n  - GH-286: Ransac - possible bug in calculation of 'N' if pInlier = 0;\r\n  - GH-288: NaiveBayes issue when probability is 0;\r\n  - GH-289: Incorrect use of GetLength(0) for jagged arrays in Matrix class.\r\n\r\n* General\r\n  - This will be last release that includes an executable installer. If you\r\n    are still using the installer, please move to NuGet or use the framework\r\n    compressed archive files.\r\n\r\n* Imaging\r\n  - Creating a new Accord.Imaging.Noncommercial assembly to hold non-commercial imaging methods;\r\n  - Adding Fast Guided Filter to Accord.Imaging.Noncommercial.\r\n\r\n* MachineLearning\r\n  - Fixing Binary Split's learn method to accept null weights;\r\n  - Updating Binary Split example to reflect the new API;\r\n  - Adding constructors to allow tree inducing algorithms to create a tree from scratch;\r\n  \r\n* Statistics  \r\n  - Fixing multiple issues with statistical analyses classes when they are used using the\r\n    new classification/regression APIs;\r\n  - Statistical measures (Measures.cs) have been moved to the Accord.Math assembly,\r\n    but have been kept under the Accord.Statistics namespace;\r\n  - Correcting L2-regularization in Logistic Regression.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 3.2.0 release notes\r\n-----------------------------------------\r\n20.08.2016.\r\n\r\n Accord.NET 3.2 \"auto-generated\" release\r\n\r\nVersion updates and fixes:\r\n  - GH-76/GC-24: Add easier creating and handling of factors for categorical variables\r\n  - GH-123: Bug in the Euclidean on Accord.Math.Distance\r\n  - GH-124: Fixing the Envelop filter as missing loop variables were not being incremented\r\n  - GH-135: When the from and to ranges are equal, scaled values should remain unchanged\r\n  - GH-159: Gamma Distribution Fit stalls for some arrays\r\n  - GH-162: ntdll on OS X\r\n  - GH-167: Posterior method has wrong signature in continuous hidden Markov Models\r\n  - GH-171: Quadratic Programming (Goldfarb-Idnani) NoPossibleSolution on possible problems\r\n  - GH-188: ProbabilisticOutputCalibration Class Example Incorrect Object Name\r\n  - GH-206: Chessboard distance is incorrect\r\n  - GH-214: Bug found in ReplaceChannel filter\r\n  - GH-215: Bug Found in DecisionTrees.Learning.ID3Learning.\r\n  - GH-225: Independent Component Analysis not converging\r\n  - GH-232: Bug in Levenshtein distance.\r\n  - GH-234: The subset of observations corresponding to a decision node may contains duplicates\r\n  - GH-235: The getMaxChild method returns the max grandchild\r\n  - GH-236: Possibly-biased comparison between errors\r\n  - GH-237: The subset of observations corresponding to a decision node may contains duplicates\r\n  - GH-240: Re() and Im() function of ComplexMatrix generates a OutOfRangeException\r\n\r\n* General\r\n  - In this release, the Matrix library from Accord.Math has been almost completely\r\n    redesigned to make heavy use of automatic code generation. This results in more\r\n    code reuse, more consistent interfaces and the availability of many methods which\r\n    before were available only for Double to almost all native numerical types in the\r\n    .NET Framework;\r\n  - The framework now contains core classes and interfaces for defining classification\r\n    and regression models and their respective learning algorithms, offering a more \r\n    standard interface when using different parts of the framework;\r\n  - The framework now offers a Accord.Serializer class that should be responsible for\r\n    serializing and deserializing any object from the framework, and will take care of\r\n    versioning in case of breaking changes between releases;\r\n  - All AForge.NET namespaces have been finally moved to inside Accord.NET, although\r\n    some functionality is still duplicate.\r\n  \r\n* Core\r\n  - Adding Interlocked operations (Increment, Add) for double values;\r\n  - To<> universal converter can now convert jagged arrays;\r\n  - Adding a common framework to unify all classification models, and all learning algorithms;\r\n  - Integrating the AForge.NET Range classes in the framework, adding ByteRange;\r\n  - Adding a common serialization mechanism to the framework to manage backwards compatibility;\r\n  - All classes from Accord.MachineLearning.Structures have been moved into Accord.Collections;\r\n  - Updating RedBlackTrees to implement the new base classes for tree structures;\r\n  - Updating KD-Trees to implement the base classes for tree structures (introduces breaking changes).\r\n\r\n* Sample applications\r\n  - Fixing wrong arguments in sample applications.\r\n\r\n* Math\r\n  - Revamped matrix library making heavy use of code generation with T4 templates;\r\n  - Matrix dot products, and elementwise operations are now auto-generated;\r\n  - Renaming InnerProduct to Dot, and marking previous products as obsolete;\r\n  - Vector Range, Scale and Interval are now auto-generated;\r\n  - Standardizing the way Vectors, Matrices and Jagged matrices are created and handled\r\n    in the framework;\r\n  - Adding OneHot and KHot methods overloads for creating vectors using boolean masks;\r\n  - Adding ArgMin and ArgMax methods to Vector, Jagged and Multidimensional matrices;\r\n  - Re-implementing Matrix.Sum and Matrix.Product using T4 templates;\r\n  - Breaking change: Sum() now computes the Sum over the entire matrix (before it needed\r\n    to be done with Sum().Sum(). In order to compute the sum vector over rows, use matrix.Sum(0)\r\n    and for columns, matrix.Sum(1);\r\n  - Chessboard distance has been removed as it is the same as Chebyshev;\r\n  - Moving AForge.NET's old Random classes into the framework, and marking them as deprecated;\r\n  - Adding a log1pexp method for computing (1.0 + Math.Exp(-sum)) without loss of precision;\r\n  - Adding new random generators based on Marsaglia's Ziggurat method;\r\n  - Introducing a new, generic IRandomNumberGenerator interface so existing statistical\r\n    distributions can be used as Random Number Generators;\r\n  - Updating Matrix.IsEqual method to use the auto-generated overloads if possible;\r\n  - Replacing the previous framework-wide generator with a better API;\r\n  - Improving the framework-wide random number generator so generators created in short\r\n    timespans do not get initialized with the same seed: Now, updating a seed will not\r\n    affect existent random generators in other threads. It will affect only newly created\r\n    generators and the one in the current thread;\r\n  - Fixing the DiagonalMatrix property in SingularValueDecomposition and \r\n    JaggedSingularValueDecomposition so the returned diagonal matrices has the necessary \r\n    dimensions to reconstruct the original matrix using the decomposition main formulation;\r\n  - Fixing a bug in Combinatorics.Sequences method where the current vector would be returned\r\n    instead of a copy when inPlace = false;\r\n  - Distance functions can now be auto-generated from classes from the framework;\r\n  - Adding Dice, Jaccard, Kulczynski, Matching, Rogers-Tanimoto, Russel-Rao, Sokal Michener,\r\n    Sokal Sneath, Yule, Bhattacharyya and LogLikelihood distances as proper classes;\r\n  - Updating IsEqual to support absoluete and relative tolarance thresholds;\r\n  - Adding a Histogram method for creating a histogram from an array of integer values;\r\n  - Updating the Interval, Range and Scale method overloads to be automatically generated;\r\n  - Adding loss functions to be used in the unified framework;\r\n  - Moving the Elementwise class to a separate Accord.Math.Core project in order to avoid\r\n    excessive build times due the number of auto-generated methods in this class;\r\n  - Adding overloads to Eigenvalue decomposition to automatically sorter eigenvectors and \r\n    eigenvalues in descending order of absolute eigenvalue;\r\n  - Adding a dedicated Sort static class with ordering-related methods such as Partition,\r\n    Introsort and NthElement.\r\n  - Expanding decompositions with two additional methods: GetInformationMatrix and Reverse\r\n    GetInformationMatrix can be used to retrieve the standard errors for each coefficient \r\n\twhen solving a linear system; Reverse reconstructs the original matrix using the definition\r\n\tof the decomposition;\r\n  - Deprecating Submatrix in favor of Get (methods with non-inclusive last indices);\r\n  - Adding ArgSort function for retrieving the indices that can be used to sort a vector;\r\n  - Adding LogSumExp to the set of special functions.\r\n\r\n* MachineLearning\r\n  - Adding a base foundation to encompass all classification and regression models in the\r\n    framework as well as their learning algorithms: common interfaces and base classes for\r\n    classifiers, distance-based classifiers and generative classifiers; common interfaces\r\n    and base classes for supervised and unsupervised learning algorithms;\r\n  - Updating Support Vector Machines, Decision Trees, Naive Bayes, Regressions and Analyses\r\n    to use the new classes;\r\n  - Unifying Linear and Kernel SupportVectorMachines, updating their classes to accept the\r\n    Kernel function as a generic parameter: when the kernel function is a ValueType, this\r\n    forces generic classes to be compiled specifically for each kernel type, allowing for\r\n    the inlining of the kernel function calls;\r\n  - Updating the way compact SVMs are represented: instead of having only a weight vector \r\n    and no support vectors, compact machines have a single support vector and a single weight\r\n    of value one, eliminating what before was a special case;\r\n  - Adding classes for OneVsOne and OneVsRest classifiers, separating the functionality that\r\n    was previously inside MulticlassSupportVectorMachine and MultilabelSupportVectorMachine;\r\n  - Fixing multiple issues with ErrorBasedPruning (YaronK);\r\n  - Updating GridSearch to implement ToString methods for easier debugging;\r\n  - Updating Linear machines and learning algorithms to accept sparse kernels;\r\n  - Deprecating the previous sparse vector implementations and moving the current implementation\r\n    to the existing Linear class, since they represent the same operation;\r\n  - Adding a true implementation for LibSVM-style Sparse vectors;\r\n  - Updating SparseReader to read sparse vectors using the new Sparse representation;\r\n  - Refactoring the clustering namespace to increase code reuse between the different algorithms;\r\n  - Updating K-Means, GMM and BagOfWords to expose a ParallelOptions object that can\r\n    be used to configure and stop the parallelization of those algorithms;\r\n  - Updating K-Means to support sample weights;\r\n  - Correcting multiple random initializations of Gaussian mixture model;\r\n  - Adding a PriorityQueue class based on the MIT-licensed code by Daniel \"BlueRaja\" Pflughoeft.\r\n  - Adding Vantage-Point and Space-Partitioning trees and Barnes Hutt t-SNE based on the original\r\n    code from Laurens van der Maaten BH t-SNE implementation;\r\n  - Adding a basic implementation for the Apriori algorithm.\r\n\r\n* Imaging\r\n  - Updating static methods in AForge.NET's Image class to become extension methods;\r\n  - Implementing ICloneable in all corner and feature detectors.\r\n\r\n* Neuro\r\n  - Updating ResilientBackpropagation with the improvements from iRProp+.\r\n\r\n* Statistics\r\n  - Adding Non negative Least Squares regression;\r\n  - Adding Procrustes Analysis;\r\n  - Deprecating IAnalysis in favor of the new framelet for classification, \r\n    regression and transformation methods;\r\n  - Merging AForge.NET and Accord.NET Histogram classes;\r\n  - Updating IFittingOptions to implement ICloneable;\r\n  - Adding constructors to Independent distributions accepting a lambda function\r\n    to initialize inner components instead of relying on cloning;\r\n  - Adding a Classes class to provide methods that operate with categorical/label data,\r\n    such as converting boolean, double or integer values to [0;1] or [-1; +1] indicators;\r\n  - Adding Decide methods to unambiguously transform a distance/score value into a boolean;\r\n  - Updating statistic distributions to implement the IRandomNumberGenerator interface, meaning \r\n    any distribution can now be used as random number generator;\r\n  - Adding the Metropolis-Hasting sampler to generate samples from multivariate distributions \r\n    that do not have specialized samplers;\r\n  - Adding named constructors for building regressions directly from coefficient vectors;\r\n  - Updating kernels to rely in Accord.Math.IDistance instead of the previous IDistance from \r\n    the Statistics namespace;\r\n  - Adding Pearson's Universal Kernel, Thin Spline Plate and Hellinger kernels\r\n    contributed by Diego Catalano;\r\n  - Moving standard statistical measures (i.e. mean, standard deviation, variance, ...) to a\r\n    separate Measures class;\r\n  - Updating Mean methods to operate in the same way as Sum: if a dimension is not specified,\r\n    the Mean will be computed across all dimensions of the matrix;\r\n  - Updating Hidden Markov Models to use the new Tagger interfaces and base classes.\r\n\r\n* Genetics\r\n  - Updating the Genetics project to use the new sample generators based on statistical \r\n    distributions;\r\n    \r\n\r\n    \r\n\r\nAccord.NET Framework 3.0.0 release notes\r\n-----------------------------------------\r\n16.08.2015.\r\n\r\nVersion updates and fixes:\r\n  - GC-70: Merge with AForge.NET.\r\n  - GC-90: Convert unit test projects to NUnit\r\n  - GH-114: GeneralizedBetaDistribution's calls Random with wrong parameter order\r\n\r\n* General\r\n  - This release marks a milestone in the Accord.NET Framework. Starting from this\r\n    release, the AForge.NET Framework has been incorporated directly in the project,\r\n    meaning that we are now free to fix, maintain, transform and improve AForge.NET\r\n    directly.\r\n\r\n  - This release provides most of the AForge.NET namespaces unchanged. This means\r\n    that this specific version of Accord.NET Framework can be used as drop-in\r\n    replacement in any project currently using the AForge.NET Framework and that\r\n    is willing to upgrade to Accord.NET sometime in the future.\r\n\r\n  - This release is mostly a transition release to help projects using the AForge.NET\r\n    framework make the transition to Accord.NET more easily. Further releases will be\r\n    aimed at improving the interaction between the two codebases and streamlining the\r\n    provided functionality.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.15.0 release notes\r\n-----------------------------------------\r\n01.05.2015.\r\n\r\nVersion updates and fixes:\r\n  - GC-56:  Reuse decision attributes in the C4.5 algorithm for decision trees;\r\n  - GC-109: The GoldfarbIdnani optimizer does not optimize well some problems;\r\n  - GH-24:  Disentangling unit test projects and adding a LGPL-only project;\r\n  - GH-57:  Decision trees created using C4.5 depends on the sorting order;\r\n  - GH-58:  SURF detector might generate Divide By Zero exceptions;\r\n  - GH-60:  Regularization breaks LogisticRegressionAnalysis in 2.14;\r\n  - GH-61:  SVM code that worked with version 2.11 now fails to converge;\r\n  - GH-64:  Exception in KPCA when using jagged matrices;\r\n  - GH-69:  Fix K-Means deserialization between framework versions.\r\n  \r\n* General\r\n  - Upgrading solution to VS2013 and adding support for .NET 4.5;\r\n  - Packaging scripts can now create NuGet symbol packages;\r\n  - The framework can now be built using Mono.\r\n\r\n* Accord.Statistics\r\n  - Correcting Circular statistics' AngularDeviation method;\r\n  - Correcting kernel profile functions and their gradient;\r\n  - Improving the precision of the Binomial distribution;\r\n  - Improving sample generation for Poisson and Rayleigh distributions;\r\n  - Updating all univariate distributions to support sample generation;\r\n  - Making sure all probability distributions implement IFormattable;\r\n  - Adding Generalized Beta distribution with PERT estimation;\r\n  - Adding the von-Mises Fisher distribution for circular data;\r\n  - Adding sample generation in Beta and Generalized Beta distributions;\r\n  - Adding estimation using the Method-of-moments and Maximum Likelihood;\r\n  - Adding support for weighted samples in LogisticRegressionAnalysis;\r\n  - Adding a named constructor to create an Analysis from summary data;\r\n  - Adding all missing Shapiro-Wilk distribution's methods;\r\n  - Adding a common interface for radial basis function kernels;\r\n  - Adding a new generic Gaussian kernel for creating composite kernels;\r\n  - Adding a Windowing filter in the Statistics filters namespace;\r\n  - Adding support for weighted samples in LogisticRegressionAnalysis;\r\n  - Adding a named constructor to create an Analysis from summary data;\r\n  - Adding Multinomial Logistic Regression Analysis.\r\n\r\n* Accord.Math\r\n  - Updating Augmented Lagragian to detect more accurately \r\n    when the inner optimization algorithm has diverged;\r\n  - Adding a new Fast Fourier Transform (FFT) implementation for general \r\n    matrices and vectors whose dimensions are not necessarily powers of 2;\r\n  - Adding Hellinge and Levenshtein distances for generic arrays;\r\n  - Adding jagged-matrix version of the QR and Eigenvalue decompositions.\r\n\r\n* Accord.MachineLearning\r\n  - Updating tree inducing algorithms (ID3 and C4.5) se they can reuse\r\n    decision variables multiple times when creating a decision tree;\r\n  - Correcting Levenberg-Marquardt's chain-rule Jacobian calculation \r\n    when there are many output neurons in the learned neural network;\r\n  - Updating the way SVM learning algorithms detect whether a machine is linear or not;\r\n  - Updating SVM learning algorithms to use an heuristic value for \r\n    C by default unless it has been manually specified by the user;\r\n  - Updating the linear kernels so they are created without a constant term by default;\r\n  - Improving multi-class SVM to generate more user-friendly stack traces when\r\n    an exception occurs during the learning of one of the binary sub-problems;\r\n  - Updating Kd-Trees to use interval heaps instead of general .NET structures;\r\n  - Adding Nu-SVMs based on LibSVM's quadratic programming solver.\r\n\r\n* Accord.Neuro\r\n  - Updating Levenberg-Marquardt to avoid setting lambda to zero. \r\n\r\n* Accord.Imaging\r\n  - Updating IntegralImage to work with In64 matrices to avoid overflows;\r\n  - Correcting Variance, Sauvola and Niblack threshold filters;\r\n  - Adding Fast Variance, Wolf-Joulion Threshold, RG Chromaticity and \r\n    Objective fidelity filters.\r\n\r\n* Accord.IO\r\n  - Integrating and repackaging Sebastien Lorion's Fast CSV Reader into the Accord.IO\r\n    namespace with an added support for auto-detecting the file's field delimiter.\r\n\r\n* Accord.Audio\r\n  - Adding IWindow apply overloads to operate directly on double[] vectors;\r\n  - Adding Sine and Custom signal generators and correcting existing ones.\r\n  \r\n* Sample applications\r\n  - Adding feature selection sample application using L1-regularized logistic SVMs;\r\n  - Correcting the display of all sample applications in high-DPI displays.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.14.0 release notes\r\n-----------------------------------------\r\n15.12.2014.\r\n\r\nVersion updates and fixes:\r\n  - GH-29: HiddenConditionalRandomField is not correctly serialized;\r\n  - GH-31: Adding hidden Markov Model methods for computing the probability of \r\n           a state assuming a particular value inside an observation sequence;\r\n  - GH-36: Extensions class collides with the Accord.NET Extensions Framework;\r\n  - GH-35: Distribution issue with .NET 3.5 assemblies;\r\n  - GH-37: Adding Taylor series functions and dissimilarity functions;\r\n  - GH-42: Adding new contributed distance functions;\r\n  - GH-46: Optimization functions and constraints to now support different cultures;\r\n  - GH-48: Fix calculation of log likelihoods for BaumWelch learning algorithm;\r\n  - GC-33: GoldfarbIdnaniQuadraticSolver class failed to give correct answer.\r\n\r\n* Accord.Core\r\n  - Adding Red-Black trees and a Red-Black dictionary based on those trees\r\n    with support for efficiently searching for maximum and minimum elements.\r\n\r\n* Accord.IO\r\n  - Updating the IDX reader to automatically convert between different data types.\r\n\r\n* Accord.Math\r\n  - Adding the Nelder-Mead and Subplex non-linear optimization algorithms;\r\n  - Adding matrix padding methods (adding extra rows and columns with zeros);\r\n  - Updating quadratic optimization constraints to support tolerance parameters.\r\n\r\n* Accord.Statistics\r\n  - Adding regularization in IterativeReweightedLeastSquares;\r\n  - Adding DistributionAnalysis for estimating distributions from observed data;\r\n  - Adding weighted measure methods in Statistics.Tools that are \r\n    based on element repetitions rather than element importance;\r\n  - Adding Anderson-Daring, Shapiro-Wilk, Inverse Chi-Square, Lévy, Folded \r\n    Normal, Shifted Log-Logistic, Kumaraswamy, Trapezoidal, U-quadratic and\r\n    BetaPrime distributions;\r\n  - Adding Anderson-Daring and Shapiro-Wilk hypothesis tests;\r\n  - Correcting the MarkovMultivariateFunction constructor for \r\n    explicit Independent<NormalDistribution> hidden Markov models;\r\n  - Correcting discrete Viterbi learning convergence check and unifying \r\n    the Viterbi implementations for discrete and continuous variables;\r\n  - Correcting the calculation of log likelihoods in Baum Welch learning;\r\n  - Correcting serialization issue with DynamicTimeWarping kernel;\r\n  - Updating all distribution functions constructors to offer Range attributes\r\n    that can be used to automatically determine valid values for its parameters;\r\n  - Updating Logistic Regression and Cox's Proportional Hazards \r\n    analyses to avoid computing LR-ratio tests unless necessary;\r\n  - Updating Multivariate Empirical Distributions to support CDF;\r\n  - Updating Empirical Distributions to support weighted samples;\r\n  - Updating CRF output feature functions to activate only once per sequence;\r\n  - Updating all probability distributions to offer a Generate method;\r\n  - Updating ChiSquare Test to support testing against continuous distributions;\r\n  - Updating univariate discrete distributions with Quantile Density functions.\r\n\r\n* Accord.MachineLearning\r\n  - Adding LIBLINEAR's linear support vector regression (SVR) algorithms;\r\n  - Adding LinearCoordinateDescent for the primal formulation and renaming the \r\n    previous coordinate descent algorithm to LinearDualCoordinateDescent;\r\n  - Adding named constructors in Naive Bayes to build Gaussian models more easily;\r\n  - Updating Naive Bayes classifiers to estimate component variables in parallel;\r\n  - Updating ID3 algorithm so attributes can join multiple times a decision;\r\n  - Updating Bag-of-Visual-Words to avoid computing costly cluster measures;\r\n  - Updating K-Means to support setting algorithm options through its class itself;\r\n  - Updating K-NearestNeighbor feature matching to use KD-Trees when its possible;\r\n  - Updating error-based pruning to avoid computing modes when there are no elements;\r\n  - Updating K-Modes to select modes per column, instead of entire elements. Now it \r\n    is also possible to use the Kmeans++ initialization scheme in this algorithm.\r\n \r\n* Accord.Neuro\r\n  - Adding Rectified Linear activation functions.\r\n\r\n* Accord.Imaging\r\n  - Fixing Niblack and Sauvola thresholding algorithms for 8bpp images.\r\n\r\n* Accord.Audio\r\n  - Adding a Volume adjustment filter for audio signals.\r\n\r\n* Accord.Controls\r\n  - Adding a DataBarBox visualization box;\r\n  - Updating visualizations to offer more flexibility in customizing ZedGraph charts;\r\n\r\n* Sample applications\r\n  - Adding support for adjusting volume in the Recorder sample application.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.13.1 release notes\r\n-----------------------------------------\r\n30.08.2014.\r\n\r\nVersion updates and fixes:\r\n  - GC-61: GoldfarbIdnani should implement the IOptimizationMethod interface;\r\n  - GC-63: Updating optimization methods to avoid throwing exceptions;\r\n  - GC-80: Audio.Formats.WaveDecoder.AverageBitsPerSecond should be bytes, not bits;\r\n  - GC-85: Tools.Random is not thread safe;\r\n  - GC-87: Add a base distance method for kernel functions;\r\n  - GC-88: General Discrete Distribution estimation doesn't handle negative values;\r\n  - GC-90: EmpiricalDistribution's SmoothingRule should use +0.2 in the factor calculation;\r\n  - GC-91: Update L-BFGS optimization algorithms from the latest Fortran source algorithms;\r\n  - GC-96: ConvexHullDefects doesn't accounts for defects between the last and first points;\r\n  - GC-98: Fixing ProbabilityDensityFunction in MultivariateNormalDistribution;\r\n  - GC-99: Combinatorics.Permutations(array) method does not include the original array;\r\n  - GC-101: Issue with Haar transform at orders grater than one;\r\n  - GH-04: Replacing SlimDX with SharpDX in Audio libraries;\r\n  - GH-05: ComplexSignalConstructor unit test fails;\r\n  - GH-07: Fixing typos in Haralick algorithm;\r\n  - GH-08: Updating IntegralImage2 to support Format32bppRgb images;\r\n  - GH-09: Binomial probability mass function result differs from Excel result;\r\n  - GH-10: Fixing issue in Singular value decomposition clone method;\r\n  - GH-11: Fixing issue in Statistics.Filters.Codification.Translate method;\r\n  - GH-12: Add a HistogramBox viewer in the same spirit as ScatterplotBox and DataGridBox;\r\n  - GH-13: NaiveBayes constructor incorrectly checks its arguments;\r\n  - GH-25: SauvolaThreshold and NiblackThreshold filter are always making whole black image;\r\n  - GH-27: Fixing Bernoulli distribution sampling.\r\n\r\n* General\r\n  - This release brings some big changes. The SlimDX libraries have been replaced by SharpDX, \r\n    which now enables the framework to be run into more platforms. Two new assemblies have also \r\n    been created to further accommodate future framework extensions, such as a dedicate matrix\r\n    format library, and an additional library for math algorithms that are not available under \r\n    the LGPL. As such, the former Accord.Statistics.Formats namespace has been moved into the\r\n    new Accord.IO, and a new Accord.Math.NonCommercial assembly has been created to contain\r\n    other algorithms that are free but are not shared under a free software license and thus \r\n    cannot be used in commercial applications.\r\n\r\n* Accord.IO\r\n  - Adding a LibSVM's file model to load and save LibSVM's classifiers;\r\n  - Adding a IDX file reader to read the MNIST (and possibly others) datasets;\r\n  - Adding a MAT file reader to read Matlab/Octave data, including sparse,\r\n    structures and objects.\r\n    \r\n* Accord.Statistics\r\n  - Fixing Codification filter when columns have a max-length constraint;\r\n  - Fixing MultivariateNormalDistribution to handle edge cases;\r\n  - Fixing distance computations for most kernel functions;\r\n  - Updating Hidden Markov Model classes with more Debug assertions;\r\n  - Updating descriptive analysis to support quantile computation;\r\n  - Adding Deviance measure in the DescriptiveAnalysis;\r\n  - Adding a IReverseDistance interface to separate distinct kernel distances;\r\n  - Adding support for directly processing matrices in the Normalization filter;\r\n  - Adding support for explicit feature space transformation in some kernels;\r\n  - Adding Beta and Pareto distribution fitting;\r\n  - Adding explicit Gaussian kernel projection using a Taylor approximation;\r\n  - Adding Birnbaum-Saunders, Generalized Normal, Gumbel, Power Lognormal, \r\n    Power Normal, Triangular, Tukey Lambda, Logistic, Hyperbolic Secant,\r\n    Degenerate and General Continuous distributions.\r\n\r\n* Accord.Imaging\r\n  - Adding new user-contributed imaging filters: Difference of \r\n    Gaussians, HighBoost, Niblack Threshold, Sauvola Threshold.\r\n\r\n* Accord.Math\r\n  - Introducing the Accord.Math.Integration namespace for numerical integration;\r\n  - Updating FiniteDifferences to support any order and number of interpolation points;\r\n  - Fixing NonnegativeFactorization when smaller rank approximations are requested;\r\n  - Updating the previous L-BFGS implementation from the latest Lbfgsb.3.0 version;\r\n  - Adding the L-BFGS optimizer with support for Orthant-Wise optimizer from LibBFGS;\r\n  - Adding the Cobyla method for derivative-free optimization (user contribution);\r\n  - Adding Carl Edward Rasmussen's FminCG conjugate gradient minimizer (user contribution);\r\n  - Adding the Discrete Curve Evolution algorithm (user contribution);\r\n  - Adding a Singular value decomposition implementation for Jagged matrices;\r\n  - Adding a simple 2D Kalman filter implementation (user contribution);\r\n  - Adding an 'online' version of the TruthTable method which can generate samples on the fly\r\n    through IEnumerable. Now it can also work with any number of symbols per element position.\r\n\r\n* Accord.Audio\r\n  - Fixing position calculation when sampleIndex is set in WindowBase.Apply method.\r\n\r\n* Accord.MachineLearning\r\n  - Fixing SequentialMinimalOptimization when working with weighted samples;\r\n  - Renaming ProbabilisticOutputLearning to ProbabilisticOutputCalibration;\r\n  - Updating cross-validation to support class-balanced partitions;\r\n  - Adding support for different sample weights in SMO and and IRLS;\r\n  - Adding a configurable model threshold for AdaBoost learning;\r\n  - Adding a generic base model for AdaBoost's weak classifiers;\r\n  - Adding specialized linear SVM algorithms based on liblinear's offerings, \r\n    such as L2-regularized L1 and L2-loss SVM for the dual formulation and\r\n    the L2-regularized, L2-loss SVM for the primal formulation, as well as\r\n    probabilistic SVM and Logistic Regression algorithms.\r\n\r\n* Accord.Controls\r\n  - Adding HistogramBox for displaying histograms in the same manner as MessageBox;\r\n  - Updating Scatterplot to allow for constructing a plot from a single parameter.\r\n\r\n\r\n\r\nAccord.NET Framework 2.12.0 release notes\r\n-----------------------------------------\r\n04.01.2014.    \r\n\r\nVersion updates and fixes:\r\n  - GC-83: Error in Accord.Statistics.Tools;\r\n  - GC-81: Redundant condition check in specialized Inverse method;\r\n  - GC-82: Serializable annotation is needed on class contrast functions;\r\n  - GC-66: Adding fitting options for empirical distributions.\r\n\r\n* General\r\n  - The general focus for this release was again to improve \r\n    the documentation and provide standard bug-fixing;\r\n  - The project now also provides Debug binaries which be used\r\n    to provide more detailed information when debugging applications.\r\n\r\n* Accord.Controls\r\n  - Adding a WavechartBox control to display wavecharts with ease, in \r\n    the same way as MessageBox can display text messages on screen.\r\n\r\n* Accord.Audio\r\n  - Correcting WaveDecoder.AverageBytesPerSecond (Google Code #80);\r\n  - Correcting the creation of base audio windows;\r\n  - Adding the ExtractChannel filter for extracting single channels\r\n    from multiple-channel audio signals.\r\n\r\n* Accord.Statistics\r\n  - Adding generic base classes for probability distributions;\r\n  - Adding support for computing the cumulative multivariate normal \r\n    distribution function for specifically one and two dimensions;\r\n  - Correcting behavior of the Binomial test under .NET 4.5;\r\n  - Updating DescriptiveAnalysis to provide sums and confidence intervals;\r\n  - Updating ChiSquareTest to accept ConfusionMatrices as input;\r\n  - Unifying Univariate and Multivariate mixture distribution fitting\r\n    through Expectation-Maximization into a single and generic class;\r\n  - Updating the WeightedMean method to accept unnormalized weights;\r\n  - Updating the Codification filter to work without DataTables;\r\n  - Adding fitting options for empirical distributions (Google Code #66);\r\n  - Adding options to robustly fit Multivariate Normal Distributions using \r\n    the Singular Value Decomposition, avoiding non-positive definite issues. \r\n\r\n* Accord.MachineLearning\r\n  - GaussianMixtureModel now accepts a maximum number of iterations;\r\n  - Updating the KDTree class to provide a non-generic version when there \r\n    is no interest in the kind of values stored as information in the nodes;\r\n  - Adding specialized methods for when only the closest neighbor is needed\r\n    in a KDTree. Also adding options to provide only an approximate answer;\r\n  - Updating the K-Means algorithm to fully support parallel processing;\r\n  - Adding support for generating decision rules from Decision Trees.\r\n\r\n* Accord.Math\r\n  - Correcting InsertColumn and InsertRow implementations;\r\n  - Improving Submatrix creation to avoid extra memory allocations when desired;\r\n  - Reshape method for jagged arrays can now work with non-rectangular arrays;\r\n  - Correcting relative convergence issues with negative watched interest values;\r\n  - Adding Modulo and Modular distance for double-precision floating point inputs.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.5. May work with newer versions.\r\n\r\n\r\n\r\nAccord.NET Framework 2.11.0 release notes\r\n-----------------------------------------\r\n27.10.2013.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - The general focus for this release was to improve the documentation, \r\n    re-organize the sample applications and provide standard bug-fixing.\r\n\r\n* Accord.Controls\r\n  - Fixing ArrayDataView to show jagged arrays in DataGridViews;\r\n  - Adding a ComponentView control to display analysis information.\r\n\r\n* Accord.Imaging\r\n  - Adding a Save overload to BagOfVisualWords (Google Code #74);\r\n  - Marking FAST and FREAK as Serializable (Google Code #75).\r\n\r\n* Accord.Statistics\r\n  - Improving documentation for the 'unbiased' parameter (Google Code #66);\r\n  - Removing the DEBUG flag from the Statistics assembly (Google Code #78);\r\n  - Adding NonlinearRegression models and least-squares learning algorithms;\r\n  - Adding a option to force the use of SVD when fitting linear regressions;\r\n  - Adding a option to disable normalization when creating Cox's models;\r\n  - Adding MultipleBaumWelchLearning to test random weight initializations;\r\n  - Updating HCRF learning algorithms to use relative convergence by default.\r\n\r\n* Accord.MachineLearning\r\n  - Correcting the score generation on k-NN classifier (Google Code #68);\r\n  - Fixing the Compact property of the SequentialMinimalOptimization class;\r\n  - Correcting the KD-Tree implementation to correctly identify all neighbor\r\n    points when querying for a finite number of neighbors (Google Code #71).\r\n\r\n* Accord.Math\r\n  - Adding the Gauss-Newton and Levenberg-Marquardt Least-Squares algorithms;\r\n  - Updating Absolute and Relative Convergence to implement a common interface;\r\n  - Adding a configurable minimum convergence checks in relative convergence.\r\n\r\n* Sample applications\r\n  - Reorganizing all sample applications, adding more relevant information\r\n    to their description and improving their documentation.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.5. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.10.0 release notes\r\n-----------------------------------------\r\n07.09.2013.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - This release aimed to provide improvements to the documentation. \r\n    Most of the Univariate Distributions now include proper examples\r\n    for all main functions and measures in their summary page.\r\n\r\n* Accord.Imaging\r\n  - Adding Haralick's set of textural features;\r\n  - Adding Local Binary Pattern (LBP) features;\r\n  - Adding Gabor, Variance and Kuwahara filters;\r\n  - Adding Gray-World, WhitePatch filters;\r\n  - Adding Kirsch and Robinson edge detectors;\r\n  - Adding Gray-Level Co-occurrence Matrices (GLCM);\r\n  - Adding Gray-Level Run-length Matrices (GLRLM);\r\n  - Adding Gray-Level Difference Method (GLDM);\r\n  - Adding byte and color conversions in the ArrayToImage converter;\r\n  - Updating IFeaturePoint's to include better conversion operators.\r\n\r\n* Accord.Statistics\r\n  - Adding random Covariance matrix generation methods;\r\n  - Adding Von-Mises cumulative distribution function;\r\n  - Adding Poisson inverse cumulative distribution function;\r\n  - Adding Support information for all distributions;\r\n  - Adding support for threshold models in Markov running filters;\r\n  - Adding default support computing the true Median and Quantile \r\n    functions (inverse cumulative distribution function) for all \r\n    univariate continuous distributions;\r\n  - Improving ToString methods for linear/polynomial regressions;\r\n  - Updating all regression methods to use SVD by default;\r\n  - Correcting Wishart and Inverse Wishart distributions.\r\n\r\n* Accord.MachineLearning\r\n  - Adding simple Minimum (Mean) Distance Classifier;\r\n  - Adding RANSAC methods for plane, circle and line fitting;\r\n  - Adding options to trade speed vs. accuracy in Mean-Shift; \r\n  - Updating Bag-of-Words to support any feature point type;\r\n  - Fixing Grid-Search issue when one of the models returns NaN;\r\n  - Fixing issue when k-Nearest Neighbors Matching is called \r\n    with less than k points on its second argument;\r\n  - Improving the performance of KD-Trees and Mean Shift;\r\n  - Updating Gaussian Mixture Model methods to report the \r\n    classification strength (score) as an out parameter.\r\n\r\n* Accord.Math\r\n  - Adding the first version of the Math.Kinematics\r\n    namespace with Denavit-Hartenberg joint models;\r\n  - Adding Binary Search root finding algorithm;\r\n  - Adding missing Gamma.Inverse special function;\r\n  - Adding Mixture Distribution's Distribution functions;\r\n  - Adding dedicated class for Gram-Schmidt Orthogonalization;\r\n  - Adding general purpose Resilient Backpropagation algorithm; \r\n  - Fixing precision-loss issue in the Augmented Lagrangian Solver;\r\n  - Updating FiniteDifferences to support configurable step sizes;\r\n  - Updating Matrix.Range methods to require a dimension parameter;\r\n  - Moving matrix formatters from Accord.Math.Formats to \r\n    Accord.Math in order to improve their discoverability.\r\n\r\n* Accord.Vision\r\n  - Moving the GroupMatching algorithms to Accord.Vision.\r\n\r\n* Sample applications\r\n  - Adding sample application for Denavit-Hartenberg joint models;\r\n  - Adding sample application for Eigenfaces, PCA for images;\r\n  - Adding sample application for mouse gesture classification \r\n    using Dynamic Time Warping Kernel Support Vector Machines. \r\n  \r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.5. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.9.0 release notes\r\n-----------------------------------------\r\n20.04.2013.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Updating installer to register framework libraries.\r\n\r\n* Accord.MachineLearning\r\n  - Adding Least-Squares Support Vector Machines (LS-SVMs);\r\n  - Adding support for Decision Tree pruning (experimental);\r\n  - Adding Hybrid Markov Models (experimental, use with care);\r\n  - Adding Load and Save methods to Bag-of-Words;\r\n  - Adding initial support for Boosting (AdaBoost);\r\n  - Correcting k-Nearest Neighbors, KD-Trees and \r\n    Mean-Shift to respect non-Euclidean distances;\r\n  - Fixing IndexOutOfRange Exception in C4.5 learning;\r\n  - Fixing bug in k-Nearest Neighbors classifier;\r\n  - Fixing C4.5 split when working with continuous attributes;\r\n  - Renaming DecisionAttributeKind to DecisionVariableKind\r\n    for better naming consistency with DecisionVariables.\r\n\r\n* Accord.Statistics\r\n  - Adding support for combining Confusion Matrices;\r\n  - Updating Levene's Test to support Trimmed Mean;\r\n  - Updating Binomial Test to use the small p-values;\r\n  - Fixing Two-Tailed computation in Binomial test.\r\n\r\n* Accord.Math\r\n  - Adding Discrete Cosine, Sine and Hartley Transforms.\r\n\r\n* Accord.Imaging\r\n  - Adding missing overloads for image moment calculators;\r\n  - Adding the Fast Retina Keypoint (FREAK) image descriptor;\r\n  - Correcting Histograms-of-Oriented-Gradients;\r\n  - Updating HaarObjectDetector to ignore Channel \r\n    information when working with Grayscale images.\r\n\r\n* Accord.DirectSound\r\n  - Adding support for recording multiple bit-rates.\r\n\r\n* Accord.Controls\r\n  - Adding support for Codebooks in DecisionTreeView.\r\n  \r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.8.2 release notes\r\n-----------------------------------------\r\n25.02.2013.    \r\n\r\nVersion updates and fixes:\r\n\r\n* Accord.MachineLearning\r\n  - Adding several K-d tree traversal methods;\r\n  - Adding support for generating decision tree assemblies;\r\n  - Adding maximum height option for ID3 and C4.5 learning;\r\n  - Adding a generic Bag-Of-Words to accept other feature detectors;\r\n  - Updating DecisionVariable to initialize itself from a Codebook;\r\n  - Fixing C4.5 learning when presented with constant variable inputs;\r\n  - Fixing and normalizing the name of cluster identification methods.\r\n  \r\n* Accord.Statistics\r\n  - Adding support for opening binary streams in ExcelReader;\r\n  - Adding support for generalized linear regression models;\r\n  - Adding support for integer observations in generic density HMMs;\r\n  - Fixing Levene's test to behave as a one-tailed test;\r\n  - Fixing Stepwise Logistic Regression's result property;\r\n  - Fixing HMM classifier rejection using Threshold models;\r\n  - Fixing ConfusionMatrix's ToGeneralMatrix method so it respects\r\n    the expected order of elements in the contingency table.\r\n\r\n* Accord.Math\r\n  - Adding Discrete Cosine, Sine and Hartley Transforms.\r\n\r\n* Accord.Imaging\r\n  - Adding Hu's set of invariant image moments;\r\n  - Adding k-nearest neighbors feature point matching;\r\n  - Adding an early, experimental version of the Histograms of\r\n    Oriented Gradients (HOG) descriptors due to popular demand;\r\n  - Correcting image converters for different pixel sizes.\r\n\r\n* Accord.DirectSound\r\n  - Adding support for capturing audio in different bit resolutions.\r\n  \r\n* Accord.Controls\r\n  - Fixing the initialization of ScatterplotView.\r\n  \r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.8.1 release notes\r\n-----------------------------------------\r\n21.12.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Working on more source code examples for the documentation.\r\n\r\n* Accord.Math\r\n  - Adding Levenshtein distance for strings.\r\n\r\n* Accord.Imaging\r\n  - Updating BagOfVisualWords to be fully serializable.\r\n\r\n* Accord.MachineLearning\r\n  - Adding K-dimensional trees (K-d trees);\r\n  - Adding Mean-Shift clustering algorithm;\r\n  - Adding support for weights in Gaussian Mixture Models;\r\n  - Correcting the name of the K-Nearest Neighbors algorithm;\r\n  - Improving K-Nearest Neighbors for double[] using a K-d tree;\r\n  - Changing K-Nearest Neighbors generic argument to represent the \r\n    instance type rather than the type of the array of instances.\r\n\r\n* Accord.Statistics\r\n  - Adding interfaces for density estimation kernels;\r\n  - Adding Gaussian, Epanechnikov, Uniform density kernels;\r\n  - Adding Bartlett's and Levene's tests for variances;\r\n  - Adding hypothesis tests for comparing ROC curves;\r\n  - Adding support for scatter plot generation directly from ROC curves;\r\n  - Adding running Markov models and running Markov classifier filters;\r\n  - Adding stochastic gradient descent learning for logistic regression models;\r\n  - Updating Two-Sample Kolmogorov to work with number of samples in double-precision;\r\n  - Correcting standard error calculation in Paired T-Tests.\r\n\r\n* Accord.Neuro\r\n  - Adding Boltzmann Machines, Contrastive Divergence Learning and Deep Neural Networks.\r\n\r\n* Accord.Vision\r\n  - Adding rectangle averaging support in the Haar object detector.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.8.0 release notes\r\n-----------------------------------------\r\n06.11.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Adding support for previous versions of the .NET framework (3.5).\r\n\r\n* Accord.Audio\r\n  - Fixing finalizers to avoid disposing null object references.\r\n\r\n* Accord.Math\r\n  - Adding Absolute and Relative convergence classes;\r\n  - Adding Algorithm Environments to the Math project;\r\n  - Fixing SVD precision when solving ill-conditioned problems.\r\n\r\n* Accord.Statistics\r\n  - Reorganizing the (Hidden) Conditional Random Fields namespace;\r\n  - Adding Forward-Backward Gradient calculator for linear-chain HCRFs;\r\n  - Adding Cox's Proportional Hazards and Partial Newton-Raphson estimation algorithm;\r\n  - Adding Gompertz and Empirical Hazard Distributions;\r\n  - Adding Weighted Confusion Matrix and Weighted Kappa;\r\n  - Adding support for Weighted Kappa in Kappa tests;\r\n  - Fixing class balancing in the Grouping filter;\r\n\r\n* Accord.MachineLearning\r\n  - Marking DecisionAttributeCollection as Serializable;\r\n  - Updating Multi-class and Multi-label SVMs to implement the IEnumerable interface;\r\n  - Updating Multi-class SVM decision to be thread-safe in multithreaded environments;\r\n  - Adding explicit class count parameter to KNearestNeighbors;\r\n  - Adding Bag-of-Words model for text categorization;\r\n  - Fixing SMO when there is only one class label in outputs;\r\n  - Fixing set size counting in Cross-Validation.\r\n\r\n* Accord.Controls\r\n  - Updating Confusion Matrix View to display Actual and Expected labels.\r\n\r\n* Accord.Imaging\r\n  - Fixing an issue with PointH transform method.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.7.1 release notes\r\n-----------------------------------------\r\n01.09.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* Accord.Statistics\r\n  - Adding data processing filters for data randomization,\r\n    branching, grouping, elimination and imputation;\r\n  - Adding Precision, Recall and F-Score in Confusion matrix; \r\n  - Adding GrandMean calculation in Statistics.Tools;\r\n  - Adding the Negative Binomial, Pareto, Laplace, Inverse\r\n    Gamma, Beta, Wishart, Inverse Wishart, Dirichlet distributions;\r\n  - Adding the Two Proportion Z-Test, Paired T-Test and Multinomial test\r\n  - Correcting Noncentral T distribution pdf calculation; \r\n  - Correcting Skewness and Kurtosis calculations; \r\n  - Correcting ANOVA when groups have different sizes;\r\n  - Adding support for newer Excel versions in ExcelReader;\r\n  - Adding support for different sample weights in HMM learning;\r\n  - Adding distinct elements calculation in DescriptiveAnalysis;\r\n  - Adding standalone Standard Error computation for ROC curves. \r\n\r\n* Accord.MachineLearning\r\n  - Redesigning clustering framework to accommodate the\r\n    Binary-Split algorithm, K-Means, K-Modes and GMMs;\r\n  - Adding support for cancellation in SVM learning;\r\n  - Adding support for different class weights in SMO;\r\n\r\n* Accord.Controls\r\n  - Adding Confusion Matrix viewer;\r\n  - Adding numeric collection editor.\r\n\r\n* Accord.Imaging\r\n  - Adding Mean and Standard Deviation for images.\r\n\r\n* Accord.Vision\r\n  - Marking TrackingObject as Serializable.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.7.0 release notes\r\n-----------------------------------------\r\n08.07.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* Accord.Statistics\r\n  - Standardizing statistical tests hypotheses;\r\n  - Adding power analysis for statistical tests;\r\n  - Adding Fisher's exact test for contingency tables;\r\n  - Adding Multiple-Matrix Kappa and Average Kappa tests;\r\n  - Adding Binomial tests, Sign tests, Wilcoxon and Mann-Whitney tests;\r\n  - Adding Noncentral T, Wilcoxon's W and Mann-Whitney's U distributions;\r\n  - Adding Multiple Linear Regression Analysis with ANOVA statistics;\r\n  - Adding inverse distribution calculation in the T-Distribution;\r\n  - Adding the unsupervised Viterbi learning and the supervised\r\n    Maximum Likelihood Estimation learning for hidden Markov models;\r\n  - Adding Generate methods for sampling from hidden Markov models;\r\n  - Marking several Statistics.Tools methods as extension methods;\r\n  - Introducing the ISampleableDistribution interface for probability\r\n    distributions and adding generate methods for most distributions;\r\n  - Correcting variance calculation for Cohen's Kappa, adding variants\r\n    for the null hypothesis and the calculation using the Delta method;\r\n  - Correcting F-Distribution ComplementaryDistributionFunction;\r\n  - Correcting Kernel Principal Component Analysis bug when auto-\r\n    selecting the maximum number of components;\r\n  - Resolving naming confusion in KMeans, renaming Classify to Nearest;\r\n  - Renaming ContinuousUniformDistribution to UniformContinuousDistribution;\r\n  - Renaming DiscreteUniformDistribution to UniformDiscreteDistribution;\r\n  - Renaming Random to RandomSample for clarity;\r\n  - Updating MultipleLinearRegression to use a single SVD;\r\n  - Updating Covariance method with two variables to generate\r\n    a covariance value rather than a 2x2 covariance matrix;\r\n  - Renaming IMultipleRegressionAnalysis interface to the\r\n    more adequate name IMultivariateRegressionAnalysis;\r\n  - Renaming ConfusionMatrix.Observations to .Samples to  \r\n    maintain consistency with the GeneralConfusionMatrix.\r\n\r\n* Accord.MachineLearning\r\n  - Adding Bootstrap for generalization performance estimation;\r\n  - Adding the K-Modes clustering algorithm for discrete data;\r\n  - Optimizing both memory usage and performance for Sequential\r\n    Minimal Optimization learning and the kernel function cache.\r\n\r\n* Accord.Math\r\n  - Adding Brent Search Root Finding Algorithm;\r\n  - Adding Combinatorics class for permutations and combinations;\r\n  - Fixing a bug in Goldfarb-Idnani Quadratic Solver;\r\n  - Adding Trigamma function to Gamma class;\r\n  - Adding array format providers.\r\n\r\n* Accord.Controls\r\n  - Adding ScatterplotBox class for displaying point data; DataGridBox for\r\n    displaying tabular data; and DataSeriesBox to display series data in the\r\n    same way as Windows.Forms's MessageBox can be used to display text data;\r\n  - Adding extension method for enabling DataGridViewColumns nested properties;\r\n  - Adding ImageBox overloads to work with images represented in matrix form.\r\n\r\n* Accord.Imaging\r\n  - Adding the Bag of Visual Words (BoW) feature extractor;\r\n  - Renaming SpeededUpRobustFeatures (SURF) classes avoiding acronyms.\r\n  - Updating FeaturesMarker to make it work with indexed images.\r\n\r\n* Sample applications\r\n  - Adding image classification sample application;\r\n  - Updating Regression sample application to include\r\n    more information for linear regression analysis.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.6.1 release notes\r\n-----------------------------------------\r\n05.05.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - The project's website has moved. This minor release updates all\r\n    references to reflect the new project URL and includes only some new\r\n    additions and fixes. The project is now being hosted at Google Code.\r\n\r\n* Accord.MachineLearning\r\n  - Adding Multi-label Support Vector Machines;\r\n  - Adding K-Nearest Neighbor (k-NN) classifiers;\r\n  - Adding linear elimination Support Vector Reduction;\r\n  - Correcting SVM serialization compatibility.\r\n\r\n* Accord.Statistics\r\n  - Adding named constructors in PCA to create analysis\r\n    directly from covariance or correlation matrices;\r\n  - Adding support for adjusting the rejection threshold\r\n    in Hidden Markov Classifiers with threshold models;\r\n  - Updating Center, Standardize and ZScores methods so\r\n    they are not in-place by default.\r\n\r\n* Accord.Math\r\n  - Adding Augmented Lagrangian solver for Non-linear programming problems;\r\n  - Adding Row-reduced Echelon Form reductor.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.6.0 release notes\r\n-----------------------------------------\r\n05.04.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Introducing experimental NuGet packages.\r\n\r\n* Accord.Statistics\r\n  - Adding class features to HCRF potential functions;\r\n  - Adding resilient gradient (RProp) learning for HCRFs;\r\n  - Adding notifications for HMM classifier learning;\r\n  - Adding non-stochastic mode for GradientDescentHiddenLearning;\r\n  - Adding notifications for stochastic and conjugate gradient learning;\r\n  - Adding optimizations for HMM-based linear-chain HCRFs;\r\n  - Implementing ICloneable in all CRF/HCRF related classes;\r\n  - Updating positive definite checks in Cholesky decompositions;\r\n  - Correcting HMM computations to normalize probabilities only if required;\r\n  - Correcting DistributionBase to be marked as serializable;\r\n  - Correcting catastrophic cancellation in HCRF evaluation;\r\n  - Correcting output feature marginal probability calculation;\r\n  - Correcting Phi and ChiSquare calculation in GeneralConfusionMatrix;\r\n  - Renaming BaseSequenceClassifierLearning to BaseHiddenMarkovClassifierLearning.\r\n\r\n* Accord.MachineLearning\r\n  - Adding pooled variance support for Cross-Validation;\r\n  - Adding a switch to disable parallel computations in Cross-Validation;\r\n  - Adding support for external initialization in  Cross-Validation;\r\n  - Adding support for compact form linear SVMs;\r\n  - Adding kernel function cache in SVMs and SMO;\r\n  - Adding notification events to multi-class SVM learning;\r\n  - Adding Keerthi et al. improvements to the SMO algorithm;\r\n  - Splitting Cross-Validation and Grid-Search classes in different files;\r\n  - Splitting Multiquadric and InverseMultiquadric kernels;\r\n  - Correcting Multiquadric kernel to be positive-definite;\r\n  - Optimizing multi-class SVM evaluation based on DAGs.\r\n\r\n* Accord.Math\r\n  - Adding the Goldfarb-Idnani solver for constrained QP problems.\r\n\r\n* Accord.Imaging\r\n  - Adding further options to disable gradient blending in Blend filter;\r\n  - Adding image rectification filter for projective transformations;\r\n  - Adding specialized RANSAC fundamental matrix estimator.\r\n\r\n* Sample applications\r\n  - Adding Solver sample application for constrained optimization problems.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.5.0 release notes\r\n-----------------------------------------\r\n20.01.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* Accord.Math\r\n  - Splitting Special class into smaller classes;\r\n  - Moving ComplexMatrix to ComplexExtensions namespace.\r\n\r\n* Accord.Statistics\r\n  - Introducing Accord.Statistics.Links namespace for link functions;\r\n  - Adding Absolute, Cauchit, Identity, Inverse, Inverse Squared,\r\n    Logit, Log, Log-log, Probit and Sin link functions;\r\n  - Adding IFittableDistribution interface to eventually replace\r\n    the functionality of IDistribution.Fit in a future version;\r\n  - Adding Gamma, Cauchy, InverseGaussian, Hypergeometric, Geometric,\r\n    Exponential, Binomial and Kolmogorov-Smirnov probability distributions;\r\n  - Adding InverseDistributionFunction to most Univariate distributions;\r\n  - Adding ComplementaryDistributionFunction for all IDistributions;\r\n  - Adding HypothesisTest interface for specifying statistical tests;\r\n  - Adding Kolmogorov-Smirnov tests for one and two samples;\r\n  - Adding Student's T-Test for one and two samples;\r\n  - Adding Quartiles function to statistical tools;\r\n  - Adding several association measures to general contingency tables;\r\n  - Adding Bhapkar, Bowker, Kappa, McNemar, Stuart-Maxwell and Two-matrix Kappa tests;\r\n  - Adding symmetric triangle, Squared sinc, Hypersecant and Dirichlet kernels;\r\n  - Adding Gamma formulations to sparse Gaussian and sparse Laplacian kernels;\r\n  - Correcting property name from LogEmissions to Emissions in Markov models.\r\n\r\n* Accord.MachineLearning\r\n  - Adding small optimizations to SMO such as index sets and diagonal caching;\r\n  - Adding support vector sharing in the computation of multi-class SVMs;\r\n  - Adding Estimate methods for Gaussian, Laplacian and Sigmoid kernels;\r\n  - Adding probabilistic output learning and link functions to SVMs;\r\n  - Adding elimination-based multi-class decision for multi-class SVMs (DAGs);\r\n  - Changing default value for constant in linear and polynomial kernels to 1;\r\n  - Changing default behavior of SVM compute in order to return decisions.\r\n\r\n* Accord.Neuro\r\n  - Adding linear activation function.\r\n\r\n* Accord.Audio\r\n  - Adding simple mode to Wavechart control;\r\n  - Adding navigation support to WaveEncoder;\r\n  - Correcting Wave Encoder and Decoder classes.\r\n\r\n* Accord.Imaging\r\n  - Adding better starting values in Image/Matrix converters.\r\n\r\n* Sample applications\r\n  - Updating Handwriting (SVM) sample application to use all samples\r\n    available and to perform automatic estimation of Gaussian kernel;\r\n  - Adding new audio recording sample application.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.3. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.4.0 release notes\r\n-----------------------------------------\r\n04.01.2012.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Updating all projects to .NET 4.0;\r\n  - Updating all libraries to use Task Parallel Library;\r\n  - Updating SlimDX to latest version (September 2011);\r\n  - Adding new project for GPL source codes.\r\n\r\n* Accord.Audio\r\n  - Adding WaveEncoder class for saving/encoding Wave files.\r\n\r\n* Accord.Controls\r\n  - Updating ArrowDataView to support row labels.\r\n\r\nAccord.Imaging\r\n  - Correcting Blending filter and Harris corners detector convolutions.\r\n\r\n* Accord.MachineLearning\r\n  - Adding Naïve Bayes classifier;\r\n  - Adding Decision Trees models;\r\n  - Adding ID3 and C4.5 learning algorithms for decision trees;\r\n  - Adding Load and Save methods to all Support Vector Machines;\r\n  - Correcting race condition in multi-class vector machine decision;\r\n  - Renaming KMean's method \"Nearest\" to \"Classify\".\r\n\r\n* Accord.Math\r\n  - Adding Conjugate Gradient (CG) optimization algorithm;\r\n  - Adding IsUpperTriangular, IsLowerTriangular, IsDiagonal methods to matrix class;\r\n  - Adding Mode for integers and Entropy calculation in Math.Tools;\r\n  - Adding Lambda Comparer for specifying ad-hoc comparison rules;\r\n  - Adding LogSum function for summing exponential without losing accuracy;\r\n  - Adding efficient trace of the inverse in Cholesky decomposition;\r\n  - Adding jagged-array variants of Cholesky and Lu decompositions;\r\n  - Adding single-precision and decimal variants of Cholesky, Qr,\r\n    Eigenvalue, Singular value and Lu matrix decompositions;\r\n  - Correcting matrix formatter to use argument culture;\r\n  - Correcting regularized Gamma special functions;\r\n  - Updating numeric decompositions to use T4 templates;\r\n  - Renaming LbfgsOptimization to BroydenFletcherGoldfarbShanno;\r\n  - Adding parallelization to LDLt Cholesky Decomposition.\r\n\r\n* Accord.Neuro\r\n  - Heavily optimizing Levenberg-Marquardt to lessen memory and CPU requirements;\r\n  - Adding partial Jacobian calculation in Levenberg-Marquardt to conserve memory;\r\n  - Adding Resilient Backpropagation (RProp) learning algorithm;\r\n  - Renaming NguyenWidrowInitializer to NguyenWidrow.\r\n  \r\n* Accord.Statistics\r\n  - Adding Conditional Random Fields (CRFs);\r\n  - Adding Hidden Conditional Random Fields (HCRFs);\r\n  - Adding Stochastic Gradient Descent (SGD) learning for HCRFs;\r\n  - Adding Conjugate Gradient and QuasiNewton (L-BFGS) learning for HCRFs;\r\n  - Renaming SequenceClassifiers to HiddenMarkovClassifiers;\r\n  - Adding class priors to HiddenMarkovClassifiers;\r\n  - Adding InverseGaussian, Nakagami, Rayleigh and Weibull distributions;\r\n  - Adding Joint and Independent probability distributions;\r\n  - Adding fitting options for GeneralDiscreteDistribution;\r\n  - Adding LogProbabilityFunction method to all probability distributions;\r\n  - Adding Load and Save methods for all Hidden Markov Models and Fields;\r\n  - Updating Markov models to use log-domain computations by default;\r\n  - Updating Normal fitting options to limit to diagonal covariance matrices; \r\n  - Correcting weighted mixture distribution fitting;\r\n  - Correcting running normal statistics;\r\n  - Correcting LDA classification function;\r\n  - Correcting Kernel matrix centering in KPCA;\r\n  - Correcting Backward algorithm for HMMs.\r\n\r\n* Accord.Vision\r\n  - Adding smoothness to Camshift image extraction;\r\n  - Adding parallelism to Haar Object Detector;\r\n  - Optimizing IntegralImage computation with unsafe operations.\r\n\r\n* Sample applications\r\n  - Adding Naive Bayes sample application;\r\n  - Adding Decision Tree sample application;\r\n  - Adding Classification sample application for\r\n    Levenberg-Marquardt trained Neural Networks;\r\n  - Adding XOR, TimeSeries and Approximation samples\r\n    for ResilientBackpropagation trained Networks.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.3. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.3.0 release notes\r\n-----------------------------------------\r\n01.09.2011.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Ensuring copyright information stay as complete as possible.\r\n  \r\n* Accord.Neuro\r\n  - Levenberg-Marquardt now supports networks with multiple hidden layers.\r\n\r\n* Accord.Statistics\r\n  - Adding ANOVA and Two-way ANOVA;\r\n  - Adding Odds Ratio, Overall Diagnostic Power and Normalized \r\n    Mutual Information properties for 2 x 2 confusion matrices;\r\n  - Adding class for General Confusion Matrices (i.e. NxN confusion matrices);\r\n  - Adding Multinomial Logistic Regression using a Lower-Bound Newton optimization;\r\n  - Adding Predict method for arbitrary-density hidden Markov models;\r\n  - Adding Empirical, Lognormal, T and Uniform distributions;\r\n  - Splitting logistic regression models and related \r\n    fitting algorithms into independent classes;\r\n  - Fixing Clone operation of Mixture distributions.\r\n  - Fixing Normal distributions constructor's parameters;\r\n  - Fixing variance calculation for multivariate mixture;\r\n  - Replacing continuous-density hidden Markov models with generic, arbitrary-density models;\r\n  - Correcting an infinite loop when regularization is zero in MultivariateNormalDistribution;\r\n  - Correcting KDA to avoid argument out of range exceptions when removing unneeded components;\r\n  - Correcting probability mass function for general discrete distribution;\r\n  - Renaming Multivariate distributions to make a better distinction from univariate ones;\r\n  - Renaming UniformDistribution to ContinuousUniformDistribution;\r\n  - Updating univariate Normal to use log computations instead;\r\n  - Adding initial class for Scatter plots.\r\n\r\n* Accord.Math\r\n  - Adding Kronecker product to Matrix class.\r\n\r\n* Accord.Controls\r\n  - Introducing ScatterplotView.\r\n\r\n* Sample applications\r\n  - Adding Kinect controller for interfacing with Microsoft Kinect.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.2.1. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.2.0 release notes\r\n-----------------------------------------\r\n01.07.2011.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - This release introduces some breaking interface changes. As\r\n    result, the current minor version number has been increased;\r\n  - Updating DimensionMismatchException to be an ArgumentException;\r\n  - Merging Accord.Wavelets into Accord.Math.\r\n\r\n* Accord.MachineLearning\r\n  - Adding more argument checks in SVM learning related classes;\r\n  - Adding a overload to initialize GMM with known distributions;\r\n  - Adding a overload to compute K-Means errors directly from the data.\r\n\r\n* Accord.Math  \r\n  - Adding 1D convolution extension method in Matrix class;\r\n  - Adding modified Bessel functions in the Special functions class;\r\n  - Adding Finite Differences class for automatic gradient computation;\r\n  - Adding GetAngle(IntPoint, IntPoint) and GetDirection in Math.Tools.\r\n  - Adding new LogDeteminant properties to Cholesky and LU decompositions\r\n    to compute the determinant's logarithm avoiding overflown values;\r\n  - Correcting LU decomposition of matrices with more columns than rows;\r\n  - Correcting matrix Power operation.\r\n\r\n* Accord.Statistics\r\n  - Adding Circular statistics tools;\r\n  - Adding Von-Mises probability distribution;\r\n  - Adding static methods for NormalDistribution estimation;\r\n  - Adding Moving and Running namespaces for moving window and running statistics;\r\n  - Adding MovingNormalStatistics class for computing moving averages and variances;\r\n  - Adding MovingCircularStatistics class for moving circular averages and variances;\r\n  - Adding more method overloads for float input values in Statistics.Tools;\r\n  - Adding versions of the Forward and Backward algorithms without scaling;\r\n  - Adding smoothing support in hidden Markov Threshold model creation;\r\n  - Adding more argument checks in statistical analysis and models;\r\n  - Adding base interfaces for statistical analyses;\r\n  - Updating analyses classes to implement base interfaces;\r\n  - Updating SequenceClassifierBase to compute the threshold model in parallel;\r\n  - Updating Continuous Baum-Welch to automatically convert univariate distributions;\r\n  - Updating multivariate NormalDistribution to use logarithmic computations;\r\n  - Fixing initialization of the symbols property in Hidden Markov Model constructor;\r\n  - Fixing univariate mixture distribution to respect component's fitting options;\r\n  - Fixing threshold model generation in discrete sequence Markov classifiers;\r\n  - Experimental version of linear-chain Conditional Random Fields;\r\n  - Marking all kernel classes as sealed.\r\n  \r\n* Accord.Neuro\r\n  - Correcting iterator bug in Levenberg Marquardt learning.\r\n  \r\n* Accord.Imaging\r\n  - Adding Raw and Central image moments calculators;\r\n  - Adding border following contour extraction algorithm;\r\n  - Adding K-curvature algorithm for contour peak detection;\r\n  - Adding convex hull defects extraction algorithm;\r\n  - Updating PointsMarker and RectanglesMarker to accept\r\n    any IEnumerable collection rather than just arrays.\r\n\r\n* Accord.Vision\r\n  - Adding HSL Range Blob Tracker for color-based tracking;\r\n  - Adding Block Matching Tracker for template-based tracking;\r\n  - Adding steady detection in Camshift and HaarObjectDetector;\r\n  - Adding new classes for default Face and Nose Haar cascades;\r\n  - Adding support for hard-coded code generation in Haar cascades;\r\n  - Adding Axis orientation support for TrackingObject;\r\n  - Updating TrackingObject to use integer coordinates;\r\n  - Updating all Haar related classes to implement the ICloneable interface;\r\n  - Splitting HaarCascade class from the HaarCascadeClassifier;\r\n  - Fixing multi-threaded issues when using the default face detector;\r\n  - Fixing red channel extraction in HaarObjectDetector;\r\n  - Fixing minimum window size in HaarObjectDetector.\r\n  \r\n* Accord.Controls\r\n  - Adding Accord.Controls.Vision namespace for vision related controls;\r\n  - Adding AngleBox and PointBox controls to show angle and position information;\r\n  - Adding HeadController component for interface control based on head events;\r\n  - Adding FaceController component for interface control based on face events;\r\n\r\n* Sample applications\r\n  - Adding Controller sample application for head and face based application control;\r\n  - Adding Glove Tracking sample application for colored glove tracking and finger detection;\r\n  - Updating Mouse Gestures sample application to perform continuous recognition using\r\n    hidden Markov threshold models and use discrete models instead.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.5. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.6 release notes\r\n-----------------------------------------\r\n01.04.2011.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Introducing new exception classes for math operations.\r\n\r\n* Accord.Audio\r\n  - Adding new AudioDeviceCollection class to list available \r\n    audio devices information based on category (output or capture);\r\n  - Updating AudioCaptureDevice and AudioOutputDevice to actually \r\n    support any available audio device (Origo Issue #21).\r\n \r\n* Accord.MachineLearning\r\n  - Adding methods to (re-)initialize Gaussian Mixture Models and K-Means;\r\n  - Adding support for setting the centroids in K-Means (Origo Issue #20);\r\n\r\n* Accord.Math\r\n  - Adding L-BFGS method for non-linear optimization;\r\n  - Adding optimized matrix inversions for 3x3 and 2x2 matrices; \r\n  - Matrix decompositions now implement the ICloneable interface;\r\n  - Updating Multivariate/NormalDistribution to always use the\r\n    Cholesky decomposition and throw exceptions when appropriate;\r\n  - Updating Cholesky decomposition to cache the result of the\r\n    determinant property to avoid unnecessary computations.\r\n\r\n* Accord.Statistics\r\n  - New architecture for statistical distribution fitting;\r\n  - Adding a regularization parameter in multivariate Normal distribution\r\n    fitting to avoid non-positive definite or singular covariance matrices;\r\n  - Adding configurable fitting options in the ContinuousBaumWelchLearning;\r\n  - Adding confidence support in sequence classifiers using Threshold models;\r\n  - Adding support for inclusive upper bounds in the Histogram class;\r\n  - Adding more selection rules for the number and widths of Histogram bins;\r\n  - Fixing Histogram computing when data is constant (Origo Issue #23);\r\n  - Renaming weighted sample methods from Measures.\r\n  \r\n* Accord.Imaging\r\n  - Adding Speeded-Up Robust Features (SURF) detector and descriptor;\r\n  - Adding Features from Accelerated Segment Test (FAST) corners detector;\r\n\r\n* Sample applications\r\n  - Mouse gestures sample application now supports non-gesture models\r\n    and a regularization parameter for Normal distribution estimation.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.5. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.5 release notes\r\n-----------------------------------------\r\n12.02.2011.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - The various works on this release have introduced some breaking\r\n    interface changes, mainly in the Audio and Statistics namespaces.\r\n\r\n* Accord.Audio\r\n  - Major architectural changes of the Audio namespace;\r\n  - Code cleanup of untested audio processing filters;\r\n  - Signal processing filters now operate in more similar\r\n    ways to AForge.NET's image processing filters;\r\n  - Signals can now have multiple sample formats.\r\n \r\n* Accord.MachineLearning\r\n  - Updating GridSearch to use parallel computing;\r\n  - Adding a new option to automatically compute the complexity parameter\r\n    C using a heuristic in Sequential Minimal Optimization SVM learning.\r\n\r\n* Accord.Math\r\n  - Reorganizing Special functions, adding (ln) Beta functions;\r\n  - Splitting Matrix.cs into several partial classes for organization;\r\n  - Adding MultiplyByTranspose and TransposeAndMultiply methods for matrices;\r\n  - Adding a new algorithm for LDLt Cholesky matrix decomposition;\r\n  - Adding a new property in SVD to store original value sorting order;\r\n  - Adding options for Eigenvalue and Singular value decompositions to\r\n    be computed in place, conserving memory.\r\n\r\n* Accord.Neuro\r\n  - Updating LevenbergMarquardtLearning to introduce a constant factor\r\n    while computing the Hessian/Bayesian Regularization weight update.\r\n\r\n* Accord.Statistics\r\n  - Major refactoring of the Statistics.Models.Markov namespace;\r\n  - Adding a new Predict method in HMMs to predict next observations in a sequence;\r\n  - Adding Topology classes to specify a Hidden Markov Model architecture at model\r\n    construction, such as Ergodic (fully connected) or Forward-only (left-to-right);\r\n  - Adding a base class and interfaces for Continuous and Discrete hidden Markov models;\r\n  - Adding a base class and interfaces for hidden Markov model learning algorithms;\r\n  - Adding a class for the Univariate F-Distribution;\r\n  - Adding a class for Independent Component Analysis (ICA);\r\n  - Adding a Whitening Transform method in Statistics.Tools;\r\n  - Adding Sparse versions of Gaussian, Polynomial, Laplacian, Sigmoid\r\n    and Cauchy kernels to operate on sparse vectors directly;\r\n  - Adding options for Principal Component Analysis and Kernel Principal\r\n    Component Analysis to be computed in place, conserving memory;\r\n  - Updating Projection filter to use a Collection instead of List<T> (CA1002);\r\n  - Updating Histogram and HistogramView to work with empty sample vectors;\r\n  - Updating Principal Component Analysis and Partial Least Squares Analysis\r\n    to raise exception if std deviation is zero, instead of failing silently;\r\n  - Updating Evaluate method in Hidden Markov models to compute forward\r\n    probabilities instead of the probability of the most likely (Viterbi) path;\r\n  - Fixing an issue with Mixture model fitting when one of the weights is zero.\r\n  \r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.5. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.4 release notes\r\n-----------------------------------------\r\n01.12.2010.    \r\n\r\nVersion updates and fixes:\r\n \r\n* Accord.Core\r\n  - Adding a new assembly, Accord.Core, to accommodate common\r\n    framework classes such as specialized exceptions;\r\n\r\n* Accord.Math\r\n  - Adding some Tools.Scale overloads to operate on matrices and arrays;\r\n  - Adding an option to compute LU decomposition and transpose in place;\r\n  - Cleaning Matrix to have only generic implementations for Max and Min;\r\n  - Fixing a bug in Nonnegative Matrix Factorization in which certain\r\n    input characteristics would raise an IndexOutOfRange exception.\r\n\r\n* Accord.MachineLearning\r\n  - Adding a SparseSampleReader class to read from files containing\r\n    sparse data samples represented in libsvm's sparse vector format;\r\n  - Changing MulticlassSupportVectorMachine to implement the interface\r\n    ISupportVectorMachine.Compute explicitly, so the method can also\r\n    return a more intuitive integer class label rather than a double.\r\n  \r\n* Accord.Neuro\r\n  - Adding several optimizations to Levenberg-Marquardt learning.\r\n\r\n* Accord.Statistics\r\n  - Adding a Custom (lambda) kernel for ad-hoc kernels;\r\n  - Adding a Precomputed kernel for manually specifying a kernel Matrix;\r\n  - Adding a Sparse Linear Kernel to operate on sparse vectors directly;\r\n  - Adding support for different weights in the Additive combination kernel;\r\n  - Adding support for setting the Gamma parameter in the Gaussian kernel;\r\n  - Moving nested classes in StepwiseLogisticRegression to separate locations;\r\n  - Correcting error calculation in Multiple Linear Regression.\r\n\r\n* Accord.Imaging\r\n  - Adding a ToBitmap overload to convert from byte matrices;\r\n  - Adding a new overload to the Scale method to accept floats;\r\n  - Adding a new overload to ImageBox to support background color;\r\n  - Correcting Harris Corners Detector (with support for Nobel's corner measure);\r\n  - Correcting Blend filter to ignore fully transparent pixels;\r\n  - Modifying Blend filter to use float instead of doubles.\r\n\r\n* Accord.Vision\r\n  - Adding different scaling modes to Haar Cascade Object Detector;\r\n  - Adding initial support for Tilted features in HaarCascadeClassifier and\r\n    Tilted Integral Image calculation in IntegralImage2 class;\r\n  - Rewrite of the Haar Cascade Classifier to work with all compatible XML\r\n    definitions. Serialization is now performed using standard .NET serializers.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.3 release notes\r\n-----------------------------------------\r\n01.11.2010.    \r\n\r\nVersion updates and fixes:\r\n \r\n* General\r\n  - Heavy work on documentation;\r\n  - Adding parameter verification in several methods;\r\n\r\n* Accord.Math\r\n  - Adding Non-Negative Matrix Factorization;\r\n  - Adding a new Split method to split vectors in Matrix class;\r\n  - Adding a new IsPositiveDefinite method in Matrix class;\r\n  - Adding a new method for equation solving in LU and QR\r\n    decompositions to help in multiplication by inverse;\r\n  - Adding a new overload to the Solve method in Cholesky\r\n    decomposition to solve for vectors;\r\n  - Updating Matrix.Divide to use the LU and QR decompositions;\r\n  - Correcting a bug in the Submatrix method for vectors;\r\n  - Reworking some of the matrix formatting architecture.\r\n\r\n* Accord.MachineLearning\r\n  - Adding Gaussian Mixture Models;\r\n  - Adding configurable distance metric and adjustable/relative\r\n    convergence threshold to K-Means clustering;\r\n  - Updating the interface of Crossvalidation and Multiclass Support\r\n    Vector Machines to use delegates instead of raw lambda functions.\r\n\r\n* Accord.Statistics\r\n  - Major reorganization of the Statistics.Markov namespace;\r\n  - Major reorganization of the Statistics.Distributions namespace;\r\n  - Adding Continuous Hidden Markov Models and Sequence Classifier;\r\n  - Adding support for univariate/multivariate Mixture distributions;\r\n  - Adding Poisson, Multinomial and Bernoulli probability distributions; \r\n  - Adding overloads to Statistics.Tools for weighted measures;\r\n  - Correcting an infinite loop issue in hidden Markov models learning;\r\n  - Fixing Wavelet kernel - translation parameter was being ignored.\r\n\r\n* Accord.Imaging\r\n  - Adding ToBitmap/ToDoubleArray extension methods for color images;\r\n  - Correcting a bug in distance function in RansacHomograpyEstimation.\r\n\r\n* Accord.Vision\r\n  - Adding HaarCascadeClassifier as a parameter to HaarObjectDetector;\r\n  - Changing DefaultFaceDetector to be a property rather than a method.\r\n\r\n* Accord.Controls\r\n  - Adding a RangeTypeConverter to show AForge.IntRange and DoubleRanges\r\n    properly in controls such as the PropertyGrid.\r\n\r\n* Samples \r\n  - Added Continuous density Hidden Markov Models sample application;\r\n  - Added Gaussian Mixture Models sample application;\r\n  - Added K-Means color clustering sample application.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.2 release notes\r\n-----------------------------------------\r\n01.10.2010.    \r\n\r\nVersion updates and fixes:\r\n \r\n* Accord.Math\r\n  - Adding formatting and parsing extension methods for matrices;\r\n  - Fixing an infinite-loop condition in SVD, also updating the\r\n    inverse and solve methods to use optimized matrix multiplication;\r\n\r\n* Accord.MachineLearning\r\n  - Adding initial version of the K-Means clustering algorithm;\r\n\r\n* Accord.Statistics\r\n  - Adding a missing overload of the Variance method;\r\n  - Adding a minimum variance threshold for components in KPCA;\r\n  - Fixing an issue with the Result property of PCA, KPCA, LDA and KDA;\r\n\r\n* Accord.Imaging\r\n  - Adding ToBitmap extension methods;\r\n  - Performance improvements in the Harris Corners Detector;\r\n  - Fixing interface compatibility with the latest version of AForge.\r\n    Minimum required version of AForge.NET is now version 2.1.4.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.4. May work with newer versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.1 release notes\r\n-----------------------------------------\r\n01.09.2010.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Most model classes are now serializable;\r\n  - Adding a new icon for the framework;\r\n  - Adding a great number of unit tests;\r\n  - Several improvements in documentation;\r\n\r\n* Accord.Vision\r\n  - Fixing some issues with Camshift in HSL mode;\r\n  - Adding a Camshift mixed mode to work on a HSL space\r\n    with some lightness/saturation information;\r\n\r\n* Accord.Math\r\n  - Added optimizations to some matrix operations;\r\n  - Added autocorrection for JAMA's SVD assumptions;\r\n  - Added more tests for the matrix decompositions;\r\n\r\n* Accord.MachineLearning\r\n  - Corrected the casing of the name of GridSearch related classes;\r\n\r\n* Accord.Statistics\r\n  - Several corrections to basic statistics tools;\r\n  - Added Wavelet and Dynamic Time Warp kernels;\r\n\r\n* Accord.Imaging\r\n  - Added support for 32bpp images in the blending\r\n    filter, also fixed a issue with final image size;\r\n  - Some fixes for the Correlation Matching class;\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.3. May work with other versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.1.0 release notes\r\n-----------------------------------------\r\n01.08.2010.    \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Updated AForge version to v2.1.3\r\n  - Updating some projects to target .NET 3.5\r\n  - Added the Accord.Vision namespace\r\n\r\n* Accord.Statistics\r\n  - Correction of the ANOVA kernel;\r\n  - Added minor optimizations to some radial basis function kernels;\r\n  - Added option to force the inclusion of the origin point in ROC curves;\r\n\r\n* Accord.Imaging\r\n  - Fixed blending filter issue when second image was placed at left of the first image.\r\n  - WaveletTransform now works properly on 16bpp Grayscale images for added precision;\r\n\r\n* Accord.Vision\r\n  - Added support for Camshift-based object tracking;\r\n  - Added support for the Viola-Jones method for face detection;\r\n\r\n* Accord.Math\r\n  - Added more comments on the Singular Value Decomposition issues;\r\n  - Added more extension methods to Accord.Math.Matrix, such as CartesianProduct;\r\n  - Updated Factorial, Binomial and other special functions;\r\n\r\n* Accord.MachineLearning\r\n  - Added support for Multiclass (Kernel) Support Vector Machines;\r\n  - Added a Grid Search class for parameter tuning;\r\n  - Added a Crossvalidation class for model measurement;\r\n  - Sequential Minimal Optimization now works with common (linear) machines;\r\n\r\n* Samples \r\n  - Adjusting Panorama sample application;\r\n  - Removed incomplete SignalSplitter sample;\r\n  - Added Multiclass Support Vector Machine-based Handwriting Recognition sample application;\r\n  - Added sample applications for face tracking and detection\r\n  - Added a sample application to demonstrate some matrix operations.\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.3. May work with other versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.0.2 release notes\r\n-----------------------------------------\r\n01.07.2010.            \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Some refactoring to comply with more Code Analysis rules\r\n\r\n* Accord.Statistics\r\n  - Added common base class for DataTable Filters\r\n  - Added computation of Variable Importance in Projection (VIP) for PLS\r\n  - Changed Kernel Discriminant Analysis to use a Generalized Eigenvalue\r\n    Decomposition for increased efficiency.\r\n\r\n* Accord.Imaging\r\n  - Added Wavelet transform filter\r\n  - Improvements to the Blending filter\r\n  - Adding sample pictures for the Panorama sample application\r\n  - Added MatrixH to represent general transformation matrices more efficiently\r\n  - Simplification of RansacHomographyEstimator using PointF instead of PointH\r\n\r\n* Accord.MachineLearning\r\n  - Adding initial Crossvalidation class for general models\r\n  - Simplifying RANSAC to be independent of the model data type\r\n\r\n* Accord.Wavelets\r\n  - Updating the Wavelet libraries and adding a sample application\r\n\r\n* Accord.Math\r\n  - Added special functions Log1p and Expm1 to Accord.Math.Special\r\n  - Added support for computing Generalized Eigenvalue Decompositions\r\n\r\n* AForge Compatibility\r\n  - Compiled against AForge.NET Framework 2.1.2. May work with other versions.\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.0.1 release notes\r\n-----------------------------------------\r\n01.06.2010.            \r\n\r\nVersion updates and fixes:\r\n\r\n* General\r\n  - Added support for Sandcastle generated documentation\r\n  - Added unit testing for Imaging, MachineLearning, Math, Neuro, Statistics and Wavelets namespaces\r\n  - Updated assemblies information\r\n\r\n* Accord.Statistics\r\n  - Fixed an issue with Kernel Principal Component Analysis reversion\r\n\r\n* Accord.Wavelets\r\n  - Added Haar and CDF97 1D and 2D Wavelet Transforms\r\n\r\n\r\n\r\n\r\nAccord.NET Framework 2.0.0 release notes\r\n-----------------------------------------\r\n20.05.2010.\r\n\r\nInitial release.\r\n\r\n* Accord.Math\r\n  - MATLAB-like matrix manipulation of multidimensional-arrays\r\n  - Hilbert transform\r\n  - Numeric decompositions (SVD, Eigen, Cholesky, LU, QR)\r\n  - Special scientific functions;\r\n\r\n* Accord.Statistics\r\n  - Simple Descriptive Analysis\r\n  - Linear Discriminant Analysis (LDA)\r\n  - Kernel Discriminant Analysis (KDA)\r\n  - Principal Component Analysis (PCA)\r\n  - Kernel Principal Component Analysis (KPCA)\r\n  - Partial Least Squares Analysis (PLS)\r\n  - Logistic Regression Fitting and Analysis\r\n  - Multivariate, Multiple and Simple Linear Regressions\r\n  - Receiver Operating Curves (ROC)\r\n  - Chi-Square and Wald Hypothesis Tests\r\n  - Wide variety of Kernels for machine learning\r\n  - Hidden Markov Models (HMM) and Sequence Classifiers\r\n  - Filters for preprocessing of DataTables such as\r\n    discretization, normalization, categorization and equalization\r\n  \r\n* Accord.Neuro\r\n  - Levenberg-Marquardt (with Bayesian Regularization) Learning Algorithm\r\n  - Nguyen-Widrow Weight Initialization for Activation Networks\r\n  \r\n* Accord.MachineLearning\r\n  - Support Vector Machines (SVM)\r\n  - Kernel Support Vector Machines (kSVM)\r\n  - Sequential Minimal Optimization Learning (SMO)\r\n  - Sequential Minimal Optimization for Regression (SMOr)\r\n  - Multipurpose RANSAC for robust model estimation\r\n\r\n* Accord.Imaging\r\n  - Harris Corner Detector for AForge.NET\r\n  - Robust Homography estimation using RANSAC\r\n  \r\n* Accord.Audio\r\n  - Experimental audio library for audio processing\r\n  \r\n* Accord.Audition\r\n  - Experimental audio library for computer audition\r\n\r\n  \r\n* Samples\r\n  - Sample applications for almost all features listed here.\r\n  "
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "Sources",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "Unit Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Version.txt",
          "type": "blob",
          "size": 0.0107421875,
          "content": "3.8.2-alpha"
        },
        {
          "name": "accord-framework (VS Code).sln",
          "type": "blob",
          "size": 5.6318359375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Sources\", \"Sources\", \"{9ECC4F67-9FA7-41DB-82E3-C7BE3EC6EB01}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Accord.Core (VS Code)\", \"Sources\\Accord.Core\\Accord.Core (VS Code).csproj\", \"{60B65101-B6DF-4532-839E-56E175F3088F}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Accord.Math (VS Code)\", \"Sources\\Accord.Math\\Accord.Math (VS Code).csproj\", \"{1A7D33E5-1D88-4B75-AECE-F93433F28493}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Accord.Math.Core (VS Code)\", \"Sources\\Accord.Math.Core\\Accord.Math.Core (VS Code).csproj\", \"{57B94AC5-B9C4-4DAE-A171-A0F975521436}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Accord.Statistics (VS Code)\", \"Sources\\Accord.Statistics\\Accord.Statistics (VS Code).csproj\", \"{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x64 = Release|x64\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436}.Release|x86.Build.0 = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|x86.ActiveCfg = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Debug|x86.Build.0 = Debug|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|x86.ActiveCfg = Release|Any CPU\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7}.Release|x86.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{60B65101-B6DF-4532-839E-56E175F3088F} = {9ECC4F67-9FA7-41DB-82E3-C7BE3EC6EB01}\r\n\t\t{1A7D33E5-1D88-4B75-AECE-F93433F28493} = {9ECC4F67-9FA7-41DB-82E3-C7BE3EC6EB01}\r\n\t\t{57B94AC5-B9C4-4DAE-A171-A0F975521436} = {9ECC4F67-9FA7-41DB-82E3-C7BE3EC6EB01}\r\n\t\t{ABC42FF5-7F54-45D4-8B9B-981DD67F22F7} = {9ECC4F67-9FA7-41DB-82E3-C7BE3EC6EB01}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "accord.pc.in",
          "type": "blob",
          "size": 0.9267578125,
          "content": "Name: Accord.NET\nDescription: The Accord.NET Framework for Machine Learning, Image Processing, Mathematics and Statistics\nVersion: @VERSION@\nURL: http://accord-framework.net\n\nprefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\n\nLibs: -r:@libdir@/Accord.Vision.dll -r:@libdir@/Accord.Video.Ximea.dll -r:@libdir@/Accord.Video.VFW.dll -r:@libdir@/Accord.Video.Kinect.dll -r:@libdir@/Accord.Video.dll -r:@libdir@/Accord.Video.DirectShow.dll -r:@libdir@/Accord.Neuro.dll -r:@libdir@/Accord.Text.dll-r:@libdir@/Accord.Math.dll -r:@libdir@/Accord.Math.Core.dll -r:@libdir@/Accord.MachineLearning.dll -r:@libdir@/Accord.IO.dll -r:@libdir@/Accord.DataSets.dll -r:@libdir@/Accord.Imaging.dll -r:@libdir@/Accord.Genetic.dll -r:@libdir@/Accord.Fuzzy.dll -r:@libdir@/Accord.dll -r:@libdir@/Accord.Controls.Vision.dll -r:@libdir@/Accord.Controls.Imaging.dll -r:@libdir@/Accord.Controls.Audio.dll -r:@libdir@/Accord.Audition.dll -r:@libdir@/Accord.Audio.dll "
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 4.134765625,
          "content": "#! /bin/sh\n\n# Compares software version numbers\n# 10 means EQUAL\n# 11 means GREATER THAN\n# 9 means LESS THAN\ncheck_version() {\n\ttest -z \"$1\" && return 1\n\tlocal ver1=$1\n\twhile test `echo $ver1 | egrep -c [^0123456789.]` -gt 0 ; do\n\t\tchar=`echo $ver1 | sed 's/.*\\([^0123456789.]\\).*/\\1/'`\n\t\tchar_dec=`echo -n \"$char\" | od -b | head -1 | awk {'print $2'}`\n\t\tver1=`echo $ver1 | sed \"s/$char/.$char_dec/g\"`\n\tdone\t\n\ttest -z \"$2\" && return 1\n\tlocal ver2=$2\n\twhile test `echo $ver2 | egrep -c [^0123456789.]` -gt 0 ; do\n\t\tchar=`echo $ver2 | sed 's/.*\\([^0123456789.]\\).*/\\1/'`\n\t\tchar_dec=`echo -n \"$char\" | od -b | head -1 | awk {'print $2'}`\n\t\tver2=`echo $ver2 | sed \"s/$char/.$char_dec/g\"`\n\tdone\t\n\n\tver1=`echo $ver1 | sed 's/\\.\\./.0/g'`\n\tver2=`echo $ver2 | sed 's/\\.\\./.0/g'`\n\n\tdo_version_check \"$ver1\" \"$ver2\"\n}\n\ndo_version_check() {\n\t\n\ttest \"$1\" -eq \"$2\" && return 10\n\n\tver1front=`echo $1 | cut -d \".\" -f -1`\n\tver1back=`echo $1 | cut -d \".\" -f 2-`\n\tver2front=`echo $2 | cut -d \".\" -f -1`\n\tver2back=`echo $2 | cut -d \".\" -f 2-`\n\n\tif test \"$ver1front\" != \"$1\"  || test \"$ver2front\" != \"$2\" ; then\n\t\ttest \"$ver1front\" -gt \"$ver2front\" && return 11\n\t\ttest \"$ver1front\" -lt \"$ver2front\" && return 9\n\n\t\ttest \"$ver1front\" -eq \"$1\" || test -z \"$ver1back\" && ver1back=0\n\t\ttest \"$ver2front\" -eq \"$2\" || test -z \"$ver2back\" && ver2back=0\n\t\tdo_version_check \"$ver1back\" \"$ver2back\"\n\t\treturn $?\n\telse\n\t\ttest \"$1\" -gt \"$2\" && return 11 || return 9\n\tfi\n}\n\nPROJECT=Accord.NET\nFILE=\nCONFIGURE=configure.ac\n\n: ${AUTOCONF=autoconf}\n: ${AUTOHEADER=autoheader}\n: ${AUTOMAKE=automake}\n: ${ACLOCAL=aclocal}\n: ${MONO=mono}\n: ${XBUILD=xbuild}\n\nDIE=0\n\n($AUTOCONF --version) < /dev/null > /dev/null 2>&1 || {\n        echo\n        echo \"You must have autoconf installed to compile $PROJECT.\"\n        echo \"Download the appropriate package for your distribution,\"\n        echo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\t\techo \n\t\techo \"On apt-get systems, you might want to run 'sudo apt-get install autoconf'\"\n        DIE=1\n}\n\n($AUTOMAKE --version) < /dev/null > /dev/null 2>&1 || {\n        echo\n        echo \"You must have automake installed to compile $PROJECT.\"\n        echo \"Get ftp://sourceware.cygnus.com/pub/automake/automake-1.4.tar.gz\"\n        echo \"(or a newer version if it is available)\"\n\t\techo\n\t\techo \"On apt-get systems, you might want to run 'sudo apt-get install automake'\"\n        DIE=1\n}\n\n($MONO --version) < /dev/null > /dev/null 2>&1 || {\n        echo\n        echo \"You must have mono runtime installed to compile $PROJECT.\"\n\t\techo\n\t\techo \"On apt-get systems, you might want to run 'sudo apt-get install mono-complete'\"\n        DIE=1\n}\n\n($XBUILD /version) < /dev/null > /dev/null 2>&1 || {\n        echo\n        echo \"You must have mono-xbuild installed to compile $PROJECT.\"\n\t\techo\n\t\techo \"On apt-get systems, you might want to run 'sudo apt-get install mono-xbuild'\"\n        DIE=1\n}\n\nif test \"$DIE\" -eq 1; then\n        exit 1\nfi\n\nunset GREP_OPTIONS\n\nxbuild_version=`xbuild /version | grep '^XBuild' | egrep -o '([0-9]+\\.?){2,}'`\ncheck_version \"$xbuild_version\" \"2.4\" 2> /dev/null\nif test $? -eq 9; then\n\techo\n\techo \"A newer version of XBuild is required to build $PROJECT ( >= 2.4 )\"\n\texit 1\nfi\n\nmono_version=`xbuild /version | grep '^Mono' | egrep -o '([0-9]+\\.?){2,}'`\ncheck_version \"$xbuild_version\" \"2.4\" 2> /dev/null\nif test $? -eq 9; then\n\techo\n\techo \"A newer version of Mono is required to run $PROJECT ( >= 2.4 )\"\n\texit 1\nfi\n\n\n#Check directoy \nsrcdir=`dirname $0`\ntest -z \"$srcdir\" && srcdir=.\n\nORIGDIR=`pwd`\ncd $srcdir\nTEST_TYPE=-f\naclocalinclude=\"-I . $ACLOCAL_FLAGS\"\n\n                                                                     \ntest $TEST_TYPE $FILE || {\n        echo \"You must run this script in the top-level $PROJECT directory\"\n        exit 1\n}\n\nif test -z \"$*\"; then\n        echo \"I am going to run ./configure with no arguments - if you wish \"\n        echo \"to pass any to it, please specify them on the $0 command line.\"\nfi\n\necho \"Running $ACLOCAL $aclocalinclude ...\"\n$ACLOCAL $aclocalinclude\n\necho \"Running $AUTOMAKE --gnu $am_opt ...\"\n$AUTOMAKE --add-missing --gnu $am_opt\n\necho \"Running $AUTOCONF ...\"\n$AUTOCONF\n\necho Running $srcdir/configure $conf_flags \"$@\" ...\n$srcdir/configure $conf_flags \"$@\""
        },
        {
          "name": "build-all.cmd",
          "type": "blob",
          "size": 2.7666015625,
          "content": "@echo off\n\n:: (enable termination from subroutine)\nSETLOCAL\nset ERROR_CODE=0\nif \"%selfWrapped%\"==\"\" (\n  set selfWrapped=true\n  %ComSpec% /s /c \"\"%~0\" %*\"\n  goto :eof\n)\n\n\necho.\necho Accord.NET Framework - all project configurations builder\necho =========================================================\necho. \n\n:: Use Microsoft's vswhere.exe to locate the appropriate version of MSBuild:\nfor /f \"usebackq tokens=1* delims=: \" %%i in (`Tools\\vswhere -latest -requires Microsoft.Component.MSBuild`) do (\n  if /i \"%%i\"==\"installationPath\" set InstallDir=%%j\n)\nset MSBUILD=\"%InstallDir%\\MSBuild\\15.0\\Bin\\MSBuild.exe\"\n\necho This Windows batch file will use MSBuild.exe from the path\necho %MSBUILD%\necho to compile the Debug and Release versions of the framework.\necho. \n::pause\n\ndel /q \"Setup\\bin\\*.log\"\n\necho.\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"Debug\",   \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"Debug\",   \"Any CPU\", \"Build\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"mono\",    \"Any CPU\", \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net35\",   \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net35\",   \"Any CPU\", \"Build\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net40\",   \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net40\",   \"Any CPU\", \"Build\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net45\",   \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net45\",   \"Any CPU\", \"Build\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net46\",   \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net46\",   \"Any CPU\", \"Build\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net462\",  \"x64\",     \"Rebuild\"\ncall:MSBUILD \"Sources\\Accord.NET.sln\", \"net462\",  \"Any CPU\", \"Build\"\n\necho.\ncall:MSBUILD \"Samples\\Samples.sln\",    \"Release\", \"x86\",     \"Rebuild\"\ncall:MSBUILD \"Samples\\Samples.sln\",    \"Release\", \"x64\",     \"Build\"\n\n::: Building netstandard2.0 packages from the command line still doesn't work very well:\n::call:DNBUILD \"Sources\\Accord.NET (NETStandard).sln\",\"netstandard2.0\"\n::call:MSBUILD \"Sources\\Accord.NET (NETStandard).sln\",\"netstandard2.0\",\"Any CPU\",Rebuild\n\nexit /b %ERROR_CODE%\ngoto:eof\n\n\n:DNBUILD\nset SOLUTION=%~1\nset CONFIGURATION=%~2\ndotnet build %SOLUTION% --configuration %CONFIGURATION% --no-incremental\ngoto:eof\n\n\n:MSBUILD\nset SOLUTION=%~1\nset CONFIGURATION=%~2\nset PLATFORM=%~3\nset TASK=%~4\necho.\necho  - Building %SOLUTION% in %CONFIGURATION% / %PLATFORM% configuration...\n%MSBUILD% /m \"%SOLUTION%\" /t:%TASK% /property:Prefer32bit=false /p:Configuration=%CONFIGURATION% /p:Platform=\"%PLATFORM%\" /fl /flp:logfile=\"Setup\\bin\\Build.%CONFIGURATION%.%PLATFORM%.log\";verbosity=normal /consoleloggerparameters:ErrorsOnly;Summary /verbosity:minimal /nologo\nset ERROR_CODE=%errorlevel%\nif %ERROR_CODE% neq 0 (\n\techo Exiting with %ERROR_CODE%\n\texit /b %ERROR_CODE%\n)\ngoto:eof\n\n"
        },
        {
          "name": "clean-all.cmd",
          "type": "blob",
          "size": 2.677734375,
          "content": "@echo off\n\necho.\necho Accord.NET Framework - all project configurations cleaner\necho =========================================================\necho. \necho This Windows batch file will use Visual Studio 2015 to\necho compile the Debug and Release versions of the framework.\necho. \n\n:: Using devenv.com instead of .exe makes the console window wait until the completion\nset DEVENV=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Professional\\Common7\\IDE\\devenv.com\"\nset DEVVER=2017 Professional Preview\nif not exist %DEVENV% (\n\tset DEVENV=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.com\"\n\tset DEVVER=2017 Community\n\tif not exist %DEVENV% (\n\t\tset DEVENV=\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\devenv.com\"\n\t\tset DEVVER=2015\n\t\tif not exist %DEVENV% (\n\t\t\tset DEVENV=\"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\IDE\\devenv.com\"\n\t\t\tset DEVVER=2013\n\t\t\tif not exist %DEVENV% (\n\t\t\t\techo \"Error: Could not find Visual Studio's devenv.com\"\n\t\t\t\texit\n\t\t\t)\n\t\t)\n\t)\n) \n\ndel /q \"bin\\*.log\"\necho.\n\necho.\necho  - Cleaning Debug configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"Debug|x64\" /out \"Setup\\bin\\Build.Debug.x64.log\"\n%DEVENV% Sources\\Accord.NET.sln /Clean \"Debug|Any CPU\" /out \"Setup\\bin\\Build.Debug.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning Mono configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"Mono|Any CPU\" /out \"Setup\\bin\\Build.Mono.log\"\ntimeout /T 10\necho.\necho  - Cleaning NET35 configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net35|x64\" /out \"Setup\\bin\\Build.net35.x64.log\"\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net35|Any CPU\" /out \"Setup\\bin\\Build.net35.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning NET40 configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net40|x64\" /out \"Setup\\bin\\Build.net40.x64.log\"\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net40|Any CPU\" /out \"Setup\\bin\\Build.net40.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning NET45 configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net45|x64\" /out \"Setup\\bin\\Build.net45.x64.log\"\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net45|Any CPU\" /out \"Setup\\bin\\Build.net45.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning NET46 configuration...\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net46|x64\" /out \"Setup\\bin\\Build.net46.x64.log\"\n%DEVENV% Sources\\Accord.NET.sln /Clean \"net46|Any CPU\" /out \"Setup\\bin\\Build.net46.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning NETSTANDARD configuration...\n%DEVENV% \"Sources\\Accord.NET (NETStandard).sln\" /Clean \"netstandard|Any CPU\" /out \"Setup\\bin\\Build.netstandard.Any.log\"\ntimeout /T 10\necho.\necho  - Cleaning samples...\n%DEVENV% Samples\\Samples.sln /Clean Release /out \"Setup\\bin\\Build.Samples.log\"\ntimeout /T 10\necho.\ntimeout /T 10"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 0.8115234375,
          "content": "dnl Process this file with autoconf to produce a configure script.\nAC_INIT([accord], m4_esyscmd([tr -d '\\n' < Version.txt]))\nAM_INIT_AUTOMAKE([tar-ustar foreign])\n\nAC_PROG_INSTALL\n\ndnl pkg-config\nPKG_PROG_PKG_CONFIG([0.20])\n\nAC_PATH_PROG(XBUILD, xbuild, no)\nAC_PATH_PROG(MONO, mono, no)\n\nif test \"x$XBUILD\" = \"xno\"; then\n\tAC_MSG_ERROR([XBuild not found])\nfi\n\nif test \"x$MONO\" = \"xno\"; then\n\tAC_MSG_ERROR([No mono runtime found])\nfi\n\n# Check Mono version\nMONO_MINIMUM_VERSION=2.8\nPKG_CHECK_MODULES(MONO, mono >= $MONO_MINIMUM_VERSION)\n\nAC_SUBST(XBUILD)\nAC_SUBST(MONO)\n\n\nAC_CONFIG_FILES([\nMakefile\naccord.pc\n])\n\nAC_OUTPUT\n\ncat <<EOF\n\n${PACKAGE}-${VERSION}\n\n  Build Environment\n    Install Prefix:     \t${prefix}\n    XBuild Path:\t\t${XBUILD}\n    Mono Runtime:       \t${MONO}\n    Installation Directory: \t${prefix}/lib/${PACKAGE}/\n\nEOF\n"
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.58984375,
          "content": "**What would you like to submit?** (put an 'x' inside the bracket that applies)\n\n  - [ ] question\n  - [ ] bug report\n  - [ ] feature request\n\n**Issue description**\n\nIf you would like to submit an issue, please include a sample of the code you are trying to execute, as well as any data you might be using in your experiment, such as data tables, images, anything that might be necessary to reproduce the problem.\n  \nNote: If you would like to support the development for this feature or resolution of this bug, consider adding a bounty to it later in https://www.bountysource.com/teams/accord-net/issues\n"
        },
        {
          "name": "run-tests.cmd",
          "type": "blob",
          "size": 0.7607421875,
          "content": "@echo OFF\r\nsetlocal enabledelayedexpansion\r\n\r\nset TESTS=Unit Tests\\bin\\Release\\net45\\\r\nset NUNIT=\"Externals\\NUnit\\nunit-console-x86.exe\" \r\n\r\n:: Run unit tests in the Mono solution\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Audio.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Controls.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Core.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Imaging.dll\" \r\nset LIST=%LIST% \"%TESTS%Accord.Tests.IO.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.MachineLearning.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Math.dll\"\r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Neuro.dll\" \r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Vision.dll\" \r\nset LIST=%LIST% \"%TESTS%Accord.Tests.Statistics.dll\" \r\n\r\n%NUNIT% -noxml -nodots -labels /process=multiple %LIST% /framework:net-4.6\r\n\r\n \r\n \r\n\r\n"
        }
      ]
    }
  ]
}