{
  "metadata": {
    "timestamp": 1736711063689,
    "page": 832,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fullstackproltd/AspNetCoreSpa",
      "stars": 1487,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.318359375,
          "content": "**/.classpath\n**/.dockerignore\n**/.env\n**/.git\n**/.gitignore\n**/.project\n**/.settings\n**/.toolstarget\n**/.vs\n**/.vscode\n**/*.*proj.user\n**/*.dbmdl\n**/*.db\n**/*.jfm\n**/azds.yaml\n**/bin\n**/charts\n**/docker-compose*\n# **/Dockerfile*\n**/node_modules\n**/npm-debug.log\n**/obj\n**/secrets.dev.yaml\n**/values.dev.yaml\nLICENSE\nREADME.md"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.390625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n*.csproj.user\n**/ClientApp/coverage/**/**\n**/ClientApp/dist-server\n**/ClientApp/dist/**\n**/ClientApp/documentation\n/doc\n/documentation\n/logs\n/bin\n/obj\nstats.json\nClientApp/**/*.js.map\nnpm-debug.log*\n.awcache\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/*\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n## TODO: Comment the next line if you want to checkin your\n## web deploy settings but do note that will include unencrypted\n## passwords\n#*.pubxml\n\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.db\n*.db*\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n!sts_dev_cert.pfx\n*.publishsettings\nnode_modules/\nClientApp/node_modules/\nbower_components/\nwwwroot/dist\ncompiled\n\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\n.DS_Store\n\n**/.angular/cache\n**/.idea"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AspNetCoreSpa.sln",
          "type": "blob",
          "size": 5.9580078125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.5.002.0\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{C7F21EA9-86C8-4CB7-8EB0-311B72E8D641}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Integration.Tests\", \"tests\\Integration\\Integration.Tests.csproj\", \"{3C437ECE-E393-45C1-8764-0D6FFDFA1697}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Web.Tests\", \"tests\\Web\\Web.Tests.csproj\", \"{8124CEBD-A01B-43C2-AD34-EA26D5CC0571}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{67B7475D-DC94-4652-B6BA-16C20AF18BB3}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Core\", \"Core\", \"{1AA566A5-811A-4211-B7A1-7E2F33033F6B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Application\", \"src\\Core\\Application\\Application.csproj\", \"{3A83D58F-0753-4426-9447-A49A0794B2CC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Common\", \"src\\Core\\Common\\Common.csproj\", \"{98359214-1187-46B3-80F2-7B209A261BC8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Domain\", \"src\\Core\\Domain\\Domain.csproj\", \"{C1210808-631F-4053-B0C3-5E89AFFD9AB2}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Infrastructure\", \"Infrastructure\", \"{E7CD757A-733E-4B0A-9999-9FBA74B06CE2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Infrastructure\", \"src\\Infrastructure\\Infrastructure\\Infrastructure.csproj\", \"{4276C7D3-576C-43AF-88DD-D9DBFA644F1B}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Presentation\", \"Presentation\", \"{32A6286C-7BA9-4C53-A8AB-9CE0067DA171}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"STS\", \"src\\Presentation\\STS\\STS.csproj\", \"{48F016C7-1A9B-4578-BA39-7541D1D19EFB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Web\", \"src\\Presentation\\Web\\Web.csproj\", \"{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{3C437ECE-E393-45C1-8764-0D6FFDFA1697}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3C437ECE-E393-45C1-8764-0D6FFDFA1697}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3C437ECE-E393-45C1-8764-0D6FFDFA1697}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3C437ECE-E393-45C1-8764-0D6FFDFA1697}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8124CEBD-A01B-43C2-AD34-EA26D5CC0571}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8124CEBD-A01B-43C2-AD34-EA26D5CC0571}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8124CEBD-A01B-43C2-AD34-EA26D5CC0571}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8124CEBD-A01B-43C2-AD34-EA26D5CC0571}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3A83D58F-0753-4426-9447-A49A0794B2CC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3A83D58F-0753-4426-9447-A49A0794B2CC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3A83D58F-0753-4426-9447-A49A0794B2CC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3A83D58F-0753-4426-9447-A49A0794B2CC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{98359214-1187-46B3-80F2-7B209A261BC8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{98359214-1187-46B3-80F2-7B209A261BC8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{98359214-1187-46B3-80F2-7B209A261BC8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{98359214-1187-46B3-80F2-7B209A261BC8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C1210808-631F-4053-B0C3-5E89AFFD9AB2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C1210808-631F-4053-B0C3-5E89AFFD9AB2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C1210808-631F-4053-B0C3-5E89AFFD9AB2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C1210808-631F-4053-B0C3-5E89AFFD9AB2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4276C7D3-576C-43AF-88DD-D9DBFA644F1B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4276C7D3-576C-43AF-88DD-D9DBFA644F1B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4276C7D3-576C-43AF-88DD-D9DBFA644F1B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4276C7D3-576C-43AF-88DD-D9DBFA644F1B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{48F016C7-1A9B-4578-BA39-7541D1D19EFB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{48F016C7-1A9B-4578-BA39-7541D1D19EFB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{48F016C7-1A9B-4578-BA39-7541D1D19EFB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{48F016C7-1A9B-4578-BA39-7541D1D19EFB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{3C437ECE-E393-45C1-8764-0D6FFDFA1697} = {C7F21EA9-86C8-4CB7-8EB0-311B72E8D641}\n\t\t{8124CEBD-A01B-43C2-AD34-EA26D5CC0571} = {C7F21EA9-86C8-4CB7-8EB0-311B72E8D641}\n\t\t{1AA566A5-811A-4211-B7A1-7E2F33033F6B} = {67B7475D-DC94-4652-B6BA-16C20AF18BB3}\n\t\t{3A83D58F-0753-4426-9447-A49A0794B2CC} = {1AA566A5-811A-4211-B7A1-7E2F33033F6B}\n\t\t{98359214-1187-46B3-80F2-7B209A261BC8} = {1AA566A5-811A-4211-B7A1-7E2F33033F6B}\n\t\t{C1210808-631F-4053-B0C3-5E89AFFD9AB2} = {1AA566A5-811A-4211-B7A1-7E2F33033F6B}\n\t\t{E7CD757A-733E-4B0A-9999-9FBA74B06CE2} = {67B7475D-DC94-4652-B6BA-16C20AF18BB3}\n\t\t{4276C7D3-576C-43AF-88DD-D9DBFA644F1B} = {E7CD757A-733E-4B0A-9999-9FBA74B06CE2}\n\t\t{32A6286C-7BA9-4C53-A8AB-9CE0067DA171} = {67B7475D-DC94-4652-B6BA-16C20AF18BB3}\n\t\t{48F016C7-1A9B-4578-BA39-7541D1D19EFB} = {32A6286C-7BA9-4C53-A8AB-9CE0067DA171}\n\t\t{2BEE6BA1-4245-4DEC-9ECE-D02581875DC3} = {32A6286C-7BA9-4C53-A8AB-9CE0067DA171}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {8DDACBC6-B0DE-4B2E-B89A-C8650E147685}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2019 Asad Sahi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.1396484375,
          "content": "[![Actions Status Web](https://github.com/asadsahi/aspnetcorespa/workflows/Web/badge.svg)](https://github.com/asadsahi/aspnetcorespa/actions?query=workflow%3AWEB)\n[![Actions Status STS](https://github.com/asadsahi/aspnetcorespa/workflows/STS/badge.svg)](https://github.com/asadsahi/aspnetcorespa/actions?query=workflow%3ASTS)\n[![Build Status](https://asadsahi.visualstudio.com/playground/_apis/build/status/asadsahi.AspNetCoreSpa?branchName=master)](https://asadsahi.visualstudio.com/playground/_build/latest?definitionId=20&branchName=master)\n[![Build status](https://ci.appveyor.com/api/projects/status/35j3sxdi22rhg70c?svg=true)](https://ci.appveyor.com/project/asadsahi/aspnetcorespa)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\n## Features\n\n- [ASP.NET Core 7.0](http://www.dot.net/)\n- [Entity Framework Core 7.0](https://docs.efproject.net/en/latest/)\n  - Both Sql Server and Sql lite databases are supported (Check installation instrcutions for more details)\n- [Identity Server 4](http://identityserver.io/)\n- [Angular 15](https://angular.io/)\n- [Angular CLI 15](https://cli.angular.io/)\n- Secure - with CSP and custom security headers\n- [SignalR](https://github.com/aspnet/SignalR/)\n- [SASS](http://sass-lang.com/)\n- Best [practices](https://angular.io/docs/ts/latest/guide/style-guide.html) for Angular code organisation.\n- [Clean Architecture](https://github.com/jasontaylordev/CleanArchitecture) inspired from Jason Taylor.\n- [PWA support](https://developers.google.com/web/progressive-web-apps/)\n- Fast Unit Testing with [Jest](https://facebook.github.io/jest/).\n- E2E testing with [Protractor](http://www.protractortest.org).l\n- [Compodoc](https://compodoc.github.io/compodoc/) for Angular documentation\n- Login and Registration functionality using [Identity Server implicit flow](http://identityserver.io/)\n- Extensible User/Role identity implementation\n- Social logins support with token based authentication, using [Identity Server](http://identityserver.io/)\n- Angular dynamic forms for reusable and DRY code.\n- [Swagger](http://swagger.io/) as Api explorer (Visit url **https://127.0.0.1:5005/swagger** OR whatever port visual studio has launched the website.). More [details](https://github.com/domaindrivendev/Swashbuckle.AspNetCore)\n\n## Pre-requisites\n\n1. [.Net 7.0 SDK](https://www.microsoft.com/net/core#windows)\n2. [Visual studio 2019](https://www.visualstudio.com/) OR [VSCode](https://code.visualstudio.com/) with [C#](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp) extension\n3. [NodeJs](https://nodejs.org/en/) (Latest LTS)\n4. [Microsoft SQL Server](https://www.microsoft.com/en-us/sql-server) (Optional: If MS SQL server required instead of Sqlite during development)\n5. [Docker](https://www.docker.com/) (Optional: If application will run inside docker container)\n\n## Installation\n\n1. Clone the repo:\n\n   git clone https://github.com/asadsahi/AspNetCoreSpa\n\n2. Change directory:\n\n   cd AspNetCoreSpa\n\n3. Restore packages:\n\n   dotnet restore AspNetCoreSpa.sln\n\n4. Install npm packages:\n\n   - cd src/Presentation/Web/ClientApp:\n\n   - npm install\n\n5. Start Frontend:\n\n   - npm start\n\n6. Run Backend:\n\n   - Using [VSCode](https://code.visualstudio.com/):\n\n     - If you are running for the first time, install dev certificates using command:\n\n     ```\n     dotnet dev-certs https --trust\n     ```\n\n     - From debug menu select `Web` profile to run api application\n     - From debug menu select `STS` profile to run Identity Server application\n\n   - Using [Visual Studio IDE](https://www.visualstudio.com/):\n     - Run `Web` and `STS` projects either individually or by setting multiple projects in solutions properties and hit F5\n\n7. Target either Sqlite or Microsoft SQL Server\n\nThis project supports both databases OOTB.\n\n- Run with Sqlite: (Already configured to quickly run the project)\n\n  - Project is already setup with Sqlite specific database migrations\n\n- Run with Microsoft SQL Server:\n  - Delete `Migrations` folder from src/Infrastructure/Infrastructure/Persistence\n  - Change setting in appsettings.json called `useSqLite` from `true` to `false` and change `Web` connection string to your local Sql Server connection string\n\n7. Once the project is running use following test users to login:\n\n   2 Test users:\n   Username: admin@admin.com\n   Password: P@ssw0rd!\n   OR\n   Username: user@user.com\n   Password: P@ssw0rd!\n\n   Note: For production use Identity server hosted with appropriate configuration.\n\n# Managing Migrations\n\n## Make sure you have ef core global tools installed\n\n`dotnet tool install --global dotnet-ef`\n\n# Web Migrations\n\n## Using command line (from root of the project)\n\n### Create Migration\n\n`dotnet ef migrations add migrationname --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context ApplicationDbContext -o Persistence/Migrations`\n\n### Update database\n\n`dotnet ef database update --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context ApplicationDbContext`\n\n### Drop database\n\n`dotnet ef database drop --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context ApplicationDbContext`\n\n# Localization Migrations\n\n## Using command line (from root of the project)\n\n### Create Migration\n\n`dotnet ef migrations add migrationname --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context LocalizationDbContext -o Localization/Migrations`\n\n### Update database\n\n`dotnet ef database update --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context LocalizationDbContext`\n\n### Drop database\n\n`dotnet ef database drop --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context LocalizationDbContext`\n\n# Identity Migrations\n\n## Using command line (from root of the project)\n\n### Create Migration\n\n`dotnet ef migrations add migrationname --startup-project ./src/Presentation/STS --project ./src/Infrastructure/Infrastructure --context IdentityServerDbContext -o Identity/Migrations`\n\n### Update database\n\n`dotnet ef database update --startup-project ./src/Presentation/STS --project ./src/Infrastructure/Infrastructure --context IdentityServerDbContext`\n\n### Drop database\n\n`dotnet ef database drop --startup-project ./src/Presentation/STS --project ./src/Infrastructure/Infrastructure --context IdentityServerDbContext`\n\n# Other commands\n\n### Angular component scaffolding\n\nNote: You need to run commands from `src/Presentation/Web/ClientApp` directory: More information [here](https://angular.io/cli)\n\n### Angular tests - Using [Jest](https://jestjs.io/en/) and Angular jest [preset](https://github.com/thymikee/jest-preset-angular)\n\n```bash\ncd src/Presentation/Web/ClientApp\n\nnpm test\n```\n\n### Compodoc Angular documentation\n\n- Steps to generate:\n  - npm i compodoc -g\n  - cd src/Presentation/Web/ClientApp\n  - npm run compodoc\n  - cd documentation\n  - http-server\n\nCompodoc documentation: ![alt text](compodoc.jpg \"compodoc documentation\")\n\n````\n### run end-to-end tests\n```bash\n# make sure you have your server running in another terminal (i.e run \"dotnet run\" command)\nnpm run e2e\n````\n\n### run Protractor's elementExplorer (for end-to-end)\n\n```bash\nnpm run webdriver:start\n# in another terminal\nnpm run e2e:live\n```\n\n# Azure Deploy\n\n- You can set an environment variable for azure app deployment password\n  Set-Item -path env:AzureAppPass -value passwordhere\n\n```\nFrom powershell:\n./deploy-azure.ps1\n```\n\n# Deploy to heroku using its container service\n\n### Replace your app name where it is `aspnetcorespa`\n\n- dotnet publish -c release\n- docker build -t aspnetcorespa ./bin/release/net7.0/publish\n- heroku login\n- heroku container:login\n- docker tag aspnetcorespa registry.heroku.com/aspnetcorespa/web\n- docker push registry.heroku.com/aspnetcorespa/web\n  Note: There is a `deploy.heroku.ps1` script included with this project which automates above steps.\n\n# Deploy to Azure as App Service\n\nSet-Item -path env:AzureAppPass -value passwordhere\n\n```\nFrom powershell:\n./deploy-azure.ps1\n```\n\n---\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RB7XESV8CP7GW)\n"
        },
        {
          "name": "app_offline.htm",
          "type": "blob",
          "size": 0.1640625,
          "content": "<!DOCTYPE>\n<html>\n\n<head>\n    <title>Under Construction</title>\n</head>\n<bodyd>\n    <p>This page is under construction. Please come back soon!</p>\n    </body>\n\n</html>\u001a"
        },
        {
          "name": "compodoc.jpg",
          "type": "blob",
          "size": 105.4091796875,
          "content": null
        },
        {
          "name": "db.bat",
          "type": "blob",
          "size": 1.0458984375,
          "content": "@ECHO OFF\nCLS\ndel /S *.db\n\nFOR /d /r . %%d IN (\"Migrations\") DO @IF EXIST \"%%d\" rd /s /q \"%%d\"\n\ndotnet ef migrations add Initial --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context ApplicationDbContext -o Persistence/Migrations\ndotnet ef database update  --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context ApplicationDbContext\n\ndotnet ef migrations add Initial --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context LocalizationDbContext -o Localization/Migrations\ndotnet ef database update  --startup-project ./src/Presentation/Web --project ./src/Infrastructure/Infrastructure --context LocalizationDbContext\n\ndotnet ef migrations add Initial --startup-project ./src/Presentation/STS --project ./src/Infrastructure/Infrastructure --context IdentityServerDbContext -o Identity/Migrations\ndotnet ef database update  --startup-project ./src/Presentation/STS --project ./src/Infrastructure/Infrastructure --context IdentityServerDbContext\n\n"
        },
        {
          "name": "deploy.azure.ps1",
          "type": "blob",
          "size": 2.060546875,
          "content": "$webdeploy = \"C:\\Program Files (x86)\\IIS\\Microsoft Web Deploy V3\\msdeploy.exe\"\n$location = Get-Location | Select-Object $_.Path\n$packOutput = Join-Path $location \"bin\\Release\\netcoreapp2.1\\publish\"\n$app_offline = Join-Path $location \"app_offline.htm\"\n\n$iisApp = \"aspnetcorespa\"\n$computerName = \"https://aspnetcorespa.scm.azurewebsites.net/msdeploy.axd\"\n$username = \"\\`$aspnetcorespa\"\n$password = \"your password here\"\n\nfunction DeletePublishFolder()\n{\n\tif (Test-Path $packOutput)\n\t{\n\t\tWriteInfo \"Removing publish folder...\"\n\t\tRemove-Item -Force -Recurse $packOutput\n\t}\n}\n\nfunction Publish()\n{\n\tdotnet publish -c Release\n\tWriteSuccess \"Published!\"\n}\n\nfunction Deploy()\n{\n\t# Deploy app_offline file\n\t& $webdeploy -verb:sync -source:contentPath=$app_offline -dest:contentPath=$iisApp/app_offline.htm,ComputerName=$computerName,UserName=$username,Password=$password,IncludeAcls=\"False\",AuthType=\"Basic\" -retryAttempts:5 -allowUntrusted\n\t# Delete wwwroot folder\n\t& $webdeploy -verb:delete -dest:contentPath=$iisApp/wwwroot,ComputerName=$computerName,UserName=$username,Password=$password,IncludeAcls=\"False\",AuthType=\"Basic\" -retryAttempts:5 -allowUntrusted\n\t# Deploy published folder\n\t& $webdeploy -verb:sync -source:IisApp=$packOutput -dest:IisApp=$iisApp,ComputerName=$computerName,UserName=$username,Password=$password,IncludeAcls=\"False\",AuthType=\"Basic\" -enableRule:DoNotDeleteRule -disablerule:BackupRule -enableLink:contentLibExtension -retryAttempts:5 -allowUntrusted\n\t# Delete app_offline file\n\t& $webdeploy -verb:delete -dest:contentPath=$iisApp/app_offline.htm,ComputerName=$computerName,UserName=$username,Password=$password,IncludeAcls=\"False\",AuthType=\"Basic\" -retryAttempts:5 -allowUntrusted\n\n\tif ($LASTEXITCODE -ne 0)\n\t{\n\t\tWriteFailed \"Failed with code $LASTEXITCODE. Exiting...\"\n\t\tExit\n\t}\n\n\tWriteSuccess \"Deployment succeeded!\"\n}\n\nfunction WriteFailed($text)\n{\n\tWrite-Host $text -ForegroundColor Red\n}\n\nfunction WriteInfo($text)\n{\n\tWrite-Host $text -ForegroundColor Cyan\n}\n\nfunction WriteSuccess($text)\n{\n\tWrite-Host $text -ForegroundColor Green\n}\n\n# -----------\n\nDeletePublishFolder\nPublish\nDeploy"
        },
        {
          "name": "deploy.heroku.ps1",
          "type": "blob",
          "size": 1.05859375,
          "content": "$location = Get-Location | Select-Object $_.Path\n$packOutput = Join-Path $location \"bin\\Release\\netcoreapp2.0\\publish\"\n\n$appName = \"aspnetcorespa\"\n\nfunction DeletePublishFolder()\n{\n\tif (Test-Path $packOutput)\n\t{\n\t\tWriteInfo \"Removing publish folder...\"\n\t\tRemove-Item -Force -Recurse $packOutput\n\t}\n}\n\nfunction Publish()\n{\n\tdotnet publish -c Release\n\tWriteSuccess \"Published!\"\n}\n\nfunction Deploy()\n{\n\t# Build image\n\t& docker build -t $appName $packOutput\n\t# Login heroku container service\n\t& heroku container:login\n\t# Tag image to be deployed\n\t& docker tag $appName registry.heroku.com/$appName/web\n\t# Deploy to heroku container\n\t& docker push registry.heroku.com/$appName/web\n\n\tif ($LASTEXITCODE -ne 0)\n\t{\n\t\tWriteFailed \"Failed with code $LASTEXITCODE. Exiting...\"\n\t\tExit\n\t}\n\n\tWriteSuccess \"Deployment succeeded!\"\n}\n\nfunction WriteFailed($text)\n{\n\tWrite-Host $text -ForegroundColor Red\n}\n\nfunction WriteInfo($text)\n{\n\tWrite-Host $text -ForegroundColor Cyan\n}\n\nfunction WriteSuccess($text)\n{\n\tWrite-Host $text -ForegroundColor Green\n}\n\n# -----------\n\nDeletePublishFolder\nPublish\nDeploy"
        },
        {
          "name": "docker-compose.dcproj",
          "type": "blob",
          "size": 0.716796875,
          "content": "ï»¿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"15.0\" Sdk=\"Microsoft.Docker.Sdk\">\n  <PropertyGroup Label=\"Globals\">\n    <ProjectVersion>2.1</ProjectVersion>\n    <DockerTargetOS>Linux</DockerTargetOS>\n    <ProjectGuid>a345da20-825c-4494-9dc6-748c1192e135</ProjectGuid>\n    <DockerLaunchAction>LaunchBrowser</DockerLaunchAction>\n    <DockerServiceUrl>{Scheme}://localhost:{ServicePort}</DockerServiceUrl>\n    <DockerServiceName>aspnetcorespaweb</DockerServiceName>\n  </PropertyGroup>\n  <ItemGroup>\n    <None Include=\"docker-compose.override.yml\">\n      <DependentUpon>docker-compose.yml</DependentUpon>\n    </None>\n    <None Include=\"docker-compose.yml\" />\n    <None Include=\".dockerignore\" />\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "docker-compose.override.yml",
          "type": "blob",
          "size": 0.6806640625,
          "content": "version: \"3.6\"\n\nservices:\n  aspnetcorespa:\n    environment:\n      - ASPNETCORE_ENVIRONMENT=Development\n      - ASPNETCORE_URLS=https://+:443;http://+:80\n      - ASPNETCORE_HTTPS_PORT=5005\n    ports:\n      - \"5005:443\"\n    volumes:\n      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro\n      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro\n  \n  aspnetcorests:\n    environment:\n      - ASPNETCORE_ENVIRONMENT=Development\n      - ASPNETCORE_URLS=https://+:443;http://+:80\n      - ASPNETCORE_HTTPS_PORT=5007\n    ports:\n      - \"5007:443\"\n    volumes:\n      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro\n      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.408203125,
          "content": "version: \"3.6\"\n\nservices:\n  aspnetcorespa:\n    image: ${DOCKER_REGISTRY-}aspnetcorespa\n    build:\n      context: .\n      dockerfile: src/Presentation/Web/Dockerfile\n    networks:\n      - app-network\n\n  aspnetcorests:\n    image: ${DOCKER_REGISTRY-}aspnetcorests\n    build:\n      context: .\n      dockerfile: src/Presentation/STS/Dockerfile\n    networks:\n      - app-network\n\nnetworks:\n  app-network:\n    driver: bridge\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}