{
  "metadata": {
    "timestamp": 1736711057257,
    "page": 818,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Squalr/Squalr",
      "stars": 1516,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.87890625,
          "content": "## Squalr specific\n\nLayout.xml\nSqualrCompiled.nuspec\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n.vs\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Pp]ublish/*\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Squirrel / Published NuGet Packages\n*.nupkg\nlib/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n## TODO: Comment the next line if you want to checkin your\n## web deploy settings but do note that will include unencrypted\n## passwords\n#*.pubxml\n\n# NuGet Packages Directory\npackages/*\n## TODO: If the tool you use requires repositories.config\n## uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since\n# NuGet packages use it for MSBuild targets.\n# This line needs to be after the ignore of the build folder\n# (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\nbower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.94140625,
          "content": "# Squalr\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0)\n\n[Squalr Official Website](https://www.squalr.com)\n\nJoin us on our [Discord Channel](https://discord.gg/Pq2msTx)\n\n**Squalr** is performant Memory Editing software that allows users to create and share cheats in their windows desktop games. This includes memory scanning, pointers, x86/x64 assembly injection, and so on.\n\nSqualr achieves fast scans through multi-threading combined with SIMD instructions. See this article: [SIMD in .NET](https://instil.co/2016/03/21/parallelism-on-a-single-core-simd-with-c/). To take advantage of these gains, your CPU needs to have support for SSE, AVX, or AVX-512.\n\n![SqualrGUI](Documentation/Squalr.png)\n\n## Documentation\n\nYou can find detailed documentation on the [Wiki](https://squalr.github.io/SqualrDocs/). There are three ways to use Squalr:\n- Front end GUI\n- Scripting API\n- Back end NuGet packages\n\nBelow is some brief documentation on the NuGet package APIs\n\n### Receiving Engine Output:\nIf using the NuGet packages, it is important to hook into the engine's output to receive logs of events. These are invaluable for diagnosing issues.\n\n```csharp\nusing Squalr.Engine.Logging;\n\n...\n\n// Receive logs from the engine\nLogger.Subscribe(new EngineLogEvents());\n\n...\n\nclass EngineLogEvents : ILoggerObserver\n{\n\tpublic void OnLogEvent(LogLevel logLevel, string message, string innerMessage)\n\t{\n\t\tConsole.WriteLine(message);\n\t\tConsole.WriteLine(innerMessage);\n\t}\n}\n```\n\n### Attaching The Engine\n```csharp\nusing Squalr.Engine.OS;\n...\n\nIEnumerable<Process> processes = Processes.Default.GetProcesses();\n\n// Pick a process. For this example, we are just grabbing the first one.\nProcess process = processes.FirstOrDefault();\n\nProcesses.Default.OpenedProcess = process;\n\n```\n\n\n### Manipulating Memory:\n\n```csharp\nusing Squalr.Engine.Memory;\n\n...\n\nReader.Default.Read<Int32>(address);\nWriter.Default.Write<Int32>(address);\nAllocator.Alloc(address, 256);\nIEnumerable<NormalizedRegion> regions = Query.GetVirtualPages(requiredProtection, excludedProtection, allowedTypes, startAddress, endAddress);\nIEnumerable<NormalizedModule> modules = Query.GetModules();\n```\n\n### Assembling/Disassembling:\nSqualr can assemble and disassemble x86/x64 instructions, leveraging NASM.\n\n```csharp\nusing Squalr.Engine.Architecture;\nusing Squalr.Engine.Architecture.Assemblers;\n\n...\n\n// Perform assembly\nAssemblerResult result = Assembler.Default.Assemble(assembly: \"mov eax, 5\", isProcess32Bit: true, baseAddress: 0x10000);\n\nConsole.WriteLine(BitConverter.ToString(result.Bytes).Replace(\"-\", \" \"));\n\n// Disassemble the result (we will get the same instructions back)\nInstruction[] instructions = Disassembler.Default.Disassemble(bytes: result.Bytes, isProcess32Bit: true, baseAddress: 0x10000);\n\nConsole.WriteLine(instructions[0].Mnemonic);\n```\n\n### Scanning:\nSqualr has an API for performing high performance memory scanning:\n\n```csharp\nusing Squalr.Engine.Scanning;\nusing Squalr.Engine.Scanning.Scanners;\nusing Squalr.Engine.Scanning.Scanners.Constraints;\nusing Squalr.Engine.Scanning.Snapshots;\n\n...\n\nDataType dataType = DataType.Int32;\n\n// Collect values\nTrackableTask<Snapshot> valueCollectorTask = ValueCollector.CollectValues(\n\tSnapshotManager.GetSnapshot(Snapshot.SnapshotRetrievalMode.FromActiveSnapshotOrPrefilter, dataType));\n\n// Perform manual scan on value collection complete\nvalueCollectorTask.CompletedCallback += ((completedValueCollection) =>\n{\n\tSnapshot snapshot = completedValueCollection.Result;\n\t\n\t// Constraints\n\tScanConstraintCollection scanConstraints = new ScanConstraintCollection();\n\tscanConstraints.AddConstraint(new ScanConstraint(ScanConstraint.ConstraintType.Equal, 25));\n\n\tTrackableTask<Snapshot> scanTask = ManualScanner.Scan(\n\t\tsnapshot,\n\t\tallScanConstraints);\n\n\tSnapshotManager.SaveSnapshot(scanTask.Result);\n});\n\t\n\t\nfor (UInt64 index = 0; index < snapshot.ElementCount; index++)\n{\n\tSnapshotElementIndexer element = snapshot[index];\n\n\tObject currentValue = element.HasCurrentValue() ? element.LoadCurrentValue() : null;\n\tObject previousValue = element.HasPreviousValue() ? element.LoadPreviousValue() : null;\n}\n```\n\n### Debugging:\n\n```csharp\n// Example: Tracing write events on a float\nBreakpointSize size = Debugger.Default.SizeToBreakpointSize(sizeof(float));\nCancellationTokenSource cancellationTokenSource = Debugger.Default.FindWhatWrites(0x10000, size, this.CodeTraceEvent);\n\n...\n\n// When finished, cancel the instruction collection\ncancellationTokenSource.cancel();\n\n...\n\nprivate void CodeTraceEvent(CodeTraceInfo codeTraceInfo)\n{\n\tConsole.WriteLine(codeTraceInfo.Instruction.Address.ToString(\"X\"));\n\tConsole.WriteLine(codeTraceInfo.Instruction.Mnemonic);\n}\n```\n\t\n## Recommended Visual Studio Extensions\nReference | Description \n--- | ---\n[XAML Formatter](https://marketplace.visualstudio.com/items?itemName=TeamXavalon.XAMLStyler) | XAML should be run through this formatter\n[StyleCop](https://marketplace.visualstudio.com/items?itemName=ChrisDahlberg.StyleCop) | StyleCop to enforce code conventions. Note that we deviate on some standard conventions. We use the full type name for variables (ex Int32 rather than int). The reasoning is that this is a memory editor, so we prefer to use the type name that is most explicit to avoid coding mistakes.\n\n## Build\n\nIn order to compile Squalr, you should only need **Visual Studio 2017**. This should be up to date, we frequently update Squalr to use the latest version of the .NET framework. Here are the important 3rd party libraries that this project uses:\n\nLibrary | Description \n--- | ---\n[EasyHook](https://github.com/EasyHook/EasyHook) | Managed/Unmanaged API Hooking\n[SharpDisasm](https://github.com/spazzarama/SharpDisasm) | Udis86 Assembler Ported to C#\n[CsScript](https://github.com/oleg-shilo/cs-script) | C# Scripting Library\n[AvalonEdit](https://github.com/icsharpcode/AvalonEdit) | Code Editing Library\n[SharpDX](https://github.com/sharpdx/SharpDX) | DirectX Wrapper\n[CLRMD](https://github.com/Microsoft/clrmd) | .NET Application Inspection Library\n[AvalonDock](https://avalondock.codeplex.com/) | Docking Library\n[LiveCharts](https://github.com/beto-rodriguez/Live-Charts) | WPF Charts\n\n## Planned Features\n\nLibrary | Description | Purpose\n--- | --- | ---\n[AsmJit](https://github.com/hypeartist/AsmJit) | x86/x64 Assembler | Replace FASM, improve scripting drastically\n[AsmJit](https://github.com/asmjit/asmjit) | x86/x64 Assembler | Original C++ project. May port/interop this if the above version does not work (Neither may fully work, and something custom may be needed)\n[WpfHexEditorControl](https://github.com/abbaye/WpfHexEditorControl) | Hex Editor | Hex editor / Memory Hex Editor\n[OpenTK](https://github.com/opentk/opentk) | OpenGL Wrapper | Graphics Injection\n[SharpDX](https://github.com/sharpdx/SharpDX) | DirectX Wrapper | Graphics Injection (Currently using SharpDX just for input)\n[SharpPCap](https://github.com/chmorgan/sharppcap) | Packet Capture | Packet Editor\n[Packet.Net](https://github.com/antmicro/Packet.Net) | Packet Capture | Packet Editor\n"
        },
        {
          "name": "Release.ps1",
          "type": "blob",
          "size": 2.79296875,
          "content": "<#\n[Environment]::CurrentDirectory = Get-Location -PSProvider FileSystem\n\n# Parse assembly info from the project\n$assemblyInfoPath = \"./Squalr/Properties/AssemblyInfo.cs\"\n$assemblyInfo = [IO.File]::ReadAllText($assemblyInfoPath)\n$title = $assemblyInfo | Select-String -Pattern 'AssemblyTitle\\(\".+\"\\)' -AllMatches | % { $_.Matches } | % { $_.Value } | %{$_.split('\"')[1]}\n$version = $assemblyInfo | Select-String -Pattern 'AssemblyVersion\\(\".+\"\\)' -AllMatches | % { $_.Matches } | % { $_.Value } | %{$_.split('\"')[1]}\n$description = $assemblyInfo | Select-String -Pattern 'AssemblyDescription\\(\".+\"\\)' -AllMatches | % { $_.Matches } | % { $_.Value } | %{$_.split('\"')[1]}\n\n# Variables and paths\n$releasesRoot = \"Releases\"\n$sourceRoot = \"Squalr/bin/Release/*\"\n$destinationRoot = \"lib/net45\"\n$exclude = @('*.pdb')\n$nugetFile = \"Squalr.nuspec\"\n$nugetFilePath = \"./$nugetFile\"\n$compiledNugetFile = \"SqualrCompiled.nuspec\"\n$compiledNugetFilePath = \"./$compiledNugetFile\"\n$package = \"Squalr.$version.nupkg\"\n$squirrel= \"packages/squirrel.windows.1.8.0/tools/Squirrel.exe\"\n$cert = [Environment]::GetEnvironmentVariables(\"User\")[\"SQUALR_CODE_SIGN_CERT\"]\n$pass = [Environment]::GetEnvironmentVariables(\"User\")[\"SQUALR_CODE_SIGN_PASS\"]\n\n# Delete old releases\nRemove-Item $releasesRoot -Force -Recurse -ErrorAction Ignore\n\n# Compile new nuspec file using variables from assembly info\n$nuspec = [IO.File]::ReadAllText($nugetFilePath)\n$nuspec = $nuspec.Replace('$id$', $title)\n$nuspec = $nuspec.Replace('$title$', $title)\n$nuspec = $nuspec.Replace('$version$', $version)\n$nuspec = $nuspec.Replace('$description$', $description)\n[IO.File]::WriteAllText($compiledNugetFilePath, $nuspec)\n\n# Remove old files, copy new files to a location in preparation for Squirrel\nRemove-Item $destinationRoot -Force -Recurse -ErrorAction Ignore\nNew-Item -ItemType Directory -Force -Path $destinationRoot\nCopy-Item -Path $sourceRoot -Recurse -Destination $destinationRoot -Container -Force -Exclude $exclude\n\n# Build nuget package\nInvoke-Expression \"nuget pack $($compiledNugetFile) -Properties Configuration=Release\"\n#>\n\n# Build Release\ndotnet publish -c Release -o \".\\publish\" \n\n# Find Squirrel.exe path and add an alias\nSet-Alias Squirrel ($env:USERPROFILE + \"\\.nuget\\packages\\clowd.squirrel\\2.9.42\\tools\\Squirrel.exe\");\n\n# Download currently live version\nSquirrel http-down --url \"https://github.com/Squalr/Squalr\"\n\n$xml = [Xml] (Get-Content .\\Squalr\\Squalr.csproj)\n$version = [Version] $xml.Project.PropertyGroup.AssemblyVersion\n\n# build new version and delta updates.\nSquirrel pack --framework net7 --packId \"Squalr\" --packVersion \"$version\" --packAuthors \"Squalr, Inc.\" --packDir \".\\publish\" --icon \"Squalr/AppIcon.ico\" # --splashImage \"install.gif\"`\n\n# Remove temporary files\n# Remove-Item $compiledNugetFile -Force -ErrorAction Ignore\n# Remove-Item $package -Force -ErrorAction Ignore"
        },
        {
          "name": "Release.py",
          "type": "blob",
          "size": 1.4697265625,
          "content": "#!/usr/bin/env python3\n\n####################################################################################\n# This script will generate all cpp/h files from data in the Data directory.       #\n# Run this script every time data files are updated in the Squally/Data directory. #\n###################################################################################$\n\nfrom os import listdir\nfrom os import path\nfrom os.path import isfile, join, splitext, abspath, realpath, basename, relpath\nimport json\nimport os\nimport re\nimport sys\n\nimport importlib.util\n\ndef main():\n    currentPath = os.path.dirname(__file__)\n    \n    for root, dirnames, filenames in os.walk(currentPath):\n        for filename in filenames:\n            if filename.lower().endswith(\".csproj\"):\n                replaceVersionInFile(join(root, filename), \"3.0.2\")\n                continue\n\t\ndef replaceVersionInFile(filename, newVersion):\n    fin = open(filename, \"r\")\n    \n    lines = []\n\n    for line in fin:\n        line = re.sub(\"<Version>.+</Version>\", \"<Version>\" + newVersion + \"</Version>\", line)\n        line = re.sub(\"<AssemblyVersion>.+</AssemblyVersion>\", \"<AssemblyVersion>\" + newVersion + \"</AssemblyVersion>\", line)\n        line = re.sub(\"<FileVersion>.+</FileVersion>\", \"<FileVersion>\" + newVersion + \"</FileVersion>\", line)\n        lines.append(line)\n       \n    fin.close()\n    \n    fout = open(filename, \"w\") \n    for line in lines:\n        fout.write(line)\n    fout.close()\n    \nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "Settings.StyleCop",
          "type": "blob",
          "size": 1.1982421875,
          "content": "<StyleCopSettings Version=\"105\">\n  <Analyzers>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.ReadabilityRules\">\n      <Rules>\n        <Rule Name=\"UseBuiltInTypeAlias\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n        <Rule Name=\"PrefixCallsCorrectly\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.DocumentationRules\">\n      <Rules>\n        <Rule Name=\"FileMustHaveHeader\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n    <Analyzer AnalyzerId=\"StyleCop.CSharp.OrderingRules\">\n      <Rules>\n        <Rule Name=\"SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives\">\n          <RuleSettings>\n            <BooleanProperty Name=\"Enabled\">False</BooleanProperty>\n          </RuleSettings>\n        </Rule>\n      </Rules>\n      <AnalyzerSettings />\n    </Analyzer>\n  </Analyzers>\n</StyleCopSettings>"
        },
        {
          "name": "Squalr.Cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Architecture",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Debugger",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Input",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Memory",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Processes",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Scanning",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Scripting",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine.Utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.Engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "Squalr.nuspec",
          "type": "blob",
          "size": 0.55078125,
          "content": "<?xml version=\"1.0\"?>\n<package >\n  <metadata>\n    <id>$id$</id>\n    <title>$title$</title>\n    <version>$version$</version>\n    <authors>Zachary Canann</authors>\n    <owners>Zachary Canann</owners>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <description>$description$</description>\n    <releaseNotes>n/a</releaseNotes>\n    <copyright>Copyright 2021 Squalr Inc.</copyright>\n    <tags>Squalr memory editor game hacking</tags>\n    <dependencies>\n    </dependencies>\n  </metadata>\n  <files>\n    <file src=\"lib/net45/**\" />\n  </files>\n</package>"
        },
        {
          "name": "Squalr.sln",
          "type": "blob",
          "size": 16.044921875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.28621.142\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Squalr\", \"Squalr\", \"{B9D21C46-8963-4377-AEAD-A891F3D618A9}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Engine\", \"Engine\", \"{F853488B-5AC3-464C-86D7-32B33051E885}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Scripting\", \"Squalr.Engine.Scripting\\Squalr.Engine.Scripting.csproj\", \"{0612F4DC-E843-4DD6-8856-98DAD0033DE3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Memory\", \"Squalr.Engine.Memory\\Squalr.Engine.Memory.csproj\", \"{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine\", \"Squalr.Engine\\Squalr.Engine.csproj\", \"{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Debuggers\", \"Squalr.Engine.Debugger\\Squalr.Engine.Debuggers.csproj\", \"{930C55EE-A79F-4F06-B843-0AE9CC375217}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Architecture\", \"Squalr.Engine.Architecture\\Squalr.Engine.Architecture.csproj\", \"{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Input\", \"Squalr.Engine.Input\\Squalr.Engine.Input.csproj\", \"{53A598F0-69ED-4311-848E-5F74B4AE8E3F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Scanning\", \"Squalr.Engine.Scanning\\Squalr.Engine.Scanning.csproj\", \"{47FAFF79-44F7-4505-91CA-A2BE28915EE2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Projects\", \"Squalr.Engine.Projects\\Squalr.Engine.Projects.csproj\", \"{3278CCD2-5997-44F9-9237-9F15EF51CB91}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Cli\", \"Squalr.Cli\\Squalr.Cli.csproj\", \"{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Processes\", \"Squalr.Engine.Processes\\Squalr.Engine.Processes.csproj\", \"{AD766F54-5CED-433C-B654-3013A1BAF699}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr.Engine.Common\", \"Squalr.Engine.Utils\\Squalr.Engine.Common.csproj\", \"{323AE452-B9CC-4F37-87B7-B75875318944}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Squalr\", \"Squalr\\Squalr.csproj\", \"{C558912D-FC6A-432D-BE56-6AD42ACEF934}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3}.Release|x86.Build.0 = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|x64.Build.0 = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF}.Release|x86.Build.0 = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|x64.Build.0 = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3}.Release|x86.Build.0 = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|x64.Build.0 = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217}.Release|x86.Build.0 = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|x64.Build.0 = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407}.Release|x86.Build.0 = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|x64.Build.0 = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F}.Release|x86.Build.0 = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|x64.Build.0 = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2}.Release|x86.Build.0 = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|x64.Build.0 = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91}.Release|x86.Build.0 = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|x64.Build.0 = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7}.Release|x86.Build.0 = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|x64.Build.0 = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699}.Release|x86.Build.0 = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|x64.Build.0 = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944}.Release|x86.Build.0 = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|x64.Build.0 = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{0612F4DC-E843-4DD6-8856-98DAD0033DE3} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{77E64E71-8E26-4311-9C10-61D4CAFD4FEF} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{0B78BEBF-D43F-431C-8A5F-9734C6FDA1B3} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{930C55EE-A79F-4F06-B843-0AE9CC375217} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{BF9B9BD8-1EC3-4F09-B90E-9F822FFAF407} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{53A598F0-69ED-4311-848E-5F74B4AE8E3F} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{47FAFF79-44F7-4505-91CA-A2BE28915EE2} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{3278CCD2-5997-44F9-9237-9F15EF51CB91} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{971F0C17-E28F-4DFA-86D0-FC9B9AB562F7} = {B9D21C46-8963-4377-AEAD-A891F3D618A9}\n\t\t{AD766F54-5CED-433C-B654-3013A1BAF699} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{323AE452-B9CC-4F37-87B7-B75875318944} = {F853488B-5AC3-464C-86D7-32B33051E885}\n\t\t{C558912D-FC6A-432D-BE56-6AD42ACEF934} = {B9D21C46-8963-4377-AEAD-A891F3D618A9}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F948D667-14E3-4F98-BA50-3F3C948BF4C2}\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = GeckoFxTest\\GeckoFxTest.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = GeckoFxTest\\GeckoFxTest.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = GeckoFxTest\\GeckoFxTest.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = GeckoFxTest\\GeckoFxTest.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = GeckoFxTest\\GeckoFxTest.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = Source\\Examples\\OpenTK.Examples.csproj\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = Nancy.Demo.Hosting.Aspnet\\Nancy.Demo.Hosting.Aspnet.csproj\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "Squalr",
          "type": "tree",
          "content": null
        },
        {
          "name": "SqualrStream",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}