{
  "metadata": {
    "timestamp": 1736710684530,
    "page": 43,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MapsterMapper/Mapster",
      "stars": 4412,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.5859375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# NuGet Packages Directory\npackages/\n## TODO: If the tool you use requires repositories.config uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n# This line needs to be after the ignore of the build folder (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Deploy directories\ndeploy/archive\ndeploy/output\n/src/.vs/config\nproject.lock.json\n/src/.vs\n/.vs\nsrc/.idea\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.080078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Chaowlert Chaisrichalermpol, Eric Swann\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6669921875,
          "content": "![Mapster Icon](https://cloud.githubusercontent.com/assets/5763993/26522718/d16f3e42-4330-11e7-9b78-f8c7402624e7.png)\n\n## Mapster - The Mapper of Your Domain\nWriting mapping methods is a machine job. Do not waste your time, let Mapster do it.\n\n[![NuGet](https://img.shields.io/nuget/v/Mapster.svg)](https://www.nuget.org/packages/Mapster)\n\n### Installation\nInstall Mapster with the NuGet CLI:\n```\nInstall-Package Mapster\n```\n\nOr use the .NET core CLI to install Mapster:\n```\ndotnet add package Mapster\n```\n\n### Basic usage\n#### Mapping to a new object\nMapster creates the destination object and maps values to it.\n\n```csharp\nvar destObject = sourceObject.Adapt<Destination>();\n```\n\n#### Mapping to an existing object\nYou create the object, Mapster maps to the object.\n\n```csharp\nsourceObject.Adapt(destObject);\n```\n\n#### You can get IMapper instance via dependency injection so you do not have to change code when migrating to mapster from automapper\nAdd Mapster to service collection\n```csharp\nservices.AddMapster();\n```\nAnd use it with DI\n```csharp\npublic class Test\n{\n    public Test(IMapper mapper)\n    {\n        var sourceObject = mapper.Adapt<Destination>();\n    }\n}\n```\n\n#### Queryable Extensions\nMapster also provides extensions to map queryables.\n\n```csharp\nusing (MyDbContext context = new MyDbContext())\n{\n    // Build a Select Expression from DTO\n    var destinations = context.Sources.ProjectToType<Destination>().ToList();\n\n    // Versus creating by hand:\n    var destinations = context.Sources.Select(c => new Destination {\n        Id = c.Id,\n        Name = c.Name,\n        Surname = c.Surname,\n        ....\n    })\n    .ToList();\n}\n```\n\n#### Generating models & mappers\nNo need to write your own DTO classes. Mapster provides [Mapster.Tool](https://github.com/MapsterMapper/Mapster/wiki/Mapster.Tool) to help you generating models. And if you would like to have explicit mapping, Mapster also generates mapper class for you.\n\n```csharp\n[AdaptTo(\"[name]Dto\"), GenerateMapper]\npublic class Student {\n    ...\n}\n```\n\nThen Mapster will generate:\n```csharp\npublic class StudentDto {\n    ...\n}\npublic static class StudentMapper {\n    public static StudentDto AdaptToDto(this Student poco) { ... }\n    public static StudentDto AdaptTo(this Student poco, StudentDto dto) { ... }\n    public static Expression<Func<Student, StudentDto>> ProjectToDto => ...\n}\n```\n\n### What's new\n- [Fluent API for code generation](https://github.com/MapsterMapper/Mapster/wiki/Fluent-API-Code-generation)\n- [Automatically generate mapping code on build](https://github.com/MapsterMapper/Mapster/wiki/Mapster.Tool)\n- [Define setting to nested mapping](https://github.com/MapsterMapper/Mapster/wiki/Config-for-nested-mapping)\n- [`ISet`, `IDictionary`, `IReadOnlyDictionary` support](https://github.com/MapsterMapper/Mapster/wiki/Data-types#collections)\n- [`EmptyCollectionIfNull`, `CreateNewIfNull` DestinationTransform](https://github.com/MapsterMapper/Mapster/wiki/Setting-values#transform-value)\n- [Several fixes](https://github.com/MapsterMapper/Mapster/releases/)\n- New plugins\n  - [Immutable collection support](https://github.com/MapsterMapper/Mapster/wiki/Immutable)\n\n### Why Mapster?\n#### Performance & Memory efficient\nMapster was designed to be efficient on both speed and memory. You could gain a 4x performance improvement whilst using only 1/3 of memory.\nAnd you could gain up to 12x faster performance with\n- [Roslyn Compiler](https://github.com/MapsterMapper/Mapster/wiki/Debugging)\n- [FEC](https://github.com/MapsterMapper/Mapster/wiki/FastExpressionCompiler)\n- Code generation\n\n|                    Method |      Mean |    StdDev |     Error |      Gen 0 | Gen 1 | Gen 2 | Allocated |\n|-------------------------- |----------:|----------:|----------:|-----------:|------:|------:|----------:|\n|           'Mapster 6.0.0' | 108.59 ms |  1.198 ms |  1.811 ms | 31000.0000 |     - |     - | 124.36 MB |\n|  'Mapster 6.0.0 (Roslyn)' |  38.45 ms |  0.494 ms |  0.830 ms | 31142.8571 |     - |     - | 124.36 MB |\n|     'Mapster 6.0.0 (FEC)' |  37.03 ms |  0.281 ms |  0.472 ms | 29642.8571 |     - |     - | 118.26 MB |\n| 'Mapster 6.0.0 (Codegen)' |  34.16 ms |  0.209 ms |  0.316 ms | 31133.3333 |     - |     - | 124.36 MB |\n|     'ExpressMapper 1.9.1' | 205.78 ms |  5.357 ms |  8.098 ms | 59000.0000 |     - |     - | 236.51 MB |\n|       'AutoMapper 10.0.0' | 420.97 ms | 23.266 ms | 35.174 ms | 87000.0000 |     - |     - | 350.95 MB |\n\n\n\n#### Step into debugging\n\n[Step-into debugging](https://github.com/MapsterMapper/Mapster/wiki/Debugging) lets you debug your mapping and inspect values just like your code.\n![image](https://cloud.githubusercontent.com/assets/5763993/26521773/180427b6-431b-11e7-9188-10c01fa5ba5c.png)\n\n#### Code Generation\nCode generation allows you to\n- Validate mapping at compile time\n- Getting raw performance\n- Seeing your mapping code & debugging\n- Finding usage of your models' properties\n\nThere are currently two tools which you can choose based on your preferences.\n* [Mapster.Tool](https://github.com/MapsterMapper/Mapster/wiki/Mapster.Tool) NEW!\n* [TextTemplate](https://github.com/MapsterMapper/Mapster/wiki/TextTemplate)\n\n### Change logs\nhttps://github.com/MapsterMapper/Mapster/releases\n\n### Usages\n* [English](https://github.com/MapsterMapper/Mapster/wiki)\n* [中文文档](https://github.com/rivenfx/Mapster-docs) (sp thx to [@staneee](https://github.com/staneee))\n\n### Acknowledgements\n\n[JetBrains](https://www.jetbrains.com/?from=Mapster) kindly provides Mapster with a free open-source licence for their Resharper and Rider.\n- **Resharper** makes Visual Studio a much better IDE\n- **Rider** is fast & powerful cross platform .NET IDE\n\n![image](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/JetBrains_Logo_2016.svg/121px-JetBrains_Logo_2016.svg.png)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}