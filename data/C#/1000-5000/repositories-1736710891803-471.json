{
  "metadata": {
    "timestamp": 1736710891803,
    "page": 471,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SnaffCon/Snaffler",
      "stars": 2206,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.9853515625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n.idea/\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.sln.DotSettings\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*[.json, .xml, .info]\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n**/.DS_Store\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.32421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.177734375,
          "content": "# Snaffler \n\n[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/T6T31VEVJ)\n\n![A dictionary definition of \"snaffle\".](./snaffler.png)\n\n## What is it for? \n\nSnaffler is a tool for **pentesters** and **red teamers** to help find delicious candy needles (creds mostly, but it's flexible) in a bunch of horrible boring haystacks (a massive Windows/AD environment).\n\nIt might also be useful for other people doing other stuff, but it is explicitly NOT meant to be an \"audit\" tool.\n\n## I don't want to read all this!!!\n\nUgh, fine. But we aren't responsible for the results. We wrote all this other stuff for you, but that's okay. We're not mad, just disappointed.\n\n`snaffler.exe -s -o snaffler.log`\n\n## What does it do?\n\n*Broadly speaking* - it gets a list of Windows computers from Active Directory, then spreads out its snaffly appendages to them all to figure out which ones have file shares, and whether you can read them. \n\nThen YET MORE snaffly appendages enumerate all the files in those shares and use **L**EARNED **A**RTIFACTUAL **I**NTELLIGENCE for **M**ACHINES to figure out which ones a grubby little hacker like you might want. \n\nActually it doesn't do any ML stuff, because doing that right would require training data, and that would require an enormous amount of time that we don't have. Instead, like all good \"ML\" projects, it just uses a shitload of `if` statements and regexen.\n\n## What does it look like?\n\nLike this!\n\n<p align=\"center\">\n  <img src=\"./snaffler_screenshot.png\">\n</p>\n\n## How do I use it?\n\nIf you \"literally just run the EXE on a domain joined machine in the context of a domain user\" (as people were instructed to do with Grouper2, immediately before they ran it with all the verbose/debug switches on so it screamed several hundred megabytes of stack traces at them) it will basically do nothing. This is our idea of a prank<sup>TM</sup> on people who don't read README files, because we're monsters.\n\nHOWEVER... if you add the correct incantations, it will enable the aforementioned L.A.I.M. and the file paths where candy may be found will fall out. \n\nThe key incantations are: \n\n`-o`   Enables outputting results to a file. You probably want this if you're not using `-s`. e.g. `-o C:\\users\\thing\\snaffler.log`\n\n`-s`   Enables outputting results to stdout as soon as they're found. You probably want this if you're not using `-o`.\n\n`-v`   Controls verbosity level, options are Trace (most verbose), Degub (less verbose, less gubs), Info (less verbose still, default), and Data (results only). e.g `-v debug` \n\n`-m`   Enables and assigns an output dir for snaffler to automatically take a copy of (or Snaffle... if you will) any found files that it likes.\n\n`-l`   Maximum size of files (in bytes) to Snaffle. Defaults to 10000000, which is *about* 10MB.\n\n`-i`   Disables computer and share discovery, requires a path to a directory in which to perform file discovery.\n\n`-n`   Disables computer discovery, takes a comma-separated list of hosts or input file to do share and file discovery on. Note if supplying a file, the input needs to be a path so C:\\targets.txt or .\\targets.txt as an example.\n\n`-y`   TSV-formats the output.\n\n`-b`   Skips the LAIM rules that will find less-interesting stuff, tune it with a number between 0 and 3.\n\n`-f`   Limits Snaffler to finding file shares via DFS (Distributed File System) - this should be quite a bit sneakier than the default while still covering the biggest file shares in a lot of orgs.\n\n`-a`   Skips file enumeration, just gives you a list of listable shares on the target hosts.\n\n`-u`   Makes Snaffler pull a list of account names from AD, choose the ones that look most-interesting, and then use them in a search rule.\n\n`-d`   Domain to search for computers to search for shares on to search for files in. Easy.\n\n`-c`   Domain controller to query for the list of domain computers.\n\n`-r`   The maximum size file (in bytes) to search inside for interesting strings. Defaults to 500k.\n\n`-j`   How many bytes of context either side of found strings in files to show, e.g. `-j 200`\n\n`-z`   Path to a config file that defines all of the above, and much much more! See below for more details. Give it `-z generate` to generate a sample config file called `.\\default.toml`.\n\n`-t` Type of log you would like to output. Currently supported options are plain and JSON. Defaults to plain.\n\n`-x` Max number of threads to use. Don't set it below 4 or shit will break.\n\n`-p` Path to a directory full of .toml formatted rules. Snaffler will load all of these in place of the default ruleset.\n\n## What does any of this log output mean?\n\nHopefully this annotated example will help:\n\n<p align=\"center\">\n  <img src=\"./log_key.png\">\n</p>\n\nThis log entry should be read roughly from left to right as:\n\n* at 7:37ish\n* Snaffler found a file it thinks is worth your attention\n* it's rated it \"Red\", the second most-interesting level\n* it matched a rule named \"KeepConfigRegexRed\"\n* you can read it, but not modify it\n* the exact regex that was matched is that stuff in the red box\n* it's 208kB\n* it was last modified on January 10th 2020 at quarter-to-four in the afternoon.\n* the file may be found at the path in purple\n\n... and the rest of the line (in grey) is a little snippet of context from the file where the match was.\n\nIn this case we've found ASP.NET validationKey and decryptionKey values, which might let us RCE the web app via some deserialisation hackery. Hooray!\n\nNote: after this screenshot was made, Sh3r4 added a thing to prepend the current user and hostname to each line. I don't wanna redo the screenshot tho.\n\n## How does it decide which files are good and which files are boring?\n\n### The \"so simple it's almost a lie\" answer:\nEach L.A.I.M. magic file finding method does stuff like:\n\n* Searching by exact file extension match, meaning that any file with an extension that matches the relevant wordlist will be returned. This is meant for **file extensions** that are almost always going to contain candy, e.g. `.kdbx`, `.vmdk`, `.ppk`, etc.\n\n* Searching by (case insensitive) exact filename match. This is meant for **file names** that are almost always going to contain candy, e.g. `id_rsa`, `shadow`, `NTDS.DIT`, etc.\n\n* Searching by exact file extension match (yet another wordlist) FOLLOWED BY 'grepping' the contents of any matching files for certain key words (yet yet another another wordlist). This is meant for file extensions that **sometimes** contain candy but where you know there's likely to be a bunch of chaff to sift through. For example, `web.config` will sometimes contain database credentials, but will also often contain boring IIS config nonsense and no passwords. This will (for example) find anything ending in `.config`, then will grep through it for strings including but not limited to: `connectionString`, `password`, `PRIVATE KEY`, etc.\n\n* Searching by partial filename match (oh god more wordlists). This is mostly meant to find `Jeff's Password File 2019 (Copy).docx` or `Privileged Access Management System Design - As-Built.docx` or whatever, by matching any file where the name contains the substrings `passw`, `handover`, `secret`, `secure`, `as-built`, etc.\n\n* There's also skip-lists to skip all files with certain extensions, or any file with a path containing a given string.\n\n### The real answer:\n\nSnaffler uses a system of \"classifiers\", each of which examine shares or folders or files or file contents, passing some items downstream to the next classifier, and discarding others. Each classifier uses a set of rules to decide what to do with the items it classifies.\n\nThese rules can be very simple, e.g. \"if a file's extension is `.kdbx`, tell me about it\", or \"if a path contains `windows\\sxs` then stop looking at subdirectories and files within that path\".\n\nRules can also use regular expressions, which allow for relatively sophisticated pattern-matching. This is particularly useful when examining file contents, although care should be taken to avoid regexen with a significant performance hit. In large environments these rules may be checked literally millions of times, so minor performance issues can be amplified significantly.\n\nThe real power is in Snaffler's ability to chain multiple rules together, and even create branching chains. This allows us to use \"cheap\" rules like checking file names and extensions to decide when to use \"expensive\" rules like running regexen across the contents of files, parsing certs to see whether they contain private keys, etc. This is what allows Snaffler to achieve quite deep inspection of files where needed, while also being surprisingly fast for a tool written in a higher-level language like C#.\n\nFor example, a very simple ruleset might contain:\n* a rule to discard all files with extensions associated with image files\n* a rule to find all files with the `.dmp` file extension and snaffle them\n* a rule chain where:\n  * the first rule looks for files with the `.ps1` file extension, and sends all matching files to both the second and third rules.\n  * the second rule looks inside files using regexen designed to find hard-coded credentials in PowerShell code.\n  * the third rule looks inside files using regexen designed to find hard-coded credentials in `cmd.exe` commands, as might be found in `.bat` or `.cmd` files, as these are also commonly used within PowerShell scripts.\n\nThis approach also lets us maintain a relatively manageable and legible ruleset, and also makes it much easier for the end-user (you) to customise the defaults or develop your own rulesets.\n\n### I don't want to write rules, that sounds hard and boring.\n\nYou're right, it was.\n\nSnaffler comes with a set of default rules baked into the `.exe`. You can see them in `./Snaffler/SnaffRules/DefaultRules`.\n\n### I am a mighty titan of tedium, a master of the mundane, I wish to write my own ruleset.\n\nNo problem, you enormous weirdo. You have 2 options.\n\n1. Edit or replace the rules in the `DefaultRules` directory, then build a fresh Snaffler. The `.toml` files in that dir will get baked into the `.exe` as resources, and loaded up at runtime whenever you don't specify any other rules to use.\n2. Make a directory and stick a bunch of your own rule files in there, then run Snaffler with `-p .\\path\\to\\rules`. Snaffler will parse all the `.toml` files in that directory and use the resulting ruleset. This will also work if you just have them all in one big `.toml` file.\n\nHere's some annotated examples that will hopefully help to explain things better. If this seems very hard, you can just use our rules and they'll probably find you some good stuff.\n\nThis is an example of a rule that will make Snaffler ignore all files and subdirectories below a dir with a certain name.\n\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"DirectoryEnumeration\" # This defines which phase of the discovery process we're going to apply the rule. \n                                          # In this case, we're looking at directories. \n                                          # Valid values include ShareEnumeration, DirectoryEnumeration, FileEnumeration, ContentsEnumeration\nRuleName = \"DiscardLargeFalsePosDirs\" # This can be whatever you want. We've been following a rough naming scheme, but you can call it \"Stinky\" if you want. ¯\\_(ツ)_/¯\nMatchAction = \"Discard\"# What to do with things that match the rule. In this case, we want to discard anything that matches this rule.\n                        # Valid options include: Snaffle (keep), Discard, Relay (example of this below), and CheckForKeys (example below)\nDescription = \"File paths that will be skipped entirely.\" # Not used in the code, just a place for notes really.\nMatchLocation = \"FilePath\" # What part of the file/dir/share to look at to check for a match. In this case we're looking at the whole path.\n                           # Valid options include: ShareName, FilePath, FileName, FileExtension, FileContentAsString, FileContentAsBytes,\n                           # although obviously not all of these will apply in all EnumerationScopes.\nWordListType = \"Contains\" # What matching logic to apply, valid options are: Exact, Contains, EndsWith, StartsWith, or Regex.\n                          # Under the hood these all get turned into regexen one way or another.\nMatchLength = 0\nWordList = [ \n  # A list of strings or regex patterns to use to match. If using regex patterns, WordListType must be Regex.\n\t\"\\\\\\\\puppet\\\\\\\\share\\\\\\\\doc\",\n\t\"\\\\\\\\lib\\\\\\\\ruby\",\n\t\"\\\\\\\\lib\\\\\\\\site-packages\",\n\t\"\\\\\\\\usr\\\\\\\\share\\\\\\\\doc\",\n\t\"node_modules\",\n\t\"vendor\\\\\\\\bundle\",\n\t\"vendor\\\\\\\\cache\",\n\t\"\\\\\\\\doc\\\\\\\\openssl\",\n\t\"Anaconda3\\\\\\\\Lib\\\\\\\\test\",\n\t\"WindowsPowerShell\\\\\\\\Modules\",\n\t\"Python27\\\\\\\\Lib\"\n]\nTriage = \"Green\" # If we find a match, what severity rating should we give it. Valid values are Black, Red, Yellow, Green. This value is ignored for Discard MatchActions.\n```\n\nThis rule on the other hand will look at file extensions, and immediately discard any we don't like.\n\nIn this case I'm mostly throwing away fonts, images, CSS, etc.\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"FileEnumeration\" # We're looking at the actual files, not the shares or dirs or whatever.\nRuleName = \"DiscardExtExact\" # just a name\nMatchAction = \"Discard\" # We're discarding these\nMatchLocation = \"FileExtension\" # This time we're only looking at the file extension part of the file's name.\nWordListType = \"Exact\" # and we only want exact matches. \nWordList = [\".bmp\", \".eps\", \".gif\", \".ico\", \".jfi\", \".jfif\", \".jif\", \".jpe\", \".jpeg\", \".jpg\", \".png\", \".psd\", \".svg\", \".tif\", \".tiff\", \".webp\", \".xcf\", \".ttf\", \".otf\", \".lock\", \".css\", \".less\"] # list of file extensions.\n```\n\nHere's an example of a really simple rule for stuff we like and want to keep.\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"FileEnumeration\" # Still looking at files\nRuleName = \"KeepExtExactBlack\" # Just a name\nMatchAction = \"Snaffle\" # This time we are 'snaffling' these. This usually just means send it to the output, \n                       # but if you turn on the appropriate option it will also grab a copy.\nMatchLocation = \"FileExtension\" # We're looking at file extensions again\nWordListType = \"Exact\" # With Exact Matches\nWordList = [\".kdbx\", \".kdb\", \".ppk\", \".vmdk\", \".vhdx\", \".ova\", \".ovf\", \".psafe3\", \".cscfg\", \".kwallet\", \".tblk\", \".ovpn\", \".mdf\", \".sdf\", \".sqldump\"] # and a bunch of fun file extensions.\nTriage = \"Black\" # these are all big wins if we find them, so we're giving them the most severe rating.\n```\n\nThis one is basically the same, but we're looking at the whole file name. Simple!\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"FileEnumeration\"\nRuleName = \"KeepFilenameExactBlack\"\nMatchAction = \"Snaffle\"\nMatchLocation = \"FileName\"\nWordListType = \"Exact\"\nWordList = [\"id_rsa\", \"id_dsa\", \"NTDS.DIT\", \"shadow\", \"pwd.db\", \"passwd\"]\nTriage = \"Black\"\n```\n\nThis one is a bit nifty, check this out...\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"FileEnumeration\" # we're looking for files...\nRuleName = \"KeepCertContainsPrivKeyRed\" \nMatchLocation = \"FileExtension\" # specifically, ones with certain file extensions...\nWordListType = \"Exact\"\nWordList = [\".der\", \".pfx\"] # specifically these ones...\nMatchAction = \"CheckForKeys\" # and any that we find, we're going to parse them as x509 certs, and see if the file includes a private key!\nTriage = \"Red\" # cert files aren't very sexy, and you'll get huge numbers of them in most wintel environments, but this check gives us a way better SNR!\n```\n\nOK, here's where the powerful stuff comes in. We got a pair of rules in a chain here.\n\nFiles with extensions that match the first rule will be sent to second rule, which will \"grep\" (i.e. String.Contains()) them for stuff in a specific wordlist. \n\nYou can chain these together as much as you like, although I imagine you'll start to see some performance problems if you get too inception-y with it.\n```toml\n[[ClassifierRules]]\nEnumerationScope = \"FileEnumeration\" # this one looks at files...\nRuleName = \"ConfigGrepExtExact\"\nMatchLocation = \"FileExtension\" # specifically the extensions...\nWordListType = \"Exact\"\nWordList = [\".yaml\", \".xml\", \".json\", \".config\", \".ini\", \".inf\", \".cnf\", \".conf\"] # these ones.\nMatchAction = \"Relay\" # Then any files that match are handed downstream...\nRelayTargets = [\"KeepConfigGrepContainsRed\"] # To the rule with this RuleName! This can also be an array of RuleNames if you want to get real wild and start writing branching rulesets.\n\n[[ClassifierRules]]\nRuleName = \"KeepConfigGrepContainsRed\" # Anyway, this is the target rule. Following a naming convention really helps to make sure you're using the right targets.\nEnumerationScope = \"ContentsEnumeration\" # this one looks at file content!\nMatchAction = \"Snaffle\" # it keeps files that match\nMatchLocation = \"FileContentAsString\" # it's looking at the contents as a string (rather than a byte array)\nWordListType = \"Contains\" # it's using simple matching\nWordList = [\"password=\", \" connectionString=\\\"\", \"sqlConnectionString=\\\"\", \"validationKey=\", \"decryptionKey=\", \"NVRAM config last updated\"]\nTriage = \"Red\"\n```\n\nHopefully this convey the idea. I'd recommend taking some of the default rules and tinkering with them until you feel like you've got a good handle on it.\n\n## WTF is an \"UltraSnaffler\"???\n\nA lot of people wanted the ability to look inside file formats that weren't just flat text, like Word documents, PDFs, `.eml`, etc. Unfortunately, the easiest library for implementing that functionality blew out the final file size on `Snaffler.exe` by about 1200%, which sucked for a bunch of the popular in-memory execution techniques that had upper limits on how big a file they could be used with.\n\nThe solution was UltraSnaffler, which is just a second `.sln` file that enables the required lib and the relevant code. Build `UltraSnaffler.sln`, get UltraSnaffler.\n\nWARNING: Snaffler's default rules don't include any that will look inside Office docs or PDFs, because we found it really difficult to write any that weren't going to just take *years* to finish a run in a typical corporate environment. *Be warned, looking inside these docs is a lot slower than looking inside good old fashioned text files, and a typical environment will have an absolute mountain of low-value Office docs and PDFs.*\n\n## How does the config file thing work?\n\nThis is actually really neat IMO.\n\nIf you add `-z generate` onto the end of a Snaffler command line, Snaffler will serialise the configuration object (including whatever aspects of the configuration were set by your args) into a `.toml` config file, which you can then hand-edit pretty easily (or not) and then re-use at your leisure\n\nFor example, if you do:\n\n`Snaffler.exe -s -o C:\\mydir\\snaffler.log -v trace -i \\\\host.lol.domain\\share -p C:\\users\\someguy\\myrules -z generate`\n\nSnaffler will parse all your many, many arguments, turn them into a config object, serialise that config object into the following `.toml` config file:\n\n```toml\nPathTargets = [\"\\\\\\\\host.lol.domain\\\\share\"]\nComputerTargetsLdapFilter = \"(objectClass=computer)\"\nScanSysvol = true\nScanNetlogon = true\nScanFoundShares = true\nInterestLevel = 0\nDfsOnly = false\nDfsShareDiscovery = false\nDfsNamespacePaths = []\nCurrentUser = \"l0sslab\\\\l0ss\"\nRuleDir = \"C:\\\\users\\\\someguy\\\\myrules\"\nMaxThreads = 60\nShareThreads = 20\nTreeThreads = 20\nFileThreads = 20\nMaxFileQueue = 200000\nMaxTreeQueue = 0\nMaxShareQueue = 0\nLogToFile = true\nLogFilePath = \"C:\\\\mydir\\\\snaffler.log\"\nLogType = \"Plain\"\nLogTSV = false\nSeparator = 32\nLogToConsole = true\nLogLevelString = \"trace\"\nShareFinderEnabled = false\nLogDeniedShares = false\nDomainUserRules = false\nDomainUserMinLen = 6\nDomainUserNameFormats = [\"sAMAccountName\"]\nDomainUserMatchStrings = [\"sql\", \"svc\", \"service\", \"backup\", \"ccm\", \"scom\", \"opsmgr\", \"adm\", \"adcs\", \"MSOL\", \"adsync\", \"thycotic\", \"secretserver\", \"cyberark\", \"configmgr\"]\nDomainUsersWordlistRules = [\"KeepConfigRegexRed\"]\nMaxSizeToGrep = 1000000\nSnaffle = false\nMaxSizeToSnaffle = 10000000\nMatchContextBytes = 200\n```\n\nYou may notice that there are many items in here that you didn't pass arguments for. Those values are the default config items, some of which can only be edited easily in the source or via a config file, usually because it didn't seem worth it to add an argument for them.\n\n## This sucks, do you have plans to make it suck less?\n\nNo it doesn't, you suck.\n\nAlso, yes we do.\n\nWe're also going to: \n - Add parsing of archive files, ideally treating them as just another dir to walk through looking for goodies.\n - Keep refining the rules and regexen. **More words for the wordlists! `string[]`s for the `string` throne!**\n\n![A dumb joke about wordlists.](./WORDLISTS.png)\n\n## Who did you steal code from?\n\nThe share enumeration bits were snaffled (see what I did there?) from SharpShares, which was written by the exceedingly useful Dwight Hohnstein. (https://github.com/djhohnstein/SharpShares/)\nDwight's GitHub profile is like that amazing back aisle at a hardware store that has a whole bunch of tools that make you go \"oh man I can't wait til I have an excuse to try this one for realsies...\" and you should definitely check it out.\n\nWhile no code was taken (mainly cos it's Ruby lol) we did steal a bunch of nifty ideas from `plunder2` (http://joshstone.us/plunder2/)\n\nWordlists were also curated from those found in some other similar-ish tools like trufflehog, shhgit, gitrobber, and graudit.\n\n\n## Is it OPSEC safe? (Whatever the hell that means)\n\nPffft, no. It's noisy as fuck.\n\nLook let's put it this way... If it's the kind of environment where you'd feel confident running BloodHound in its default mode, then uhhh, yeah man... It's real stealthy.\n\n## I thought you used this thing on red team gigs?\n\n*sigh* \n\nOK, I'll give you the real answer.\n\nIn default mode, Snaffler looks an awful lot like SharpHound, in a lot of ways. It talks a bunch of LDAP to AD, then it goes out and tries to talk SMB to every Windows machine in the domain. This kind of behaviour is pretty much guaranteed to get you busted in an org that has their shit even slightly together.\n\nHOWEVER...\n\nSnaffler's more-targeted options (especially `-i`) are a *lot* less likely to trigger detections. \n\nI am particularly fond of running `Snaffler.exe -s -i C:\\` on a freshly compromised server or workstation, and I've not seen this behaviour get detected. \n\nYet.\n\n## How can I help or get help?\n\nIf you want to discuss via Slack you can ping us (@l0ss or @Sh3r4) on the BloodHound Slack, joinable at https://bloodhoundgang.herokuapp.com/, or chat with a group of contributors in the #snaffler channel.\n\nYou can also ping us on Twitter - @mikeloss and @sh3r4_hax\n\nOtherwise file an issue; we'll try.\n\n"
        },
        {
          "name": "SnaffCore",
          "type": "tree",
          "content": null
        },
        {
          "name": "Snaffle Rules Taxonomy.mindnode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Snaffler.sln",
          "type": "blob",
          "size": 2.2109375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.29613.14\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Snaffler\", \"Snaffler\\Snaffler.csproj\", \"{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"SnaffCore\", \"SnaffCore\\SnaffCore.csproj\", \"{B118802D-2E46-4E41-AAC7-9EE890268F8B}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tDebug|x86 = Debug|x86\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\t\tRelease|x86 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|x86.ActiveCfg = Debug|x86\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|x86.Build.0 = Debug|x86\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|x86.ActiveCfg = Release|x86\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|x86.Build.0 = Release|x86\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|x86.ActiveCfg = Debug|x86\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|x86.Build.0 = Debug|x86\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|x86.ActiveCfg = Release|x86\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|x86.Build.0 = Release|x86\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {0807A871-1022-4171-9046-94ADD0EFCCA9}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "Snaffler",
          "type": "tree",
          "content": null
        },
        {
          "name": "UltraSnaffler.sln",
          "type": "blob",
          "size": 1.5771484375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.29613.14\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Snaffler\", \"Snaffler\\Snaffler.csproj\", \"{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"SnaffCore\", \"SnaffCore\\UltraSnaffCore.csproj\", \"{B118802D-2E46-4E41-AAC7-9EE890268F8B}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{2AA060B4-DE88-4D2A-A26A-760C1CEFEC3E}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{B118802D-2E46-4E41-AAC7-9EE890268F8B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {0807A871-1022-4171-9046-94ADD0EFCCA9}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "WORDLISTS.png",
          "type": "blob",
          "size": 2021.05078125,
          "content": null
        },
        {
          "name": "example-config.toml",
          "type": "blob",
          "size": 6.2939453125,
          "content": "# Snaffler Sample Config File\n\n## Resource Use Options\n# This is a bit of a balancing act and maximising performance will depend somewhat on your environment and how much RAM you're willing to consume.\n# More threads will obviously need more CPU and lots more ram, where increasing the queue sizes will have a dramatic impact on ram usage.\n# These values should limit RAM usage to between 500-1000MB.\n#\n# The most important thing is that you generally want a lot more threads allocated to filescanning compared to the other two. \n#\n# Think about it this way:\n# A completed sharefinder task will create a number of new treewalker tasks equal to the number of readable shares on the target computer. Most of the time this will be zero, it will rarely be more than a few hundred.\n# A treewalker task will create a number of new filescanner tasks equal to the number of readable files on the target filesystem. This could be anywhere between zero and *millions*.\n# Filescanner tasks don't create new tasks, when they finish that's the end of the road.\n#\n# With this in mind I hope it's obvious that to keep things flowing along nicely you want to make sure the filescanner queues are getting cleared out at a decent pace. Everything else should flow on from that.\n\nShareThreads = 30 # number of threads to allocate to checking domain computers for readable file shares, i.e. share-finder tasks\nTreeThreads = 20 # number of threads to allocate to walking the directory structures of shares to find all the files, i.e. tree-walker tasks.\nFileThreads = 50 # number of threads to allocate to checking files to determine if they should be snaffled, i.e. file-scanner tasks.\nMaxShareQueue = 20000 # Upper limit of share-finder tasks to put in the queue before we wait for some to be cleared out.\nMaxTreeQueue = 20000 # Upper limit of tree-walker tasks to put in the queue before we wait for some to be cleared out.\nMaxFileQueue = 200000 # Upper limit of file-scanner tasks to put in the queue before we wait for some to be cleared out.\n\n## Output options\n# These control where the output goes, e.g. to stdout/console, a file, etc.\nLogToFile = false # whether or not to log output to a file.\n# LogFilePath = \"C:\\\\example\" # what file to log output to.\nLogToConsole = true # whether or not to send output to stdout \nLogLevelString = \"info\" # how verbose to be. options include: \n# \"data\" which will only show actual results.\n# \"info\" (which is the default) which will tell you some basic stuff about what snaffler is doing.\n# \"degub\" (or \"debug\" if you prefer) which will show some debugging info too.\n# \"trace\" which will be insanely noisy and throw errors all over the joint.\nLogType = \"Plain\" # accepts either \"plain\" or \"json\", with self-explanatory results. Only affects file output, console output will remain plain.\nLogTSV = false # enables use of TSV for console/plain output.\nSeparator = 32 # change this to a different byte to get a different character as your field separator instead of TAB.\nLogDeniedShares = false # if set to true, output will include shares that exist but you can't look inside.\nSnaffle = false # if set to true, this will actually retrieve (or SNAFFLE if you will...) a copy of files that are deemed worthy by a filescanner task.\nMaxSizeToSnaffle = 10000000 # obviously we don't want to download a 200GB full disk backup of a DC to your 40GB testing VM, so this is an upper limit on file size to 'snaffle' in bytes.\n# SnafflePath = \"C:\\\\snaffleout\" # the path that snaffled files will be put in. We'll reproduce the directory structure that they were found in so you should be able to figure out where they came from even if you lose the log file.\n\n## Targeting options\n# TargetDomain = \"target.tld\" # the domain to target. You'll want to set this and TargetDC if you're running Snaffler with `runas /netonly` or whatever, but by default Snaffler should figure this out on its own.\n# TargetDC = \"dc01.target.tld\" # the DC to query for computers and users. By default Snaffler should figure this out on its own.\nShareFinderEnabled = true # whether to query the AD domain for computers and then search those computers for readable shares. \n# If you set ShareFinderEnabled to false you'll need to set a value in ComputerTargets or PathTargets\n# ComputerTargets = [\"computer1\", \"computer2\"] # which computers to discover shares on, skipping AD computer discovery.\n# PathTargets = [\"\\\\\\\\host.lol.domain\\\\share\"] # which paths to search, skipping computer/share discovery.\nComputerTargetsLdapFilter = \"(objectClass=computer)\" # the ldap filter used to search AD for computer objects.\nScanSysvol = true # enables scanning of the domain SYSVOL share. Will only scan it once even if multiple domain controllers are scanned.\nScanNetlogon = true # enables scanning of the domain NETLOGON share. Will only scan it once even if multiple domain controllers are scanned.\nScanFoundShares = true\nInterestLevel = 0\nDfsOnly = false\nDfsShareDiscovery = false\nDfsNamespacePaths = []\nCurrentUser = \"l0sslab\\\\l0ss\"\n\n#######################################\n\nDomainUserRules = false # whether to fetch a list of domain users, filter out highly privileged ones and accounts that seem to be service accounts, and add them to one or more rules.\nDomainUserMinLen = 6 # minimum length for account names.\nDomainUserNameFormats = [\"sAMAccountName\"] # which attribute to filter on, i.e. Display Name vs sAMAccountName, etc.\nDomainUserMatchStrings = [\"sql\", \"svc\", \"service\", \"backup\", \"ccm\", \"scom\", \"opsmgr\", \"adm\", \"adcs\", \"MSOL\", \"adsync\", \"thycotic\", \"secretserver\", \"cyberark\", \"configmgr\"] # we don't want every user in the domain, that would take forever. Only usernames including these strings will be included in the search.\nDomainUsersWordlistRules = [\"KeepConfigRegexRed\"] # which rule(s) to add the resulting usernames to.\n####################################### \nMaxSizeToGrep = 1000000 # the maximum size file in bytes that we should look inside. Reducing this number will reduce memory usage and substantially speed things up, but will potentially skip a lot of interesting stuff\nMatchContextBytes = 200 # how many bytes of 'context' to show on either side of a match inside a file.\n\n## Rules\n# This defines what we're going to actually look for. See README.md for details.\nRuleDir = \"C:\\\\users\\\\someguy\\\\myrules\" # Will make Snaffler look for .toml rule files in that dir. These rules will entirely replace the default set, not add to them.\n\n"
        },
        {
          "name": "german-file-name-patterns.toml",
          "type": "blob",
          "size": 0.8369140625,
          "content": "ScanSysvol = true\r\nScanNetlogon = true\r\nShareThreads = 30\r\nTreeThreads = 20\r\nFileThreads = 50\r\nMaxFileQueue = 200000\r\nMaxTreeQueue = 0\r\nMaxShareQueue = 0\r\nLogToFile = false\r\nLogTSV = false\r\nSeparator = 32\r\nLogToConsole = false\r\nLogLevelString = \"info\"\r\nShareFinderEnabled = true\r\nDomainUserRules = false\r\nMaxSizeToGrep = 1000000\r\nSnaffle = false\r\nMaxSizeToSnaffle = 10000000\r\nMatchContextBytes = 200\r\n\r\n[[ClassifierRules]]\r\nEnumerationScope = \"FileEnumeration\"\r\nRuleName = \"KeepFilenameRegexRed\"\r\nMatchAction = \"Snaffle\"\r\nDescription = \"Files with these file name patterns are very interesting in German companies.\"\r\nMatchLocation = \"FileName\"\r\nWordListType = \"Regex\"\r\nMatchLength = 0\r\nWordList = [\"(Kenn|Pass)w[oö]rte?r?\", \"Schlüssel\", \"Zug[aä]ng[es]?\", \"T[oü]r[ -]?Code\", \"PINs?\\\\.\", \"Kont(o|en)\", \"Logindaten\", \"Anmeld(edaten|ung)\"]\r\nTriage = \"Red\"\r\n"
        },
        {
          "name": "log_key.png",
          "type": "blob",
          "size": 539.65234375,
          "content": null
        },
        {
          "name": "snaffler.png",
          "type": "blob",
          "size": 79.8525390625,
          "content": null
        },
        {
          "name": "snaffler_screenshot.png",
          "type": "blob",
          "size": 1223.54296875,
          "content": null
        },
        {
          "name": "snafflertest",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}