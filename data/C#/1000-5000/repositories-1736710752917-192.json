{
  "metadata": {
    "timestamp": 1736710752917,
    "page": 192,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/Power-Fx",
      "stars": 3230,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 9.7744140625,
          "content": "# EditorConfig is awesome:http://EditorConfig.org\n\n###############################\n# Core EditorConfig Options   #\n###############################\nroot = true\n\n# All files\n[*]\nindent_style = space\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\n\n# Xml project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Xml config files\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\nindent_size = 2\n\n# JSON files\n[*.json]\nindent_size = 2\n\n# Schema files\n[*.{schema,uischema}]\nindent_size = 4\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n\n###############################\n# .NET Coding Conventions     #\n###############################\n[*.{cs,vb}]\n# Organize usings\ndotnet_sort_system_directives_first = true\ndotnet_separate_import_directive_groups = false\n\n# this. preferences\ndotnet_style_qualification_for_field = false:none\ndotnet_style_qualification_for_property = false:none\ndotnet_style_qualification_for_method = false:none\ndotnet_style_qualification_for_event = false:none\n\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:error\ndotnet_style_readonly_field = true:error\n\n# Expression-level preferences\ndotnet_style_object_initializer = true:error\ndotnet_style_collection_initializer = true:error\ndotnet_style_explicit_tuple_names = true:error\ndotnet_style_null_propagation = true:error\ndotnet_style_coalesce_expression = true:error\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:none\ndotnet_prefer_inferred_tuple_names = true:error\ndotnet_prefer_inferred_anonymous_type_member_names = true:error\ndotnet_style_prefer_auto_properties = true:none\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\n\n###############################\n# Naming Conventions          #\n###############################\n\n# Style Definitions\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# Use PascalCase for constant fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = error\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style\ndotnet_naming_symbols.constant_fields.applicable_kinds = field\ndotnet_naming_symbols.constant_fields.applicable_accessibilities = *\ndotnet_naming_symbols.constant_fields.required_modifiers = const\ndotnet_style_prefer_simplified_boolean_expressions = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_compound_assignment = true:suggestion\ndotnet_style_prefer_simplified_interpolation = true:suggestion\ndotnet_style_namespace_match_folder = true:suggestion\ndotnet_style_operator_placement_when_wrapping = beginning_of_line\ntab_width = 4\nend_of_line = crlf\ndotnet_style_allow_multiple_blank_lines_experimental = true:silent\ndotnet_style_allow_statement_immediately_after_block_experimental = true:silent\ndotnet_code_quality_unused_parameters = all:suggestion\n\n###############################\n# C# Code Style Rules         #\n###############################\n[*.cs]\n# var preferences\ncsharp_style_var_for_built_in_types = false:none\ncsharp_style_var_when_type_is_apparent = false:none\ncsharp_style_var_elsewhere = false:none\n\n# Expression-bodied members\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = true:error\ncsharp_style_expression_bodied_properties = true:error\ncsharp_style_expression_bodied_indexers = true:error\ncsharp_style_expression_bodied_accessors = true:error\n\n# Pattern-matching preferences\ncsharp_style_pattern_matching_over_is_with_cast_check = true:error\ncsharp_style_pattern_matching_over_as_with_null_check = true:error\n\n# Null-checking preferences\ncsharp_style_throw_expression = true:error\ncsharp_style_conditional_delegate_call = true:error\n\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error\n\n# Expression-level preferences\ncsharp_prefer_braces = true:error\ncsharp_style_deconstructed_variable_declaration = true:error\ncsharp_prefer_simple_default_expression = true:error\ncsharp_style_pattern_local_over_anonymous_function = true:error\ncsharp_style_inlined_variable_declaration = true:error\n\n###############################\n# C# Formatting Rules         #\n###############################\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\n\n# Wrapping preferences\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n\ncsharp_using_directive_placement = outside_namespace:suggestion\ncsharp_prefer_simple_using_statement = false:suggestion\ncsharp_style_namespace_declarations = block_scoped:silent\ncsharp_style_prefer_method_group_conversion = true:silent\ncsharp_style_expression_bodied_lambdas = true:suggestion\ncsharp_style_expression_bodied_local_functions = false:silent\ncsharp_style_prefer_null_check_over_type_check = true:suggestion\ncsharp_style_prefer_local_over_anonymous_function = true:suggestion\ncsharp_style_prefer_index_operator = false:suggestion\ncsharp_style_prefer_range_operator = false:suggestion\ncsharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion\ncsharp_style_prefer_tuple_swap = true:suggestion\ncsharp_style_unused_value_assignment_preference = discard_variable:suggestion\ncsharp_style_unused_value_expression_statement_preference = discard_variable:silent\ncsharp_prefer_static_local_function = true:suggestion\ncsharp_style_allow_embedded_statements_on_same_line_experimental = true:silent\ncsharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent\ncsharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent\ncsharp_style_prefer_parameter_null_checking = true:suggestion\ncsharp_style_prefer_pattern_matching = true:silent\ncsharp_style_prefer_switch_expression = true:suggestion\ncsharp_style_prefer_not_pattern = true:suggestion\ncsharp_style_prefer_extended_property_pattern = true:suggestion\n\n# IDE0003: Name can be simplified\n# Beware - updates to IDE0000 rules may also require an update to the options above. \n# See https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/\ndotnet_diagnostic.IDE0003.severity = none\n# IDE0004: Cast is redundant\ndotnet_diagnostic.IDE0004.severity = warning\n# IDE0005: Using directive is unnecessary ## REQUIRED\ndotnet_diagnostic.IDE0005.severity = none\n# IDE0007: use 'var' instead of explicit type \ndotnet_diagnostic.IDE0007.severity = none\n# IDE0032: Use auto property\ndotnet_diagnostic.IDE0032.severity = none\n# IDE0052: Private member can be removed as the value assigned to it is never read\ndotnet_diagnostic.IDE0052.severity = warning\n# IDE0054: Use compound assignment\ndotnet_diagnostic.IDE0054.severity = warning\n# IDE0059: Unnecessary assignment of a value to 'xxx'\ndotnet_diagnostic.IDE0059.severity = warning\n# IDE0060: Remove unused parameter\ndotnet_diagnostic.IDE0060.severity = warning\n# IDE0066: Use 'switch' expression\ndotnet_diagnostic.IDE0066.severity = warning\n# IDE0079: Remove unnecessary suppression\ndotnet_diagnostic.IDE0079.severity = warning\n# IDE0083: Use pattern matching ## REQUIRED\ndotnet_diagnostic.IDE0083.severity = none\n# IDE1006: Naming Styles\ndotnet_diagnostic.IDE1006.severity = none\n\n# CA1000: Do not declare static members on generic types\ndotnet_diagnostic.CA1000.severity = none\n# CA1008: Enums should have zero value\ndotnet_diagnostic.CA1008.severity = none\n# CA1027: Mark enums with FlagsAttribute\ndotnet_diagnostic.CA1027.severity = none\n# CA1056: URI properties should not be strings\ndotnet_diagnostic.CA1056.severity = none\n# CA1069: The enum member 'xxx' has the same constant value 'yy' as member 'zzz'\ndotnet_diagnostic.CA1069.severity = none\n# CA1707: Remove the underscores from member name\ndotnet_diagnostic.CA1707.severity = none\n\n# CS0618: Type or member is obsolete\ndotnet_diagnostic.CS0618.severity = error\n"
        },
        {
          "name": ".gdn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.1044921875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# JetBrains Rider IDE Files\nsrc/.idea\n\n# Output folder\nOutput/\n\n# Tool folder\ntool/\n\n# Report folder \nreport/\n\n# ApiCompat suppression files\nsuppress.*.xml\n\n# global.json\n/src/global.json\n/global.json\n\n# Guardian results\n.gdn/r\n.gdn/internal.gdnhistory\n\n# Yaml output\nYamlOutput/\n\n"
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "ApiCompat.Files.xml",
          "type": "blob",
          "size": 1.111328125,
          "content": "<ApiCompat>   \n  <Assembly>\n    <Name>Microsoft.PowerFx.Core</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.Core\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly>  \n  <Assembly>\n    <Name>Microsoft.PowerFx.LanguageServerProtocol</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.LanguageServerProtocol\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly>  \n  <Assembly>\n    <Name>Microsoft.PowerFx.Interpreter</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.Interpreter\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly>  \n  <Assembly>\n    <Name>Microsoft.PowerFx.Connectors</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.Connectors\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly>\n  <Assembly>\n    <Name>Microsoft.PowerFx.Json</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.Json\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly>  \n  <Assembly>\n    <Name>Microsoft.PowerFx.Transport.Attributes</Name>\n    <Location>src\\libraries\\Microsoft.PowerFx.Transport.Attributes\\bin\\$BuildConfiguration\\netstandard2.0</Location>\n  </Assembly> \n</ApiCompat>"
        },
        {
          "name": "ApiCompatBaseline.txt",
          "type": "blob",
          "size": 0.375,
          "content": "# ApiCompat falsely reports the following issue for Microsoft.PowerFx.Core: \nCannotChangeAttribute : Attribute 'Microsoft.AppMagic.Transport.TransportTypeAttribute' on 'Microsoft.PowerFx.Syntax.Span' changed from '[TransportTypeAttribute(0, true, null, null, false)]' in the contract to '[TransportTypeAttribute(TransportKind.ByValue, true, null, null, false)]' in the implementation."
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.748046875,
          "content": "# <img src=\"https://user-images.githubusercontent.com/70824102/194465962-481fa7ec-0d42-4037-bdd2-f84710272329.png\" width=\"25\"> Microsoft Power Fx\n\n<img alt=\"PowerFX usage example, displaying a simple slider\" src=\"https://learn.microsoft.com/pt-br/power-platform/power-fx/media/overview/always-live.gif\" width=\"750\">\n\n> Microsoft Power Fx is a low-code general purpose programming language based on spreadsheet-like formulas.  It is a strongly typed, declarative, and functional language, with imperative logic and state management available as needed.  \n\n> Power Fx started with Power Apps canvas apps and that is where [you can experience it now](https://powerapps.microsoft.com/en-us/).  We are in the process of extracting the language from that product so that we can use it in more Microsoft Power Platform products and make it available here for you to use.  That's going to take some time and we will report on our progress here and on the [Power Apps blog](https://powerapps.microsoft.com/en-us/blog/).  \n\n> A start on the language documentation is [available in the docs folder](docs/overview.md).  As with the implementation, it is being extracted from the Power Apps documentation and generalized and that too is going to take some time.\n\n## Summary\n\n- [Vision](#vision)\n- [Overview](#overview)\n- [Packages](#packages)\n- [Daily Builds](#daily-builds)\n- [Samples](#samples)\n- [Contributing](#contributing)\n- [Trademarks](#trademarks)\n\n## Vision\n\nThe easiest and most powerful ​system to express business logic for ​everyone, everywhere.\n\n## Overview\n\n| [<img width=\"350\" alt=\"PowerFX overview video thumbnail\" src=\"https://user-images.githubusercontent.com/70824102/194465349-0e78a62c-cebd-4d57-9f3b-df6a371127ee.png\">](https://www.youtube-nocookie.com/embed/ik6k89WNjuk) | For those new to Power-Fx, this video should answer many of your questions: <br> [Power Fx: the Programming Language for Low Code and what it means for Developers](https://www.youtube-nocookie.com/embed/ik6k89WNjuk) |\n| ---- | ---- |\n\n## Packages\n\n| Name                                     | Released Package |\n|------------------------------------------|------------------|\n| Microsoft.PowerFx.Core                   | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Core?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Core/) |\n| Microsoft.PowerFx.Connectors             | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Connectors?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Core.Connectors/) |\n| Microsoft.PowerFx.Json                   | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Json?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Core.Json/) |\n| Microsoft.PowerFx.Core.Tests             | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Core.Tests?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Core.Tests/) |\n| Microsoft.PowerFx.Interpreter            | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Interpreter?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Interpreter/) |\n| Microsoft.PowerFx.LanguageServerProtocol | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.LanguageServerProtocol?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.LanguageServerProtocol/) |\n| Microsoft.PowerFx.Transport.Attributes   | [![BotBuilder Badge](https://img.shields.io/nuget/vpre/Microsoft.PowerFx.Transport.Attributes?label=Latest&logo=nuget)](https://www.nuget.org/packages/Microsoft.PowerFx.Transport.Attributes/) |\n\n## Daily Builds\nDaily builds of the Power Fx packages are published to Azure Artifacts. \n- The [Azure Artifacts daily feed](https://dev.azure.com/Power-Fx/Power%20Fx/_artifacts/feed/PowerFx) carries the most recent packages. To consume them, specify this package source: \n```\nhttps://pkgs.dev.azure.com/Power-Fx/7dd30b4a-31be-4ac9-a649-e6addd4d5b0a/_packaging/PowerFx/nuget/v3/index.json\n```\n\n- For detailed instructions [visit this page](dailyBuilds.md).\n\n## Samples\nThere are samples demonstrating how to consume Power Fx at: https://github.com/microsoft/power-fx-host-samples\n\nYou can also see usage examples in the [unit tests](https://github.com/microsoft/Power-Fx/tree/main/src/tests).\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Trademarks\n\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft \ntrademarks or logos is subject to and must follow \n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n  \n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.71484375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 0.4794921875,
          "content": "# Support\r\n\r\n## How to file issues and get help  \r\n\r\nThis project uses GitHub Issues to track bugs and feature requests. Please search the existing \r\nissues before filing new issues to avoid duplicates.  For new issues, file your bug or \r\nfeature request as a new Issue.\r\n\r\nFor help and questions about using this project, please use the Discussions section of this repo.\r\n\r\n## Microsoft Support Policy  \r\n\r\nSupport for this **PROJECT or PRODUCT** is limited to the resources listed above.\r\n"
        },
        {
          "name": "dailyBuilds.md",
          "type": "blob",
          "size": 1.65234375,
          "content": "# Consuming Power Fx daily builds\n\n## Connect to the feed\n\nDaily NuGet packages for Power Fx are published to [`Azure Artifacts`](https://dev.azure.com/Power-Fx/Power%20Fx/_artifacts/feed/PowerFx).\n\nFollow the configuration steps below, depending on your case:\n\n### Using dotnet command line\n\nAdd a nuget.config file to your project in the same folder as your .csproj or .sln file\n\n```<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key=\"SDK\" value=\"https://pkgs.dev.azure.com/Power-Fx/7dd30b4a-31be-4ac9-a649-e6addd4d5b0a/_packaging/PowerFx/nuget/v3/index.json\" />\n  </packageSources>\n</configuration>\n```\nRestore packages (the interactive flag allows dotnet to prompt you for credentials)\n```\ndotnet restore --interactive\n```\n`Note: You don't need --interactive every time. dotnet will prompt you to add --interactive if it needs updated credentials.`\n\n### Using Visual Studio\nOn the Tools menu, select Options > NuGet Package Manager > Package Sources. Select the green plus in the upper-right corner and enter the name and source URL below.\n\nName\n```\nSDK\n```\nSource\n```\nhttps://pkgs.dev.azure.com/Power-Fx/7dd30b4a-31be-4ac9-a649-e6addd4d5b0a/_packaging/PowerFx/nuget/v3/index.json\n```\n`Note: You need to do this on every machine that needs access to your packages. Use the command line instructions above if you want to complete the setup once and check it in to your repository.`\n\nOn the Tools menu, select Options > NuGet Package Manager > Package Manager Console. Find a package you want to use, copy the Package Manager command, and paste it in the Package Manager Console.\n\nFor example:\n```\nInstall-Package Microsoft.PowerFx.Core\n```"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "releasenotes",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}