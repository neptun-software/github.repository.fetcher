{
  "metadata": {
    "timestamp": 1736710711077,
    "page": 96,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/VisualStudioUninstaller",
      "stars": 3936,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7919921875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n## TODO: Comment the next line if you want to checkin your\n## web deploy settings but do note that will include unencrypted\n## passwords\n#*.pubxml\n\n# NuGet Packages Directory\npackages/*\n## TODO: If the tool you use requires repositories.config\n## uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since\n# NuGet packages use it for MSBuild targets.\n# This line needs to be after the ignore of the build folder\n# (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\n# Original shared repo content\ntelemetry/\ntools/*/\n"
        },
        {
          "name": ".nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7626953125,
          "content": "# Contribute to the Microsoft Visual Studio Uninstaller\n\nIn order to contribute, you will need to be able to build the source, deploy to test and run automated tests.\nPlease fork and send pull requests.\n\n## Building From Source\n\n### Clone the repo\n```bash\ngit clone https://github.com/Microsoft/VisualStudioUninstaller.git\n```\n\n### Build Pre-reqs\n\nYou will need Visual Studio 2013 Community or greater in order to build this project.\n```bash\nDownload it for free here: https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx \n```\n\n### Build\nOpen Uninstaller.sln in Visual Studio\n```bash\nBuild Solution\n```\n\nThis builds the project and output binaries to ./bin/Debug\n\n### Run Tests\n\nPlease run all unit tests in the solution prior to PR.\n\n```bash\nUnit tests\n```\n"
        },
        {
          "name": "DataFiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "ReadMe.md",
          "type": "blob",
          "size": 3.6494140625,
          "content": "Visual Studio Uninstaller\n=========\n\nThis executable is designed to clean up and delete Preview, RC and final releases of Visual Studio 2013 and Visual Studio 2015. It is designed to be used as a final resort to clean up a system of remaining artifacts from a non-successful installation, instead of having to reimage the machine.\n\nWARNING: running this application may stop earlier remaining installations of Visual Studio 2012 and earlier from working, because Visual Studio 2012 and below share MSI upgrade code with Visual Studio 2013 and above.\n\nDownload: https://github.com/Microsoft/VisualStudioUninstaller/releases\n\nHow it works?\n========\n\nThis app finds and uninstall every Preview/RC/RTM release of Visual Studio 2013 and 2015.  It will first execute uninstall command on the bundle, and then it will uninstall any stale MSIs. The application contains a master list of Bundle IDs and upgrade codes for every MSI ever chained in by Visual Studio 2013-2015.  It will not uninstall MSU or MSIs that marked as ReallyPermanent.  \n\nStatus\n========\nShipped\n\nContributing and building this project\n========\nSee CONTRIBUTING.md\n\nGoals/Vision/Scope\n========\nOur goal is to provide a way to thoroughly and reliably remove Visual Studio.  This program first attempts to force uninstall Visual Studio from top down, and then remove any remaining MSIs and MSUs.  This program will work on any BURN based Visual Studio; that means this program is only capable of removing Visual Studio 2012 - 2015.\n\nMailing list/contacts/forums\n========\nhttps://www.visualstudio.com/support/support-overview-vs \n\nUsage\n========\n\n**How to debug Total Uninstaller remotely?**\n\nIMPORTANT: Do not run this on your development machine without setting the `DoNotExecuteProcess` flag.  This will prevent the application from uninstalling the very development environment you are working from.   \n\nTo get the most out of the debug experience, I recommend the following:\n\n  1. Create a VM with Dev14 installed.\n  2. Start the 64-bit remote debugger with administrative privileges.\n  3. Copy the debug Bin directory to the VM.\n  4. Run the application with Administrative privileges.\n  5. Create a snapshot of the machine using Hyper-V.\n  6. Start a remote debugging session to your VM and attach.\n  7. Step through to your hearts delight.\n  8. If you find something you donâ€™t like, restore the snapshot and recopy the Bin directory and go to step 6 again.\n\n**Using Total Uninstall:**\n\n  1. Download and unzip the zip file to a folder.\n  2. Open cmd.exe with Administrative privileges\n  2. Execute Setup.ForcedUninstall.exe\n  3. Press Y and hit enter to run the application.\n  4. If the application ask to reboot the system, please reboot the system, and rerun this application again.\n\n**Commands:**\n\n  1. help or /help or /? : Print usage.\n  2. break : run the application and pause until the user hit any key.\n  3. noprocess : run the application but does not uninstall anything.\n\nRoadmap\n========\n1. Periodically update of the Total Uninstaller to ensure the data used for uninstallation is up to date with the most recent Visual Studio releases.\n\nOpen issues\n========\nPlease file an issue request as necessary.\n\nGuidelines\n=========\nThese are general guidelines for source code within this solution:\n\nNative code\n-----------\n\n* Parameters should be declared with SAL annotation.\n* Input string parameters should be declared as LPCWSTR.\n* Output string parameters should be declared as CStringW& references.\n* Class members should not be references or pointers, but be created and destroyed with the owning class.\n\n\nManaged code\n-----------\n\nPlease follow these coding standards:\nhttps://msdn.microsoft.com/en-us/library/Ff926074.aspx?f=255&MSPPError=-2147217396\n"
        },
        {
          "name": "TotalUninstaller EULA.docx",
          "type": "blob",
          "size": 41.212890625,
          "content": null
        },
        {
          "name": "Uninstaller.sln",
          "type": "blob",
          "size": 2.501953125,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 14\nVisualStudioVersion = 14.0.24720.0\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Uninstall_Wrapper\", \"src\\Uninstall_Wrapper\\Uninstall_Wrapper.csproj\", \"{1E70C6F2-8570-4620-822E-E3F71BF1A0F7}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"VS.ConfigurationManager\", \"src\\VS.ConfigurationManager\\VS.ConfigurationManager.csproj\", \"{CACCC6E1-FCB8-4DBE-9159-0F8EAA69D27A}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"VS.ConfigurationManager.Support\", \"src\\VS.ConfigurationManager.Support\\VS.ConfigurationManager.Support.csproj\", \"{13C73873-A5ED-42DE-97F0-A3B2D7A1D76F}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"UninstallerTests\", \"UninstallerTests\\UninstallerTests.csproj\", \"{9727E23C-496A-4887-9C87-C5A96F3B05B1}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{1E70C6F2-8570-4620-822E-E3F71BF1A0F7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1E70C6F2-8570-4620-822E-E3F71BF1A0F7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1E70C6F2-8570-4620-822E-E3F71BF1A0F7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1E70C6F2-8570-4620-822E-E3F71BF1A0F7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{CACCC6E1-FCB8-4DBE-9159-0F8EAA69D27A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{CACCC6E1-FCB8-4DBE-9159-0F8EAA69D27A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{CACCC6E1-FCB8-4DBE-9159-0F8EAA69D27A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{CACCC6E1-FCB8-4DBE-9159-0F8EAA69D27A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{13C73873-A5ED-42DE-97F0-A3B2D7A1D76F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{13C73873-A5ED-42DE-97F0-A3B2D7A1D76F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{13C73873-A5ED-42DE-97F0-A3B2D7A1D76F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{13C73873-A5ED-42DE-97F0-A3B2D7A1D76F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9727E23C-496A-4887-9C87-C5A96F3B05B1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9727E23C-496A-4887-9C87-C5A96F3B05B1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9727E23C-496A-4887-9C87-C5A96F3B05B1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9727E23C-496A-4887-9C87-C5A96F3B05B1}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "UninstallerTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.0908203125,
          "content": "Visual Studio Uninstaller\nCopyright (c) Microsoft Corporation\nAll rights reserved. \nMIT License\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}