{
  "metadata": {
    "timestamp": 1736710831419,
    "page": 345,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aaubry/YamlDotNet",
      "stars": 2607,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": ".git\nDockerfile.NonEnglish\nDockerfile\nbin\nobj"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 10.357421875,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Don't use tabs for indentation.\n[*]\nindent_style = space\n# (Please don't specify an indent_size here; that has too many unintended consequences.)\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8-bom\n\n# XML project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# XML config files\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]\nindent_size = 2\n\n# JSON files\n[*.json]\nindent_size = 2\n\n# Powershell files\n[*.ps1]\nindent_size = 2\n\n# Shell script files\n[*.sh]\nend_of_line = lf\nindent_size = 2\n\n#[*.cs]\n#dotnet_analyzer_diagnostic.category-Style.severity = error\n#dotnet_analyzer_diagnostic.category-CodeQuality.severity = error\n\n# Dotnet code style settings:\n[*.{cs,vb}]\n\nfile_header_template = This file is part of YamlDotNet - A .NET library for YAML.\\nCopyright (c) Antoine Aubry and contributors\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \"Software\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\\nof the Software, and to permit persons to whom the Software is furnished to do\\nso, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\n\n# IDE0055: Fix formatting\ndotnet_diagnostic.IDE0055.severity = warning\n\n# Sort using and Import directives with System.* appearing first\ndotnet_sort_system_directives_first = true\ndotnet_separate_import_directive_groups = false\n\n# Use language keywords instead of framework type names for type references\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n# Suggest more modern language features when available\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\n\n# Non-private static fields are PascalCase\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields\ndotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style\n\ndotnet_naming_symbols.non_private_static_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_static_fields.required_modifiers = static\n\ndotnet_naming_style.non_private_static_field_style.capitalization = pascal_case\n\n# Non-private readonly fields are PascalCase\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields\ndotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style\n\ndotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field\ndotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected\ndotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly\n\ndotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case\n\n# Constants are PascalCase\ndotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constants_should_be_pascal_case.symbols = constants\ndotnet_naming_rule.constants_should_be_pascal_case.style = constant_style\n\ndotnet_naming_symbols.constants.applicable_kinds = field, local\ndotnet_naming_symbols.constants.required_modifiers = const\n\ndotnet_naming_style.constant_style.capitalization = pascal_case\n\n# Static fields are camelCase without prefix\ndotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields\ndotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style\n\ndotnet_naming_symbols.static_fields.applicable_kinds = field\ndotnet_naming_symbols.static_fields.required_modifiers = static\n\ndotnet_naming_style.static_field_style.capitalization = pascal_case\n\n# Instance fields are camelCase without prefix\ndotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields\ndotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style\n\ndotnet_naming_symbols.instance_fields.applicable_kinds = field\ndotnet_naming_symbols.instance_fields.applicable_accessibilities = protected, internal, protected_internal, private_protected, private\n\ndotnet_naming_style.instance_field_style.capitalization = camel_case\n\n# Locals and parameters are camelCase\ndotnet_naming_rule.locals_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters\ndotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style\n\ndotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local\n\ndotnet_naming_style.camel_case_style.capitalization = camel_case\n\n# Local functions are PascalCase\ndotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions\ndotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style\n\ndotnet_naming_symbols.local_functions.applicable_kinds = local_function\n\ndotnet_naming_style.local_function_style.capitalization = pascal_case\n\n# By default, name items with PascalCase\ndotnet_naming_rule.members_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.members_should_be_pascal_case.symbols = all_members\ndotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style\n\ndotnet_naming_symbols.all_members.applicable_kinds = *\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# error RS2008: Enable analyzer release tracking for the analyzer project containing rule '{0}'\ndotnet_diagnostic.RS2008.severity = none\n\n# IDE0073: File header\ndotnet_diagnostic.IDE0073.severity = warning\n\n# IDE0035: Remove unreachable code\ndotnet_diagnostic.IDE0035.severity = warning\n\n# IDE0036: Order modifiers\ndotnet_diagnostic.IDE0036.severity = warning\n\n# IDE0043: Format string contains invalid placeholder\ndotnet_diagnostic.IDE0043.severity = warning\n\n# IDE0044: Make field readonly\ndotnet_diagnostic.IDE0044.severity = warning\n\n# CSharp code style settings:\n[*.cs]\n# Newline settings\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n\n# Prefer \"var\" everywhere\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\n\n# Prefer method-like constructs to have a block body\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\n\n# Prefer property-like constructs to have an expression-body\ncsharp_style_expression_bodied_properties = true:none\ncsharp_style_expression_bodied_indexers = true:none\ncsharp_style_expression_bodied_accessors = true:none\n\n# Suggest more modern language features when available\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# Blocks are allowed\ncsharp_prefer_braces = true\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\n\n# Unusable features\ncsharp_style_prefer_range_operator = false\ncsharp_style_prefer_index_operator = false\n\n# IDE0011: Add braces\ndotnet_diagnostic.IDE0011.severity = warning\n\n# IDE0005: Using directive is unnecessary.\ndotnet_diagnostic.IDE0005.severity = suggestion\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.052734375,
          "content": "*.sh text eol=lf\n*.cs text eol=crlf\n*.fs text eol=crlf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5439453125,
          "content": "# Build Folders (you can keep bin if you'd like, to store dlls and pdbs)\nbin\nobj\n\n# mstest test results\nTestResults\n*.suo\n*.user\n*.userprefs\n*.pidb\n*.bak\n*.orig\nHelp/*\nrelease/*\n_ReSharper.*\n*.pidb\n*.userprefs\npackages\npackages/*\n!packages/repositories.config\n.vscode\n\n*.nuspec.tmp\nREADME.html\n\nsamples/dotnet/project.lock.json\nYamlDotNet/Properties/AssemblyInfo.Generated.cs\n\n.vs\n.idea\n\n/YamlDotNet/Properties/AssemblyInfo.cs\nBenchmarkDotNet.Artifacts*\n\n/YamlDotNet.AotTest/exitcode.txt\n/tools/build/Properties/launchSettings.json\n/YamlDotNet.Unity\n*.meta\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.28515625,
          "content": "[submodule \"BuildUtils.UnityPrerequisites\"]\n\tpath = BuildUtils.UnityPrerequisites\n\turl = https://github.com/aaubry/BuildUtils.UnityPrerequisites.git\n[submodule \"yaml-test-suite\"]\n\tpath = YamlDotNet.Test/yaml-test-suite\n\turl = https://github.com/yaml/yaml-test-suite\n\tbranch = data-2022-01-17\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.005859375,
          "content": "# Contributing to YamlDotNet\n\n**Welcome!**  \nThanks for your interest in contributing to this project. Any contribution will\nbe gladly accepted, provided that they are generally useful and follow the\nconventions of the project.\n\nIf you are considering a contribution, please read and follow these guidelines.\n\n## Pull requests\n\nAll contributions should be submitted as pull requests.\n\n1. Please create **one pull request for each feature**. This results in smaller pull requests that are easier to review and validate.\n\n1. **Avoid reformatting existing code** unless you are making other changes to it.\n   * Cleaning-up of `using`s is acceptable, if you made other changes to that file.\n   * If you believe that some code is badly formatted and needs fixing, isolate that change in a separate pull request.\n\n1. Always add one or more **unit tests** that prove that the feature / fix you are submitting is working correctly.\n\n1. Please **describe the motivation** behind the pull request. Explain what was the problem / requirement. Unless the implementation is self-explanatory, also describe the solution.\n   * Of course, there's no need to be too verbose. Usually one or two lines will be enough.\n\n## Project organization\n\nThe main project, YamlDotNet.csproj, is organized in three main namespaces: `Core`, `RepresentationModel` and `Serialization`. The `Core` namespace contains everything that is related to reading and writing YAML. The `RepresentationModel` has classes that represent a YAML stream, similar to XmlDocument for XML. The `Serialization` namespace contains classes to serialize and deserialize object graphs to / from YAML.\n\nUnit tests are all contained in the project named YamlDotNet.Test.csproj.\n\nThe PerformanceTests folder contains various projects that contain performance tests that compare various versions of YamlDotNet to detect the impact of new features.\n\n## Building / multiplatform\n\nThis repository uses submodules. **Before building, make sure that you update them** using the following command:\n```\ngit submodule update --init\n```\n\nIn order to build locally, you need at least to install the [.NET Core 3.1 SDK](https://dotnet.microsoft.com/download). Alternatively, you may install [Visual Studio 2019 Community](https://visualstudio.microsoft.com/vs/), which will install it for you and allow you to edit the code as well.\n\nBuilding for Unity requires installing\n[Visual Studio Tools for Unity](https://visualstudiogallery.msdn.microsoft.com/20b80b8c-659b-45ef-96c1-437828fe7cf2/file/92287/8/Visual%20Studio%202013%20Tools%20for%20Unity.msi).\n\n**TODO**: Other .NET SDKs are probably needed. Check the correct set of requirements and update this page.\n\nThis project is compatible with the standard `dotnet` tool, so building the project is as simple as running the following command:\n```\ndotnet build\n```\n\nYou can also run the unit tests in a similar fashion:\n```\ndotnet test\n```\n\n### Build tool\n\nThere is a program inside `/tools/build` that orchestrates other automation tasks. This tool can be executed by calling `build.cmd <target>`, where `<target>` is one of the following:\n\n#### `Pack`\n\nBuilds the project and produces a NuGet package.\n\n#### `Publish`\n\nBuilds the project and publishes a NuGet package to nuget.org. In order to do so, an environment variable named `NUGET_API_KEY` must be set.\n\n#### `Release`\n\nIf there are no release notes for the current version, generates those release notes from the git log and exits.  \nOtherwise, creates a release from the current commit by performing the following:\n1. Update the `RELEASE_NOTES.md` file.\n2. Commit the `RELEASE_NOTES.md` and the release notes for the current version.\n3. Tags the commit with the current version.\n\nOnce this is done, the tag must be pushed manually to the repository.\n\n#### `Document`\n\nGenerates the samples documentation.\n\n### Continuous integration\n\nEvery commit and pull request is built on [AppVeyor](https://ci.appveyor.com/project/aaubry/yamldotnet). The build definition is kept intentionally simple. All the logic is delegated to the build tool. This makes it easy to use a different CI provider, or even to run the builds manually.\n\n### Target platforms\n\nThe project targets the following platforms:\n\n* .NET Framework 4.7\n* .NET Framework 4.5\n* .NET Framework 3.5\n* .NET Standard 2.1\n* Unity Subset v3.5\n* .NET 6.0\n\nIn the csproj, the `TargetFrameworks` element also targets the following platforms for technical reasons:\n\n* net40: this is a hack used to target Unity. That target is overriden and in reality it targets Unity Subset v3.5.\n* .NET Core 3.0: this is to benefit from nullable annotations in the BCL.\n\n### Build configurations\n\nThere are a few differences between the various target platforms,\nmainly in the reflection API. In order to adapt the code to each platform,\n`#if ... #endif` sections are used. When possible, such sections should be placed\nin the `Helpers/Portability.cs` file. An effective technique is to define an extension\nmethod that is used through the code, and has different implementations depending\non the build variables.\n\n## AOT compatibility\n\nSome platforms - such as IOS - forbid dynamic code generation. This prevents Just-in-Time compilation (JIT) from being used. In those cases, one can use Mono's Ahead-of-Time compilation (AOT). This results on a precompiled assembly that does not rely on JIT. There are [some limitations](http://www.mono-project.com/docs/advanced/aot/#limitation-generic-interface-instantiation) however, most of them are related to usage of generics.\n\nYou can use the StaticSerializerBuilder and StaticDeserializerBuilder to accomplish this.\n\n## Coding style\n\nAttempt to follow the [SOLID](https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29) principles. In particular, try to give each type a single responsibility, and favour composition to combine features.\n\nAs long as you keep the code readable, I don't care too much about any specific coding convention. There are only a few rules that should be honoured:\n\n* Use **4 spaces** to indent.\n* Each class / interface / struct / delegate **goes to its own file**.\n  * The only acceptable exception is for small and closely related types.\n* Use sane indentation rules. Break long lines when needed, but don't be obsessive:\n  * This is **OK**:\n\n    ```C#\n    Traverse(\n        new ObjectDescriptor(\n            value.Value,\n            underlyingType,\n            value.Type,\n            value.ScalarStyle\n        ),\n        visitor,\n        currentDepth\n    );\n    ```\n  * This is **OK too**:\n\n    ```C#\n    Traverse(\n        new ObjectDescriptor(value.Value, underlyingType, value.Type, value.ScalarStyle),\n        visitor,\n        currentDepth\n    );\n    ```\n  * This is **not very good**:\n\n    ```C#\n    Traverse(new ObjectDescriptor(value.Value, underlyingType, value.Type, value.ScalarStyle), visitor, currentDepth);\n    ```\n  * This is **awful**:\n\n    ```C#\n    Traverse(new ObjectDescriptor(value.Value,\n                                  underlyingType,\n                                  value.Type,\n                                  value.ScalarStyle),\n             visitor,\n             currentDepth);\n    ```\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.8125,
          "content": "<Project>\n\n  <PropertyGroup Label=\"Package properties\">\n    <Authors>Antoine Aubry</Authors>\n    <PackageProjectUrl>https://github.com/aaubry/YamlDotNet/wiki</PackageProjectUrl>\n    <RepositoryUrl>https://github.com/aaubry/YamlDotNet</RepositoryUrl>\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\n    <Copyright>Copyright (c) Antoine Aubry and contributors</Copyright>\n    <PackageTags>yaml parser development library serialization</PackageTags>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <WarningLevel>9999</WarningLevel>\n    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>\n    <LangVersion>12.0</LangVersion>\n  </PropertyGroup>\n  \n  <PropertyGroup Condition=\"$(Configuration) == 'Release'\" Label=\"Code style enforcement\">\n    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n  </PropertyGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 1.388671875,
          "content": "<Project>\n  <PropertyGroup>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageVersion Include=\"BenchmarkDotNet\" Version=\"0.14.0\" />\n    <PackageVersion Include=\"Bullseye\" Version=\"4.1.1\" />\n    <PackageVersion Include=\"coverlet.collector\" Version=\"6.0.2\" />\n    <PackageVersion Include=\"FakeItEasy\" Version=\"8.3.0\" />\n    <PackageVersion Include=\"FluentAssertions\" Version=\"6.12.1\" />\n    <PackageVersion Include=\"FSharp.Core\" Version=\"8.0.400\" />\n    <PackageVersion Include=\"Microsoft.AspNet.WebApi.Client\" Version=\"6.0.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.3.3\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"4.4.0\" />\n    <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.11.1\" />\n    <PackageVersion Include=\"Nullable\" Version=\"1.3.1\" />\n    <PackageVersion Include=\"ObjectLayoutInspector\" Version=\"0.1.2\" />\n    <PackageVersion Include=\"SimpleExec\" Version=\"12.0.0\" />\n    <PackageVersion Include=\"System.Collections.Immutable\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"System.Reflection.Metadata\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"xunit\" Version=\"2.9.0\" />\n    <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"2.8.2\" />\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.1240234375,
          "content": "FROM mcr.microsoft.com/dotnet/sdk:8.0 AS builder\r\nRUN apt update && \\\r\n    apt install -y \\\r\n        apt-transport-https \\\r\n        gnupg \\\r\n        ca-certificates \\\r\n        curl\r\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\r\n# yes, we're using the bullseye (debian 11) image, however mono only has buster, but it still works for bullseye\r\nRUN echo \"deb https://download.mono-project.com/repo/debian stable-buster main\" > /etc/apt/sources.list.d/mono-official-stable.list\r\nRUN apt update\r\nRUN apt install -y mono-complete\r\n\r\n# install dot net 3.1 for running netstandard2.1 tests\r\nRUN apt install -y wget\r\nRUN wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\r\nRUN dpkg -i packages-microsoft-prod.deb\r\nRUN apt update\r\nRUN apt install -y dotnet-sdk-6.0\r\n\r\nFROM builder AS build\r\nWORKDIR /src\r\nARG PACKAGE_VERSION=1.0.0\r\n\r\nCOPY YamlDotNet.sln YamlDotNet.sln\r\nCOPY YamlDotNet/YamlDotNet.csproj YamlDotNet/YamlDotNet.csproj\r\nCOPY YamlDotNet.Benchmark/YamlDotNet.Benchmark.csproj YamlDotNet.Benchmark/YamlDotNet.Benchmark.csproj\r\nCOPY YamlDotNet.Samples/YamlDotNet.Samples.csproj YamlDotNet.Samples/YamlDotNet.Samples.csproj\r\nCOPY YamlDotNet.Test/YamlDotNet.Test.csproj YamlDotNet.Test/YamlDotNet.Test.csproj\r\nCOPY YamlDotNet.Analyzers.StaticGenerator/YamlDotNet.Analyzers.StaticGenerator.csproj YamlDotNet.Analyzers.StaticGenerator/YamlDotNet.Analyzers.StaticGenerator.csproj\r\nCOPY YamlDotNet.Core7AoTCompileTest/YamlDotNet.Core7AoTCompileTest.csproj YamlDotNet.Core7AoTCompileTest/YamlDotNet.Core7AoTCompileTest.csproj\r\nCOPY YamlDotNet.Core7AoTCompileTest.Model/YamlDotNet.Core7AoTCompileTest.Model.csproj YamlDotNet.Core7AoTCompileTest.Model/YamlDotNet.Core7AoTCompileTest.Model.csproj\r\nCOPY YamlDotNet.Samples.Fsharp/YamlDotNet.Samples.Fsharp.fsproj YamlDotNet.Samples.Fsharp/YamlDotNet.Samples.Fsharp.fsproj\r\nCOPY YamlDotNet.Fsharp.Test/YamlDotNet.Fsharp.Test.fsproj YamlDotNet.Fsharp.Test/YamlDotNet.Fsharp.Test.fsproj\r\n\r\nRUN dotnet restore YamlDotNet.sln\r\n\r\nCOPY . .\r\n\r\nRUN dotnet build -c Release --framework net47 YamlDotNet/YamlDotNet.csproj -o /output/net47\r\nRUN dotnet build -c Release --framework netstandard2.0 YamlDotNet/YamlDotNet.csproj -o /output/netstandard2.0\r\nRUN dotnet build -c Release --framework netstandard2.1 YamlDotNet/YamlDotNet.csproj -o /output/netstandard2.1\r\nRUN dotnet build -c Release --framework net6.0 YamlDotNet/YamlDotNet.csproj -o /output/net6.0\r\nRUN dotnet build -c Release --framework net8.0 YamlDotNet/YamlDotNet.csproj -o /output/net8.0\r\n\r\nRUN dotnet pack -c Release YamlDotNet/YamlDotNet.csproj -o /output/package /p:Version=$PACKAGE_VERSION\r\n\r\nRUN dotnet test -c Release YamlDotNet.Test/YamlDotNet.Test.csproj --framework net8.0 --logger:\"trx;LogFileName=/output/tests-net8.0.trx\" --logger:\"console;Verbosity=detailed\"\r\nRUN dotnet test -c Release YamlDotNet.Test/YamlDotNet.Test.csproj --framework net6.0 --logger:\"trx;LogFileName=/output/tests-net6.0.trx\" --logger:\"console;Verbosity=detailed\"\r\n\r\nFROM alpine\r\nVOLUME /output\r\nWORKDIR /libraries\r\nCOPY --from=build /output /libraries\r\nCMD [ \"cp\", \"-r\", \"/libraries\", \"/output\" ]"
        },
        {
          "name": "Dockerfile.NonEnglish",
          "type": "blob",
          "size": 3.703125,
          "content": "FROM mcr.microsoft.com/dotnet/sdk:8.0 AS builder\nRUN apt update && \\\n    apt install -y \\\n        apt-transport-https \\\n        gnupg \\\n        ca-certificates \\\n        curl\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\n# yes, we're using the bullseye (debian 11) image, however mono only has buster, but it still works for bullseye\nRUN echo \"deb https://download.mono-project.com/repo/debian stable-buster main\" > /etc/apt/sources.list.d/mono-official-stable.list\nRUN apt update\nRUN apt install -y mono-complete\n\n# install dot net 3.1 for running netstandard2.1 tests\nRUN apt install -y wget\nRUN wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nRUN dpkg -i packages-microsoft-prod.deb\nRUN apt update\nRUN apt install -y dotnet-sdk-6.0\n\n\nFROM builder AS build\nWORKDIR /src\nARG PACKAGE_VERSION=1.0.0\n\nCOPY YamlDotNet.sln YamlDotNet.sln\nCOPY YamlDotNet/YamlDotNet.csproj YamlDotNet/YamlDotNet.csproj\nCOPY YamlDotNet.Benchmark/YamlDotNet.Benchmark.csproj YamlDotNet.Benchmark/YamlDotNet.Benchmark.csproj\nCOPY YamlDotNet.Samples/YamlDotNet.Samples.csproj YamlDotNet.Samples/YamlDotNet.Samples.csproj\nCOPY YamlDotNet.Test/YamlDotNet.Test.csproj YamlDotNet.Test/YamlDotNet.Test.csproj\nCOPY YamlDotNet.Analyzers.StaticGenerator/YamlDotNet.Analyzers.StaticGenerator.csproj YamlDotNet.Analyzers.StaticGenerator/YamlDotNet.Analyzers.StaticGenerator.csproj\nCOPY YamlDotNet.Core7AoTCompileTest/YamlDotNet.Core7AoTCompileTest.csproj YamlDotNet.Core7AoTCompileTest/YamlDotNet.Core7AoTCompileTest.csproj\nCOPY YamlDotNet.Core7AoTCompileTest.Model/YamlDotNet.Core7AoTCompileTest.Model.csproj YamlDotNet.Core7AoTCompileTest.Model/YamlDotNet.Core7AoTCompileTest.Model.csproj\nCOPY YamlDotNet.Samples.Fsharp/YamlDotNet.Samples.Fsharp.fsproj YamlDotNet.Samples.Fsharp/YamlDotNet.Samples.Fsharp.fsproj\nCOPY YamlDotNet.Fsharp.Test/YamlDotNet.Fsharp.Test.fsproj YamlDotNet.Fsharp.Test/YamlDotNet.Fsharp.Test.fsproj\n\nRUN dotnet restore YamlDotNet.sln\n\nCOPY . .\n\nRUN dotnet build -c Release --framework net47 YamlDotNet/YamlDotNet.csproj -o /output/net47\nRUN dotnet build -c Release --framework netstandard2.0 YamlDotNet/YamlDotNet.csproj -o /output/netstandard2.0\nRUN dotnet build -c Release --framework netstandard2.1 YamlDotNet/YamlDotNet.csproj -o /output/netstandard2.1\nRUN dotnet build -c Release --framework net6.0 YamlDotNet/YamlDotNet.csproj -o /output/net6.0\nRUN dotnet build -c Release --framework net8.0 YamlDotNet/YamlDotNet.csproj -o /output/net8.0\n\nRUN dotnet pack -c Release YamlDotNet/YamlDotNet.csproj -o /output/package /p:Version=$PACKAGE_VERSION\n\nARG LOCALE_LANGUAGE=\"en\"\nARG LOCALE_COUNTRY=\"DK\"\nARG LOCALE_LOCALE=\"${LOCALE_LANGUAGE}_${LOCALE_COUNTRY}\"\nARG LOCALE_ENCODING=\"UTF-8\"\n\nENV LANG=\"${LOCALE_LANGUAGE}_${LOCALE_COUNTRY}.${LOCALE_ENCODING}\"\nENV LANGUAGE=\"${LOCALE_LANGUAGE}_${LOCALE_COUNTRY}:${LOCALE_LANGUAGE}\"\nENV LC_ALL=\"${LOCALE_LANGUAGE}_${LOCALE_COUNTRY}.${LOCALE_ENCODING}\"\n\nRUN echo -n \"${LC_ALL}\" > /etc/locale.gen && \\\n    printenv && \\\n    apt install -y locales && \\\n    locale-gen\n\nRUN dotnet test -c Release YamlDotNet.Test/YamlDotNet.Test.csproj --framework net8.0 --logger:\"trx;LogFileName=/output/tests-net8.0.trx\" --logger:\"console;Verbosity=detailed\"\nRUN dotnet test -c Release YamlDotNet.Test/YamlDotNet.Test.csproj --framework net6.0 --logger:\"trx;LogFileName=/output/tests-net6.0.trx\" --logger:\"console;Verbosity=detailed\"\nRUN dotnet test -c Release YamlDotNet.Test/YamlDotNet.Test.csproj --framework netcoreapp3.1 --logger:\"trx;LogFileName=/output/tests-netcoreapp3.1.trx\" --logger:\"console;Verbosity=detailed\"\n\nFROM alpine\nVOLUME /output\nWORKDIR /libraries\nCOPY --from=build /output /libraries\nCMD [ \"cp\", \"-r\", \"/libraries\", \"/output\" ]"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.1943359375,
          "content": "mode: ContinuousDelivery\nincrement: None\ncommit-message-incrementing: MergeMessageOnly\nbranches:\n  master:\n    commit-message-incrementing: MergeMessageOnly\n    increment: None\n    regex: \"^master$\"\n"
        },
        {
          "name": "LICENSE-libyaml",
          "type": "blob",
          "size": 1.0517578125,
          "content": "Copyright (c) 2006 Kirill Simonov\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\nof the Software, and to permit persons to whom the Software is furnished to do\r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.083984375,
          "content": "Copyright (c) 2008, 2009, 2010, 2011, 2012, 2013, 2014 Antoine Aubry and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.455078125,
          "content": "# YamlDotNet\n\n| Appveyor | NuGet |\n|----------|-------|\n|[![Build status](https://ci.appveyor.com/api/projects/status/github/aaubry/yamldotnet?svg=true)](https://ci.appveyor.com/project/aaubry/yamldotnet/branch/master)|  [![NuGet](https://img.shields.io/nuget/v/YamlDotNet.svg)](https://www.nuget.org/packages/YamlDotNet/)\n\n\nYamlDotNet is a YAML library for [netstandard and other .NET runtimes](#the-yamldotnet-library).\n\nYamlDotNet provides low level parsing and emitting of YAML as well as a high level object model similar to XmlDocument. A serialization library is also included that allows to read and write objects from and to YAML streams.\n\nYamlDotNet's conformance with YAML specifications:\n\n|            YAML Spec                | YDN Parser | YDN Emitter |\n|:-----------------------------------:|:----------:|:-----------:|\n|  [v1.1](https://yaml.org/spec/1.1/)  |     ✓      |      ✓      |\n|  [v1.2](https://yaml.org/spec/1.2/spec.html)  |     ✓      |             |\n\n\n## What is YAML?\n\nYAML, which stands for \"YAML Ain't Markup Language\", is described as \"a human friendly data serialization standard for all programming languages\". Like XML, it allows to represent about any kind of data in a portable, platform-independent format. Unlike XML, it is \"human friendly\", which means that it is easy for a human to read or produce a valid YAML document.\n\n## The YamlDotNet library\n\nThe library has now been successfully used in multiple projects and is considered fairly stable. It is compatible with the following runtimes:\n\n* netstandard 2.0\n* netstandard 2.1\n* .NET 6.0\n* .NET 8.0\n* .NET Framework 4.7\n\n## Quick start\n\nHere are some quick samples to get you started which can be viewed in [this fiddle](https://dotnetfiddle.net/CQ7ZKi).\n\n### Serialization from an object to a string\n\n```c#\nusing YamlDotNet.Serialization;\nusing YamlDotNet.Serialization.NamingConventions;\n...\n\n var person = new Person\n{\n    Name = \"Abe Lincoln\",\n    Age = 25,\n    HeightInInches = 6f + 4f / 12f,\n    Addresses = new Dictionary<string, Address>{\n        { \"home\", new  Address() {\n                Street = \"2720  Sundown Lane\",\n                City = \"Kentucketsville\",\n                State = \"Calousiyorkida\",\n                Zip = \"99978\",\n            }},\n        { \"work\", new  Address() {\n                Street = \"1600 Pennsylvania Avenue NW\",\n                City = \"Washington\",\n                State = \"District of Columbia\",\n                Zip = \"20500\",\n            }},\n    }\n};\n\nvar serializer = new SerializerBuilder()\n    .WithNamingConvention(CamelCaseNamingConvention.Instance)\n    .Build();\nvar yaml = serializer.Serialize(person);\nSystem.Console.WriteLine(yaml);\n// Output: \n// name: Abe Lincoln\n// age: 25\n// heightInInches: 6.3333334922790527\n// addresses:\n//   home:\n//     street: 2720  Sundown Lane\n//     city: Kentucketsville\n//     state: Calousiyorkida\n//     zip: 99978\n//   work:\n//     street: 1600 Pennsylvania Avenue NW\n//     city: Washington\n//     state: District of Columbia\n//     zip: 20500\n```\n\n### Deserialization from a string to an object\n\n```c#\nusing YamlDotNet.Serialization;\nusing YamlDotNet.Serialization.NamingConventions;\n...\n\nvar yml = @\"\nname: George Washington\nage: 89\nheight_in_inches: 5.75\naddresses:\n  home:\n    street: 400 Mockingbird Lane\n    city: Louaryland\n    state: Hawidaho\n    zip: 99970\n\";\n\nvar deserializer = new DeserializerBuilder()\n    .WithNamingConvention(UnderscoredNamingConvention.Instance)  // see height_in_inches in sample yml \n    .Build();\n\n//yml contains a string containing your YAML\nvar p = deserializer.Deserialize<Person>(yml);\nvar h = p.Addresses[\"home\"];\nSystem.Console.WriteLine($\"{p.Name} is {p.Age} years old and lives at {h.Street} in {h.City}, {h.State}.\");\n// Output:\n// George Washington is 89 years old and lives at 400 Mockingbird Lane in Louaryland, Hawidaho.\n```\n\n## More information\n\nMore information can be found in the [project's wiki](https://github.com/aaubry/YamlDotNet/wiki).\n\n## Installing\n\nJust install the [YamlDotNet NuGet package](http://www.nuget.org/packages/YamlDotNet/):\n\n```\nPM> Install-Package YamlDotNet\n```\n\nIf you do not want to use NuGet, you can [download binaries here](https://ci.appveyor.com/project/aaubry/yamldotnet).\n\nYamlDotNet is also available on the [Unity Asset Store](https://assetstore.unity.com/packages/tools/integration/yamldotnet-for-unity-36292).\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.\n\n## Release notes\n\nPlease see the Releases at https://github.com/aaubry/YamlDotNet/releases\n\n"
        },
        {
          "name": "YamlDotNet.Analyzers.StaticGenerator",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Core7AoTCompileTest.Model",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Core7AoTCompileTest",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Fsharp.Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Samples.Fsharp",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "YamlDotNet.sln",
          "type": "blob",
          "size": 5.7734375,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 17\r\nVisualStudioVersion = 17.2.32616.157\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet\", \"YamlDotNet\\YamlDotNet.csproj\", \"{ABFC2E37-119B-439D-82B6-49E9680EEA90}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Samples\", \"YamlDotNet.Samples\\YamlDotNet.Samples.csproj\", \"{689D2A30-C52E-4CF8-8BA1-3178F4EB245A}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Test\", \"YamlDotNet.Test\\YamlDotNet.Test.csproj\", \"{A9F67018-0240-4D16-A4EA-BCB780D0AF05}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{EB11D2D9-6E3D-45BF-8BCD-A04BCB1F8020}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\t.editorconfig = .editorconfig\r\n\t\tappveyor.yml = appveyor.yml\r\n\t\tCONTRIBUTING.md = CONTRIBUTING.md\r\n\t\tGitVersion.yml = GitVersion.yml\r\n\t\tLICENSE-libyaml = LICENSE-libyaml\r\n\t\tLICENSE.txt = LICENSE.txt\r\n\t\tREADME.md = README.md\r\n\t\tDirectory.Build.props = Directory.Build.props\r\n\t\tDirectory.Packages.props = Directory.Packages.props\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Benchmark\", \"YamlDotNet.Benchmark\\YamlDotNet.Benchmark.csproj\", \"{52D1E5F3-8337-48FC-AED5-968B51C7DAEB}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Analyzers.StaticGenerator\", \"YamlDotNet.Analyzers.StaticGenerator\\YamlDotNet.Analyzers.StaticGenerator.csproj\", \"{42DE4D20-AEF7-4235-9CB2-1ED0150B3D1B}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Core7AoTCompileTest\", \"YamlDotNet.Core7AoTCompileTest\\YamlDotNet.Core7AoTCompileTest.csproj\", \"{DEB5099E-D216-438B-86A7-03674F9185EF}\"\r\nEndProject\r\nProject(\"{6EC3EE1D-3C4E-46DD-8F32-0CC8E7565705}\") = \"YamlDotNet.Samples.Fsharp\", \"YamlDotNet.Samples.Fsharp\\YamlDotNet.Samples.Fsharp.fsproj\", \"{C047392D-6B20-47CD-9FE6-D0FA326FD262}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"YamlDotNet.Core7AoTCompileTest.Model\", \"YamlDotNet.Core7AoTCompileTest.Model\\YamlDotNet.Core7AoTCompileTest.Model.csproj\", \"{BFE15564-7C2C-47DA-8302-9BCB39B6864B}\"\r\nEndProject\r\nProject(\"{F2A71F9B-5D33-465A-A702-920D77279786}\") = \"YamlDotNet.Fsharp.Test\", \"YamlDotNet.Fsharp.Test\\YamlDotNet.Fsharp.Test.fsproj\", \"{294EFEB3-4DC2-4105-ADE7-E429F5522419}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{ABFC2E37-119B-439D-82B6-49E9680EEA90}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{ABFC2E37-119B-439D-82B6-49E9680EEA90}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{ABFC2E37-119B-439D-82B6-49E9680EEA90}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{ABFC2E37-119B-439D-82B6-49E9680EEA90}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{689D2A30-C52E-4CF8-8BA1-3178F4EB245A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{689D2A30-C52E-4CF8-8BA1-3178F4EB245A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{689D2A30-C52E-4CF8-8BA1-3178F4EB245A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{689D2A30-C52E-4CF8-8BA1-3178F4EB245A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{A9F67018-0240-4D16-A4EA-BCB780D0AF05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{A9F67018-0240-4D16-A4EA-BCB780D0AF05}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{A9F67018-0240-4D16-A4EA-BCB780D0AF05}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{A9F67018-0240-4D16-A4EA-BCB780D0AF05}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{52D1E5F3-8337-48FC-AED5-968B51C7DAEB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{52D1E5F3-8337-48FC-AED5-968B51C7DAEB}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{52D1E5F3-8337-48FC-AED5-968B51C7DAEB}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{52D1E5F3-8337-48FC-AED5-968B51C7DAEB}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{42DE4D20-AEF7-4235-9CB2-1ED0150B3D1B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{42DE4D20-AEF7-4235-9CB2-1ED0150B3D1B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{42DE4D20-AEF7-4235-9CB2-1ED0150B3D1B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{42DE4D20-AEF7-4235-9CB2-1ED0150B3D1B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{DEB5099E-D216-438B-86A7-03674F9185EF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{DEB5099E-D216-438B-86A7-03674F9185EF}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{DEB5099E-D216-438B-86A7-03674F9185EF}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{DEB5099E-D216-438B-86A7-03674F9185EF}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{C047392D-6B20-47CD-9FE6-D0FA326FD262}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{C047392D-6B20-47CD-9FE6-D0FA326FD262}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{C047392D-6B20-47CD-9FE6-D0FA326FD262}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{C047392D-6B20-47CD-9FE6-D0FA326FD262}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{BFE15564-7C2C-47DA-8302-9BCB39B6864B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{BFE15564-7C2C-47DA-8302-9BCB39B6864B}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{BFE15564-7C2C-47DA-8302-9BCB39B6864B}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{BFE15564-7C2C-47DA-8302-9BCB39B6864B}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{294EFEB3-4DC2-4105-ADE7-E429F5522419}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{294EFEB3-4DC2-4105-ADE7-E429F5522419}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{294EFEB3-4DC2-4105-ADE7-E429F5522419}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{294EFEB3-4DC2-4105-ADE7-E429F5522419}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {B388A06A-D288-4E48-B2A1-AE0E06E14EE4}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "YamlDotNet.snk",
          "type": "blob",
          "size": 0.58203125,
          "content": null
        },
        {
          "name": "YamlDotNet",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.310546875,
          "content": "version: 0.0.{build}\r\n\r\nimage: Visual Studio 2022\r\n\r\ntest: off\r\n\r\nenvironment:\r\n  NUGET_API_KEY:\r\n    secure: deduMBW7Ca8K0ISm/1S9wmf8I8Fd5rEIg3BTA93F0/HkA2NRyH1EOjHI10feAOYk\r\n  GITHUB_TOKEN:\r\n    secure: ulVa56sjSUcOy/08/Qn88LsGVfndWBizu5gRdVTvsGu/ju1fKUe8XCZPvUvypvWH\r\n  TWITTER_CONSUMER_API_KEY:\r\n    secure: o4jM6NnXqtI3/Bzef2xpcTAOuPn/WwO+khiWvrbletk=\r\n  TWITTER_CONSUMER_API_SECRET:\r\n    secure: a4TQjB1vp0lRFZ7aA7RamHAhkHlPlMqdvsaZvzGs/pPkR+YfuGQ7AKlknD26HIE0xGUTi8M1wqffQUKJL1knHg==\r\n  TWITTER_ACCESS_TOKEN:\r\n    secure: TfgxKzf9AAbDuJmuYnnzjYKhHcxyYv7Z+AnFRzlQc5CcIJ3h52YZAokQGF3n3K8r21V1DxeKHc/qWG1yZs4NKg==\r\n  TWITTER_ACCESS_TOKEN_SECRET:\r\n    secure: aMvxmavbq8tylMDe8QGEdemNMPzrd7i6982i/iVydNYHhUvzV7lw5AJsiEpfRyzt\r\n\r\ninstall:\r\n  - cmd: git submodule update --init\r\n  - cmd: dotnet tool install --global GitVersion.Tool\r\n\r\nbuild_script:\r\n  - cmd: .\\build.cmd --appveyor\r\n\r\nartifacts:\r\n  - path: YamlDotNet\\bin\\Release\\netstandard2.0\r\n    name: Release-NetStandard-2.0\r\n\r\n  - path: YamlDotNet\\bin\\Release\\netstandard2.1\r\n    name: Release-NetStandard-2.1\r\n\r\n  - path: YamlDotNet\\bin\\Release\\net47\r\n    name: Release-Net47\r\n\r\n  - path: YamlDotNet\\bin\\Release\\net6.0\r\n    name: Release-Net60\r\n\r\n  - path: YamlDotNet\\bin\\Release\\net8.0\r\n    name: Release-Net80\r\n\r\n  - path: YamlDotNet\\bin\\*.nupkg\r\n  - path: YamlDotNet\\bin\\*.snupkg\r\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.064453125,
          "content": "@echo off\r\ndotnet run --project .\\tools\\build\\build.csproj -- %*\r\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.0625,
          "content": "#!/bin/sh\ndotnet run --project ./tools/build/build.csproj -- $@\n"
        },
        {
          "name": "docker-build.sh",
          "type": "blob",
          "size": 0.43359375,
          "content": "#!/bin/bash\n\nif [ -d ../YamlDotNet.wiki ]\n  then\n    docker run -u=`id -u` -v `pwd`:/build/YamlDotNet -v `pwd`/../YamlDotNet.wiki:/build/YamlDotNet.wiki -v ~/.nuget/packages:/home/build/.nuget/packages -w /build/YamlDotNet -it aaubry/yamldotnet.local ./build.sh \"$@\"\n  else\n    docker run -u=`id -u` -v `pwd`:/build/YamlDotNet -v ~/.nuget/packages:/home/build/.nuget/packages -w /build/YamlDotNet -it aaubry/yamldotnet.local ./build.sh \"$@\"\nfi\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "yamldotnet.png",
          "type": "blob",
          "size": 2.6064453125,
          "content": null
        },
        {
          "name": "yamldotnet.xcf",
          "type": "blob",
          "size": 21.380859375,
          "content": null
        }
      ]
    }
  ]
}