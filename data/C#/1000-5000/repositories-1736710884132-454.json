{
  "metadata": {
    "timestamp": 1736710884132,
    "page": 454,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "googlevr/tilt-brush",
      "stars": 2246,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7587890625,
          "content": "# Unity generates these with LF, so keep them LF to prevent\n# spurious diffs when Unity overwrites CRLF with LF\n*.mat text eol=lf\n*.asset text eol=lf\n*.meta text eol=lf\n*.unity text eol=lf\n*.prefab text eol=lf\n*.gradle text eol=lf\nPackages/manifest.json text eol=lf\nUnityPackageManager/manifest.json text eol=lf\nProjectSettings/ProjectVersion.txt text eol=lf\n\n# Resharper generates these with LF; keep them LF even on Windows\n*.DotSettings text eol=lf\n\n# protoc generates files with LF\nSupport/Python/**/*_pb2.py text eol=lf\nAssets/Scripts/Protobuf/**/*.cs text eol=lf\n\n# Oculus ships its files with LFs; let's just keep them that way\nAssets/ThirdParty/Oculus/** -text\n\n# Keep the ffmpeg build script with Unix line endings.\nSupport/ThirdParty/ffmpeg/BuildFfmpeg.sh text eol=lf"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.79296875,
          "content": "# Standard unity stuff\n/Temp/\n/Obj/\n/Build/\n/Library/\n/Logs/\n\n# Automatically created by Support/ tools (builds, analyze_refgraph, etc)\n/Support/tmp_steam/\n/Support/refgraph.pickle\n/Support/TiltBrush.com/\n/TiltBrushProfile*\n/DevOptions.json\n\n*.pyc\n.DS_Store\n\n# mono debugging files, automatically created by UnityVS\n*.dll.mdb\n*.dll.mdb.meta\n\n# MonoDevelop and Visual Studio files, automatically created by Unity\n/*.csproj\n/*.CSharp.*user\n*.suo\n/*.sln\n/*.userprefs\n.vs\n\n# Generated files in TiltBrushCpp project\n/Support/TiltBrushCpp/x64\n/Support/TiltBrushCpp/TiltBrushCpp.opensdf\n/Support/TiltBrushCpp/TiltBrushCpp.sdf\n/Support/TiltBrushCpp/TiltBrushCpp/x64\n\n# Resharper settings. These are named after the sln, which is named\n# after the root directory, so it's not useful to submit them.\n# Instead, we put shared settings into Support/\n/*.sln.DotSettings\n# Regardless of the above, user settings never get submitted\n/*.sln.DotSettings.user\n\n# I think this file is for per-user test runner GUI settings\n/Assets/UnityTestTools/Common/Settings/UnitTestsRunnerSettings.asset*\n\n# JetBrains Rider\n/.idea/\n/Assets/Plugins/Editor.meta\n/Assets/Plugins/Editor/JetBrains*\n\n# For background builds\n/Builds/\n/BuildCopy/\n\n# Keystores should not be committed\n/Support/Keystores\n\n# This seems to be generated by SteamVR, and it contains absolute paths to things\n# eg, \"action_manifest_path\": \"C:\\\\src\\\\tbq2\\\\actions.json\",\n/unityProject.vrmanifest\n\n# This seems to contain user-specific configuration data like:\n#  androidSDKPath: C:\\Users\\pld\\AppData\\Local\\Android\\Sdk\n# and doesn't contain any general configuration data, so I think it doesn't go in the repo\n/Assets/Resources/OVRBuildConfig.asset*\n\n# m_DebugWebRequest creates this\n/Requests\n\n# TextMesh Pro from Unity\n/Assets/TextMesh\\ Pro\n/Assets/TextMesh\\ Pro.meta\n\n# Google process\n.gitbugtraq"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.296875,
          "content": "# This is the list of Tilt Brush's's significant contributors.\n#\n# This does not necessarily list everyone who has contributed code,\n# especially since many employees of one corporation may be contributing.\n# To see the full list of contributors, see the revision history in\n# source control.\nGoogle LLC\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "BRAND_GUIDELINES.md",
          "type": "blob",
          "size": 2.5498046875,
          "content": "# Tilt Brush Brand Guidelines\n\nThe Tilt Brush trademark and logo (“Tilt Brush Trademarks”) are trademarks of Google, and are\ntreated separately from the copyright or patent license grants contained in the Apache-licensed Tilt\nBrush repositories on GitHub. Any use of the Tilt Brush Trademarks other than those permitted in\nthese guidelines must be approved in advance. \n\n## Purpose of the Brand Guidelines\n\nThese guidelines exist to ensure that the Tilt Brush project can share its technology under open\nsource licenses while making sure that the “Tilt Brush” brand is protected as a meaningful source\nidentifier in a way that’s consistent with trademark law. By adhering to these guidelines, you help\nto promote the freedom to use and develop high-quality Tilt Brush technology.\n\n## Acceptable Uses\n\nBecause we are open-sourcing the Tilt Brush technology, you may use the Tilt Brush trademark to\nrefer to the project without prior written permission. Examples of these approved references include\nthe following:\n\n* To refer to the Tilt Brush project itself;\n* To refer to unmodified source code or other files shared by the Tilt Brush repositories on GitHub;\n* To accurately identify that your design or implementation is based on, is for use with, or is\ncompatible with the Tilt Brush technology. \n\nExamples: \n* “[Your Product] for Tilt Brush.”\n* “[Your Product] made from Tilt Brush.”\n* “[Your Product] is a fork of the Tilt Brush project.”\n* “[Your Product] is based on the Tilt Brush technology.”\n\n# Usage Guidelines\n\n* The Tilt Brush name may never be used or registered in a manner that would cause confusion as to\n  Google’s sponsorship, affiliation, or endorsement.\n* Don’t use the Tilt Brush name, or a confusingly similar term, as part of your company name,\n  product name, domain name, or social media profile.\n* Other than as permitted by these guidelines, the Tilt Brush name should not be combined with other\n  trademarks, terms, or source identifiers.\n* Don't remove, distort or alter any element of the Tilt Brush Trademarks. That includes modifying\n  the Tilt Brush trademark, for example, through hyphenation, combination, or abbreviation. Do not\n  shorten, abbreviate, remove the space from, or create acronyms out of the Tilt Brush trademark.\n* Don’t display the Tilt Brush name using any different stylization, color, or font from the\n  surrounding text.\n* Don’t use the term Tilt Brush as a verb, or use it in possessive form.\n* Don’t use the Tilt Brush logo on any website, product UI, or promotional materials without our\n  prior written permission.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2177734375,
          "content": "# How to Contribute\n\nWe encourage you to fork the repository; this repository does not currently\naccept patches or contributions. See README.md for rules governing\nthe Tilt Brush trademark.\n\nShould our contribution policy ever change, contributors will need to\nfollow a few small guidelines.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement (CLA). You (or your employer) retain the copyright to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project. Head over to\n<https://cla.developers.google.com/> to see your current agreements on file or\nto sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google/conduct/)."
        },
        {
          "name": "GvrIgnoreManifestMergeCheck.txt",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.1640625,
          "content": "# Tilt Brush README\n\nTilt Brush is licensed under Apache 2.0. It is not an officially supported\nGoogle product. See the [LICENSE](LICENSE) file for more details.\n\n## Trademarks\n\nThe Tilt Brush trademark and logo (“Tilt Brush Trademarks”) are trademarks of\nGoogle, and are treated separately from the copyright or patent license grants\ncontained in the Apache-licensed Tilt Brush repositories on GitHub. Any use of\nthe Tilt Brush Trademarks other than those permitted in these guidelines must be\napproved in advance.\n\nFor more information, read the\n[Tilt Brush Brand Guidelines](BRAND_GUIDELINES.md).\n\n## Building the application\n\nGet the Tilt Brush open-source application running on your own devices.\n\n### Prerequisites\n\n*   [Unity 2018.4.11f1](unityhub://2018.4.11f1/7098af2f11ea)\n*   [SteamVR](https://store.steampowered.com/app/250820/SteamVR/)\n*   [Python 2.7.0](https://www.python.org/download/releases/2.7/) (Optional —\n    needed only if you wish to run the scripts in the `Support/bin` directory)\n\n### Changing the application name\n\n_Tilt Brush_ is a Google trademark. If you intend to publish a cloned version of\nthe application, you are required to choose a different name to distinguish it\nfrom the official version. Before building the application, go into `App.cs` and\nthe Player settings to change the company and application names to your own.\n\nPlease see the [Tilt Brush Brand Guidelines](BRAND_GUIDELINES.md) for more details.\n\n### Running the application in the Unity editor\n\nFollow these steps when running the application for the first time:\n\n1.  Start Unity.\n1.  Go to **File** > **Open Scene**. \\\n1.  Select `/Assets/Scenes/Main.unity`. Unity should automatically prompt you to\n    import **TextMesh Pro**.\n1.  Choose **Import TMP Essentials**. \\\n    You can also do this through **Window** > **TextMesh Pro** > **Import TMP\n    Essential Resources**.\n1.  Press **Play**.\n\nThese steps have been tested with Release 1.0.54.\n\n### Building the application from the Unity editor\n\nAlthough it's possible to build Tilt Brush using the standard Unity build tools,\nwe recommend using a build script to ensure the application builds with the\ncorrect settings. To run this script, go to **Tilt** > **Build** > **Do Build**,\nor build from the Tilt Brush build window by navigating to **Tilt** >\n**Build** > **Build Window**.\n\nNote: The application may take a while to build the first time.\n\n### Building the application from the Windows command line\n\nUse the `build` script in the `Support/bin` directory to specify the target\nplatform and the build options you wish to enable. Run `build —help` to see the\nvarious build options.\n\n### Additional features\n\nYou should be able to get the basic version of Tilt Brush up and running very\nquickly. The following features will take a little more time.\n\n*   [Google service API support](#google-service-api-support)\n*   [Enabling native Oculus support](#enabling-native-oculus-support)\n*   [Sketchfab support](#sketchfab-support)\n*   [*.fbx file support](#fbx-file-support)\n*   [Camera path support](#camera-path-support)\n*   [Video recording for the camera](#video-support)\n*   [Offline rendering support](#offline-rendering-support)\n*   [GIF support for the camera](#gif-support)\n\n**Note:** Uploading to Poly has been removed completely and cannot be added back\nin, because it uses an internal Google API. Download from Poly can still be\nenabled.\n\n## Systems that were replaced or removed when open-sourcing Tilt Brush\n\nSome systems in Tilt Brush were removed or replaced with alternatives due to\nopen-source licensing issues. These are:\n\n*   **Sonic Ether Natural Bloom**. The official Tilt Brush app uses a version\n    purchased from the Asset Store; the open-source version uses\n    [Sonic Ether's slightly modified open-source version](https://github.com/sonicether/SE-Natural-Bloom-Dirty-Lens).\n*   **FXAA**. The official Tilt Brush app uses a modified version of the FXAA\n    that Unity previously released with the standard assets on earlier versions\n    of Unity - FXAA3 Console. This has been replaced with\n    [FXAA by jintiao](https://github.com/jintiao/FXAA).\n*   **Vignette and Chromatic Aberration**. The official Tilt Brush app uses\n    modified versions of the Vignette and Chromatic Aberration effects that came\n    with the standard assets in earlier versions of Unity. These have been\n    replaced with a modified version of\n    [KinoVignette by Keijiro](https://github.com/keijiro/KinoVignette).\n*   **Tilt Shift**. The official Tilt Brush app uses modified versions of the\n    Tilt Shift effect that came with the standard assets in earlier versions of\n    Unity. These have been replaced with a modified version of\n    [Tilt shift by underscorediscovery](https://gist.github.com/underscorediscovery/10324388).\n\n## Google service API support\n\nSet up Google API support to access Google services in the app.\n\n### Enabling Google service APIs\n\nFollow these steps when enabling Google service APIs:\n\n1.  Create a new project in the\n    [Google Cloud Console](https://console.developers.google.com/).\n1.  Enable the following APIs and services:\n\n    *   **YouTube Data API v3** — for uploading videos to YouTube\n    *   **Poly API** — for accessing the Poly model library\n    *   **Google Drive API** — for backup to Google Drive\n    *   **People API** — for username and profile picture\n\nNote: The name of your application on the developer console should match the\nname you've given the app in `App.kGoogleServicesAppName` in `App.cs`.\n\n### Creating a Google API key\n\nFollow these steps when creating a Google API key:\n\n1.  Go to the Credentials page from the Google Cloud Console.\n1.  Click **Create Credential** and select **API key** from the drop-down menu.\n\n### Google OAuth consent screen information\n\nThe OAuth consent screen asks users for permission to access their Google\naccount. You should be able to configure it from the Credentials screen.\n\nFollow these steps when configuring the OAuth consent screen:\n\n1.  Fill in the name and logo of your app, as well as the scope of the user data\n    that the app will access.\n1.  Add the following paths to the list of scopes:\n\n    *   Google Drive API `../auth/drive.appdata`\n    *   Google Drive API `../auth/drive.file`\n\n### Creating an OAuth credential\n\nThe credential identifies the application to the Google servers. Follow these\nsteps to create an OAuth credential:\n\n1.  Create a new credential on the Credentials screen.\n1.  Select **OAuth**, and then select **Other**. Take note of the client ID and\n    client secret values that are created for you. Keep the client secret a\n    secret!\n\n### Storing the Google API Key and credential data\n\nFollow these steps to store the Google API Key and credential data:\n\n1.  There is an asset in the `Assets/` directory called `Secrets` that contains\n    a `Secrets` field. Add a new item to this field.\n2.  Select `Google` as the service. Paste in the API key, client ID, and client\n    secret that were generated earlier.\n\n## Enabling native Oculus support\n\nNote: _Tilt Brush_ is a Google trademark. If you intend to publish a cloned\nversion of the application, you are required to\n[choose a different name](#changing-the-application-name) to distinguish it from\nthe official version.\n\nTilt Brush targets SteamVR instead of Oculus by default. Follow these steps to\nenable native Oculus support:\n\n1.  Enable the Oculus desktop package in the Package Manager.\n1.  Install the\n    [Oculus Unity Integration](https://developer.oculus.com/downloads/package/unity-integration-archive/1.41.0/).\n\n**Note:** The above link goes to version 1.41, which the official version of\nTilt Brush was built with. Later versions have not been tested. You only need to\ninclude the `Platform` and `VR` subdirectories when you import.\n\n1.  If you see a dialog about upgrading the Unity Oculus plugin, click\n    **Accept**.\n1.  In the **Standalone** tab of the Player settings, go to **Other Settings**\n    and define `OCULUS_SUPPORTED` in **Scripting Define Symbols**. Add it to the\n    end of the list and use a semicolon to separate it from the previous define\n    commands.\n\n### Building your app for Oculus Quest\n\nFollow these steps to build your app for Oculus Quest:\n\n1.  Define `OCULUS_SUPPORTED` in **Scripting Define Symbols** in the **Android**\n    tab of **Player Settings**, under **Other Settings**. Add it to the end of\n    the list and use a semicolon to separate it from the previous define\n    command.\n1.  Set up your machine for\n    [Oculus Quest Development](https://developer.oculus.com/documentation/unity/book-unity-gsg/?device=QUEST).\n1.  Make sure the following are set in Unity:\n    *   **Tilt** > **Build** > **SDK: OVR**\n    *   **Tilt** > **Build** > **Platform: Android**\n    *   **Tilt** > **Build** > **Runtime: Mono**\n1.  Navigate to **Tilt** > **Build** > **Do Build**.\n1.  Find the generated executable. It will most likely be somewhere under\n    `Builds/OculusMobile_Release_TiltBrush_FromGui/`.\n1.  Run `adb install com.google.tiltbrush.apk`.\n\n### Publishing to Oculus stores\n\nFollow these steps to publish to Oculus stores:\n\n1.  Get an application ID from Oculus. The desktop and quest versions of each\n    application need separate IDs.\n1.  Add these IDs to the `Secrets` file. Both `Oculus` and `OculusMobile` should\n    have their own entries.\n1.  Put the app IDs in the `Client ID` field for each.\n\n## Tilt Brush intro sketch\n\nThe Tilt Brush intro sketch uses some slightly modified shaders to produce the\nanimating-in effect while the sketch fades in. For faster loading, the intro\nsketch is turned into a `*.prefab` file beforehand. Only the shaders used in the\nintro sketch have been converted to work with the introduction.\n\n*   The current intro sketches are located in `Support/Sketches/Intro`. There\n    are two versions, one for PC and one for mobile.\n*   The `*.prefab` files are located in `Assets/Prefabs/Intro`.\n*   The materials and shaders used in the intro are located in\n    `Assets/Materials/IntroMaterials`.\n*   The `Assets/PlatformConfigPC` and `Assets/PlatformConfigMobile` files\n    reference the `*.prefab` files that will be used in the intro.\n\n### Creating an intro sketch\n\nFollow these steps to replace or alter the intro sketch:\n\n1.  Make sure the sketch of your choice is already loaded. Run Tilt Brush in the\n    Unity Editor.\n1.  Select **Tilt** > **Convert To Intro Materials** in the main Unity menu.\n    This converts the materials in the sketch to the intro versions. \\\n    You will get warnings in the console for any materials it could not convert,\n    as well as a summary of how many materials it converted.\n1.  Navigate the hierarchy. Under the **Main** scene, open `SceneParent/Main\n    Canvas`. Select any of the `Batch_...` objects to check whether they have\n    the intro materials set.\n1.  Move any objects that do not start with `Batch_` out from under the **Main\n    Canvas** node.\n1.  Select the **Main Canvas** node and run the **Tilt** > **Save Game Object As\n    Prefab** menu command. \\\n    The scene will be saved as a `*.prefab` file called `gameobject_to_prefab`.\n    under the `Assets/TestData` folder.\n1.  Move the game object into the `Assets/Prefabs/Intro` folder.\n1.  Update the references in `Assets/PlatformConfigPC` and\n    `Assets/PlatformConfigMobile` to point to your new prefab file.\n\n### Creating an intro sketch for mobile applications\n\nYou may want to have a pared-down version of the intro sketch for the mobile\nversion of the app. Stroke simplification is located in the **Settings** menu\ninside Tilt Brush.\n\n## Sketchfab support\n\nFollow these steps to enable Sketchfab support:\n\n1.  [Contact Sketchfab](https://sketchfab.com/developers/oauth) for a client ID\n    and secret before you can upload to their service.\n1.  Add the client ID and secret to the `Secrets` file.\n1.  Set the service as **Sketchfab**. Leave the API key blank.\n\n## FBX file support\n\nYou will need to build C# wrappers for the Autodesk FBX (the Autodesk filebox\nformat) SDK in order to import or export FBX and OBJ files in the app. See\n[Support/fbx/README.md](Support/fbx/README.md) for details.\n\n## Camera path support\n\nFollow these steps to enable camera path support:\n\n1.  Enable video support.\n1.  Uncomment the code in `CameraPathCaptureRig.RecordPath()`.\n\n## Video support\n\nTo get video support you will need to put an ffmpeg.exe binary in to \n`/Support/ThirdParty/ffmpeg/bin`. We have created a script to build one for\nyou - it temporarily requires around 2GB of space to build but will clear up\nafter itself.\n\nFollow these steps to get video support:\n\n1. Find '/Support/ThirdParty/ffmpeg/BuildFfmpeg.ps1', right-click on it in explorer and select\n   'Run with Powershell'. It will take some time to build.\n2. In Unity, modify `/Assets/PlatformConfigPC` and add 'Video' to 'Enabled Multicam Styles'.\n   'Snapshot' should always be enabled.\n\n### Video support bug fix\n\nIf you add video support, you may encounter a bug where the \"Looking for audio\"\nand \"Play some music on your computer\" text will disappear if the controller is\nangled too far. Fix this by doing the following:\n\n1.  In Unity, find the `/Assets/TextMesh Pro/Resources/Shaders/TMP_SDF.shader`\n    file.\n1.  Duplicate it and rename this file `TMP_SDF-WriteDepth.shader`.\n1.  Open the new file in a code or text editor and make the following changes to\n    it:\n    1.  Change the name from `TextMeshPro/Distance Field` to\n        `TextMeshPro/Distance Field Depth`.\n    1.  Change `Zwrite Off` to `Zwrite On`.\n1.  In Unity, select `/Assets/Fonts/Oswald-Light SDF.asset`.\n1.  Under `Atlas & Material`, double click `Oswald-Light SDF Material`.\n1.  At the top, change the name for `Shader` from `TextMeshPro/Distance Field`\n    to `TextMeshPro/Distance Field Depth`.\n\n## Offline rendering support\n\nWhen the user records a video from a saved sketch in Tilt Brush, a `.bat` file\nis generated next to the `.mp4` for offline rendering support. This `.bat` file\nrequires the path to the executable of Tilt Brush. The code for writing out this\npath to the file has been removed.\n\nFollow these steps to restore the path:\n\n1.  Open the file `Assets/Scripts/Rendering/VideoRecorderUtils.cs` in a code or\n    text editor.\n1.  Look for the function `CreateOfflineRenderBatchFile` near the bottom of the\n    file.\n1.  In the function, find the comments on how to modify the string to point to\n    the executable path.\n1.  Update the string to point to the correct path.\n\n## GIF support\n\nGIF support was removed for licensing reasons. To get GIF support, integrate\nyour own system by following these steps:\n\n1.  Add the encoding code in around lines 129 - 148 of `Assets/Scripts/Gif\n    Creation/GifEncodeTask.cs`.\n1.  Modify `Assets/PlatformConfigPC` and `Assets/PlatformConfigMobile`. Add\n    **Auto GIF** and/or **Time GIF** to **Enabled Multicam Styles**.\n\nThe released PC build had the following settings:\n\n*   Snapshot\n*   Auto GIF\n*   Time GIF\n*   Video\n\nThe released Quest build had the following settings:\n\n*   Snapshot\n*   Time GIF\n\n## Experimental mode\n\nExperimental mode is where features live before they are ready to be released in\na production build. This mode enables the experimental brushes and experimental\npanel while disabling the intro sequence.\n\n**New features and brushes that you find in experimental mode may not work as\nexpected.** Sketches that use experimental features and brushes won't work on\nPoly or Sketchfab, and may break if loaded into production versions of Tilt\nBrush.\n\n### Turning on experimental mode\n\nFollow these steps to turn on experimental mode:\n\n1.  Find the Config object in the main scene by going to **App** > **Config**.\n1.  Turn on the **Is Experimental** flag.\n\nThe Tilt Brush build system will then set up the experimental flag as needed\nwhen you make a build.\n\n### Making your code experimental\n\nCode in experimental mode is usually surrounded by the following block:\n\n```\n# if (UNITY_EDITOR || EXPERIMENTAL_ENABLED)\n\n    if (Config.IsExperimental) {\n      // Experimental code goes here\n    }\n\n# endif\n```\n\nIn the editor, all you need to enable experimental mode is to turn on the\nexperimental flag. The `EXPERIMENTAL_ENABLED` scripting definition needs to be\nset, or the code will not be compiled into the build at all. This prevents\nunfinished features from being accessed by people who hack or decompile the\nexecutable.\n\n### Experimental brushes\n\nExperimental brushes and environments are located in the `Assets/Resources/X`\nfolder. They are not included in non-experimental builds.\n"
        },
        {
          "name": "ReferenceImages",
          "type": "tree",
          "content": null
        },
        {
          "name": "Support",
          "type": "tree",
          "content": null
        },
        {
          "name": "actions.json",
          "type": "blob",
          "size": 4.4501953125,
          "content": "{\n  \"actions\": [\n    {\n      \"name\": \"/actions/TiltBrush/in/Pose\",\n      \"type\": \"pose\",\n      \"requirement\": \"mandatory\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_Trigger\",\n      \"type\": \"vector1\",\n      \"requirement\": \"mandatory\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_Thumbstick\",\n      \"type\": \"vector2\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_ThumbstickTouch\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_GripBinary\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_GripAnalog\",\n      \"type\": \"vector1\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_MenuButton\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_PadTouch\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_PadDirectional\",\n      \"type\": \"vector2\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_PadClick\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_PrimaryButton\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_PrimaryButtonTouch\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_SecondaryButton\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/in/RI_SecondaryButtonTouch\",\n      \"type\": \"boolean\",\n      \"requirement\": \"optional\"\n    },\n    {\n      \"name\": \"/actions/TiltBrush/out/Haptic\",\n      \"type\": \"vibration\",\n      \"requirement\": \"suggested\"\n    },\n    {\n      \"name\": \"/actions/mixedreality/in/ExternalCamera\",\n      \"type\": \"pose\",\n      \"requirement\": \"optional\"\n    }\n  ],\n  \"action_sets\": [\n    {\n      \"name\": \"/actions/TiltBrush\",\n      \"usage\": \"single\"\n    },\n    {\n      \"name\": \"/actions/mixedreality\",\n      \"usage\": \"single\"\n    }\n  ],\n  \"default_bindings\": [\n    {\n      \"controller_type\": \"vive_controller\",\n      \"binding_url\": \"bindings_vive_controller.json\"\n    },\n    {\n      \"controller_type\": \"oculus_touch\",\n      \"binding_url\": \"bindings_oculus_touch.json\"\n    },\n    {\n      \"controller_type\": \"knuckles\",\n      \"binding_url\": \"bindings_knuckles.json\"\n    },\n    {\n      \"controller_type\": \"holographic_controller\",\n      \"binding_url\": \"bindings_holographic_controller.json\"\n    },\n    {\n      \"controller_type\": \"vive\",\n      \"binding_url\": \"binding_vive.json\"\n    },\n    {\n      \"controller_type\": \"vive_pro\",\n      \"binding_url\": \"binding_vive_pro.json\"\n    },\n    {\n      \"controller_type\": \"rift\",\n      \"binding_url\": \"binding_rift.json\"\n    },\n    {\n      \"controller_type\": \"holographic_hmd\",\n      \"binding_url\": \"binding_holographic_hmd.json\"\n    },\n    {\n      \"controller_type\": \"vive_tracker_camera\",\n      \"binding_url\": \"binding_vive_tracker_camera.json\"\n    },\n    {\n      \"controller_type\": \"logitech_stylus\",\n      \"binding_url\": \"binding_logitech_stylus.json\"\n    },\n    {\n      \"controller_type\": \"vive_cosmos\",\n      \"binding_url\": \"bindings_vive_cosmos.json\"\n    },\n    {\n      \"controller_type\": \"vive_cosmos_controller\",\n      \"binding_url\": \"bindings_vive_cosmos_controller.json\"\n    }\n  ],\n  \"localization\": [\n    {\n      \"language_tag\": \"en_US\",\n      \"/actions/TiltBrush/in/RI_GripAnalog\": \"Grip Analog\",\n      \"/actions/TiltBrush/in/RI_GripBinary\": \"Grip Binary\",\n      \"/actions/TiltBrush/in/RI_MenuButton\": \"Menu Button\",\n      \"/actions/TiltBrush/in/RI_PadClick\": \"Pad Click\",\n      \"/actions/TiltBrush/in/RI_PadDirectional\": \"Pad Directional\",\n      \"/actions/TiltBrush/in/RI_PadTouch\": \"Pad Touch\",\n      \"/actions/TiltBrush/in/Pose\": \"Pose\",\n      \"/actions/TiltBrush/in/RI_PrimaryButton\": \"Primary Button (B,Y)\",\n      \"/actions/TiltBrush/in/RI_PrimaryButtonTouch\": \"Primary Button (B,Y) Touch\",\n      \"/actions/TiltBrush/in/RI_SecondaryButton\": \"Secondary Button (A,X)\",\n      \"/actions/TiltBrush/in/RI_SecondaryButtonTouch\": \"Secondary Button (A,X) Touch\",\n      \"/actions/TiltBrush/in/RI_Thumbstick\": \"Thumbstick\",\n      \"/actions/TiltBrush/in/RI_ThumbstickTouch\": \"Thumbstick Touch\",\n      \"/actions/TiltBrush/in/RI_Trigger\": \"Trigger\",\n      \"/actions/TiltBrush/out/Haptic\": \"Haptic\",\n      \"/actions/mixedreality/in/ExternalCamera\": \"External Camera\"\n    }\n  ]\n}"
        },
        {
          "name": "binding_holographic_hmd.json",
          "type": "blob",
          "size": 0.2978515625,
          "content": "{\n  \"bindings\": {\n    \"/actions/default\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"holographic_hmd\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Windows Mixed Reality HMD\"\n}"
        },
        {
          "name": "binding_logitech_stylus.json",
          "type": "blob",
          "size": 7.03125,
          "content": "{\n   \"action_manifest_version\" : 0,\n   \"alias_info\" : {},\n   \"app_key\" : \"application.generated.unity.tiltbrush.exe\",\n   \"bindings\" : {\n      \"/actions/tiltbrush\" : {\n         \"chords\" : [],\n         \"haptics\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/left/output/haptic\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/right/output/haptic\"\n            }\n         ],\n         \"poses\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/left/pose/raw\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/right/pose/raw\"\n            }\n         ],\n         \"skeleton\" : [],\n         \"sources\" : [\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/left/input/thumbstick\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/right/input/thumbstick\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_menubutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/menu\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_menubutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/menu\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/tip\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/tip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_paddirectional\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padtouch\"\n                  }\n               },\n               \"mode\" : \"trackpad\",\n               \"path\" : \"/user/hand/left/input/touchstrip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_paddirectional\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padtouch\"\n                  }\n               },\n               \"mode\" : \"trackpad\",\n               \"path\" : \"/user/hand/right/input/touchstrip\"\n            },\n            {\n               \"inputs\" : {\n                  \"force\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"force_sensor\",\n               \"path\" : \"/user/hand/left/input/primary\"\n            },\n            {\n               \"inputs\" : {\n                  \"force\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"force_sensor\",\n               \"path\" : \"/user/hand/right/input/primary\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/grip\"\n            }\n         ]\n      }\n   },\n   \"controller_type\" : \"logitech_stylus\",\n   \"description\" : \"Default bindings for Tilt Brush v20\",\n   \"name\" : \"Tilt Brush - Logitech VR Ink\",\n   \"options\" : {},\n   \"simulated_actions\" : []\n}\n"
        },
        {
          "name": "binding_rift.json",
          "type": "blob",
          "size": 0.27734375,
          "content": "{\n  \"bindings\": {\n    \"/actions/default\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"rift\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Oculus Rift HMD\"\n}"
        },
        {
          "name": "binding_vive.json",
          "type": "blob",
          "size": 0.2705078125,
          "content": "{\n  \"bindings\": {\n    \"/actions/default\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"vive\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Vive HMD\"\n}"
        },
        {
          "name": "binding_vive_pro.json",
          "type": "blob",
          "size": 0.2783203125,
          "content": "{\n  \"bindings\": {\n    \"/actions/default\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"vive_pro\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Vive Pro HMD\"\n}"
        },
        {
          "name": "binding_vive_tracker_camera.json",
          "type": "blob",
          "size": 0.359375,
          "content": "{\n  \"app_key\": \"application.generated.unity.steamvr.exe\",\n  \"bindings\": {\n    \"/actions/mixedreality\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"vive_tracker_camera\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Vive Tracker for Camera\"\n}"
        },
        {
          "name": "bindings_holographic_controller.json",
          "type": "blob",
          "size": 4.033203125,
          "content": "{\n  \"app_key\": \"application.generated.unity.tiltbrush.exe\",\n  \"bindings\": {\n    \"/actions/tiltbrush\": {\n      \"chords\": [],\n      \"poses\": [\n        {\n          \"output\": \"/actions/tiltbrush/in/pose\",\n          \"path\": \"/user/hand/left/pose/tip\"\n        },\n        {\n          \"output\": \"/actions/tiltbrush/in/pose\",\n          \"path\": \"/user/hand/right/pose/tip\"\n        }\n      ],\n      \"haptics\": [\n        {\n          \"output\": \"/actions/tiltbrush/out/haptic\",\n          \"path\": \"/user/hand/left/output/haptic\"\n        },\n        {\n          \"output\": \"/actions/tiltbrush/out/haptic\",\n          \"path\": \"/user/hand/right/output/haptic\"\n        }\n      ],\n      \"sources\": [\n        {\n          \"path\": \"/user/hand/left/input/trigger\",\n          \"mode\": \"trigger\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"pull\": {\n              \"output\": \"/actions/tiltbrush/in/ri_trigger\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/right/input/trigger\",\n          \"mode\": \"trigger\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"pull\": {\n              \"output\": \"/actions/tiltbrush/in/ri_trigger\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/left/input/grip\",\n          \"mode\": \"button\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_gripbinary\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/right/input/grip\",\n          \"mode\": \"button\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_gripbinary\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/left/input/joystick\",\n          \"mode\": \"joystick\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"position\": {\n              \"output\": \"/actions/tiltbrush/in/ri_thumbstick\"\n            },\n            \"touch\": {\n              \"output\": \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/right/input/joystick\",\n          \"mode\": \"joystick\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"position\": {\n              \"output\": \"/actions/tiltbrush/in/ri_thumbstick\"\n            },\n            \"touch\": {\n              \"output\": \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/left/input/trackpad\",\n          \"mode\": \"trackpad\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_padclick\"\n            },\n            \"position\": {\n              \"output\": \"/actions/tiltbrush/in/ri_paddirectional\"\n            },\n            \"touch\": {\n              \"output\": \"/actions/tiltbrush/in/ri_padtouch\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/right/input/trackpad\",\n          \"mode\": \"trackpad\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_padclick\"\n            },\n            \"position\": {\n              \"output\": \"/actions/tiltbrush/in/ri_paddirectional\"\n            },\n            \"touch\": {\n              \"output\": \"/actions/tiltbrush/in/ri_padtouch\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/left/input/application_menu\",\n          \"mode\": \"button\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_primarybutton\"\n            }\n          }\n        },\n        {\n          \"path\": \"/user/hand/right/input/application_menu\",\n          \"mode\": \"button\",\n          \"parameters\": {},\n          \"inputs\": {\n            \"click\": {\n              \"output\": \"/actions/tiltbrush/in/ri_primarybutton\"\n            }\n          }\n        }\n      ],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"holographic_controller\",\n  \"description\": \"Default bindings for Tilt Brush v20\",\n  \"name\": \"Tilt Brush - Windows Mixed Reality\"\n}\n"
        },
        {
          "name": "bindings_knuckles.json",
          "type": "blob",
          "size": 5.015625,
          "content": "{\n   \"action_manifest_version\" : 0,\n   \"alias_info\" : {},\n   \"app_key\" : \"application.generated.unity.tiltbrush.exe\",\n   \"bindings\" : {\n      \"/actions/tiltbrush\" : {\n         \"chords\" : [],\n         \"haptics\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/left/output/haptic\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/right/output/haptic\"\n            }\n         ],\n         \"poses\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/left/pose/raw\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/right/pose/raw\"\n            }\n         ],\n         \"skeleton\" : [],\n         \"sources\" : [\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/left/input/thumbstick\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/right/input/thumbstick\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"parameters\" : {\n                  \"click_activate_threshold\" : \"0.4\",\n                  \"click_deactivate_threshold\" : \"0.25\",\n                  \"force_input\" : \"force\"\n               },\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"parameters\" : {\n                  \"click_activate_threshold\" : \"0.4\",\n                  \"click_deactivate_threshold\" : \"0.25\",\n                  \"force_input\" : \"force\"\n               },\n               \"path\" : \"/user/hand/right/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/a\"\n            }\n         ]\n      }\n   },\n   \"category\" : \"steamvr_input\",\n   \"controller_type\" : \"knuckles\",\n   \"description\" : \"Default bindings for Tilt Brush v20\",\n   \"name\" : \"Tilt Brush - Valve Index\",\n   \"options\" : {},\n   \"simulated_actions\" : []\n}\n"
        },
        {
          "name": "bindings_oculus_touch.json",
          "type": "blob",
          "size": 5.1396484375,
          "content": "{\n   \"action_manifest_version\" : 0,\n   \"alias_info\" : {},\n   \"app_key\" : \"application.generated.unity.tiltbrush.exe\",\n   \"bindings\" : {\n      \"/actions/tiltbrush\" : {\n         \"chords\" : [],\n         \"haptics\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/left/output/haptic\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/right/output/haptic\"\n            }\n         ],\n         \"poses\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/left/pose/tip\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/right/pose/tip\"\n            }\n         ],\n         \"skeleton\" : [],\n         \"sources\" : [\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/left/input/joystick\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/x\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/y\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/right/input/joystick\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripanalog\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripanalog\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/grip\"\n            }\n         ]\n      }\n   },\n   \"controller_type\" : \"oculus_touch\",\n   \"description\" : \"Default bindings for Tilt Brush v20\",\n   \"name\" : \"Tilt Brush - Oculus Touch\",\n   \"options\" : {},\n   \"simulated_actions\" : []\n}\n"
        },
        {
          "name": "bindings_vive_controller.json",
          "type": "blob",
          "size": 3.76953125,
          "content": "{\n   \"action_manifest_version\" : 0,\n   \"alias_info\" : {},\n   \"app_key\" : \"application.generated.unity.tiltbrush.exe\",\n   \"bindings\" : {\n      \"/actions/tiltbrush\" : {\n         \"chords\" : [],\n         \"haptics\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/left/output/haptic\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/right/output/haptic\"\n            }\n         ],\n         \"poses\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/left/pose/raw\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/right/pose/raw\"\n            }\n         ],\n         \"skeleton\" : [],\n         \"sources\" : [\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_paddirectional\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padtouch\"\n                  }\n               },\n               \"mode\" : \"trackpad\",\n               \"path\" : \"/user/hand/left/input/trackpad\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_paddirectional\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padtouch\"\n                  }\n               },\n               \"mode\" : \"trackpad\",\n               \"path\" : \"/user/hand/right/input/trackpad\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_menubutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/application_menu\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_menubutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/application_menu\"\n            }\n         ]\n      }\n   },\n   \"controller_type\" : \"vive_controller\",\n   \"description\" : \"Default bindings for Tilt Brush v20\",\n   \"name\" : \"Tilt Brush - Vive\",\n   \"options\" : {},\n   \"simulated_actions\" : []\n}\n"
        },
        {
          "name": "bindings_vive_cosmos.json",
          "type": "blob",
          "size": 0.1884765625,
          "content": "{\n  \"bindings\": {\n    \"/actions/default\": {\n      \"chords\": [],\n      \"poses\": [],\n      \"haptics\": [],\n      \"sources\": [],\n      \"skeleton\": []\n    }\n  },\n  \"controller_type\": \"vive_cosmos\"\n}"
        },
        {
          "name": "bindings_vive_cosmos_controller.json",
          "type": "blob",
          "size": 7.462890625,
          "content": "{\n   \"action_manifest_version\" : 0,\n   \"alias_info\" : {},\n   \"app_key\" : \"application.generated.unity.tiltbrush.exe\",\n   \"bindings\" : {\n      \"/actions/tiltbrush\" : {\n         \"haptics\" : [\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/left/output/haptic\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/out/haptic\",\n               \"path\" : \"/user/hand/right/output/haptic\"\n            }\n         ],\n         \"poses\" : [\n            {\n               \"output\" : \"none\",\n               \"path\" : \"/user/hand/left/pose/base\"\n            },\n            {\n               \"output\" : \"none\",\n               \"path\" : \"/user/hand/right/pose/base\"\n            },\n            {\n               \"output\" : \"none\",\n               \"path\" : \"/user/hand/left/pose/raw\"\n            },\n            {\n               \"output\" : \"none\",\n               \"path\" : \"/user/hand/right/pose/raw\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/left/pose/tip\"\n            },\n            {\n               \"output\" : \"/actions/tiltbrush/in/pose\",\n               \"path\" : \"/user/hand/right/pose/tip\"\n            }\n         ],\n         \"sources\" : [\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  },\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/left/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  },\n                  \"pull\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_trigger\"\n                  }\n               },\n               \"mode\" : \"trigger\",\n               \"path\" : \"/user/hand/right/input/trigger\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/left/input/joystick\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_padclick\"\n                  },\n                  \"position\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbstick\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_thumbsticktouch\"\n                  }\n               },\n               \"mode\" : \"joystick\",\n               \"path\" : \"/user/hand/right/input/joystick\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/paddle_heavy\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/paddle_heavy\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/a\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/b\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/b\"\n            },\n            {\n               \"inputs\" : {},\n               \"mode\" : \"none\",\n               \"path\" : \"/user/hand/left/input/skeleton/left\"\n            },\n            {\n               \"inputs\" : {},\n               \"mode\" : \"none\",\n               \"path\" : \"/user/hand/right/input/skeleton/left\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_gripbinary\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/grip\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/x\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/x\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/left/input/y\"\n            },\n            {\n               \"inputs\" : {\n                  \"click\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_primarybutton\"\n                  },\n                  \"touch\" : {\n                     \"output\" : \"/actions/tiltbrush/in/ri_secondarybuttontouch\"\n                  }\n               },\n               \"mode\" : \"button\",\n               \"path\" : \"/user/hand/right/input/y\"\n            }\n         ]\n      }\n   },\n   \"category\" : \"steamvr_input\",\n   \"controller_type\" : \"vive_cosmos_controller\",\n   \"description\" : \"\",\n   \"name\" : \"Tilt Brush configuration for Vive Cosmos Controller\",\n   \"options\" : {},\n   \"simulated_actions\" : []\n}\n"
        },
        {
          "name": "externalcamera.cfg",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "steam_appid.txt",
          "type": "blob",
          "size": 0.005859375,
          "content": "327140"
        },
        {
          "name": "steam_controller_bindings.vdf",
          "type": "blob",
          "size": 0.2001953125,
          "content": "\"controller_mappings\"\n{\n\t\"buttons\"\n\t{\n\t}\n\t\"pads\"\n\t{\n\t}\n\t\"settings\"\n\t{\n\t\t\"left_trackpad_mode\"\t\"none\"\n\t\t\"right_trackpad_mode\"\t\"none\"\n\t}\n\t\"metadata\"\n\t{\n\t\t\"title\"\t\"Raw Steam Controller\"\n\t\t\"description\"\t\"\"\n\t}\n}"
        },
        {
          "name": "tiltasaurus.json",
          "type": "blob",
          "size": 6.236328125,
          "content": "{\n  \"Categories\": [\n    {\n      \"Name\": \"Concept\", \n      \"Words\": [\n        \"A Bad Smell\", \n        \"Albuquerque\", \n        \"Aliens!!!\", \n        \"America\", \n        \"Another Language\", \n        \"Asteroids\", \n        \"Awwwwww\", \n        \"Ballet\", \n        \"Blue Steel \", \n        \"Boredom\", \n        \"Capital Letters\", \n        \"Cave Paintings\", \n        \"Cheese and Crackers\", \n        \"Chet Faliszek\", \n        \"Chocolate Milk\", \n        \"Cream Cheese\", \n        \"Crushing Defeat\", \n        \"Crying\", \n        \"Diagonal\", \n        \"Disco\", \n        \"Downhill Skiing\", \n        \"Driving Through A Tunnel\", \n        \"Driving a Truck\", \n        \"Driving to the Beach\", \n        \"Earth\", \n        \"Email\", \n        \"Falling Down a Hill\", \n        \"Fireworks\", \n        \"French People\", \n        \"Friday Night\", \n        \"Friendship\", \n        \"Gargling\", \n        \"Google Without Using Letters\", \n        \"Half Moon\", \n        \"Halloween\", \n        \"Heart Burn\", \n        \"Heartache \", \n        \"Jumping Jacks\", \n        \"Laughter\", \n        \"London\", \n        \"Lost Keys\", \n        \"Meditation\", \n        \"Monday\", \n        \"Money\", \n        \"Music\", \n        \"One Gallon\", \n        \"One Step Too Far\", \n        \"Parallel Lines\", \n        \"Peter Pan \", \n        \"Pickles\", \n        \"Predators\", \n        \"Reality\", \n        \"Riding on a Rollercoaster\", \n        \"Rock Climbing\", \n        \"Sadness\", \n        \"Salt and Pepper\", \n        \"Salvador Dali's Mustache \", \n        \"Santa Claus\", \n        \"Sleep\", \n        \"Snapchat\", \n        \"Some Logs\", \n        \"Something Sticky\", \n        \"Stairs\", \n        \"Stonehenge\", \n        \"Stop, Drop, and Roll\", \n        \"Sugary Cereal\", \n        \"Taxes\", \n        \"The Desert\", \n        \"The Oceans\", \n        \"The Statue of David\", \n        \"The Supreme Court\", \n        \"The VR Reddit Forum \", \n        \"Tilt Brush\", \n        \"Tiltasaurus\", \n        \"Too Many Cooks\", \n        \"Too Much Yellow\", \n        \"Train Tracks\", \n        \"Twins\", \n        \"Valentine's Day\", \n        \"Veganism\", \n        \"William Shakespeare\", \n        \"Wind\", \n        \"Your Favorite T-Shirt\", \n        \"Yourself\"\n      ]\n    }, \n    {\n      \"Name\": \"Noun\", \n      \"Words\": [\n        \"A Balloon\", \n        \"A Banana\", \n        \"A Basket of Cherries\", \n        \"A Battery\", \n        \"A Beard\", \n        \"A Bed\", \n        \"A Bicycle\", \n        \"A Birthday\", \n        \"A Black Hole\", \n        \"A Blueberry Muffin\", \n        \"A Book\", \n        \"A Bouncing Ball\", \n        \"A Bouncing Yo-yo\", \n        \"A Bouquet of Flowers\", \n        \"A Bow and Arrow\", \n        \"A Broken Door\", \n        \"A Broken TV\", \n        \"A Broken Violin\", \n        \"A Butterfly\", \n        \"A Cake\", \n        \"A Candy Cane\", \n        \"A Car\", \n        \"A Cardboard\", \n        \"A Carousel\", \n        \"A Castle\", \n        \"A Clock Necklace\", \n        \"A Cloud\", \n        \"A Coffee Break\", \n        \"A Computer\", \n        \"A Cowboy\", \n        \"A Crescent Moon\", \n        \"A Cube\", \n        \"A Delicious Sandwich\", \n        \"A Diamond Ring\", \n        \"A Disco Ball\", \n        \"A Dolphin\", \n        \"A Door\", \n        \"A Dress\", \n        \"A Drum\", \n        \"A Failed Superhero\", \n        \"A Fireplace\", \n        \"A Fish\", \n        \"A Floating Island\", \n        \"A Foot\", \n        \"A Forest\", \n        \"A Fork\", \n        \"A Ghost\", \n        \"A Giant Ant\", \n        \"A Gingerbread Man\", \n        \"A Giraffe\", \n        \"A Glass Half Full\", \n        \"A Gold Tooth\", \n        \"A Guilty Dog\", \n        \"A Guitar\", \n        \"A Heated Argument\", \n        \"A Helicopter\", \n        \"A High Jump\", \n        \"A Hockey Rink\", \n        \"A Hot Dog\", \n        \"A Kiss\", \n        \"A Ladybug\", \n        \"A Leap Year\", \n        \"A Light Breeze\", \n        \"A Light Bulb\", \n        \"A Man\", \n        \"A Memory Leak\", \n        \"A Mortgage\", \n        \"A Mountain\", \n        \"A Moustache\", \n        \"A Mushroom\", \n        \"A Nice Sunday Drive\", \n        \"A Nose\", \n        \"A Panda Bear\", \n        \"A Paper Clip\", \n        \"A Philosopher\", \n        \"A Piano\", \n        \"A Pig\", \n        \"A Politician\", \n        \"A Polka Dot Tie\", \n        \"A Pumpkin\", \n        \"A Queen\", \n        \"A Rain Forest\", \n        \"A Rainbow\", \n        \"A Robot\", \n        \"A Rock Band\", \n        \"A Sasquatch\", \n        \"A School of Fish\", \n        \"A Sensor\", \n        \"A Shoe\", \n        \"A Shooting Star\", \n        \"A Shopping List\", \n        \"A Skateboard\", \n        \"A Skunk\", \n        \"A Sloth\", \n        \"A Slow Car\", \n        \"A Snake\", \n        \"A Snow Globe\", \n        \"A Snowman\", \n        \"A Spaceship\", \n        \"A Spectrogram\", \n        \"A Spider Web\", \n        \"A Squirrel\", \n        \"A Stop Sign\", \n        \"A Strawberry\", \n        \"A Suitcase\", \n        \"A Table\", \n        \"A Teddy Bear\", \n        \"A Television\", \n        \"A Three-headed Monkey\", \n        \"A Thumb\", \n        \"A Tie\", \n        \"A Tightrope\", \n        \"A Time Machine\", \n        \"A Tiny Apartment\", \n        \"A Tombstone\", \n        \"A Tongue\", \n        \"A Troll Under a Bridge\", \n        \"A Very Large Spoon\", \n        \"A Waterfall\", \n        \"A Wedding Dress\", \n        \"A Wet Rag\", \n        \"A Window\", \n        \"An Airplane\", \n        \"An Angel\", \n        \"An Apple\", \n        \"An Elevator Shaft\", \n        \"An Evil Robot\", \n        \"An Explorer\", \n        \"An Explosion\", \n        \"An Explosion on the Moon\", \n        \"An Extra Leg\", \n        \"An Eyebrow\", \n        \"An Improv Performance\", \n        \"An Octopus\", \n        \"An Oncoming Train\", \n        \"An Orange Dragon\", \n        \"An Umbrella\", \n        \"Bones\", \n        \"Dice\", \n        \"Dominoes\", \n        \"French Fries\", \n        \"Grapes\", \n        \"Hot Soup\", \n        \"Ice Cream\", \n        \"Instant Coffee\", \n        \"Jewelry\", \n        \"Laser Cats\", \n        \"Lots and Lots of Spiders\", \n        \"Moldy Cheese\", \n        \"Pizza\", \n        \"Plants\", \n        \"Pork and Beans\", \n        \"Smoke\", \n        \"Sunglasses\", \n        \"The Color Red\", \n        \"The Eiffel Tower\", \n        \"The Loch Ness Monster\", \n        \"Windshield Wipers\"\n      ]\n    }, \n    {\n      \"Name\": \"Place\", \n      \"Words\": [\n        \"Atlantis\", \n        \"El Capitan \", \n        \"Half Dome\", \n        \"Jupiter\", \n        \"Mars\", \n        \"New York\", \n        \"Paris\", \n        \"San Francisco\", \n        \"Saturn\", \n        \"The Moon\", \n        \"The West Coast\", \n        \"The White House\", \n        \"Tokyo\"\n      ]\n    }\n  ]\n}"
        }
      ]
    }
  ]
}