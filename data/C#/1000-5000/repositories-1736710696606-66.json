{
  "metadata": {
    "timestamp": 1736710696606,
    "page": 66,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DGP-Studio/Snap.Hutao",
      "stars": 4240,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5302734375,
          "content": "desktop.ini\n\n*.csproj.user\n*.DotSettings.user\n\n.vs/\n.idea/\nsrc/Snap.Hutao/_ReSharper.Caches\n\nsrc/Snap.Hutao/Snap.Hutao/bin/\nsrc/Snap.Hutao/Snap.Hutao/obj/\nsrc/Snap.Hutao/Snap.Hutao/Resource/Localization/SH.Designer.cs\nsrc/Snap.Hutao/Snap.Hutao/Snap.Hutao_TemporaryKey.pfx\n\nsrc/Snap.Hutao/Snap.Hutao.Win32/bin/\nsrc/Snap.Hutao/Snap.Hutao.Win32/obj/\n\nsrc/Snap.Hutao/Snap.Hutao.Test/bin/\nsrc/Snap.Hutao/Snap.Hutao.Test/obj/\n\nsrc/Snap.Hutao/Snap.Hutao/Properties/PublishProfiles/FolderProfile.pubxml.user\n\nsrc/Snap.Hutao/Snap.Hutao/Generated Files/"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 2.322265625,
          "content": "stages:\n  - fetch\n  - release\n  - refresh\n\nFetch:\n  stage: fetch\n  rules:\n    - if: $CI_COMMIT_TAG\n  tags:\n    - us3\n  script:\n    - apt-get update -qy\n    - apt-get install -y curl jq\n    - RELEASE_INFO=$(curl -sSL \"https://api.github.com/repos/$CI_PROJECT_PATH/releases/latest\")\n    - ASSET_URL=$(echo \"$RELEASE_INFO\" | jq -r '.assets[] | select(.name | endswith(\".msix\")) | .browser_download_url')\n    - SHA256SUMS_URL=$(echo \"$RELEASE_INFO\" | jq -r '.assets[] | select(.name == \"SHA256SUMS\") | .browser_download_url')\n    - curl -LJO \"$ASSET_URL\"\n    - curl -LJO \"$SHA256SUMS_URL\"\n    - FILE_NAME=$(basename \"$ASSET_URL\")\n    - SHA256SUMS_NAME=$(basename \"$SHA256SUMS_URL\")\n    - echo \"File name at script stage is $FILE_NAME\"\n    - echo \"SHA256SUMS name at script stage is $SHA256SUMS_NAME\"\n    - echo \"THIS_FILE_NAME=$FILE_NAME\" >> next.env\n    - echo \"THIS_SHA256SUMS_NAME=$SHA256SUMS_NAME\" >> next.env\n  after_script:\n    - echo \"Current Job ID is $CI_JOB_ID\"\n    - echo \"THIS_JOB_ID=$CI_JOB_ID\" >> next.env\n  artifacts:\n    paths:\n      - \"*.msix\"\n      - \"SHA256SUMS\"\n    expire_in: 180 days\n    reports:\n      dotenv: next.env\n\nrelease:\n  stage: release\n  image: registry.gitlab.com/gitlab-org/release-cli:latest\n  rules:\n    - if: $CI_COMMIT_TAG\n  needs:\n    - job: Fetch\n      artifacts: true\n  variables:\n    TAG: '$CI_COMMIT_TAG'\n  script:\n    - echo \"Create Release $TAG\"\n    - echo \"$THIS_JOB_ID\"\n    - echo \"$THIS_FILE_NAME\"\n  release:\n    name: '$TAG'\n    tag_name: '$TAG'\n    ref: '$TAG'\n    description: 'Release $TAG by CI'\n    assets:\n      links:\n        - name: \"$THIS_FILE_NAME\"\n          url: \"https://$CI_SERVER_SHELL_SSH_HOST/$CI_PROJECT_PATH/-/jobs/$THIS_JOB_ID/artifacts/raw/$THIS_FILE_NAME?inline=false\"\n          link_type: package\n        - name: \"$THIS_SHA256SUMS_NAME\"\n          url: \"https://$CI_SERVER_SHELL_SSH_HOST/$CI_PROJECT_PATH/-/jobs/$THIS_JOB_ID/artifacts/raw/$THIS_SHA256SUMS_NAME?inline=false\"\n          link_type: other\n        - name: \"artifact_archive\"\n          url: \"https://$CI_SERVER_SHELL_SSH_HOST/$CI_PROJECT_PATH/-/jobs/$THIS_JOB_ID/artifacts/download?file_type=archive\"\n          link_type: other\n          \nRefresh:\n  stage: refresh\n  rules:\n    - if: $CI_COMMIT_TAG\n  needs:\n    - job: release\n  script:\n    - apt-get install -y curl\n    - curl -X PATCH \"$PURGE_URL\"\n    - curl -X POST -o /dev/null \"$UPLOAD_OSS_URL\"\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.8603515625,
          "content": "# Code of Conduct\n\n>  Snap Hutao is adapting the following rules to keep the community safety.\n\nWhen participating in our open source community, we want all members to respect and support each other. To ensure the comfort and safety of our community members, we have established the following code of conduct:\n\n1. Respect diversity and inclusivity. We welcome people from different countries, regions, genders, sexual orientations, abilities, religions, and cultural backgrounds to participate in our community, and we encourage respect for all differences.\n2. Prohibit discrimination and harassment. We do not tolerate any form of discrimination, harassment, personal attacks, or insults. This includes but is not limited to race, gender, sexual orientation, age, religion, nationality, cultural background, physical and mental health status.\n3. Respect privacy and personal information. We protect the privacy and personal information of community members and prohibit the public disclosure of any private information. If you need to disclose certain information, please make sure you have obtained the relevant person's permission.\n4. Keep honesty and transparency. We expect community members to maintain honesty and transparency and not intentionally mislead or deceive others.\n5. Respect community rules and other members. We encourage community members to follow community rules and guidelines and maintain a polite and respectful attitude towards other members. If you find that other members are violating community rules, please report it to community administrators or organizers in a timely manner.\n\nThe above is our community's code of conduct, and we expect all community members to abide by these rules. We will actively address behaviors that violate these rules. We believe that through mutual respect and support, we can build a friendly, inclusive, and beneficial open source community."
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.6298828125,
          "content": "# Contribution Guide\n\n## Contribute Your Code\n\n### Setup Snap.Hutao Project\n\n1. Download and install [Visual Studio 2022 Community](https://visualstudio.microsoft.com/downloads/).\n   - No need to select workloads; Visual Studio will handle it automatically.\n   - Close Visual Studio Installer to ensure a smooth installation experience for workloads.\n   - If using Visual Studio 2022 17.9 preview, skip step 5, as automatic extension installation is supported in this version.\n2. Use git to clone the project `https://github.com/DGP-Studio/Snap.Hutao.git` to your local device.\n3. Switch to the`develop` branch using git.\n4. Open the project solution with your Visual Studio. Visual Studio will prompt you to install the necessary workloads, closing and reopening automatically.\n5. (For Visual Studio 2022 17.8) Install the [Single-project MSIX Packaging Tools for VS 2022](https://marketplace.visualstudio.com/items?itemName=ProjectReunion.MicrosoftSingleProjectMSIXPackagingToolsDev17) provided by Microsoft in Visual Studio marketplace.\n6. Open the project solution with your Visual Studio, and you are ready to go.\n\n### Start Pull Request\n\n- All code-related changes from authors' own branches are only allowed be merged to `develop` branch\n- Please use [keywords](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/using-keywords-in-issues-and-pull-requests) to link your PR or commits with issues, so issues can be automatically closed once commits are merged into `main` branch.\n\n### Test Binary Package\n\nOnce the code in updated in `develop` and `main` branches, an Azure Pipeline CI script will build the latest code to `Snap Hutao Alpha` package. Once the package is built, it will be released on [GitHub Release page](https://github.com/DGP-Studio/Snap.Hutao/releases) as a pre-released package. \n\nYou need to install [Snap.Hutao.CI.cer](https://github.com/DGP-Studio/Snap.Hutao/releases/download/2023.10.3.1/Snap.Hutao.CI.cer) certificate to your local machine, and then install the msix package in the release. \n\n*If the latest release does not contains attached file, that means package is still in uploading process. \n\n## Start New Issue\n\nTo help users solve problems faster and increase developers' efficiency in solving problems, Snap Hutao provides detailed documentation to explain common problems and issue templates to guide users to report program problems by submitting issues.\n\nBefore submitting a new issue, you should check the following pages:\n\n- [FAQ](https://hut.ao/advanced/FAQ.html) Document\n- [Common Program Exceptions ](https://hut.ao/en/advanced/exceptions.html)Document\n- [Current Opened BUG Report Issues](https://github.com/DGP-Studio/Snap.Hutao/issues?q=is%3Aissue+is%3Aopen+label%3ABUG)\n\nWhen starting a new issue, please use the issue templates:\n\n- Describe your issue in details to help developers to reproduce the issue\n- Your description of reproduction should be a step-by-step story\n- If your issue is about program crash\n  - Remember to provide your Device ID\n  - Check Windows Event Viewer, and attach associated `.NET Error` details in the issue body\n\n## Document Modification\n\nSnap Hutao Document site is stored in repository [DGP-Studio/Snap.Hutao.Docs](https://github.com/DGP-Studio/Snap.Hutao.Docs), you can process the following steps to test the site in your local device:\n\n1. Download and install [NodeJS 18](https://nodejs.org/en/download/)\n2. Clone the repository\n3. Run `npm install` in the root directory of the document project\n4. Run `npm run docs:dev` to start test on 8080 port\n\n### Localization\n\nSnap.Hutao.Docs project structure is designed as multiple languages site. Each language has its independent folder under `docs` directory.\n\n**If you wish to add another language document, you can [start an issue in document repository](https://github.com/DGP-Studio/Snap.Hutao.Docs/issues) to ask developer to setup an environment for you, or you can process the following steps by yourself:** \n\n1. make a copy of `zh` folder, rename the new folder as the new language's code\n2. Start your translation work in the new language folder\n3. In `docs/.vuepress/sidebar` folder, duplicate `zh.ts` file\n   1. Rename the file to `{language_code}.ts`\n   2. In the line 4, change `/zh/` to `/{language_code}/`\n   3. Translate all `text` field\n4. In `docs/.vuepress/navbar` folder, duplicate `zh.ts` file\n   1. Rename the file to `{language_code}.ts`\n   2. Replace all `/zh/` to `/{language_code}/`\n   3. Translate all `text` field\n5. In `docs/.vuepress/config.ts`file, add your language information in `locales` and `plugins/docsearchPlugin/locales` dictionary\n6. In `docs/.vuepress/theme.ts`file, add your language information in `locales` dictionary"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2022 DGP Studio\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NuGet.Config",
          "type": "blob",
          "size": 0.943359375,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <packageSources>\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n    <add key=\"Microsoft CsWin32\" value=\"https://pkgs.dev.azure.com/azure-public/winsdk/_packaging/CI/nuget/v3/index.json\" />\n    <add key=\"CommunityToolkit-MainLatest\" value=\"https://pkgs.dev.azure.com/dotnet/CommunityToolkit/_packaging/CommunityToolkit-MainLatest/nuget/v3/index.json\" />\n    <add key=\"CommunityToolkit-Labs\" value=\"https://pkgs.dev.azure.com/dotnet/CommunityToolkit/_packaging/CommunityToolkit-Labs/nuget/v3/index.json\" />\n  </packageSources>\n  <packageRestore>\n    <add key=\"enabled\" value=\"True\" />\n    <add key=\"automatic\" value=\"True\" />\n  </packageRestore>\n  <bindingRedirects>\n    <add key=\"skip\" value=\"False\" />\n  </bindingRedirects>\n  <packageManagement>\n    <add key=\"format\" value=\"1\" />\n    <add key=\"disabled\" value=\"False\" />\n  </packageManagement>\n</configuration>"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5419921875,
          "content": "![HutaoRepoBanner3-en](https://github.com/DGP-Studio/Snap.Hutao/assets/10614984/7289da68-59cf-409b-bd85-4b5a01d0c091)\n\n\n胡桃工具箱是一款以 MIT 协议开源的原神工具箱，专为现代化 Windows 平台设计，旨在改善桌面端玩家的游戏体验。通过将既有的官方资源与开发团队设计的全新功能相结合，提供了一套完整且实用的工具集，且无需依赖任何移动设备。它不对游戏客户端进行任何破坏性修改以确保工具箱的安全性\n\nSnap Hutao is an open-source Genshin Impact toolkit under MIT license, designed for modern Windows platform to improve the gaming experience for desktop players. By combining existing official resources with new features designed by the development team, it provides a complete and useful set of tools without the need to rely on mobile devices. Snap Hutao does not take any destructive modification to the game client to ensure the security of the toolkit.\n\n## 安装 / Installation\n\n![](https://ci.appveyor.com/api/projects/status/n4s40t9llru4si9y?svg=true) [![GitHub Release](https://img.shields.io/github/release/DGP-Studio/Snap.Hutao?style=flat)](https://github.com/DGP-Studio/Snap.Hutao/releases/latest) [![Github All Releases](https://img.shields.io/github/downloads/DGP-Studio/Snap.Hutao/total.svg?style=flat)]() \n\n---\n\n你可以按照[快速开始](https://hut.ao/zh/quick-start.html)文档中提供的流程安装并设置 Snap Hutao。\n\nYou can follow the instructions in the [Quick Start](https://hut.ao/en/quick-start.html) document to install and set up Snap Hutao.\n\n## 本地化翻译 / Localization\n\n[![zh-TW translation](https://img.shields.io/badge/dynamic/json?color=blue&label=zh-TW&style=flat&logo=crowdin&query=%24.zh-TW&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![en translation](https://img.shields.io/badge/dynamic/json?color=blue&label=en&style=flat&logo=crowdin&query=%24.en&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![fr translation](https://img.shields.io/badge/dynamic/json?color=blue&label=fr&style=flat&logo=crowdin&query=%24.fr&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![id translation](https://img.shields.io/badge/dynamic/json?color=blue&label=id&style=flat&logo=crowdin&query=%24.id&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![ja translation](https://img.shields.io/badge/dynamic/json?color=blue&label=ja&style=flat&logo=crowdin&query=%24.ja&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![ko translation](https://img.shields.io/badge/dynamic/json?color=blue&label=ko&style=flat&logo=crowdin&query=%24.ko&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![pt-PT translation](https://img.shields.io/badge/dynamic/json?color=blue&label=pt-PT&style=flat&logo=crowdin&query=%24.pt-PT&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![ru translation](https://img.shields.io/badge/dynamic/json?color=blue&label=ru&style=flat&logo=crowdin&query=%24.ru&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n[![vi translation](https://img.shields.io/badge/dynamic/json?color=blue&label=vi&style=flat&logo=crowdin&query=%24.vi&url=https%3A%2F%2Fawesome-crowdin-proxy.qhy040404.workers.dev%2Fstats-15670597-565845.json)](https://crowdin.com/project/snap-hutao)\n\nSnap Hutao 使用 [Crowdin](https://translate.hut.ao/) 作为客户端文本翻译平台，在该平台上你可以为你熟悉的语言提交翻译文本。我们感谢每一个为 Snap Hutao 做出贡献的社区成员，并且欢迎更多的朋友能参与到这个项目中。\n\nSnap Hutao uses [Crowdin](https://translate.hut.ao/) as a client text translation platform where you can submit translated text for languages you are familiar with. We are grateful to every community member who has contributed to Snap Hutao and welcome more friends to participate in this project.\n\n## 社区 / Community\n\n[![Discord](https://img.shields.io/discord/952488447753465916?color=5865f2&label=%20Discord)](https://discord.gg/CcH5XtDtvR) [![QQ](https://img.shields.io/badge/QQ-EB1923?logo=tencent-qq&logoColor=white&label=567908135)](https://qm.qq.com/q/WJKykrY9W)\n\n## 贡献 / Contribute\n\n* [向我们提交 PR / Make Pull Requests](https://hut.ao/development/contribute.html)\n* [为我们更新文档 / Enhance our Document](https://github.com/DGP-Studio/Snap.Hutao.Docs)\n\n## 特别感谢 / Special Thanks\n\n* [HolographicHat](https://github.com/HolographicHat)\n* [UIGF organization](https://uigf.org)\n\n### 特定的原神项目 / Specific Genshin-related Projects\n\n* [Scighost/Starward](https://github.com/Scighost/Starward)\n\n### 使用的技术栈 / Tech Stack\n\n* [CommunityToolkit/dotnet](https://github.com/CommunityToolkit/dotnet)\n* [CommunityToolkit/Labs-Windows](https://github.com/CommunityToolkit/Labs-Windows)\n* [CommunityToolkit/Windows](https://github.com/CommunityToolkit/Windows)\n* [dotnet/efcore](https://github.com/dotnet/efcore)\n* [dotnet/runtime](https://github.com/dotnet/runtime)\n* [DotNetAnalyzers/StyleCopAnalyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers)\n* [microsoft/vs-validation](https://github.com/microsoft/vs-validation)\n* [microsoft/WindowsAppSDK](https://github.com/microsoft/WindowsAppSDK)\n* [microsoft/microsoft-ui-xaml](https://github.com/microsoft/microsoft-ui-xaml)\n* [quartznet/quartznet](https://github.com/quartznet/quartznet)\n\n### 支撑项目 / Supporter Project\n\n* [Snap.Hutao.Server](https://github.com/DGP-Studio/Snap.Hutao.Server)\n* [Snap.Metadata](https://github.com/DGP-Studio/Snap.Metadata)\n\n## 赞助商 / Sponsorship\n\nSnap Hutao is currently using sponsored software from the following service providers.\n\n<img src=\"./res/assets/readmeSponsors.svg\" alt=\"Readme Sponsors\" />\n\n- [Netlify](https://www.netlify.com/) provides document and home page hosting service for Snap Hutao\n\n- [Crowdin](https://crowdin.com/) provides its SaaS platform to help Snap Hutao's localization\n\n- [Navicat](https://navicat.com/) provides Snap Hutao with advanced database management tools\n\n- Free code signing provided by [SignPath.io](https://signpath.io/), certificate by [SignPath Foundation](https://signpath.org/)\n\n- [1Password](https://1password.com/) provides Snap Hutao development team with their amazing password management software\n  \n- [DigitalOcean](https://www.digitalocean.com) provides reliable cloud database for Snap Hutao database backup\n\n- [Ducalis.io](https://hi.ducalis.io/) provides Snap Hutao project with a complete decision-making toolkit for project management\n\n- [Jetbrains](https://www.jetbrains.com/) provides powerful IDE for Snap Hutao infrastructure services coding\n\n- [Termius](https://termius.com) provides a secure, reliable, and collaborative SSH client\n\n## 开发 / Development\n\n![Snap.Hutao](https://repobeats.axiom.co/api/embed/f029553fbe0c60689b1710476ec8512452163fc9.svg)\n\n[![Star History Chart](https://api.star-history.com/svg?repos=DGP-Studio/Snap.Hutao&type=Date)](https://star-history.com/#DGP-Studio/Snap.Hutao&Date)\n\n[![](https://opengraph.snapgenshin.cn/gitcode?repo=DGP-Studio/Snap.Hutao)](https://github.com/DGP-Studio/Snap.Hutao)\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2841796875,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| >=1.9.0   | :white_check_mark: |\n| <1.9.0   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease [open an issue](https://github.com/DGP-Studio/Snap.Hutao/issues/new/choose)\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.0146484375,
          "content": "version: 1.0.{build}\nbranches:\n  only:\n    - \"release\"\nbuild_cloud: HUTAO-ACTIONS\nimage: Visual Studio 2022\ncache:\n  - 'C:\\Users\\Public\\Documents\\dotnet_install\\.nuget\\packages'\nclone_depth: 3\nclone_folder: C:\\Users\\Public\\appveyor\\Snap.Hutao\ninstall:\n- pwsh: dotnet tool restore\nbuild_script:\n- pwsh: dotnet cake\nartifacts:\n- path: src/output/*.msix\n  type: file\ndeploy:\n- provider: Webhook\n  url: https://app.signpath.io/API/v1/7a941fa3-64d8-4c45-bd03-92a02bcd4964/Integrations/AppVeyor?ProjectSlug=Snap.Hutao&SigningPolicySlug=release-signing&ArtifactConfigurationSlug=msix\n  authorization:\n    secure: j8srQ5/UYWhI+jlm3Vo3D3QfXoRyQ9hOn3ynJGtwusKui4+uDi4gykdUFYCITZxK+C/fOCAZNJ+YaKSm/OaiXw==\non_finish:\n- pwsh: |\n    Write-Host \"Cleaning up NuGet cache...\"\n    Remove-Item -Recurse -Force \"$env:LOCALAPPDATA\\NuGet\\v3-cache\"\n    Write-Host \"NuGet cache cleaned.\"\n\n    Write-Host \"Cleaning up .NET install folder...\"\n    Remove-Item -Recurse -Force \"C:\\Users\\Public\\Documents\\dotnet_install\"\n    Write-Host \".NET install folder cleaned.\"\n"
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 12.212890625,
          "content": "#tool \"nuget:?package=nuget.commandline&version=6.9.1\"\n#addin nuget:?package=Cake.Http&version=4.0.0\n\nvar target = Argument(\"target\", \"Build\");\nvar configuration = Argument(\"configuration\", \"Release\");\n\n// Pre-define\n\nvar version = \"version\";\n\nvar repoDir = \"repoDir\";\nvar outputPath = \"outputPath\";\n\nvar pfxPath = \"pfxPath\";\nvar pw = \"pw\";\n\n// Extension\n\nstatic ProcessArgumentBuilder AppendIf(this ProcessArgumentBuilder builder, string text, bool condition)\n{\n    return condition ? builder.Append(text) : builder;\n}\n\n// Properties\n\nstring solution\n{\n    get => System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao.sln\");\n}\nstring project\n{\n    get => System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao\", \"Snap.Hutao.csproj\");\n}\nstring binPath\n{\n    get => System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao\", \"bin\", \"x64\", \"Release\", \"net9.0-windows10.0.26100.0\", \"win-x64\");\n}\nstring manifest\n{\n    get => System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao\", \"Package.appxmanifest\");\n}\n\nif (GitHubActions.IsRunningOnGitHubActions)\n{\n    repoDir = GitHubActions.Environment.Workflow.Workspace.FullPath;\n    outputPath = System.IO.Path.Combine(repoDir, \"src\", \"output\");\n\n    if (GitHubActions.Environment.PullRequest.IsPullRequest)\n    {\n        version = System.DateTime.Now.ToString(\"yyyy.M.d.0\");\n\n        Information(\"Is Pull Request. Skip version.\");\n    }\n    else\n    {\n        if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Alpha\")\n        {\n            var versionAuth = HasEnvironmentVariable(\"VERSION_API_TOKEN\") ? EnvironmentVariable(\"VERSION_API_TOKEN\") : throw new Exception(\"Cannot find VERSION_API_TOKEN\");\n            version = HttpGet(\n                \"https://internal.snapgenshin.cn/BuildIntergration/RequestNewVersion\",\n                new HttpSettings\n                {\n                    Headers = new Dictionary<string, string>\n                        {\n                    { \"Authorization\", versionAuth }\n                        }\n                }\n            );\n        }\n        else if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Canary\")\n        {\n            version = System.DateTime.Now.ToString(\"yyyy.M.d.\") + ((int)((System.DateTime.Now - System.DateTime.Today).TotalSeconds / 86400 * 65535)).ToString();\n        }\n        else\n        {\n            throw new Exception(\"Unsupported workflow.\");\n        }\n\n        var certificateBase64 = HasEnvironmentVariable(\"CERTIFICATE\") ? EnvironmentVariable(\"CERTIFICATE\") : throw new Exception(\"Cannot find CERTIFICATE\");\n        pw = HasEnvironmentVariable(\"PW\") ? EnvironmentVariable(\"PW\") : throw new Exception(\"Cannot find PW\");\n        pfxPath = System.IO.Path.Combine(repoDir, \"temp.pfx\");\n        System.IO.File.WriteAllBytes(pfxPath, System.Convert.FromBase64String(certificateBase64));\n\n        Information($\"Version: {version}\");\n    }\n\n    GitHubActions.Commands.SetOutputParameter(\"version\", version);\n}\nelse if (AppVeyor.IsRunningOnAppVeyor)\n{\n    repoDir = AppVeyor.Environment.Build.Folder;\n    outputPath = System.IO.Path.Combine(repoDir, \"src\", \"output\");\n\n    version = XmlPeek(manifest, \"appx:Package/appx:Identity/@Version\", new XmlPeekSettings\n    {\n        Namespaces = new Dictionary<string, string> { { \"appx\", \"http://schemas.microsoft.com/appx/manifest/foundation/windows10\" } }\n    })[..^2];\n    Information($\"Version: {version}\");\n}\nelse // Local\n{\n    repoDir = System.Environment.CurrentDirectory;\n    outputPath = System.IO.Path.Combine(repoDir, \"src\", \"output\");\n\n    version = System.DateTime.Now.ToString(\"yyyy.M.d.\") + ((int)((System.DateTime.Now - System.DateTime.Today).TotalSeconds / 86400 * 65535)).ToString();\n\n    Information($\"Version: {version}\");\n}\n\n// Windows SDK\nvar registry = new WindowsRegistry();\nvar winsdkRegistry = registry.LocalMachine.OpenKey(@\"SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots\");\nvar winsdkVersion = winsdkRegistry.GetSubKeyNames().MaxBy(key => int.Parse(key.Split(\".\")[2]));\nvar winsdkPath = (string)winsdkRegistry.GetValue(\"KitsRoot10\");\nvar winsdkBinPath = System.IO.Path.Combine(winsdkPath, \"bin\", winsdkVersion, \"x64\");\nInformation($\"Windows SDK: {winsdkPath}\");\n\nTask(\"Build\")\n    .IsDependentOn(\"Build binary package\")\n    .IsDependentOn(\"Copy files\")\n    .IsDependentOn(\"Remove unused files\")\n    .IsDependentOn(\"Build MSIX\")\n    .IsDependentOn(\"Sign\");\n\nTask(\"NuGet Restore\")\n    .Does(() =>\n{\n    Information(\"Restoring packages...\");\n\n    var nugetConfig = System.IO.Path.Combine(repoDir, \"NuGet.Config\");\n    DotNetRestore(project, new DotNetRestoreSettings\n    {\n        Verbosity = DotNetVerbosity.Detailed,\n        Interactive = false,\n        ConfigFile = nugetConfig\n    });\n});\n\nTask(\"Generate AppxManifest\")\n    .Does(() =>\n{\n    Information(\"Generating AppxManifest...\");\n\n    var content = System.IO.File.ReadAllText(manifest);\n\n    if (GitHubActions.IsRunningOnGitHubActions)\n    {\n        Information(\"Using CI configuraion\");\n        if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Alpha\")\n        {\n            Information(\"Using Alpha configuration\");\n            content = content\n                .Replace(\"Snap Hutao\", \"Snap Hutao Alpha\")\n                .Replace(\"胡桃\", \"胡桃 Alpha\")\n                .Replace(\"DGP Studio\", \"DGP Studio CI\");\n            content = System.Text.RegularExpressions.Regex.Replace(content, \"  Name=\\\"([^\\\"]*)\\\"\", \"  Name=\\\"7f0db578-026f-4e0b-a75b-d5d06bb0a74c\\\"\");\n        }\n        else if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Canary\")\n        {\n            Information(\"Using Canary configuration\");\n            content = content\n                .Replace(\"Snap Hutao\", \"Snap Hutao Canary\")\n                .Replace(\"胡桃\", \"胡桃 Canary\")\n                .Replace(\"DGP Studio\", \"DGP Studio CI\");\n            content = System.Text.RegularExpressions.Regex.Replace(content, \"  Name=\\\"([^\\\"]*)\\\"\", \"  Name=\\\"52127695-c6a7-406e-916a-693b905e8ba7\\\"\");\n        }\n        else\n        {\n            throw new Exception(\"Unsupported workflow.\");\n        }\n\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Publisher=\\\"([^\\\"]*)\\\"\", \"  Publisher=\\\"E=admin@dgp-studio.cn, CN=DGP Studio CI, OU=CI, O=DGP-Studio, L=San Jose, S=CA, C=US\\\"\");\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Version=\\\"([0-9\\\\.]+)\\\"\", $\"  Version=\\\"{version}\\\"\");\n    }\n    else if (AppVeyor.IsRunningOnAppVeyor)\n    {\n        Information(\"Using Release configuration\");\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Publisher=\\\"([^\\\"]*)\\\"\", \"  Publisher=\\\"CN=SignPath Foundation, O=SignPath Foundation, L=Lewes, S=Delaware, C=US\\\"\");\n    }\n    else\n    {\n        Information(\"Using Local configuration.\");\n        content = content\n            .Replace(\"Snap Hutao\", \"Snap Hutao Local\")\n            .Replace(\"胡桃\", \"胡桃 Local\")\n            .Replace(\"DGP Studio\", \"DGP Studio CI\");\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Name=\\\"([^\\\"]*)\\\"\", \"  Name=\\\"E8B6E2B3-D2A0-4435-A81D-2A16AAF405C7\\\"\");\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Publisher=\\\"([^\\\"]*)\\\"\", \"  Publisher=\\\"E=admin@dgp-studio.cn, CN=DGP Studio CI, OU=CI, O=DGP-Studio, L=San Jose, S=CA, C=US\\\"\");\n        content = System.Text.RegularExpressions.Regex.Replace(content, \"  Version=\\\"([0-9\\\\.]+)\\\"\", $\"  Version=\\\"{version}\\\"\");\n    }\n\n    System.IO.File.WriteAllText(manifest, content);\n\n    Information(\"Generated.\");\n});\n\nTask(\"Build binary package\")\n    .IsDependentOn(\"NuGet Restore\")\n    .IsDependentOn(\"Generate AppxManifest\")\n    .Does(() =>\n{\n    Information(\"Building binary package...\");\n\n    var settings = new DotNetBuildSettings\n    {\n        Configuration = configuration\n    };\n\n    settings.MSBuildSettings = new DotNetMSBuildSettings\n    {\n        ArgumentCustomization = args => args.Append(\"/p:Platform=x64\")\n                                            .Append(\"/p:UapAppxPackageBuildMode=SideloadOnly\")\n                                            .Append(\"/p:AppxPackageSigningEnabled=false\")\n                                            .Append(\"/p:AppxBundle=Never\")\n                                            .Append(\"/p:AppxPackageOutput=\" + outputPath)\n                                            .AppendIf(\"/p:AlphaConstants=IS_ALPHA_BUILD\", !AppVeyor.IsRunningOnAppVeyor)\n    };\n\n    DotNetBuild(project, settings);\n});\n\nTask(\"Copy files\")\n    .IsDependentOn(\"Build binary package\")\n    .Does(() =>\n{\n    Information(\"Copying assets...\");\n    CopyDirectory(\n        System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao\", \"Assets\"),\n        System.IO.Path.Combine(binPath, \"Assets\")\n    );\n\n    Information(\"Copying resource...\");\n    CopyDirectory(\n        System.IO.Path.Combine(repoDir, \"src\", \"Snap.Hutao\", \"Snap.Hutao\", \"Resource\"),\n        System.IO.Path.Combine(binPath, \"Resource\")\n    );\n});\n\nTask(\"Remove unused files\")\n    .IsDependentOn(\"Build binary package\")\n    .Does(() =>\n{\n    Information(\"Removing unused files...\");\n\n    Information(\"Removing xbf...\");\n    System.IO.Directory.Delete(System.IO.Path.Combine(binPath, \"Service\"), true);\n    System.IO.Directory.Delete(System.IO.Path.Combine(binPath, \"UI\"), true);\n    System.IO.File.Delete(System.IO.Path.Combine(binPath, \"App.xbf\"));\n\n    Information(\"Removing appxrecipe...\");\n    System.IO.File.Delete(System.IO.Path.Combine(binPath, \"Snap.Hutao.build.appxrecipe\"));\n});\n\nTask(\"Build MSIX\")\n    .IsDependentOn(\"Build binary package\")\n    .IsDependentOn(\"Copy files\")\n    .IsDependentOn(\"Remove unused files\")\n    .Does(() =>\n{\n    var arguments = \"arguments\";\n    if (GitHubActions.IsRunningOnGitHubActions)\n    {\n        if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Alpha\")\n        {\n            arguments = \"pack /d \" + binPath + \" /p \" + System.IO.Path.Combine(outputPath, $\"Snap.Hutao.Alpha-{version}.msix\");\n        }\n        else if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Canary\")\n        {\n            arguments = \"pack /d \" + binPath + \" /p \" + System.IO.Path.Combine(outputPath, $\"Snap.Hutao.Canary-{version}.msix\");\n        }\n        else\n        {\n            throw new Exception(\"Unsupported workflow.\");\n        }\n    }\n    else if (AppVeyor.IsRunningOnAppVeyor)\n    {\n        arguments = \"pack /d \" + binPath + \" /p \" + System.IO.Path.Combine(outputPath, $\"Snap.Hutao-{version}.msix\");\n    }\n    else\n    {\n        arguments = \"pack /d \" + binPath + \" /p \" + System.IO.Path.Combine(outputPath, $\"Snap.Hutao.Local-{version}.msix\");\n    }\n\n    var makeappxPath = System.IO.Path.Combine(winsdkBinPath, \"makeappx.exe\");\n\n    var p = StartProcess(\n        makeappxPath,\n        new ProcessSettings\n        {\n            Arguments = arguments\n        }\n    );\n    if (p != 0)\n    {\n        throw new InvalidOperationException(\"Build MSIX failed with exit code \" + p);\n    }\n});\n\nTask(\"Sign\")\n    .IsDependentOn(\"Build MSIX\")\n    .Does(() =>\n{\n    if (AppVeyor.IsRunningOnAppVeyor)\n    {\n        Information(\"Move to SignPath. Skip signing.\");\n        return;\n    }\n    else if (GitHubActions.IsRunningOnGitHubActions)\n    {\n        if (GitHubActions.Environment.PullRequest.IsPullRequest)\n        {\n            Information(\"Is Pull Request. Skip signing.\");\n            return;\n        }\n\n        var signPath = System.IO.Path.Combine(winsdkBinPath, \"signtool.exe\");\n        var arguments = \"arguments\";\n\n        if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Alpha\")\n        {\n            arguments = $\"sign /debug /v /a /fd SHA256 /f {pfxPath} /p {pw} {System.IO.Path.Combine(outputPath, $\"Snap.Hutao.Alpha-{version}.msix\")}\";\n        }\n        else if (GitHubActions.Environment.Workflow.Workflow == \"Snap Hutao Canary\")\n        {\n            arguments = $\"sign /debug /v /a /fd SHA256 /f {pfxPath} /p {pw} {System.IO.Path.Combine(outputPath, $\"Snap.Hutao.Canary-{version}.msix\")}\";\n        }\n        else\n        {\n            throw new Exception(\"Unsupported workflow.\");\n        }\n\n        var p = StartProcess(\n            signPath,\n            new ProcessSettings\n            {\n                Arguments = arguments\n            }\n        );\n        if (p != 0)\n        {\n            throw new InvalidOperationException(\"Sign failed with exit code \" + p);\n        }\n    }\n    else\n    {\n        Information(\"Local configuration. Skip signing.\");\n        return;\n    }\n});\n\nRunTarget(target);\n"
        },
        {
          "name": "crowdin.yml",
          "type": "blob",
          "size": 0.3203125,
          "content": "files:\n  - source: /src/Snap.Hutao/Snap.Hutao/Resource/Localization/SH.resx\n    translation: /src/Snap.Hutao/Snap.Hutao/Resource/Localization/SH.%osx_locale%.resx\n  - source: /src/Snap.Hutao/Snap.Hutao/Resource/Localization/SHRegex.resx\n    translation: /src/Snap.Hutao/Snap.Hutao/Resource/Localization/SHRegex.%osx_locale%.resx"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}