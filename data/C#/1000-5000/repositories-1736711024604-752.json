{
  "metadata": {
    "timestamp": 1736711024604,
    "page": 752,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "npgsql/efcore.pg",
      "stars": 1597,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".build",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 9.4140625,
          "content": "# Schema: http://EditorConfig.org\n# Docs: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference\n\n# top-most EditorConfig file\nroot = true\n\n# Don't use tabs for indentation.\n[*]\nindent_style = space\ntrim_trailing_whitespace = true\nguidelines = 140\nmax_line_length = 140\n\n# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4\ninsert_final_newline = true\n#charset = utf-8-bom\n\n# Xml project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]\nindent_size = 2\n\n# Xml config files\n[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct,xml,stylecop}]\nindent_size = 2\n\n# JSON files\n[*.json]\nindent_size = 2\n\n# Powershell files\n[*.ps1]\nindent_size = 2\n\n# Shell scripts\n[*.sh]\nend_of_line = lf\nindent_size = 2\n\n[*.{cmd,bat}]\nend_of_line = crlf\nindent_size = 2\n\n## Language conventions\n# Dotnet code style settings:\n[*.{cs,vb}]\n# \"This.\" and \"Me.\" qualifiers\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\n\n# Language keywords instead of framework type names for type references\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = always:suggestion\ndotnet_style_readonly_field = true:warning\n\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:silent\ndotnet_style_prefer_conditional_expression_over_assignment = true:suggestion\ndotnet_style_prefer_conditional_expression_over_return = true:suggestion\n\n# Null-checking preferences\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\n\n# CSharp code style settings:\n[*.cs]\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,const,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion\n\n# Implicit and explicit types\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\n\n# Expression-bodied members\n# Explicitly disabled due to difference in coding style between source and tests\n#csharp_style_expression_bodied_methods = false:silent\n#csharp_style_expression_bodied_constructors = false:silent\ncsharp_style_expression_bodied_operators = false:silent\ncsharp_style_expression_bodied_properties = true:suggestion\ncsharp_style_expression_bodied_indexers = true:suggestion\ncsharp_style_expression_bodied_accessors = true:suggestion\n\n# Pattern matching\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n\n# Inlined variable declarations\ncsharp_style_inlined_variable_declaration = true:suggestion\n\n# Expression-level preferences\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\n\n# Null-checking preference\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Code block preferences\ncsharp_prefer_braces = true:suggestion\n\n## Formatting conventions\n# Dotnet formatting settings:\n[*.{cs,vb}]\n# Organize usings\ndotnet_sort_system_directives_first = true\ndotnet_separate_import_directive_groups = false\n\n# CSharp formatting settings:\n[*.cs]\n# Newline options\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Identation options\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents_when_block = false\ncsharp_indent_switch_labels = true\ncsharp_indent_case_contents = true\ncsharp_indent_labels = no_change\n\n# Spacing options\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_square_brackets = false\n\n# Wrap options\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n\n## Naming conventions\n[*.{cs,vb}]\n\n## Naming styles\n\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\ndotnet_naming_style.camel_case_style.capitalization = camel_case\n\n# PascalCase with I prefix\ndotnet_naming_style.interface_style.capitalization = pascal_case\ndotnet_naming_style.interface_style.required_prefix = I\n\n# PascalCase with T prefix\ndotnet_naming_style.type_parameter_style.capitalization = pascal_case\ndotnet_naming_style.type_parameter_style.required_prefix = T\n\n# camelCase with _ prefix\ndotnet_naming_style._camelCase.capitalization = camel_case\ndotnet_naming_style._camelCase.required_prefix = _\n\n## Rules\n# Interfaces\ndotnet_naming_symbols.interface_symbol.applicable_kinds = interface\ndotnet_naming_symbols.interface_symbol.applicable_accessibilities = *\ndotnet_naming_rule.interface_naming.symbols = interface_symbol\ndotnet_naming_rule.interface_naming.style = interface_style\ndotnet_naming_rule.interface_naming.severity = suggestion\n\n# Classes, Structs, Enums, Properties, Methods, Local Functions, Events, Namespaces\ndotnet_naming_symbols.class_symbol.applicable_kinds = class, struct, enum, property, method, local_function, event, namespace, delegate\ndotnet_naming_symbols.class_symbol.applicable_accessibilities = *\n\ndotnet_naming_rule.class_naming.symbols = class_symbol\ndotnet_naming_rule.class_naming.style = pascal_case_style\ndotnet_naming_rule.class_naming.severity = suggestion\n\n# Type Parameters\ndotnet_naming_symbols.type_parameter_symbol.applicable_kinds = type_parameter\ndotnet_naming_symbols.type_parameter_symbol.applicable_accessibilities = *\n\ndotnet_naming_rule.type_parameter_naming.symbols = type_parameter_symbol\ndotnet_naming_rule.type_parameter_naming.style = type_parameter_style\ndotnet_naming_rule.type_parameter_naming.severity = suggestion\n\n# Visible Fields\ndotnet_naming_symbols.public_field_symbol.applicable_kinds = field\ndotnet_naming_symbols.public_field_symbol.applicable_accessibilities = public, internal, protected, protected_internal, private_protected\n\ndotnet_naming_rule.public_field_naming.symbols = public_field_symbol\ndotnet_naming_rule.public_field_naming.style = pascal_case_style\ndotnet_naming_rule.public_field_naming.severity = suggestion\n\n# Private constant Fields\ndotnet_naming_symbols.const_field_symbol.applicable_kinds = field\ndotnet_naming_symbols.const_field_symbol.applicable_accessibilities = private\ndotnet_naming_symbols.const_field_symbol.required_modifiers = const\n\ndotnet_naming_rule.const_field_naming.symbols = const_field_symbol\ndotnet_naming_rule.const_field_naming.style = pascal_case_style\ndotnet_naming_rule.const_field_naming.severity = suggestion\n\n# Parameters\ndotnet_naming_symbols.parameter_symbol.applicable_kinds = parameter\ndotnet_naming_symbols.parameter_symbol.applicable_accessibilities = *\n\ndotnet_naming_rule.parameter_naming.symbols = parameter_symbol\ndotnet_naming_rule.parameter_naming.style = camel_case_style\ndotnet_naming_rule.parameter_naming.severity = suggestion\n\n# Everything Local\ndotnet_naming_symbols.everything_else.applicable_kinds = local\ndotnet_naming_symbols.everything_else.applicable_accessibilities = *\n\ndotnet_naming_rule.everything_else_naming.symbols = everything_else\ndotnet_naming_rule.everything_else_naming.style = camel_case_style\ndotnet_naming_rule.everything_else_naming.severity = suggestion\n\n# Microsoft .NET properties\ncsharp_style_expression_bodied_methods = true:suggestion\n\n# ReSharper properties\nresharper_local_function_body = expression_body\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.138671875,
          "content": "* text=auto\n\n*.cs text=auto diff=csharp\n*.csproj text=auto\n*.sln text=auto\n*.resx text=auto\n*.xml text=auto\n*.txt text=auto\n\npackages/ binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1728515625,
          "content": ".DS_Store\n*.resources\n*.suo\n*.user\n*.sln.docstates\n*.userprefs\n/*.nupkg\n.nuget/\n.idea/\n.vs/\n[Bb]in/\n[Oo]bj/\n[Oo]bj/\nartifacts/\n# Roslyn cache directories\n*.ide/\nTestResult.xml\n\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 2.8603515625,
          "content": "<Project>\n  <PropertyGroup>\n    <VersionPrefix>10.0.0</VersionPrefix>\n    <TargetFramework>net10.0</TargetFramework>\n    <LangVersion>latest</LangVersion>\n    <Nullable>enable</Nullable>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n    <AnalysisLevel>latest</AnalysisLevel>\n    <NoWarn>NU5105</NoWarn>\n    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>\n    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Npgsql.snk</AssemblyOriginatorKeyFile>\n    <SignAssembly>true</SignAssembly>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n    <ImplicitUsings>true</ImplicitUsings>\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\n\n    <Copyright>Copyright 2024 © The Npgsql Development Team</Copyright>\n    <Company>Npgsql</Company>\n    <PublishRepositoryUrl>true</PublishRepositoryUrl>\n    <PackageLicenseExpression>PostgreSQL</PackageLicenseExpression>\n    <PackageProjectUrl>https://github.com/npgsql/efcore.pg</PackageProjectUrl>\n    <PackageIcon>postgresql.png</PackageIcon>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Include=\"$(MSBuildThisFileDirectory)postgresql.png\" Pack=\"true\" PackagePath=\"\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <Using Include=\"System.Diagnostics\" />\n    <Using Include=\"System.Linq.Expressions\" />\n    <Using Include=\"System.Reflection\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.ChangeTracking\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Diagnostics\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Design\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Metadata.Builders\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Infrastructure\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Metadata\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Metadata.Conventions\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Migrations\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Migrations.Operations\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Query\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Query.SqlExpressions\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Scaffolding\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Scaffolding.Metadata\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Storage\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Storage.ValueConversion\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Update\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.ValueGeneration\" />\n    <Using Include=\"Microsoft.EntityFrameworkCore.Utilities\" />\n    <Using Include=\"Microsoft.Extensions.Logging\" />\n    <Using Include=\"Microsoft.Extensions.DependencyInjection\" />\n    <Using Include=\"Npgsql\" />\n    <Using Include=\"NpgsqlTypes\" />\n  </ItemGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 1.8759765625,
          "content": "  <Project>\n  <PropertyGroup>\n    <EFCoreVersion>10.0.0-alpha.1.24620.1</EFCoreVersion>\n    <MicrosoftExtensionsVersion>10.0.0-alpha.1.24616.1</MicrosoftExtensionsVersion>\n    <NpgsqlVersion>9.0.2</NpgsqlVersion>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore\" Version=\"$(EFCoreVersion)\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"$(EFCoreVersion)\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Abstractions\" Version=\"$(EFCoreVersion)\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Relational.Specification.Tests\" Version=\"$(EFCoreVersion)\" />\n    <PackageVersion Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"$(EFCoreVersion)\" />\n\n    <PackageVersion Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"$(MicrosoftExtensionsVersion)\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" Version=\"$(MicrosoftExtensionsVersion)\" />\n    <PackageVersion Include=\"Microsoft.Extensions.Logging\" Version=\"$(MicrosoftExtensionsVersion)\" />\n\n    <PackageVersion Include=\"Npgsql\" Version=\"$(NpgsqlVersion)\" />\n    <PackageVersion Include=\"Npgsql.NodaTime\" Version=\"$(NpgsqlVersion)\" />\n    <PackageVersion Include=\"Npgsql.NetTopologySuite\" Version=\"$(NpgsqlVersion)\" />\n    <PackageVersion Include=\"Npgsql.DependencyInjection\" Version=\"$(NpgsqlVersion)\" />\n\n    <PackageVersion Include=\"Microsoft.SourceLink.GitHub\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.8.0\" />\n    <PackageVersion Include=\"xunit\" Version=\"2.9.2\" />\n    <PackageVersion Include=\"xunit.assert\" Version=\"2.9.2\" />\n    <PackageVersion Include=\"xunit.core\" Version=\"2.9.2\" />\n    <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"2.8.2\" />\n    <PackageVersion Include=\"GitHubActionsTestLogger\" Version=\"2.3.3\" />\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "EFCore.PG.sln",
          "type": "blob",
          "size": 6.974609375,
          "content": "﻿Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio 15\nVisualStudioVersion = 15.0.27130.2026\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{4A5A60DD-41B6-40BF-B677-227A921ECCC8}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tNpgsql.snk = Npgsql.snk\n\t\tDirectory.Build.props = Directory.Build.props\n\t\tDirectory.Packages.props = Directory.Packages.props\n\t\tREADME.md = README.md\n\t\tNuGet.config = NuGet.config\n\t\tglobal.json = global.json\n\t\t.editorconfig = .editorconfig\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{8537E50E-CF7F-49CB-B4EF-3E2A1B11F050}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"test\", \"test\", \"{ED612DB1-AB32-4603-95E7-891BACA71C39}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"EFCore.PG\", \"src\\EFCore.PG\\EFCore.PG.csproj\", \"{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"EFCore.PG.Tests\", \"test\\EFCore.PG.Tests\\EFCore.PG.Tests.csproj\", \"{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"EFCore.PG.FunctionalTests\", \"test\\EFCore.PG.FunctionalTests\\EFCore.PG.FunctionalTests.csproj\", \"{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"EFCore.PG.NodaTime\", \"src\\EFCore.PG.NodaTime\\EFCore.PG.NodaTime.csproj\", \"{77F0608F-6D0C-481C-9108-D5176E2EAD69}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"EFCore.PG.NTS\", \"src\\EFCore.PG.NTS\\EFCore.PG.NTS.csproj\", \"{D7106D61-C7CA-4005-B31F-43281BB397AD}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Github\", \"Github\", \"{26203F54-A3C1-43AD-A101-8F589D2D67AD}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.github\\workflows\\build.yml = .github\\workflows\\build.yml\n\t\t.github\\dependabot.yml = .github\\dependabot.yml\n\t\t.github\\workflows\\codeql-analysis.yml = .github\\workflows\\codeql-analysis.yml\n\tEndProjectSection\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|x64.Build.0 = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69}.Release|x86.Build.0 = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|x64.Build.0 = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD}.Release|x86.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{FADDA2D1-03B4-4DEF-8D24-DD1CA4E81F4A} = {8537E50E-CF7F-49CB-B4EF-3E2A1B11F050}\n\t\t{E1D99AD4-D88B-42BA-86DF-90B98B2E9A01} = {ED612DB1-AB32-4603-95E7-891BACA71C39}\n\t\t{05A7D0B7-4AE1-4BC8-A1BE-2389F1593B2D} = {ED612DB1-AB32-4603-95E7-891BACA71C39}\n\t\t{77F0608F-6D0C-481C-9108-D5176E2EAD69} = {8537E50E-CF7F-49CB-B4EF-3E2A1B11F050}\n\t\t{D7106D61-C7CA-4005-B31F-43281BB397AD} = {8537E50E-CF7F-49CB-B4EF-3E2A1B11F050}\n\t\t{26203F54-A3C1-43AD-A101-8F589D2D67AD} = {4A5A60DD-41B6-40BF-B677-227A921ECCC8}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {F4EAAE6D-758C-4184-9D8C-7113384B61A8}\n\tEndGlobalSection\n\tGlobalSection(MonoDevelopProperties) = preSolution\n\t\tStartupItem = Npgsql.csproj\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "EFCore.PG.sln.DotSettings",
          "type": "blob",
          "size": 21.39453125,
          "content": "﻿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:Boolean x:Key=\"/Default/CodeEditing/GenerateMemberBody/CopyXmlDocumentation/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeEditing/GenerateMemberBody/DebuggerStepThroughAccessors/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeEditing/GenerateMemberBody/DocumentationGenerationKind/@EntryValue\">Copy</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/GeneratedCode/GeneratedFileMasks/=Resources_002Ecs/@EntryIndexedValue\">Resources.cs</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeInspection/CodeAnnotations/NamespacesWithAnnotations/=Microsoft_002EEntityFrameworkCore_002EAnnotations/@EntryIndexedValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/AnalysisEnabled/@EntryValue\">VISIBLE_FILES</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeAttributes/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Fdowhile/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Ffixed/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Ffor/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Fforeach/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Fifelse/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Flock/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Fusing/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeBraces_005Fwhile/@EntryIndexedValue\">HINT</s:String>\n\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeModifiersOrder/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeNamespaceBody/@EntryIndexedValue\">SUGGESTION</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeRedundantParentheses/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeTypeMemberModifiers/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeTypeModifiers/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=BuiltInTypeReferenceStyle/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ConvertMethodToExpressionBody/@EntryIndexedValue\">SUGGESTION</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=ConvertToExpressionBodyWhenPossible/@EntryIndexedValue\">SUGGESTION</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=LoopCanBeConvertedToQuery/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantArgumentName/@EntryIndexedValue\">DO_NOT_SHOW</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantArgumentNameForLiteralExpression/@EntryIndexedValue\">DO_NOT_SHOW</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=StringEndsWithIsCultureSpecific/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=StringStartsWithIsCultureSpecific/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestVarOrType_005FBuiltInTypes/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestVarOrType_005FElsewhere/@EntryIndexedValue\">WARNING</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestVarOrType_005FSimpleTypes/@EntryIndexedValue\">WARNING</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeInspection/Highlighting/ReadSettingsFromFileLevel/@EntryValue\">True</s:Boolean>\n\n\t<s:String x:Key=\"/Default/CodeStyle/CodeCleanup/Profiles/=EntityFramework/@EntryIndexedValue\">&lt;?xml version=\"1.0\" encoding=\"utf-16\"?&gt;&lt;Profile name=\"EntityFramework\"&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;ALWAYS_IMPLICIT&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_IMPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSMakeAutoPropertyGetOnly&gt;True&lt;/CSMakeAutoPropertyGetOnly&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CSEnforceVarKeywordUsageSettings&gt;True&lt;/CSEnforceVarKeywordUsageSettings&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier=\"True\" ArrangeTypeMemberAccessModifier=\"True\" SortModifiers=\"True\" ArrangeAttributes=\"True\" ArrangeVarStyle=\"True\" ArrangeBraces=\"True\" ArrangeCodeBodyStyle=\"True\" ArrangeObjectCreation=\"True\" ArrangeDefaultValue=\"True\" ArrangeNamespaces=\"True\" /&gt;&lt;IDEA_SETTINGS&gt;&amp;lt;profile version=\"1.0\"&amp;gt;&#xD;\n  &amp;lt;option name=\"myName\" value=\"EntityFramework\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"ES6ShorthandObjectProperty\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"JSArrowFunctionBracesCanBeRemoved\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"JSPrimitiveTypeWrapperUsage\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"JSRemoveUnnecessaryParentheses\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"JSUnnecessarySemicolon\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"TypeScriptExplicitMemberType\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"UnnecessaryContinueJS\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"UnnecessaryLabelJS\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"UnnecessaryLabelOnBreakStatementJS\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"UnnecessaryLabelOnContinueStatementJS\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"UnnecessaryReturnJS\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n  &amp;lt;inspection_tool class=\"WrongPropertyKeyValueDelimiter\" enabled=\"false\" level=\"WEAK WARNING\" enabled_by_default=\"false\" /&amp;gt;&#xD;\n&amp;lt;/profile&amp;gt;&lt;/IDEA_SETTINGS&gt;&lt;RIDER_SETTINGS&gt;&amp;lt;profile&amp;gt;&#xD;\n  &amp;lt;Language id=\"CSS\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"EditorConfig\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"HTML\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;&#xD;\n    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"HTTP Request\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"Handlebars\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"Ini\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"JSON\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"Jade\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"JavaScript\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;&#xD;\n    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"Markdown\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"Properties\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"RELAX-NG\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"SQL\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"XML\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;&#xD;\n    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n  &amp;lt;Language id=\"yaml\"&amp;gt;&#xD;\n    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;&#xD;\n  &amp;lt;/Language&amp;gt;&#xD;\n&amp;lt;/profile&amp;gt;&lt;/RIDER_SETTINGS&gt;&lt;/Profile&gt;</s:String>\n\n\t<s:String x:Key=\"/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue\">EntityFramework</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue\">EntityFramework</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/ARGUMENTS_LITERAL/@EntryValue\">Named</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/ARGUMENTS_STRING_LITERAL/@EntryValue\">Named</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue\">Required</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARGUMENT/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue\">NEXT_LINE_SHIFTED_2</s:String>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_NAMESPACE/@EntryValue\">0</s:Int64>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue\">SEPARATE</s:String>\n\n\n\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue\">ALWAYS_ADD</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_NESTED_USINGS_STMT/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_RAW_LITERAL_STRING/@EntryValue\">DO_NOT_CHANGE</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue\">NEXT_LINE</s:String>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue\">1</s:Int64>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue\">1</s:Int64>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_ATTRIBUTE_ARRANGEMENT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EMBEDDED_ARRANGEMENT/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_EXPR_MEMBER_ARRANGEMENT/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_INITIALIZER_ARRANGEMENT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue\">True</s:Boolean>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_ATTRIBUTE_LENGTH_FOR_SAME_LINE/@EntryValue\">80</s:Int64>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_INITIALIZER_ELEMENTS_ON_LINE/@EntryValue\">2</s:Int64>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue\">NEVER</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_EXPR_ACCESSOR_ON_SINGLE_LINE/@EntryValue\">ALWAYS</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_EXPR_METHOD_ON_SINGLE_LINE/@EntryValue\">NEVER</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_EXPR_PROPERTY_ON_SINGLE_LINE/@EntryValue\">NEVER</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue\">NEVER</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_EMBEDDED_STATEMENT_ON_SAME_LINE/@EntryValue\">NEVER</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_INITIALIZER_ON_SINGLE_LINE/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_LINQ_ON_SINGLE_LINE/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue\">LINE_BREAK</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/STICK_COMMENT/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARRAY_INITIALIZER_STYLE/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_ARROW_WITH_EXPRESSIONS/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_BINARY_OPSIGN/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_COMMA/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_BINARY_EXPRESSIONS/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LIMIT/@EntryValue\">140</s:Int64>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINES/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE/@EntryValue\">CHOP_ALWAYS</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue\">True</s:Boolean>\n\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/JavaScriptCodeFormatting/JavaScriptFormatOther/ALIGN_MULTIPLE_DECLARATION/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/XmlDocFormatter/KeepUserLineBreaks/@EntryValue\">True</s:Boolean>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/XmlDocFormatter/WrapLimit/@EntryValue\">140</s:Int64>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/XmlDocFormatter/WRAP_LIMIT/@EntryValue\">140</s:Int64>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/XmlFormatter/WrapBeforeAttr/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/XmlFormatter/WrapInsideText/@EntryValue\">True</s:Boolean>\n\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002ECSharpPlaceAttributeOnSameLineMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002EXml_002ECodeStyle_002EFormatSettingsUpgrade_002EXmlMoveToCommonFormatterSettingsUpgrade/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=noda/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=Postgre/@EntryIndexedValue\">True</s:Boolean>\n</wpf:ResourceDictionary>"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.8818359375,
          "content": "Copyright (c) 2002-2021, Npgsql\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose, without fee, and without a written agreement\nis hereby granted, provided that the above copyright notice and this\nparagraph and the following two paragraphs appear in all copies.\n\nIN NO EVENT SHALL NPGSQL BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,\nSPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,\nARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF\nNpgsql HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nNPGSQL SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND Npgsql\nHAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,\nOR MODIFICATIONS.\n"
        },
        {
          "name": "Npgsql.snk",
          "type": "blob",
          "size": 0.58203125,
          "content": null
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 1.146484375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n    <packageSources>\n        <add key=\"dotnet10\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet10/nuget/v3/index.json\" />\n        <add key=\"dotnet-eng\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json\" />\n        <add key=\"npgsql-vnext\" value=\"https://www.myget.org/F/npgsql-vnext/api/v3/index.json\" />\n        <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\n    </packageSources>\n\n    <packageSourceMapping>\n        <packageSource key=\"nuget.org\">\n            <package pattern=\"*\" />\n            <!-- Our npgsql-vnext feed doesn't necessarily contain the last preview (package retention rules...), so we take it from nuget.org -->\n            <package pattern=\"Npgsql\" />\n            <package pattern=\"Npgsql.*\" />\n        </packageSource>\n        <packageSource key=\"npgsql-vnext\">\n            <package pattern=\"Npgsql\" />\n            <package pattern=\"Npgsql.*\" />\n        </packageSource>\n        <packageSource key=\"dotnet10\">\n            <package pattern=\"*\" />\n        </packageSource>\n    </packageSourceMapping>\n\n</configuration>\n"
        },
        {
          "name": "QueryBaseline.cs",
          "type": "blob",
          "size": 203.63671875,
          "content": "Microsoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_date_component() : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnoreCase() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_minute_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsIgnorePatternWhitespace() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatch() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Column() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.IsNullOrWhiteSpace_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsSingleline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 238\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_without_arguments_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal_with_escaping() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_not_found() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", '[') - 1) = -1\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_StartsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_Contains_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsMultiline() : line() na R:\\RafaelNuvem\\ProjetosGit\\EFCorePostgreSQL\\test\\EFCore.PG.FunctionalTests\\Query\\SimpleQueryNpgsqlTest.Functions.cs:linha 229\n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimStart_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_now() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Query_expression_with_to_string_and_contains() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_EndsWith_Literal() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Trim_without_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_month_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_array_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_day_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_utcnow() : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.TrimEnd_with_char_argument_in_predicate() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfWeek_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Regex_IsMatchOptionsNone() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_hour_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_String() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'ar') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.String_IndexOf_Char() : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE (STRPOS(\"\"c\"\".\"\"CompanyName\"\", 'A') - 1) > 5\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_second_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_dayOfYear_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.SimpleQueryNpgsqlTest.Where_datetime_year_component() : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='1998-05-04T00:00:00' (DbType = DateTime)\n\nSELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE DATE_TRUNC('day', \"\"o\"\".\"\"OrderDate\"\") = @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?ip)' || '^a') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('minute', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 23\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?px)' || '^ A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE (\"\"c\"\".\"\"City\"\" || '%') AND (LEFT(\"\"c\"\".\"\"ContactName\"\", LENGTH(\"\"c\"\".\"\"City\"\")) = \"\"c\"\".\"\"City\"\")\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ '^A' = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '\\s*$', '') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE '\\_a\\%b\\\\c%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"ContactName\"\" LIKE 'M%'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE STRPOS(\"\"c\"\".\"\"ContactName\"\", 'M') > 0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?n)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Or') = 'wne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE BTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'O') = 'wner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE LTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'Ow') = 'ner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RIGHT(\"\"c\"\".\"\"ContactName\"\", LENGTH('b')) = 'b'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE REGEXP_REPLACE(\"\"c\"\".\"\"ContactTitle\"\", '^\\s*(.*?)\\s*$', '\\1') = 'Owner'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('month', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'er') = 'Own'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('day', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 4\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() AT TIME ZONE 'UTC' <> @__myDatetime_0\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE RTRIM(\"\"c\"\".\"\"ContactTitle\"\", 'r') = 'Owne'\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('dow', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 2\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"CompanyName\"\" ~ ('(?p)' || '^A') = TRUE\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('hour', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 14\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('second', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 44\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('doy', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 68\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"OrderID\"\", \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\", \"\"o\"\".\"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE CAST(FLOOR(DATE_PART('year', \"\"o\"\".\"\"OrderDate\"\")) AS int4) = 1998\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE \"\"c\"\".\"\"Region\"\" IS NULL OR (\"\"c\"\".\"\"Region\"\" ~ '^\\s*$' = TRUE)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"SELECT \"\"o\"\".\"\"CustomerID\"\"\nFROM \"\"Orders\"\" AS \"\"o\"\"\nWHERE \"\"o\"\".\"\"OrderDate\"\" IS NOT NULL AND (STRPOS(CAST(\"\"o\"\".\"\"EmployeeID\"\" AS text), '10') > 0)\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor) : \n            AssertSql(\n                @\"@__myDatetime_0='2015-04-10T00:00:00' (DbType = DateTime)\n\nSELECT \"\"c\"\".\"\"CustomerID\"\", \"\"c\"\".\"\"Address\"\", \"\"c\"\".\"\"City\"\", \"\"c\"\".\"\"CompanyName\"\", \"\"c\"\".\"\"ContactName\"\", \"\"c\"\".\"\"ContactTitle\"\", \"\"c\"\".\"\"Country\"\", \"\"c\"\".\"\"Fax\"\", \"\"c\"\".\"\"Phone\"\", \"\"c\"\".\"\"PostalCode\"\", \"\"c\"\".\"\"Region\"\"\nFROM \"\"Customers\"\" AS \"\"c\"\"\nWHERE NOW() <> @__myDatetime_0\");\n\n\n\nMicrosoft.EntityFrameworkCore.Query.AsyncGroupByQuerySqlServerTest.<GroupBy_Composite_Select_Average>d__1.MoveNext() : line 25\n            AssertSql(\n                @\"SELECT AVG(CAST(\"\"o\"\".\"\"OrderID\"\" AS float8))\nFROM \"\"Orders\"\" AS \"\"o\"\"\nGROUP BY \"\"o\"\".\"\"CustomerID\"\", \"\"o\"\".\"\"EmployeeID\"\"\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(secs => 1)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(years => 1)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(mins => 1)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"@__years_0='2'\n\nSELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(years => @__years_0)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(months => 1)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (o.\"\"OrderDate\"\" + MAKE_INTERVAL(hours => 1)) AS \"\"OrderDate\"\"\nFROM \"\"Orders\"\" AS o\nWHERE o.\"\"OrderDate\"\" IS NOT NULL\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') && to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') || to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ 'b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('b') <@ to_tsquery('a & b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') @> to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('b') || to_tsvector('c'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') && to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') || to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ 'b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('b') <@ to_tsquery('a & b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') @> to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT (to_tsvector('b') || to_tsvector('c'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.TsQueryAnd() : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') && to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.TsQueryOr() : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') || to_tsquery('c & d'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.Matches_With_String() : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ 'b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.Matches_With_Tsquery() : \n            AssertSql(\n                @\"SELECT (to_tsvector('a') @@ to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.TsQueryIsContainedIn() : \n            AssertSql(\n                @\"SELECT (to_tsquery('b') <@ to_tsquery('a & b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.TsQueryContains() : \n            AssertSql(\n                @\"SELECT (to_tsquery('a & b') @> to_tsquery('b'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.TsVectorConcat() : \n            AssertSql(\n                @\"SELECT (to_tsvector('b') || to_tsvector('c'))\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.SpatialQueryNpgsqlGeographyTest.<IsWithinDistance>d__9.MoveNext() : line 84\n            AssertSql(\n                @\"@__point_0='POINT (0 1)' (DbType = Object)\n\nSELECT e.\"\"Id\"\", ST_DWithin(e.\"\"Point\"\", @__point_0, 1.0) AS \"\"IsWithinDistance\"\"\nFROM \"\"PointEntity\"\" AS e\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.SpatialQueryNpgsqlGeographyTest.<IsWithinDistance>d__9.MoveNext() : line 84\n            AssertSql(\n                @\"@__point_0='POINT (0 1)' (DbType = Object)\n\nSELECT e.\"\"Id\"\", ST_DWithin(e.\"\"Point\"\", @__point_0, 1.0) AS \"\"IsWithinDistance\"\"\nFROM \"\"PointEntity\"\" AS e\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \n            AssertSql(\n                @\"SELECT websearch_to_tsquery('a OR b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nSystem.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions) : \nAssertSql(\n@\"SELECT websearch_to_tsquery('english', 'a OR b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.WebSearchToTsQuery_With_Config_From_Variable() : \n            AssertSql(\n                @\"@__config_1='english'\n\nSELECT websearch_to_tsquery(CAST(@__config_1 AS regconfig), 'a OR b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\nNpgsql.EntityFrameworkCore.PostgreSQL.Query.FullTextSearchDbFunctionsNpgsqlTest.WebSearchToTsQuery_With_Config() : \n            AssertSql(\n                @\"SELECT websearch_to_tsquery(CAST('english' AS regconfig), 'a OR b')\nFROM \"\"Customers\"\" AS c\nLIMIT 1\");\n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8994140625,
          "content": "# Npgsql Entity Framework Core provider for PostgreSQL\n\n[![stable](https://img.shields.io/nuget/v/Npgsql.EntityFrameworkCore.PostgreSQL.svg?label=stable)](https://www.nuget.org/packages/Npgsql.EntityFrameworkCore.PostgreSQL/)\n[![next patch](https://img.shields.io/myget/npgsql/v/Npgsql.EntityFrameworkCore.PostgreSQL.svg?label=next%20patch)](https://www.myget.org/feed/npgsql/package/nuget/Npgsql.EntityFrameworkCore.PostgreSQL)\n[![daily builds (vnext)](https://img.shields.io/myget/npgsql-vnext/v/Npgsql.EntityFrameworkCore.PostgreSQL.svg?label=vNext)](https://www.myget.org/feed/npgsql-vnext/package/nuget/Npgsql.EntityFrameworkCore.PostgreSQL)\n[![build](https://github.com/npgsql/efcore.pg/actions/workflows/build.yml/badge.svg)](https://github.com/npgsql/efcore.pg/actions/workflows/build.yml)\n[![gitter](https://img.shields.io/badge/gitter-join%20chat-brightgreen.svg)](https://gitter.im/npgsql/npgsql)\n\nNpgsql.EntityFrameworkCore.PostgreSQL is the open source EF Core provider for PostgreSQL. It allows you to interact with PostgreSQL via the most widely-used .NET O/RM from Microsoft, and use familiar LINQ syntax to express queries. It's built on top of [Npgsql](https://github.com/npgsql/npgsql).\n\nThe provider looks and feels just like any other Entity Framework Core provider. Here's a quick sample to get you started:\n\n```csharp\nawait using var ctx = new BlogContext();\nawait ctx.Database.EnsureDeletedAsync();\nawait ctx.Database.EnsureCreatedAsync();\n\n// Insert a Blog\nctx.Blogs.Add(new() { Name = \"FooBlog\" });\nawait ctx.SaveChangesAsync();\n\n// Query all blogs who's name starts with F\nvar fBlogs = await ctx.Blogs.Where(b => b.Name.StartsWith(\"F\")).ToListAsync();\n\npublic class BlogContext : DbContext\n{\n    public DbSet<Blog> Blogs { get; set; }\n\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n        => optionsBuilder.UseNpgsql(@\"Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase\");\n}\n\npublic class Blog\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n```\n\nAside from providing general EF Core support for PostgreSQL, the provider also exposes some PostgreSQL-specific capabilities, allowing you to query JSON, array or range columns, as well as many other advanced features. For more information, see the [the Npgsql site](http://www.npgsql.org/efcore/index.html). For information about EF Core in general, see the [EF Core website](https://docs.microsoft.com/ef/core/).\n\n## Related packages\n\n* Spatial plugin to work with PostgreSQL PostGIS: [Npgsql.EntityFrameworkCore.PostgreSQL.NetTopologySuite](https://www.nuget.org/packages/Npgsql.EntityFrameworkCore.PostgreSQL.NetTopologySuite)\n* NodaTime plugin to use better date/time types with PostgreSQL: [Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime](https://www.nuget.org/packages/Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime)\n* The underlying Npgsql ADO.NET provider is [Npgsql](https://www.nuget.org/packages/Npgsql).\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1220703125,
          "content": "{\n  \"sdk\": {\n    \"version\": \"10.0.100-alpha.1.24620.13\",\n    \"rollForward\": \"latestMajor\",\n    \"allowPrerelease\": true\n  }\n}\n"
        },
        {
          "name": "postgresql.png",
          "type": "blob",
          "size": 9.4482421875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}