{
  "metadata": {
    "timestamp": 1736710913644,
    "page": 522,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shouldly/shouldly",
      "stars": 2059,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitbook.yaml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "root: ./documentation/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.498046875,
          "content": "*.suo\n*.cache\n*csproj.user\nsrc/*/bin\nsrc/*/obj\n*ReSharper*\noutput\n*.pidb\n*.userprefs\ntest-results\n*.gem\n*crunch*.xml\n*.nupkg\n*DotSettings*\n*DS_Store\n*ncrunch*\n*.orig\nShouldly.sln.ide/\npackages/\nnugets/\nShouldlyConvention.Tests/obj/\nShouldlyConvention.Tests/bin/\ndocs/_build/\n*.received.cs\n**/.vs\n*.user\n*.received.*\nsrc/TestResults/\nsrc/TestDiffTools/Main.approved.txt\ntools/*\n!tools/packages.config\nartifacts/\nsrc/*.Tests/report.xml\n*.lock.json\n*/.vscode\n.vscode\n.idea\n.idea.*\nUpgradeLog*.htm\nUpgradeLog*.XML\n"
        },
        {
          "name": "BREAKING CHANGES.txt",
          "type": "blob",
          "size": 1.69921875,
          "content": "v1.1 -> v2.0 Breaking Changes\n    # ShouldBeGreaterThan and ShouldBeLessThan are now constrained to IComparable<T>\n        If you are doing something like this `1.ShouldBeLessThan(3f)` then cast one of the types so they are the same type\n        i.e `((float)1).ShouldBeLessThan(3f)`\n    # Method Grouping on Should.Throw no longer works due to async overloads.\n        Change `Should.Throw(service.DoSomething)` to `Should.Throw(() => service.DoSomething)`\n    # ShouldBeTypeOf<T> renamed to ShouldBeAssignableTo<T>\n\nv1.0 -> v1.1 Breaking Changes\n    # Shouldly.Should.Throw<TException> changed to return thrown exception when failed, rather than exception message\n        FIX: Any code relying on Throw<T>() to return a string should update to call Message. Eg:\n        Should.Throw<SomeException>(() => throw new OtherException()).Message.ShouldBe(\"Threw other exception\"); \n   \n    # Rhino Mocks has been deprecated from Shouldly\n        Won't break build as such, but please bear in mind that plans are to remove this functionality from Shouldly\n        This also means the NuGet package has been updated to remove the explicit dependency on Rhino.Mocks.\n        \n    # The following classes have been marked internal. They shouldn't have been marked public:\n        Shouldly.ObjectHelpers\n            T As<T>()\n        Shouldly.ShouldlyCoreExtentions\n            void AssertAwesomely<T>()\n        Shouldly.TestEnvironment\n        Shouldly.ShouldlyMessage\n        Shouldly.ShouldlyMethodsAttribute\n        Shouldly.StringHelpers\n            string CommaDelimited<T>()\n            string DelimitWith<T>()\n            string Inspect()\n\n        If you're using these methods, please implement locally before updating to v1.1\n\n====EOF====\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.986328125,
          "content": "![Icon](https://raw.github.com/shouldly/shouldly/master/package_icon.png)\n\nContributing to Shouldly\n========================\n\n**Getting started with Git and GitHub**\n\n * [Setting up Git for Windows and connecting to GitHub](http://help.github.com/win-set-up-git/)\n * [Forking a GitHub repository](http://help.github.com/fork-a-repo/)\n * [The simple guide to GIT guide](http://rogerdudler.github.com/git-guide/)\n * [Open an issue](https://github.com/shouldly/shouldly/issues) if you encounter a bug or have a suggestion for improvements/features\n * [Submit documentation improvements](http://shouldly.readthedocs.org/en/latest) by submitting pull requests, the docs are in the `docs` folder in this repo\n\nOnce you're familiar with Git and GitHub, clone the repository and start contributing.\n\nIf you need inspiration for which issue to pick up have a look for the [Jump-In](https://github.com/shouldly/shouldly/labels/Jump-In) label on issues which are put on issues which are ready to be picked up by anyone. \n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.474609375,
          "content": "Redistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n \n    * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n    * Neither the names of the copyright holders nor the names of \n    contributors may be used to endorse or promote products derived from this\n    software without specific prior written permission.\n \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n[ http://www.opensource.org/licenses/bsd-license.php ]"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.986328125,
          "content": "![Shouldly Logo](https://raw.githubusercontent.com/shouldly/shouldly/master/assets/logo_350x84.png)  \n========\n\n[![CI](https://github.com/shouldly/shouldly/actions/workflows/CI.yml/badge.svg?branch=master)](https://github.com/shouldly/shouldly/actions/workflows/CI.yml)\n[![NuGet](https://img.shields.io/nuget/dt/shouldly.svg)](https://www.nuget.org/packages/Shouldly) \n[![NuGet](https://img.shields.io/nuget/vpre/shouldly.svg)](https://www.nuget.org/packages/Shouldly)\n[![Join the chat at https://gitter.im/shouldly/shouldly](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/shouldly/shouldly?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) \n\nShouldly is an assertion framework which focuses on giving great error messages when the assertion fails while being simple and terse.\n\nThis is the old *Assert* way: \n```cs\nAssert.That(contestant.Points, Is.EqualTo(1337));\n```\nFor your troubles, you get this message, when it fails:\n\n    Expected 1337 but was 0\n\nHow it **Should** be:\n```cs\ncontestant.Points.ShouldBe(1337);\n```\nWhich is just syntax, so far, but check out the message when it fails:\n\n    contestant.Points should be 1337 but was 0\n\nIt might be easy to underestimate how useful this is. Another example, side by side:\n```cs\nAssert.That(map.IndexOfValue(\"boo\"), Is.EqualTo(2));    // -> Expected 2 but was -1\nmap.IndexOfValue(\"boo\").ShouldBe(2);                    // -> map.IndexOfValue(\"boo\") should be 2 but was -1\n```\n**Shouldly** uses the code before the *ShouldBe* statement to report on errors, which makes diagnosing easier.\n\nRead more about Shouldly and its features at https://docs.shouldly.org/.\n\n## Installation\n\nShouldly can be [found here on NuGet](https://www.nuget.org/packages/Shouldly/) and can be installed by copying and pasting the following command into your Package Manager Console within Visual Studio (Tools > NuGet Package Manager > Package Manager Console).\n\n```bash\nInstall-Package Shouldly\n```\n\nAlternatively if you're using .NET Core then you can install Shouldly via the command line interface with the following command:\n\n```bash\ndotnet add package Shouldly\n```\n\n## Contributing\nContributions to Shouldly are very welcome. For guidance, please see [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Pre-requisites for running on build server\nShouldly uses the source code to make its error messages better. Hence, on the build server you will need to have the \"full\" pdb files available where the tests are being run. \n\nWhat is meant by \"full\" is that when you set up your \"release\" configuration in Visual Studio and you go to Project Properties > Build > Advanced > Debug, you should set it to \"full\" rather than \"pdb-only\". \n\n## Currently maintained by\n - [Jake Ginnivan](https://github.com/JakeGinnivan)\n - [Joseph Woodward](https://github.com/JosephWoodward)\n\nIf you are interested in helping out, jump on [Gitter](https://gitter.im/shouldly/shouldly) and have a chat.\n\n## Brought to you by\n - Dave Newman\n - Xerxes Battiwalla\n - Anthony Egerton\n - Peter van der Woude\n - Jake Ginnivan\n"
        },
        {
          "name": "Shouldly.sln",
          "type": "blob",
          "size": 2.93359375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.30128.36\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Solution Items\", \"Solution Items\", \"{70055B25-BE01-4932-84F1-A0BE47A93BFC}\"\n\tProjectSection(SolutionItems) = preProject\n\t\tsrc\\.editorconfig = src\\.editorconfig\n\t\tappveyor.yml = appveyor.yml\n\t\tsrc\\Directory.Build.props = src\\Directory.Build.props\n\t\tREADME.md = README.md\n\t\tglobal.json = global.json\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Shouldly\", \"src\\Shouldly\\Shouldly.csproj\", \"{9440E071-488A-49AC-96D7-E72BEBC38418}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Shouldly.Tests\", \"src\\Shouldly.Tests\\Shouldly.Tests.csproj\", \"{70F31200-AE2B-42A9-9C56-200EED6235BD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"DocumentationExamples\", \"src\\DocumentationExamples\\DocumentationExamples.csproj\", \"{D5990C0D-729B-4A88-9783-36F6D1898E38}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"DeterministicTests\", \"src\\DeterministicTests\\DeterministicTests.csproj\", \"{7EDC01F8-D021-4EF4-82A1-F18F22433F43}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9440E071-488A-49AC-96D7-E72BEBC38418}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9440E071-488A-49AC-96D7-E72BEBC38418}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9440E071-488A-49AC-96D7-E72BEBC38418}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9440E071-488A-49AC-96D7-E72BEBC38418}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{70F31200-AE2B-42A9-9C56-200EED6235BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{70F31200-AE2B-42A9-9C56-200EED6235BD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{70F31200-AE2B-42A9-9C56-200EED6235BD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{70F31200-AE2B-42A9-9C56-200EED6235BD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D5990C0D-729B-4A88-9783-36F6D1898E38}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D5990C0D-729B-4A88-9783-36F6D1898E38}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D5990C0D-729B-4A88-9783-36F6D1898E38}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D5990C0D-729B-4A88-9783-36F6D1898E38}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7EDC01F8-D021-4EF4-82A1-F18F22433F43}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7EDC01F8-D021-4EF4-82A1-F18F22433F43}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7EDC01F8-D021-4EF4-82A1-F18F22433F43}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7EDC01F8-D021-4EF4-82A1-F18F22433F43}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {CD9358BB-31E8-41B1-AE9F-FE3678785A14}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 2.2255859375,
          "content": "#!/usr/bin/env pwsh\n\n$ErrorActionPreference = 'Stop'\n\n# Options\n$configuration = 'Release'\n$artifactsDir = Join-Path (Resolve-Path .) 'artifacts'\n$packagesDir = Join-Path $artifactsDir 'Packages'\n$testResultsDir = Join-Path $artifactsDir 'Test results'\n$logsDir = Join-Path $artifactsDir 'Logs'\n\n# Ensure directories exist\nNew-Item -ItemType Directory -Force -Path $artifactsDir, $packagesDir, $testResultsDir, $logsDir | Out-Null\n\n$dotnetArgs = @(\n    '--configuration', $configuration\n    '/p:CI=' + ($env:CI -or $env:TF_BUILD)\n)\n\n# Build\nWrite-Host \"Building...\" -ForegroundColor Cyan\ndotnet build @dotnetArgs /bl:\"$logsDir/build.binlog\"\nif ($LASTEXITCODE -ne 0) { \n    Write-Error \"Build failed with exit code $LASTEXITCODE\"\n    exit 1 \n}\n\n# Pack\nWrite-Host \"Packing...\" -ForegroundColor Cyan\nif (Test-Path $packagesDir) {\n    Remove-Item -Recurse -Force $packagesDir\n}\ndotnet pack src\\Shouldly --no-build --output $packagesDir @dotnetArgs /bl:\"$logsDir/pack.binlog\"\nif ($LASTEXITCODE -ne 0) { \n    Write-Error \"Pack failed with exit code $LASTEXITCODE\"\n    exit 1 \n}\n\n# Test\nWrite-Host \"Testing...\" -ForegroundColor Cyan\nif (Test-Path $testResultsDir) {\n    Remove-Item -Recurse -Force $testResultsDir\n}\n\n# Define test projects\n$testProjects = @(\"src\\Shouldly.Tests\\Shouldly.Tests.csproj\")\n\n# Add DocumentationExamples project only on Windows\nif ($IsWindows) {\n    $testProjects += \"src\\DocumentationExamples\\DocumentationExamples.csproj\"\n    Write-Host \"Running on Windows. Including DocumentationExamples project.\" -ForegroundColor Cyan\n} else {\n    Write-Host \"Not running on Windows. Skipping DocumentationExamples project.\" -ForegroundColor Yellow\n}\n\n# Run tests for each project\nforeach ($project in $testProjects) {\n    Write-Host \"Testing $project...\" -ForegroundColor Cyan\n    dotnet test $project --no-build @dotnetArgs --logger trx --results-directory $testResultsDir /bl:\"$logsDir/test-$(Split-Path $project -Leaf).binlog\" --logger \"GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true\" -- RunConfiguration.CollectSourceInformation=true\n    if ($LASTEXITCODE -ne 0) { \n        Write-Error \"Tests for $project failed with exit code $LASTEXITCODE\"\n        exit 1 \n    }\n}\n\nWrite-Host \"Build completed successfully!\" -ForegroundColor Green"
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.126953125,
          "content": "﻿{\n  \"sdk\": {\n    \"version\": \"9.0.100-preview.7.24407.12\",\n    \"allowPrerelease\": true,\n    \"rollForward\": \"latestFeature\"\n  }\n}"
        },
        {
          "name": "package_icon.png",
          "type": "blob",
          "size": 2.3408203125,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}