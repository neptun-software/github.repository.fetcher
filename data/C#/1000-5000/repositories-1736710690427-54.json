{
  "metadata": {
    "timestamp": 1736710690427,
    "page": 54,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tModLoader/tModLoader",
      "stars": 4281,
      "defaultBranch": "1.4.4",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 9.6689453125,
          "content": "# Remove the line below if you want to inherit .editorconfig settings from higher directories\nroot = true\n\n# JSON files\n[*.json]\n\tindent_style = tab\n\t# Unfortunately, anything other than tab_width and indent_size 1 causes VS to become whimsical about indenting.\n\tindent_size = 1\n\ttab_width = 1\n\n# C# files\n[*.cs]\n\n# Accessibility modifiers required - This shows up on partials even if they have accessibility defined in one of the main parts.\ndotnet_diagnostic.IDE0040.severity = none\n\n# A bunch of the following diagnostics are useless for us, as we aren't the authors of this game.\n\n# Missing XML comment for publicly visible type or member\ndotnet_diagnostic.CS1591.severity = none \n# Non-constant fields should not be visible\ndotnet_diagnostic.CA2211.severity = none\n\n#### Core EditorConfig Options ####\n\n# Indentation and spacing\n\tindent_size = 4\n\tindent_style = tab\n\ttab_width = 4\n\n# New line preferences\n\tend_of_line = crlf\n\tinsert_final_newline = false\n\ttrim_trailing_whitespace = true\n\n#### .NET Coding Conventions ####\n\n# File-scoped namespaces\n\tcsharp_style_namespace_declarations = file_scoped:warning\n\n# Organize usings\n\tdotnet_separate_import_directive_groups = false\n\tdotnet_sort_system_directives_first = true\n\n# this. and Me. preferences\n\tdotnet_style_qualification_for_event = false:suggestion\n\tdotnet_style_qualification_for_field = false:suggestion\n\tdotnet_style_qualification_for_method = false:suggestion\n\tdotnet_style_qualification_for_property = false:suggestion\n\n# Language keywords vs BCL types preferences\n\tdotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\n\t#Prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them\n\tdotnet_style_predefined_type_for_member_access = true:suggestion\n\n# Parentheses preferences\n\tdotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent\n\tdotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent\n\tdotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent\n\tdotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent\n\n# Modifier preferences\n\tdotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion\n\n# Expression-level preferences\n\tdotnet_style_coalesce_expression = true:suggestion\n\tdotnet_style_collection_initializer = true:suggestion\n\tdotnet_style_explicit_tuple_names = true:suggestion\n\tdotnet_style_null_propagation = true:suggestion\n\tdotnet_style_object_initializer = true:suggestion\n\tdotnet_style_prefer_auto_properties = true:silent\n\tdotnet_style_prefer_compound_assignment = true:suggestion\n\tdotnet_style_prefer_conditional_expression_over_assignment = true:silent\n\tdotnet_style_prefer_conditional_expression_over_return = true:silent\n\tdotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\n\tdotnet_style_prefer_inferred_tuple_names = true:suggestion\n\tdotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\n\tdotnet_style_prefer_simplified_interpolation = true:suggestion\n\n# Field preferences\n\tdotnet_style_readonly_field = true:suggestion\n\n# Parameter preferences\n\tdotnet_code_quality_unused_parameters = all:suggestion\n\n#### C# Coding Conventions ####\n\n# var preferences\n\tcsharp_style_var_elsewhere = false\n\tcsharp_style_var_for_built_in_types = false\n\tcsharp_style_var_when_type_is_apparent = true\n\t\n\tdotnet_diagnostic.IDE0007.severity = suggestion # Use var instead of explicit type\n\tdotnet_diagnostic.IDE0008.severity = none # Use explicit type instead of var\n\n# Expression-bodied members\n\tcsharp_style_expression_bodied_lambdas = true:silent\n\tcsharp_style_expression_bodied_local_functions = false:silent\n\tcsharp_style_expression_bodied_operators = false:silent\n\t# Prefer block bodies for constructors\n\tcsharp_style_expression_bodied_constructors = false:suggestion\n\t# Prefer expression-bodied members for methods, properties, indexers and accessors when they will be a single line\n\tcsharp_style_expression_bodied_methods = when_on_single_line:silent\n\tcsharp_style_expression_bodied_properties = when_on_single_line:suggestion\n\tcsharp_style_expression_bodied_indexers = when_on_single_line:suggestion\n\tcsharp_style_expression_bodied_accessors = when_on_single_line:suggestion\n\n# Pattern matching preferences\n\tcsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n\tcsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\n\tcsharp_style_prefer_switch_expression = true:suggestion\n\n# Null-checking preferences\n\tcsharp_style_conditional_delegate_call = true:suggestion\n\n# Modifier preferences\n\tcsharp_prefer_static_local_function = true:suggestion\n\tcsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent\n\n# Code-block preferences\n\tcsharp_prefer_braces = true:silent\n\tcsharp_prefer_simple_using_statement = true:suggestion\n\n# Expression-level preferences\n\tcsharp_prefer_simple_default_expression = true:suggestion\n\tcsharp_style_deconstructed_variable_declaration = true:suggestion\n\tcsharp_style_pattern_local_over_anonymous_function = true:suggestion\n\tcsharp_style_prefer_index_operator = true:suggestion\n\tcsharp_style_prefer_range_operator = true:suggestion\n\tcsharp_style_throw_expression = true:suggestion\n\tcsharp_style_unused_value_assignment_preference = discard_variable:suggestion\n\tcsharp_style_unused_value_expression_statement_preference = discard_variable:silent\n\t# Prefer out variables to be declared inline in the argument list of a method call when possible\n\tcsharp_style_inlined_variable_declaration = true:suggestion\n\n# 'using' directive preferences\n\tcsharp_using_directive_placement = outside_namespace:silent\n\n#### C# Formatting Rules ####\n\n# New line preferences\n\tcsharp_new_line_before_catch = true\n\tcsharp_new_line_before_else = true\n\tcsharp_new_line_before_finally = true\n\tcsharp_new_line_before_members_in_anonymous_types = true\n\tcsharp_new_line_before_members_in_object_initializers = true\n\t# Common K&R - require braces to be on a new line for types and methods, but not for anything else.\n\tcsharp_new_line_before_open_brace = types, methods\n\tcsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\n\tcsharp_indent_block_contents = true\n\tcsharp_indent_braces = false\n\tcsharp_indent_case_contents = true\n\tcsharp_indent_case_contents_when_block = false\n\tcsharp_indent_labels = one_less_than_current\n\tcsharp_indent_switch_labels = true\n\n# Space preferences\n\tcsharp_space_after_cast = false\n\tcsharp_space_after_colon_in_inheritance_clause = true\n\tcsharp_space_after_comma = true\n\tcsharp_space_after_dot = false\n\tcsharp_space_after_keywords_in_control_flow_statements = true\n\tcsharp_space_after_semicolon_in_for_statement = true\n\tcsharp_space_around_binary_operators = before_and_after\n\tcsharp_space_around_declaration_statements = false\n\tcsharp_space_before_colon_in_inheritance_clause = true\n\tcsharp_space_before_comma = false\n\tcsharp_space_before_dot = false\n\tcsharp_space_before_open_square_brackets = false\n\tcsharp_space_before_semicolon_in_for_statement = false\n\tcsharp_space_between_empty_square_brackets = false\n\tcsharp_space_between_method_call_empty_parameter_list_parentheses = false\n\tcsharp_space_between_method_call_name_and_opening_parenthesis = false\n\tcsharp_space_between_method_call_parameter_list_parentheses = false\n\tcsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\n\tcsharp_space_between_method_declaration_name_and_open_parenthesis = false\n\tcsharp_space_between_method_declaration_parameter_list_parentheses = false\n\tcsharp_space_between_parentheses = false\n\tcsharp_space_between_square_brackets = false\n\n# Wrapping preferences\n\tcsharp_preserve_single_line_blocks = true\n\tcsharp_preserve_single_line_statements = false\n\n#### Naming styles ####\n\n# Naming rules\n\n\tdotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion\n\tdotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface\n\tdotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i\n\t\n\tdotnet_naming_rule.types_should_be_pascal_case.severity = suggestion\n\tdotnet_naming_rule.types_should_be_pascal_case.symbols = types\n\tdotnet_naming_rule.types_should_be_pascal_case.style = pascal_case\n\t\n\tdotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion\n\tdotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members\n\tdotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case\n\n# Symbol specifications\n\n\tdotnet_naming_symbols.interface.applicable_kinds = interface\n\tdotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\n\tdotnet_naming_symbols.interface.required_modifiers =\n\t\n\tdotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum\n\tdotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\n\tdotnet_naming_symbols.types.required_modifiers =\n\t\n\tdotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method\n\tdotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected\n\tdotnet_naming_symbols.non_field_members.required_modifiers =\n\n# Naming styles\n\n\tdotnet_naming_style.pascal_case.required_prefix =\n\tdotnet_naming_style.pascal_case.required_suffix =\n\tdotnet_naming_style.pascal_case.word_separator =\n\tdotnet_naming_style.pascal_case.capitalization = pascal_case\n\t\n\tdotnet_naming_style.begins_with_i.required_prefix = I\n\tdotnet_naming_style.begins_with_i.required_suffix =\n\tdotnet_naming_style.begins_with_i.word_separator =\n\tdotnet_naming_style.begins_with_i.capitalization = pascal_case"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1494140625,
          "content": "*.sh text eol=lf\nsolutions/ReleaseExtras/LegacyFrameWork/tModLoader-mono text eol=lf\nsolutions/ReleaseExtras/LegacyFrameWork/tModLoader-kick text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.75,
          "content": "/src\n/setup/logs\n**/bin/\n**/obj/\n**/packages/\n.vs\n*.user\n*.suo\n*.cache\n*.force\ninstaller2/*.class\ninstaller2/*.jar\nsolutions/ReleaseExtras/JourneysEndCompatibilityContent/Images\nsolutions/ReleaseExtras/LinuxFiles\nsolutions/ReleaseExtras/LinuxMacSharedFiles\nsolutions/ReleaseExtras/MacFiles\nsolutions/ReleaseExtras/WindowsFiles\nsolutions/documentation/html\nsolutions/documentation/*.tmp\nsolutions/**/*.zip\nsolutions/**/*.tar.gz\n**/packages/\n**/.vs/\n**/.idea/\n/test/Terraria.xml\n/test/tModLoader.xml\n/test/Test Local/Players\n/test/Test Local/Worlds\n/test/Test Local/Logs\n/test/Test Local/*.json\n/test/Test Local/Mods\n/test/Test Local/Mod Configs\n/ExampleMod/Fonts/ExampleFont.xnb\n/14*\n/artifacts\nsolutions/tModLoader v*\nsolutions/Release/\n**/msbuild.binlog\n/steam_build\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1904296875,
          "content": "[submodule \"setup/PatchReviewer\"]\n\tpath = setup/PatchReviewer\n\turl = https://github.com/Chicken-Bones/PatchReviewer.git\n[submodule \"FNA\"]\n\tpath = FNA\n\turl = https://github.com/tModLoader/FNA.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8876953125,
          "content": "# This will not run on Travis' 'new' container-based infrastructure\nsudo: required\n\nlanguage: csharp\n\nnotifications:\n  email: false\n\n# Blacklist\nbranches:\n  only:\n    - master\n\n# Environment variables\nenv:\n  global:\n    - GH_REPO_NAME: tModLoader\n    - DOXYFILE: $TRAVIS_BUILD_DIR/solutions/documentation/Doxyfile\n    - GH_REPO_REF: github.com/tModLoader/tModLoader.git\n\n# Install dependencies\naddons:\n  apt:\n    packages:\n      - doxygen\n      - doxygen-doc\n      - graphviz\n\n#before_install:\n#    - sudo apt-add-repository -y ppa:mikepurvis/docs\n#    - sudo apt-get update\n#    - sudo apt-get install doxygen\n      \n# Build your code e.g. by calling make\nscript:\n  - pwd\n  - doxygen -v\n  - ls\n\n# Generate and deploy documentation\nafter_success:\n  - cd $TRAVIS_BUILD_DIR\n  - chmod +x solutions/documentation/generateAndPublishDocumentation.sh\n  - ./solutions/documentation/generateAndPublishDocumentation.sh\n"
        },
        {
          "name": "ExampleMod",
          "type": "tree",
          "content": null
        },
        {
          "name": "FNA",
          "type": "commit",
          "content": null
        },
        {
          "name": "FailedPatches_1.4.2.txt",
          "type": "blob",
          "size": 2.1748046875,
          "content": "Projectile.cs:\n@@ -11780,17 +11929,21 @@\n \t\t\t\t\toverrideHeight = 4;\n \t\t\t\t}\n \n+\t\t\t\tif (!ProjectileLoader.TileCollideStyle(this, ref overrideWidth, ref overrideHeight, ref flag6)) {\n+\t\t\t\t}\n-\t\t\t\tif (((type != 440 && type != 449 && type != 606) || ai[1] != 1f) && (type != 466 || localAI[1] != 1f) && (type != 580 || !(localAI[1] > 0f)) && (type != 640 || !(localAI[1] > 0f))) {\n+\t\t\t\telse if ((type != 440 && type != 449 && type != 606 || ai[1] != 1f) && (type != 466 || localAI[1] != 1f) && (type != 580 || localAI[1] <= 0f) && (type != 640 || localAI[1] <= 0f)) {\n \t\t\t\t\tif (aiStyle == 10) {\n \t\t\t\t\t\tif (type >= 736 && type <= 738)\n \t\t\t\t\t\t\tbase.velocity = Collision.TileCollision(base.position, base.velocity, base.width, base.height, flag6, flag6);\n \t\t\t\t\t\telse if (type == 42 || type == 65 || type == 68 || type == 354 || (type == 31 && ai[0] == 2f))\n+\t\t\t\t\t\t\t//patch file: flag6\n \t\t\t\t\t\t\tbase.velocity = Collision.TileCollision(base.position, base.velocity, base.width, base.height, flag6, flag6);\n \t\t\t\t\t\telse\n \t\t\t\t\t\t\tbase.velocity = Collision.TileCollision(base.position, base.velocity, base.width, base.height, flag6, flag6);\n \t\t\t\t\t}\n \t\t\t\t\telse {\n \t\t\t\t\t\tVector2 vector2 = base.position;\n+\t\t\t\t\t\t//patch file: overrideWidth, overrideHeight\n \t\t\t\t\t\tint num = (overrideWidth != -1) ? overrideWidth : base.width;\n \t\t\t\t\t\tint num2 = (overrideHeight != -1) ? overrideHeight : base.height;\n \t\t\t\t\t\tif (overrideHeight != -1 || overrideWidth != -1)\n\t\t\t\t\t\t\n//WorldGen.cs:\n\n@@ -2370,10 +2397,21 @@\n \n \t\tpublic static void SaveAndQuit(Action callback = null) {\n \t\t\tSoundEngine.PlaySound(11);\n+\t\t\tSystemHooks.PreSaveAndQuit();\n \t\t\tThreadPool.QueueUserWorkItem(SaveAndQuitCallBack, callback);\n \t\t}\n \n \t\tpublic static void playWorldCallBack(object threadContext) {\n\n+\t\t\ttry {\n+\t\t\t\tLogging.Terraria.InfoFormat(\"Loading World: {0}, IsCloud={1}\", Main.ActiveWorldFileData.Name, Main.ActiveWorldFileData.IsCloudSave);\n+\t\t\t\tdo_playWorldCallBack(threadContext);\n+\t\t\t}\n+\t\t\tcatch (Exception e) {\n+\t\t\t\tLogging.Terraria.Error(Language.GetTextValue(\"tModLoader.PlayerLoadWorldFail\"), e);\n+\t\t\t}\n+\t\t}\n+\n+\t\tpublic static void do_playWorldCallBack(object threadContext) {\n \t\t\tif (Main.rand == null)\n \t\t\t\tMain.rand = new UnifiedRandom((int)DateTime.Now.Ticks);\n\n\n\n "
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "Copyright 2019 tModLoader Team\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "MS-EULA.rtf",
          "type": "blob",
          "size": 13.2626953125,
          "content": "{\\rtf1\\ansi\\ansicpg1252\\deff0\\nouicompat\\deflang1033\\deflangfe1033{\\fonttbl{\\f0\\fswiss\\fprq2\\fcharset0 Tahoma;}{\\f1\\froman\\fprq2\\fcharset0 Times New Roman;}{\\f2\\fswiss\\fprq2\\fcharset0 Calibri;}{\\f3\\fnil\\fcharset2 Symbol;}}\r\n{\\colortbl ;\\red31\\green73\\blue125;\\red0\\green0\\blue255;}\r\n{\\*\\listtable \r\n{\\list\\listhybrid\r\n{\\listlevel\\levelnfc0\\leveljc0\\levelstartat1{\\leveltext\\'02\\'00.;}{\\levelnumbers\\'01;}\\jclisttab\\tx360}\r\n{\\listlevel\\levelnfc4\\leveljc0\\levelstartat1{\\leveltext\\'02\\'01.;}{\\levelnumbers\\'01;}\\jclisttab\\tx363}\r\n{\\listlevel\\levelnfc2\\leveljc0\\levelstartat1{\\leveltext\\'02\\'02.;}{\\levelnumbers\\'01;}\\jclisttab\\tx720}\\listid1 }\r\n{\\list\\listhybrid\r\n{\\listlevel\\levelnfc0\\leveljc0\\levelstartat1{\\leveltext\\'02\\'00.;}{\\levelnumbers\\'01;}\\jclisttab\\tx363}\r\n{\\listlevel\\levelnfc4\\leveljc0\\levelstartat1{\\leveltext\\'02\\'01.;}{\\levelnumbers\\'01;}\\jclisttab\\tx363}\\listid2 }}\r\n{\\*\\listoverridetable{\\listoverride\\listid1\\listoverridecount0\\ls1}{\\listoverride\\listid2\\listoverridecount0\\ls2}}\r\n{\\*\\generator Riched20 6.3.9600}{\\*\\mmathPr\\mnaryLim0\\mdispDef1\\mwrapIndent1440 }\\viewkind4\\uc1 \r\n\\pard\\nowidctlpar\\sb120\\sa120\\b\\f0\\fs24 MICROSOFT SOFTWARE LICENSE TERMS\\par\r\n\r\n\\pard\\brdrb\\brdrs\\brdrw10\\brsp20 \\nowidctlpar\\sb120\\sa120 MICROSOFT .NET LIBRARY \\par\r\n\r\n\\pard\\nowidctlpar\\sb120\\sa120\\fs19 These license terms are an agreement between Microsoft Corporation (or based on where you live, one of its affiliates) and you. Please read them. They apply to the software named above, which includes the media on which you received it, if any. The terms also apply to any Microsoft\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent363{\\pntxtb\\'B7}}\\nowidctlpar\\fi-363\\li720\\sb120\\sa120\\b0 updates,\\par\r\n{\\pntext\\f3\\'B7\\tab}supplements,\\par\r\n{\\pntext\\f3\\'B7\\tab}Internet-based services, and\\par\r\n{\\pntext\\f3\\'B7\\tab}support services\\par\r\n\r\n\\pard\\nowidctlpar\\sb120\\sa120\\b for this software, unless other terms accompany those items. If so, those terms apply.\\par\r\nBY USING THE SOFTWARE, YOU ACCEPT THESE TERMS. IF YOU DO NOT ACCEPT THEM, DO NOT USE THE SOFTWARE.\\par\r\n\r\n\\pard\\brdrt\\brdrs\\brdrw10\\brsp20 \\nowidctlpar\\sb120\\sa120 IF YOU COMPLY WITH THESE LICENSE TERMS, YOU HAVE THE PERPETUAL RIGHTS BELOW.\\par\r\n\r\n\\pard \r\n{\\listtext\\f0 1.\\tab}\\jclisttab\\tx360\\ls1\\nowidctlpar\\fi-357\\li357\\sb120\\sa120 INSTALLATION AND USE RIGHTS. \\par\r\n\r\n\\pard \r\n{\\listtext\\f0 a.\\tab}\\jclisttab\\tx363\\ls1\\ilvl1\\nowidctlpar\\fi-363\\li720\\sb120\\sa120 Installation and Use.\\b0\\fs20  You may install and use any number of copies of the software to design, develop and test your programs.\\par\r\n{\\listtext\\f0 b.\\tab}\\b\\fs19 Third Party Programs.\\b0\\fs20  The software may include third party programs that Microsoft, not the third party, licenses to you under this agreement. Notices, if any, for the third party program are included for your information only.\\b\\fs19\\par\r\n\r\n\\pard \r\n{\\listtext\\f0 2.\\tab}\\jclisttab\\tx360\\ls1\\nowidctlpar\\fi-357\\li357\\sb120\\sa120\\fs20 ADDITIONAL LICENSING REQUIREMENTS AND/OR USE RIGHTS.\\par\r\n\r\n\\pard \r\n{\\listtext\\f0 a.\\tab}\\jclisttab\\tx363\\ls1\\ilvl1\\nowidctlpar\\fi-363\\li720\\sb120\\sa120 DISTRIBUTABLE CODE.\\~ \\b0 The software is comprised of Distributable Code. \\f1\\ldblquote\\f0 Distributable Code\\f1\\rdblquote\\f0  is code that you are permitted to distribute in programs you develop if you comply with the terms below.\\b\\par\r\n\r\n\\pard \r\n{\\listtext\\f0 i.\\tab}\\jclisttab\\tx720\\ls1\\ilvl2\\nowidctlpar\\fi-357\\li1077\\sb120\\sa120\\tx1077 Right to Use and Distribute. \\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent360{\\pntxtb\\'B7}}\\nowidctlpar\\fi-357\\li1434\\sb120\\sa120\\b0 You may copy and distribute the object code form of the software.\\par\r\n{\\pntext\\f3\\'B7\\tab}Third Party Distribution. You may permit distributors of your programs to copy and distribute the Distributable Code as part of those programs.\\par\r\n\r\n\\pard\\nowidctlpar\\fi-357\\li1077\\sb120\\sa120\\tx1077\\b ii.\\tab Distribution Requirements.\\b0  \\b For any Distributable Code you distribute, you must\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent360{\\pntxtb\\'B7}}\\nowidctlpar\\fi-357\\li1434\\sb120\\sa120\\b0 add significant primary functionality to it in your programs;\\par\r\n{\\pntext\\f3\\'B7\\tab}require distributors and external end users to agree to terms that protect it at least as much as this agreement;\\par\r\n{\\pntext\\f3\\'B7\\tab}display your valid copyright notice on your programs; and\\par\r\n{\\pntext\\f3\\'B7\\tab}indemnify, defend, and hold harmless Microsoft from any claims, including attorneys\\rquote  fees, related to the distribution or use of your programs.\\par\r\n\r\n\\pard\\nowidctlpar\\fi-357\\li1077\\sb120\\sa120\\tx1077\\b iii.\\tab Distribution Restrictions.\\b0  \\b You may not\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent360{\\pntxtb\\'B7}}\\nowidctlpar\\fi-357\\li1434\\sb120\\sa120\\b0 alter any copyright, trademark or patent notice in the Distributable Code;\\par\r\n{\\pntext\\f3\\'B7\\tab}use Microsoft\\rquote s trademarks in your programs\\rquote  names or in a way that suggests your programs come from or are endorsed by Microsoft;\\par\r\n{\\pntext\\f3\\'B7\\tab}include Distributable Code in malicious, deceptive or unlawful programs; or\\par\r\n{\\pntext\\f3\\'B7\\tab}modify or distribute the source code of any Distributable Code so that any part of it becomes subject to an Excluded License. An Excluded License is one that requires, as a condition of use, modification or distribution, that\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent360{\\pntxtb\\'B7}}\\nowidctlpar\\fi-358\\li1792\\sb120\\sa120 the code be disclosed or distributed in source code form; or\\cf1\\f2\\par\r\n{\\pntext\\f3\\'B7\\tab}\\cf0\\f0 others have the right to modify it.\\cf1\\f2\\par\r\n\r\n\\pard\\nowidctlpar\\fi-357\\li357\\sb120\\sa120\\cf0\\b\\f0 3.\\tab\\fs19 SCOPE OF LICENSE. \\b0 The software is licensed, not sold. This agreement only gives you some rights to use the software. Microsoft reserves all other rights. Unless applicable law gives you more rights despite this limitation, you may use the software only as expressly permitted in this agreement. In doing so, you must comply with any technical limitations in the software that only allow you to use it in certain ways. You may not\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent363{\\pntxtb\\'B7}}\\nowidctlpar\\fi-363\\li720\\sb120\\sa120 work around any technical limitations in the software;\\par\r\n{\\pntext\\f3\\'B7\\tab}reverse engineer, decompile or disassemble the software, except and only to the extent that applicable law expressly permits, despite this limitation;\\par\r\n{\\pntext\\f3\\'B7\\tab}publish the software for others to copy;\\par\r\n{\\pntext\\f3\\'B7\\tab}rent, lease or lend the software;\\par\r\n{\\pntext\\f3\\'B7\\tab}transfer the software or this agreement to any third party; or\\par\r\n{\\pntext\\f3\\'B7\\tab}use the software for commercial software hosting services.\\par\r\n\r\n\\pard\\nowidctlpar\\fi-357\\li357\\sb120\\sa120\\b\\fs20 4.\\tab\\fs19 BACKUP COPY. \\b0 You may make one backup copy of the software. You may use it only to reinstall the software.\\par\r\n\\b\\fs20 5.\\tab\\fs19 DOCUMENTATION. \\b0 Any person that has valid access to your computer or internal network may copy and use the documentation for your internal, reference purposes.\\par\r\n\\b\\fs20 6.\\tab\\fs19 EXPORT RESTRICTIONS. \\b0 The software is subject to United States export laws and regulations. You must comply with all domestic and international export laws and regulations that apply to the software. These laws include restrictions on destinations, end users and end use. For additional information, see {\\fs20{\\field{\\*\\fldinst{HYPERLINK www.microsoft.com/exporting }}{\\fldrslt{www.microsoft.com/exporting\\ul0\\cf0}}}}\\f0\\fs19 .\\fs20\\par\r\n\\b 7.\\tab\\fs19 SUPPORT SERVICES. \\b0 Because this software is \\ldblquote as is,\\rdblquote  we may not provide support services for it.\\par\r\n\\b\\fs20 8.\\tab\\fs19 ENTIRE AGREEMENT. \\b0 This agreement, and the terms for supplements, updates, Internet-based services and support services that you use, are the entire agreement for the software and support services.\\par\r\n\\b\\fs20 9.\\tab\\fs19 APPLICABLE LAW.\\par\r\n\r\n\\pard \r\n{\\listtext\\f0 a.\\tab}\\jclisttab\\tx363\\ls2\\ilvl1\\nowidctlpar\\fi-363\\li720\\sb120\\sa120 United States. \\b0 If you acquired the software in the United States, Washington state law governs the interpretation of this agreement and applies to claims for breach of it, regardless of conflict of laws principles. The laws of the state where you live govern all other claims, including claims under state consumer protection laws, unfair competition laws, and in tort.\\par\r\n{\\listtext\\f0 b.\\tab}\\b Outside the United States. If you acquired the software in any other country, the laws of that country apply.\\par\r\n\r\n\\pard \r\n{\\pntext\\f0 1.\\tab}{\\*\\pn\\pnlvlbody\\pnf0\\pnindent360\\pnstart1\\pndec{\\pntxta.}}\r\n\\nowidctlpar\\fi-357\\li357\\sb120\\sa120 LEGAL EFFECT. \\b0 This agreement describes certain legal rights. You may have other rights under the laws of your country. You may also have rights with respect to the party from whom you acquired the software. This agreement does not change your rights under the laws of your country if the laws of your country do not permit it to do so.\\par\r\n{\\pntext\\f0 2.\\tab}\\b DISCLAIMER OF WARRANTY. THE SOFTWARE IS LICENSED \\ldblquote AS-IS.\\rdblquote  YOU BEAR THE RISK OF USING IT. MICROSOFT GIVES NO EXPRESS WARRANTIES, GUARANTEES OR CONDITIONS. YOU MAY HAVE ADDITIONAL CONSUMER RIGHTS OR STATUTORY GUARANTEES UNDER YOUR LOCAL LAWS WHICH THIS AGREEMENT CANNOT CHANGE. TO THE EXTENT PERMITTED UNDER YOUR LOCAL LAWS, MICROSOFT EXCLUDES THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.\\par\r\n\r\n\\pard\\nowidctlpar\\li357\\sb120\\sa120 FOR AUSTRALIA \\endash  YOU HAVE STATUTORY GUARANTEES UNDER THE AUSTRALIAN CONSUMER LAW AND NOTHING IN THESE TERMS IS INTENDED TO AFFECT THOSE RIGHTS.\\par\r\n\r\n\\pard\\nowidctlpar\\fi-357\\li357\\sb120\\sa120\\fs20 12.\\tab\\fs19 LIMITATION ON AND EXCLUSION OF REMEDIES AND DAMAGES. YOU CAN RECOVER FROM MICROSOFT AND ITS SUPPLIERS ONLY DIRECT DAMAGES UP TO U.S. $5.00. YOU CANNOT RECOVER ANY OTHER DAMAGES, INCLUDING CONSEQUENTIAL, LOST PROFITS, SPECIAL, INDIRECT OR INCIDENTAL DAMAGES.\\par\r\n\r\n\\pard\\nowidctlpar\\li357\\sb120\\sa120\\b0 This limitation applies to\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent363{\\pntxtb\\'B7}}\\nowidctlpar\\fi-363\\li720\\sb120\\sa120 anything related to the software, services, content (including code) on third party Internet sites, or third party programs; and\\par\r\n{\\pntext\\f3\\'B7\\tab}claims for breach of contract, breach of warranty, guarantee or condition, strict liability, negligence, or other tort to the extent permitted by applicable law.\\par\r\n\r\n\\pard\\nowidctlpar\\sb120\\sa120 It also applies even if Microsoft knew or should have known about the possibility of the damages. The above limitation or exclusion may not apply to you because your country may not allow the exclusion or limitation of incidental, consequential or other damages.\\par\r\n\\lang9 Please note: As this software is distributed in Quebec, Canada, some of the clauses in this agreement are provided below in French.\\par\r\nRemarque : Ce logiciel \\'e9tant distribu\\'e9 au Qu\\'e9bec, Canada, certaines des clauses dans ce contrat sont fournies ci-dessous en fran\\'e7ais.\\par\r\n\\b\\lang1033 EXON\\'c9RATION DE GARANTIE. \\b0 Le logiciel vis\\'e9 par une licence est offert \\'ab tel quel \\'bb. Toute utilisation de ce logiciel est \\'e0 votre seule risque et p\\'e9ril. Microsoft n\\rquote accorde aucune autre garantie expresse. Vous pouvez b\\'e9n\\'e9ficier de droits additionnels en vertu du droit local sur la protection des consommateurs, que ce contrat ne peut modifier. La ou elles sont permises par le droit locale, les garanties implicites de qualit\\'e9 marchande, d\\rquote ad\\'e9quation \\'e0 un usage particulier et d\\rquote absence de contrefa\\'e7on sont exclues.\\par\r\n\\b LIMITATION DES DOMMAGES-INT\\'c9R\\'caTS ET EXCLUSION DE RESPONSABILIT\\'c9 POUR LES DOMMAGES. \\b0 Vous pouvez obtenir de Microsoft et de ses fournisseurs une indemnisation en cas de dommages directs uniquement \\'e0 hauteur de 5,00 $ US. Vous ne pouvez pr\\'e9tendre \\'e0 aucune indemnisation pour les autres dommages, y compris les dommages sp\\'e9ciaux, indirects ou accessoires et pertes de b\\'e9n\\'e9fices.\\par\r\n\\lang9 Cette limitation concerne :\\par\r\n\r\n\\pard{\\pntext\\f3\\'B7\\tab}{\\*\\pn\\pnlvlblt\\pnf3\\pnindent360{\\pntxtb\\'B7}}\\nowidctlpar\\li720\\sb120\\sa120 tout ce qui est reli\\'e9 au logiciel, aux services ou au contenu (y compris le code) figurant sur des sites Internet tiers ou dans des programmes tiers ; et\\par\r\n{\\pntext\\f3\\'B7\\tab}les r\\'e9clamations au titre de violation de contrat ou de garantie, ou au titre de responsabilit\\'e9 stricte, de n\\'e9gligence ou d\\rquote une autre faute dans la limite autoris\\'e9e par la loi en vigueur.\\par\r\n\r\n\\pard\\nowidctlpar\\sb120\\sa120 Elle s\\rquote applique \\'e9galement, m\\'eame si Microsoft connaissait ou devrait conna\\'eetre l\\rquote\\'e9ventualit\\'e9 d\\rquote un tel dommage. Si votre pays n\\rquote autorise pas l\\rquote exclusion ou la limitation de responsabilit\\'e9 pour les dommages indirects, accessoires ou de quelque nature que ce soit, il se peut que la limitation ou l\\rquote exclusion ci-dessus ne s\\rquote appliquera pas \\'e0 votre \\'e9gard.\\par\r\n\\b\\lang1033 EFFET JURIDIQUE. \\b0 Le pr\\'e9sent contrat d\\'e9crit certains droits juridiques. Vous pourriez avoir d\\rquote autres droits pr\\'e9vus par les lois de votre pays. Le pr\\'e9sent contrat ne modifie pas les droits que vous conf\\'e8rent les lois de votre pays si celles-ci ne le permettent pas.\\par\r\n\\b\\fs20\\lang1036\\par\r\n}\r\n\u0000"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.9736328125,
          "content": "<!--\nWe recommend using one of our pull request templates if you want your PR taken seriously.\nYou can update your URL with a param to take in the correct template, or you can simply open one of the urls and copy the raw text.\n\nIf you already have params in your URL you will see ?xx=yy after the main url, in that case you need to add the template as &template=xxx\nOtherwise add it as ?template=xxx\n\nWant to PR a bug fix? \ntemplate=bug_fix.md\n\nWant to PR a new feature? \ntemplate=new_feature.md\n\nWant to PR changes to ExampleMod?\ntemplate=example_mod.md\n\nIf you can't figure this out, simply open the link directly and copy the template:\nBug fix: https://raw.githubusercontent.com/tModLoader/tModLoader/master/.github/PULL_REQUEST_TEMPLATE/bug_fix.md\nNew feature: https://raw.githubusercontent.com/tModLoader/tModLoader/master/.github/PULL_REQUEST_TEMPLATE/new_feature.md\nExample mod: https://raw.githubusercontent.com/tModLoader/tModLoader/master/.github/PULL_REQUEST_TEMPLATE/example_mod.md\n-->"
        },
        {
          "name": "PortingNotes_1.4.4.9.md",
          "type": "blob",
          "size": 1.4296875,
          "content": "# TODOs\n\n## General\n\n- Check why we alter DrawData.useDestinationRectangle\n\thttps://github.com/tModLoader/tModLoader/commit/e38affeb6a121090555377c74eeed78c40280627\n\n-\t```cs\n\t//unknown justification for preventing odd window sizes. Causes excessive device resets. - ChickenBones\n\t//width &= 0x7FFFFFFE;\n\t//height &= 0x7FFFFFFE;\n\t```\n\n## Player\n- Reapply patch for `sItem.useStyle == 13` and `sItem.useStyle == 5`? Do we still want this now that `NetMessage.SendData(13` is sent as well?\n```patch\n+\t\t\t\t// Added by TML. #ItemTimeOnAllClients\n+\t\t\t\tif (whoAmI != Main.myPlayer)\n+\t\t\t\t\treturn;\n```\n\n## MessageBuffer\n- `ModTile.ChestDrop` and `DresserDrop` code/patches are atrocious.\n\n## TownNPCProfiles\n- Might be a good time to get rid of NPCHeadLoader? At least for town NPCs?\n\n## Tile(.TML).cs:\n- Patches have been reimplemented, check that again.\n\n## Porting Notes:\n- `GrantPrefixBenefits` is only called if `Item.accessory` is `true`. This applies in mod accessory slots too now.\n- `ModWaterStyle` now requires an additional texture, `_Slope`. See `ExampleWaterStyle` for details.\n- Reforging is now implemented via `Item.ResetPrefix`. This sets `prefix` to 0 and then refreshes the item. Make sure any custom fields set by custom prefixes are not serialized independently.\n\n## Formatter\n- Not visiting into switch case blocks properly? See `ItemSlot.LeftClick`\n\n## ChildSafety\n- Factories, do they need support for modded ids? (Should be made into issue - Mutant)"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.80078125,
          "content": "# tModLoader, a Terraria modding API [![Build Status](https://travis-ci.org/tModLoader/tModLoader.svg?branch=master)](https://travis-ci.org/tModLoader/tModLoader) [![Discord](https://img.shields.io/discord/103110554649894912.svg?style=flat-square)](https://tmodloader.net/discord)\n\ntModLoader (TML) is an open-source, community-driven, modification and expansion of the Terraria game that makes it possible to make and play mods. TML expands your Terraria adventures with new content to explore created by the Terraria community! TML allows players to create and play Terraria mods and is designed in such a way so that you can play alone or together with friends, with one mod or with multiple mods: choose to play however you like! It is however required that all your friends also install TML if you want to play together; vanilla users can't play with TML users. Find the instructions below to learn how to install TML.\n\n**Note**: the code on this GitHub repository will be ahead of the current released version.\n\n<p align=\"center\" >\n<img src=\"http://i.imgur.com/kdcROYP.png\"/>\n</p>\n\n## Instructions\n\nWant to play or create mods? Or do you want to contribute to tModLoader perhaps?\nClick the text that applies to you.\n\n### [Get tModLoader on Steam](https://store.steampowered.com/app/1281930/tModLoader/)\n\n### [I am a **player**](https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-players) (Play mods)\n\n### [I am a **developer**](https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-developers) (Create mods)\n\n### [I am a **contributor**](https://github.com/tModLoader/tModLoader/wiki/tModLoader-guide-for-contributors) (Help create tModLoader)\n\n## Support us\n\nFirst and foremost, TML is largely a community endeavor: built by the community; used by the community. Without all the contributions people in the community have made over the years, TML would not be in the state it is in. TML is a free-to-use modification of the game and will stay that way. However, if you would like to buy us a coffee, or maybe even multiple, you can choose to pledge some money to support us financially. We'd like to kindly express once again that TML was not created to create a profit. All of the core team members continue their best efforts to improve and maintain TML despite their real-life obligations, free of charge or any request from the community.\n\nThe preferred method of supporting the core team is by [choosing a pledge through Patreon](https://www.patreon.com/tmodloader). All of the money donated this way is equally shared amongst the core members to those who wish to receive part of it. This truly is the right way to support us financially if you want to do so. By becoming a patron you can receive a special role on our Discord server if desired. You should be able to couple your Discord account to your Patreon account and automatically receive your role.\n\nIf you do not want to use a Patreon subscription, you should contact one of the core team members through the Discord server to find an appropriate method of supporting us. Thanks again!\n\n## Get in touch\n\nIf you would like to contact us or TML users, it's best to join our [Discord server](https://discord.gg/tmodloader). To use Discord you will need to register a new account on [their website](https://discordapp.com/).\n\n## Contributors\n### Core team\nTML is largely created and maintained by a core team of contributors: **Blushiemagic**, **Chicken-Bones**, **Jopojelly**, **Jofairden**, **Mirsario** and **Solxanich**\n\nThis project exists in its current state thanks to all the people who have contributed:\n\n<a href=\"https://github.com/tModLoader/tModLoader/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=tModLoader/tModLoader&max=900&columns=20\" />\n</a>\n\n## License\nTML is licensed under the [MIT license](https://github.com/tModLoader/tModLoader/blob/master/LICENSE)\n"
        },
        {
          "name": "TERMS_OF_USE.md",
          "type": "blob",
          "size": 9.7666015625,
          "content": "**Last updated as of November 3rd, 2023**\n\n# DEFINITIONS\nTML Software: This Github repository representing our software (otherwise known as: 'tModLoader')\n\nTML Team: The official team that is developing TML Software (see TML_TEAM.md in the root folder of TML Software)\n\nOpen-source: Denoting software for which the original source code is made freely available and may be redistributed and modified\n\nTML Mod Browser: Part of the TML Software that allows users to browse mods made using this software, read information about mods, download and install mods. Additionally, people that have made mods can upload them to the TML Mod Browser using Steam's verification system\n\nSteam: Steam is a video game digital distribution service and storefront developed by Valve Corporation\n\nGood Old Games: A digital distribution platform for video games and films similar to Steam\n\nTerraria: The base game TML Software is built for\n\nMod: A piece of new or altered content for the baser game (Terraria) that can be used and played with using TML Software\n\nRe-Logic, Inc: The Terraria independent game developer and publisher of Terraria\n\nGithub: GitHub, Inc. is a platform and cloud-based service for software development and version control using Git, allowing developers to store and manage their code\n\nDropbox: A file hosting service operated by the American company Dropbox, Inc.\n\nImgur: An American online image sharing and image hosting service \n\n# TERMS OF USE\ntModLoader (“TML Software”), developed by the TML Team, is an open-source, community-driven, software program that allows for the modification and expansion of the Terraria® game (“Terraria”). The TML Software includes software code, associated documentation files, and the TML Mod Browser. The TML Mod Browser is a part of the TML Software that allows users to browse mods, read information about them, download them, and install them. Additionally, people that have made mods can upload their work onto the TML Mod Browser using Steam's verification system.\n\n## Intellectual Property Rights in the Terraria Game\nThe Terraria game and the Terraria® trademark are owned by Re-Logic, Inc. The Terraria game is a completely separate proprietary software program protected by copyright and available for purchase pursuant to license and terms of use established by Re-Logic, Inc. You acknowledge that these Terms of Use are not applicable to Terraria or to its owner Re-Logic, Inc. and that the TML Team is not associated with Re-Logic, Inc. The TML Software makes it possible to make and play mods for Terraria and load such mods into the TML Mod Browser without accessing the source code of Terraria.\n\nThe Terraria trademark can only be used in a referential phrase in promotional materials to describe that a Mod can be used with the Terraria game, provided that the Terraria name is not part of the Mod name, the name is used in a referential way such as “for use with” or “compatible with,” the word Terraria appears less prominent than the Mod name, the Mod is in fact for use with Terraria, the reference does not create a sense of endorsement, sponsorship, or false association with Re-Logic or the Terraria game, and the use does not show Re-Logic, Inc. or the Terraria game in a false or derogatory light. Except as expressly provided above, the trademark Terraria® shall not otherwise be used in advertising or otherwise to promote the sale, use, or other dealings with the with the public at large.\n\nTHE TML SOFTWARE IS PROVIDED UNDER THE MIT LICENSE, YOU MAY USE THE SOURCE CODE SO LONG AS YOU AGREE TO COMPLY AND DO COMPLY WITH THE TERMS OF THE MIT LICENSE AND THE TERMS OF USE PROVIDED HEREIN. BY USING THE TML SOFTWARE IN IN ANY FORM OR FROM ANY SOURCE, YOU ACCEPT THESE TERMS OF USE. IN THE EVENT OF A CONFLICT BETWEEN THE MIT LICENSE AND THE TERMS OF USE HEREIN, THE MIT LICENSE WILL PREVAIL WITH RESPECT TO ANY OPEN SOURCE SOFTWARE.\n\n## MIT LICENSE (EXPAT)\nPermission is hereby granted, free of charge, to any person obtaining a copy of the TML Software, which includes software and associated documentation files, to deal in the TML Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the TML Software, and to permit persons to whom the TML Software is furnished to do so, subject to the following conditions:\n\nThe following copyright notice and this permission notice shall be included in all copies or substantial portions of the Software:\n\n© TML TEAM 2020.\nTHE TML SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n## RISKS\nThere is no support for the TML Software. It can be modified, altered, or taken offline, at any time without notice. Mods available using the TML Mod Browser by anyone other than the TML Team are not controlled by the TML Team. By using the TML Software or any mods associated with the TML Software or found on the TML Mod Browser, you agree that you are doing so at your own risk. Such risks may include, but are not limited to:\n• Damage of software in the form of corrupted game installs or game files, causing the game to no longer work or no longer work entirely or in specific aspects\n• Corrupted player or world files, preventing the game from loading correctly\n• Detection of modified client(s) or game files by the content providers (such as Steam, Good Old Games and alike)\n• Troubleshooting issues that arise in the game may no longer be prevalent\n• Computer damage in any form of hardware damage or other broken pieces that causes the computer to malfunction or break completely\n• Distaste in the new state of the game\n• New or modified content in the game you may find potentially inaccurate, misleading, dangerous, addictive or unethical.\n• Bugs or other software issues that cause the TML Software not to work correctly\nThe TML Team does not support, endorse, incentivize, or encourage inappropriate or illegal content. Mods on the TML Mod Browser may be subject to or contain other harmful components such as viruses like trojans or keyloggers. The TML Team will use its best efforts to remove such mods from the TML Mod Browser, but makes no guarantee regarding the safety of the TML Mod Browser.\n\n## Uploading Content to the TML Mod Browser\nBy uploading content to the Mod Browser, you agree that the TML Team has the right to alter, modify, or remove any uploaded content in any way desired or deemed necessary. TML provides no guarantee of availability for any uploaded content, or validity thereof.\n\nSuccessful upload messages provide no guarantee that the content uploaded becomes available in the service; there is no guarantee uploads are proven successful.\n\nAny individual may be permanently denied access from the TML Mod Browser service without the ability to appeal this course of action.\n\nCreators of mods can remove their uploaded content from the TML Mod Browser service. However, there is no guarantee that uploaded content has not already propagated through different channels.\n\nThe uploaded content may exist on different services, which are not owned or maintained by the TML Team, including but not limited to: Discord, GitHub, Dropbox and Imgur.\n\nYou may not upload, store, share, display, post, e-mail, transmit or otherwise make available any material on the TML Mod Browser or associated with the TML Software that infringes any copyright, patent, trademark, trade secret or other proprietary rights of any person or entity. The TML Team may remove any such content from the TML Mod Browser at any time with or without notice. However, the TML Team cannot remove content from other channels. Removing uploaded content from the TML Mod Browser or from any other source provides no guarantee of its removal from any other channels, including content that may have been downloaded on users’ machines.\n\nUnder no circumstances can content creators force the removal of content that users have downloaded through the TML Software or TML Mod Browser. By uploading content, creators give permission for such content to be propagated through different channels and used on the computers of others.\n\n## Wiki\nWikis are created through a voluntary association of individuals formed to create freely licensed online educational, cultural and informational resources. Use information provided by any wiki at your own discretion and risk. The TML Team is not responsible for information contained in or linked to any wiki or the use of any information contained in or linked to any wiki.\n\nSome information provided by wikis may create a risk for readers who choose to apply or use the information in their own activities or to promote the information for use by third parties.\n\nPlease take all steps necessary to ascertain that information you receive from a wiki is correct and has been verified. Check the references at the end of the article if they are present. Also, read the revision history to see if there are outstanding disputes over the contents of the article. Double-check all information with independent sources when possible. The authors may not be qualified to provide you with complete information or to inform you about adequate safety precautions and other measures to prevent injury or other harm.\n\nIf a wiki article contains suggestions regarding dangerous, illegal or unethical activities, remember that any individual can post this information. Wikis are not uniformly peer reviewed; while readers and other contributors may correct errors or remove erroneous suggestions, they have no legal duty to do so.\n"
        },
        {
          "name": "TML_TEAM.md",
          "type": "blob",
          "size": 0.85546875,
          "content": "The tModLoader Team (also tML Team) is the legal entity holding ownership of the tModLoader brand and software. \nCurrent members are: Kaylee Kim (blushiemagic), David Jakes (Chicken-Bones), Javid Pack (Jopojelly), Daniël Zondervan (Jofairden), Dmitry Reshetov (Mirsario) and Nick Moller (Solxan)\n\nMembers can be added or removed only through unanimous vote. If a member is uncontactable for 2 weeks, they are considered to abstain from voting.\n\ntModLoader is published under the MIT license, permitting distribution and modification of the software. By contributing to tML, contributors agree to the use of their contribution as part of tML under the MIT license.\nThe tML Team retains ownership of the tModLoader brand, and requests that derivative works be distinguished from the primary product. Major decisions impacting the tModLoader brand are also decided unanimously.\n"
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "patching_todo.txt",
          "type": "blob",
          "size": 18.400390625,
          "content": "//Rartrin:\n\t//Player\n\t\t//Make sure \"22\" replaced with \"MaxBuffs\" in 'for' and CountBuffs() == and !=.\n\t\t//Ensure all blockLists are cleared everywhere that they need to be.\n\n\t//Need reimplementing:\n\t\t\n\n\t//TileLoader\n\t\t//Multiply item.axe by 1.2f before adding into the damage.\n\n\t//WorldGen\n\t\t//Add TileLoader.IsClosedDoor into WorldGen.IsLockedDoor check.\n\n\t//Needs checking:\n\t\t//WaterStyleLoader.WaterStyleCount\n\t\n\t//Main\n\t\t//Add IsAValidEquipmentSlotForIteration to VanillaUpdateAccessory check.\n\n//Mirsario:\n\t//WorldGen:\n\t\t//Test drops.\n\t\t\n\t\t//Test modded grasses' behavior.\n\t\t\n\t//TileDrawing:\n\t\t//Reimplement cactus drawing. Search for modCactus in Main.cs 1.3.5.3 tML diffs.\n\t\t\n\t\t//Reimplement tree drawing. Search for modTree in Main.cs 1.3.5.3 tML diffs.\n\t\t\t\n\t//Item:\n\t\t//In Item.GetDrawHitbox, return the following size if it's not null.\n\t\t\titemAnimations[item[i].type]?.GetFrame(itemTexture[item[i].type])\n\t\t\t\n\t//LegacySoundPlayer\n\t\t//Re-add clamps for volume and pitch, 0.0..1.0 and -1.0..1.0 respectively?\n\t\t\t\n\t\t//Put this in somewhere:\n\t\t\tif (waveBank == null) //Supress extra exceptions from the audio engine failing to load\n\t\t\t\treturn null;\n\t\t\n\t//LegacyPlayerRenderer:\n\t\t//Reimplement ItemLoader.DrawHair hook.\n\t\t\n\t\t//Reimplement these calls from Main.DrawPlayer:\n\t\t\tItemLoader.DrawHands(drawPlayer, ref flag, ref flag2);\n\t\t\t\n\t\t\tItemLoader.DrawHair(drawPlayer, ref flag4, ref flag5);\n\t\t\t\n\t\t\tItemLoader.DrawArmorColor(EquipType.Head, drawPlayer.head, drawPlayer, shadow, ref color11, ref num12, ref newColor);\n\t\t\tItemLoader.DrawArmorColor(EquipType.Body, drawPlayer.body, drawPlayer, shadow, ref color12, ref num13, ref newColor2);\n\t\t\tItemLoader.ArmorArmGlowMask(drawPlayer.body, drawPlayer, shadow, ref num14, ref newColor3);\n\t\t\tItemLoader.DrawArmorColor(EquipType.Legs, drawPlayer.legs, drawPlayer, shadow, ref color14, ref num15, ref newColor4);\n\t\t\t\n\t\t\tItemLoader.DrawHands(drawPlayer, ref flag, ref flag2);\n\t\t\t\n\t\t\tProjectileLoader.DrawHeldProjInFrontOfHeldItemAndArms(projectile[drawPlayer.heldProj], ref flag3); //(multiple of these)\n\t\t\t\n\t\t\tItemLoader.DrawBody(drawPlayer) // ('if' check)\n\n// {\n+\t\t\t\t\t\tVector2 holdoutOrigin = Vector2.Zero;\n+\t\t\t\t\t\tItemLoader.HoldoutOrigin(drawPlayer, ref holdoutOrigin);\n-\t\t\t\t\t\tvalue = new DrawData(itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], new Vector2((int)(value2.X - screenPosition.X + origin5.X + (float)num103), (int)(value2.Y - screenPosition.Y + (float)num104)), new Microsoft.Xna.Framework.Rectangle(0, 0, itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type].Width, itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type].Height), drawPlayer.inventory[drawPlayer.selectedItem].GetAlpha(currentColor), num102, origin5, drawPlayer.inventory[drawPlayer.selectedItem].scale, spriteEffects2, 0);\n+\t\t\t\t\t\tvalue = new DrawData(itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type], new Vector2((int)(value2.X - screenPosition.X + origin5.X + (float)num103), (int)(value2.Y - screenPosition.Y + (float)num104)), new Microsoft.Xna.Framework.Rectangle(0, 0, itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type].Width, itemTexture[drawPlayer.inventory[drawPlayer.selectedItem].type].Height), drawPlayer.inventory[drawPlayer.selectedItem].GetAlpha(currentColor), num102, origin5 + holdoutOrigin, drawPlayer.inventory[drawPlayer.selectedItem].scale, spriteEffects2, 0);\n// }\n\t\t\n\t//Main:\n\t\t//Add this to the end of Initialize():\n\t\t\t#if SERVER\n\t\t\tthis.OpenSettings();\n\t\t\t#endif\n\t\t\t\n\t\t//Put this somewhere it fits. Was in Main.LoadTextures():\n\t\t\tUICommon.LoadTextures();\n\t\t\n\t\t//Define and pass modMusic and modPriority to UpdateAudio_DecideOnTOWMusic and UpdateAudio_DecideOnNewMusic methods...\n\t\t\tint modMusic = -1;\n\t\t\tMusicPriority modPriority = MusicPriority.None;\n\t\t\t\n\t\t//...And put this after the calls.\n\t\t\tModHooks.UpdateMusic(ref modMusic, ref modPriority);\n\t\t\t\n\t\t//Redo all the checks like that in both UpdateAudio_DecideOnTOWMusic and UpdateAudio_DecideOnNewMusic:\n\t\t\tif (modPriority >= MusicPriority.Event) {\n\t\t\t\tnewMusic = modMusic;\n\t\t\t}\n\t\t\t\n\t\t//Put this somewhere high in DoUpdateInWorld:\n\t\t\tif (netMode == 1 && Netplay.syncingWorld) // skip updating entities while world is loading in multiplayer #340\n\t\t\t\tgoto skipEntityUpdates;\n\t\t\t\t\n\t\t//In DrawWaters, replace '13' in for check with\n\t\t\tWaterStyleLoader.WaterStyleCount'\n\t\t\t\n\t\t//Add this to the middle of DrawBG() after definition of the used variable.\n\t\t\tSurfaceBgStyleLoader.ChooseStyle(ref preferredBGStyleForPlayer);\n\t\t\t\n\t\t//Add this to the end of DrawSurfaceBG_BackMountainsStep2:\n\t\t\tSurfaceBgStyleLoader.DrawMiddleTexture();\n\t\t\t\n\t\t//Add this near the end of DrawSurfaceBG(), after SkyManager.Instance.DrawToDepth(spriteBatch, 1f); call:\n\t\t\tFinishDrawCloseBackground:\n\t\t\tSurfaceBgStyleLoader.DrawCloseBackground(num21);\n\t\t//...Then make sure that all returns/continues before it are replaced with gotos to that statement.\n\t\t\t\n\t\t//Find where the logo is rendered, and lower the position a bit.\n\t\t\t\n\t\t//If still needed - replace Utils.WordwrapString call in Main.TextDisplayCache.PrepareCache with Utils.WordwrapStringSmart.\n\t\t//Use old diffs in Main.GUIChatDrawInner\n\t\t\t\n\t\t//Reimplement the entire ModifyTooltips hook call with all the tooltipNames filling, based on diffs of 1.3.5.3. See MouseText_DrawItemTooltip.\n\t\t\n\t\t//Reimplement PreDrawExtras and PostDraw:\n\t\t//In DrawProj, jump over drawing of all extras with a goto:\n\t\t\tif (!ProjectileLoader.PreDrawExtras(projectile, spriteBatch)) {\n\t\t\t\tgoto DrawExtrasEnd;\n\t\t\t}\n\t\t\t\n\t\t\tProjectileLoader.PostDraw(projectile, spriteBatch, color25);\n\t\t\t\n\t\t//Projectile drawing hooks need more thought because of early returns\n\t\t\t\n\t\t//Reimplement broken patches:\n// {\nif (nPC.aiStyle == 7)\n\tDrawNPCExtras(n3, beforeDraw: false, num65, num64, color9, vector10, spriteEffects);\n\n+NPCLoader.PostDraw(npc[iNPCIndex], spriteBatch, color9);\n// }\n\n// {\n@@ -6674,41 +5292,48 @@\n \t\t\t}\n \n \t\t\tif (autoJoin) {\n+\t\t\t\tModLoader.ModLoader.OnSuccessfulLoad += () => {\n-\t\t\t\tLoadPlayers();\n+\t\t\t\t\tLoadPlayers();\n-\t\t\t\tmenuMode = 1;\n+\t\t\t\t\tmenuMode = 1;\n-\t\t\t\tmenuMultiplayer = true;\n+\t\t\t\t\tmenuMultiplayer = true;\n+\t\t\t\t};\n \t\t\t}\n \n \t\t\tfpsTimer.Start();\n \t\t}\n \n \t\tprotected override void LoadContent() {\n+\t\t\tHiDefGraphicsIssues.OnLoadContent();\n \t\t\tConfiguration.Load();\n+\t\t\tModLoader.ModLoader.MigrateSettings();\n \t\t\tConfiguration.Get(\"UseExperimentalFeatures\", ref UseExperimentalFeatures);\n \t\t\tif (UseExperimentalFeatures)\n \t\t\t\tTexturePackSupport.Enabled = true;\n \n \t\t\tConfiguration.Get(\"Support4K\", ref Support4K);\n \t\t\tbool flag = Support4K && base.GraphicsDevice.Adapter.IsProfileSupported(GraphicsProfile.HiDef);\n-\t\t\tif (GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width <= 1920 && GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height <= 1200)\n-\t\t\t\tflag = false;\n-\n+\t\t\t// (resolution check removed) tModLoader will attempt to use HiDef even if the computer resolution doesn't need it to support newer shaders.\n \t\t\tif (Support4K && flag)\n-\t\t\t\tSetGraphicsProfile(GraphicsProfile.HiDef);\n+\t\t\t\tif (SetGraphicsProfile(GraphicsProfile.HiDef))\n+\t\t\t\t\treturn; // changing the graphics profile triggers a device recreation and XNA will call `LoadContent` again\n \n-\t\t\tTexturePackSupport.FindTexturePack();\n+\t\t\tTexturePackSupport.FindTexturePacks();\n \t\t\tTextureManager.Initialize();\n \t\t\tmapSectionTexture = new RenderTarget2D(base.GraphicsDevice, 200, 150);\n-\t\t\tShaderContentManager = new ContentManager(base.Content.ServiceProvider, base.Content.RootDirectory);\n+\t\t\tShaderContentManager = new TMLContentManager(base.Content.ServiceProvider, base.Content.RootDirectory, AlternateContentManager);\n \t\t\tPixelShaderRef.Value = ShaderContentManager.Load<Effect>(\"PixelShader\");\n \t\t\tTileShaderRef.Value = ShaderContentManager.Load<Effect>(\"TileShader\");\n \t\t\tScreenShaderRef.Value = ShaderContentManager.Load<Effect>(\"ScreenShader\");\n// }\n\n// {\n@@ -16295,7 +16647,9 @@\n \t\t\t\t}\n \n \t\t\t\ttry {\n+\t\t\t\t\tTexture2D modTopTextures;\n \t\t\t\t\tif (type4 == 5 && frameY >= 198 && frameX >= 22) {\n+\t\t\t\t\t\t//frame\n \t\t\t\t\t\tint num316 = 0;\n \t\t\t\t\t\tswitch (frameX) {\n \t\t\t\t\t\t\tcase 22: {\n// }\n\n// {\n@@ -16309,11 +16663,22 @@\n \t\t\t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t\t\t\tint num320 = 0;\n+\t\t\t\t\t\t\t\t\t//frame width\n \t\t\t\t\t\t\t\t\tint num321 = 80;\n+\t\t\t\t\t\t\t\t\t//frame height\n \t\t\t\t\t\t\t\t\tint num322 = 80;\n+\t\t\t\t\t\t\t\t\t//x offset left\n \t\t\t\t\t\t\t\t\tint num323 = 32;\n+\t\t\t\t\t\t\t\t\t//y offset\n \t\t\t\t\t\t\t\t\tint num324 = 0;\n+\t\t\t\t\t\t\t\t\tmodTopTextures = null;\n \t\t\t\t\t\t\t\t\tfor (int num325 = num301; num325 < num301 + 100; num325++) {\n+\t\t\t\t\t\t\t\t\t\tmodTopTextures = TileLoader.GetTreeTopTextures(tile[num300, num325].type,\n+\t\t\t\t\t\t\t\t\t\t\tnum300, num325, ref num316, ref num321, ref num322, ref num323, ref num324);\n+\n+\t\t\t\t\t\t\t\t\t\tif (modTopTextures != null)\n+\t\t\t\t\t\t\t\t\t\t\tbreak;\n+\n \t\t\t\t\t\t\t\t\t\tif (Main.tile[num300, num325].type == 2) {\n \t\t\t\t\t\t\t\t\t\t\tnum320 = GetTreeStyle(num300);\n \t\t\t\t\t\t\t\t\t\t\tbreak;\n// }\n\n// {\n@@ -16152,6 +16503,7 @@\n \t\t\t\t\t\tint num298 = 0;\n \t\t\t\t\t\tspriteBatch.Draw(texture2D2, new Vector2((float)(j * 16 - (int)screenPosition.X) - ((float)num9 - 16f) / 2f + (float)num297, i * 16 - (int)screenPosition.Y + num12 + num298) + value, empty, color6, 0f, default(Vector2), 1f, effects, 0f);\n \t\t\t\t\t}\n+\t\t\t\t\tTileLoader.PostDraw(j, i, type, spriteBatch);\n \t\t\t\t}\n \t\t\t}\n// }\n\n// {\n @@ -16380,10 +16745,12 @@\n \t\t\t\t\t\t\t\t\t\tLighting.AddLight(num300, num301, 0.1f, 0.2f + num326 / 2f, 0.7f + num326);\n \t\t\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0)\n+\t\t\t\t\t\t\t\t\tif (modTopTextures == null && tile6.color() > 0)\n \t\t\t\t\t\t\t\t\t\tcheckTreeAlt[num320, tile6.color()] = true;\n \n+\t\t\t\t\t\t\t\t\tif (modTopTextures != null)\n+\t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(modTopTextures, new Vector2(num300 * 16 - (int)screenPosition.X - num323, num301 * 16 - (int)screenPosition.Y - num322 + 16 + num324) + value, new Microsoft.Xna.Framework.Rectangle(num316 * (num321 + 2), 0, num321, num322), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0 && treeAltTextureDrawn[num320, tile6.color()])\n+\t\t\t\t\t\t\t\t\telse if (tile6.color() > 0 && treeAltTextureDrawn[num320, tile6.color()])\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeTopAltTexture[num320, tile6.color()], new Vector2(num300 * 16 - (int)screenPosition.X - num323, num301 * 16 - (int)screenPosition.Y - num322 + 16 + num324) + value, new Microsoft.Xna.Framework.Rectangle(num316 * (num321 + 2), 0, num321, num322), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n \t\t\t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeTopTexture[num320], new Vector2(num300 * 16 - (int)screenPosition.X - num323, num301 * 16 - (int)screenPosition.Y - num322 + 16 + num324) + value, new Microsoft.Xna.Framework.Rectangle(num316 * (num321 + 2), 0, num321, num322), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n// }\n\n// {\n@@ -16401,7 +16768,13 @@\n \t\t\t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t\t\t\tint num327 = 0;\n+\t\t\t\t\t\t\t\t\tTexture2D modBranchTextures = null;\n \t\t\t\t\t\t\t\t\tfor (int num328 = num301; num328 < num301 + 100; num328++) {\n+\t\t\t\t\t\t\t\t\t\tmodBranchTextures = TileLoader.GetTreeBranchTextures(tile[num300 + 1, num328].type, num300, num328, 1, ref num316);\n+\n+\t\t\t\t\t\t\t\t\t\tif (modBranchTextures != null)\n+\t\t\t\t\t\t\t\t\t\t\tbreak;\n+\n \t\t\t\t\t\t\t\t\t\tif (Main.tile[num300 + 1, num328].type == 2) {\n \t\t\t\t\t\t\t\t\t\t\tnum327 = GetTreeStyle(num300 + 1);\n \t\t\t\t\t\t\t\t\t\t\tbreak;\n// }\n\n// {\n@@ -16455,10 +16828,12 @@\n \t\t\t\t\t\t\t\t\t\tLighting.AddLight(num300, num301, 0.1f, 0.2f + num329 / 2f, 0.7f + num329);\n \t\t\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0)\n+\t\t\t\t\t\t\t\t\tif (modBranchTextures == null && tile6.color() > 0)\n \t\t\t\t\t\t\t\t\t\tcheckTreeAlt[num327, tile6.color()] = true;\n \n+\t\t\t\t\t\t\t\t\tif (modBranchTextures != null)\n+\t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(modBranchTextures, new Vector2(num300 * 16 - (int)screenPosition.X - 24, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(0, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0 && treeAltTextureDrawn[num327, tile6.color()])\n+\t\t\t\t\t\t\t\t\telse if (tile6.color() > 0 && treeAltTextureDrawn[num327, tile6.color()])\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeBranchAltTexture[num327, tile6.color()], new Vector2(num300 * 16 - (int)screenPosition.X - 24, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(0, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n \t\t\t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeBranchTexture[num327], new Vector2(num300 * 16 - (int)screenPosition.X - 24, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(0, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n// }\n\n// {\n@@ -16476,7 +16851,13 @@\n \t\t\t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t\t\t\tint num317 = 0;\n+\t\t\t\t\t\t\t\t\tTexture2D modBranchTextures = null;\n \t\t\t\t\t\t\t\t\tfor (int num318 = num301; num318 < num301 + 100; num318++) {\n+\t\t\t\t\t\t\t\t\t\tmodBranchTextures = TileLoader.GetTreeBranchTextures(tile[num300 - 1, num318].type, num300, num318, -1, ref num316);\n+\n+\t\t\t\t\t\t\t\t\t\tif (modBranchTextures != null)\n+\t\t\t\t\t\t\t\t\t\t\tbreak;\n+\n \t\t\t\t\t\t\t\t\t\tif (Main.tile[num300 - 1, num318].type == 2) {\n \t\t\t\t\t\t\t\t\t\t\tnum317 = GetTreeStyle(num300 - 1);\n \t\t\t\t\t\t\t\t\t\t\tbreak;\n// }\n\n// {\n@@ -16530,10 +16911,12 @@\n \t\t\t\t\t\t\t\t\t\tLighting.AddLight(num300, num301, 0.1f, 0.2f + num319 / 2f, 0.7f + num319);\n \t\t\t\t\t\t\t\t\t}\n \n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0)\n+\t\t\t\t\t\t\t\t\tif (modBranchTextures == null && tile6.color() > 0)\n \t\t\t\t\t\t\t\t\t\tcheckTreeAlt[num317, tile6.color()] = true;\n \n+\t\t\t\t\t\t\t\t\tif (modBranchTextures != null)\n+\t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(modBranchTextures, new Vector2(num300 * 16 - (int)screenPosition.X, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(42, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n-\t\t\t\t\t\t\t\t\tif (tile6.color() > 0 && treeAltTextureDrawn[num317, tile6.color()])\n+\t\t\t\t\t\t\t\t\telse if (tile6.color() > 0 && treeAltTextureDrawn[num317, tile6.color()])\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeBranchAltTexture[num317, tile6.color()], new Vector2(num300 * 16 - (int)screenPosition.X, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(42, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n \t\t\t\t\t\t\t\t\telse\n \t\t\t\t\t\t\t\t\t\tspriteBatch.Draw(treeBranchTexture[num317], new Vector2(num300 * 16 - (int)screenPosition.X, num301 * 16 - (int)screenPosition.Y - 12) + value, new Microsoft.Xna.Framework.Rectangle(42, num316 * 42, 40, 40), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n// }\n\n// {\n@@ -16544,7 +16927,7 @@\n \t\t\t\t\t}\n \n \t\t\t\t\tif (type4 != 323 || frameX < 88 || frameX > 132)\n-\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\tgoto SpecialDraw;\n \n \t\t\t\t\tint num330 = 0;\n \t\t\t\t\tswitch (frameX) {\n// }\n\n// {\n@@ -16562,7 +16945,12 @@\n \t\t\t\t\tint num334 = 80;\n \t\t\t\t\tint num335 = 32;\n \t\t\t\t\tint num336 = 0;\n+\t\t\t\t\tmodTopTextures = null;\n \t\t\t\t\tfor (int num337 = num301; num337 < num301 + 100; num337++) {\n+\t\t\t\t\t\tmodTopTextures = TileLoader.GetPalmTreeTopTextures(tile[num300, num337].type);\n+\t\t\t\t\t\tif (modTopTextures != null)\n+\t\t\t\t\t\t\tbreak;\n+\n \t\t\t\t\t\tif (Main.tile[num300, num337].type == 53) {\n \t\t\t\t\t\t\tnum332 = 0;\n \t\t\t\t\t\t\tbreak;\n// }\n\n// {\n@@ -16586,16 +16974,22 @@\n \n \t\t\t\t\tint frameY3 = Main.tile[num300, num301].frameY;\n \t\t\t\t\tint y3 = num332 * 82;\n-\t\t\t\t\tif (tile6.color() > 0)\n+\t\t\t\t\tif (modTopTextures == null && tile6.color() > 0)\n \t\t\t\t\t\tcheckTreeAlt[num331, tile6.color()] = true;\n \n+\t\t\t\t\tif (modTopTextures != null)\n+\t\t\t\t\t\tspriteBatch.Draw(modTopTextures, new Vector2(num300 * 16 - (int)screenPosition.X - num335 + frameY3, num301 * 16 - (int)screenPosition.Y - num334 + 16 + num336) + value, new Microsoft.Xna.Framework.Rectangle(num330 * (num333 + 2), y3, num333, num334), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n-\t\t\t\t\tif (tile6.color() > 0 && treeAltTextureDrawn[num331, tile6.color()])\n+\t\t\t\t\telse if (tile6.color() > 0 && treeAltTextureDrawn[num331, tile6.color()])\n \t\t\t\t\t\tspriteBatch.Draw(treeTopAltTexture[num331, tile6.color()], new Vector2(num300 * 16 - (int)screenPosition.X - num335 + frameY3, num301 * 16 - (int)screenPosition.Y - num334 + 16 + num336) + value, new Microsoft.Xna.Framework.Rectangle(num330 * (num333 + 2), y3, num333, num334), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n \t\t\t\t\telse\n \t\t\t\t\t\tspriteBatch.Draw(treeTopTexture[num331], new Vector2(num300 * 16 - (int)screenPosition.X - num335 + frameY3, num301 * 16 - (int)screenPosition.Y - num334 + 16 + num336) + value, new Microsoft.Xna.Framework.Rectangle(num330 * (num333 + 2), y3, num333, num334), Lighting.GetColor(num300, num301), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);\n \t\t\t\t}\n \t\t\t\tcatch {\n \t\t\t\t}\n+\n+\t\t\t\tSpecialDraw:\n+\n+\t\t\t\tTileLoader.SpecialDraw(type4, num300, num301, spriteBatch);\n \t\t\t}\n \n \t\t\tif (TileObject.objectPreview.Active && player[myPlayer].showItemIcon && placementPreview && !CaptureManager.Instance.Active) {\n// }\n\n// {\n@@ -12580,18 +12880,30 @@\n \t\t\t\t\telse if (array2[l]) {\n \t\t\t\t\t\tblack = (array3[l] ? new Microsoft.Xna.Framework.Color((byte)(190f * num18), (byte)(120f * num18), (byte)(120f * num18), a) : new Microsoft.Xna.Framework.Color((byte)(120f * num18), (byte)(190f * num18), (byte)(120f * num18), a));\n \t\t\t\t\t}\n-\t\t\t\t\telse if (l == currentLine - 1) {\n+\t\t\t\t\telse if (drawableLines[l].mod.Equals(\"Terraria\") && drawableLines[l].Name.Equals(\"Price\")) {\n \t\t\t\t\t\tblack = color;\n \t\t\t\t\t}\n \n-\t\t\t\t\tChatManager.DrawColorCodedStringWithShadow(spriteBatch, fontMouseText, array[l], new Vector2(X, Y + num25), black, 0f, Vector2.Zero, Vector2.One);\n+\t\t\t\t\tdrawableLines[l].color = black;\n+\t\t\t\t\tdrawColor = black;\n+\t\t\t\t\tif (overrideColor[l].HasValue) {\n+\t\t\t\t\t\tdrawColor = overrideColor[l].Value * num18;\n+\t\t\t\t\t\tdrawableLines[l].overrideColor = drawColor;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (ItemLoader.PreDrawTooltipLine(HoverItem, drawableLines[l], ref yOffset) && globalCanDraw)\n+\t\t\t\t\t\tChatManager.DrawColorCodedStringWithShadow(spriteBatch, drawableLines[l].font, drawableLines[l].text, new Vector2((float)drawableLines[l].X, (float)drawableLines[l].Y), drawColor, drawableLines[l].rotation, drawableLines[l].origin, drawableLines[l].baseScale, drawableLines[l].maxWidth, drawableLines[l].spread);\n+\n+\t\t\t\t\tItemLoader.PostDrawTooltipLine(HoverItem, drawableLines[l]);\n \t\t\t\t}\n \n-\t\t\t\tnum25 += (int)(fontMouseText.MeasureString(array[l]).Y + (float)num24);\n+\t\t\t\tY += (int)(fontMouseText.MeasureString(array[l]).Y + yOffset);\n \t\t\t}\n+\n+\t\t\tItemLoader.PostDrawTooltip(HoverItem, drawableLines.AsReadOnly());\n \t\t}\n \n-\t\tprivate void MouseText_DrawBuffString(ref int X, ref int Y) {\n+\t\tprivate void MouseText_DrawBuffString(ref int X, ref int Y, int buffNameHeight) {\n \t\t\tMicrosoft.Xna.Framework.Point p = new Microsoft.Xna.Framework.Point(X, Y);\n \t\t\tint num = 220;\n \t\t\tint num2 = -1;"
        },
        {
          "name": "reworking_todo.txt",
          "type": "blob",
          "size": 1.2470703125,
          "content": "//Things that need to be done after initial patches are fixed.\n//This can include new systems that should be accounted for\n\n//Rartrin\n\t//Chat\n\t\t//Mod commands should make use of new vanilla command system.\n\t\t//This includes moving the say command\n\t//Wing\n\t\t//Loading should leverage player.GetWingStats()\n\t\t//ArmorIDs.Wing.Sets.Stats\n\t//Background system\n\t\t//Main.bgAlpha2 became Main.bgAlphaFrontLayer\n\t\t//Background system in general got some refactoring\n\t//Minimum zoom comparer\n\t\t//Check if ModLoader.ModLoader.removeForcedMinimumZoom is still needed now that MinimumZoomComparerX and Y exist\n\t//WaterStyleLoader.ChooseWaterStyle\n\t\t//Vanilla has Main.CalculateWaterStyle() now\n\t//Integrate with vanilla asset system\n\t\t//?Reimplement PlayerHooks.GetMapBackgroundImage in DrawMapFullscreenBackground so it can use assets\n\t//SceneMetrics\n\t\t//This includes tile counts and banner buffs.\n\t\t//Moved from player to Main.ScreneMetrics\n\t//TileEntity\n\t\t//We should easily be able to remove all patches to the TileEntity class by doing the following:\n\t\t\t//Make ModTileEntity use new abstracted vanilla TileEntityManager.\n\t\t\t//Always use \"is\" check on TileEntity rather than id>= to determine a ModTileEntity.\n\t//GameContent.ItemShopSellbackHelper\n\t\t//Worth keeping track of item data?"
        },
        {
          "name": "setup-cli.bat",
          "type": "blob",
          "size": 0.796875,
          "content": "@echo off\nsetlocal enabledelayedexpansion\n\nwhere git >NUL\nif !errorlevel! neq 0 (\n\techo git not found on PATH\n    exit /b %errorlevel%\n)\n\nset busybox=patches\\tModLoader\\Terraria\\release_extras\\LaunchUtils\\busybox64.exe\nset submoduleupdatemarker=.git\\tml-setup-module-init.touch\n%busybox% [ .git\\index -ot %submoduleupdatemarker% ]\nrem a 0 exit code means true, a 1 exit code indicates false, or missing file\nif !errorlevel! neq 0 (\n\techo Restoring git submodules\n\tgit submodule update --init --recursive\n\tif !errorlevel! neq 0 (\n\t\texit /b %errorlevel%\n\t)\n\t%busybox% touch %submoduleupdatemarker%\n)\n\nwhere dotnet >NUL\nif !errorlevel! neq 0 (\n\techo dotnet not found on PATH. Install .NET Core!\n    exit /b %errorlevel%\n)\n\nendlocal\ndotnet run --project setup/CLI/Setup.CLI.csproj -c Release -p:WarningLevel=0 -v q -- %*"
        },
        {
          "name": "setup-cli.sh",
          "type": "blob",
          "size": 0.52734375,
          "content": "#!/bin/sh\n\nif ! command -v git > /dev/null; \nthen\n    echo \"git not found in PATH\"\n    exit 1\nfi\n\nsubmoduleupdatemarker=\".git/tml-setup-module-init.touch\"\nif ! [ \".git/index\" -ot \"$submoduleupdatemarker\" ]\nthen\n\techo \"Restoring git submodules\"\n\tgit submodule update --init --recursive\n\tif [ $? -ne 0 ]\n\tthen\n\t\texit $?\n\tfi\n\ttouch \"$submoduleupdatemarker\"\nfi\n\nif ! command -v dotnet > /dev/null\nthen\n    echo \"dotnet not found in PATH\"\n    exit 1\nfi\n\ndotnet run --project setup/CLI/Setup.CLI.csproj -c Release -p:WarningLevel=0 -v q -- \"$@\"\n\n"
        },
        {
          "name": "setup.bat",
          "type": "blob",
          "size": 0.9794921875,
          "content": "@echo off\nsetlocal enabledelayedexpansion\n\nwhere git >NUL\nif !errorlevel! neq 0 (\n\techo git not found on PATH\n    pause\n    exit /b %errorlevel%\n)\n\nset busybox=patches\\tModLoader\\Terraria\\release_extras\\LaunchUtils\\busybox64.exe\nset submoduleupdatemarker=.git\\tml-setup-module-init.touch\n%busybox% [ .git\\index -ot %submoduleupdatemarker% ]\nrem a 0 exit code means true, a 1 exit code indicates false, or missing file\nif !errorlevel! neq 0 (\n\techo Restoring git submodules\n\tgit submodule update --init --recursive\n\tif !errorlevel! neq 0 (\n\t\tpause\n\t\texit /b %errorlevel%\n\t)\n\t%busybox% touch %submoduleupdatemarker%\n)\n\nwhere dotnet >NUL\nif !errorlevel! neq 0 (\n\techo dotnet not found on PATH. Install .NET Core!\n    pause\n    exit /b %errorlevel%\n)\n\nendlocal\n\necho building Setup.GUI.csproj\ndotnet build setup/GUI/Setup.GUI.csproj -c Release -p:WarningLevel=0;Platform= -v q\n\nif NOT [\"%errorlevel%\"]==[\"0\"] (\n\tpause\n\texit /b %errorlevel%\n)\n\nstart \"\" \"setup/GUI/bin/Release/net8.0-windows/setup-gui.exe\" %*"
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "solutions",
          "type": "tree",
          "content": null
        },
        {
          "name": "tModBuildTasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tModLoader.targets",
          "type": "blob",
          "size": 0.873046875,
          "content": "<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <!-- special targets file for ExampleMod. Fits in place of the one in /Mod Sources -->  \n  <Import Project=\"src/WorkspaceInfo.targets\" />\n  <Import Project=\"$(tModLoaderSteamPath)/tMLMod.targets\" />\n  \n  <ItemGroup>\n    <!-- unfortunately VS Goto Defintion doesn't work on pdb source paths, only direct project references -->\n    <Reference Remove=\"$(tMLSteamPath)**/FNA.dll\"/>\n    <Reference Remove=\"$(tMLSteamPath)**/ReLogic.dll\"/>\n    <Reference Remove=\"$(tMLSteamPath)**/tModLoader.dll\"/>\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)FNA/FNA.Core.csproj\" />\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)src/tModLoader/ReLogic/ReLogic.csproj\" />\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)src/tModLoader/Terraria/Terraria.csproj\" />\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "tModPorter",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}