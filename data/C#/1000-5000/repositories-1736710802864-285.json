{
  "metadata": {
    "timestamp": 1736710802864,
    "page": 285,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "34736384/genshin-fps-unlock",
      "stars": 2850,
      "defaultBranch": "netcore",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.095703125,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Oo]ut/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n*.dll\n*.lib\n*.exp"
        },
        {
          "name": "GNUmakefile",
          "type": "blob",
          "size": 0.5625,
          "content": "release : unlockfps_nc/bin/ReleaseMin/net8.0-windows/win-x64/publish/unlockfps_nc.exe\n\nUnlockerStub/UnlockerStub.dll :\n\tmake -C $(@D)\n\nunlockfps_nc/Resources/%.dll : UnlockerStub/%.dll\n\tcp $^ $@\n\nunlockfps_nc/bin/%/net8.0-windows/win-x64/publish/unlockfps_nc.exe : unlockfps_nc/unlockfps_nc.csproj unlockfps_nc/Resources/UnlockerStub.dll\n\tdotnet publish $< -c $* -r win-x64 -f net8.0-windows --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=false\n\nclean :\n\trm -rf UnlockerStub/UnlockerStub.dll unlockfps_nc/Resources/UnlockerStub.dll.dll unlockfps_nc/bin\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2024 34736384\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.41796875,
          "content": "\n# Genshin Impact FPS Unlocker\n - This tool helps you to unlock the 60 fps limit in the game\n - This is an external program which uses **WriteProcessMemory** to write the desired fps to the game\n - Handle protection bypass is already included\n - Does not require a driver for R/W access\n - Supports OS and CN version\n - Should work for future updates\n - If the source needs to be updated, I'll try to do it as soon as possible\n - You can download the compiled binary over at '[Release](https://github.com/34736384/genshin-fps-unlock/releases)' if you don't want to compile it yourself\n - Free code signing provided by [SignPath.io](https://signpath.io/)\n ## Compiling\n - Use Visual Studio 2022 Community Edition to compile\n\n ### Cross Compiling on GNU/Linux\n You need [dotnet-8 SDK for Linux](https://dotnet.microsoft.com/en-us/download/dotnet) for .NET apps and x86_64-w64-mingw32 tool-chain for compiling the UnlockerStub to dll. Take Debian as an example, `apt install mingw-w64` installs the MinGW tool-chain. Finally, use `make` to build.\n\n ## Usage\n - Make sure you have the [.NET Desktop Runtime 8.0.0](https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-desktop-8.0.0-windows-x64-installer) (Usually it should come installed)\n - Run the exe and click 'Start Game'\n - If it is your first time running, unlocker will attempt to find your game through the registry. If it fails, then it will ask you to either browse or run the game.\n - Place the compiled exe anywhere you want (except for the game folder)\n - Make sure your game is closed—the unlocker will automatically start the game for you\n - Run the exe as administrator, and leave the exe running\n >It requires adminstrator because the game needs to be started by the unlocker and the game requires such permission\n - To load other third-party plugins, go to `Options->Settings->DLLs` and click add\n\n## Version 3.0.0 Changes\n - Rewritten the project in .NET 8\n - Added a launch option to use mobile UI (for streaming from mobile devices or touchscreen laptops)\n ## Notes\n - HoYoverse (miHoYo) is well aware of this tool, and you will not get banned for using **ONLY** fps unlock.\n - If you are using other third-party plugins, you are doing it at your own risk.\n - Any artifacts from unlocking fps (e.g. stuttering) is **NOT** a bug of the unlocker\n\n# 原神解锁FPS限制\n\n - 工作原理类似于外部辅助，通过**WriteProcessMemory**把FPS数值写进游戏\n - 不需要通过驱动进行读写操作\n - 支持国服和外服\n - 理论上支持后续版本，不需要更新源码\n - 如果需要更新我会尽快更新\n\n## 编译\n - 用VS2022编译\n\n### GNU/Linux 上交叉编译\n见 [Cross Compiling on GNU/Linux](#cross-compiling-on-gnulinux)\n\n## 食用指南\n - 运行前确保系统已安装[.NET Desktop Runtime 8.0.0](https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-desktop-8.0.0-windows-x64-installer) (一般来说系统自带就有)\n - 第一次运行的话先以管理员运行，解锁器会尝试通过注册表寻找游戏路经，如果找不到的话会提示你浏览游戏位置或者开启游戏\n - 解锁器放哪都行\n - 运行之前确保游戏是关闭的\n - 用管理员运行解锁器\n - 解锁器不能关掉\n>使用管理员运行是因为游戏必须由解锁器启动，游戏本身就需要管理员权限了，所以负责启动的也是需要的\n\n## 3.0.0 版本更新\n - 用.NET 8重写了项目\n - 添加了一个启动项，可以以移动端UI启动\n\n"
        },
        {
          "name": "UnlockerStub",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.0458984375,
          "content": "version: 1.0.{build}\nbranches:\n  only:\n  - netcore\nskip_tags: true\nskip_branch_with_pr: true\nimage: Visual Studio 2022\nclone_folder: C:\\projects\\genshin-fps-unlock\ninstall:\n- ps: dotnet restore\nbuild_script:\n- ps: >-\n    msbuild UnlockerStub\\UnlockerStub.vcxproj /p:Configuration=Release /p:Platform=x64\n\n    Copy-Item -Path \"C:\\projects\\genshin-fps-unlock\\UnlockerStub\\unlockfps_nc\\Resources\\UnlockerStub.dll\" -Destination \"C:\\projects\\genshin-fps-unlock\\unlockfps_nc\\Resources\\UnlockerStub.dll\" -Force\n\n    dotnet publish unlockfps_nc\\unlockfps_nc.csproj -c ReleaseMin -r win-x64 -f net8.0-windows --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=false\nartifacts:\n- path: unlockfps_nc\\bin\\ReleaseMin\\net8.0-windows\\win-x64\\publish\\**\\*.exe\ndeploy:\n- provider: Webhook\n  url: https://app.signpath.io/API/v1/9aaa881d-b8d0-4e48-800c-53215f1c8198/Integrations/AppVeyor?ProjectSlug=genshin-fps-unlock&SigningPolicySlug=release-signing\n  authorization:\n    secure: LJqK7hw1sX5isXvSGUCegEbtwm39QW2Nf2NCPOFhJBDNluQT0968km8XT/3dHgzcxGuzTq8ZxF0WoubcT7u9vg==\n"
        },
        {
          "name": "unlockfps_nc.sln",
          "type": "blob",
          "size": 4.099609375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.8.34330.188\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"unlockfps_nc\", \"unlockfps_nc\\unlockfps_nc.csproj\", \"{AB706C74-000D-4A43-909C-D0EE906003B8}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D} = {517821E2-89AD-4EA4-B788-E8948BF27D8D}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"UnlockerStub\", \"UnlockerStub\\UnlockerStub.vcxproj\", \"{517821E2-89AD-4EA4-B788-E8948BF27D8D}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tDebug|x64 = Debug|x64\n\t\tDebug|x86 = Debug|x86\n\t\tRelease|Any CPU = Release|Any CPU\n\t\tRelease|x64 = Release|x64\n\t\tRelease|x86 = Release|x86\n\t\tReleaseMin|Any CPU = ReleaseMin|Any CPU\n\t\tReleaseMin|x64 = ReleaseMin|x64\n\t\tReleaseMin|x86 = ReleaseMin|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|x64.ActiveCfg = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|x64.Build.0 = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|x86.ActiveCfg = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Debug|x86.Build.0 = Debug|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|x64.ActiveCfg = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|x64.Build.0 = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|x86.ActiveCfg = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.Release|x86.Build.0 = Release|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|Any CPU.ActiveCfg = ReleaseMin|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|Any CPU.Build.0 = ReleaseMin|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|x64.ActiveCfg = ReleaseMin|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|x64.Build.0 = ReleaseMin|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|x86.ActiveCfg = ReleaseMin|Any CPU\n\t\t{AB706C74-000D-4A43-909C-D0EE906003B8}.ReleaseMin|x86.Build.0 = ReleaseMin|Any CPU\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|Any CPU.ActiveCfg = Debug|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|Any CPU.Build.0 = Debug|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|x64.ActiveCfg = Debug|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|x64.Build.0 = Debug|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|x86.ActiveCfg = Debug|Win32\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Debug|x86.Build.0 = Debug|Win32\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|Any CPU.ActiveCfg = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|Any CPU.Build.0 = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|x64.ActiveCfg = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|x64.Build.0 = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|x86.ActiveCfg = Release|Win32\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.Release|x86.Build.0 = Release|Win32\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|Any CPU.ActiveCfg = ReleaseMin|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|Any CPU.Build.0 = ReleaseMin|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|x64.ActiveCfg = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|x64.Build.0 = Release|x64\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|x86.ActiveCfg = ReleaseMin|Win32\n\t\t{517821E2-89AD-4EA4-B788-E8948BF27D8D}.ReleaseMin|x86.Build.0 = ReleaseMin|Win32\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {BA9973A2-2E7A-4D69-A824-D9A1B1CCF56E}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "unlockfps_nc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}