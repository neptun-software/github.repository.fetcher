{
  "metadata": {
    "timestamp": 1736710772333,
    "page": 235,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/NavMeshComponents",
      "stars": 3033,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1875,
          "content": "*         text=auto\n# Text files\n*.cs diff=csharp text\n*.txt     text\n*.mat     text\n*.shader  text\n*.meta    text\n*.md5     text\n*.compute text\n*.md      text\n*/ProjectSettings/*.asset text\n\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.193359375,
          "content": "**/Library/\n**/Temp/\n**/obj/\n\n**/.vscode/\n**/.vs\n\n**/Assets/Plugins/*\n**/Assets/Plugins.meta\n\n*.idea\n*.csproj\n*.sln\n*.suo\n*.userprefs\n*.app\n*.VC.*\n.DS_Store\n*~\n*.swp\n\n.vs/\nbuild/*\n*.rsp\n*.pyc\n/Logs\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016, Unity Technologies\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.216796875,
          "content": "# Status of the project\n\n## Development\nThis project is now developed as part of the [AI Navigation](https://docs.unity3d.com/Packages/com.unity.ai.navigation@latest) package. Please add that package to your project in order to continue building the NavMesh using these components and to get access to newer versions.\n\nThe content of this repository remains available for older Unity versions but no further development will be made here.\n\n## Questions and feature requests\nPlease use the [AI & Navigation Previews](https://forum.unity.com/forums/ai-navigation-previews.122/) section of the forum to discuss about the **AI Navigation** package and to stay informed about major releases.\n\nYou can learn about the future developments of **AI Navigation** and also share your feature requests in the [Unity Platform Roadmap](https://unity.com/roadmap/unity-platform/navigation-game-ai) portal.\n\n## Bug Reporting\nThe _Issues_ section of this repository is closed. Please use the [Unity built-in report system](https://unity3d.com/unity/qa/bug-reporting \n) to report any bugs that you find in the **AI Navigation** package.\n\n# Using This Repository\n\n## Components for Runtime NavMesh Building\n\nHere we introduce four components for the navigation system:\n\n* __NavMeshSurface__ – for building and enabling a NavMesh surface for one agent type.\n* __NavMeshModifier__ – affects the NavMesh generation of NavMesh area types, based on the transform hierarchy.\n* __NavMeshModifierVolume__ – affects the NavMesh generation of NavMesh area types, based on volume.\n* __NavMeshLink__ – connects same or different NavMesh surfaces for one agent type.\n\nThese components comprise the high level controls for building and using NavMeshes at runtime as well as edit time.\n\nDetailed information can be found in the [Documentation](Documentation) section or in the [NavMesh building components](https://docs.unity3d.com/Manual/NavMesh-BuildingComponents.html) section of the Unity Manual.\n\n## How To Get Started\n\nDownload and install Unity 5.6 or newer.\n\nClone or download this repository and open the project in Unity.\nAlternatively, you can copy the contents of `Assets/NavMeshComponents` to an existing project.\n\nMake sure to select a branch of the repository that matches the Unity version:\n> [master](../../tree/master) for 2020.3-LTS, [2019.3](../../tree/2019.3) for up to 2019.4-LTS, [2018.3](../../tree/2018.3) for up to 2018.4-LTS and 2019.2, [2018.2](../../tree/2018.2), [2018.1](../../tree/2018.1), [2017.2](../../tree/2017.2) for up to 2017.4-LTS, [2017.1](../../tree/2017.1), [5.6](../../tree/5.6).\n\nAdditional examples are available in the `Assets/Examples` folder.\nThe examples are provided \"as is\". They are neither generic nor robust, but serve as inspiration.\n\n_Note: During the beta cycle features and API are subject to change.\\\n**Make sure to backup an existing project before opening it with a beta build.**_\n\n## FAQ\n\nQ: Can I bake a NavMesh at runtime?  \nA: Yes.\n\nQ: Can I use NavMesh'es for more than one agent size?  \nA: Yes.\n\nQ: Can I put a NavMesh in a prefab?  \nA: Yes - with some limitations.\n\nQ: How do I connect two NavMesh surfaces?  \nA: Use the NavMeshLink to connect the two sides.\n\nQ: How do I query the NavMesh for one specific size of agent?  \nA: Use the NavMeshQuery filter when querying the NavMesh.\n\nQ: What's the deal with the 'DefaultExecutionOrder' attribute?  \nA: It gives a way of controlling the order of execution of scripts - specifically it allows us to build a NavMesh before the\n(native) NavMeshAgent component is enabled.\n\nQ: What's the use of the new delegate 'NavMesh.onPreUpdate'?  \nA: It allows you to hook in to controlling the NavMesh data and links set up before the navigation update loop is called on the native side.\n\nQ: Can I do moving NavMesh platforms?  \nA: No - new API is required for consistently moving platforms carrying agents.\n\nQ: Is OffMeshLink now obsolete?  \nA: No - you can still use OffMeshLink - however you'll find that NavMeshLink is more flexible and have less overhead.\n\nQ: What happened to HeightMesh and Auto Generated OffMeshLinks?  \nA: They're not supported in the new NavMesh building feature. HeightMesh will be added at some point. Auto OffMeshLink generation will possibly be replaced with a solution that allows better control of placement.\n"
        }
      ]
    }
  ]
}