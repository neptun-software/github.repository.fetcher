{
  "metadata": {
    "timestamp": 1736710824021,
    "page": 329,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thomhurst/TUnit",
      "stars": 2675,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.076171875,
          "content": "root = true\n\n[*.{cs,vb}]\ndotnet_diagnostic.TUnitAssertions0003.severity=silent"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.23046875,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.72265625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Mono auto generated files\nmono_crash.*\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Ww][Ii][Nn]32/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n[Ll]ogs/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUnit\n*.VisualState.xml\nTestResult.xml\nnunit-*.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# ASP.NET Scaffolding\nScaffoldingReadMe.txt\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.tlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Coverlet is a free, cross platform Code Coverage Tool\ncoverage*.json\ncoverage*.xml\ncoverage*.info\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# NuGet Symbol Packages\n*.snupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n*.appxbundle\n*.appxupload\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- [Bb]ackup.rdl\n*- [Bb]ackup ([0-9]).rdl\n*- [Bb]ackup ([0-9][0-9]).rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio 6 auto-generated project file (contains which files were open etc.)\n*.vbp\n\n# Visual Studio 6 workspace and project file (working project files containing files to include in project)\n*.dsw\n*.dsp\n\n# Visual Studio 6 technical files\n*.ncb\n*.aps\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# Visual Studio History (VSHistory) files\n.vshistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Backup folder for Package Reference Convert tool in Visual Studio 2017\nMigrationBackup/\n\n# Ionide (cross platform F# VS Code tools) working folder\n.ionide/\n\n# Fody - auto-generated XML schema\nFodyWeavers.xsd\n\n# VS Code files for those working on multiple tools\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace\n\n# Local History for Visual Studio Code\n.history/\n\n# Windows Installer files from build outputs\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# JetBrains Rider\n*.sln.iml\n\n# Generated Code\n*.g.cs"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 3.37109375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project>\n  <PropertyGroup>\n    <TargetFrameworks Condition=\"'$(SDK_VERSION)' == ''\">net8.0;net9.0</TargetFrameworks>\n    <!--suppress MsbuildTargetFrameworkTagInspection -->\n    <TargetFrameworks Condition=\"'$(SDK_VERSION)' == 'net8'\">net8.0</TargetFrameworks>\n    <TargetFrameworks Condition=\"'$(SDK_VERSION)' == 'net9'\">net8.0;net9.0</TargetFrameworks>\n\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n    <LangVersion>latest</LangVersion>\n    <TrimmerSingleWarn>false</TrimmerSingleWarn>\n    <NoWarn>NU1507;NU1903;CS9107</NoWarn>\n    <BuildTransitivePath>buildTransitive/$(TargetFramework)/</BuildTransitivePath>\n    <BuildPath>build/netstandard2.0</BuildPath>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"$(MSBuildProjectName.StartsWith('TUnit.Analyzers.Roslyn'))\">\n    <TargetFrameworks>netstandard2.0</TargetFrameworks>\n    <AssemblyName>TUnit.Analyzers</AssemblyName>\n    <RootNamespace>TUnit.Analyzers</RootNamespace>\n    <IsPackable>false</IsPackable>\n    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"$(MSBuildProjectName.StartsWith('TUnit.Core.SourceGenerator.Roslyn'))\">\n    <TargetFrameworks>netstandard2.0</TargetFrameworks>\n    <AssemblyName>TUnit.Core.SourceGenerator</AssemblyName>\n    <RootNamespace>TUnit.Core.SourceGenerator</RootNamespace>\n    <IsPackable>false</IsPackable>\n    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <AssemblyAttribute Include=\"System.Runtime.CompilerServices.InternalsVisibleToAttribute\">\n      <_Parameter1>TUnit.Engine</_Parameter1>\n    </AssemblyAttribute>\n        <AssemblyAttribute Include=\"System.Runtime.CompilerServices.InternalsVisibleToAttribute\">\n      <_Parameter1>TUnit.UnitTests</_Parameter1>\n    </AssemblyAttribute>\n  </ItemGroup>\n\n  <PropertyGroup>\n    <CurrentYear>$([System.DateTime]::Now.ToString(\"yyyy\"))</CurrentYear>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\n    <Copyright>Copyright (c) Tom Longhurst $(CurrentYear)</Copyright>\n    <PackageReadmeFile>README.md</PackageReadmeFile>\n    <PackageProjectUrl>https://github.com/thomhurst/TUnit</PackageProjectUrl>\n    <Description>A .NET Testing Framework</Description>\n    <Authors>Tom Longhurst</Authors>\n    <SymbolPackageFormat>snupkg</SymbolPackageFormat>\n    <PackageIcon>logo.png</PackageIcon>\n    <PublishRepositoryUrl>true</PublishRepositoryUrl>\n    <EmbedUntrackedSources>true</EmbedUntrackedSources>\n    <PackageTags>testing;unit;integration;component;test;assert;tester;framework</PackageTags>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <RoslynVersion Condition=\"'$(RoslynVersion)' == ''\">4.7</RoslynVersion>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <IsTestingPlatformApplication Condition=\"'$(IsTestingPlatformApplication)' == ''\">false</IsTestingPlatformApplication>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"Microsoft.SourceLink.GitHub\" PrivateAssets=\"All\" />\n  </ItemGroup>\n\n  <PropertyGroup Condition=\"'$(GITHUB_ACTIONS)' == 'true'\">\n    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Include=\"$(MSBuildThisFileDirectory)README.md\" Pack=\"true\" PackagePath=\"\\\" />\n    <None Include=\"$(MSBuildThisFileDirectory)assets/logo.png\" Pack=\"true\" PackagePath=\"\\\" />\n  </ItemGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 2.291015625,
          "content": "<Project>\n  <Import\n    Condition=\"('$(IsLibraryPackage)' == 'true' or '$(IsLibraryTestProject)' == 'true') and '$(EnablePolyfill)' != 'false'\"\n    Project=\"$(MSBuildThisFileDirectory)Polyfill.props\" />\n\n  <PropertyGroup>\n    <TargetFrameworks Condition=\"'$(IsLibraryPackage)' == 'true'\">netstandard2.0;net8.0;net9.0</TargetFrameworks>\n    <TargetFrameworks Condition=\"'$(IsLibraryTestProject)' == 'true'\">net472;net8.0;net9.0</TargetFrameworks>\n  </PropertyGroup>\n  <PropertyGroup Condition=\"'$(IsTestingPlatformApplication)' == 'true'\">\n    <OutputType>Exe</OutputType>\n    <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>\n    <TestingPlatformShowTestsFailure>true</TestingPlatformShowTestsFailure>\n    <TestingPlatformCaptureOutput>false</TestingPlatformCaptureOutput>\n    <IsTestProject>true</IsTestProject>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <DefineConstants Condition=\"$(RoslynVersion) >= 4.7\">$(DefineConstants);ROSLYN4_7_OR_GREATER</DefineConstants>\n    <EnableTrimAnalyzer Condition=\"$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0'))\">true</EnableTrimAnalyzer>\n  </PropertyGroup>\n\n  <ItemGroup Condition=\"'$(IsTestingPlatformApplication)' == 'true'\">\n    <Using Include=\"TUnit.Core.HookType\" Static=\"True\" />\n    <Using Include=\"TUnit.Core\" />\n\n    <ProjectReference Include=\"..\\TUnit.Engine\\TUnit.Engine.csproj\" />\n    <ProjectReference Include=\"..\\TUnit.Assertions\\TUnit.Assertions.csproj\" />\n    <PackageReference Include=\"Microsoft.Testing.Platform.MSBuild\" />\n\n    <ProjectReference\n      Include=\"$(MSBuildThisFileDirectory)TUnit.Core.SourceGenerator\\TUnit.Core.SourceGenerator.csproj\"\n      OutputItemType=\"Analyzer\" ReferenceOutputAssembly=\"false\" />\n    <ProjectReference Include=\"$(MSBuildThisFileDirectory)TUnit.Analyzers\\TUnit.Analyzers.csproj\"\n      OutputItemType=\"Analyzer\" ReferenceOutputAssembly=\"false\" />\n    <ProjectReference\n      Include=\"$(MSBuildThisFileDirectory)TUnit.Assertions.Analyzers\\TUnit.Assertions.Analyzers.csproj\"\n      OutputItemType=\"Analyzer\" ReferenceOutputAssembly=\"false\" />\n\n    <TestingPlatformBuilderHook Include=\"6ADF853A-6945-4A06-9A4B-D99BC1DC1094\">\n      <DisplayName>TUnit</DisplayName>\n      <TypeFullName>TUnit.Engine.Framework.TestingPlatformBuilderHook</TypeFullName>\n    </TestingPlatformBuilderHook>\n  </ItemGroup>\n</Project>"
        },
        {
          "name": "Directory.Packages.props",
          "type": "blob",
          "size": 4.3525390625,
          "content": "<Project>\n  <PropertyGroup>\n    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>\n  </PropertyGroup>\n  <ItemGroup>\n    <PackageVersion Include=\"AutoFixture\" Version=\"4.18.1\" />\n    <PackageVersion Include=\"BenchmarkDotNet\" Version=\"0.14.0\" />\n    <PackageVersion Include=\"coverlet.collector\" Version=\"6.0.3\" />\n    <PackageVersion Include=\"CliWrap\" Version=\"3.7.0\" />\n    <PackageVersion Include=\"EnumerableAsyncProcessor\" Version=\"2.0.6\" />\n    <PackageVersion Include=\"FluentAssertions\" Version=\"7.0.0\" />\n    <PackageVersion Include=\"FluentValidation.DependencyInjectionExtensions\" Version=\"11.11.0\" />\n    <PackageVersion Include=\"Humanizer\" Version=\"2.14.1\" />\n    <PackageVersion Include=\"MessagePack\" Version=\"3.1.1\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.Mvc.Testing\" Version=\"8.0.11\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.OpenApi\" Version=\"8.0.11\" />\n    <PackageVersion Include=\"Microsoft.AspNetCore.TestHost\" Version=\"8.0.11\" />\n    <PackageVersion Include=\"Microsoft.Bcl.AsyncInterfaces\" Version=\"9.0.0\" />\n    <PackageVersion Include=\"Microsoft.Build.Utilities.Core\" Version=\"17.12.6\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.11.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Common\" Version=\"4.7.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"4.7.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Analyzer.Testing\" Version=\"1.1.2\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.CodeFix.Testing\" Version=\"1.1.2\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.CodeRefactoring.Testing\" Version=\"1.1.2\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" Version=\"4.12.0\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.SourceGenerators.Testing\" Version=\"1.1.2\" />\n    <PackageVersion Include=\"Microsoft.CodeAnalysis.Workspaces.Common\" Version=\"4.7.0\" />\n    <PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"9.0.0\" />\n    <PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.12.0\" />\n    <PackageVersion Include=\"Microsoft.Playwright\" Version=\"1.49.0\" />\n    <PackageVersion Include=\"Microsoft.SourceLink.GitHub\" Version=\"8.0.0\" />\n    <PackageVersion Include=\"Microsoft.Testing.Extensions.CodeCoverage\" Version=\"17.13.1\" />\n    <PackageVersion Include=\"Microsoft.Testing.Extensions.TrxReport\" Version=\"1.4.3\" />\n    <PackageVersion Include=\"Microsoft.Testing.Extensions.TrxReport.Abstractions\" Version=\"1.4.3\" />\n    <PackageVersion Include=\"Microsoft.Testing.Platform\" Version=\"1.4.3\" />\n    <PackageVersion Include=\"Microsoft.Testing.Platform.MSBuild\" Version=\"1.4.3\" />\n    <PackageVersion Include=\"ModularPipelines.DotNet\" Version=\"2.42.228\" />\n    <PackageVersion Include=\"ModularPipelines.Git\" Version=\"2.42.228\" />\n    <PackageVersion Include=\"ModularPipelines.GitHub\" Version=\"2.42.228\" />\n    <PackageVersion Include=\"MSTest.TestAdapter\" Version=\"3.7.0\" />\n    <PackageVersion Include=\"MSTest.TestFramework\" Version=\"3.7.0\" />\n    <PackageVersion Include=\"NUnit\" Version=\"4.3.2\" />\n    <PackageVersion Include=\"NUnit.Analyzers\" Version=\"4.6.0\" />\n    <PackageVersion Include=\"NUnit3TestAdapter\" Version=\"4.6.0\" />\n    <PackageVersion Include=\"Polly\" Version=\"8.5.0\" />\n    <PackageVersion Include=\"Polyfill\" Version=\"7.12.0\" />\n    <PackageVersion Include=\"Sourcy.DotNet\" Version=\"0.0.66\" />\n    <PackageVersion Include=\"Sourcy.Git\" Version=\"0.0.66\" />\n    <PackageVersion Include=\"StreamJsonRpc\" Version=\"2.20.20\" />\n    <PackageVersion Include=\"System.CommandLine\" Version=\"2.0.0-beta4.22272.1\" />\n    <PackageVersion Include=\"System.Text.Json\" Version=\"8.0.5\" />\n    <PackageVersion Include=\"System.Threading.Tasks.Extensions\" Version=\"4.6.0\" />\n    <PackageVersion Include=\"Testcontainers.PostgreSql\" Version=\"4.1.0\" />\n    <PackageVersion Include=\"trxparser\" Version=\"0.5.0\" />\n    <PackageVersion Include=\"Verify.NUnit\" Version=\"28.8.1\" />\n    <PackageVersion Include=\"TUnit\" Version=\"0.6.89\" />\n    <PackageVersion Include=\"TUnit.Core\" Version=\"0.6.89\" />\n    <PackageVersion Include=\"TUnit.Assertions\" Version=\"0.6.89\" />\n    <PackageVersion Include=\"Verify.TUnit\" Version=\"28.8.1\" />\n    <PackageVersion Include=\"Vogen\" Version=\"6.0.0\" />\n    <PackageVersion Include=\"xunit\" Version=\"2.9.3\" />\n    <PackageVersion Include=\"xunit.runner.visualstudio\" Version=\"3.0.1\" />\n  </ItemGroup>\n</Project>\n"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.2939453125,
          "content": "mode: ContinuousDeployment\nstrategies:\n  - Mainline\nignore:\n  sha:\n    - e39ef8a0ed0d5e12e396e3c87d185ba7b0c512b0\n    - 9b0b1c0d80692dba7584905554cfb43c92e29782\n    - 7e0f59874705082e81a0d614abea2709a9f6a98e\n    - 0f32f64e21316fc908af0721864ab3dd1fcebb4b\n    - cc09c9b221e35d842bea687c96a1594a574b1fac"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2024 Tom Longhurst\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Polyfill.props",
          "type": "blob",
          "size": 0.4912109375,
          "content": "<Project>\n    <ItemGroup>\n        <PackageReference Include=\"Polyfill\">\n            <PrivateAssets>all</PrivateAssets>\n            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n        </PackageReference>\n    </ItemGroup>\n\n    <ItemGroup Condition=\"'$(TargetFrameworkIdentifier)'!='.NETCoreApp'\">\n        <PackageReference Include=\"System.Text.Json\" />\n        <PackageReference Include=\"System.Threading.Tasks.Extensions\" />\n    </ItemGroup>\n</Project>"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.4140625,
          "content": "<p align=\"center\">\n  <img src=\"assets/banner.png\" width=\"800\"/>\n  <a href=\"https://trendshift.io/repositories/11781\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/11781\" alt=\"thomhurst%2FTUnit | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n</p>\n\nA modern, flexible and fast testing framework for C#. With Native AOT and Trimmed Single File application support included! \n\nTUnit is designed to aid with all testing types:\n- Unit\n- Integration\n- Acceptance\n- and more!\n\n\n![GitHub Repo stars](https://img.shields.io/github/stars/thomhurst/TUnit) [![GitHub Sponsors](https://img.shields.io/github/sponsors/thomhurst)](https://github.com/sponsors/thomhurst)\n [![nuget](https://img.shields.io/nuget/v/TUnit.svg)](https://www.nuget.org/packages/TUnit/) [![NuGet Downloads](https://img.shields.io/nuget/dt/TUnit)](https://www.nuget.org/packages/TUnit/)\n ![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/thomhurst/TUnit/dotnet.yml) ![GitHub last commit (branch)](https://img.shields.io/github/last-commit/thomhurst/TUnit/main) ![License](https://img.shields.io/github/license/thomhurst/TUnit) \n\n## Documentation\n\nSee here: <https://thomhurst.github.io/TUnit/>\n\n## Modern and Fast\nTUnit leverages source generators to locate and register your tests as opposed to reflection. You'll have a slight bump in build time, but a speedier runtime.\n\nTUnit also builds upon the newer Microsoft.Testing.Platform, whereas most other frameworks you'll have used will use VSTest. The new platform was reconstructed from the ground up to address pain points, be more extensible, and be faster.\n\n## Hooks, Events and Lifecycles\nOne of the most powerful parts of TUnit is the information you have available to you because of the source generation and the events you can subscribe to.\nBecause tests are constructed at the point of discovery, and not at runtime, you know all your arguments, properties, etc. upfront.\n\nYou can then register to be notified about various events such as test registered (scheduled to run in this test session at some point in the future), test started, test finished, etc.\n\nSay we injected an external object into our tests:\nBy knowing how many tests are registered, we could count them up, and then on a test end event, we could decrease the count. When hitting 0, we know our object isn't going to be used by any other tests, so we can dispose of it. We know when we can handle the lifecycle, and this prevents it from living till the end of the test session where it could be hanging on to precious resources.\n\n## Built in Analyzers\nTUnit tries to help you write your tests correctly with analyzers. If something isn't quite right, an analyzer should tell you what's wrong.\n\n## IDE\n\nTUnit is built on top of the newer Microsoft.Testing.Platform, as opposed to the older VSTest platform. Because the infrastructure behind the scenes is new and different, you may need to enable some settings. This should just be a one time thing.\n\n### Visual Studio\n\nVisual Studio is supported. The \"Use testing platform server mode\" option must be selected in Tools > Manage Preview Features.\n\n<img src=\"/docs/static/img/visual-studio.png\" height=\"300px\">\n\n### Rider\n\nRider is supported. The [Enable Testing Platform support](https://www.jetbrains.com/help/rider/Reference__Options__Tools__Unit_Testing__VSTest.html) option must be selected in Settings > Build, Execution, Deployment > Unit Testing > VSTest.\n\n<img src=\"/docs/static/img/rider.png\" height=\"300px\">\n\n## VS Code\nVisual Studio Code is supported.\n\n- Install the extension Name: [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit)\n- Go to the C# Dev Kit extension's settings\n- Enable Dotnet > Test Window > Use Testing Platform Protocol\n\n<img src=\"/docs/static/img/visual-studio-code.png\" height=\"300px\">\n\n### CLI\n`dotnet` CLI - Fully supported. Tests should be runnable with `dotnet test`, `dotnet run`, `dotnet exec` or executing an executable directly. See the docs for more information!\n\n## Packages\n\n### TUnit.Core\nTo be used when you want to define re-useable components, such as a test library, but it wouldn't be run as its own test suite.\n\n### TUnit.Engine\nFor test suites. This contains the test execution logic and test adapter. Only install this on actual test projects you intend to run, not class libraries.\n\n### TUnit.Assertions\nThis is independent from the framework and can be used wherever - Even in other test frameworks. It is just an assertion library used to assert data is as you expect. It uses an asychronous syntax which may be different to other assertion libraries you may have used.\n\n### TUnit\nThis is a helper package to combine the above 3 packages. If you just want a standard test app where you can write, run and assert tests, just install this!\n\n### TUnit.Playwright\nThis provides you base classes, similarly to Microsoft.Playwright.NUnit or Microsoft.Playwright.MSTest, to automatically create and dispose of Playwright objects in tests, to make it easier for you to write tests without worrying about lifecycles or disposing. The base classes are named the same as the other libraries: `PageTest`,  `ContextTest`, `BrowserTest`, and `PlaywrightTest`.\n\n## Features\n\n- Native AOT / Trimmed Single File application support\n- Source generated tests\n- Property injection\n- Full async support\n- Parallel by default, with mechanisms to:\n    - Run specific tests completely on their own\n    - Run specific tests not in parallel with other specific tests\n    - Limit the parallel limit on a per-test, class or assembly level\n- Tests can depend on other tests to form chains, useful for if one test depends on state from another action. While not recommended for unit tests, this can be useful in integration testing where state matters\n- Easy to read assertions - though you're also free to use whichever assertion library you like\n- Injectable test data via classes, methods, compile-time args, or matrices\n- Hooks before and after: \n    - TestDiscover\n    - TestSession\n    - Assembly\n    - Class\n    - Test\n- Designed to avoid common pitfalls such as leaky test states\n- Dependency injection support ([See here](https://thomhurst.github.io/TUnit/docs/tutorial-extras/class-constructors))\n- Ability to view and interrogate metadata and results from various assembly/class/test context objects\n\n## Installation\n\n`dotnet add package TUnit --prerelease`\n\n## Example test\n\n```csharp\n    private static readonly TimeOnly Midnight = TimeOnly.FromTimeSpan(TimeSpan.Zero);\n    private static readonly TimeOnly Noon = TimeOnly.FromTimeSpan(TimeSpan.FromHours(12));\n    \n    [Test]\n    public async Task IsMorning()\n    {\n        var time = GetTime();\n\n        await Assert.That(time).IsAfterOrEqualTo(Midnight)\n            .And.IsBefore(Noon);\n    }\n```\n\nor with more complex test orchestration needs\n\n```csharp\n    [Before(Class)]\n    public static async Task ClearDatabase(ClassHookContext context) { ... }\n\n    [After(Class)]\n    public static async Task AssertDatabaseIsAsExpected(ClassHookContext context) { ... }\n\n    [Before(Test)]\n    public async Task CreatePlaywrightBrowser(TestContext context) { ... }\n\n    [After(Test)]\n    public async Task DisposePlaywrightBrowser(TestContext context) { ... }\n\n    [Retry(3)]\n    [Test, DisplayName(\"Register an account\")]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task Register(string username, string password) { ... }\n\n    [Repeat(5)]\n    [Test, DependsOn(nameof(Register))]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task Login(string username, string password) { ... }\n\n    [Test, DependsOn(nameof(Login), [typeof(string), typeof(string)])]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task DeleteAccount(string username, string password) { ... }\n\n    [Category(\"Downloads\")]\n    [Timeout(300_000)]\n    [Test, NotInParallel(Order = 1)]\n    public async Task DownloadFile1() { ... }\n\n    [Category(\"Downloads\")]\n    [Timeout(300_000)]\n    [Test, NotInParallel(Order = 2)]\n    public async Task DownloadFile2() { ... }\n\n    [Repeat(10)]\n    [Test]\n    [Arguments(1)]\n    [Arguments(2)]\n    [Arguments(3)]\n    [DisplayName(\"Go to the page numbered $page\")]\n    public async Task GoToPage(int page) { ... }\n\n    [Category(\"Cookies\")]\n    [Test, Skip(\"Not yet built!\")]\n    public async Task CheckCookies() { ... }\n\n    [Test, Explicit, WindowsOnlyTest, RetryHttpServiceUnavailable(5)]\n    [Property(\"Some Key\", \"Some Value\")]\n    public async Task Ping() { ... }\n\n    [Test]\n    [ParallelLimit<LoadTestParallelLimit>]\n    [Repeat(1000)]\n    public async Task LoadHomepage() { ... }\n\n    public static IEnumerable<(string Username, string Password)> GetAuthDetails()\n    {\n        yield return (\"user1\", \"password1\");\n        yield return (\"user2\", \"password2\");\n        yield return (\"user3\", \"password3\");\n    }\n\n    public class WindowsOnlyTestAttribute : SkipAttribute\n    {\n        public WindowsOnlyTestAttribute() : base(\"Windows only test\")\n        {\n        }\n\n        public override Task<bool> ShouldSkip(TestContext testContext)\n        {\n            return Task.FromResult(!OperatingSystem.IsWindows());\n        }\n    }\n\n    public class RetryHttpServiceUnavailableAttribute : RetryAttribute\n    {\n        public RetryHttpServiceUnavailableAttribute(int times) : base(times)\n        {\n        }\n\n        public override Task<bool> ShouldRetry(TestInformation testInformation, Exception exception, int currentRetryCount)\n        {\n            return Task.FromResult(exception is HttpRequestException { StatusCode: HttpStatusCode.ServiceUnavailable });\n        }\n    }\n\n    public class LoadTestParallelLimit : IParallelLimit\n    {\n        public int Limit => 50;\n    }\n```\n\n## Motivations\n\nTUnit is inspired by NUnit and xUnit - two of the most popular testing frameworks for .NET.\n\nIt aims to build upon the useful features of both while trying to address any pain points that they may have.\n\n[Read more here](https://thomhurst.github.io/TUnit/docs/comparison/framework-differences)\n\n## Prerelease\n\nYou'll notice that version 1.0 isn't out yet. While this framework is mostly feature complete, I'm waiting for a few things:\n\n- Full Rider support for all features\n- Full VS support for all features\n- Open to feedback on existing features\n- Open to ideas on new features\n\nAs such, the API may change. I'll try to limit this but it's a possibility.\n\n## Benchmark\n\n### Scenario: Building the test project\n\n#### macos-latest\n\n```\n\nBenchmarkDotNet v0.14.0, macOS Sonoma 14.7.2 (23H311) [Darwin 23.6.0]\nApple M1 (Virtual), 1 CPU, 3 logical and 3 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method       | Mean       | Error    | StdDev    | Median     |\n|------------- |-----------:|---------:|----------:|-----------:|\n| Build_TUnit  | 1,044.9 ms | 44.52 ms | 125.58 ms |   998.0 ms |\n| Build_NUnit  | 1,018.9 ms | 35.37 ms | 103.73 ms | 1,013.1 ms |\n| Build_xUnit  |   921.1 ms | 30.58 ms |  90.17 ms |   891.5 ms |\n| Build_MSTest |   878.6 ms | 24.58 ms |  70.53 ms |   866.0 ms |\n\n\n\n#### ubuntu-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Ubuntu 22.04.5 LTS (Jammy Jellyfish)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method       | Mean    | Error    | StdDev   |\n|------------- |--------:|---------:|---------:|\n| Build_TUnit  | 1.808 s | 0.0357 s | 0.0367 s |\n| Build_NUnit  | 1.467 s | 0.0148 s | 0.0131 s |\n| Build_xUnit  | 1.485 s | 0.0238 s | 0.0222 s |\n| Build_MSTest | 1.544 s | 0.0142 s | 0.0125 s |\n\n\n\n#### windows-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Windows 10 (10.0.20348.2966) (Hyper-V)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method       | Mean    | Error    | StdDev   |\n|------------- |--------:|---------:|---------:|\n| Build_TUnit  | 1.783 s | 0.0341 s | 0.0303 s |\n| Build_NUnit  | 1.476 s | 0.0188 s | 0.0167 s |\n| Build_xUnit  | 1.480 s | 0.0204 s | 0.0180 s |\n| Build_MSTest | 1.521 s | 0.0196 s | 0.0184 s |\n\n\n### Scenario: A single test that completes instantly (including spawning a new process and initialising the test framework)\n\n#### macos-latest\n\n```\n\nBenchmarkDotNet v0.14.0, macOS Sonoma 14.7.2 (23H311) [Darwin 23.6.0]\nApple M1 (Virtual), 1 CPU, 3 logical and 3 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean      | Error     | StdDev    |\n|---------- |----------:|----------:|----------:|\n| TUnit_AOT |  79.26 ms |  1.562 ms |  2.694 ms |\n| TUnit     | 526.39 ms | 10.462 ms | 24.454 ms |\n| NUnit     | 751.41 ms | 15.014 ms | 17.873 ms |\n| xUnit     | 757.84 ms | 14.838 ms | 12.390 ms |\n| MSTest    | 653.67 ms |  7.298 ms |  6.827 ms |\n\n\n\n#### ubuntu-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Ubuntu 22.04.5 LTS (Jammy Jellyfish)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean        | Error     | StdDev    |\n|---------- |------------:|----------:|----------:|\n| TUnit_AOT |    46.98 ms |  0.936 ms |  2.450 ms |\n| TUnit     |   893.03 ms | 17.395 ms | 29.064 ms |\n| NUnit     | 1,388.56 ms | 15.223 ms | 14.239 ms |\n| xUnit     | 1,439.61 ms | 17.600 ms | 15.602 ms |\n| MSTest    | 1,233.05 ms | 19.929 ms | 18.642 ms |\n\n\n\n#### windows-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Windows 10 (10.0.20348.2966) (Hyper-V)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean        | Error     | StdDev    |\n|---------- |------------:|----------:|----------:|\n| TUnit_AOT |    59.62 ms |  1.932 ms |  5.698 ms |\n| TUnit     |   835.03 ms | 16.602 ms | 21.588 ms |\n| NUnit     | 1,272.54 ms | 11.026 ms | 10.313 ms |\n| xUnit     | 1,313.92 ms | 14.510 ms | 12.863 ms |\n| MSTest    | 1,130.86 ms | 10.583 ms |  9.382 ms |\n\n\n### Scenario: A test that takes 50ms to execute, repeated 100 times (including spawning a new process and initialising the test framework)\n\n#### macos-latest\n\n```\n\nBenchmarkDotNet v0.14.0, macOS Sonoma 14.7.2 (23H311) [Darwin 23.6.0]\nApple M1 (Virtual), 1 CPU, 3 logical and 3 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), Arm64 RyuJIT AdvSIMD\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean        | Error     | StdDev    |\n|---------- |------------:|----------:|----------:|\n| TUnit_AOT |    242.5 ms |  12.94 ms |  37.74 ms |\n| TUnit     |    803.8 ms |  22.39 ms |  65.30 ms |\n| NUnit     | 14,070.6 ms | 278.80 ms | 408.66 ms |\n| xUnit     | 14,382.8 ms | 253.74 ms | 379.78 ms |\n| MSTest    | 14,446.8 ms | 283.31 ms | 525.13 ms |\n\n\n\n#### ubuntu-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Ubuntu 22.04.5 LTS (Jammy Jellyfish)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean        | Error     | StdDev    |\n|---------- |------------:|----------:|----------:|\n| TUnit_AOT |    78.70 ms |  1.553 ms |  2.126 ms |\n| TUnit     |   919.82 ms | 17.937 ms | 22.029 ms |\n| NUnit     | 6,486.41 ms | 16.518 ms | 15.451 ms |\n| xUnit     | 6,599.70 ms | 43.612 ms | 40.794 ms |\n| MSTest    | 6,477.08 ms | 30.653 ms | 28.673 ms |\n\n\n\n#### windows-latest\n\n```\n\nBenchmarkDotNet v0.14.0, Windows 10 (10.0.20348.2966) (Hyper-V)\nAMD EPYC 7763, 1 CPU, 4 logical and 2 physical cores\n.NET SDK 9.0.101\n  [Host]   : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n  .NET 9.0 : .NET 9.0.0 (9.0.24.52809), X64 RyuJIT AVX2\n\nJob=.NET 9.0  Runtime=.NET 9.0  \n\n```\n| Method    | Mean       | Error    | StdDev   |\n|---------- |-----------:|---------:|---------:|\n| TUnit_AOT |   128.0 ms |  2.88 ms |  8.50 ms |\n| TUnit     |   914.5 ms | 17.85 ms | 21.25 ms |\n| NUnit     | 7,522.3 ms | 28.45 ms | 26.61 ms |\n| xUnit     | 7,568.9 ms | 22.75 ms | 20.17 ms |\n| MSTest    | 7,445.8 ms | 25.07 ms | 22.23 ms |\n\n\n\n"
        },
        {
          "name": "README_Template.md",
          "type": "blob",
          "size": 10.267578125,
          "content": "<p align=\"center\">\n  <img src=\"assets/banner.png\" width=\"800\"/>\n  <a href=\"https://trendshift.io/repositories/11781\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/11781\" alt=\"thomhurst%2FTUnit | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n</p>\n\nA modern, flexible and fast testing framework for C#. With Native AOT and Trimmed Single File application support included! \n\nTUnit is designed to aid with all testing types:\n- Unit\n- Integration\n- Acceptance\n- and more!\n\n\n![GitHub Repo stars](https://img.shields.io/github/stars/thomhurst/TUnit) [![GitHub Sponsors](https://img.shields.io/github/sponsors/thomhurst)](https://github.com/sponsors/thomhurst)\n [![nuget](https://img.shields.io/nuget/v/TUnit.svg)](https://www.nuget.org/packages/TUnit/) [![NuGet Downloads](https://img.shields.io/nuget/dt/TUnit)](https://www.nuget.org/packages/TUnit/)\n ![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/thomhurst/TUnit/dotnet.yml) ![GitHub last commit (branch)](https://img.shields.io/github/last-commit/thomhurst/TUnit/main) ![License](https://img.shields.io/github/license/thomhurst/TUnit) \n\n## Documentation\n\nSee here: <https://thomhurst.github.io/TUnit/>\n\n## Modern and Fast\nTUnit leverages source generators to locate and register your tests as opposed to reflection. You'll have a slight bump in build time, but a speedier runtime.\n\nTUnit also builds upon the newer Microsoft.Testing.Platform, whereas most other frameworks you'll have used will use VSTest. The new platform was reconstructed from the ground up to address pain points, be more extensible, and be faster.\n\n## Hooks, Events and Lifecycles\nOne of the most powerful parts of TUnit is the information you have available to you because of the source generation and the events you can subscribe to.\nBecause tests are constructed at the point of discovery, and not at runtime, you know all your arguments, properties, etc. upfront.\n\nYou can then register to be notified about various events such as test registered (scheduled to run in this test session at some point in the future), test started, test finished, etc.\n\nSay we injected an external object into our tests:\nBy knowing how many tests are registered, we could count them up, and then on a test end event, we could decrease the count. When hitting 0, we know our object isn't going to be used by any other tests, so we can dispose of it. We know when we can handle the lifecycle, and this prevents it from living till the end of the test session where it could be hanging on to precious resources.\n\n## Built in Analyzers\nTUnit tries to help you write your tests correctly with analyzers. If something isn't quite right, an analyzer should tell you what's wrong.\n\n## IDE\n\nTUnit is built on top of the newer Microsoft.Testing.Platform, as opposed to the older VSTest platform. Because the infrastructure behind the scenes is new and different, you may need to enable some settings. This should just be a one time thing.\n\n### Visual Studio\n\nVisual Studio is supported. The \"Use testing platform server mode\" option must be selected in Tools > Manage Preview Features.\n\n<img src=\"/docs/static/img/visual-studio.png\" height=\"300px\">\n\n### Rider\n\nRider is supported. The [Enable Testing Platform support](https://www.jetbrains.com/help/rider/Reference__Options__Tools__Unit_Testing__VSTest.html) option must be selected in Settings > Build, Execution, Deployment > Unit Testing > VSTest.\n\n<img src=\"/docs/static/img/rider.png\" height=\"300px\">\n\n## VS Code\nVisual Studio Code is supported.\n\n- Install the extension Name: [C# Dev Kit](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit)\n- Go to the C# Dev Kit extension's settings\n- Enable Dotnet > Test Window > Use Testing Platform Protocol\n\n<img src=\"/docs/static/img/visual-studio-code.png\" height=\"300px\">\n\n### CLI\n`dotnet` CLI - Fully supported. Tests should be runnable with `dotnet test`, `dotnet run`, `dotnet exec` or executing an executable directly. See the docs for more information!\n\n## Packages\n\n### TUnit.Core\nTo be used when you want to define re-useable components, such as a test library, but it wouldn't be run as its own test suite.\n\n### TUnit.Engine\nFor test suites. This contains the test execution logic and test adapter. Only install this on actual test projects you intend to run, not class libraries.\n\n### TUnit.Assertions\nThis is independent from the framework and can be used wherever - Even in other test frameworks. It is just an assertion library used to assert data is as you expect. It uses an asychronous syntax which may be different to other assertion libraries you may have used.\n\n### TUnit\nThis is a helper package to combine the above 3 packages. If you just want a standard test app where you can write, run and assert tests, just install this!\n\n### TUnit.Playwright\nThis provides you base classes, similarly to Microsoft.Playwright.NUnit or Microsoft.Playwright.MSTest, to automatically create and dispose of Playwright objects in tests, to make it easier for you to write tests without worrying about lifecycles or disposing. The base classes are named the same as the other libraries: `PageTest`,  `ContextTest`, `BrowserTest`, and `PlaywrightTest`.\n\n## Features\n\n- Native AOT / Trimmed Single File application support\n- Source generated tests\n- Property injection\n- Full async support\n- Parallel by default, with mechanisms to:\n    - Run specific tests completely on their own\n    - Run specific tests not in parallel with other specific tests\n    - Limit the parallel limit on a per-test, class or assembly level\n- Tests can depend on other tests to form chains, useful for if one test depends on state from another action. While not recommended for unit tests, this can be useful in integration testing where state matters\n- Easy to read assertions - though you're also free to use whichever assertion library you like\n- Injectable test data via classes, methods, compile-time args, or matrices\n- Hooks before and after: \n    - TestDiscover\n    - TestSession\n    - Assembly\n    - Class\n    - Test\n- Designed to avoid common pitfalls such as leaky test states\n- Dependency injection support ([See here](https://thomhurst.github.io/TUnit/docs/tutorial-extras/class-constructors))\n- Ability to view and interrogate metadata and results from various assembly/class/test context objects\n\n## Installation\n\n`dotnet add package TUnit --prerelease`\n\n## Example test\n\n```csharp\n    private static readonly TimeOnly Midnight = TimeOnly.FromTimeSpan(TimeSpan.Zero);\n    private static readonly TimeOnly Noon = TimeOnly.FromTimeSpan(TimeSpan.FromHours(12));\n    \n    [Test]\n    public async Task IsMorning()\n    {\n        var time = GetTime();\n\n        await Assert.That(time).IsAfterOrEqualTo(Midnight)\n            .And.IsBefore(Noon);\n    }\n```\n\nor with more complex test orchestration needs\n\n```csharp\n    [Before(Class)]\n    public static async Task ClearDatabase(ClassHookContext context) { ... }\n\n    [After(Class)]\n    public static async Task AssertDatabaseIsAsExpected(ClassHookContext context) { ... }\n\n    [Before(Test)]\n    public async Task CreatePlaywrightBrowser(TestContext context) { ... }\n\n    [After(Test)]\n    public async Task DisposePlaywrightBrowser(TestContext context) { ... }\n\n    [Retry(3)]\n    [Test, DisplayName(\"Register an account\")]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task Register(string username, string password) { ... }\n\n    [Repeat(5)]\n    [Test, DependsOn(nameof(Register))]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task Login(string username, string password) { ... }\n\n    [Test, DependsOn(nameof(Login), [typeof(string), typeof(string)])]\n    [MethodDataSource(nameof(GetAuthDetails))]\n    public async Task DeleteAccount(string username, string password) { ... }\n\n    [Category(\"Downloads\")]\n    [Timeout(300_000)]\n    [Test, NotInParallel(Order = 1)]\n    public async Task DownloadFile1() { ... }\n\n    [Category(\"Downloads\")]\n    [Timeout(300_000)]\n    [Test, NotInParallel(Order = 2)]\n    public async Task DownloadFile2() { ... }\n\n    [Repeat(10)]\n    [Test]\n    [Arguments(1)]\n    [Arguments(2)]\n    [Arguments(3)]\n    [DisplayName(\"Go to the page numbered $page\")]\n    public async Task GoToPage(int page) { ... }\n\n    [Category(\"Cookies\")]\n    [Test, Skip(\"Not yet built!\")]\n    public async Task CheckCookies() { ... }\n\n    [Test, Explicit, WindowsOnlyTest, RetryHttpServiceUnavailable(5)]\n    [Property(\"Some Key\", \"Some Value\")]\n    public async Task Ping() { ... }\n\n    [Test]\n    [ParallelLimit<LoadTestParallelLimit>]\n    [Repeat(1000)]\n    public async Task LoadHomepage() { ... }\n\n    public static IEnumerable<(string Username, string Password)> GetAuthDetails()\n    {\n        yield return (\"user1\", \"password1\");\n        yield return (\"user2\", \"password2\");\n        yield return (\"user3\", \"password3\");\n    }\n\n    public class WindowsOnlyTestAttribute : SkipAttribute\n    {\n        public WindowsOnlyTestAttribute() : base(\"Windows only test\")\n        {\n        }\n\n        public override Task<bool> ShouldSkip(TestContext testContext)\n        {\n            return Task.FromResult(!OperatingSystem.IsWindows());\n        }\n    }\n\n    public class RetryHttpServiceUnavailableAttribute : RetryAttribute\n    {\n        public RetryHttpServiceUnavailableAttribute(int times) : base(times)\n        {\n        }\n\n        public override Task<bool> ShouldRetry(TestInformation testInformation, Exception exception, int currentRetryCount)\n        {\n            return Task.FromResult(exception is HttpRequestException { StatusCode: HttpStatusCode.ServiceUnavailable });\n        }\n    }\n\n    public class LoadTestParallelLimit : IParallelLimit\n    {\n        public int Limit => 50;\n    }\n```\n\n## Motivations\n\nTUnit is inspired by NUnit and xUnit - two of the most popular testing frameworks for .NET.\n\nIt aims to build upon the useful features of both while trying to address any pain points that they may have.\n\n[Read more here](https://thomhurst.github.io/TUnit/docs/comparison/framework-differences)\n\n## Prerelease\n\nYou'll notice that version 1.0 isn't out yet. While this framework is mostly feature complete, I'm waiting for a few things:\n\n- Full Rider support for all features\n- Full VS support for all features\n- Open to feedback on existing features\n- Open to ideas on new features\n\nAs such, the API may change. I'll try to limit this but it's a possibility.\n\n## Benchmark\n\n${{ BENCHMARK }}\n"
        },
        {
          "name": "TUnit.Analyzers.Roslyn44",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Analyzers.Roslyn47",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Analyzers.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Analyzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions.Analyzers.CodeFixers",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions.Analyzers.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions.Analyzers",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions.UnitTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Assertions",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Core.SourceGenerator.Roslyn44",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Core.SourceGenerator.Roslyn47",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Core.SourceGenerator.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Core.SourceGenerator",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Core",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Engine.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Example.WebProject.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Example.WebProject",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Pipeline",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Playwright.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.Playwright",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.RpcTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.TestProject.Library",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.TestProject",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.UnitTests",
          "type": "tree",
          "content": null
        },
        {
          "name": "TUnit.sln",
          "type": "blob",
          "size": 16.828125,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.12.35323.107\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit\", \"TUnit\\TUnit.csproj\", \"{45A310AD-151B-4E0F-8A2C-FC55D31B16BD}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Core\", \"TUnit.Core\\TUnit.Core.csproj\", \"{252CD110-7923-403F-9CCA-827E7352BF54}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.TestProject\", \"TUnit.TestProject\\TUnit.TestProject.csproj\", \"{2F9038D3-96AD-4D86-B06B-9E59C2B941A8}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions\", \"TUnit.Assertions\\TUnit.Assertions.csproj\", \"{1F1276E0-0DB5-4CD4-BF4B-74760E50B923}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Pipeline\", \"TUnit.Pipeline\\TUnit.Pipeline.csproj\", \"{527337F5-0F78-4141-901C-72EA81222AB1}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions.UnitTests\", \"TUnit.Assertions.UnitTests\\TUnit.Assertions.UnitTests.csproj\", \"{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Engine\", \"TUnit.Engine\\TUnit.Engine.csproj\", \"{6C960AFF-E533-4B61-A559-107CA9AA5E76}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Analyzers\", \"TUnit.Analyzers\\TUnit.Analyzers.csproj\", \"{68EE0A31-F949-445D-80D7-CD7160510655}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Analyzers.Tests\", \"TUnit.Analyzers.Tests\\TUnit.Analyzers.Tests.csproj\", \"{EE52CB5D-86DF-47E6-B105-F453A0B6FE66}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions.Analyzers\", \"TUnit.Assertions.Analyzers\\TUnit.Assertions.Analyzers.csproj\", \"{DBE82E71-AFC9-4289-B381-14AF86DBE72E}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Analyzers\", \"Analyzers\", \"{503DA9FA-045D-4910-8AF6-905E6048B1F1}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Examples\", \"Examples\", \"{0BA988BF-ADCE-4343-9098-B4EF65C43709}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Test\", \"Test\", \"{62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Build\", \"Build\", \"{D706CB1E-8E7E-4621-B036-4360D9D054C6}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions.Analyzers.Tests\", \"TUnit.Assertions.Analyzers.Tests\\TUnit.Assertions.Analyzers.Tests.csproj\", \"{230A0FFC-0EE8-475C-BED7-A4508C510EA7}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Core.SourceGenerator\", \"TUnit.Core.SourceGenerator\\TUnit.Core.SourceGenerator.csproj\", \"{BECB04A9-C731-4AC0-B76B-36382BFE77AA}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Core.SourceGenerator.Tests\", \"TUnit.Core.SourceGenerator.Tests\\TUnit.Core.SourceGenerator.Tests.csproj\", \"{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.TestProject.Library\", \"TUnit.TestProject.Library\\TUnit.TestProject.Library.csproj\", \"{227AFF42-1812-43CF-AF1D-B702029FA6AB}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Example.WebProject.Tests\", \"TUnit.Example.WebProject.Tests\\TUnit.Example.WebProject.Tests.csproj\", \"{7CCB4C96-7620-4EA9-9947-8D4A72D43963}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Example.WebProject\", \"TUnit.Example.WebProject\\TUnit.Example.WebProject.csproj\", \"{6F8FF958-8566-41B2-AD50-E1C52CBD70C9}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions.Tests\", \"TUnit.Assertions.Tests\\TUnit.Assertions.Tests.csproj\", \"{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Assertions.Analyzers.CodeFixers\", \"TUnit.Assertions.Analyzers.CodeFixers\\TUnit.Assertions.Analyzers.CodeFixers.csproj\", \"{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.UnitTests\", \"TUnit.UnitTests\\TUnit.UnitTests.csproj\", \"{541A8198-3D3B-4763-BD20-E39FB043ED07}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.RpcTests\", \"TUnit.RpcTests\\TUnit.RpcTests.csproj\", \"{BD0CDBA0-8A38-45A2-8581-043A13A34D67}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Libraries\", \"Libraries\", \"{1B56B580-4D59-4E83-9F80-467D58DADAC1}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Playwright\", \"TUnit.Playwright\\TUnit.Playwright.csproj\", \"{33C13E01-6FC8-4118-A4EB-7C63E6612248}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Playwright.Tests\", \"TUnit.Playwright.Tests\\TUnit.Playwright.Tests.csproj\", \"{EB92E3E9-A192-4DDD-9B10-4355D74BD119}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"SourceGenerators\", \"SourceGenerators\", \"{6F7B9D8E-4539-42BC-BE0B-E5BE70ED9473}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Core.SourceGenerator.Roslyn44\", \"TUnit.Core.SourceGenerator.Roslyn44\\TUnit.Core.SourceGenerator.Roslyn44.csproj\", \"{1EF4041E-CBD0-49C9-9D4B-56E16B653170}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Core.SourceGenerator.Roslyn47\", \"TUnit.Core.SourceGenerator.Roslyn47\\TUnit.Core.SourceGenerator.Roslyn47.csproj\", \"{C1320FF8-0AAB-4C41-A87B-841AFB0A512A}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Analyzers.Roslyn44\", \"TUnit.Analyzers.Roslyn44\\TUnit.Analyzers.Roslyn44.csproj\", \"{744CD312-B913-48E0-B917-531ED2A9A541}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Analyzers.Roslyn47\", \"TUnit.Analyzers.Roslyn47\\TUnit.Analyzers.Roslyn47.csproj\", \"{54D5F1A7-7979-4C07-8FE1-426233846018}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TUnit.Engine.Tests\", \"TUnit.Engine.Tests\\TUnit.Engine.Tests.csproj\", \"{E0E07E64-BC0A-489E-B562-2982F3836994}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{45A310AD-151B-4E0F-8A2C-FC55D31B16BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{45A310AD-151B-4E0F-8A2C-FC55D31B16BD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{45A310AD-151B-4E0F-8A2C-FC55D31B16BD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{45A310AD-151B-4E0F-8A2C-FC55D31B16BD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{252CD110-7923-403F-9CCA-827E7352BF54}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{252CD110-7923-403F-9CCA-827E7352BF54}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{252CD110-7923-403F-9CCA-827E7352BF54}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{252CD110-7923-403F-9CCA-827E7352BF54}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2F9038D3-96AD-4D86-B06B-9E59C2B941A8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2F9038D3-96AD-4D86-B06B-9E59C2B941A8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2F9038D3-96AD-4D86-B06B-9E59C2B941A8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2F9038D3-96AD-4D86-B06B-9E59C2B941A8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1F1276E0-0DB5-4CD4-BF4B-74760E50B923}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1F1276E0-0DB5-4CD4-BF4B-74760E50B923}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1F1276E0-0DB5-4CD4-BF4B-74760E50B923}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1F1276E0-0DB5-4CD4-BF4B-74760E50B923}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{527337F5-0F78-4141-901C-72EA81222AB1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{527337F5-0F78-4141-901C-72EA81222AB1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{527337F5-0F78-4141-901C-72EA81222AB1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{527337F5-0F78-4141-901C-72EA81222AB1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6C960AFF-E533-4B61-A559-107CA9AA5E76}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6C960AFF-E533-4B61-A559-107CA9AA5E76}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6C960AFF-E533-4B61-A559-107CA9AA5E76}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6C960AFF-E533-4B61-A559-107CA9AA5E76}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{68EE0A31-F949-445D-80D7-CD7160510655}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{68EE0A31-F949-445D-80D7-CD7160510655}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{68EE0A31-F949-445D-80D7-CD7160510655}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{68EE0A31-F949-445D-80D7-CD7160510655}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EE52CB5D-86DF-47E6-B105-F453A0B6FE66}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EE52CB5D-86DF-47E6-B105-F453A0B6FE66}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EE52CB5D-86DF-47E6-B105-F453A0B6FE66}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EE52CB5D-86DF-47E6-B105-F453A0B6FE66}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{DBE82E71-AFC9-4289-B381-14AF86DBE72E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DBE82E71-AFC9-4289-B381-14AF86DBE72E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DBE82E71-AFC9-4289-B381-14AF86DBE72E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DBE82E71-AFC9-4289-B381-14AF86DBE72E}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{230A0FFC-0EE8-475C-BED7-A4508C510EA7}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{230A0FFC-0EE8-475C-BED7-A4508C510EA7}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{230A0FFC-0EE8-475C-BED7-A4508C510EA7}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{230A0FFC-0EE8-475C-BED7-A4508C510EA7}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BECB04A9-C731-4AC0-B76B-36382BFE77AA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BECB04A9-C731-4AC0-B76B-36382BFE77AA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BECB04A9-C731-4AC0-B76B-36382BFE77AA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BECB04A9-C731-4AC0-B76B-36382BFE77AA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{227AFF42-1812-43CF-AF1D-B702029FA6AB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{227AFF42-1812-43CF-AF1D-B702029FA6AB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{227AFF42-1812-43CF-AF1D-B702029FA6AB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{227AFF42-1812-43CF-AF1D-B702029FA6AB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7CCB4C96-7620-4EA9-9947-8D4A72D43963}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7CCB4C96-7620-4EA9-9947-8D4A72D43963}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7CCB4C96-7620-4EA9-9947-8D4A72D43963}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7CCB4C96-7620-4EA9-9947-8D4A72D43963}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6F8FF958-8566-41B2-AD50-E1C52CBD70C9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6F8FF958-8566-41B2-AD50-E1C52CBD70C9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6F8FF958-8566-41B2-AD50-E1C52CBD70C9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6F8FF958-8566-41B2-AD50-E1C52CBD70C9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{541A8198-3D3B-4763-BD20-E39FB043ED07}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{541A8198-3D3B-4763-BD20-E39FB043ED07}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{541A8198-3D3B-4763-BD20-E39FB043ED07}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{541A8198-3D3B-4763-BD20-E39FB043ED07}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BD0CDBA0-8A38-45A2-8581-043A13A34D67}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BD0CDBA0-8A38-45A2-8581-043A13A34D67}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BD0CDBA0-8A38-45A2-8581-043A13A34D67}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BD0CDBA0-8A38-45A2-8581-043A13A34D67}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{33C13E01-6FC8-4118-A4EB-7C63E6612248}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{33C13E01-6FC8-4118-A4EB-7C63E6612248}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{33C13E01-6FC8-4118-A4EB-7C63E6612248}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{33C13E01-6FC8-4118-A4EB-7C63E6612248}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EB92E3E9-A192-4DDD-9B10-4355D74BD119}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EB92E3E9-A192-4DDD-9B10-4355D74BD119}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EB92E3E9-A192-4DDD-9B10-4355D74BD119}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EB92E3E9-A192-4DDD-9B10-4355D74BD119}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1EF4041E-CBD0-49C9-9D4B-56E16B653170}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1EF4041E-CBD0-49C9-9D4B-56E16B653170}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1EF4041E-CBD0-49C9-9D4B-56E16B653170}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1EF4041E-CBD0-49C9-9D4B-56E16B653170}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C1320FF8-0AAB-4C41-A87B-841AFB0A512A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C1320FF8-0AAB-4C41-A87B-841AFB0A512A}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C1320FF8-0AAB-4C41-A87B-841AFB0A512A}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C1320FF8-0AAB-4C41-A87B-841AFB0A512A}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{744CD312-B913-48E0-B917-531ED2A9A541}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{744CD312-B913-48E0-B917-531ED2A9A541}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{744CD312-B913-48E0-B917-531ED2A9A541}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{744CD312-B913-48E0-B917-531ED2A9A541}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{54D5F1A7-7979-4C07-8FE1-426233846018}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{54D5F1A7-7979-4C07-8FE1-426233846018}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{54D5F1A7-7979-4C07-8FE1-426233846018}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{54D5F1A7-7979-4C07-8FE1-426233846018}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E0E07E64-BC0A-489E-B562-2982F3836994}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E0E07E64-BC0A-489E-B562-2982F3836994}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E0E07E64-BC0A-489E-B562-2982F3836994}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E0E07E64-BC0A-489E-B562-2982F3836994}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{2F9038D3-96AD-4D86-B06B-9E59C2B941A8} = {0BA988BF-ADCE-4343-9098-B4EF65C43709}\n\t\t{527337F5-0F78-4141-901C-72EA81222AB1} = {D706CB1E-8E7E-4621-B036-4360D9D054C6}\n\t\t{2D9CBBB5-2FF5-44F4-8358-D39CD0BD19EA} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{68EE0A31-F949-445D-80D7-CD7160510655} = {503DA9FA-045D-4910-8AF6-905E6048B1F1}\n\t\t{EE52CB5D-86DF-47E6-B105-F453A0B6FE66} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{DBE82E71-AFC9-4289-B381-14AF86DBE72E} = {503DA9FA-045D-4910-8AF6-905E6048B1F1}\n\t\t{230A0FFC-0EE8-475C-BED7-A4508C510EA7} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{227AFF42-1812-43CF-AF1D-B702029FA6AB} = {0BA988BF-ADCE-4343-9098-B4EF65C43709}\n\t\t{7CCB4C96-7620-4EA9-9947-8D4A72D43963} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{6F8FF958-8566-41B2-AD50-E1C52CBD70C9} = {0BA988BF-ADCE-4343-9098-B4EF65C43709}\n\t\t{5BEC27F0-C33B-4BD9-A2D1-75E6158D35DE} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{D5342747-7A9C-480E-ACA9-D9D6DDBA14A9} = {503DA9FA-045D-4910-8AF6-905E6048B1F1}\n\t\t{541A8198-3D3B-4763-BD20-E39FB043ED07} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{BD0CDBA0-8A38-45A2-8581-043A13A34D67} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{2DE2A1F9-2A87-4FA8-8D62-0B60093DA604} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{33C13E01-6FC8-4118-A4EB-7C63E6612248} = {1B56B580-4D59-4E83-9F80-467D58DADAC1}\n\t\t{EB92E3E9-A192-4DDD-9B10-4355D74BD119} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\t\t{BECB04A9-C731-4AC0-B76B-36382BFE77AA} = {6F7B9D8E-4539-42BC-BE0B-E5BE70ED9473}\n\t\t{1EF4041E-CBD0-49C9-9D4B-56E16B653170} = {6F7B9D8E-4539-42BC-BE0B-E5BE70ED9473}\n\t\t{C1320FF8-0AAB-4C41-A87B-841AFB0A512A} = {6F7B9D8E-4539-42BC-BE0B-E5BE70ED9473}\n\t\t{744CD312-B913-48E0-B917-531ED2A9A541} = {503DA9FA-045D-4910-8AF6-905E6048B1F1}\n\t\t{54D5F1A7-7979-4C07-8FE1-426233846018} = {503DA9FA-045D-4910-8AF6-905E6048B1F1}\n\t\t{E0E07E64-BC0A-489E-B562-2982F3836994} = {62AD1EAF-43C4-4AC0-B9FA-CD59739B3850}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {109D285A-36B3-4503-BCDF-8E26FB0E2C5B}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "TUnit",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.1904296875,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"packageRules\": [\n    {\n      \"matchPackageNames\": [\"/ModularPipelines/\"],\n      \"groupName\": \"ModularPipelines\"\n    }\n  ]\n}\n"
        },
        {
          "name": "rider.png",
          "type": "blob",
          "size": 128.4677734375,
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}