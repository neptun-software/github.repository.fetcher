{
  "metadata": {
    "timestamp": 1736710738836,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hardkoded/puppeteer-sharp",
      "stars": 3470,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 3.0478515625,
          "content": "# This file is the top-most EditorConfig file\nroot = true\n\n# All Files\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.cs]\n# Language Conventions\ndotnet_style_qualification_for_field = false : error\ndotnet_style_qualification_for_property = false : error\ndotnet_style_qualification_for_method = false : error\ndotnet_style_qualification_for_event = false : error\n\ndotnet_style_predefined_type_for_locals_parameters_members = true : error\ndotnet_style_predefined_type_for_member_access = true : error\n\ndotnet_style_require_accessibility_modifiers = always\ncsharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion\ndotnet_style_readonly_field = true : suggestion\n\ndotnet_style_object_initializer = true : suggestion\ndotnet_style_collection_initializer = true : suggestion\ndotnet_style_explicit_tuple_names = true : suggestion\ndotnet_prefer_inferred_tuple_names = true : suggestion\ndotnet_prefer_inferred_anonymous_type_member_names = true : suggestion\n\ndotnet_style_coalesce_expression = true : suggestion\ndotnet_style_null_propagation = true : suggestion\n\ncsharp_style_var_for_built_in_types = true : suggestion\ncsharp_style_var_when_type_is_apparent = true : suggestion\ncsharp_style_var_elsewhere = true : suggestion\n\ncsharp_style_expression_bodied_methods = true : error\ncsharp_style_expression_bodied_constructors = true : error\ncsharp_style_expression_bodied_operators = true : error\ncsharp_style_expression_bodied_properties = true : error\ncsharp_style_expression_bodied_indexers = true : error\ncsharp_style_expression_bodied_accessors = true : error\n\ncsharp_style_pattern_matching_over_is_with_cast_check = true : error\ncsharp_style_pattern_matching_over_as_with_null_check = true : suggestion\n\ncsharp_style_inlined_variable_declaration = true : suggestion\n\ncsharp_prefer_simple_default_expression = true : error\ncsharp_style_deconstructed_variable_declaration = false : suggestion\n\ncsharp_style_pattern_local_over_anonymous_function = true : suggestion\ncsharp_style_throw_expression = true : suggestion\n\ncsharp_style_conditional_delegate_call = true : error\ncsharp_prefer_braces = true : error\n\n#Formatting conventions\ndotnet_sort_system_directives_first = true\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\n\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_preserve_single_line_statements = false\ncsharp_preserve_single_line_blocks = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0498046875,
          "content": "* text=auto eol=lf\n*.sh eol=lf\n*.sln text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.0791015625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\nThumbs.db\n\n# ignore local cert\n/lib/PuppeteerSharp.TestServer/testCert.cer\n/lib/PuppeteerSharp.Tests/Screenshots/\n\ndemos/PuppeteerSharpPdfDemo/google.pdf\ndemos/PuppeteerSharpPdfDemo/.local-chromium/\n/docs\nsamples/PupppeterSharpAspNetFrameworkSample/PupppeterSharpAspNetFrameworkSample/App_Data/\n# Visual Studio Code user config directory\n.vscode/\ntools/github-ops/.env\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.146484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at dariokondratiuk@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.048828125,
          "content": "# How to Contribute\n\nIf you are interested in contributing to Puppeteer Sharp, Thank you!\n\nCoding is not for lonely wolves. Welcome to the pack!\n\nThe project has a clear roadmap we want to follow. If you want to contribute, ask before submitting a PR. We will analyze if it’s the right moment to implement that feature or not.\nIf you don’t know what to do, ASK! We have many many things to implement :)\n\n## Getting setup\n\n1. Clone this repository using your favorite tool\n\n2. Create a self signed certificate:\n\nThe test server requires a self-signed certificate at this location: `.\\lib\\PuppeteerSharp.TestServer\\testCert.cer`\n\nYou can run this PowerShell script on Windows\n\n```\nNew-SelfSignedCertificate -Subject \"localhost\" -FriendlyName \"Puppeteer\" -CertStoreLocation \"cert:\\CurrentUser\\My\"\n\nGet-ChildItem -Path cert:\\CurrentUSer\\my | where { $_.friendlyname -eq \"Puppeteer\" } | Export-Certificate -FilePath C:\\projects\\puppeteer-sharp\\lib\\PuppeteerSharp.TestServer\\testCert.cer\n\n```\n\nOn MacOS, you can create an “SSL Server” certificate using the Keychain Access app and then export it to `.\\lib\\PuppeteerSharp.TestServer\\testCert.cer`\n\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on pull requests.\n\n## Code Style\n\nThough this list will change over time, these are the things to consider now:\n * [We are team spaces](https://www.youtube.com/watch?v=SsoOG6ZeyUI).\n * Every public API should have an XML documentation.\n * Try to follow the current style.\n * Don’t reinvent the wheel.\n\n## Commit Messages\n\nDon’t worry about commit messages or about how many commits your PR has. [Your PR will be squashed](https://help.github.com/articles/about-pull-request-merges/#squash-and-merge-your-pull-request-commits), so the commit message will be set at that time.\n\n## Writing Tests\n\n* Every feature should be accompanied by a test.\n* Every public api event/method should be accompanied by a test.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.1806640625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project>\n  <PropertyGroup>\n    <LangVersion>9</LangVersion>\n    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n  </PropertyGroup>\n</Project>"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 1.6787109375,
          "content": "## Looking for some help? Get priority support by [sponsoring the project](https://github.com/sponsors/hardkoded)/\n\n**Before you file a bug, have you:**\n\n* Tried upgrading to newest version of PuppeteerSharp, to see if your issue has already been resolved and released?\n* Checked existing open *and* closed [issues](https://github.com/kblok/puppeteer-sharp/issues?utf8=%E2%9C%93&q=is%3Aissue), to see if the issue has already been reported?\n* Tried reproducing your problem in a new isolated project?\n* Considered if this is a general question and not a bug?. For general questions please use [StackOverflow](https://stackoverflow.com/search?q=puppeteer-sharp).\n\n### Description\n\n[Description of the issue]\n\n### Complete minimal example reproducing the issue\n\nComplete means the code snippet can be copied into a unit test method in a fresh C# project and run.\nMinimal means it is stripped from code not related to reproducing the issue.\n\nE.g.\n\n```csharp\n// Arrange\nvar options = new LaunchOptions { /*  */ };\nvar chromiumRevision = BrowserFetcher.DefaultRevision;\nvar browser = await Puppeteer.LaunchAsync(options, chromiumRevision);\nvar page = browser.NewPageAsync();\n\n// Act\n...\n\n// Assert\n...\n```\n\n### Expected behavior:\n\n[What you expect to happen]\n\n### Actual behavior:\n\n[What actually happens]\n\n### Versions\n\n* Which version of PuppeteerSharp are you using?\n* Which .NET runtime and version are you targeting? E.g. .NET framework 4.6.1 or .NET Core 2.0.\n\n### Additional Information\n\nAny additional information, configuration or data that might be necessary to reproduce the issue.\n\n<!-- Love Puppeteer-Sharp? Please consider supporting our collective:\n👉  https://opencollective.com/puppeteer-sharp/donate -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "MIT License\n\nCopyright (c) 2017 Darío Kondratiuk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.6171875,
          "content": "# Puppeteer Sharp\n\n[![NuGet](https://buildstats.info/nuget/PuppeteerSharp)][NugetUrl]\n[![Build status](https://github.com/hardkoded/puppeteer-sharp/actions/workflows/dotnet.yml/badge.svg)][BuildUrl]\n[![Demo build status](https://github.com/hardkoded/puppeteer-sharp/actions/workflows/demo.yml/badge.svg)][BuildDemoUrl]\n[![CodeFactor](https://www.codefactor.io/repository/github/hardkoded/puppeteer-sharp/badge)][CodeFactorUrl]\n[![Backers](https://opencollective.com/hardkoded-projects/backers/badge.svg)][Backers]\n\n[NugetUrl]: https://www.nuget.org/packages/PuppeteerSharp/\n[BuildUrl]: https://github.com/hardkoded/puppeteer-sharp/actions/workflows/dotnet.yml\n[BuildDemoUrl]: https://github.com/hardkoded/puppeteer-sharp/actions/workflows/demo.yml\n[CodeFactorUrl]: https://www.codefactor.io/repository/github/hardkoded/puppeteer-sharp\n[Backers]: https://opencollective.com/hardkoded-projects\n\nPuppeteer Sharp is a .NET port of the official [Node.JS Puppeteer API](https://github.com/puppeteer/puppeteer).\n\n## Recent news\n\nPuppeteerSharp now supports AOT compilation! Check the [PuppeteerSharp 19 release notes!](https://github.com/hardkoded/puppeteer-sharp/releases/tag/v19.0.0).\n\n## Useful links\n\n* [API Documentation](http://www.puppeteersharp.com/api/index.html)\n* Slack channel [#puppeteer-sharp](https://www.hardkoded.com/goto/pptr-slack)\n* [StackOverflow](https://stackoverflow.com/search?q=puppeteer-sharp)\n* [Issues](https://github.com/hardkoded/puppeteer-sharp/issues?utf8=%E2%9C%93&q=is%3Aissue)\n* [Blog](https://www.hardkoded.com/)\n\n## Prerequisites\n\n* Puppeteer-Sharp comes in two flavors: a NetStandard 2.0 library for .NET Framework 4.6.1 and .NET Core 2.0 or greater and a .NET 8 version.\n* If you have issues running Chrome on Linux, the Puppeteer repo has a [great troubleshooting guide](https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md).\n* X-server is required on Linux.\n\n## How to Contribute and Provide Feedback\n\nSome of the best ways to contribute are to try things out file bugs and fix issues.\n\nIf you have an issue or a question:\n\n* Ask a question on [Stack Overflow](https://stackoverflow.com/search?q=puppeteer-sharp).\n* File a [new issue](https://github.com/hardkoded/puppeteer-sharp/issues/new).\n\n## Contributing Guide\n\nSee [this document](https://github.com/hardkoded/puppeteer-sharp/blob/master/CONTRIBUTING.md) for information on how to contribute.\n\n## Usage\n\n## Take screenshots\n\n<!-- snippet: screenshotasync_example -->\n<a id='snippet-screenshotasync_example'></a>\n```cs\nvar browserFetcher = new BrowserFetcher();\nawait browserFetcher.DownloadAsync();\nawait using var browser = await Puppeteer.LaunchAsync(\n    new LaunchOptions { Headless = true });\nawait using var page = await browser.NewPageAsync();\nawait page.GoToAsync(\"http://www.google.com\");\nawait page.ScreenshotAsync(outputFile);\n```\n<sup><a href='https://github.com/hardkoded/puppeteer-sharp/blob/master/lib/PuppeteerSharp.Tests/ScreenshotTests/PageScreenshotTests.cs#L54-L62' title='Snippet source file'>snippet source</a> | <a href='#snippet-screenshotasync_example' title='Start of snippet'>anchor</a></sup>\n<!-- endSnippet -->\n\nYou can also change the view port before generating the screenshot\n\n<!-- snippet: setviewportasync_example -->\n<a id='snippet-setviewportasync_example'></a>\n```cs\nawait Page.SetViewportAsync(new ViewPortOptions\n{\n    Width = 500,\n    Height = 500\n});\n```\n<sup><a href='https://github.com/hardkoded/puppeteer-sharp/blob/master/lib/PuppeteerSharp.Tests/ScreenshotTests/ElementHandleScreenshotTests.cs#L13-L19' title='Snippet source file'>snippet source</a> | <a href='#snippet-setviewportasync_example' title='Start of snippet'>anchor</a></sup>\n<!-- endSnippet -->\n\n### Generate PDF files\n\n<!-- snippet: pdfasync_example -->\n<a id='snippet-pdfasync_example'></a>\n```cs\nvar browserFetcher = new BrowserFetcher();\nawait browserFetcher.DownloadAsync();\nawait using var browser = await Puppeteer.LaunchAsync(new LaunchOptions { Headless = true });\nawait using var page = await browser.NewPageAsync();\nawait page.GoToAsync(\"http://www.google.com\"); // In case of fonts being loaded from a CDN, use WaitUntilNavigation.Networkidle0 as a second param.\nawait page.EvaluateExpressionHandleAsync(\"document.fonts.ready\"); // Wait for fonts to be loaded. Omitting this might result in no text rendered in pdf.\nawait page.PdfAsync(outputFile);\n```\n<sup><a href='https://github.com/hardkoded/puppeteer-sharp/blob/master/lib/PuppeteerSharp.Tests/PageTests/PdfTests.cs#L24-L34' title='Snippet source file'>snippet source</a> | <a href='#snippet-pdfasync_example' title='Start of snippet'>anchor</a></sup>\n<!-- endSnippet -->\n\n### Inject HTML\n\n<!-- snippet: setcontentasync_example -->\n<a id='snippet-setcontentasync_example'></a>\n```cs\nawait using var page = await browser.NewPageAsync();\nawait page.SetContentAsync(\"<div>My Receipt</div>\");\nvar result = await page.GetContentAsync();\n```\n<sup><a href='https://github.com/hardkoded/puppeteer-sharp/blob/master/lib/PuppeteerSharp.Tests/PageTests/SetContentTests.cs#L14-L20' title='Snippet source file'>snippet source</a> | <a href='#snippet-setcontentasync_example' title='Start of snippet'>anchor</a></sup>\n<!-- endSnippet -->\n\n### Evaluate Javascript\n\n<!-- snippet: evaluate_example -->\n<a id='snippet-evaluate_example'></a>\n```cs\nawait using var page = await browser.NewPageAsync();\nvar seven = await page.EvaluateExpressionAsync<int>(\"4 + 3\");\nvar someObject = await page.EvaluateFunctionAsync<JsonElement>(\"(value) => ({a: value})\", 5);\nConsole.WriteLine(someObject.GetProperty(\"a\").GetString());\n```\n<sup><a href='https://github.com/hardkoded/puppeteer-sharp/blob/master/lib/PuppeteerSharp.Tests/QuerySelectorTests/ElementHandleQuerySelectorEvalTests.cs#L17-L22' title='Snippet source file'>snippet source</a> | <a href='#snippet-evaluate_example' title='Start of snippet'>anchor</a></sup>\n<!-- endSnippet -->\n\n### Wait For Selector\n\n```cs\nusing (var page = await browser.NewPageAsync())\n{\n    await page.GoToAsync(\"http://www.spapage.com\");\n    await page.WaitForSelectorAsync(\"div.main-content\")\n    await page.PdfAsync(outputFile));\n}\n```\n\n### Wait For Function\n\n```cs\nusing (var page = await browser.NewPageAsync())\n{\n    await page.GoToAsync(\"http://www.spapage.com\");\n    var watchDog = page.WaitForFunctionAsync(\"()=> window.innerWidth < 100\");\n    await page.SetViewportAsync(new ViewPortOptions { Width = 50, Height = 50 });\n    await watchDog;\n}\n```\n\n### Connect to a remote browser\n\n```cs\nvar options = new ConnectOptions()\n{\n    BrowserWSEndpoint = $\"wss://www.externalbrowser.io?token={apikey}\"\n};\n\nvar url = \"https://www.google.com/\";\n\nusing (var browser = await PuppeteerSharp.Puppeteer.ConnectAsync(options))\n{\n    using (var page = await browser.NewPageAsync())\n    {\n        await page.GoToAsync(url);\n        await page.PdfAsync(\"wot.pdf\");\n    }\n}\n```\n\n## Sponsors\n\nA massive thanks to [JetBrains](https://www.jetbrains.com/?from=PuppeteerSharp) for a community Resharper and Rider license to use on this project.\n\n<div style=\"display:inline\">\n<img src=\"https://raw.githubusercontent.com/aaubry/YamlDotNet/master/Sponsors/aws-logo-small.png\" width=\"200\" height=\"200\"/>\n<img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/0/08/JetBrains_beam_logo.svg/1200px-JetBrains_beam_logo.svg.png\" width=\"200\" height=\"200\"/>\n</div>\n\nAnd a huge thanks to everyone who sponsors this project through [Github sponsors](https://github.com/sponsors/hardkoded):\n\n<!-- sponsors --><a href=\"https://github.com/tolgabalci\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;tolgabalci.png\" width=\"60px\" alt=\"User avatar: Tolga Balci\" /></a><a href=\"https://github.com/nogginbox\"><img src=\"https:&#x2F;&#x2F;github.com&#x2F;nogginbox.png\" width=\"60px\" alt=\"User avatar: Richard Garside\" /></a><!-- sponsors -->\n\n\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docfx_project",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mdsnippets.json",
          "type": "blob",
          "size": 0.111328125,
          "content": "{\n  \"Convention\": \"InPlaceOverwrite\",\n  \"UrlPrefix\": \"https://github.com/hardkoded/puppeteer-sharp/blob/master\"\n}\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}