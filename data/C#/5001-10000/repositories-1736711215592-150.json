{
  "metadata": {
    "timestamp": 1736711215592,
    "page": 150,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "anjoy8/Blog.Core",
      "stars": 5109,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.30859375,
          "content": "**/.classpath\n**/.dockerignore\n**/.env\n**/.git\n**/.gitignore\n**/.project\n**/.settings\n**/.toolstarget\n**/.vs\n**/.vscode\n**/*.*proj.user\n**/*.dbmdl\n**/*.jfm\n**/azds.yaml\n**/bin\n**/charts\n**/docker-compose*\n**/Dockerfile*\n**/node_modules\n**/npm-debug.log\n**/obj\n**/secrets.dev.yaml\n**/values.dev.yaml\nLICENSE\nREADME.md"
        },
        {
          "name": ".docs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.095703125,
          "content": "﻿[*.cs]\n\n# IDE0005: Using 指令是不需要的。\ndotnet_diagnostic.IDE0005.severity = warning\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.09375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# Visual Studio Code \n.vscode\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n# ASP.NET Core default setup: bower directory is configured as wwwroot/lib/ and bower restore is true\n**/wwwroot/lib/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database \nhealthchecksdb\n\n\n# wwwroot/images\n*images/\n.1YourProject\n.PublishFiles\n!.template.config/*.nupkg\n!Blog.Core.Webapi.Template.*.nupkg\nBlog.Core/WMBlog.db\n.docs/contents/.vuepress/dist/*\nBlog.Core/Blog.Core*.xml\nBlog.Core.Api/WMBlog.db\nBlog.Core.Api/wwwroot/ui/\nBlog.Core.Api/Logs\n*.db\n/Blog.Core.Api/WMBlog.db-journal\n.docs/.vuepress/dist/\nBlog.Core.Api/wwwroot/Temp/Sessions\n"
        },
        {
          "name": ".template.config",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Api",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Build.bat",
          "type": "blob",
          "size": 0.1640625,
          "content": "\n\n@echo off\nfor /f \"tokens=5\" %%i in ('netstat -aon ^| findstr \":9291\"') do (\n    set n=%%i\n)\ntaskkill /f /pid %n%\n\n\n\n\ndotnet build\n\ncd Blog.Core.Api\n\n\n\ndotnet run\n\ncmd"
        },
        {
          "name": "Blog.Core.Clean.bat",
          "type": "blob",
          "size": 1.2177734375,
          "content": "del  .\\Blog.Core.Api\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Api\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Api\\wwwroot\\ui\\*.*   /s /q\ndel  .\\Blog.Core.Api\\WMBlog.db   /s /q\ndel  .\\Blog.Core.Common\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Common\\obj\\*.*   /s /q\ndel  .\\Blog.Core.EventBus\\bin\\*.*   /s /q\ndel  .\\Blog.Core.EventBus\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Extensions\\bin\\*.*   /s /q\ndel  .\\Blog.Core.FrameWork\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Gateway\\bin\\*.*   /s /q\ndel  .\\Blog.Core.IServices\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Model\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Repository\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Serilog.Es\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Services\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Tasks\\bin\\*.*   /s /q\ndel  .\\Blog.Core.Tests\\bin\\*.*   /s /q\ndel  .\\Ocelot.Provider.Nacos\\bin\\*.*   /s /q\n\ndel  .\\Blog.Core.Extensions\\obj\\*.*   /s /q\ndel  .\\Blog.Core.FrameWork\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Gateway\\obj\\*.*   /s /q\ndel  .\\Blog.Core.IServices\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Model\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Repository\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Serilog.Es\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Services\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Tasks\\obj\\*.*   /s /q\ndel  .\\Blog.Core.Tests\\obj\\*.*   /s /q\ndel  .\\Ocelot.Provider.Nacos\\obj\\*.*   /s /q"
        },
        {
          "name": "Blog.Core.Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.EventBus",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.FrameWork",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Gateway",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.IServices",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Model",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Publish.Docker.Jenkins.sh",
          "type": "blob",
          "size": 0.65234375,
          "content": "﻿dotnet restore\ndotnet build \ncd Blog.Core.Api\n\ndotnet publish \necho \"Successfully!!!! ^ please see the file .\"\ncd bin/Debug/net7.0/publish/\n\n#rm -f appsettings.json\n#\\cp -rf /var/jenkins_home/workspace/SecurityConfig/Blog.Core/appsettings.json appsettings.json\n\n#docker stop apkcontainer\n#docker rm apkcontainer\n#docker rmi laozhangisphi/apkimg\n\nchmod 777 StopContainerImg.sh\n./StopContainerImg.sh apkcontainer laozhangisphi/apkimg\n\ndocker build -t laozhangisphi/apkimg .\ndocker run --name=apkcontainer -d -v /data/blogcore/appsettings.json:/app/appsettings.json -v /data/blogcore/Log/:/app/Log -v /etc/localtime:/etc/localtime -it -p 9291:9291 laozhangisphi/apkimg"
        },
        {
          "name": "Blog.Core.Publish.Docker.sh",
          "type": "blob",
          "size": 0.4580078125,
          "content": "﻿# 停止容器\ndocker stop apkcontainer\n# 删除容器\ndocker rm apkcontainer\n# 删除镜像\ndocker rmi laozhangisphi/apkimg\n# 切换目录\ncd /home/Blog.Core\n# 发布项目\n./Blog.Core.Publish.Linux.sh\n# 进入目录\ncd /home/Blog.Core/.PublishFiles\n# 编译镜像\ndocker build -t laozhangisphi/apkimg .\n# 生成容器\ndocker run --name=apkcontainer -d -v /etc/localtime:/etc/localtime -it -p 9291:9291 laozhangisphi/apkimg\n# 启动容器\ndocker start apkcontainer\n"
        },
        {
          "name": "Blog.Core.Publish.Linux.sh",
          "type": "blob",
          "size": 0.5380859375,
          "content": "\nfind .PublishFiles/ -type f -and ! -path '*/wwwroot/images/*' ! -name 'appsettings.*' |xargs rm -rf\ndotnet build;\nrm -rf /home/Blog.Core/Blog.Core.Api/bin/Debug/.PublishFiles;\ndotnet publish -o /home/Blog.Core/Blog.Core.Api/bin/Debug/.PublishFiles;\nrm -rf /home/Blog.Core/Blog.Core.Api/bin/Debug/.PublishFiles/WMBlog.db;\n# cp -r /home/Blog.Core/Blog.Core.Api/bin/Debug/.PublishFiles ./;\nawk 'BEGIN { cmd=\"cp -ri /home/Blog.Core/Blog.Core.Api/bin/Debug/.PublishFiles ./\"; print \"n\" |cmd; }'\necho \"Successfully!!!! ^ please see the file .PublishFiles\";"
        },
        {
          "name": "Blog.Core.Publish.bat",
          "type": "blob",
          "size": 0.291015625,
          "content": "color B\n\ndel  .PublishFiles\\*.*   /s /q\n\ndotnet restore\n\ndotnet build\n\ncd Blog.Core.Api\n\ndotnet publish -o ..\\Blog.Core.Api\\bin\\Debug\\net7.0\\\n\nmd ..\\.PublishFiles\n\nxcopy ..\\Blog.Core.Api\\bin\\Debug\\net7.0\\*.* ..\\.PublishFiles\\ /s /e \n\necho \"Successfully!!!! ^ please see the file .PublishFiles\"\n\ncmd"
        },
        {
          "name": "Blog.Core.Repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Serilog.Es",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Serilog",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Services",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.System.Architecture.png",
          "type": "blob",
          "size": 45.83203125,
          "content": null
        },
        {
          "name": "Blog.Core.Tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Blog.Core.sln",
          "type": "blob",
          "size": 9.708984375,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.32014.148\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Api\", \"Blog.Core.Api\\Blog.Core.Api.csproj\", \"{6F47A41A-085E-4422-BB73-5A2CBAA07D9F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Model\", \"Blog.Core.Model\\Blog.Core.Model.csproj\", \"{E725F0A1-0B03-406F-B84B-0F486C6137FC}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Repository\", \"Blog.Core.Repository\\Blog.Core.Repository.csproj\", \"{8D651E7F-49D3-4D27-8486-ADCF000BB24D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.IServices\", \"Blog.Core.IServices\\Blog.Core.IServices.csproj\", \"{37BB8600-94DA-4A2C-9230-DE93EA1EB0BD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Services\", \"Blog.Core.Services\\Blog.Core.Services.csproj\", \"{A2EFEFFC-39AD-48D2-8337-E6840B26023B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Common\", \"Blog.Core.Common\\Blog.Core.Common.csproj\", \"{97D32A49-994C-44C5-A167-51E71D173B6F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Tasks\", \"Blog.Core.Tasks\\Blog.Core.Tasks.csproj\", \"{F8E9FA1F-4079-4F62-B717-E389BC0014E8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Extensions\", \"Blog.Core.Extensions\\Blog.Core.Extensions.csproj\", \"{558F1B39-07E4-4FAB-BE7E-5B6104607064}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"SolutionItems\", \"SolutionItems\", \"{D9833F24-7BD0-486F-B028-F1FD098AA1E1}\"\n\tProjectSection(SolutionItems) = preProject\n\t\t.dockerignore = .dockerignore\n\t\t.editorconfig = .editorconfig\n\t\t.gitignore = .gitignore\n\t\tBlog.Core.Build.bat = Blog.Core.Build.bat\n\t\tBlog.Core.Publish.bat = Blog.Core.Publish.bat\n\t\tBlog.Core.Publish.Docker.Jenkins.sh = Blog.Core.Publish.Docker.Jenkins.sh\n\t\tBlog.Core.Publish.Docker.sh = Blog.Core.Publish.Docker.sh\n\t\tBlog.Core.Publish.Linux.sh = Blog.Core.Publish.Linux.sh\n\t\tcodecov.yml = codecov.yml\n\t\tCreateYourProject.bat = CreateYourProject.bat\n\t\tDockerBuild.bat = DockerBuild.bat\n\t\tDockerfile = Dockerfile\n\t\tnuget.config = nuget.config\n\t\tREADME.md = README.md\n\t\tDirectory.Build.props = Directory.Build.props\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{EDA8901E-541E-4ADC-B71E-59697D5F9549}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Tests\", \"Blog.Core.Tests\\Blog.Core.Tests.csproj\", \"{300A8113-8033-4184-BE28-FC48D8349CD0}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Gateways\", \"Gateways\", \"{E2BD7D4D-9ED5-41CD-8401-C3FB26F203BB}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Generators\", \"Generators\", \"{047A9723-9AAC-42E3-8C69-B3835F15FF96}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.FrameWork\", \"Blog.Core.FrameWork\\Blog.Core.FrameWork.csproj\", \"{52D318A2-F44E-4CB7-8DD4-483357D4333F}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"EventBus\", \"EventBus\", \"{A592C96A-4E44-4F2A-AC21-30683AF6C493}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.EventBus\", \"Blog.Core.EventBus\\Blog.Core.EventBus.csproj\", \"{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Gateway\", \"Blog.Core.Gateway\\Blog.Core.Gateway.csproj\", \"{A11C0DF2-1E13-4EED-BA49-44A57136B189}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Blog.Core.Serilog.Es\", \"Blog.Core.Serilog.Es\\Blog.Core.Serilog.Es.csproj\", \"{52AFAB53-D1CA-4014-8B63-3550FDCDA6E1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Ocelot.Provider.Nacos\", \"Ocelot.Provider.Nacos\\Ocelot.Provider.Nacos.csproj\", \"{6463FB13-5F01-4A1D-8B62-A454FB3812EB}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Blog.Core.Serilog\", \"Blog.Core.Serilog\\Blog.Core.Serilog.csproj\", \"{7F9057F0-ED8D-4694-B590-7D75C012DF00}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{6F47A41A-085E-4422-BB73-5A2CBAA07D9F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6F47A41A-085E-4422-BB73-5A2CBAA07D9F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6F47A41A-085E-4422-BB73-5A2CBAA07D9F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6F47A41A-085E-4422-BB73-5A2CBAA07D9F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E725F0A1-0B03-406F-B84B-0F486C6137FC}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E725F0A1-0B03-406F-B84B-0F486C6137FC}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E725F0A1-0B03-406F-B84B-0F486C6137FC}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E725F0A1-0B03-406F-B84B-0F486C6137FC}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{8D651E7F-49D3-4D27-8486-ADCF000BB24D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{8D651E7F-49D3-4D27-8486-ADCF000BB24D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{8D651E7F-49D3-4D27-8486-ADCF000BB24D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{8D651E7F-49D3-4D27-8486-ADCF000BB24D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{37BB8600-94DA-4A2C-9230-DE93EA1EB0BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{37BB8600-94DA-4A2C-9230-DE93EA1EB0BD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{37BB8600-94DA-4A2C-9230-DE93EA1EB0BD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{37BB8600-94DA-4A2C-9230-DE93EA1EB0BD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A2EFEFFC-39AD-48D2-8337-E6840B26023B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A2EFEFFC-39AD-48D2-8337-E6840B26023B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A2EFEFFC-39AD-48D2-8337-E6840B26023B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A2EFEFFC-39AD-48D2-8337-E6840B26023B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{97D32A49-994C-44C5-A167-51E71D173B6F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{97D32A49-994C-44C5-A167-51E71D173B6F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{97D32A49-994C-44C5-A167-51E71D173B6F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{97D32A49-994C-44C5-A167-51E71D173B6F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F8E9FA1F-4079-4F62-B717-E389BC0014E8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F8E9FA1F-4079-4F62-B717-E389BC0014E8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F8E9FA1F-4079-4F62-B717-E389BC0014E8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F8E9FA1F-4079-4F62-B717-E389BC0014E8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{558F1B39-07E4-4FAB-BE7E-5B6104607064}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{558F1B39-07E4-4FAB-BE7E-5B6104607064}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{558F1B39-07E4-4FAB-BE7E-5B6104607064}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{558F1B39-07E4-4FAB-BE7E-5B6104607064}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{300A8113-8033-4184-BE28-FC48D8349CD0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{300A8113-8033-4184-BE28-FC48D8349CD0}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{300A8113-8033-4184-BE28-FC48D8349CD0}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{300A8113-8033-4184-BE28-FC48D8349CD0}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{52D318A2-F44E-4CB7-8DD4-483357D4333F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{52D318A2-F44E-4CB7-8DD4-483357D4333F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{52D318A2-F44E-4CB7-8DD4-483357D4333F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{52D318A2-F44E-4CB7-8DD4-483357D4333F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{A11C0DF2-1E13-4EED-BA49-44A57136B189}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{A11C0DF2-1E13-4EED-BA49-44A57136B189}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{A11C0DF2-1E13-4EED-BA49-44A57136B189}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{A11C0DF2-1E13-4EED-BA49-44A57136B189}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{52AFAB53-D1CA-4014-8B63-3550FDCDA6E1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{52AFAB53-D1CA-4014-8B63-3550FDCDA6E1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{52AFAB53-D1CA-4014-8B63-3550FDCDA6E1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{52AFAB53-D1CA-4014-8B63-3550FDCDA6E1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{6463FB13-5F01-4A1D-8B62-A454FB3812EB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{6463FB13-5F01-4A1D-8B62-A454FB3812EB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{6463FB13-5F01-4A1D-8B62-A454FB3812EB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{6463FB13-5F01-4A1D-8B62-A454FB3812EB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7F9057F0-ED8D-4694-B590-7D75C012DF00}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7F9057F0-ED8D-4694-B590-7D75C012DF00}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7F9057F0-ED8D-4694-B590-7D75C012DF00}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7F9057F0-ED8D-4694-B590-7D75C012DF00}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{300A8113-8033-4184-BE28-FC48D8349CD0} = {EDA8901E-541E-4ADC-B71E-59697D5F9549}\n\t\t{52D318A2-F44E-4CB7-8DD4-483357D4333F} = {047A9723-9AAC-42E3-8C69-B3835F15FF96}\n\t\t{17C9E9DC-E926-4C90-9025-3DAC55D7EDA3} = {A592C96A-4E44-4F2A-AC21-30683AF6C493}\n\t\t{A11C0DF2-1E13-4EED-BA49-44A57136B189} = {E2BD7D4D-9ED5-41CD-8401-C3FB26F203BB}\n\t\t{6463FB13-5F01-4A1D-8B62-A454FB3812EB} = {E2BD7D4D-9ED5-41CD-8401-C3FB26F203BB}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {AB40D0C5-E3EA-4A9B-86C2-38F0BB33FC04}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "CreateYourProject.bat",
          "type": "blob",
          "size": 0.4111328125,
          "content": "color 5\necho \"if u install template error,pls connect QQ:3143422472\"\n\n\ncolor 3\ndotnet new -i Blog.Core.Webapi.Template\n\nset /p OP=Please set your project name(for example:BlogMicService):\n\nmd .1YourProject\n\ncd .1YourProject\n\ndotnet new blogcoretpl -n %OP%\n\ncd ../\n\n\necho \"Create Successfully!!!! ^ please see the folder .1YourProject\"\n\ndotnet new -u Blog.Core.Webapi.Template\n\n\necho \"Delete Template Successfully\"\n\npause\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 0.158203125,
          "content": "﻿<Project>\n    <PropertyGroup>\n        <TargetFramework>net8.0</TargetFramework>\n        <ImplicitUsings>enable</ImplicitUsings>\n    </PropertyGroup>\n</Project>"
        },
        {
          "name": "DockerBuild.bat",
          "type": "blob",
          "size": 0.32421875,
          "content": "echo off\necho \"Press B to build images, P to push to registry, any other key to cancel\"\nset /p op= :\nif \"%op%\"==\"B\" goto build\nif \"%op%\"==\"P\" goto push\nexit\n\n:build\ndocker rmi laozhangisphi/apkimg\ndocker build -f \"Dockerfile\" --force-rm -t laozhangisphi/apkimg .\ngoto end\n\n:push\ndocker push laozhangisphi/apkimg\ngoto end\n\n:end\npause"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.017578125,
          "content": "#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\n\n#这种模式是直接在构建镜像的内部编译发布dotnet项目。\n#注意下容器内输出端口是9291\n#如果你想先手动dotnet build成可执行的二进制文件，然后再构建镜像，请看.Api层下的dockerfile。\n\n\n#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\n\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\nWORKDIR /app\nEXPOSE 80\n\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\n\n# 复制 Directory.Build.props 文件\nCOPY [\"Directory.Build.props\", \".\"]\n\n# 复制所有项目文件\nCOPY [\"Blog.Core.Api/Blog.Core.Api.csproj\", \"Blog.Core.Api/\"]\nCOPY [\"Blog.Core.Extensions/Blog.Core.Extensions.csproj\", \"Blog.Core.Extensions/\"]\nCOPY [\"Blog.Core.EventBus/Blog.Core.EventBus.csproj\", \"Blog.Core.EventBus/\"]\nCOPY [\"Blog.Core.Common/Blog.Core.Common.csproj\", \"Blog.Core.Common/\"]\nCOPY [\"Blog.Core.Model/Blog.Core.Model.csproj\", \"Blog.Core.Model/\"]\nCOPY [\"Blog.Core.Serilog.Es/Blog.Core.Serilog.Es.csproj\", \"Blog.Core.Serilog.Es/\"]\nCOPY [\"Ocelot.Provider.Nacos/Ocelot.Provider.Nacos.csproj\", \"Ocelot.Provider.Nacos/\"]\nCOPY [\"Blog.Core.Services/Blog.Core.Services.csproj\", \"Blog.Core.Services/\"]\nCOPY [\"Blog.Core.IServices/Blog.Core.IServices.csproj\", \"Blog.Core.IServices/\"]\nCOPY [\"Blog.Core.Repository/Blog.Core.Repository.csproj\", \"Blog.Core.Repository/\"]\nCOPY [\"Blog.Core.Tasks/Blog.Core.Tasks.csproj\", \"Blog.Core.Tasks/\"]\nCOPY [\"build\", \"build/\"]\n\n# 恢复依赖项\nRUN dotnet restore \"Blog.Core.Api/Blog.Core.Api.csproj\"\n\n# 复制其余的源代码\nCOPY . .\n\n# 构建项目\nWORKDIR \"/src/Blog.Core.Api\"\nRUN dotnet build \"Blog.Core.Api.csproj\" -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish \"Blog.Core.Api.csproj\" -c Release -o /app/publish /p:UseAppHost=false\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nEXPOSE 9291 \nENTRYPOINT [\"dotnet\", \"Blog.Core.Api.dll\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Ocelot.Provider.Nacos",
          "type": "tree",
          "content": null
        },
        {
          "name": "README-en.md",
          "type": "blob",
          "size": 13.458984375,
          "content": "[ENGLISH](https://github.com/anjoy8/Blog.Core/blob/master/README-en.md) | [中文版](https://github.com/anjoy8/Blog.Core/blob/master/README.md)\n\n\n\n\n[![sdk](https://img.shields.io/badge/sdk-5.0.1-d.svg)](#)  [![Build status](https://github.com/anjoy8/blog.core/workflows/.NET%20Core/badge.svg)](https://github.com/anjoy8/Blog.Core/actions)  [![Build Status](https://dev.azure.com/laozhangisphi/anjoy8/_apis/build/status/anjoy8.Blog.Core?branchName=master)](https://dev.azure.com/laozhangisphi/anjoy8/_build?definitionId=1)  [![codecov](https://codecov.io/gh/anjoy8/Blog.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/anjoy8/Blog.Core)  [![License MIT](https://img.shields.io/badge/license-Apache-blue.svg?style=flat-square)](https://github.com/anjoy8/Blog.Core/blob/master/LICENSE) [![star this repo](http://githubbadges.com/star.svg?user=anjoy8&repo=blog.core&style=flat)](https://github.com/boennemann/badges)  [![fork this repo](http://githubbadges.com/fork.svg?user=anjoy8&repo=blog.core&style=flat)](https://github.com/boennemann/badges/fork)  [![Cnblogs](https://img.shields.io/badge/博客园-老张的哲学-brightgreen.svg)](https://www.cnblogs.com/laozhang-is-phi/)\n\n\n&nbsp;\n&nbsp;\n\n\n<div style=\"text-align: center;\">\n<a href=\"https://mvp.microsoft.com/zh-cn/PublicProfile/5003704?fullName=anson%20zhang\" >\n  <img src=\"http://apk.neters.club/MVP_Logo_Horizontal_Preferred_Cyan300_CMYK_72ppi.png\" alt=\"MVP\"   >\n</a>\n\n<a href=\"https://dotnetfoundation.org/member/Profile\" >\n  <img src=\"https://vueadmin.neters.club/images/1125120255netfoundation.png\" alt=\".netfoundation\" width=\"220\" >\n</a>\n</div>\n\n\nBlog.Core is an enterprise-class back-to-back separation framework for.NET Core5.0 API + Vue 2.x + RBAC.\nWebsite: http://apk.neters.club/.doc/\nHas been used by several companies: [click to view list] (https://github.com/anjoy8/Blog.Core/issues/75)\n\nProject single deployment, concurrent at 400~500, all normal (do not guarantee their own various error writing).\nThe effect is even better if the load is matched.\n\n\n\n&nbsp;\n\n### Features and Progress\n\nFramework module:\n- [x] adopts the form of 'repository + service + interface' to encapsulate the framework;\n- [X] async/await development;\n- [x] access to domestic database ORM component - SQLSUGAR, encapsulate database operation;\n- [x] support free switching multiple database, MySql/used/Sqlite/Oracle/Postgresql/reach/NPC Jin Cang dreams;\n- [x] realize project startup, automatically generate seed data ✨;\n- [X] five types of logging, audit/exception/request response/service operation/SQL logging, etc.\n- [x] Support for project transaction processing (use CAP if you want to distribute) ✨;\n- [x] Design 4 types of AOP facets programming, including: logging, caching, auditing, transaction ✨;\n- [x] Support T4 code template, automatically generate code for each layer;\n- [x] or use DbFirst one key to create their own project four layer files (support multiple libraries);\n- [x] encapsulation ` Blog. Core. Webapi. Template ` project Template, a key ✨ rebuild their projects;\n- [x] with multiple front-end cases for reference and reference: blog.vue, blog.admin, nuxt.tbug, blog.mvp. Blazor ✨;\n- [x] Uniform Integrated IdentityServer4 Authentication ✨;\n\nComponent module:\n- [x] provides Redis for caching;\n- [x] API file with Swagger;\n- [x] Use Miniprofiler for interface performance analysis ✨;\n- [x] uses Automapper to handle object mapping;\n- [x] uses Autofac as a dependency injection container and provides batch service injection ✨;\n- [x] supports CORS cross-domain;\n- [x] encapsulates JWT custom policy authorization;\n- [x] uses the Log4Net logging framework and integrates the native iLogger interface for logging;\n- [x] using Signalr duplex communication ✨;\n- [x] Added iprateLimiting for API current limiting;\n- [X] Use Quartz.net for task scheduling (currently single machine multi-task, cluster scheduling is not currently supported);\n- [x] Support for database 'read/write separation' and multi-library operations ✨;\n- [x] Added Redis Message Queuing ✨;\n- [x] new RabbitMQ message queue ✨;\n- [x] New EventBus ✨;\n- [x] Debugging - Unified Aggregate Payment;\n- [ ] Plan - Data department authority;\n- [ ] plan -es search;\n\nMicro service module:\n- [x] can cooperate with Docker to achieve containerization;\n- [x] can cooperate with Jenkins to achieve CI/CD;\n- [x] enables service discovery with Consul;\n- [x] can cooperate with Ocelot to achieve gateway processing;\n- [x] can cooperate with NGINX to achieve load balancing;\n- [x] can cooperate with IDS4 certification center;\n\n\n&nbsp;\n\n## Give a star! ⭐ ️\nIf you like this project or it helps you, please send it to STAR ~\nIf your project from the project, please explain a little bit down [https://github.com/anjoy8/Blog.Core/issues/75] (https://github.com/anjoy8/Blog.Core/issues/75), Open source is not easy ✨.\n\n\n\n&nbsp;\n\n## Official document 📕\n\nStill in the process of sorting out, but the basic operations, including how to get started, configure data, connect to DB, and so on\n\n[the official documentation] (http://apk.neters.club/.doc/)\n[Official account important articles + video address](https://mvp.neters.club/)\n\n\n\n\n&nbsp;\n\n\n\n\n*****************************************************\n\n### three platforms synchronized live\n\nJianshu: https://www.jianshu.com/notebooks/28621653\n\nBlog Park: https://www.cnblogs.com/laozhang-is-phi/\n \n csdn:https://blog.csdn.net/baidu_35726140 \n Code Cloud: Https://gitee.com/laozhangIsPhi/Blog.Core\n \n <div class=\"\"allindex\"\">\n<h1 id=\"\"allindex\"\">Directory</h1>\n<h2 id=\"\"abp框架学习目录如下\"\">Lao Zhang. The Netcore and Vue Framework Learning catalogue is as follows</h2>\n<ul>\n<li>\n<h3 id=\"\"autoid-2-1-0\"\">Back-end. NET Core overview</h3>\n<ul>\n<li><a id=\"\"post_title_link_9495620\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9495620.html\"\">Framework bis | | Back-end Project construction<br></a></li>\n<li><a id=\"\"post_title_link_9495624\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9495624.html\"\">Use of Swagger 3.1</a></li>\n<li><a id=\"\"post_title_link_9507387\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9507387.html\"\">Use of Swagger 3.2</a></li>\n<li><a id=\"\"post_title_link_9511869\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9511869.html\"\">Swagger use 3.3 JWT permission to verify \"modify\"</a></li>\n<li><a id=\"\"post_title_link_9896431\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9896431.html\"\">[. Netcore occasional] 36║ resolve JWT permission validation expiration issues</a></li>\n<li><a id=\"\"post_title_link_9516890\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9516890.html\"\">API Project Overall build 6.1 warehousing mode</a></li>\n<li><a id=\"\"post_title_link_9523148\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9523148.html\"\">6.2 Lightweight ORM built as a whole for API projects</a></li>\n<li><a id=\"\"post_title_link_9529480\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9529480.html\"\">API Project Overall build 6.3 asynchronous generic warehousing + Dependency Injection</a></li>\n<li><a id=\"\"post_title_link_9541414\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9541414.html\"\">Discussion on Dependency Injection IOC learning + AOP Tangent programming</a></li>\n<li><a id=\"\"post_title_link_9547574\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9547574.html\"\">AOP oriented tangent programming shallow parsing: Simple logging + service facet caching</a></li>\n<li><a id=\"\"post_title_link_9554210\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9554210.html\"\">AOP custom filtering, Redis Getting Started 11.1</a></li>\n<li><a id=\"\"post_title_link_9560949\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9560949.html\"\">Comparison of three cross-domain modes, DTOs (data transmission object)</a></li>\n<li><a id=\"\"post_title_link_9565227\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9565227.html\"\">DTOs Object mapping usage, project deployment Windows+linux full version</a></li>\n<li><a id=\"\"post_title_link_9757999\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9757999.html\"\">32 ║ Four methods to quickly realize the semi-automatic construction of the project</a></li>\n<li><a id=\"\"post_title_link_9767400\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9767400.html\"\">33 ║⅖ ways to achieve perfect cross-domain</a></li>\n<li><a id=\"\"post_title_link_9795689\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9795689.html\"\">34 ║swagger Processing Multi-version control, the thoughts brought about</a></li>\n<li><a id=\"\"post_title_link_9855836\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9855836.html\"\">35 ║ Perfect Global exception logging</a></li>\n<li><a id=\"\"post_title_link_10139204\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/10139204.html\"\">37║JWT Perfect implementation of the dynamic allocation of permissions and interfaces</a></li>\n <li><a id=\"\"link_post_title\"\" class=\"\"link-post-title\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/10173536.html\"\">38║ automatically initializes the database</a></li>\n<li><a id=\"\"post_title_link_10205495\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/10205495.html\"\">39 | | Want to create your own dotnet template? Look here</a></li>\n\n</ul></li>\n\n<li>\n<h3 id=\"\"autoid-2-2-0\"\">Front End Vue Overview</h3>\n<ul>\n<li><a id=\"\"post_title_link_9577805\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9577805.html\"\">14 ║vue Plan, a brief history of my front and back development</a></li>\n<li><a id=\"\"post_title_link_9580807\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9580807.html\"\">Xv. ║vue Basics: JS Object-oriented, the literal amount of the</a></li>\n<li><a id=\"\"post_title_link_9585766\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9585766.html\"\">16 ║vue Basics: ES6 Initial experience of the</a></li>\n<li><a id=\"\"post_title_link_9593740\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9593740.html\"\">17 ║vue Basics: Using Vue.js to draw blog Home + instructions (i)</a></li>\n<li><a id=\"\"post_title_link_9602077\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9602077.html\"\">18 ║vue Basics: directive (bottom) + Calculated properties +watch</a></li>\n<li><a id=\"\"post_title_link_9611632\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9611632.html\"\">19 ║vue Basics: Style dynamic binding + lifecycle</a></li>\n<li><a id=\"\"post_title_link_9622031\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9622031.html\"\">20 ║vue Base Audrey: Component Detail + Project description<br><br></a></li>\n<li>👆 above these basics can not look at if you just want to quickly get started with Vue<br><br></li>\n<li><a id=\"\"post_title_link_9629026\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9629026.html\"\">21 ║vue Actual Combat: development environment to build a \"detailed version\"</a></li>\n<li><a id=\"\"post_title_link_9640974\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9640974.html\"\">22 ║vue Actual Combat: The first edition of the personal blog (axios+router)</a></li>\n<li><a id=\"\"post_title_link_9647008\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9647008.html\"\">23 ║vue Actual Combat: Vuex is actually very simple</a></li>\n<li><a id=\"\"post_title_link_9658019\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9658019.html\"\">24 ║vuex + JWT Implementation Authorization Authentication Login</a></li>\n<li><a id=\"\"post_title_link_9670342\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9670342.html\"\">25 ║ Preliminary study on SSR server rendering (personal blog II)</a></li>\n<li><a id=\"\"post_title_link_9675822\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9675822.html\"\">26 ║client rendering, server rendering know how much {supplemental}</a></li>\n<li><a id=\"\"post_title_link_9682289\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9682289.html\"\">27 ║nuxt Foundation: A preliminary study of the framework</a></li>\n<li><a id=\"\"post_title_link_9687504\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9687504.html\"\">28 ║nuxt Basics: Source-oriented research nuxt.js</a></li>\n<li><a id=\"\"post_title_link_9697450\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9697450.html\"\">29 ║nuxt Actual Combat: Asynchronous implementation of data dual-end rendering</a></li>\n<li><a id=\"\"post_title_link_9702677\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9702677.html\"\">30 ║NUXT actual Combat: Dynamic routing + isomorphism</a></li>\n<li><a id=\"\"post_title_link_9713219\"\" href=\"\"https://www.cnblogs.com/laozhang-is-phi/p/9713219.html\"\">31 ║NUXT Audrey: A probe into permission validation based on Vuex</a></li>\n<li></li>\n\n</ul>\n\n</li>\n\n\n</ul>\n\n\n</div>\n\n\n**************************************************************\n\nSystem environment\n\nWindows 10, SQL Server 2012, Visual Studio 2017, Windows Server R2\n\nBack-end Technology:\n      \n      *. NET core 2.0 API (because you want to simply build front and rear separation, so choose the API, \n      if you want to understand. Net Core MVC, you can also communicate)\n\n* Swagger front and rear end document description, writing interface based on restful style\n\n* Repository + Service Warehousing mode programming\n\n* Async and await asynchronous programming\n\n* Cors Simple cross-domain solution\n\n* AOP based on tangent programming technology\n\n* AUTOFAC lightweight IOC and di dependency injection\n\n* Vue Local Agent cross-domain scenario, Nginx cross-domain proxy\n\n* JWT Permission Authentication\n\nDatabase technology\n\n* Sqlsugar Lightweight ORM Framework, Codefirst\n\n* T4 Template generation\n\n* AutoMapper Automatic Object mapping\n\nDistributed caching technology\n\n* Redis Lightweight Distributed cache\n\nFront End Technology\n\n* Vue 2.0 Framework Family Barrel Vue2 + VueRouter2 + Webpack + Axios + vue-cli + Vuex\n\n* Elementui component library based on Vue 2.0\n* Nuxt.js Server Render SSR\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.931640625,
          "content": "<img align=\"right\" height=\"50px\" src=\"http://apk.neters.club/logocore.png\">\n\n# Blog.Core\n\n[English](README-en.md) | 简体中文\n\n[![sdk](https://img.shields.io/badge/sdk-6.0.1-d.svg)](#)  [![Build status](https://github.com/anjoy8/blog.core/workflows/.NET%20Core/badge.svg)](https://github.com/anjoy8/Blog.Core/actions)  [![Build Status](https://dev.azure.com/laozhangisphi/anjoy8/_apis/build/status/anjoy8.Blog.Core?branchName=master)](https://dev.azure.com/laozhangisphi/anjoy8/_build?definitionId=1)  [![codecov](https://codecov.io/gh/anjoy8/Blog.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/anjoy8/Blog.Core)  [![License MIT](https://img.shields.io/badge/license-Apache-blue.svg?style=flat-square)](https://github.com/anjoy8/Blog.Core/blob/master/LICENSE) [![star this repo](http://githubbadges.com/star.svg?user=anjoy8&repo=blog.core&style=flat)](https://github.com/boennemann/badges)  [![fork this repo](http://githubbadges.com/fork.svg?user=anjoy8&repo=blog.core&style=flat)](https://github.com/boennemann/badges/fork)  [![博客园](https://img.shields.io/badge/博客园-老张的哲学-brightgreen.svg)](https://www.cnblogs.com/laozhang-is-phi/)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=anjoy8/blog.core&type=Date)](https://star-history.com/#anjoy8/blog.core&Date)\n\n\n&nbsp;\n&nbsp;\n\n \n<div style=\"text-align: center;\">\n<a href=\"https://mvp.microsoft.com/zh-cn/PublicProfile/5003704?fullName=anson%20zhang\" >\n  <img src=\"http://apk.neters.club/MVP_Logo_Horizontal_Preferred_Cyan300_CMYK_72ppi.png\" alt=\"MVP\"   >\n</a>\n\n \n</div>\n\n-------------------------------\nBlog.Core 开箱即用的企业级前后端分离【 .NET Core6.0 Api + Vue 2.x + RBAC】权限框架。  \n其他版本看具体分支吧🎉  \n官网：http://apk.neters.club/.doc/    \n\n  \n---------------------\n\n**已被近100家公司所使用(🐱‍🚀)：[点击查看列表](https://github.com/anjoy8/Blog.Core/issues/75)**   欢迎盖楼，留下公司真实名字的，可得定制化指导服务。  \n同时如果企业有付费咨询，欢迎联系老张（QQ：3143422472）。\n  \n\n### 核心项目组成员（排名不分先后）\n\n[hudingwen](https://github.com/hudingwen)、[LemonNoCry](https://github.com/LemonNoCry)、、[Jamnine何拾玖](https://github.com/Jamnine)、\n\n\n#### ❤ 真实用户反馈 ❤\n```\n项目单体部署，并发在400~500，一切正常(不保证自己的各种错误写法)。  \n如果搭配负载，效果更好。\n\n1、A~CoderDong:\n应用场景：使用Blog.Core为基础骨架开发，搭建Client监控类守护进程项目，To C 客户群，\n并发情况：目前压测并发5k正常8秒处理完，并发10k可15秒处理完毕，异常不会丢失。\n生产配置：一台服务器（Linux环境 + 至强8核的16G内存 + mysql数据库 + 3台Nginx负载）\n\n```\n   \n \n \n&nbsp;\n\n## 给个星星! ⭐️\n如果你喜欢这个项目或者它帮助你, 请给 Star~   \n如果你的项目中借鉴了本项目，请稍微说明下[https://github.com/anjoy8/Blog.Core/issues/75](https://github.com/anjoy8/Blog.Core/issues/75)，开源不易✨。  \n\n\n\n### 功能与进度\n\n#### 企业使用高级版本\n\n- [x] 包含开源版 `框架模块/组件模块` 中的所有功能；\n- [x] 全部表结构主键底层架构改成`string`类型（默认雪花，支持guid），更方便迁移；\n- [x] 完善部门数据权限，可以基于策略配置查看数据范围；\n- [x] 优化权限处理器，解决多实例分布式下，权限不同步问题（必须配置Redis）；\n- [x] 增加在线用户查看功能，并实现强制用户下线功能（必须配置Redis）；\n- [x] 增加用户黑名单功能（必须配置Redis）；\n- [x] 增加岗位功能（单独建表），配合部门使用；\n- [ ] 后期优化站内通知功能，其实目前已经有SignalR来实现消息推送了，可以直接用；\n- [ ] 前端`Blog.Admin.Pro`使用`AntDesignVue`框架（设计中，未完全实现）；\n- [x] 铁粉奖励：如果参与上述功能和其他付费功能开发，可半价获取商业授权；\n\n\n\n#### 框架模块：  \n- [x] 采用`仓储+服务+接口`的形式封装框架；\n- [x] 自定义项目模板 `CreateYourProject.bat` ，可以一键生成自己的项目；🎶  \n- [x] 异步 async/await 开发；  \n- [x] 接入国产数据库ORM组件 —— SqlSugar，封装数据库操作，支持级联操作；\n- [x] 支持自由切换多种数据库，MySql/SqlServer/Sqlite/Oracle/Postgresql/达梦/人大金仓；\n- [x] 实现项目启动，自动生成种子数据 ✨； \n- [x] 实现数据库主键类型配置化，什么类型都可以自定义 ✨； \n- [x] 五种日志记录，审计/异常/请求响应/服务操作/Sql记录等,并自动持久化到数据库表🎶； \n- [x] 支持项目事务处理（若要分布式，用cap即可）✨；\n- [x] 设计4种 AOP 切面编程，功能涵盖：日志、缓存、审计、事务 ✨；\n- [x] 全局统一封装 Serilog 生成多种日志，并自动生成到数据库中，目前支持MySql/SqlServer/Sqlite/Oracle/Postgresql🎉；\n- [x] 设计并支持按钮级别的RBAC权限控制，同时支持一键同步接口和菜单 🎶；\n- [x] 支持 T4 代码模板，自动生成每层代码；\n- [x] 或使用 DbFirst 一键创建自己项目的四层文件（支持多库）；\n- [x] 封装`Blog.Core.Webapi.Template`项目模板，一键重建自己的项目 ✨；\n- [x] 搭配多个前端案例供参考和借鉴：Blog.Vue、Blog.Admin、Nuxt.tbug、Blog.Mvp.Blazor ✨；\n- [x] 统一集成 IdentityServer4 认证 ✨;\n- [x] 统一实现多租户;\n- [x] 实现分表案例，支持分表的增删改查哈分页查询，具体查看SplitDemoController.cs;\n- [x] 支持signalR对指定用户通讯;  \n\n\n组件模块：\n- [x] 提供 Redis 做缓存处理；\n- [x] 使用 Swagger 做api文档；\n- [x] 使用 MiniProfiler 做接口性能分析 ✨；\n- [x] 使用 Automapper 处理对象映射；  \n- [x] 使用 AutoFac 做依赖注入容器，并提供批量服务注入 ✨；\n- [x] 支持 CORS 跨域；\n- [x] 封装 JWT 自定义策略授权；\n- [x] 使用 Serilog 日志框架，集成原生 ILogger 接口做日志记录；\n- [x] 使用 SignalR 双工通讯 ✨；\n- [x] 添加 IpRateLimiting 做 API 限流处理;\n- [x] 使用 Quartz.net 做任务调度（目前单机多任务，集群调度暂不支持）;\n- [x] 支持 数据库`读写分离`和多库操作 ✨;\n- [x] 新增 Redis 消息队列 ✨;\n- [x] 新增 RabbitMQ 消息队列 ✨;\n- [x] 新增 EventBus 事件总线 ✨;\n- [x] 新增 - 统一聚合支付;\n- [x] 新增 - Nacos注册中心配置;\n- [x] 新增 - ES 搜索配置;\n- [x] 新增 - Apollo 配置;\n- [x] 新增 Kafka 消息队列，并配合实现EventBus ✨;\n- [x] 新增 微信公众号管理，并集成到Blog.Admin后台 ✨;\n- [x] 新增 - 数据部门权限;\n- [x] 新增 - Serilog 集成日志数据持久化到数据库;  \n- [x] 新增 - 多租户模式（单表，多表，多库三种模式）;  \n\n\n微服务模块：\n- [x] 可配合 Docker 实现容器化；\n- [x] 可配合 Jenkins 实现CI / CD；\n- [x] 可配合 Consul 实现服务发现；\n- [x] 可配合 Nacos 实现服务发现；\n- [x] 可配合 apisix/Ocelot 实现网关处理；\n- [x] 可配合 Nginx  实现负载均衡；\n- [x] 可配合 Ids4   实现认证中心；\n\n### 核心业务模块\n#### 框架采用泛型仓储模式，以下几层为核心层，不可删除    \n`Blog.Core.Api`、`Blog.Core.Common`、`Blog.Core.IServices`、`Blog.Core.Model`、`Blog.Core.Repository`、`Blog.Core.Services`、`Blog.Core.Tasks`、`Blog.Core.Serilog`    \n其他代码分层是支撑层，如果自己业务涉及不到，可以删除。\n\n#### API接口层主要是基于RBAC的基于按钮级别的角色授权逻辑，以下几个Controller，不可删除    \n`BaseApiController.cs`(接口基类)、`DepartmentController`(部门)、`ImgController`(图片)、`LoginController`(登录)、`ModuleController`(接口)、`PermissionController`(菜单)、`RoleController`(角色)、`TasksQzController`(任务调度)、`UserController`(用户)、`UserRoleController`(用户角色关系)     \n其他代码部分是扩展业务，如果自己业务涉及不到，可以删除。\n\n\n\n### 自定义全部日志记录图\n![系统架构图](https://img.neters.club/github/log5.png)\n\n\n### 自定义(中间件/服务)启动图\n![系统架构图](https://img.neters.club/github/load-tool.png)\n\n\n&nbsp;\n\n\n## 贡献者们 \n\nThanks goes to these wonderful people ([✨](https://github.com/anjoy8/Blog.Core/graphs/contributors)):（排名暂时按提交顺序）  \n  \n    \n<a href=\"https://github.com/anjoy8/blog.core/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=anjoy8/blog.core\" />\n</a>\n<!-- prettier-ignore-end -->\n\nThis project follows the [all-contributors](https://github.com/anjoy8/Blog.Core/graphs/contributors) specification.\nContributions of any kind are welcome!\n\n&nbsp;\n\n## 官方文档 📕\n\n还在陆续整理中，不过基本操作都在,包括如何新手入门，配置数据，连接DB等等    \n\n[官方文档](http://apk.neters.club/.doc/)    \n[公众号重要文章+视频地址](https://mvp.neters.club/)    \n\n\n\n\n&nbsp;\n\n### 系统架构图\n\n\n![系统架构图](https://img.neters.club/github/20201228135550.png)\n\n&nbsp;\n\n&nbsp;\n### 系统压测结果报告\n\n\n<div align=center><img width=\"500\" src=\"http://apk.neters.club/JMeterTest.png\" /></div>\n\n本项目是 .netCore 后端部分，前端部分请看我的另三个Vue工程项目\n \n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n|个人博客Vue版本|tBug项目Nuxt版本|VueAdmin权限管理后台|\n|-|-|-|\n|[https://github.com/anjoy8/Blog.Vue](https://github.com/anjoy8/Blog.Vue)|[https://github.com/anjoy8/Nuxt.tBug](https://github.com/anjoy8/Nuxt.tBug)|[https://github.com/anjoy8/Blog.Admin](https://github.com/anjoy8/Blog.Admin)|\n|[http://vueblog.neters.club](http://vueblog.neters.club)|[http://tibug.neters.club](http://tibug.neters.club)|[http://vueadmin.neters.club](http://vueadmin.neters.club)|\n\n\n\n&nbsp;\n\n### 初始化项目\n \n\n下载项目后，编译如果没问题，直接运行即可，会自动生成种子数据，数据库是`Sqlite`，接口文档是`swagger`。    \n\n更多操作，点击这里：http://apk.neters.club/.doc/guide/getting-started.html\n\n\n&nbsp;\n\n## Nuget Packages\n\n| Package | NuGet Stable |  Downloads |\n| ------- | -------- | ------- |\n| [Blog.Core.Webapi.Template](https://www.nuget.org/packages/Blog.Core.Webapi.Template/) | [![Blog.Core.Webapi.Template](https://img.shields.io/nuget/v/Blog.Core.Webapi.Template.svg)](https://www.nuget.org/packages/Blog.Core.Webapi.Template/)  | [![Blog.Core.Webapi.Template](https://img.shields.io/nuget/dt/Blog.Core.Webapi.Template.svg)](https://www.nuget.org/packages/Blog.Core.Webapi.Template/) |\n\n\n关于如何使用，点击这里：https://www.cnblogs.com/laozhang-is-phi/p/10205495.html\n\n&nbsp;\n&nbsp;\n\n## 其他后端框架\n目前一共开源四个框架项目，感兴趣的可以看看\n\n|单层项目|简单仓储框架|仓储+服务+接口|DDD框架|\n|-|-|-|-|\n|CURD+Seed|CURD+Seed+DI|CURD+Seed+DI+AOP等|DDD+EFCore+DI+EventBus等|\n|[NetCore-Sugar-Demo](https://github.com/anjoy8/NetCore-Sugar-Demo)|[Blog.SplRepository.Demo](https://github.com/anjoy8/Blog.SplRepository.Demo)|[Blog.Core](https://github.com/anjoy8/Blog.Core)|[ChristDDD](https://github.com/anjoy8/ChristDDD)|\n| -|[Blog-EFCore-Sqlite](https://github.com/anjoy8/Blog-EFCore-Sqlite)|- | -|\n\n\n&nbsp;\n\n\n\n&nbsp;\n\n## 售后服务与支持  \n\n鼓励作者，简单打赏~~         \n如果你喜欢，就给作者加个鸡腿吧  \n\n \n<img src=\"http://apk.neters.club/laozhangisphigood.jpg\" alt=\"赞赏码\" width=\"300\" >\n[图片若加载不出来，点这里](http://apk.neters.club/laozhangisphigood.jpg)\n\n\n\n*****************************************************\n### 文章+视频+直播\n\n博客园：https://www.cnblogs.com/laozhang-is-phi/\n\n Bilibili：https://space.bilibili.com/387802716  \n \n 直播间：https://live.bilibili.com/21507364\n\n```\n```\n\n\n&nbsp;\n\n如果你感觉看着这整个项目比较费劲，我单抽出来了几个子Demo，方便学习，项目地址 ：[https://github.com/anjoy8/BlogArti](https://github.com/anjoy8/BlogArti)\n\n\n\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 0.4677734375,
          "content": "# ASP.NET Core\n# Build and test ASP.NET Core projects targeting .NET Core.\n# Add steps that run tests, create a NuGet package, deploy, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core\n\ntrigger:\n- master\n\npool:\n  vmImage: ubuntu-latest\n\nvariables:\n  buildConfiguration: 'Release'\n\nsteps:\n- task: UseDotNet@2\n  displayName: 'Use .NET Core sdk'\n  inputs:\n    packageType: sdk\n    version: 6.0.x\n    installationPath: $(Agent.ToolsDirectory)/dotnet"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.06640625,
          "content": "cat codecov.yml | curl --data-binary @- https://codecov.io/validate\n"
        }
      ]
    }
  ]
}