{
  "metadata": {
    "timestamp": 1736711153762,
    "page": 27,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "0x7c13/Notepads",
      "stars": 8972,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.345703125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Declare files that will always have CRLF line endings on checkout.\n*.cs text eol=crlf\n*.xaml text eol=crlf\n*.resw text eol=crlf\n*.csproj text eol=crlf\n*.sln text eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.765625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.rsuser\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n*- Backup*.rdl\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database\nhealthchecksdb\n\n# Logs and databases #\n######################\n*.log\n*.sql\n*.sqlite\n\n# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n"
        },
        {
          "name": ".whitesource",
          "type": "blob",
          "size": 0.134765625,
          "content": "{\n  \"checkRunSettings\": {\n    \"vulnerableCheckRunConclusionLevel\": \"failure\"\n  },\n  \"issueSettings\": {\n    \"minSeverityLevel\": \"LOW\"\n  }\n}"
        },
        {
          "name": "CI-CD_DOCUMENTATION.md",
          "type": "blob",
          "size": 19.0927734375,
          "content": "# Notepads CI/CD documentation\n\n- after merging the PR, the first run of the \"Notepads CI/CD Pipeline\" workflow will not complete successfully, because it requires specific setup explained in this documentation. The two other workflows \"CodeQL Analysis\" and \"Build\", should complete successfully.\n\n## 1. Set up SonarCloud\n\n### SonarCloud is a cloud-based code quality and security service\n\n#### Create SonarCloud project\n\n- Go to https://sonarcloud.io/\n\n- Click the \"Log in\" button and create a new account or connect with GitHub account (recommended)\n\n- At the top right corner click the \"+\" sign\n\n- From the dropdown select \"Create new Organization\"\n\n- Click the \"Choose an organization on GitHub\" button\n\n- Select an account for the organization setup\n\n- On Repository Access select \"Only select repositories\" and select the project and click the \"Save\" button\n\n- On the \"Create organization page\" don't change the Key and click \"Continue\"\n\n- Select the Free plan then click the \"Create Organization\" button to finalize the creation of the Organization\n\n#### Configure SonarCloud project\n\n- At the top right corner click the \"+\" sign and select \"Analyze new project\"\n\n- Select the project and click the \"Set Up\" button in the box on the right\n\n- Under \"Choose your analysis method\" click \"With GitHub Actions\" and **keep the following page open**\n\n- [Create a new PAT with **repo_deployment** and **read:packages** permissions](#7-how-to-create-a-pat) and copy the value of the generated token\n\n- In the project's GitHub repository, go to the **Settings** tab -> Secrets\n\n- Click on **New Repository secret** and create a new secret with the name **SONAR_GITHUB_TOKEN** and the token you just copied as the value\n\n- Create another secret with the two values from the SonarCloud page you kept open, which you can close after completing this step\n\n![SonarCloud_1](ScreenShots/CI-CD_DOCUMENTATION/SonarCloud_1.png)\n\n- [Run the \"Notepads CI/CD Pipeline\" workflow manually](#2-run-workflow-manually)\n\n#### Set Quality Gate\n\n- After the \"Notepads CI/CD Pipeline\" workflow has executed successfully, go to https://sonarcloud.io/projects and click on the project\n\n- In the alert bar above the results, click the \"Set new code definition\" button and select \"Previous version\" (notice the \"New Code definition has been updated\" alert at the top)\n\n- The Quality Gate will become active as soon as the next SonarCloud scan completes successfully\n\n<br>\n<a name=\"workflow_dispatch\"></a>\n\n## 2. Run workflow manually\n\nOnce you've set up all the steps above correctly, you should be able to successfully complete a manual execution of the \"Notepads CI/CD Pipeline\" workflow.\n\n1. Go to the project's GitHub repository and click on the **Actions** tab\n\n2. From the \"Workflows\" list on the left, click on \"Notepads CI/CD Pipeline\"\n\n3. On the right, next to the \"This workflow has a workflow_dispatch event trigger\" label, click on the \"Run workflow\" dropdown, make sure the default branch is selected (if not manually changed, should be main or master) in the \"Use workflow from\" dropdown and click the \"Run workflow\" button\n\n4. You can optionally fill the argument textbox with \"release\" to trigger [GitHub Release](#github_release) and [Store Upload](#store_upload)\n\n![Actions_workflow_dispatch](ScreenShots/CI-CD_DOCUMENTATION/Actions_workflow_dispatch.png)\n\n5. Once the workflow run has completed successfully, move on to the next step of the documentation\n\nNOTE: **screenshots are only exemplary**\n\n<br>\n\n## 3. Set up Dependabot\n\nDependabot is a GitHub native security tool that goes through the dependencies in the project and creates alerts, and PRs with updates when a new and/or non-vulnerable version is found.\n\n- for PRs with version updates, this pipeline comes pre-configured for all current dependency sources in the project, so at \"Insights\" tab -> \"Dependency graph\" -> \"Dependabot\", you should be able to see all tracked sources of dependencies, when they have been checked last and view a full log of the last check\n\n![Dependabot_tab](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_tab.png)\n\n![Dependabot_log_page](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_log_page.png)\n\n### Set up security alerts and updates\n\n##### - GitHub, through Dependabot, also natively offers a security check for vulnerable dependencies\n\n1. Go to \"Settings\" tab of the repo\n\n2. Go to \"Security & analysis\" section\n\n3. Click \"Enable\" for both \"Dependabot alerts\" and \"Dependabot security updates\"\n\n- By enabling \"Dependabot alerts\", you would be notified for any vulnerable dependencies in the project. At \"Security\" tab -> \"Dependabot alerts\", you can manage all alerts. By clicking on an alert, you would be able to see a detailed explanation of the vulnerability and a viable solution.\n\n![Dependabot_alerts_page](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_alerts_page.png)\n\n![Dependabot_alert_page](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_alert_page.png)\n\n- By enabling \"Dependabot security updates\", you authorize Dependabot to create PRs specifically for **security updates**\n\n![Dependabot_PRs](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_PRs.png)\n\n### Set up Dependency graph\n\n##### - The \"Dependency graph\" option should be enabled by default for all public repos, but in case it isn't:\n\n1. Go to \"Settings\" tab of the repo\n\n2. Go to \"Security&Analysis\" section\n\n3. Click \"Enable\" for the \"Dependency graph\" option\n\n- this option enables the \"Insights\" tab -> \"Dependency graph\" section -> \"Dependencies\" tab, in which all the dependencies for the project are listed, under the different manifests they are included in\n\n![Dependabot_dependency_graph](ScreenShots/CI-CD_DOCUMENTATION/Dependabot_dependency_graph.png)\n\nNOTE: **screenshots are only exemplary**\n\n<br>\n\n## 4. CodeQL\n\nCodeQL is GitHub's own industry-leading semantic code analysis engine. CodeQL requires no setup, because it comes fully pre-configured by us.\n\nTo activate it and see its results, only a push commit or a merge of a PR to the default branch of the repository, is required.\n\nWe've also configured CodeQL to run on schedule, so every day at 8:00AM UTC, it automatically scans the code.\n\n- you can see the results here at **Security** tab -> **Code scanning alerts** -> **CodeQL**:\n\n![CodeQL_results](ScreenShots/CI-CD_DOCUMENTATION/CodeQL_results.png)\n\n- on the page of each result, you can see an explanation of what the problem is and also one or more solutions:\n\n![CodeQL_alert_page](ScreenShots/CI-CD_DOCUMENTATION/CodeQL_alert_page.png)\n\n### Code scanning alerts bulk dismissal tool\n\n##### - currently, GitHub allows for only 25 code scanning alerts to be dismissed at a time. Sometimes, you might have hundreds you would like to dismiss, so you will have to click many times and wait for a long time to dismiss them. Via the \"csa-bulk-dismissal.yml\", you can automatically dismiss unnecessary alerts or manually do that with one click.\n\nNOTE: This tool executes automatically when **Notepads CI/CD Pipeline** action completes.\n\n#### 1. Setup\n\n1. In the repository, go to the **Settings** tab -> **Secrets**\n\n![CSA_secrets](ScreenShots/CI-CD_DOCUMENTATION/CSA_secrets.png)\n\n2. Add the following secrets with the name and the corresponding value, by at the upper right of the section, clicking on the **New repository secret** button:\n\n![CSA_new_secret](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_secret.png)\n\n![CSA_secret_add](ScreenShots/CI-CD_DOCUMENTATION/CSA_secret_add.png)\n\n- CSA_ACCESS_TOKEN - [create a PAT with \"security_events\" permission only](#7-how-to-create-a-pat).\n\n#### 2. Execution\n\n1. This tool is automatically triggered when **Notepads CI/CD Pipeline** task completes, if you want to manually execute this follow next steps\n\n2. In your repo, click on the Actions tab and on the left, in the Workflows list, click on the \"Code scanning alerts bulk dismissal\"\n\n![CSA_execute_1](ScreenShots/CI-CD_DOCUMENTATION/CSA_execute_1.png)\n\n3. On the right, click on the \"Run workflow\" dropdown. Under \"Use workflow from\" choose your default branch (usually main/master), in the **Type of filter to use** field type \"path\"/\"desc\" depending upon whether dismiss alerts based on predefined paths or description respectively (default is \"path\"), in the **Reason for dismissal** type \"fp\"/\"wf\"/\"ut\" for \"false positive\"/\"won't fix\"/\"used in tests\" respectively (default is \"wf\") and click on the **Run workflow** button\n\n<a name=\"csa_execute\"></a>\n![CSA_execute_2](ScreenShots/CI-CD_DOCUMENTATION/CSA_execute_2.png)\n\nNOTE: if any unsupported values are entered default values will be used\n\n4. If everything was set up currently in the \"Setup\" phase, the \"Code scanning alerts bulk dismissal\" workflow is going to be executed successfully, which after some time, would result in **all** previously open code scanning alerts, with a certain description be dismissed\n\n![CSA_execute_3](ScreenShots/CI-CD_DOCUMENTATION/CSA_execute_3.png)\n\n![CSA_execute_4](ScreenShots/CI-CD_DOCUMENTATION/CSA_execute_4.png)\n\n![CSA_execute_5](ScreenShots/CI-CD_DOCUMENTATION/CSA_execute_5.png)\n\nNOTE: \"closed\" refers to \"dismissed\" alerts\n\n#### 3. Customization\n\nThe \"setup\" job in the pipeline, allows for more precise filtering of alerts to bulk dismiss. It uses the filter type to choose (filter based on path or description) from the alert to determine if it has to be dismissed or not. We've added the following paths and alert descriptions by default:\n\n##### Paths:\n\n- \"\\*/obj/\\*\" (if path contains `obj` folder at any position)\n\n##### Descriptions:\n\n- \"Calls to unmanaged code\"\n- \"Unmanaged code\"\n\n##### To add more paths, follow these steps:\n\n1. In your source code, open \".github/workflows/csa-bulk-dismissal.yml\"\n\n2. From line 50 to 56, notice \"$MATRIX = **\". This is the [powershell hashtable](https://docs.microsoft.com/powershell/scripting/learn/deep-dives/everything-about-hashtable?view=powershell-7.1) of filters that the CSABD (Code scanning alerts bulk dismissal) tool uses to filter through the alerts:\n\n![CSA_custom_3](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_3.png)\n\n3. To add more paths under **include** element use comma separation and followed from next line add `@{ filter = \"New path\" }`. Replace \"New path\" with the path (with or without [wild cards](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_wildcards?view=powershell-7.1)) you want:\n\n![CSA_custom_4](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_4.png)\n\n##### To add more descriptions, follow these steps:\n\n1. In your source code, open \".github/workflows/csa-bulk-dismissal.yml\"\n\n2. From line 58 to 67, notice \"$MATRIX = **\". This is the [powershell hashtable](https://docs.microsoft.com/powershell/scripting/learn/deep-dives/everything-about-hashtable?view=powershell-7.1) of filters that the CSABD (Code scanning alerts bulk dismissal) tool uses to filter through the alerts:\n\n![CSA_custom_1](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_1.png)\n\n3. To add more descriptions under **include** element use comma separation and followed from next line add `@{ filter = \"New description\" }`. Replace \"New description\" with the description you want:\n\n![CSA_custom_2](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_2.png)\n\n##### To change default filter type and dismissal reason, follow these steps:\n\n1. In your source code, open \".github/workflows/csa-bulk-dismissal.yml\"\n\n2. To change default filter type change **$FILTER_TYPE** variable in line 31 to something else (default is \"path\", supported are: \"desc\" and \"path\"):\n\n![CSA_custom_5](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_5.png)\n\n3. To change dismissal reason change **$REASON** variable in line 45 to something else (default is \"won't fix\", supported are: \"false positive\", \"won't fix\" and \"used in tests\"):\n\n![CSA_custom_6](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_6.png)\n\nNOTE: changing default filter type and dismissal reason won't change dafault value typed when [manually executing](#csa_execute) tool, change values in line 13 and 17 respectively to reflect the change\n\n![CSA_custom_7](ScreenShots/CI-CD_DOCUMENTATION/CSA_custom_7.png)\n\n<br>\n<a name=\"github_release\"></a>\n\n## 5. Automated GitHub release\n\nWhen triggered bumps up the GitHub tag in the repo and executes the CD job and produces release with changelogs\n\nNote: **not every commit to your master branch are included in changelog**\n\n#### Setup\n\nAdd the following secrets by going to the repo **Settings** tab -> **Secrets**:\n\n1. **PACKAGE_CERTIFICATE_BASE64**\n\n- used to dynamically create the PFX file required for the signing of the **msixbundle**\n- use the following PowerShell code locally to turn your PFX file into Base64:\n\n```\n# read from PFX as binary\n$PFX_FILE = [IO.File]::ReadAllBytes('absolute_path_to_PFX')\n# convert to Base64 and write in txt\n[System.Convert]::ToBase64String($PFX_FILE) | Out-File 'absolute_path\\cert.txt'\n```\n\n- copy the contents of the **cert.txt** and paste as the value of the secret\n\n2. **PACKAGE_CERTIFICATE_PWD**\n\n- used in the build of the project to authenticate the PFX\n- copy and paste the password of your PFX as the value of this secret\n\nNOTE:\n\n- none of those values are visible in the logs of the pipeline, nor are available to anyone outside of the original repository e.g. forks, anonymous clones etc.\n- the dynamically created PFX file lives only for the duration of the pipeline execution\n\n#### Execution\n\n[Once you've set up all the steps for manual execution of the \"Notepads CI/CD Pipeline\" workflow correctly](#workflow_dispatch), you should be able to successfully trigger release with the same workflow.\n\n1. Go to the project's GitHub repository and click on the **Actions** tab\n\n2. From the \"Workflows\" list on the left, click on \"Notepads CI/CD Pipeline\"\n\n3. On the right, next to the \"This workflow has a workflow_dispatch event trigger\" label, click on the \"Run workflow\" dropdown, make sure the default branch is selected (if not manually changed, should be main or master) in the \"Use workflow from\" dropdown, type \"release\" in the argument textbox (By default \"test\" is typed) and click the \"Run workflow\" button\n\n![Actions_workflow_dispatch](ScreenShots/CI-CD_DOCUMENTATION/Actions_workflow_dispatch.png)\n\n4. The workflow will produce release assets and calculate version, generate changelogs from valid commits since previous tag.\n\nNOTE: **screenshots are only exemplary**\n\n<br>\n\n#### - follow these instructions for any commit (push or PR merge) to your master branch, you would like to see in changelog and count towards version change.\n\nYou would need one of three keywords at the start of your commit title. Each of the three keywords corresponds to a number in your release version i.e. v1.2.3. The release versioning uses the [\"Conventional Commits\" specification](https://www.conventionalcommits.org/en/v1.0.0/):\n\n- \"fix: ...\" - this keyword corresponds to the last number v1.2.**3**, also known as PATCH;\n- \"feat: ...\" - this keyword corresponds to the middle number v1.**2**.3, also known as MINOR;\n- \"perf: ...\" - this keyword corresponds to the first number v**1**.2.3, also known as MAJOR. In addition, to trigger a MAJOR release, you would need to write \"BREAKING CHANGE: ...\" in the description of the commit, with an empty line above it to indicate it is in the <footer> portion of the description;\n\nNote: when making a MAJOR release by committing through a terminal, use the multiple line syntax to add the commit title on one line and then adding an empty line, and then adding the \"BREAKING CHANGE: \" label\n<br><br>\n\n#### Examples\n\nExample(fix/PATCH): <br>\n`git commit -a -m \"fix: this is a PATCH release triggering commit\"`\n<br>\n`git push origin master`\n<br>\n<br>\nOn triggering `Release`:\n<br>\nResult: v1.2.3 -> **v1.2.4**\n<br>\n<br>\n<br>\nExample(feat/MINOR): <br>\n`git commit -a -m \"feat: this is a MINOR release triggering commit\"`\n<br>\n`git push origin master`\n<br>\n<br>\nOn triggering `Release`:\n<br>\nResult: v1.2.3 -> **v1.3.0**\n<br>\n<br>\n<br>\nExample(perf/MAJOR): <br>\n`` git commit -a -m \"perf: this is a MAJOR release triggering commit ` ``\n<br>\n&gt;&gt; <br>\n&gt;&gt; `BREAKING CHANGE: this is the breaking change\"`\n<br>\n`git push origin master`\n<br>\n<br>\nOn triggering `Release`:\n<br>\nResult: v1.2.3 -> **v2.0.0**\n<br>\n<br>\nNote: in the MAJOR release example, the PowerShell multiline syntax ` (backtick) is used. After writing a backtick, a press of the Enter key should open a new line.\n\n<br>\n<a name=\"store_upload\"></a>\n\n## 6. Setup automated publishing to the Windows Store\n\n#### - for the automation to work, at least one submission needs to be already created manually\n\n- [Create an Azure AD tenant](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-create-new-tenant) or use an existing one\n\n- Associate your [Microsoft Partner Center with the Azure AD tenant](https://docs.microsoft.com/en-us/windows/uwp/publish/associate-azure-ad-with-partner-center)\n\n- [Create a new app registration](https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml) or use an existing one from the list in your **portal.azure.com** -> **Azure Active Directory** -> **App registrations** section\n\n- Add the [Azure AD application to the Microsoft Partner Center](https://docs.microsoft.com/en-us/partner-center/service-principal) and give it \"Manager\" permissions\n\n- In the project's GitHub repo, create the following secrets:\n\n1. **AZURE_AD_TENANT_ID** and **AZURE_AD_APPLICATION_CLIENT_ID**\n\n   - copy and paste the values shown in the screenshot below to the appropriate secret:\n\n![Publish_to_store_1](ScreenShots/CI-CD_DOCUMENTATION/Publish_to_store_1.png)\n\nNote: screenshot is taken from **portal.azure.com** -> **Azure AD** -> **App registrations** -> **app-name** page\n\n2. **AZURE_AD_APPLICATION_SECRET**\n\n   - copy and paste the value you get on the page following from **Account settings** -> **User management** -> **Azure AD applications** -> click on the added application:\n\n![Publish_to_store_2](ScreenShots/CI-CD_DOCUMENTATION/Publish_to_store_2.png)\n\n3. **STORE_APP_ID**\n\n   - copy and paste the highlighted code as the value of this secret:\n\n![Publish_to_store_3](ScreenShots/CI-CD_DOCUMENTATION/Publish_to_store_3.png)\n\n- If everything was setup correctly, on your next push commit to the `master` branch with a new `Identity.Version` in the `Package.appxmanifest`, a new submission in the Microsoft Partner Center with the new `*.msixupload` package should appear and be automatically submitted if all verifications pass\n\n<br>\n\n## 7. How to create a PAT\n\n- In a new tab open GitHub, at the top right corner, click on your profile picture and click on **Settings** from the dropdown.\n\n  ![CSA_new_pat_1](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_1.png)\n\n- Go to Developer Settings -> Personal access tokens.\n\n  ![CSA_new_pat_2](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_2.png)\n\n  ![CSA_new_pat_3](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_3.png)\n\n- Click the **Generate new token** button and enter password if prompted.\n\n  ![CSA_new_pat_4](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_4.png)\n\n- Name the token, from the permissions list choose the ones needed and at the bottom click on the **Generate token** button.\n\n  ![CSA_new_pat_5](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_5.png)\n\n- Copy the token value and paste it wherever its needed\n\n  ![CSA_new_pat_6](ScreenShots/CI-CD_DOCUMENTATION/CSA_new_pat_6.png)\n\nNOTE: once you close or refresh the page, you won't be able to copy the value of the PAT again!\n\n#\n\nBuilt with ❤ by [Pipeline Foundation](https://pipeline.foundation)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2763671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at NotepadsApp@outlook.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.5634765625,
          "content": "﻿# How to Contribute:\n\nYou can contribute to Notepads project by:\n- Report issues and bugs [here](https://github.com/0x7c13/Notepads/issues)\n- Submit feature requests [here](https://github.com/0x7c13/Notepads/issues)\n- Create a pull request to help me (Let me know before you do so):\n    * Fix an existing bug, prefix title with `fix: `.\n    * Implement new features, prefix title with `feat: `.\n    * Fix grammar errors or improve my documentations, prefix title with `doc: `.\n    * Improve CI/CD pipeline, prefix title with `ci: `.\n    * Cleanup code and code refactoring or anything else you want to change in the project not listed above, prefix title with `other: ` or assign a custom prefix with the same format (`label: `).\n- Internationalization and localization:\n    * My only inputs for the work here is to recommend you guys to use existing phrases that you found in win32 notepad.exe or vs code or notepad++ as much as possible. It makes your translations more consistent and easier to understand by end users.    \n    * Since Notepads is still in early beta. I might change texts and add texts now and then for the upcoming months. Whenever that happens, I will notify you in [Notepads Discord Server](https://discord.gg/VqetCub) (Please join it if possible) and in [GitHub Discussions](https://github.com/0x7c13/Notepads/discussions/818) (Subscribe to notifications). If someday you lose the passion, feel free to let me know so I can assign your language to others.\n    * OK, here are the steps you need to follow if you want to contribute:\n        1. Make sure you can build and run Notepads project on your machine so that you can test it after your work.\n        2. Click [here](https://github.com/0x7c13/Notepads/discussions/818) and provide your information.\n        3. Do your work and test it on your machine and check your work to make sure it is not breaking any existing layout.\n        4. Finish your work and create a PR, prefix PR title with `lang: ` (Example: https://github.com/0x7c13/Notepads/pull/30)\n        5. Let me know and I will merge it if it looks good to me.\n        Notes: You should use the language code as your folder name listed here: https://docs.microsoft.com/en-us/windows/uwp/publish/supported-languages\n\nNote: This repository follows [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/), format your pull request title according to specifications.\n\n# How to Build and Run Notepads from source:\n* Make sure your machine is running on Windows 10 1903+.\n* Make sure you have Visual Studio 2019 16.2 or newer installed.\n* Make sure you have \"Universal Windows Platform development\" component installed for Visual Studio.\n* Make sure you installed \"Windows 10 SDK (10.0.17763.0 + 10.0.19041.0)\" as well.\n* Open src/Notepads.sln with Visual Studio and set Solution Platform to x64(amd64).\n* Once opened, right click on the solution and click on \"Restore NuGet Packages\".\n* Now you should be able to build and run Notepads on your machine. If it fails, try close the solution and reopen it again.\n\n# TL;DR:\nThis is my first UWP project and I learn as I go. As a result, the code base is not well organized, and it is not well written. The philosophy here is to create a text editor that is easy to use, lightweight and yet stylish instead of creating another Notepad++ or VS Code in anyway. If you are looking for a code/programming editor, you might want to use VS Code instead. If you are looking for a lightweight text editor, you come to the right place. Notepads is here to help you do small things quicker and you should always install and use other editors that suit your need.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0546875,
          "content": "MIT License\n\nCopyright (c) 2019-2024 Jackie (Jiaqi) Liu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 2.203125,
          "content": "Privacy Policy  \n----------------\n\n### Introduction  \nOur privacy policy will help you understand what information we collect by *[Notepads](https://github.com/0x7c13/Notepads)* app, how *[Notepads](https://github.com/0x7c13/Notepads)* app uses it, and what choices you have.\n*[0x7c13](https://github.com/0x7c13)* with the help of the Github Notepads App community built the *[Notepads](https://github.com/0x7c13/Notepads)* app as a free app. This APP is provided by *[0x7c13](https://github.com/0x7c13)* at no cost and is intended for use as is.\nIf you choose to use this app, then you agree to the collection and use of information in relation with this policy. The data that we collect are used for providing and improving the app service. We will not use or share your information or usage data with anyone except as described in this Privacy Policy.  \n\n### Information Collection and Use  \nFor a better experience while using this app, certain usage data and errors are collected for identifying issues or improving the user experience of the app. *[Visual Studio AppCenter](https://visualstudio.microsoft.com/app-center/)* analytics service is used in this app to collect basic usage data plus some minimum telemetry to help debug runtime errors. See thread [#334](https://github.com/0x7c13/Notepads/issues/334) for more details.\nThe app does NOT use third party services that may collect information used to identify you. \n\n### Data Security  \nWe value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and we cannot guarantee its absolute security.\n\n### Changes to This Privacy Policy  \nWe may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. We will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately, after they are posted on this page.  \n\n### Contact Us  \nIf you have any questions or suggestions about our Privacy Policy, do not hesitate to contact us.  \nContact Information:  \nEmail: notepadsapp@outlook.com\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.58984375,
          "content": "<p align=\"center\">\n  <img width=\"128\" align=\"center\" src=\"src/Notepads/Assets/appicon_ws.gif\">\n</p>\n<h1 align=\"center\">\n  Notepads\n</h1>\n<p align=\"center\">\n  A modern, lightweight text editor with a minimalist design.\n</p>\n<p align=\"center\">\n  <a style=\"text-decoration:none\" href=\"https://www.microsoft.com/store/apps/9nhl4nsc67wm\">\n    <img src=\"https://img.shields.io/badge/Microsoft%20Store-Download-orange.svg?style=flat-square\" alt=\"Store link\" />\n  </a>\n  <a style=\"text-decoration:none\" href=\"https://github.com/0x7c13/Notepads/releases\">\n    <img src=\"https://img.shields.io/github/release/0x7c13/notepads.svg?label=latest%20version&style=flat-square\" alt=\"Releases\" />\n  </a>\n  <a style=\"text-decoration:none\">\n    <img src=\"https://img.shields.io/badge/platform-Windows%20%7C%20UWP-yellow.svg?style=flat-square\" alt=\"Platform\" />\n  </a>\n  <a style=\"text-decoration:none\" href=\"https://discord.gg/VqetCub\">\n    <img src=\"https://img.shields.io/discord/588473626651787274.svg?style=flat-square\" alt=\"Discord\" />\n  </a>\n</p>\n\n## What is Notepads and why do I care?\n\nI have been waiting long enough for a modern Windows 10 notepad app to come before I decided to create one myself. Don’t get me wrong, Notepad++, VS Code, and Sublime are great text editors. I have used them all and I will continue to use them in the future. However, they are either too heavy or look less appealing. There are times that I just wanted to use Windows notepad for things like writing notes or editing config files. So I decided to create a win32 notepad replacement here and try to give it a modern look and feel. Most importantly, it has to be blazingly fast and appeals to everyone.\n\nSo here comes the “Notepads” 🎉 (s stands for Sets).\n\n* Fluent design with a built-in tab system.\n* Blazingly fast and lightweight.\n* Launch from the command line or PowerShell by typing: `notepads` or `notepads %FilePath%`.\n* Multi-line handwriting support.\n* Built-in Markdown live preview.\n* Built-in diff viewer (preview your changes).\n* Session snapshot and multi-instances.\n\n![Screenshot Dark](ScreenShots/1.png?raw=true \"Dark\")\n![Screenshot Markdown](ScreenShots/2.png?raw=true \"Markdown\")\n![Screenshot DiffViewer](ScreenShots/3.png?raw=true \"DiffViewer\")\n![Screenshot Light](ScreenShots/4.png?raw=true \"Light\")\n\n## Shortcuts:\n\n* Ctrl+N/T to create new tab.\n* Ctrl+(Shift)+Tab to switch between tabs.\n* Ctrl+Num(1-9) to quickly switch to specified tab.\n* Ctrl+\"+\"/\"-\" for zooming. Ctrl+\"0\" to reset zooming to default.\n* Ctrl+L/R to change text flow direction. (LTR/RTL)\n* Alt+P to toggle preview split view for Markdown file.\n* Alt+D to toggle side-by-side diff viewer.\n\n## Platform limitations (UWP):\n\n* You won't be able to save files to system folders due to UWP restriction (windows, system32, etc.).\n* You cannot associate potentially harmful file types (.cmd, .bat etc.) with Notepads.\n* Notepads does not work well with large files; the file size limit is set to 1MB for now. I will add large file support later.\n\n## Downloads:\n\nNotepads is available in the Microsoft Store. You can get the latest version of Notepads here for free: [Microsoft Store Link](https://www.microsoft.com/store/apps/9nhl4nsc67wm).\n\nYou can also use the Windows Package Manager to install notepads:\n```cmd\nwinget install \"Notepads App\"\n```\n\n## Changelog:\n\n* [Notepads Releases](https://github.com/0x7c13/Notepads/releases)\n\n## Disclaimer and Privacy statement:\n\nTo be 100% transparent:\n\n* Notepads does not and will never collect user information in terms of user privacy.\n* I will not track your IP.\n* I will not record your typings or read any of your files created in Notepads including file name and file path.\n* No typings or files will be sent to me or third parties.\n\nI am using analytics service \"AppCenter\" to collect basic usage data plus some minimum telemetry to help me debug runtime errors. Here is the thread I made clear on this topic: https://github.com/0x7c13/Notepads/issues/334\n\nFeel free to review the source code or build your own version of Notepads since it is 100% open sourced.\n\n#### More to read here: [[Privacy Policy](PRIVACY.md)]\n\nTL;DR: You might notice that I work for Microsoft but Notepads is my personal project that I accomplish during free time (to empower every person and every organization on the planet to achieve more😃). I do not work for the Windows team, nor do I work for a Microsoft UX/App team. I am not expert on creating Windows apps either. I learned how to code UWP as soon as I started this project, so don’t put too much hope on me or treat it as a project sponsored by Microsoft.\n\n## Contributing:\n\n* [How to contribute?](CONTRIBUTING.md)\n* Notepads is free and open source, if you like my work, please consider:\n   * Star this project on GitHub\n   * Leave me a review [here](https://www.microsoft.com/store/apps/9nhl4nsc67wm)\n   * [![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/D1D6Y3C6)\n\n## Dependencies and References:\n* [Windows Community Toolkit](https://github.com/windows-toolkit/WindowsCommunityToolkit)\n* [XAML Controls Gallery](https://github.com/microsoft/Xaml-Controls-Gallery)\n* [Windows UI Library](https://github.com/Microsoft/microsoft-ui-xaml)\n* [ColorCode Universal](https://github.com/WilliamABradley/ColorCode-Universal)\n* [UTF Unknown](https://github.com/CharsetDetector/UTF-unknown)\n* [DiffPlex](https://github.com/mmanela/diffplex)\n* [Win2D](https://github.com/microsoft/Win2D)\n\n## Special Thanks:\n\n* [Yi Zhou](http://zhouyiwork.com/) - App icon designer, Notepads App Icon (old) is greatly inspired by the new icon for Windows Terminal.\n* [Mahmoud Qurashy](https://github.com/mah-qurashy) - App icon and file icon(s) designer, creator of the new Notepads App Icon.\n\n* Alexandru Sterpu - App Tester, who helped me a lot during preview/beta testing.\n* Code Contributors: [DanverZ](https://github.com/chenghanzou), [BernhardWebstudio](https://github.com/BernhardWebstudio), [Csányi István](https://github.com/AmionSky), [Pavel Erokhin](https://github.com/MairwunNx), [Sergio Pedri](https://github.com/Sergio0694), [Lucas Pinho B. Santos](https://github.com/pinholucas), [Soumya Ranjan Mahunt](https://github.com/soumyamahunt), [Belleve Invis](https://github.com/be5invis), [Maickonn Richard](https://github.com/Maickonn), [Xam](https://github.com/XamDR)\n* Documentation Contributors: [Craig S.](https://github.com/sercraig)\n* Localization Contributors:\n    * [fr-FR][French (France)]: [François Rousselet](https://github.com/frousselet), [François-Joseph du Fou](https://github.com/FJduFou), [Armand Delessert](https://github.com/ArmandDelessert)\n    * [es-ES][Spanish (Spain)]: [Jose Pinilla](https://github.com/joseppinilla)\n    * [zh-CN][Chinese (S)]: [lindexi](https://github.com/lindexi), [walterlv](https://github.com/walterlv), [0x7c13](https://github.com/0x7c13)\n    * [hu-HU][Hungarian (Hungary)]: [Csányi István](https://github.com/AmionSky), [Kristóf Kékesi](https://github.com/KristofKekesi)\n    * [tr-TR][Turkish (Turkey)]: [Mert Can Demir](https://github.com/validatedev), [Emirhakan Tanhan](https://github.com/EmirhakanTanhan)\n    * [ja-JP][Japanese (Japan)]: [Mamoru Satoh](https://github.com/pnp0a03)\n    * [de-DE][German (Germany)]/[de-CH][German (Switzerland)]: [Walter Wolf](https://github.com/WalterWolf49)\n    * [ru-RU][Russian (Russia)]: [Pavel Erokhin](https://github.com/MairwunNx), [krlvm](https://github.com/krlvm)\n    * [fi-FI][Finnish (Finland)]: [Esa Elo](https://github.com/sauihdik)\n    * [uk-UA][Ukrainian (Ukraine)]: [Taras Fomin aka Tarik02](https://github.com/Tarik02)\n    * [it-IT][Italian (Italy)]: [Andrea Guarinoni](https://github.com/guari), [Bunz](https://github.com/66Bunz)\n    * [cs-CZ][Czech (Czech Republic)]: [Jan Rajnoha](https://github.com/JanRajnoha)\n    * [pt-BR][Portuguese (Brazil)]: [Lucas Pinho B. Santos](https://github.com/pinholucas)\n    * [ko-KR][Korean (Korea)]: [Donghyeok Tak](https://github.com/tdh8316)\n    * [hi-IN][Hindi (India)]/[or-IN][Odia (India)]: [Soumya Ranjan Mahunt](https://github.com/soumyamahunt)\n    * [pl-PL][Polish (Poland)]: [Daxxxis](https://github.com/Daxxxis)\n    * [ka-GE][Georgian (Georgia)]: [guram mazanashvili](https://github.com/gmaza)\n    * [hr-HR][Croatian (Croatia)]: [milotype](https://github.com/milotype)\n    * [zh-TW][Chinese (T)]: [Tony Yao](https://github.com/SeaBao)\n    * [pt-PT][Portuguese (Portugal)]: [O.Leitão](https://github.com/oleitao)\n    * [sr-Latn][Serbian (Latin)]: [bzzrak](https://github.com/bzzrak)\n    * [sr-cyrl][Serbian (Cyrillic)]: [bzzrak](https://github.com/bzzrak)\n    * [nl-NL][Dutch (Netherlands)]: [Stephan Paternotte](https://github.com/Stephan-P)\n\n* Notepads CI/CD pipeline: Built with ❤ by [Pipeline Foundation](https://pipeline.foundation)\n\n[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/0)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/0)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/1)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/1)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/2)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/2)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/3)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/3)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/4)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/4)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/5)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/5)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/6)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/6)[![](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/7)](https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/7)\n\n## Stay tuned 📢:\n* [Notepads Discord Server](https://discord.gg/VqetCub)\n"
        },
        {
          "name": "ScreenShots",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 0.859375,
          "content": "# Universal Windows Platform build definition\n\ntrigger:\n  paths:\n    exclude:\n    - '*.md'\n    - 'ScreenShots/'\n    - '.whitesource'\n    - '.github/'\n  tags:\n    exclude:\n    - '*'\n\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  solution: '**/*.sln'\n  buildPlatform: 'x86|x64|arm64'\n  buildConfiguration: 'Production'\n  appxPackageDir: '$(build.artifactStagingDirectory)\\AppxPackages\\\\'\n\nsteps:\n- task: NuGetToolInstaller@1\n\n- task: NuGetCommand@2\n  inputs:\n    restoreSolution: '$(solution)'\n\n- task: VSBuild@1\n  inputs:\n    platform: 'x64'\n    solution: '$(solution)'\n    configuration: '$(buildConfiguration)'\n    msbuildArgs: '/p:AppxBundlePlatforms=\"$(buildPlatform)\"\n                  /p:AppxPackageDir=\"$(appxPackageDir)\"\n                  /p:AppxBundle=Always\n                  /p:UapAppxPackageBuildMode=StoreUpload\n                  /p:AppxPackageSigningEnabled=false'\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}