{
  "metadata": {
    "timestamp": 1736711208867,
    "page": 137,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MirrorNetworking/Mirror",
      "stars": 5355,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 8.2451171875,
          "content": "root = true\n###############################\n# Core EditorConfig Options   #\n###############################\n[*.{cs,csx,vb,vbx,md}]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ncharset = utf-8\n\n[*.md]\ntrim_trailing_whitespace = false\n# Code files\n[*.{cs,csx,vb,vbx}]\ntrim_trailing_whitespace = true\n###############################\n# .NET Coding Conventions     #\n###############################\n[*.{cs,vb}]\n# Organize usings\ndotnet_sort_system_directives_first = true\n# this. preferences\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\n# Language keywords vs BCL types preferences\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n# Parentheses preferences\ndotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion\ndotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion\ndotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion\ndotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion\n# Modifier preferences\ndotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion\ndotnet_style_readonly_field = true:suggestion\n\n# Code-block preferences\ncsharp_prefer_braces = when_multiline:suggestion\ncsharp_prefer_simple_using_statement = false:suggestion\n\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\ndotnet_prefer_inferred_tuple_names = true:suggestion\ndotnet_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:suggestion\ndotnet_style_prefer_conditional_expression_over_assignment = true:suggestion\ndotnet_style_prefer_conditional_expression_over_return = true:suggestion\n###############################\n# Naming Conventions          #\n###############################\n# Style Definitions\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n# Use PascalCase for constant fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style\ndotnet_naming_symbols.constant_fields.applicable_kinds = *\ndotnet_naming_symbols.constant_fields.applicable_accessibilities = *\ndotnet_naming_symbols.constant_fields.required_modifiers = const\n# Methods are PascalCase\ndotnet_naming_rule.method_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.method_should_be_pascal_case.symbols = method\ndotnet_naming_rule.method_should_be_pascal_case.style = pascal_case_style\ndotnet_naming_symbols.method.applicable_kinds = method\ndotnet_naming_symbols.method.applicable_accessibilities = *\ndotnet_naming_symbols.method.required_modifiers =\n\n# Private instance fields are camelCase\ndotnet_naming_symbols.private_fields.applicable_kinds = field\ndotnet_naming_symbols.private_fields.applicable_accessibilities = private\ndotnet_naming_symbols.private_fields.required_modifiers =\ndotnet_naming_style.lower_case.capitalization = camel_case\ndotnet_naming_style.lower_case.required_prefix =\ndotnet_naming_style.lower_case.required_suffix =\ndotnet_naming_rule.private_fields_underscore_lower_case.symbols = private_fields\ndotnet_naming_rule.private_fields_underscore_lower_case.style = lower_case\ndotnet_naming_rule.private_fields_underscore_lower_case.severity = warning\n\n# Static fields are PascalCase\ndotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion\ndotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields\ndotnet_naming_rule.static_fields_should_be_camel_case.style = pascal_case_style\n\ndotnet_naming_symbols.static_fields.applicable_kinds = field\ndotnet_naming_symbols.static_fields.required_modifiers = static\n\n###############################\n# C# Coding Conventions       #\n###############################\n[*.cs]\n# var preferences\ncsharp_style_var_for_built_in_types = false:suggestion\ncsharp_style_var_when_type_is_apparent = false:suggestion\ncsharp_style_var_elsewhere = false:suggestion\n# Expression-bodied members\ncsharp_style_expression_bodied_methods = true:suggestion\ncsharp_style_expression_bodied_constructors = false:suggestion\ncsharp_style_expression_bodied_operators = false:suggestion\ncsharp_style_expression_bodied_properties = true:suggestion\ncsharp_style_expression_bodied_indexers = true:suggestion\ncsharp_style_expression_bodied_accessors = true:suggestion\n# Pattern matching preferences\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\n# Null-checking preferences\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n# Modifier preferences\ncsharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion\n# Expression-level preferences\ncsharp_prefer_braces = true:suggestion\ncsharp_style_deconstructed_variable_declaration = true:suggestion\ncsharp_prefer_simple_default_expression = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\n###############################\n# C# Formatting Rules         #\n###############################\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n# Indentation preferences\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\n# Wrapping preferences\ncsharp_preserve_single_line_statements = true\ncsharp_preserve_single_line_blocks = true\n\n# ReSharper properties\nresharper_blank_lines_around_invocable = 1\nresharper_blank_lines_around_type = 1\nresharper_braces_for_for = not_required\nresharper_braces_for_dowhile = not_required\nresharper_braces_for_fixed = not_required\nresharper_braces_for_lock = not_required\nresharper_braces_for_using = not_required\nresharper_braces_for_while = not_required\nresharper_braces_for_foreach = not_required\nresharper_braces_for_ifelse = not_required\nresharper_braces_redundant = true\nresharper_default_private_modifier = implicit\nresharper_object_creation_when_type_evident = explicitly_typed\nresharper_place_simple_initializer_on_single_line = true\nresharper_remove_blank_lines_near_braces_in_code = true\nresharper_remove_blank_lines_near_braces_in_declarations = true\n\n###############################\n# VB Coding Conventions       #\n###############################\n[*.vb]\n# Modifier preferences\nvisual_basic_preferred_modifier_order = Partial, Default, Private, Protected, Public, Friend, NotOverridable, Overridable, MustOverride, Overloads, Overrides, MustInherit, NotInheritable, Static, Shared, Shadows, ReadOnly, WriteOnly, Dim, Const, WithEvents, Widening, Narrowing, Custom, Async:suggestion\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.142578125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# to native line endings on checkout.\n*.cs diff=csharp text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.453125,
          "content": "# Created by performance test\nAssets/StreamingAssets/\nAssets/StreamingAssets.meta\n\n# =============== #\n# Unity generated #\n# =============== #\nSource/Temp/\nSource/Library/\nSource/Logs/\nUserSettings/Layouts\nUserSettings/Search.settings\n\n# ===================================== #\n# Project specific #\n# ===================================== #\nDatabase.sqlite\nDatabase/\nBuilds/\n\n# ===================================== #\n# Visual Studio / MonoDevelop / Rider   #\n# ===================================== #\nExportedObj/\nobj/\n*.svd\n*.userprefs\n/*.csproj\nSource/Assembly-CSharp.csproj\nSource/Assembly-CSharp-Editor.csproj\nSource/Assembly-CSharp-firstpass.csproj\nSource/Source.sln\n*.pidb\n*.suo\n/*.sln\n*.user\n*.unityproj\n*.booproj\nOutput/\nbin/\n.vs/\n.vscode/\n.idea/\nMirror/packages\n.mfractor\n\n# Unity generated\nLibrary\nTemp\nUnityPackageManager\nCodeCoverage\nLogs\nObj\n*.mdb\n*.mdb.meta\nProjectSettings/Packages/com.unity.testtools.codecoverage/Settings.json\nProjectSettings/RiderScriptEditorPersistedState.asset\nProjectSettings/SceneTemplateSettings.json\nUserSettings/\n# Packages/manifest.json is enough. lock is auto generated from it.\nPackages/packages-lock.json\n\n# generated by jekyll for documentation\ndocs/_site\ndocs/.bundle\ndocs/vendor\ndocs/.sass-cache\n# ============ #\n# OS generated #\n# ============ #\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n/VisRepo.txt\n*.vsconfig\n\n\n# CompilationLog.txt created by tests\nAssets/Mirror/Tests/Editor/Weaver/*/CompilationLog.txt\n"
        },
        {
          "name": ".releaserc.yml",
          "type": "blob",
          "size": 2.640625,
          "content": "branches:\n  - name: master\n  \nverifyConditions:\n  - \"@semantic-release/github\"\n\nplugins:\n  # Determines the type of release to create, if any.\n  # See https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#type\n  # More types can be added here and in release-notes-generator below.\n  - - '@semantic-release/commit-analyzer'\n    - preset: \"angular\"\n      releaseRules:\n      - type: \"breaking\"\n        release: \"major\"\n      - type: \"release\"\n        release: \"major\"\n      - type: \"feature\"\n        release: \"minor\"\n\n  # Extends the behavior of semantic-release to generate release notes.\n  # 'fix' and 'feat' are built in and don't need to be defined here.\n  # More types can be added to correspond with commit-analyzer above.\n  - - '@semantic-release/release-notes-generator'\n    - preset: \"conventionalcommits\"\n      presetConfig:\n        types:\n        - type: \"breaking\"\n          section: \"Breaking Changes\"\n          hidden: false\n        - type: \"release\"\n          section: \"Release\"\n          hidden: false\n        - type: \"fix\"\n          section: \"Bug Fixes\"\n          hidden: false\n        - type: \"feat\"\n          section: \"Features\"\n          hidden: false\n        - type: \"feature\"\n          section: \"Features\"\n          hidden: false\n        - type: \"perf\"\n          section: \"Performance Improvements\"\n          hidden: false\n\n  # Write the new version in version.txt\n  - - '@semantic-release/exec'\n    - prepareCmd: \"echo ${nextRelease.version} > Assets/Mirror/version.txt\"\n\n  # Remove Test folder so it's excluded from Unity package\n  # -f: force, -r: recursive\n  - - '@semantic-release/exec'\n    - prepareCmd: \"rm -f -r Assets/Mirror/Tests && rm -f Assets/Mirror/Tests.meta\"\n  \n  # Remove EdgeGap Hosting folder so it's excluded from Unity package\n  # -f: force, -r: recursive\n  # - - '@semantic-release/exec'\n  #   - prepareCmd: \"rm -f -r Assets/Mirror/Hosting && rm -f Assets/Mirror/Hosting.meta\"\n  \n  # Move ScriptTemplates to Mirror folder so they're included in Unity package\n  # There's an editor script that moves them back to Assets when imported to Unity\n  - - '@semantic-release/exec'\n    - prepareCmd: \"mv Assets/ScriptTemplates Assets/Mirror/ && mv Assets/ScriptTemplates.meta Assets/Mirror/\"\n\n  # Create Unity package with Mirror, ScriptTemplates, and LICENSE\n  - - '@semantic-release/exec'\n    - prepareCmd: \"dotnet script .github/UnityPack.csx ${nextRelease.version}\"\n\n  # Create a new release on GitHub\n  - - '@semantic-release/github'\n    - assets:\n      - path: \"Mirror.unitypackage\"\n        label: \"Mirror Unity Package\"\n        name: \"Mirror-${nextRelease.version}.unitypackage\"\n      successCommentCondition: \"false\"\n      failCommentCondition: \"false\"\n"
        },
        {
          "name": "Assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.4521484375,
          "content": "# Contribution Guide\n\n## Introduction\n\nFirst off, thank you for considering contributing to this project. It's people like you that make it such a great tool.\n\nFollowing these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests.\n\nThis is an open source project and we love to receive contributions from our community — you! There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into the main project itself.\n\nIf you haven't already, come find us in [Discord](https://discord.gg/N9QVxbM). We want you working on things you're excited about, and we can give you instant feedback.\n\n### I don't want to read this whole thing I just have a question!!\n\nWe currently allow our users to use the issue tracker for support questions. But please be wary that maintaining an open source project can take a lot of time from the maintainers. If asking for a support question, state it clearly and take the time to explain your problem properly. Also, if your problem is not strictly related to this project we recommend you to use [Stack Overflow](https://stackoverflow.com) instead.\n\n## How Can I Contribute?\n\nThere are multiple ways to help: testing, finding bugs or issues, or even fixing a bug yourself and submitting a Pull Requests.\n\n### Testing\n\nWe have [unit tests](https://en.wikipedia.org/wiki/Unit_testing) that cover some parts of Mirror, but the best way to find a problem is running it with existing projects. Try our releases and pull requests in your own projects and let us know if there are any issues.\n\n### Reporting Bugs\n\nBefore creating bug reports, please check the existing bug reports as you might find out that you don't need to create one. When you are creating a bug report, please include as many details as possible.\n\n#### How Do I Submit A (Good) Bug Report?\n\n[Create an issue](https://github.com/vis2k/Mirror/issues/new?template=bug_report.md) on the project's repository and provide the following information.\n\nExplain the problem and include additional details to help maintainers reproduce the problem:\n\n* **Use a clear and descriptive title** for the issue to identify the problem.\n* **Provide a simplified project that reproduces the issue whenever possible.**\n* **Describe the exact steps which reproduce the problem** in as many details as possible. For example, start by explaining how you used the project. When listing steps, **don't just say what you did, but explain how you did it**.\n* **Provide specific examples to demonstrate the steps**. It's always better to get more information. You can include links to files or GitHub projects, copy/pasteable snippets or even print screens or animated GIFS. If you're providing snippets in the issue, use [Markdown code blocks](https://help.github.com/articles/markdown-basics/#multiple-lines).\n* **Describe the behavior you observed after following the steps** and point out what exactly is the problem with that behavior.\n* **Explain which behavior you expected to see instead and why.**\n* **If the problem wasn't triggered by a specific action**, describe what you were doing before the problem happened and share more information using the guidelines below.\n\nProvide more context by answering these questions:\n\n* **Did the problem start happening recently** (e.g. after updating to a new version) or was this always a problem?\n* If the problem started happening recently, **can you reproduce the problem in an older version?** What's the most recent version in which the problem doesn't happen?\n* **Can you reliably reproduce the issue?** If not, provide details about how often the problem happens and under which conditions it normally happens.\n\nInclude details about your configuration and environment:\n\n* **Which version of the project are you using?**\n* **What's the name and version of the OS you're using**?\n* **Any other information that could be useful about you environment**\n\n### Suggesting Enhancements\n\nThis section guides you through submitting an enhancement suggestion for this project, including completely new features and minor improvements to existing functionality. Following these guidelines helps maintainers and the community understand your suggestion and find related suggestions.\n\nBefore creating enhancement suggestions, please check the list of enhancements suggestions in the issue tracker as you might find out that you don't need to create one. When you are creating an enhancement suggestion, please include as many details as possible.\n\n#### How Do I Submit A (Good) Enhancement Suggestion?\n\n[Create an issue](https://github.com/vis2k/Mirror/issues/new?template=feature_request.md) on the project's repository and provide the following information:\n\n* **Use a clear and descriptive title** for the issue to identify the suggestion.\n* **Provide a step-by-step description of the suggested enhancement** in as many details as possible.\n* **Provide specific examples to demonstrate the steps**. It's always better to get more information. You can include links to files or GitHub projects, copy/pasteable snippets or even print screens or animated GIFS. If you're providing snippets in the issue, use [Markdown code blocks](https://help.github.com/articles/markdown-basics/#multiple-lines).\n* **Describe the current behavior** and **explain which behavior you expected to see instead** and why.\n* **List some other similar projects where this enhancement exists.**\n* **Specify which version of the project you're using.**\n* **Specify the current environment you're using.** if this is a useful information.\n* **Provide a specific use case** - Often we get requests for a feature not realizing there is already a way to fulfill their use case. In other words, don't just give us a solution, give us a problem.\n\n\n### Creating Pull Requests\n\n#### How Do I Submit A (Good) Pull Request?\n\nPlease send a [GitHub Pull Request](https://github.com/vis2k/Mirror/compare) with a clear list of what you've done (read more about [pull requests](http://help.github.com/pull-requests/)). \nWhen you send a pull request, we will love you forever if you include unit tests. \nWe can always use more test coverage. \n\n* **Keep pull requests small** Never combine multiple things in the same pull request. It is an order of magnitude easier to review 10 small pull requests than 1 large pull request that combines all changes. A pull request with 300+ changed lines has almost 0% chance of getting merged even if it is the best code in the world.\n* **Use a clear and descriptive title** for the pull request to state the improvement you made to the code or the bug you solved.\n* **Provide a link to the related issue** if the pull request is a follow up of an existing bug report or enhancement suggestion.\n* **Comment why this pull request represents an enhancement** and give a rationale explaining why you did it that way and not another way.\n* **Use the same coding style as the one used in this project**.\n* **Documentation:** If your PR adds or changes any public properties or methods, you must retain the old versions preceded with `[Obsolete(\"Describe what to do / use instead\")` attribute wherever possible, and you must update any relevant pages in the /docs folder.  It's not done until it's documented!\n* **Welcome suggestions from the maintainers to improve your pull request**.\n* **Include unit tests for new code** Unit test for new code helps us check if it works. See the [Unity Test Runner](https://docs.unity3d.com/2018.4/Documentation/Manual/testing-editortestsrunner.html) for more information about running tests in unity.\n\nPlease follow our coding conventions (below) and make sure all of your commits are atomic (one feature per commit). Rebase your pull requests if necessary.\n\nAlways write a clear log message for your commits. One-line messages are fine for small changes, but bigger changes should look like this:\n\n```sh\n$ git commit -m \"A brief summary of the commit\"\"\n> \n> A paragraph describing what changed and its impact.\n```\n  \nIf your pull request breaks any test,  it has no hope of being merged.\n\nHere are some more [good practices](https://blog.ploeh.dk/2015/01/15/10-tips-for-better-pull-requests/) to follow when submitting pull requests to any project.\n\n#### Optimizations\n\nThere are generally 2 types of optimizations, micro-optimizations and macro-optimizations.  The distinction has nothing to do with how much they improve the program.\n\nMicro-optimizations try to improve the performance of an application by replacing instructions with equivalent but more efficient instructions.  Some example micro-optimizations include:\n* replace `i / 4` with `i >> 2`\n* eliminate an allocation.\n* replace `Vector3.Distance(a,b) < K` with `Vector3.SqrMagnitude(b - a) < K * K`\n* convert a class to struct\n* manually inlining small functions\n* rewriting a function in native code\n\nMacro-optimizations try to improve the performance of an application by changing the algorithm.  Some examples include:\n* Serialize a message once O(1),  instead of for every single client O(n)\n* Change interest management algorithm,  as of this writing every object checks every other object O(n^2),  it could be replaced by spatial hashing, which is O(n)\n* When synchronizing movement,  instead of synchronizing every position change,  you could synchronize the velocity and let the other side predict the position.\n\nMacro-optimizations tend to change the **scalability** of mirror,  by changing an algorithm, you may now support 10x more customers on the same hardware, it is even possible for a macro optimization to make performance worse for small numbers. Macro optimization usually make a really big difference, but are much harder to make. \n\nMicro-optimizations tend to change the performance of mirror in a linear way. There are some micro optimizations that make a huge impact on performance such as eliminating allocations in the hot path.\n\nWe prefer readable code over optimal code. We do not like any kind of optimization if it makes the code less readable (they generally do).  For that reason,  we require that both micro and macro optimization pull requests come with screenshots profiling a real game or at least a benchmark with a realistic Mirror workload. It is not enough to show that one operation is faster than the other, you must prove that this will make a difference for actual games using Mirror.\n\nIf your optimization pull request does not come with profiling data showing real gains in a meaningful test is has no hope of getting merged.\n\n## Coding conventions\n\nStart reading our code and you'll get the hang of it. We optimize for readability:\n\n* 4 spaces isntead of tabs\n* We value simplicity. The code should be easy to read and avoid magic\n* No abbrevations. Use 'parentBody' instead of 'pB' or similar\n* XML summary comments as one liners. short and simple for intellisense.\n* Use string interpolation like $\"name = {name}\" instead of \"name = \" + name\n* **KISS / Occam's Razor** - always use the most simple solution.\n* **No Premature Optimizations**\n\tMMOs need to run for weeks without issues or exploits.\n    Only do GC optimizations and caching in hot path. Avoid it everywhere else to keep the code simple.\n* **Curly Braces { }**\n    Always use braces even for one line if's. Unity did this everywhere, and there is value in not accidentally missing a line in an if statement because there were no braces.\n* **Naming**\n    Follow [C# standard naming conventions](https://github.com/ktaranov/naming-convention/blob/master/C%23%20Coding%20Standards%20and%20Naming%20Conventions.md). Also, be descriptive. \\`NetworkIdentity identity\\`, not \\`NetworkIdentity uv\\` or similar. If you need a comment to explain it, the name needs to be changed. For example, don't do `msg = ... // the message`, use `message = ...` without a comment instead. Avoid prefixes like `m_`, `s_`, or similar.\n* **private** \n    Fields and methods in a class are private by default, no need to use the private keyword there.\n* This is open source software. Consider the people who will read your code, and make it look nice for them. It's sort of like driving a car: Perhaps you love doing donuts when you're alone, but with passengers the goal is to make the ride as smooth as possible.\n* comment EVERYTHING that's not obvious. networking is hard. 10 years from now nothing that we did today is still obvious.\n<img width=\"263\" alt=\"2021-03-09_16-41-43@2x\" src=\"https://user-images.githubusercontent.com/16416509/110442977-633a3000-80f6-11eb-8466-1addfa466763.png\">\n\n\n**The Python Way**\n\nUnlike Python, C# has different ways to do the same thing, which causes endless discussions and pull requests to change from one way to the other. Let's always use the most simple, most obvious way:\n  * **type** vs. **var**: always use 'int x' instead of 'var x'. Less guess work. Less magic. If we **always** use the proper type then we have to waste no brain cycles on unnecessary decision making.\n  * **if** vs. **switch**: any if statement could be converted to switch and back. Again, let's not have endless discussions and use if unless _switch_ makes overwhelmingly much sense. Python doesn't have switch either, they don't have those discussions and pull requests over there.\n  * **int** vs. **Int32**: use int instead of Int32, double instead of Double, string instead of String and so on. We won't convert all ints to Int32, so it makes most sense to never use Int32 anywhere and avoid time wasting discussions.\n\nThanks.\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.0166015625,
          "content": "github: miwarnec\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1220703125,
          "content": "MIT License\n\nCopyright (c) 2015, Unity Technologies\nCopyright (c) 2019, Mischa, Paul, Chris, Robin, Stephen and Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "ProjectSettings",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 30.3720703125,
          "content": "![Mirror Logo](https://user-images.githubusercontent.com/16416509/119120944-6db26780-ba5f-11eb-9cdd-fc8500207f4d.png)\n<p align=\"center\">\n<a href=\"https://assetstore.unity.com/packages/tools/network/mirror-129321\"><img src=\"https://img.shields.io/badge/download-brightgreen.svg?style=for-the-badge&logo=unity&colorA=363a4f&colorB=f5a97f\" alt=\"Download\"></a>\n<a href=\"https://github.com/MirrorNetworking/Mirror#made-with-mirror\"><img src=\"https://img.shields.io/badge/showcase-brightgreen.svg?style=for-the-badge&logo=github&colorA=363a4f&colorB=f5a97f\" alt=\"Showcase\"></a>\n<a href=\"https://mirror-networking.gitbook.io/\"><img src=\"https://img.shields.io/badge/docs-brightgreen.svg?style=for-the-badge&logo=gitbook&logoColor=white&colorA=363a4f&colorB=f5a97f\" alt=\"Documentation\"></a>\n<a href=\"https://forum.unity.com/threads/mirror-networking-for-unity-aka-hlapi-community-edition.425437/\"><img src=\"https://img.shields.io/badge/forum-brightgreen.svg?style=for-the-badge&logo=unity&colorA=363a4f&colorB=f5a97f\" alt=\"Forum\"></a>\n<a href=\"https://trello.com/b/fgAE7Tud\"><img src=\"https://img.shields.io/badge/roadmap-brightgreen.svg?style=for-the-badge&logo=trello&colorA=363a4f&colorB=f5a97f\" alt=\"Roadmap\"></a>\n<br>\n<a href=\"https://github.com/vis2k/Mirror/blob/master/LICENSE\"><img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg?style=for-the-badge&colorA=363a4f&colorB=b7bdf8\" alt=\"License: MIT\"></a>\n<a href=\"https://ci.appveyor.com/project/vis2k73562/hlapi-community-edition/branch/mirror\"><img src=\"https://img.shields.io/appveyor/ci/vis2k73562/hlapi-community-edition/Mirror.svg?style=for-the-badge&colorA=363a4f&colorB=b7bdf8\" alt=\"Build\"></a>\n<a href=\"https://github.com/vis2k/Mirror/releases/latest\"><img src=\"https://img.shields.io/github/release/vis2k/Mirror.svg?style=for-the-badge&colorA=363a4f&colorB=b7bdf8\" alt=\"release\"></a>\n<a href=\"https://discordapp.com/invite/xVW4nU4C34\"><img src=\"https://img.shields.io/discord/343440455738064897.svg?style=for-the-badge&colorA=363a4f&colorB=b7bdf8\" alt=\"Discord\"></a>\n</p>\n\n**It's only the dreamers who ever move mountains.**\n![mmos_conceptart](https://github.com/user-attachments/assets/a95f2229-2f07-4c8c-9245-93a5e8004b7d)\n\n## Mirror Networking \nThe **#1** free **open source** game networking library for **Unity 2019 / 2020 / 2021 / 2022 / 6**.\n\nUsed **in production** by major hits like [**Population: ONE**](https://www.populationonevr.com/) and many [**more**](#made-with-mirror).\n\nOriginally based on [**UNET**](https://web.archive.org/web/20230915050929/https://blog.unity.com/technology/announcing-unet-new-unity-multiplayer-technology): battle tested **since 2014** for 10 years and counting!\n\nMirror is **[stable](https://mirror-networking.gitbook.io/docs/general/tests)**, [**modular**](#low-level-transports) & **[easy to use](https://mirror-networking.gitbook.io/)** for all types of games, even small [**MMORPGs**](#made-with-mirror) 🎮.\n\n**Made in 🇩🇪🇺🇸🇬🇧🇸🇬🇹🇼 with ❤️**.\n\n---\n## Features\n\nMirror comes with a wide variety of features to support all game genres.<br>\nMany of our features quickly became the norm across all Unity netcodes!<br>\n\n| Feature                       | Description                                                                                                                                                   | Status          |\n|-------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|\n| 🎛 **Transports**             | UDP, TCP, Websockets, Steam, Relay and more.                                                                                                                  | **Stable**      | \n| 🪜 **Interest Management**    | Spatial Hashing & Distance Checker to partition the world.                                                                                                    | **Stable**      |\n| ↗️ **SyncDirection**          | Server & Client Authority - per component with one click.                                                                                                     | **Stable**      |\n| 🐌 **Latency Simulation**     | Simulate latency, packet loss & jitter locally.                                                                                                               | **Stable**      |\n| 🧲 **Batching**               | Minimize message overhead via batching automatically.                                                                                                         | **Stable**      |\n| 💌 **RPCs & SyncVars**        | Synced vars and remote function calls built in & safe.                                                                                                        | **Stable**      |\n| 🙅‍♀️ **Allocation Free**      | Free of runtime allocations and no GC (except Transports).                                                                                                    | **Stable**      |\n| 🛞 **Transform & Physics**   | Transform & Physics sync built in.                                                                                                                            | **Stable**      |\n| 👩‍🍼 **Child Components**    | Put networked components on anything.                                                                                                                         | **Stable**      |\n| 🪚️ **IL Post Processing**    | Zero overhead [Rpcs] and [Commands] via IL post processing!                                                                                                   | **Stable**      |\n| ☁️ **Two Click Hosting**      | (Optional) <a href=\"https://mirror-networking.gitbook.io/docs/hosting/edgegap-hosting-plugin-guide\">Build & Push</a> directly from Unity Editor to the Cloud. | **Stable**     |\n|                               |                                                                                                                                                               |                 |\n| 📏 **Snapshot Interpolation**       | Perfectly smooth movement for all platforms & genres.                                                                                                    | **Stable**      |\n| 🔫 **Lag Compensation**       | Roll back state to see what the player saw during input.                                                                                                      | **Beta**     |\n| 🔒 **Encryption**             | Secure communication with end-to-end encryption.                                                                                                              | **Beta** |\n| 🔒 **Cheat Detection**        | Mirror Guard safely detects Melon Loader & more.                                                                                                              | **Beta** |\n| 🚀 **Unreliable Mode**       | Quake style Unreliable SyncMode for any component.                                                                                                      | **Development**     |\n|                               |                                                                                                                                                               |                 |\n| 🧙‍♂️ **General Purpose**     | Mirror supports all genres for all your games!                                                                                                                |                 |\n| 🧘‍♀️ **Stable API**          | Long term (10 years)  stability instead of new versions!                                                                                                      |\n| 🔬 **Battle Tested**          | Mirror serves over 100 million players. It just works!                                                                                                        |                 |\n| 💴 **Free & Open Source**     | MIT licensed without any restrictions to minimize risk!                                                                                                       |                 |\n| ❤️ **Community**              | Join our Discord with nearly 15.000 developers world wide!                                                                                                    |                 |\n| 🧜🏻‍♀️ **Long Term Support** | Maintained since 2014 with optional LTS version!                                                                                                              |                 |\n|                               |                                                                                                                                                               |                 |\n| 📐 **Bitpacking**             | Optimized compression (bools as 1 bit etc.)                                                                                                                   | **Researching** |\n| 🏎 **Prediction**             | Simulate Physics locally & apply server corrections.                                                                                                          | **Researching**        |\n\n---\n## Architecture\nThe **Server & Client** are **ONE project** in order to achieve maximum productivity.\n\nSimply use **NetworkBehaviour** instead of **MonoBehaviour**.\n\nMaking multiplayer games this way is fun & easy:\n\n```cs\npublic class Player : NetworkBehaviour\n{\n    // Synced automatically\n    [SyncVar] public int health = 100;\n    \n    // Lists, Dictionaries, Sets too\n    SyncList<Item> inventory = new SyncList<Item>();\n    \n    // Server/Client-only code\n    [Server] void LevelUp() {}\n    [Client] void Animate() {}\n    \n    void Update()\n    {\n        // isServer/isClient for runtime checks\n        if (isServer) Heal();\n        if (isClient) Move();\n    }\n    \n    // Zero overhead remote calls\n    [Command]   void CmdUseItem(int slot) {} // Client to Server\n    [ClientRpc] void RpcRespawn() {}         // Server to all Clients\n    [TargetRpc] void Hello() {}              // Server to one Client\n}\n```\n\nThere's also **NetworkServer** & **NetworkClient**.</br>\nAnd that's about it 🤩\n\n---\n## Free, Open Source & Community Focused\n**Mirror** is **free & open source** (MIT Licensed).\n\n🍺 \"**Free**\" as in free beer, and freedom to use it any way you like.\n \n- Host Game [Servers](https://mirror-networking.gitbook.io/docs/hosting/the-pragmatic-hosting-guide) anywhere!\n- Customize anything freely!\n- No paywalls, no CCU costs, no strings attached!\n\n🤝 We are a team of **professional** game developers, who are paid to **use Mirror in production**. Our incentives will always align with the community, because we are Mirror users just like you! \n\n❤️ Our [**fantastic community**](https://discordapp.com/invite/xVW4nU4C34) of over **14,000** users contributes feedback & improvements every day. Please join us on our journey, help others, and consider a [**Donation**](https://github.com/sponsors/miwarnec) if you love our work!\n\n<img src=\"https://user-images.githubusercontent.com/16416509/195067704-5577b581-b829-4c9f-80d0-b6270a3a59e7.png\" title=\"Fitzcarraldo\"/>\n\n_The top quote is from Fitzcarraldo, which is quite reminiscent of this project._\n\n---\n## Getting Started\nGet **Unity 2019 / 2020 / 2021 / 2022 LTS**, [Download Mirror](https://assetstore.unity.com/packages/tools/network/mirror-129321), open one of the examples & press Play!\n\nCheck out our [Documentation](https://mirror-networking.gitbook.io/) to learn how it all works.\n\nIf you are migrating from UNET, then please check out our [Migration Guide](https://mirror-networking.gitbook.io/docs/general/migration-guide).\n\n---\n## Mirror Guard\nWe recently built the first version of our new \"Mirror Guard\" - Cheat Detection for Multiplayer Games.<br/>\nMirror Guard is running in a production game today, so we want to make this available to more studios on demand.<br/>\n\nMirror Guard is built with three core principles in mind:<br/>\n1️⃣ Detection over Prevention: silently reports cheaters to the server, instead of trying to block them.<br/>\n2️⃣ Zero Risk: Mirror Guard focuses on stability, we never want honest players to encounter issues, ever.<br/>\n3️⃣ Real World Threats: Mirror Guard only blocks cheats which we encountered in production.<br/>\n\n🍉 Mirror Guard V1 is able to safely detect Melon Loader, which we've found to be the foundation for the vast majority of cheats that we encountered.\n\nIf you are interested, talk to any of our devs or email business at mirror-networking.com.\n\n---\n## Made with Mirror\n### [Population: ONE](https://www.populationonevr.com/)\n[![Population: ONE](https://github.com/MirrorNetworking/Mirror/assets/16416509/dddc778b-a97f-452d-b5f8-6ec42c6da4f1)](https://www.populationonevr.com/)\nThe [BigBoxVR](https://www.bigboxvr.com/) team started using Mirror in February 2019 for what eventually became one of the most popular Oculus Rift games.\n\nIn addition to [24/7 support](https://discordapp.com/invite/xVW4nU4C34) from the Mirror team, BigBoxVR also hired one of our engineers.\n\n**Population: ONE** was [acquired by Meta](https://uploadvr.com/population-one-facebook-bigbox-acquire/) in June 2021, and they've just released a new [Sandbox](https://www.youtube.com/watch?v=jcI0h8dn9tA) addon in 2022!\n\n### [Zooba](https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&gl=US)\n[![Zooba](https://user-images.githubusercontent.com/16416509/178141846-60805ad5-5a6e-4840-8744-5194756c2a6d.jpg)](https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&gl=US)\n[Wildlife Studio's](https://wildlifestudios.com/) hit Zooba made it to rank #5 of the largest battle royal shooters in the U.S. mobile market.\n\nThe game has over **100 million** downloads on [Google Play](https://play.google.com/store/apps/details?id=com.wildlife.games.battle.royale.free.zooba&gl=US), with Wildlife Studios as one of the top 10 largest mobile gaming companies in the world.\n\n### [Swarm VR](https://www.swarmvrgame.com/)\n[![swarmvr_compressed](https://user-images.githubusercontent.com/16416509/222610677-fa38f173-f76b-422f-b39d-8e0ef0cee798.jpg)](https://www.swarmvrgame.com/)\nSPIDER-MAN WITH GUNS! \n\nSWARM is a fast-paced, arcade-style grapple shooter, with quick sessions, bright colorful worlds and globally competitive leaderboards that will take you back to the glory days of Arcade Games.\n\nAvailable for the [Meta Quest](https://www.oculus.com/experiences/quest/2236053486488156/), made with Mirror.\n\n### [Liars Bar](https://store.steampowered.com/app/3097560/Liars_Bar/)\n[![liarsbar](https://github.com/user-attachments/assets/9100563e-2d9f-44f6-b8c2-332f718b8190)](https://store.steampowered.com/app/3097560/Liars_Bar/)<br/>\nWith over 20.000 Overwhelmingly Positive reviews on Steam, Liars Bar is one of our largest showcase games of 2024.<br/>\n<br/>\nThis isn't your average pub – it's a den of lies, deception, and mind games. Grab a seat at a table of four and immerse yourself in the ultimate first-person multiplayer online experience where cunning and trickery are the name of the game.\n\n### [Castaways](https://www.castaways.com/)\n[![Castaways](https://user-images.githubusercontent.com/16416509/207313082-e6b95590-80c6-4685-b0d1-f1c39c236316.png)](https://www.castaways.com/)\n[Castaways](https://www.castaways.com/) is a sandbox game where you are castaway to a small remote island where you must work with others to survive and build a thriving new civilization. \n\nCastaway runs in the Browser, thanks to Mirror's WebGL support.\n\n### [Nimoyd](https://www.nimoyd.com/)\n[![nimoyd_smaller](https://user-images.githubusercontent.com/16416509/178142672-340bac2c-628a-4610-bbf1-8f718cb5b033.jpg)](https://www.nimoyd.com/)\nNudge Nudge Games' first title: the colorful, post-apocalyptic open world sandbox game [Nimoyd](https://store.steampowered.com/app/1313210/Nimoyd__Survival_Sandbox/) is being developed with Mirror.\n\n_Soon to be released for PC & mobile!_\n\n### [Unleashed](https://www.unleashedgames.io/)\n[![unleashed](https://github.com/MirrorNetworking/Mirror/assets/16416509/ef3bcf74-8fa9-4d22-801d-4d29cb59a013)](https://www.unleashedgames.io/)\nFrom original devs of **World of Warcraft**, **Kingdoms of Amalur**, and **EverQuest** comes a new family friendly fantasy adventure. Fight against the forces of darkness, explore a world consumed by wild magic, and build a stronghold with your friends to increase your power in a new world.\n\n_Lead by industry veterans Brian Birmingham & Irena Pereira, Unleashed is developing their next gen adventure game made with Mirror!_\n\nFollow them on X: https://twitter.com/UnleashingGames/\n\n### [Dinkum](https://store.steampowered.com/app/1062520/Dinkum/)\n[![dinkum](https://user-images.githubusercontent.com/16416509/180051810-50c9ebfd-973b-4f2f-8448-d599443d9ce3.jpg)](https://store.steampowered.com/app/1062520/Dinkum/)\nSet in the Australian Outback, Dinkum is a relaxing farming & survival game. Made by just one developer, Dinkum already reached 1000+ \"Overwhelmingly Positive\" reviews 1 week after its early access release. \n\nJames Bendon initially made the game with UNET, and then [switched to Mirror](https://www.playdinkum.com/blog/2019/1/11/devlog-13-biomes-and-traps) in 2019.\n\n### [A Glimpse of Luna](https://www.glimpse-luna.com/)\n[![a glimpse of luna](https://user-images.githubusercontent.com/16416509/178148229-5b619655-055a-4583-a1d3-18455bde631f.jpg)](https://www.glimpse-luna.com/)\n[A Glimpse of Luna](https://www.glimpse-luna.com/) - a tactical multiplayer card battle game with the most beautiful concept art & soundtrack.\n\nMade with Mirror by two brothers with [no prior game development](https://www.youtube.com/watch?v=5J2wj8l4pFA&start=12) experience.\n\n### [Havoc](https://store.steampowered.com/app/2149290/Havoc/)\n![havoc fps game](https://github.com/MirrorNetworking/Mirror/assets/16416509/f3549a95-5663-41f8-9868-283b3a0fcf63)\nHavoc is a tactical team-based first-person shooter with a fully destructible environment and a unique art style. Havoc has been one of our favorite made-with-Mirror games for a few years now, and we are excited to finally see it up there on Steam.\n\n### [Sun Haven](https://store.steampowered.com/app/1432860/Sun_Haven/)\n[![sun haven](https://user-images.githubusercontent.com/16416509/185836661-2bfd6cd0-523a-4af4-bac7-c202ed01de7d.jpg)](https://store.steampowered.com/app/1432860/Sun_Haven/)\n[Sun Haven](https://store.steampowered.com/app/1432860/Sun_Haven/) - A beautiful human town, a hidden elven village, and a monster city filled with farming, magic, dragons, and adventure.\n\nAfter their successful [Kickstarter](https://www.kickstarter.com/projects/sunhaven/sunhaven/description), Sun Haven was released on Steam in 2021 and later on ported to Mirror in 2022.\n\n### [A Township Tale](https://townshiptale.com/)\n[![A Township Tale](https://user-images.githubusercontent.com/16416509/212850393-1abdce51-1abe-4745-8a7d-67e9ebae96a7.png)](https://townshiptale.com/)\nA Township Tale is an immersive VR experience, where you can build towns and explore worlds with your friends.\n\nMade with our KCP transport, available on the [Meta Quest Store](https://www.oculus.com/experiences/quest/2913958855307200/) with over 6000+ ratings.\n\n### [Inferna](https://inferna.net/)\n[![Inferna MMORPG](https://user-images.githubusercontent.com/16416509/178148768-5ba9ea5b-bcf1-4ace-ad7e-591f2185cbd5.jpg)](https://inferna.net/)\nOne of the first MMORPGs made with Mirror, released in 2019.\n\nAn open world experience with over 1000 CCU during its peak, spread across multiple server instances.\n\n### [Samutale](https://www.samutale.com/)\n[![samutale](https://user-images.githubusercontent.com/16416509/178149040-b54e0fa1-3c41-4925-8428-efd0526f8d44.jpg)](https://www.samutale.com/)\nA sandbox survival samurai MMORPG, originally released in September 2016.\n\nLater on, the Netherlands based Maple Media switched their netcode to Mirror.\n\n### [Another Dungeon](https://www.gameduo.net/en/game/ad)\n![image](https://github.com/MirrorNetworking/Mirror/assets/16416509/9b47438c-e664-47aa-996e-d1701b0a2efd)\nPixel Art Dungeon MMORPG reaching 5000 CCU at peak times.\n\nOriginally developed as a single-player idle game, it underwent a transition to an MMORPG three months before release thanks to Mirror!\n\n### [Untamed Isles](https://store.steampowered.com/app/1823300/Untamed_Isles/)\n[![Untamed Isles](https://user-images.githubusercontent.com/16416509/178143679-1c325b54-0938-4e84-97b6-b59db62a51e7.jpg)](https://store.steampowered.com/app/1823300/Untamed_Isles/)\nThe turn based, monster taming **MMORPG** [Untamed Isles](https://store.steampowered.com/app/1823300/Untamed_Isles/) is currently being developed by [Phat Loot Studios](https://untamedisles.com/about/).\n\nAfter their successful [Kickstarter](https://www.kickstarter.com/projects/untamedisles/untamed-isles), the New Zealand based studio is aiming for a 2022 release date.\n\n### [Portals](https://theportal.to/)\n[![Portals](https://user-images.githubusercontent.com/9826063/209373815-8e6288ba-22fc-4cee-8867-19f587188827.png)](https://theportal.to/)\nAnimal Crossing meets Yakuza meets Minecraft — a city builder with a multiplayer central hub. Gather, trade and build — all in the browser!\n\n### [SCP: Secret Laboratory](https://scpslgame.com/)\n[![scp - secret laboratory_smaller](https://user-images.githubusercontent.com/16416509/178142224-413b3455-cdff-472e-b918-4246631af12f.jpg)](https://scpslgame.com/)\n[Northwood Studios'](https://store.steampowered.com/developer/NWStudios/about/) first title: the multiplayer horror game SCP: Secret Laboratory was one of Mirror's early adopters.\n\nReleased in December 2017, today it has more than **140,000** reviews on [Steam](https://store.steampowered.com/app/700330/SCP_Secret_Laboratory/?curator_clanid=33782778).\n\n### [Naïca Online](https://naicaonline.com/)\n[![Naica Online](https://user-images.githubusercontent.com/16416509/178147710-8ed83bbd-1bce-4e14-8465-edfb40af7c7f.png)](https://naicaonline.com/)\n[Naïca](https://naicaonline.com/) is a beautiful, free to play 2D pixel art MMORPG.\n\nThe [France based team](https://naicaonline.com/en/news/view/1) was one of Mirror's early adopters, releasing their first public beta in November 2020.\n\n### [Laurum Online](https://laurum.online/)\n[![Laurum Online](https://user-images.githubusercontent.com/16416509/178149616-3852d198-6fc9-44d5-9f63-da4e52f5546a.jpg)](https://laurum.online/)\n[Laurum Online](https://play.google.com/store/apps/details?id=com.project7.project7beta) - a 2D retro mobile MMORPG with over 500,000 downloads on Google Play.\n\n### [Empires Mobile](https://knightempire.online/)\n[![Empires Mobile](https://user-images.githubusercontent.com/16416509/207028553-c646f12c-c164-47d3-a1fc-ff79409c04fa.jpg)](https://knightempire.online/)\n[Empires Mobile](https://knightempire.online/) - Retro mobile MMORPG for Android and iOS, reaching 5000 CCU at times. Check out their [video](https://www.youtube.com/watch?v=v69lW9aWb-w) for some _early MMORPG_ nostalgia.\n\n### [Overpowered](https://overpoweredcardgame.com/)\n[![Overpowered](https://github.com/MirrorNetworking/Mirror/assets/16416509/5bdbb227-970d-434e-b062-94fde1297f7c)](https://overpoweredcardgame.com/)\n[Overwpowered](https://overpoweredcardgame.com/), the exciting new card game that combines strategy, myth, and fun into one riveting web-based experience. Launched in 2023, made with Mirror!\n\n### And many more...\n<a href=\"https://store.steampowered.com/app/1797130/Plunder_Scourge_of_the_Sea/\"><img src=\"https://cdn.akamai.steamstatic.com/steam/apps/1797130/header.jpg?t=1698422797\" height=\"100\" title=\"Plunder: Scourge of the Sea Pirate MMO\"/></a>\n<a href=\"https://store.steampowered.com/app/719200/The_Wall/\"><img src=\"https://cdn.akamai.steamstatic.com/steam/apps/719200/header.jpg?t=1588105839\" height=\"100\" title=\"The wall\"/></a>\n<a href=\"https://store.steampowered.com/app/535630/One_More_Night/\"><img src=\"https://cdn.akamai.steamstatic.com/steam/apps/535630/header.jpg?t=1584831320\" height=\"100\" title=\"One more night\"/></a>\n<img src=\"https://i.ytimg.com/vi/D_f_MntrLVE/maxresdefault.jpg\" height=\"100\" title=\"Block story\"/>\n<a href=\"https://nightz.io\"><img src=\"https://user-images.githubusercontent.com/16416509/130729336-9c4e95d9-69bc-4410-b894-b2677159a472.jpg\" height=\"100\" title=\"Nightz.io\"/></a>\n<a href=\"https://store.steampowered.com/app/1016030/Wawa_United/\"><img src=\"https://user-images.githubusercontent.com/16416509/162982300-c29d89bc-210a-43ef-8cce-6e5555bb09bc.png\" height=\"100\" title=\"Wawa united\"/></a>\n<a href=\"https://store.steampowered.com/app/1745640/MACE_Mapinguaris_Temple/\"><img src=\"https://user-images.githubusercontent.com/16416509/166089837-bbecf190-0f06-4c88-910d-1ce87e2f171d.png\" title=\"MACE\" height=\"100\"/></a>\n<a href=\"https://www.adversator.com/\"><img src=\"https://user-images.githubusercontent.com/16416509/178641128-37dc270c-bedf-4891-8284-33573d1776b9.jpg\" title=\"Adversator\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/670260/Solace_Crafting/\"><img src=\"https://user-images.githubusercontent.com/16416509/197175819-1c2720b6-97e6-4844-80b5-2197a7f22839.png\" title=\"Solace Crafting\" height=\"100\"/></a>\n<a href=\"https://www.unitystation.org\"><img src=\"https://user-images.githubusercontent.com/57072365/204021428-0c621067-d580-4c88-b551-3ac70f9da39d.jpg\" title=\"UnityStation\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/1970020/__Touhou_Fairy_Knockout__One_fairy_to_rule_them_all/\"><img src=\"https://github.com/MirrorNetworking/Mirror/assets/16416509/dc1286a8-b619-4f68-9dfe-6a501be7e233\" title=\"Touhou Fairy Knockout\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/2168680/Nuclear_Option/\"><img src=\"https://github.com/MirrorNetworking/Mirror/assets/16416509/4e98520e-9bde-4305-8b02-bada090a02dd\" title=\"Nuclear Option\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/2499940/Shattered_Lands/\"><img src=\"https://github.com/MirrorNetworking/Mirror/assets/57072365/52930403-c1d1-4c27-9477-e03215acbda5\" title=\"Shattered Lands\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/1955340/Super_Raft_Boat_Together\"><img src=\"https://github.com/MirrorNetworking/Mirror/assets/57072365/0d30b84a-0b2b-4790-8687-d95e2fa23df1\" title=\"Super Raft Boat Together\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/2585860/Ruins_To_Fortress/\"><img src=\"https://github.com/MirrorNetworking/Mirror/assets/16416509/258ac5cf-d359-46cd-8af4-c7c1844dba9c\" title=\"Ruins to Fortress\" height=\"100\"/></a>\n<a href=\"https://store.steampowered.com/app/2967080/Block_Trucks_Multiplayer_Racing/\"><img src=\"https://github.com/user-attachments/assets/120794c6-81c2-445c-8f9b-b2be2bada376\" title=\"Block Trucks\" height=\"100\"/></a>\n\n## Modular Transports\nMirror uses **KCP** (reliable UDP) by default, but you may use any of our community transports for low level packet sending:\n* (built in) [KCP](https://github.com/MirrorNetworking/kcp2k): reliable UDP\n* (built in) [Telepathy](https://github.com/MirrorNetworking/Telepathy): TCP\n* (built in) [Websockets](https://github.com/MirrorNetworking/SimpleWebTransport): Websockets\n* [Ignorance](https://github.com/SoftwareGuy/Ignorance/): ENET UDP\n* [LiteNetLib](https://github.com/MirrorNetworking/LiteNetLibTransport/) UDP\n* [FizzySteam](https://github.com/Chykary/FizzySteamworks/): SteamNetwork\n* [FizzyFacepunch](https://github.com/Chykary/FizzyFacepunch/): SteamNetwork\n* [Epic Relay](https://github.com/FakeByte/EpicOnlineTransport): Epic Online Services\n* [Bubble](https://github.com/Squaresweets/BubbleTransport): Apple GameCenter\n* [Light Reflective Mirror](https://github.com/Derek-R-S/Light-Reflective-Mirror): Self-Hosted Relay\n* [Oculus P2P](https://github.com/hyferg/MirrorOculusP2P): Oculus Platform Service\n\n## Benchmarks\n* [2022] mischa [400-800 CCU](https://discord.com/channels/343440455738064897/1007519701603205150/1019879180592238603) tests\n* [2021] [Jesus' Benchmarks](https://docs.google.com/document/d/1GMxcWAz3ePt3RioK8k4erpVSpujMkYje4scOuPwM8Ug/edit?usp=sharing)\n* [2019] [uMMORPG 480 CCU](https://youtu.be/mDCNff1S9ZU) (worst case)\n\n## Development & Contributing\nMirror is used **in production** by everything from small indie projects to million dollar funded games that will run for a decade or more.\n\nWe prefer to work slow & thoroughly in order to not break everyone's games 🐌.\n\nTherefore, we need to [KISS](https://en.wikipedia.org/wiki/KISS_principle) 😗.\n\n---\n# Information Security\n![Mirror alternative Logo](https://github.com/MirrorNetworking/Mirror/assets/16416509/ca26e97c-2f26-487d-a48e-e23ec762bc79)\n\n**Mirror-Networking** follows common information security industry standards & best practices.\n\nMirror is free open source software (**MIT Licensed**), with over 80% test coverage. The company is located in Germany. We do not collect any user data, impose no restrictions on users & developers, or rely on any closed source dependencies other than Unity.\n\nThis makes Mirror an attractive choice for government agencies and large corporations with strict information security requirements.\n\nFeel free to reach out to business [**at**] mirror-networking.com if you have any questions, or need to review any of our policies:\n\n* **Development best Practices and SDLC**.pdf\n* **Disaster Recovery Procedure**.pdf\n* **Document Retention and Destruction Policy**.pdf\n* **Encryption Policy**.pdf\n* **Information Security Guidelines**.pdf\n* **[Privacy Policy](https://mirror-networking.com/privacy-policy/)**\n* **[Security Policy](https://github.com/MirrorNetworking/Mirror/blob/master/SECURITY.md)**\n* **Vulnerability Management Policy**.pdf\n\nPlease reach out if you decide to use Mirror.\n\nWe are excited to hear about your project, and happy to help if needed!\n\n---\n# Incident Response & Bug Bounty\nA lot of projects use Mirror in production. If you found a critical bug / exploit in Mirror core, please follow the steps outlined in our [Security Policy](SECURITY.md).\n\n**Credits / past findings / fixes:**\n* 2020, fholm: fuzzing ConnectMessage to stop further connects [[#2397](https://github.com/vis2k/Mirror/pull/2397)]\n* 2023-04-05: IncludeSec: [kcp2k UDP spoofing](http://blog.includesecurity.com/?p=1407) [[#3286](https://github.com/vis2k/Mirror/pull/3286)]\n* 2023-06-27: James Frowen: ClientToServer [SyncVar] [allocation attacks](https://github.com/MirrorNetworking/Mirror/pull/3562)\n\n---\n# Credits & Thanks 🙏\n🪞 **Alexey Abramychev** (UNET)<br/>\n🪞 **Alan**<br/>\n🪞 **c6burns** <br/>\n🪞 **Coburn** <br/>\n🪞 **cooper** <br/>\n🪞 **FakeByte** <br/>\n🪞 **fholm**<br/>\n🪞 **Gabe** (BigBoxVR)<br/>\n🪞 **imer** <br/>\n🪞 **James Frowen** <br/>\n🪞 **JesusLuvsYooh** <br/>\n🪞 **Mischa** <br/>\n🪞 **Mr. Gadget**<br/>\n🪞 **NinjaKickja** <br/>\n🪞 **Paul Pacheco**<br/>\n🪞 **Sean Riley** (UNET)<br/>\n\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.25,
          "content": "# Security Policy\n\n## Supported Versions\n\nMirror & Mirror LTS are both supported for security fixes.\n\n## Reporting a Vulnerability\nPlease email security [at] mirror-networking.com to report a vulnerability.</br>\nYou can also contact us in [our Discord](https://discord.gg/N9QVxbM) for faster replies.\n\nYou can expect a reply within 24-48 hours.</br>\nWe will keep you updated on our steps to mitigate issues every 2-4 weeks.\n\n## Timelines\n- Critical vulnerabilities can be expected to be patched within 1-2 weeks.\n- Medium risk vulnerabilities can be expected to be patched within 2-3 weeks.\n- Low risk vulnerabilities will be patched within 3-4 weeks.\n\n## Bug Bounty\nDepending on the severity of the exploit, we offer a $50 - $500 bug bounty.\n\n**Specifically we are looking for:**\n* Ways to crash a Mirror server.\n* Ways to exploit a Mirror server.\n* Ways to leave a Mirror server in undefined state.\n\nWe are **not** looking for DOS/DDOS attacks, as those are expected to be handled by the hosting infrastructure. \n\n## Notifications\nIn case of security breaches, Mirror users will be informed in our [Discord server](https://discord.gg/N9QVxbM) and release changelogs.\nSince we collect no user data, you are recommended to read the changelog and follow our Discord announcements.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.208984375,
          "content": "version: '{branch}-{build}'\n\nenvironment:\n    nodejs_version: \"16\"\n    LFTP_PASSWORD:\n        secure: sH23IC4a98S5uTtgYNHNvg==\n\n#init:\n#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n\n#on_finish:\n#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n\ninstall:\n  - choco install unitypackager\n  - choco install docfx\n  - choco install lftp\n  - ps: Install-Product node $env:nodejs_version\n  - npm install -g semantic-release @semantic-release/exec\n\n#build:\n#  project: Mirror/Networking.sln\n#  verbosity: minimal\n  \n# Do not build on tags (GitHub only)\nskip_tags: true\n\nbuild_script:\n  - docfx metadata --logLevel Warning --warningsAsErrors doc\\docfx.json\n  - docfx build --logLevel Warning --warningsAsErrors doc\\docfx.json\n\nimage: Visual Studio 2017\n\ndeploy_script:\n  - IF \"%APPVEYOR_REPO_BRANCH%\"==\"master\" ( lftp -e 'set ftp:ssl-allow no ; mirror -R -c -e -p doc/_site public_html/docs; chmod -R a+X public_html/docs ; ls -l public_html/docs/ ; ls -l public_html/docs/styles/ ; bye' -u mirreofx --env-password ftp://mirror-networking.com 2>&1 )\n\n"
        },
        {
          "name": "funding.json",
          "type": "blob",
          "size": 0.107421875,
          "content": "{\n  \"funding\": [\n    {\n      \"type\": \"github\",\n      \"url\": \"https://github.com/sponsors/miwarnec\"\n    }\n  ]\n}"
        },
        {
          "name": "remote_statistics.txt",
          "type": "blob",
          "size": 0.0068359375,
          "content": "Mirror!"
        },
        {
          "name": "setversion.ps1",
          "type": "blob",
          "size": 0.2216796875,
          "content": "semantic-release --dry-run |  %{ \n    echo $_\n    $fields = -split $_;\n    if ($fields[0] -eq \"#\" -or $fields[0] -eq \"##\") {\n        echo \"Mirror version \" $fields[1]\n        echo $fields[1] > Assets/Mirror/version.txt\n    }\n}\n"
        }
      ]
    }
  ]
}