{
  "metadata": {
    "timestamp": 1736711190726,
    "page": 102,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/VFSForGit",
      "stars": 6002,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".azure-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.126953125,
          "content": "# EditorConfig: https://EditorConfig.org\r\n\r\n# top-most EditorConfig file\r\nroot = true\r\n\r\n[*.cs]\r\ntrim_trailing_whitespace = true\r\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2216796875,
          "content": "###############################################################################\r\n# Do not normalize any line endings.\r\n###############################################################################\r\n* -text\r\n*.cs diff=csharp\r\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.51171875,
          "content": "## Ignore Visual Studio temporary files, build results, and\r\n## files generated by popular Visual Studio add-ons.\r\n\r\n# VS 2017 user-specific files\r\nlaunchSettings.json\r\n\r\n# User-specific files\r\n*.suo\r\n*.user\r\n*.userosscache\r\n*.sln.docstates\r\n\r\n# Mac\r\nxcuserdata\r\n.DS_Store\r\n\r\n# User-specific files (MonoDevelop/Xamarin Studio)\r\n*.userprefs\r\n\r\n# Build results\r\n[Dd]ebug/\r\n[Dd]ebugPublic/\r\n[Rr]elease/\r\n[Rr]eleases/\r\nx64/\r\nx86/\r\nbuild/\r\nbld/\r\n[Bb]in/\r\n[Oo]bj/\r\n\r\n# Visual Studio 2015 cache/options directory\r\n.vs/\r\n\r\n# MSTest test Results\r\n[Tt]est[Rr]esult*/\r\n[Bb]uild[Ll]og.*\r\n\r\n# NUNIT\r\n*.VisualState.xml\r\nTestResult*.xml\r\n\r\n# Build Results of an ATL Project\r\n[Dd]ebugPS/\r\n[Rr]eleasePS/\r\ndlldata.c\r\n\r\n# DNX\r\nproject.lock.json\r\nartifacts/\r\n\r\n*_i.c\r\n*_p.c\r\n*_i.h\r\n*.ilk\r\n*.meta\r\n*.obj\r\n*.pch\r\n*.pdb\r\n*.pgc\r\n*.pgd\r\n*.rsp\r\n*.sbr\r\n*.tlb\r\n*.tli\r\n*.tlh\r\n*.tmp\r\n*.tmp_proj\r\n*.log\r\n*.vspscc\r\n*.vssscc\r\n.builds\r\n*.pidb\r\n*.svclog\r\n*.scc\r\n\r\n# Chutzpah Test files\r\n_Chutzpah*\r\n\r\n# Visual C++ cache files\r\nipch/\r\n*.aps\r\n*.ncb\r\n*.opensdf\r\n*.sdf\r\n*.cachefile\r\n*.VC.opendb\r\n*.VC.db\r\n\r\n# Visual Studio profiler\r\n*.psess\r\n*.vsp\r\n*.vspx\r\n\r\n# TFS 2012 Local Workspace\r\n$tf/\r\n\r\n# Guidance Automation Toolkit\r\n*.gpState\r\n\r\n# ReSharper is a .NET coding add-in\r\n_ReSharper*/\r\n*.[Rr]e[Ss]harper\r\n*.DotSettings.user\r\n\r\n# JustCode is a .NET coding add-in\r\n.JustCode\r\n\r\n# TeamCity is a build add-in\r\n_TeamCity*\r\n\r\n# DotCover is a Code Coverage Tool\r\n*.dotCover\r\n\r\n# NCrunch\r\n_NCrunch_*\r\n.*crunch*.local.xml\r\n\r\n# MightyMoose\r\n*.mm.*\r\nAutoTest.Net/\r\n\r\n# Web workbench (sass)\r\n.sass-cache/\r\n\r\n# Installshield output folder\r\n[Ee]xpress/\r\n\r\n# DocProject is a documentation generator add-in\r\nDocProject/buildhelp/\r\nDocProject/Help/*.HxT\r\nDocProject/Help/*.HxC\r\nDocProject/Help/*.hhc\r\nDocProject/Help/*.hhk\r\nDocProject/Help/*.hhp\r\nDocProject/Help/Html2\r\nDocProject/Help/html\r\n\r\n# Click-Once directory\r\npublish/\r\n\r\n# Publish Web Output\r\n*.[Pp]ublish.xml\r\n*.azurePubxml\r\n## TODO: Comment the next line if you want to checkin your\r\n## web deploy settings but do note that will include unencrypted\r\n## passwords\r\n#*.pubxml\r\n\r\n*.publishproj\r\n\r\n# NuGet Packages\r\n*.nupkg\r\n# The packages folder can be ignored because of Package Restore\r\n**/packages/*\r\n# except build/, which is used as an MSBuild target.\r\n!**/packages/build/\r\n# Uncomment if necessary however generally it will be regenerated when needed\r\n#!**/packages/repositories.config\r\n\r\n# Windows Azure Build Output\r\ncsx/\r\n*.build.csdef\r\n\r\n# Windows Store app package directory\r\nAppPackages/\r\n\r\n# Visual Studio cache files\r\n# files ending in .cache can be ignored\r\n*.[Cc]ache\r\n# but keep track of directories ending in .cache\r\n!*.[Cc]ache/\r\n\r\n# Others\r\nClientBin/\r\n[Ss]tyle[Cc]op.*\r\n~$*\r\n*~\r\n*.dbmdl\r\n*.dbproj.schemaview\r\n*.pfx\r\n*.publishsettings\r\nnode_modules/\r\norleans.codegen.cs\r\n\r\n# RIA/Silverlight projects\r\nGenerated_Code/\r\n\r\n# Backup & report files from converting an old project file\r\n# to a newer Visual Studio version. Backup files are not needed,\r\n# because we have git ;-)\r\n_UpgradeReport_Files/\r\nBackup*/\r\nUpgradeLog*.XML\r\nUpgradeLog*.htm\r\n\r\n# SQL Server files\r\n*.mdf\r\n*.ldf\r\n\r\n# Business Intelligence projects\r\n*.rdl.data\r\n*.bim.layout\r\n*.bim_*.settings\r\n\r\n# Microsoft Fakes\r\nFakesAssemblies/\r\n\r\n# Node.js Tools for Visual Studio\r\n.ntvs_analysis.dat\r\n\r\n# Visual Studio 6 build log\r\n*.plg\r\n\r\n# Visual Studio 6 workspace options file\r\n*.opt\r\n\r\n# LightSwitch generated files\r\nGeneratedArtifacts/\r\n_Pvt_Extensions/\r\nModelManifest.xml\r\n\r\n*.dll\r\n*.cab\r\n*.cer\r\n\r\n# VS Code private directory\r\n.vscode/\r\n\r\n# ProjFS Kext Unit Test coverage results\r\nProjFS.Mac/CoverageResult.txt"
        },
        {
          "name": ".vsconfig",
          "type": "blob",
          "size": 0.431640625,
          "content": "{\r\n  \"version\": \"1.0\",\r\n  \"components\": [\r\n    \"Microsoft.Component.MSBuild\",\r\n    \"Microsoft.VisualStudio.Workload.NativeDesktop\"\r\n    \"Microsoft.VisualStudio.Workload.ManagedDesktop\",\r\n    \"Microsoft.VisualStudio.Workload.NetCoreTools\",\r\n    \"Microsoft.Net.Core.Component.SDK.2.1\",\r\n    \"Microsoft.VisualStudio.Component.VC.v141.x86.x64\",\r\n    \"Microsoft.Net.Component.4.6.1.TargetingPack\",\r\n    \"Microsoft.Net.Component.4.6.1.SDK\",\r\n  ]\r\n}"
        },
        {
          "name": "AuthoringTests.md",
          "type": "blob",
          "size": 6.7138671875,
          "content": "# Authoring Tests\r\n\r\n## Functional Tests\r\n\r\n#### Runnable functional test projects\r\n\r\n- `GVFS.FunctionalTests`\r\n- `GVFS.FunctionalTests.Windows`\r\n\r\n`GVFS.FunctionalTests` is a .NET Core project and contains all cross-platform functional tests.  `GVFS.FunctionalTests.Windows`, contains functional tests that require Windows. Additionally, `GVFS.FunctionalTests.Windows` includes all the `GVFS.FunctionalTests` allowing it to run both cross-platform and Windows-specific functional tests.\r\n\r\n#### Other functional test projects\r\n\r\n*GVFS.NativeTests*\r\n\r\n`GVFS.NativeTests` contains tests written in C++ that use the Windows API directly.  These tests are called from the managed tests (see above) using PInvoke.\r\n\r\n*GVFS.FunctionalTests.LockHolder*\r\n\r\nThe `LockHolder` is a small program that allows the functional tests to request and release the `GVFSLock`.  `LockHolder` is useful for simulating different timing/race conditions.\r\n\r\n## Running the Functional Tests\r\n\r\nThe functional tests are built on NUnit 3, which is available as a set of NuGet packages.\r\n\r\n### Windows\r\n\r\n1. Build VFS for Git:\r\n    \r\n    **Option 1:** Open GVFS.sln in Visual Studio and build everything.\r\n    \r\n    **Option 2:** Run `Scripts\\BuildGVFSForWindows.bat` from the command line\r\n\r\n2. Run the VFS4G installer that was built in step 2.  This will ensure that ProjFS is properly installed/enabled on your machine, and that VFS4G will be able to find the correct version of the pre/post-command hooks. The installer will be placed in `BuildOutput\\GVFS.Installer.Windows\\bin\\x64\\<Debug or Release>`\r\n3. Run the tests **with elevation**.  Elevation is required because the functional tests create and delete a test service.\r\n\r\n   **Option 1:** Run the `GVFS.FunctionalTests.Windows` project from inside Visual Studio launched as Administrator.\r\n   \r\n   **Option 2:** Run `Scripts\\RunFunctionalTests.bat` from CMD launched as Administrator.\r\n\r\n#### Selecting Which Tests are Run\r\n\r\nBy default, the functional tests run a subset of tests as a quick smoke test for developers.  There are three mutually exclusive arguments that can be passed to the functional tests to change this behavior:\r\n\r\n- `--full-suite`: Run all configurations of all functional tests\r\n- `--extra-only`: Run only those tests marked as \"ExtraCoverage\" (i.e. the tests that are not run by default)\r\n- `--windows-only`: Run only the tests marked as being Windows specific\r\n\r\n**NOTE** `Scripts\\RunFunctionalTests.bat` already uses some of these arguments.  If you run the tests using `RunFunctionalTests.bat` consider locally modifying the script rather than passing these flags as arguments to the script.\r\n\r\n### Mac\r\n\r\n1. Build VFS for Git: `Scripts/Mac/BuildGVFSForMac.sh`\r\n2. Run the tests: `Scripts/Mac/RunFunctionalTests.sh `\r\n\r\nIf you need the VS for Mac debugger attached for a functional test run:\r\n\r\n1. Make sure you've built your latest changes\r\n2. Run `./ProjFS.Mac/Scripts/LoadPrjFSKext.sh`\r\n3. Open GVFS.sln in VS for Mac\r\n4. Run->Run With->Custom Configuration...\r\n5. Select \"Start external program\" and specify the published functional test binary (e.g. `/Users/<USERNAME>/Repos/VFSForGit/Publish/GVFS.FunctionalTests`)\r\n6. Specify any desired arguments (e.g. [a specific test](#Running-Specific-Tests) )\r\n7. Run Action -> \"Debug - .Net Core Debugger\"\r\n8. Click \"Debug\"\r\n\r\n### Customizing the Functional Test Settings\r\n\r\nThe functional tests take a set of parameters that indicate what paths and URLs to work with.  If you want to customize those settings, they\r\ncan be found in [`GVFS.FunctionalTests\\Settings.cs`](/GVFS/GVFS.FunctionalTests/Settings.cs).\r\n\r\n\r\n## Running Specific Tests\r\n\r\nSpecific tests can be run by adding the `--test=<comma separated list of tests>` command line argument to the functional test project/scripts.  \r\n\r\nNote that the test name must include the class and namespace and that `Debug` or `Release` must be specified when running the functional test scripts.\r\n\r\n*Example*\r\n\r\nWindows (Script):\r\n\r\n`Scripts\\RunFunctionalTests.bat Debug --test=GVFS.FunctionalTests.Tests.EnlistmentPerFixture.GitFilesTests.CreateFileTest`\r\n\r\nWindows (Visual Studio):\r\n\r\n1. Set `GVFS.FunctionalTests.Windows` as StartUp project\r\n2. Project Properties->Debug->Start options->Command line arguments (all on a single line): `--test=GVFS.FunctionalTests.Tests.EnlistmentPerFixture.GitFilesTests.CreateFileTest`\r\n\r\nMac:\r\n\r\n`Scripts/Mac/RunFunctionalTests.sh Debug --test=GVFS.FunctionalTests.Tests.EnlistmentPerFixture.GitFilesTests.CreateFileTest`\r\n\r\n## How to Write a Functional Test\r\n\r\nEach piece of functionality that we add to VFS for Git should have corresponding functional tests that clone a repo, mount the filesystem, and use existing tools and filesystem\r\nAPIs to interact with the virtual repo.\r\n\r\nSince these are functional tests that can potentially modify the state of files on disk, you need to be careful to make sure each test can run in a clean \r\nenvironment.  There are three base classes that you can derive from when writing your tests.  It's also important to put your new class into the same namespace\r\nas the base class, because NUnit treats namespaces like test suites, and we have logic that keys off that for deciding when to create enlistments.\r\n\r\n1. `TestsWithLongRunningEnlistment`\r\n\r\n    Before any test in this namespace is executed, we create a single enlistment and mount VFS for Git.  We then run all tests in this namespace that derive\r\n\tfrom this base class.  Only put tests in here that are purely readonly and will leave the repo in a good state for future tests.\r\n\r\n2. `TestsWithEnlistmentPerFixture`\r\n\r\n    For any test fixture (a fixture is the same as a class in NUnit) that derives from this class, we create an enlistment and mount VFS for Git before running\r\n\tany of the tests in the fixture, and then we unmount and delete the enlistment after all tests are done (but before any other fixture runs).  If you need\r\n\tto write a sequence of tests that manipulate the same repo, this is the right base class.\r\n\r\n3. `TestsWithEnlistmentPerTestCase`\r\n\r\n   Derive from this class if you need a new enlistment created for each test case.  This is the most reliable, but also most expensive option.\r\n\r\n## Updating the Remote Test Branch\r\n\r\nBy default, the functional tests clone `master`, check out the branch \"FunctionalTests/YYYYMMDD\" (with the day the FunctionalTests branch was created), \r\nand then remove all remote tracking information. This is done to guarantee that remote changes to tip cannot break functional tests. If you need to update \r\nthe functional tests to use a new FunctionalTests branch, you'll need to create a new \"FunctionalTests/YYYYMMDD\" branch and update the `Commitish` setting in `Settings.cs` to have this new branch name.  \r\nOnce you have verified your scenarios locally you can push the new FunctionalTests branch and then your changes.\r\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.9638671875,
          "content": "# Contributing to VFS for Git\n\nThank you for taking the time to contribute!\n\n## Guidelines\n\n* [Code of Conduct](#code-of-conduct)\n* [Design Reviews](#design-reviews)\n* [Platform Specific Code](#platform-specific-code)\n* [Tracing and Logging](#tracing-and-logging)\n* [Error Handling](#error-handling)\n* [Background Threads](#background-threads)\n* [Coding Conventions](#coding-conventions)\n* [Testing](#testing)\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of\nConduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct\nFAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com)\nwith any additional questions or comments.\n\n## Design Reviews\n\nArchitectural changes and new features should start with a design review.  It's easier and wastes less time to incorporate feedback at this stage.\n\nThe design review process is as follows:\n\n1. Create a pull request that contains a design document in Markdown (.md) format for the proposed change.  Assign the `design-doc` label to the pull request.\n2. Use the pull request for design feedback and for iterating on the design.\n3. Once the design is approved, create a new issue with a description that includes the final design document.  Include a link to the pull request that was used for discussion.\n4. Close (without merging!) the pull request used for the design discussion.\n\n## Platform Specific Code\n\n- *Prefer cross-platform code to platform-specific code*\n\n  Cross-platform code is more easily reused.  Reusing code reduces the amount of code that must be written, tested, and maintained.\n\n- *Platform specific code, and only platform specific code, should go in `GVFSPlatform`*\n\n  When platform specific code is required, it should be placed in `GVFSPlatform` or one of the platforms it contains (e.g. `IKernelDriver`)\n\n## Tracing and Logging\n\n- *The \"Error\" logging level is reserved for non-retryable errors that result in I/O failures or the VFS4G process shutting down*\n\n  The expectation from our customers is that when VFS4G logs an \"Error\" level message in its log file either:\n    * VFS4G had to shut down unexpectedly\n    * VFS4G encountered an issue severe enough that user-initiated I/O would fail.\n\n- *Log full exception stacks*\n\n  Full exception stacks (i.e. `Exception.ToString`) provide more details than the exception message alone (`Exception.Message`). Full exception stacks make root-causing issues easier.\n  \n- *Do not display full exception stacks to users*\n\n  Exception call stacks are not usually actionable for the user.  Users frequently (sometimes incorrectly) assume that VFS4G has crashed when shown a full stack.  The full stack *should* be included in VFS4G logs, but *should not* be displayed as part of the error message provided to the user.\n\n- *Include relevant details when logging exceptions*\n\n  Sometimes an exception call stack alone is not enough to root cause failures in VFS4G.  When catching (or throwing) exceptions, log relevant details that will help diagnose the issue.  As a general rule, the closer an exception is caught to where it's thrown, the more relevant details there will be to log.\n\n  Example:\n  ```\n  catch (Exception e)\n  {\n    EventMetadata metadata = new EventMetadata();\n    metadata.Add(\"Area\", \"Mount\");\n    metadata.Add(nameof(enlistmentHookPath), enlistmentHookPath);\n    metadata.Add(nameof(installedHookPath), installedHookPath);\n    metadata.Add(\"Exception\", e.ToString());\n    context.Tracer.RelatedError(metadata, $\"Failed to compare {hook.Name} version\");\n  }\n  ```\n\n## Error Handling\n\n- *Fail fast: An error or exception that risks data loss or corruption should shut down VFS4G immediately*\n\n  Preventing data loss and repository corruption is critical.  If an error or exception occurs that could lead to data loss, it's better to shut down VFS4G than keep the repository mounted and risk corruption.\n\n- *Do not catch exceptions that are indicative of a programmer error (e.g. `ArgumentNullException`)*\n\n  Any exceptions that result from programmer error (e.g. `ArgumentNullException`) should be discovered as early in the development process as possible.  Avoid `catch` statements that would hide these errors (e.g. `catch(Exception)`).\n\n  The only exception to this rule is for [unhandled exceptions in background threads](#bgexceptions)\n\n- *Do not use exceptions for normal control flow*\n\n  Prefer writing code that does not throw exceptions.  The `TryXXX` pattern, for example, avoids the performance costs that come with using exceptions.  Additionally, VFS4G typically needs to know exactly where errors occur and handle the errors there.  The `TryXXX` pattern helps ensure errors are handled in that fashion.\n\n  Example: Handle errors where they occur (good):\n\n  ```\n  bool TryDoWorkOnDisk(string fileContents, out string error)\n  {\n    if (!TryCreateReadConfig())\n    {\n      error = \"Failed to read config file\";\n      return false;\n    }\n    \n    if (!TryCreateTempFile(fileContents))\n    {\n      error = \"Failed to create temp file\";\n      return false;\n    }\n  \n    if (!TryRenameTempFile())\n    {\n      error = \"Failed to rename temp file\";\n      if (!TryDeleteTempFile())\n      {\n        error += \", and failed to cleanup temp file\";\n      }\n    \n      return false;\n    }\n    \n    error = null;\n    return true;\n  }\n  ```\n\n  Example: Handle errors in `catch` without knowing where they came from (bad):\n\n  ```\n  bool TryDoWorkOnDisk(string fileContents, out string error)\n  {\n    try\n    {\n      CreateReadConfig();\n      CreateTempFile(fileContents);\n      RenameTempFile();\n    }\n    catch (Exception ex) when (ex is IOException || ex is UnauthorizedAccessException)\n    {\n      error = \"Something went wrong doing work on disk\";\n      \n      try\n      {\n        if (TempFileExists())\n        {\n          DeleteTempFile();\n        }\n      }\n      catch (Exception e) when (e is IOException || e is UnauthorizedAccessException)\n      {\n        error += \", and failed to cleanup temp file\";\n      }\n    \n      return false;\n    }\n  \n    error = null;\n    return true;\n  }\n  ```\n\n- *Provide the user with user-actionable messages whenever possible*\n\n  Don't tell a user what went wrong.  Help the user fix the problem.\n\n  Example:\n  > `\"You can only specify --hydrate if the repository is mounted. Run 'gvfs mount' and try again.\"`\n\n## Background Threads\n\n- *Avoid using the thread pool (and avoid using async)*\n\n  `HttpRequestor.SendRequest` makes a [blocking call](https://github.com/Microsoft/VFSForGit/blob/4baa37df6bde2c9a9e1917fc7ce5debd653777c0/GVFS/GVFS.Common/Http/HttpRequestor.cs#L135) to `HttpClient.SendAsync`.  That blocking call consumes a thread from the managed thread pool.  Until that design changes, the rest of VFS4G must avoid using the thread pool unless absolutely necessary.  If the thread pool is required, any long running tasks should be moved to a separate thread managed by VFS4G itself (see [GitMaintenanceQueue](https://github.com/Microsoft/VFSForGit/blob/4baa37df6bde2c9a9e1917fc7ce5debd653777c0/GVFS/GVFS.Common/Maintenance/GitMaintenanceQueue.cs#L19) for an example).\n\n  Long-running or blocking work scheduled on the managed thread pool can prevent the normal operation of VFS4G.  For example, it could prevent downloading file sizes, loose objects, or file contents in a timely fashion.\n\n- <a id=\"bgexceptions\"></a>*Catch all exceptions on long-running tasks and background threads*\n\n  Wrap all code that runs in the background thread in a top-level `try/catch(Exception)`.  Any exceptions caught by this handler should be logged, and then VFS4G should be forced to terminate with `Environment.Exit`.  It's not safe to allow VFS4G to continue to run after an unhandled exception stops a background thread or long-running task.  Testing has shown that `Environment.Exit` consistently terminates the VFS4G mount process regardless of how background threads are started (e.g. native thread, `new Thread()`, `Task.Factory.StartNew()`).\n\n  An example of this pattern can be seen in [`BackgroundFileSystemTaskRunner.ProcessBackgroundTasks`](https://github.com/Microsoft/VFSForGit/blob/4baa37df6bde2c9a9e1917fc7ce5debd653777c0/GVFS/GVFS.Virtualization/Background/BackgroundFileSystemTaskRunner.cs#L233).\n\n## Coding Conventions\n\n- *Most C# coding style guidelines are covered by StyleCop*\n\n  Fix any StyleCop issues reported in changed code. When adding new projects to VFS4G, be sure that StyleCop is analyzing them as part of the build.\n\n- *Prefer explicit types to interfaces and implicitly typed variables*\n\n  Avoid the use of `var` (C#), `dynamic` (C#), and `auto` (C++).  Prefer concrete/explicit types to interfaces (e.g. prefer `List` to `IList`).\n\n  The VFS4G codebase uses this approach because:\n\n    * Interfaces can hide the performance characteristics of their underlying type.  For example, an `IDictionary` could be a `SortedList` or a `Dictionary` (or several other data types).\n    * Interfaces can hide the thread safety (or lack thereof) of their underlying type.  For example, an `IDictionary` could be a `Dictionary` or a `ConcurrentDictionary`.\n    * Explicit types make these performance and thread safety characteristics explicit when reviewing code.\n    * VFS4G is not a public API and its components are always shipped together.  Develoepers are free to make API changes to VFS4G's public methods.\n\n- *Method names start with a verb (e.g. \"GetProjectedFolderEntryData\" rather than \"ProjectedFolderEntryData\")*\n\n  Starting with a verb in the name improves readability and helps ensure consistency with the rest of the VFS4G codebase.\n\n- *Aim to write self-commenting code.  When necessary, comments should give background needed to understand the code.*\n\n  Helpful (good) comment:\n\n  ```\n  // Order the folders in descending order so that we walk the tree from bottom up.\n  // Traversing the folders in this order:\n  //  1. Ensures child folders are deleted before their parents\n  //  2. Ensures that folders that have been deleted by git \n  //     (but are still in the projection) are found before their\n  //     parent folder is re-expanded (only applies on platforms \n  //     where EnumerationExpandsDirectories is true)\n  foreach (PlaceholderListDatabase.PlaceholderData folderPlaceholder in   placeholderFoldersListCopy.OrderByDescending(x => x.Path))\n  ```\n\n  Obvious (bad) comment:\n\n  ```\n  // Check if enumeration expands directories on the current platform\n  if (GVFSPlatform.Instance.KernelDriver.EnumerationExpandsDirectories)\n  ```\n\n- *Add new interfaces when it makes sense for the product, not simply for unit testing*\n\n  When a class needs to be mocked (or have a subset of its behavior mocked), prefer using virtual methods instead of adding a new interface.  VFS4G uses interfaces when multiple implementations of the interface exist in the product code.\n\n- *Check for `null` using the equality (`==`) and inequality (`!=`) operators rather than `is`*\n\n  A corollary to this guideline is that equality/inequality operators that break `null` checks should not be added (see [this post](https://stackoverflow.com/questions/40676426/what-is-the-difference-between-x-is-null-and-x-null) for an example).\n\n- *Use `nameof(...)` rather than hardcoded strings*\n\n  Using `nameof` ensures that when methods/variables are renamed the logging of those method/variable names will also be updated.  However, hard coded strings are still appropriate when they are used for generating reports and changing the strings would break the reports.\n\n### C/C++\n\n- *Do not use C-style casts.  Use C++-style casts.*\n\n  C++ style casts (e.g. `static_cast<T>`) more clearly express the intent of the programmer, allow for better validation by the compiler, and are easier to search for in the codebase.\n\n- *Declare static functions at the top of source files*\n  \n  This ensures that the functions can be called from anywhere inside the file.\n\n- *Do not use namespace `using` statements in header files*\n\n  `using` statements inside header files are picked up by all source files that include the headers and can cause unexpected errors if there are name collisions.\n\n- *Prefer `using` to full namespaces in source files*\n\n  Example:\n  ```\n  // Inside MyFavSourceFile.cpp\n\n  using std::string;\n\n  // Do not use `std::` namespace with `string`\n  static string s_myString;\n  ```\n\n- *Use a meaningful prefix for \"public\" free functions, and use the same prefix for all functions in a given header file*\n\n   Example:\n   ```\n   // Functions declared in VirtualizationRoots.h have \"VirtualizationRoot_\" prefix\n   bool VirtualizationRoot_IsOnline(VirtualizationRootHandle rootHandle);\n\n   // Static helper function in VirtualizationRoots.cpp has no prefix\n   static VirtualizationRootHandle FindOrDetectRootAtVnode(vnode_t vnode, const FsidInode& vnodeFsidInode);\n   ```\n\n## Testing\n\n- *Add new unit and functional tests when making changes*\n\n  Comprehensive tests are essential for maintaining the health and quality of the product.  For more details on writing tests see [Authoring Tests](https://github.com/Microsoft/VFSForGit/blob/master/AuthoringTests.md).\n\n- *Functional tests are black-box tests and should not build against any VFS4G product code*\n\n  Keeping the code separate helps ensure that bugs in the product code do not compromise the integrity of the functional tests.\n\n### C# Unit Tests\n\n- *Add `ExceptionExpected` to unit tests that are expected to have exceptions*\n\n  Example:\n  ```\n  [TestCase]\n  [Category(CategoryConstants.ExceptionExpected)]\n  public void ParseFromLsTreeLine_NullRepoRoot()\n  ```\n  \n  Unit tests should be tagged with `ExceptionExpected` when either the test code or the product code will throw an exception.  `ExceptionExpected` tests are not executed when the debugger is attached, and this prevents developers from having to keep continuing the tests each time exceptions are caught by the debugger.\n\n- *Use a `mock` prefix for absolute file system paths and URLs*\n\n  The unit tests should not touch the real file system nor should they reach out to any real URLs.  Using  `mock:\\\\` and `mock://` ensures that any product code that was not properly mocked will not interact with the real file system or attempt to contact a real URL.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 1.5068359375,
          "content": "<Project>\r\n\r\n  <!-- Import version props -->\r\n  <Import Project=\"Version.props\" />\r\n\r\n  <!-- Common project properties -->\r\n  <PropertyGroup>\r\n    <RepoPath>$(MSBuildThisFileDirectory)</RepoPath>\r\n    <RepoSrcPath>$(RepoPath)</RepoSrcPath>\r\n    <RepoOutPath>$(RepoPath)..\\out\\</RepoOutPath>\r\n    <ProjectOutPath>$(RepoOutPath)$(MSBuildProjectName)\\</ProjectOutPath>\r\n    <BuildPackagesPath>$(RepoPath)..\\packages\\</BuildPackagesPath>\r\n\r\n    <!--\r\n      Ensure `msbuild /t:restore` restores both PackageReference and\r\n      package.config styles of NuGet package references.\r\n      Native/C++ projects do not support the new PackageReference style,\r\n      but our .NET projects do.\r\n      -->\r\n    <RestorePackagesConfig>true</RestorePackagesConfig>\r\n  </PropertyGroup>\r\n\r\n  <!-- Managed project properties -->\r\n  <PropertyGroup Condition=\"'$(MSBuildProjectExtension)' == '.csproj'\">\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n    <BaseOutputPath>$(ProjectOutPath)bin\\</BaseOutputPath>\r\n    <BaseIntermediateOutputPath>$(ProjectOutPath)obj\\</BaseIntermediateOutputPath>\r\n  </PropertyGroup>\r\n\r\n  <!-- Native project properties -->\r\n  <PropertyGroup Condition=\"'$(MSBuildProjectExtension)' == '.vcxproj'\">\r\n    <Platform>x64</Platform>\r\n    <OutDir>$(ProjectOutPath)bin\\$(Platform)\\$(Configuration)\\</OutDir>\r\n    <IntDir>$(ProjectOutPath)intermediate\\$(Platform)\\$(Configuration)\\</IntDir>\r\n    <GeneratedIncludePath>$(IntDir)include\\</GeneratedIncludePath>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 0.3095703125,
          "content": "<Project>\r\n\r\n  <!-- Define common properties that rely on SDK/props-defined properties -->\r\n  <PropertyGroup>\r\n    <Version>$(GVFSVersion)</Version>\r\n  </PropertyGroup>\r\n\r\n  <!-- Include custom MSBuild targets/tasks -->\r\n  <Import Project=\"$(MSBuildThisFileDirectory)GVFS\\GVFS.MSBuild\\GVFS.targets\" />\r\n\r\n</Project>\r\n"
        },
        {
          "name": "Directory.Solution.props",
          "type": "blob",
          "size": 0.1279296875,
          "content": "<Project>\r\n\r\n  <!-- Import common build props for solution builds -->\r\n  <Import Project=\"Directory.Build.props\" />\r\n\r\n</Project>\r\n"
        },
        {
          "name": "GVFS.sln",
          "type": "blob",
          "size": 11.5322265625,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Version 16\r\nVisualStudioVersion = 16.0.30114.105\r\nMinimumVisualStudioVersion = 10.0.40219.1\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"FastFetch\", \"GVFS\\FastFetch\\FastFetch.csproj\", \"{642D14C3-0332-4C95-8EE0-0EAC54CBF918}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS\", \"GVFS\\GVFS\\GVFS.csproj\", \"{DADCDF10-E38D-432E-9684-CE029DEE1D07}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Common\", \"GVFS\\GVFS.Common\\GVFS.Common.csproj\", \"{77C8EC7B-4166-4F01-81C4-D9AB924021C0}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.FunctionalTests\", \"GVFS\\GVFS.FunctionalTests\\GVFS.FunctionalTests.csproj\", \"{963F33D0-09EE-42CB-9E5A-37A4F4F1BFAB}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.FunctionalTests.LockHolder\", \"GVFS\\GVFS.FunctionalTests.LockHolder\\GVFS.FunctionalTests.LockHolder.csproj\", \"{B26985C3-250A-4805-AA97-AD0604331AC7}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.GVFlt\", \"GVFS\\GVFS.GVFlt\\GVFS.GVFlt.csproj\", \"{B366D3B6-1E85-4015-8DB0-D5FA4331ECE4}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Hooks\", \"GVFS\\GVFS.Hooks\\GVFS.Hooks.csproj\", \"{EDB4A40E-CFC9-486A-BDC5-AB2951FD8EDC}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Mount\", \"GVFS\\GVFS.Mount\\GVFS.Mount.csproj\", \"{F96089C2-6D09-4349-B65D-9CCA6160C6A5}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.MSBuild\", \"GVFS\\GVFS.MSBuild\\GVFS.MSBuild.csproj\", \"{39361E20-C7D3-43E5-A90E-5135457EABC0}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GVFS.NativeTests\", \"GVFS\\GVFS.NativeTests\\GVFS.NativeTests.vcxproj\", \"{3771C555-B5C1-45E2-B8B7-2CEF1619CDC5}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.PerfProfiling\", \"GVFS\\GVFS.PerfProfiling\\GVFS.PerfProfiling.csproj\", \"{26B5D74F-972B-4B54-98C3-15958616E56D}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Platform.Windows\", \"GVFS\\GVFS.Platform.Windows\\GVFS.Platform.Windows.csproj\", \"{41A25DAD-698D-47AB-8BB1-7E622FE6FAAC}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GVFS.PostIndexChangedHook\", \"GVFS\\GVFS.PostIndexChangedHook\\GVFS.PostIndexChangedHook.vcxproj\", \"{24D161E9-D1F0-4299-BBD3-5D940BEDD535}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GVFS.ReadObjectHook\", \"GVFS\\GVFS.ReadObjectHook\\GVFS.ReadObjectHook.vcxproj\", \"{5A6656D5-81C7-472C-9DC8-32D071CB2258}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Service\", \"GVFS\\GVFS.Service\\GVFS.Service.csproj\", \"{5E236AF3-31D7-4313-A129-F080FF058283}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Service.UI\", \"GVFS\\GVFS.Service.UI\\GVFS.Service.UI.csproj\", \"{D8FB16E2-EAE0-4E05-A993-940062CD7CA7}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Tests\", \"GVFS\\GVFS.Tests\\GVFS.Tests.csproj\", \"{FE70E0D6-B0A6-421D-AA12-F28F822F09A0}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.UnitTests\", \"GVFS\\GVFS.UnitTests\\GVFS.UnitTests.csproj\", \"{1A46C414-7F39-4EF0-B216-A88033D18678}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GVFS.VirtualFileSystemHook\", \"GVFS\\GVFS.VirtualFileSystemHook\\GVFS.VirtualFileSystemHook.vcxproj\", \"{2D23AB54-541F-4ABC-8DCA-08C199E97ABB}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Virtualization\", \"GVFS\\GVFS.Virtualization\\GVFS.Virtualization.csproj\", \"{EC90AF5D-E018-4248-85D6-9DB1898D710E}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"GitHooksLoader\", \"GVFS\\GitHooksLoader\\GitHooksLoader.vcxproj\", \"{798DE293-6EDA-4DC4-9395-BE7A71C563E3}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Payload\", \"GVFS\\GVFS.Payload\\GVFS.Payload.csproj\", \"{A40DD1DC-2D35-4215-9FA0-3990FB7182FD}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"GVFS.Installers\", \"GVFS\\GVFS.Installers\\GVFS.Installers.csproj\", \"{258FEAC0-5E2D-408A-9652-9E9653219F3B}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tRelease|x64 = Release|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{642D14C3-0332-4C95-8EE0-0EAC54CBF918}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{642D14C3-0332-4C95-8EE0-0EAC54CBF918}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{642D14C3-0332-4C95-8EE0-0EAC54CBF918}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{642D14C3-0332-4C95-8EE0-0EAC54CBF918}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{DADCDF10-E38D-432E-9684-CE029DEE1D07}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{DADCDF10-E38D-432E-9684-CE029DEE1D07}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{DADCDF10-E38D-432E-9684-CE029DEE1D07}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{DADCDF10-E38D-432E-9684-CE029DEE1D07}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{77C8EC7B-4166-4F01-81C4-D9AB924021C0}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{77C8EC7B-4166-4F01-81C4-D9AB924021C0}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{77C8EC7B-4166-4F01-81C4-D9AB924021C0}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{77C8EC7B-4166-4F01-81C4-D9AB924021C0}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{963F33D0-09EE-42CB-9E5A-37A4F4F1BFAB}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{963F33D0-09EE-42CB-9E5A-37A4F4F1BFAB}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{963F33D0-09EE-42CB-9E5A-37A4F4F1BFAB}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{963F33D0-09EE-42CB-9E5A-37A4F4F1BFAB}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{B26985C3-250A-4805-AA97-AD0604331AC7}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{B26985C3-250A-4805-AA97-AD0604331AC7}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{B26985C3-250A-4805-AA97-AD0604331AC7}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{B26985C3-250A-4805-AA97-AD0604331AC7}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{B366D3B6-1E85-4015-8DB0-D5FA4331ECE4}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{B366D3B6-1E85-4015-8DB0-D5FA4331ECE4}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{B366D3B6-1E85-4015-8DB0-D5FA4331ECE4}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{B366D3B6-1E85-4015-8DB0-D5FA4331ECE4}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{EDB4A40E-CFC9-486A-BDC5-AB2951FD8EDC}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{EDB4A40E-CFC9-486A-BDC5-AB2951FD8EDC}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{EDB4A40E-CFC9-486A-BDC5-AB2951FD8EDC}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{EDB4A40E-CFC9-486A-BDC5-AB2951FD8EDC}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{F96089C2-6D09-4349-B65D-9CCA6160C6A5}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{F96089C2-6D09-4349-B65D-9CCA6160C6A5}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{F96089C2-6D09-4349-B65D-9CCA6160C6A5}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{F96089C2-6D09-4349-B65D-9CCA6160C6A5}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{39361E20-C7D3-43E5-A90E-5135457EABC0}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{39361E20-C7D3-43E5-A90E-5135457EABC0}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{39361E20-C7D3-43E5-A90E-5135457EABC0}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{39361E20-C7D3-43E5-A90E-5135457EABC0}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{3771C555-B5C1-45E2-B8B7-2CEF1619CDC5}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{3771C555-B5C1-45E2-B8B7-2CEF1619CDC5}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{3771C555-B5C1-45E2-B8B7-2CEF1619CDC5}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{3771C555-B5C1-45E2-B8B7-2CEF1619CDC5}.Release|x64.Build.0 = Release|x64\r\n\t\t{26B5D74F-972B-4B54-98C3-15958616E56D}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{26B5D74F-972B-4B54-98C3-15958616E56D}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{26B5D74F-972B-4B54-98C3-15958616E56D}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{26B5D74F-972B-4B54-98C3-15958616E56D}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{41A25DAD-698D-47AB-8BB1-7E622FE6FAAC}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{41A25DAD-698D-47AB-8BB1-7E622FE6FAAC}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{41A25DAD-698D-47AB-8BB1-7E622FE6FAAC}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{41A25DAD-698D-47AB-8BB1-7E622FE6FAAC}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{24D161E9-D1F0-4299-BBD3-5D940BEDD535}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{24D161E9-D1F0-4299-BBD3-5D940BEDD535}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{24D161E9-D1F0-4299-BBD3-5D940BEDD535}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{24D161E9-D1F0-4299-BBD3-5D940BEDD535}.Release|x64.Build.0 = Release|x64\r\n\t\t{5A6656D5-81C7-472C-9DC8-32D071CB2258}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{5A6656D5-81C7-472C-9DC8-32D071CB2258}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{5A6656D5-81C7-472C-9DC8-32D071CB2258}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{5A6656D5-81C7-472C-9DC8-32D071CB2258}.Release|x64.Build.0 = Release|x64\r\n\t\t{5E236AF3-31D7-4313-A129-F080FF058283}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{5E236AF3-31D7-4313-A129-F080FF058283}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{5E236AF3-31D7-4313-A129-F080FF058283}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{5E236AF3-31D7-4313-A129-F080FF058283}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{D8FB16E2-EAE0-4E05-A993-940062CD7CA7}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{D8FB16E2-EAE0-4E05-A993-940062CD7CA7}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{D8FB16E2-EAE0-4E05-A993-940062CD7CA7}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{D8FB16E2-EAE0-4E05-A993-940062CD7CA7}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{FE70E0D6-B0A6-421D-AA12-F28F822F09A0}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{FE70E0D6-B0A6-421D-AA12-F28F822F09A0}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{FE70E0D6-B0A6-421D-AA12-F28F822F09A0}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{FE70E0D6-B0A6-421D-AA12-F28F822F09A0}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{1A46C414-7F39-4EF0-B216-A88033D18678}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{1A46C414-7F39-4EF0-B216-A88033D18678}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{1A46C414-7F39-4EF0-B216-A88033D18678}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{1A46C414-7F39-4EF0-B216-A88033D18678}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{2D23AB54-541F-4ABC-8DCA-08C199E97ABB}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{2D23AB54-541F-4ABC-8DCA-08C199E97ABB}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{2D23AB54-541F-4ABC-8DCA-08C199E97ABB}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{2D23AB54-541F-4ABC-8DCA-08C199E97ABB}.Release|x64.Build.0 = Release|x64\r\n\t\t{EC90AF5D-E018-4248-85D6-9DB1898D710E}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{EC90AF5D-E018-4248-85D6-9DB1898D710E}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{EC90AF5D-E018-4248-85D6-9DB1898D710E}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{EC90AF5D-E018-4248-85D6-9DB1898D710E}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{798DE293-6EDA-4DC4-9395-BE7A71C563E3}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{798DE293-6EDA-4DC4-9395-BE7A71C563E3}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{798DE293-6EDA-4DC4-9395-BE7A71C563E3}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{798DE293-6EDA-4DC4-9395-BE7A71C563E3}.Release|x64.Build.0 = Release|x64\r\n\t\t{A40DD1DC-2D35-4215-9FA0-3990FB7182FD}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{A40DD1DC-2D35-4215-9FA0-3990FB7182FD}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{A40DD1DC-2D35-4215-9FA0-3990FB7182FD}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{A40DD1DC-2D35-4215-9FA0-3990FB7182FD}.Release|x64.Build.0 = Release|Any CPU\r\n\t\t{258FEAC0-5E2D-408A-9652-9E9653219F3B}.Debug|x64.ActiveCfg = Debug|Any CPU\r\n\t\t{258FEAC0-5E2D-408A-9652-9E9653219F3B}.Debug|x64.Build.0 = Debug|Any CPU\r\n\t\t{258FEAC0-5E2D-408A-9652-9E9653219F3B}.Release|x64.ActiveCfg = Release|Any CPU\r\n\t\t{258FEAC0-5E2D-408A-9652-9E9653219F3B}.Release|x64.Build.0 = Release|Any CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n\t\tSolutionGuid = {C506C09B-011F-491F-9D17-D0E2BA0B3467}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "GVFS",
          "type": "tree",
          "content": null
        },
        {
          "name": "GvFlt_EULA.md",
          "type": "blob",
          "size": 10.859375,
          "content": "# MICROSOFT SOFTWARE LICENSE TERMS\r\n## Microsoft GvFlt\r\n\r\nThese license terms are an agreement between you and Microsoft Corporation (or one of its affiliates). They apply to the software named above and any Microsoft services or software updates (except to the extent such services or updates are accompanied by new or additional terms, in which case those different terms apply prospectively and do not alter your or Microsoft’s rights relating to pre-updated software or services). IF YOU COMPLY WITH THESE LICENSE TERMS, YOU HAVE THE RIGHTS BELOW. BY USING THE SOFTWARE, YOU ACCEPT THESE TERMS.\r\n1. **INSTALLATION AND USE RIGHTS.** You may install and use any number of copies of the software on your devices, solely for use with Microsoft Git Virtual File System (GVFS) and otherwise for your internal business purposes. You may not use the software in a live operating environment unless Microsoft permits you to do so under another agreement.\r\n2. **PRE-RELEASE SOFTWARE.** The software is a pre-release version. It may not operate correctly. It may be different from the commercially released version.\r\n3. **FEEDBACK.** If you give feedback about the software to Microsoft, you give to Microsoft, without charge, the right to use, share and commercialize your feedback in any way and for any purpose. You will not give feedback that is subject to a license that requires Microsoft to license its software or documentation to third parties because Microsoft includes your feedback in them. These rights survive this agreement.\r\n4. **DATA COLLECTION.** The software may collect information about you and your use of the software and send that to Microsoft. Microsoft may use this information to provide services and improve Microsoft’s products and services. Your opt-out rights, if any, are described in the product documentation. Some features in the software may enable collection of data from users of your applications that access or use the software. If you use these features to enable data collection in your applications, you must comply with applicable law, including getting any required user consent, and maintain a prominent privacy policy that accurately informs users about how you use, collect, and share their data. You can learn more about Microsoft’s data collection and use in the product documentation and the Microsoft Privacy Statement at https://go.microsoft.com/fwlink/?LinkId=521839. You agree to comply with all applicable provisions of the Microsoft Privacy Statement.\r\n5. **SCOPE OF LICENSE.** The software is licensed, not sold. Microsoft reserves all other rights. Unless applicable law gives you more rights despite this limitation, you will not (and have no right to):\r\n    1. work around any technical limitations in the software that only allow you to use it in certain ways;\r\n    2. reverse engineer, decompile or disassemble the software;\r\n    3. remove, minimize, block, or modify any notices of Microsoft or its suppliers in the software;\r\n    4. use the software for commercial, non-profit, or revenue-generating activities;\r\n    5. use the software in any way that is against the law or to create or propagate malware; or\r\n    6. share, publish, distribute, or lend the software, provide the software as a stand-alone hosted solution for others to use, or transfer the software or this agreement to any third party.\r\n6. **EXPORT RESTRICTIONS.** You must comply with all domestic and international export laws and regulations that apply to the software, which include restrictions on destinations, end users, and end use. For further information on export restrictions, visit http://aka.ms/exporting.\r\n7. **SUPPORT SERVICES.** Microsoft is not obligated under this agreement to provide any support services for the software. Any support provided is “as is”, “with all faults”, and without warranty of any kind.\r\n8. **UPDATES.** The software may periodically check for updates, and download and install them for you. You may obtain updates only from Microsoft or authorized sources. Microsoft may need to update your system to provide you with updates. You agree to receive these automatic updates without any additional notice. Updates may not include or support all existing software features, services, or peripheral devices.\r\n9. **ENTIRE AGREEMENT.** This agreement, and any other terms Microsoft may provide for supplements, updates, or third-party applications, is the entire agreement for the software.\r\n10. **APPLICABLE LAW AND PLACE TO RESOLVE DISPUTES.** If you acquired the software in the United States or Canada, the laws of the state or province where you live (or, if a business, where your principal place of business is located) govern the interpretation of this agreement, claims for its breach, and all other claims (including consumer protection, unfair competition, and tort claims), regardless of conflict of laws principles. If you acquired the software in any other country, its laws apply. If U.S. federal jurisdiction exists, you and Microsoft consent to exclusive jurisdiction and venue in the federal court in King County, Washington for all disputes heard in court. If not, you and Microsoft consent to exclusive jurisdiction and venue in the Superior Court of King County, Washington for all disputes heard in court.\r\n11. **CONSUMER RIGHTS; REGIONAL VARIATIONS.** This agreement describes certain legal rights. You may have other rights, including consumer rights, under the laws of your state, province, or country. Separate and apart from your relationship with Microsoft, you may also have rights with respect to the party from which you acquired the software. This agreement does not change those other rights if the laws of your state, province, or country do not permit it to do so. For example, if you acquired the software in one of the below regions, or mandatory country law applies, then the following provisions apply to you:\r\n    1. **Australia.** You have statutory guarantees under the Australian Consumer Law and nothing in this agreement is intended to affect those rights.\r\n    2. **Canada.** If you acquired this software in Canada, you may stop receiving updates by turning off the automatic update feature, disconnecting your device from the Internet (if and when you re-connect to the Internet, however, the software will resume checking for and installing updates), or uninstalling the software. The product documentation, if any, may also specify how to turn off updates for your specific device or software.\r\n    3. **Germany and Austria.**\r\n        1. Warranty. The properly licensed software will perform substantially as described in any Microsoft materials that accompany the software. However, Microsoft gives no contractual guarantee in relation to the licensed software.\r\n        2. Limitation of Liability. In case of intentional conduct, gross negligence, claims based on the Product Liability Act, as well as, in case of death or personal or physical injury, Microsoft is liable according to the statutory law.\r\n\r\n        Subject to the foregoing clause 11.3.2, Microsoft will only be liable for slight negligence if Microsoft is in breach of such material contractual obligations, the fulfillment of which facilitate the due performance of this agreement, the breach of which would endanger the purpose of this agreement and the compliance with which a party may constantly trust in (so-called \"cardinal obligations\"). In other cases of slight negligence, Microsoft will not be liable for slight negligence.\r\n\r\n12. **DISCLAIMER OF WARRANTY.** THE SOFTWARE IS LICENSED “AS IS.” YOU BEAR THE RISK OF USING IT. MICROSOFT GIVES NO EXPRESS WARRANTIES, GUARANTEES, OR CONDITIONS. TO THE EXTENT PERMITTED UNDER APPLICABLE LAWS, MICROSOFT EXCLUDES ALL IMPLIED WARRANTIES, INCLUDING MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.\r\n13.\t**LIMITATION ON AND EXCLUSION OF DAMAGES.** IF YOU HAVE ANY BASIS FOR RECOVERING DAMAGES DESPITE THE PRECEDING DISCLAIMER OF WARRANTY, YOU CAN RECOVER FROM MICROSOFT AND ITS SUPPLIERS ONLY DIRECT DAMAGES UP TO U.S. $5.00. YOU CANNOT RECOVER ANY OTHER DAMAGES, INCLUDING CONSEQUENTIAL, LOST PROFITS, SPECIAL, INDIRECT OR INCIDENTAL DAMAGES.\r\n\r\n**This limitation applies to (a) anything related to the software, services, content (including code) on third party Internet sites, or third party applications; and (b) claims for breach of contract, warranty, guarantee, or condition; strict liability, negligence, or other tort; or any other claim; in each case to the extent permitted by applicable law.**\r\n\r\n**It also applies even if Microsoft knew or should have known about the possibility of the damages. The above limitation or exclusion may not apply to you because your state, province, or country may not allow the exclusion or limitation of incidental, consequential, or other damages.**\r\n\r\n**Please note: As this software is distributed in Canada, some of the clauses in this agreement are provided below in French.**\r\n\r\n**Remarque: Ce logiciel étant distribué au Canada, certaines des clauses dans ce contrat sont fournies ci-dessous en français.**\r\n\r\n**EXONÉRATION DE GARANTIE. Le logiciel visé par une licence est offert « tel quel ». Toute utilisation de ce logiciel est à votre seule risque et péril. Microsoft n’accorde aucune autre garantie expresse. Vous pouvez bénéficier de droits additionnels en vertu du droit local sur la protection des consommateurs, que ce contrat ne peut modifier. La ou elles sont permises par le droit locale, les garanties implicites de qualité marchande, d’adéquation à un usage particulier et d’absence de contrefaçon sont exclues.**\r\n\r\n**LIMITATION DES DOMMAGES-INTÉRÊTS ET EXCLUSION DE RESPONSABILITÉ POUR LES DOMMAGES. Vous pouvez obtenir de Microsoft et de ses fournisseurs une indemnisation en cas de dommages directs uniquement à hauteur de 5,00 $ US. Vous ne pouvez prétendre à aucune indemnisation pour les autres dommages, y compris les dommages spéciaux, indirects ou accessoires et pertes de bénéfices.\r\nCette limitation concerne:**\r\n\r\n* **tout ce qui est relié au logiciel, aux services ou au contenu (y compris le code) figurant sur des sites Internet tiers ou dans des programmes tiers; et**\r\n* **les réclamations au titre de violation de contrat ou de garantie, ou au titre de responsabilité stricte, de négligence ou d’une autre faute dans la limite autorisée par la loi en vigueur.**\r\n\r\n**Elle s’applique également, même si Microsoft connaissait ou devrait connaître l’éventualité d’un tel dommage. Si votre pays n’autorise pas l’exclusion ou la limitation de responsabilité pour les dommages indirects, accessoires ou de quelque nature que ce soit, il se peut que la limitation ou l’exclusion ci-dessus ne s’appliquera pas à votre égard.**\r\n\r\n**EFFET JURIDIQUE. Le présent contrat décrit certains droits juridiques. Vous pourriez avoir d’autres droits prévus par les lois de votre pays. Le présent contrat ne modifie pas les droits que vous confèrent les lois de votre pays si celles-ci ne le permettent pas.**\r\n"
        },
        {
          "name": "License.md",
          "type": "blob",
          "size": 1.1533203125,
          "content": "    MIT License\r\n\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\n    copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE"
        },
        {
          "name": "Protocol.md",
          "type": "blob",
          "size": 9.3681640625,
          "content": "# The GVFS Protocol (v1)\r\n\r\nThe GVFS network protocol consists of four operations on three endpoints. In summary:\r\n* `GET /gvfs/objects/{objectId}`\r\n  * Provides a single object in loose-object format\r\n* `POST /gvfs/objects`\r\n  * Provides one or more objects in packfile or streaming loose object format\r\n* `GET /gvfs/prefetch[?lastPackTimestamp={secondsSinceEpoch}]`\r\n  * Provides one or more packfiles of non-blobs and optionally packfile indexes in a streaming format\r\n* `POST /gvfs/sizes`\r\n  * Provides the uncompressed, undeltified size of one or more objects\r\n* `GET /gvfs/config`\r\n  * Provides server-set client configuration options\r\n\r\n# `GET /gvfs/objects/{objectId}`\r\nWill return a single object in compressed loose object format, which can be directly\r\nwritten to `.git/xx/yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy` if desired. The request/response looks\r\nsimilar to the \"Dumb Protocol\" as described [here](https://git-scm.com/book/en/v2/Git-Internals-Transfer-Protocols).\r\n\r\n# `POST /gvfs/objects`\r\nWill return multiple objects, possibly more than the client requested based on request parameters.\r\n\r\nThe request consists of a JSON body with the following format:\r\n```\r\n{\r\n    \"objectIds\" : [ {JSON array of SHA-1 object IDs, as strings} ],\r\n    \"commitDepth\" : {positive integer}\r\n}\r\n```\r\n\r\nFor example,\r\n```\r\n{\r\n    \"objectIds\" : [\r\n        \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n        \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\r\n    ],\r\n    \"commitDepth\" : 1\r\n}\r\n```\r\n\r\n## `Accept: application/x-git-packfile` (the default)\r\n\r\nIf\r\n* An `Accept` header of  `application/x-git-packfile` is specified, or \r\n* No `Accept` header is specified\r\n\r\nthen a git packfile, indexable via `index-pack`, will be returned to the client.\r\n\r\nIf `objectIds` includes a `commit`, then all `tree`s recursively referenced by that commit are also returned. \r\nIf any other object type is requested (`tree`, `blob`, or `tag`), then only that object will be returned.\r\n\r\n`commitDepth` - if the requested object is a `commit`, all parents up to `n` levels deep will be returned, along\r\nwith all their trees as previously described. Does not include any `blob`s.\r\n\r\n## `Accept: application/x-gvfs-loose-objects`\r\n\r\n**NOTE**: This format is currently only supposed by the cache server, not by VSTS.\r\n\r\nTo enable scenarios where multiple objects are required, but less overhead would be incurred by using pre-existing\r\nloose objects (e.g. on a caching proxy), an alternative, packfile-like response format that contains loose objects \r\nis also supported.\r\n\r\nTo receive objects in this format, the client **MUST** supply an `Accept` header of `application/x-gvfs-loose-objects` \r\nto the `POST /gvfs/objects` endpoint. Otherwise, the response format will be `application/x-git-packfile`.\r\n\r\nThis format will **NOT** perform any `commit` to `tree` expansion, and will return an error if a `commitDepth`\r\ngreater than `1` is supplied. Said another way, this `Accept`/return type has no concept of \"implicitly-requested\"\r\nobjects.\r\n\r\n### Version 1\r\n* Integers are signed and little-endian, unless otherwise specified\r\n* Byte offset 0 is the first byte in the file\r\n* Index offset 0 is the first byte in the first element of an array\r\n* `num_objects` represents the variable number of objects in the file/response\r\n\r\n```\r\nCount            Size (bytes)    Chunk Description\r\n\r\nHEADER\r\n                +-------------------------------------------------------------------------------+\r\n1               |          5 | UTF-8 encoded 'GVFS '                                            |\r\n                |          1 | Unsigned byte version number. Currently, 1.                      |\r\n                +-------------------------------------------------------------------------------+\r\n\r\nOBJECT CONTENT\r\n                +-------------------------------------------------------------------------------+\r\nnum_objects     |         20 | SHA-1 ID of the object.                                          |\r\n                |          8 | Signed-long length of the object.                                |\r\n                |   variable | Compressed, raw loose object content.                            |\r\n                +-------------------------------------------------------------------------------+\r\n\r\nTRAILER\r\n                +-------------------------------------------------------------------------------+\r\n1               |         20 | Zero bytes                                                       |\r\n                +-------------------------------------------------------------------------------+\r\n```\r\n\r\n# `GET /gvfs/prefetch[?lastPackTimestamp={secondsSinceEpoch}]`\r\n\r\nTo enable the reuse of already-existing packfiles and indexes, a custom format for transmitting these files\r\nis supported. The `prefetch` endpoint will return one or more packfiles of **non-blob** objects.  \r\n\r\nIf the optional `lastPackTimestamp` query parameter is supplied, only packs created by the server\r\nafter the specific Unix epoch time (approximately, ±10 minutes or so) will be returned. Generally, these packs \r\nwill contain only objects introduced to the repository after that UTC-based timestamp, but will not contain\r\n**all** objects introduced after that timestamp.\r\n\r\nA media-type of `application/x-gvfs-timestamped-packfiles-indexes` will be returned from this endpoint.\r\n\r\n## Response format\r\n\r\n* Integers are signed and little-endian, unless otherwise specified\r\n* Byte offset 0 is the first byte in the file\r\n* Index offset 0 is the first byte in the first element of an array\r\n* `num_packs` represents the variable number of packs in the file/response\r\n\r\n### Version 1\r\n\r\n```\r\nCount            Size (bytes)    Chunk Description\r\n\r\nHEADER\r\n                +-------------------------------------------------------------------------------+\r\n1               |          5 | UTF-8 encoded 'GPRE '                                            |\r\n                |          1 | Unsigned byte version number. Currently, 1.                      |\r\n                +-------------------------------------------------------------------------------+\r\n\r\nCONTENT\r\n\r\n                +-------------------------------------------------------------------------------+\r\n1               |          2 | Unsigned short number of packs. `num_packs`.                     |\r\n                +-------------------------------------------------------------------------------+\r\n\r\n                +-------------------------------------------------------------------------------+\r\nnum_packs       |          8 | Signed-long pack timestamp in seconds since UTC epoch.           |\r\n                |          8 | Signed-long length of the pack.                                  |\r\n                |          8 | Signed-long length of the pack index. -1 indicates no index.     |\r\n                |   variable | Pack contents.                                                   |\r\n                |   variable | Pack index contents.                                             |\r\n                +-------------------------------------------------------------------------------+\r\n```\r\n\r\nPacks **MUST** be sent in increasing `timestamp` order. In the case of a failed connection, this allows the \r\nclient to keep the packs it received successfully and \"resume\" by sending the highest completed timestamp.\r\n\r\n# `POST /gvfs/sizes`\r\nWill return the uncompressed, undeltified length of the requested objects in JSON format.\r\n\r\nThe request consists of a JSON body with the following format:\r\n```\r\n[ {JSON array of SHA-1 object IDs, as strings} ]\r\n```\r\n\r\nFor example, a request of:\r\n```\r\n[\r\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n    \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\r\n]\r\n```\r\n\r\nwill result in a a response like:\r\n```\r\n[\r\n    {\r\n        \"Id\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n        \"Size\" : 123\r\n    },\r\n    {\r\n        \"Id\" : \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\",\r\n        \"Size\" : 456\r\n    }\r\n]\r\n```\r\n\r\n# `GET /gvfs/config`\r\nThis optional endpoint will return all server-set GVFS client configuration options. It currently\r\nprovides:\r\n\r\n* A set of allowed GVFS client version ranges, in order to block older clients from running in \r\ncertain scenarios. For example, a data corruption bug may be found and encouraging clients to \r\navoid that version is desirable.\r\n* A list of available cache servers, each describing their url and default-ness with a friendly name\r\nthat users can use to inform which cache server to use. Note that the names \"None\" and \"User Defined\" \r\nare reserved by GVFS. Any caches with these names may cause undefined behavior in the GVFS client.\r\n\r\nAn example response is provided below. Note that the `null` `\"Max\"` value is only allowed for the last\r\n(or greatest) range, since it logically excludes greater version numbers from having an effect.\r\n```\r\n{\r\n\t\"AllowedGvfsClientVersions\": [{\r\n\t\t\"Max\": {\r\n\t\t\t\"Major\": 0,\r\n\t\t\t\"Minor\": 4,\r\n\t\t\t\"Build\": 0,\r\n\t\t\t\"Revision\": 0\r\n\t\t},\r\n\t\t\"Min\": {\r\n\t\t\t\"Major\": 0,\r\n\t\t\t\"Minor\": 2,\r\n\t\t\t\"Build\": 0,\r\n\t\t\t\"Revision\": 0\r\n\t\t}\r\n\t}, {\r\n\t\t\"Max\": {\r\n\t\t\t\"Major\": 0,\r\n\t\t\t\"Minor\": 5,\r\n\t\t\t\"Build\": 0,\r\n\t\t\t\"Revision\": 0\r\n\t\t},\r\n\t\t\"Min\": {\r\n\t\t\t\"Major\": 0,\r\n\t\t\t\"Minor\": 4,\r\n\t\t\t\"Build\": 17009,\r\n\t\t\t\"Revision\": 1\r\n\t\t}\r\n\t}, {\r\n\t\t\"Max\": null,\r\n\t\t\"Min\": {\r\n\t\t\t\"Major\": 0,\r\n\t\t\t\"Minor\": 5,\r\n\t\t\t\"Build\": 16326,\r\n\t\t\t\"Revision\": 1\r\n\t\t}\r\n\t}],\r\n\t\"CacheServers\": [{\r\n\t\t\"Url\": \"https://redmond-cache-machine/repo-id\",\r\n\t\t\"Name\": \"Redmond\",\r\n\t\t\"GlobalDefault\": true\r\n\t}, {\r\n\t\t\"Url\": \"https://dublin-cache-machine/repo-id\",\r\n\t\t\"Name\": \"Dublin\",\r\n\t\t\"GlobalDefault\": false\r\n\t}]\r\n}\r\n```\r\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 6.8671875,
          "content": "# VFS for Git\r\n\r\n**Notice:** With the release of VFS for Git 2.32, VFS for Git is in maintenance mode. Only required updates as a reaction to critical security vulnerabilities will prompt a release.\r\n\r\n|Branch|Unit Tests|Functional Tests|Large Repo Perf|Large Repo Build|\r\n|:--:|:--:|:--:|:--:|:--:|\r\n|**master**|[![Build status](https://dev.azure.com/gvfs/ci/_apis/build/status/CI%20-%20Windows?branchName=master)](https://dev.azure.com/gvfs/ci/_build/latest?definitionId=7&branchName=master)|[![Build status](https://dev.azure.com/gvfs/ci/_apis/build/status/CI%20-%20Windows%20-%20Full%20Functional%20Tests?branchName=master)](https://dev.azure.com/gvfs/ci/_build/latest?definitionId=6&branchName=master)|[![Build status](https://dev.azure.com/mseng/AzureDevOps/_apis/build/status/GVFS/GitHub%20VFSForGit%20Large%20Repo%20Perf%20Tests?branchName=master)](https://dev.azure.com/mseng/AzureDevOps/_build/latest?definitionId=7179&branchName=master)|[![Build status](https://dev.azure.com/mseng/AzureDevOps/_apis/build/status/GVFS/GitHub%20VFSForGit%20Large%20Repo%20Build?branchName=master)](https://dev.azure.com/mseng/AzureDevOps/_build/latest?definitionId=7180&branchName=master)|\r\n|**shipped**|[![Build status](https://dev.azure.com/gvfs/ci/_apis/build/status/CI%20-%20Windows?branchName=releases%2Fshipped)](https://dev.azure.com/gvfs/ci/_build/latest?definitionId=7&branchName=releases%2Fshipped)|[![Build status](https://dev.azure.com/gvfs/ci/_apis/build/status/CI%20-%20Windows%20-%20Full%20Functional%20Tests?branchName=releases%2Fshipped)](https://dev.azure.com/gvfs/ci/_build/latest?definitionId=6&branchName=releases%2Fshipped)|[![Build status](https://dev.azure.com/mseng/AzureDevOps/_apis/build/status/GVFS/GitHub%20VFSForGit%20Large%20Repo%20Perf%20Tests?branchName=releases%2Fshipped)](https://dev.azure.com/mseng/AzureDevOps/_build/latest?definitionId=7179&branchName=releases%2Fshipped)|[![Build status](https://dev.azure.com/mseng/AzureDevOps/_apis/build/status/GVFS/GitHub%20VFSForGit%20Large%20Repo%20Build?branchName=releases%2Fshipped)](https://dev.azure.com/mseng/AzureDevOps/_build/latest?definitionId=7180&branchName=releases%2Fshipped)|\r\n\r\n## What is VFS for Git?\r\n\r\nVFS stands for Virtual File System. VFS for Git virtualizes the file system\r\nbeneath your Git repository so that Git and all tools see what appears to be a\r\nregular working directory, but VFS for Git only downloads objects as they\r\nare needed. VFS for Git also manages the files that Git will consider, to\r\nensure that Git operations such as `status`, `checkout`, etc., can be as quick\r\nas possible because they will only consider the files that the user has\r\naccessed, not all files in the repository.\r\n\r\nNote: for new deployments, we strongly recommend you consider\r\n[Scalar](https://github.com/microsoft/scalar) instead of VFS for Git. By\r\ncombining the lessons from operating VFS for Git at scale with new developments\r\nin Git, Scalar offers a clearer path forward for all large monorepos.\r\n\r\n## Installing VFS for Git\r\n\r\nVFS for Git requires Windows 10 Anniversary Update (Windows 10 version 1607) or later.\r\n\r\nTo install, use [`winget`](https://github.com/microsoft/winget-cli) to install the\r\n[`microsoft/git` fork of Git](https://github.com/microsoft/git) and VFS for Git\r\nusing:\r\n\r\n```\r\nwinget install --id Microsoft.Git\r\nwinget install --id Microsoft.VFSforGit\r\n```\r\n\r\nYou will need to continue using the `microsoft/git` version of Git, and it\r\nwill notify you when new versions are available.\r\n\r\n\r\n## Building VFS for Git\r\n\r\nIf you'd like to build your own VFS for Git Windows installer:\r\n* Install Visual Studio 2017 Community Edition or higher (https://www.visualstudio.com/downloads/).\r\n  * Include the following workloads:\r\n    * .NET desktop development\r\n    * Desktop development with C++\r\n    * .NET Core cross-platform development\r\n  * Include the following additional components:\r\n    * .NET Core runtime\r\n    * Windows 10 SDK (10.0.10240.0)\r\n* Install the .NET Core 2.1 SDK (https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n* Install [`nuget.exe`](https://www.nuget.org/downloads)\r\n* Create a folder to clone into, e.g. `C:\\Repos\\VFSForGit`\r\n* Clone this repo into the `src` subfolder, e.g. `C:\\Repos\\VFSForGit\\src`\r\n* Run `\\src\\Scripts\\BuildGVFSForWindows.bat`\r\n* You can also build in Visual Studio by opening `src\\GVFS.sln` (do not upgrade any projects) and building. However, the very first\r\nbuild will fail, and the second and subsequent builds will succeed. This is because the build requires a prebuild code generation step.\r\nFor details, see the build script in the previous step.\r\n\r\nYou can also use Visual Studio 2019. There are a couple of options for getting all the dependencies.\r\n* You can install Visual Studio 2017 side by side with Visual Studio 2019, and make sure that you have all the dependencies from Visual Studio 2017 installed\r\n* Alternatively, if you only want to have Visual Studio 2019 installed, install the following extra dependencies:\r\n  * MSVC v141 VS 2017 C++ build tools via the optional components in the Visual Studio 2019 installer. It is under the \"Desktop Development with C++\" heading.\r\n  * Windows 10 SDK (10.0.10240.0) via the archived SDK page: https://developer.microsoft.com/en-us/windows/downloads/sdk-archive\r\n\r\nVisual Studio 2019 will [automatically prompt you to install these dependencies](https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/) when you open the solution. The .vsconfig file that is present in the root of the repository specifies all required components _except_ the Windows 10 SDK (10.0.10240.0) as this component is no longer shipped with VS2019 - **you'll still need to install that separately**.\r\n\r\nThe installer can now be found at `C:\\Repos\\VFSForGit\\BuildOutput\\GVFS.Installer.Windows\\bin\\x64\\[Debug|Release]\\SetupGVFS.<version>.exe`\r\n\r\n## Trying out VFS for Git\r\n\r\n* VFS for Git requires a Git service that supports the\r\n  [GVFS protocol](Protocol.md). For example, you can create a repo in\r\n  [Azure DevOps](https://azure.microsoft.com/services/devops/), and push\r\n  some contents to it. There are two constraints:\r\n  * Your repo must not enable any clean/smudge filters\r\n  * Your repo must have a `.gitattributes` file in the root that includes the line `* -text`\r\n* `gvfs clone <URL of repo you just created>`\r\n  * Please choose the **Clone with HTTPS** option in the `Clone Repository` dialog in Azure Repos, not **Clone with SSH**.\r\n* `cd <root>\\src`\r\n* Run Git commands as you normally would\r\n* `gvfs unmount` when done\r\n\r\n## Note on naming\r\n\r\nThis project was formerly known as GVFS (Git Virtual File System). You may occasionally\r\nsee collateral, including code and protocol names, which refer to the previous name.\r\n\r\n# Licenses\r\n\r\nThe VFS for Git source code in this repo is available under the MIT license.\r\nSee [License.md](License.md).\r\n\r\nVFS for Git relies on the PrjFlt filter driver, formerly known as the GvFlt\r\nfilter driver, available as a prerelease NuGet package.\r\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.7 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "ThirdPartyNotices.txt",
          "type": "blob",
          "size": 20.3779296875,
          "content": "microsoft-VFSForGit\n\nTHIRD-PARTY SOFTWARE NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis project incorporates components from the projects listed below. The original copyright notices and the licenses under which Microsoft received such components are set forth below. Microsoft reserves all rights not expressly granted herein, whether by implication, estoppel or otherwise.\n\n\n1.     dtruss from Apple's dtrace distribution version 284.200.15 (https://opensource.apple.com/source/dtrace/dtrace-284.200.15/DTTk/)\n\n\ndtrace NOTICES AND INFORMATION BEGIN HERE\n=========================================\nCOMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n\n\n      1. Definitions.\n\n            1.1. “Contributor” means each individual or entity that\n            creates or contributes to the creation of Modifications.\n\n            1.2. “Contributor Version” means the combination of the\n            Original Software, prior Modifications used by a\n            Contributor (if any), and the Modifications made by that\n            particular Contributor.\n\n            1.3. “Covered Software” means (a) the Original Software, or\n            (b) Modifications, or (c) the combination of files\n            containing Original Software with files containing\n            Modifications, in each case including portions thereof.\n\n            1.4. “Executable” means the Covered Software in any form\n            other than Source Code. \n\n            1.5. “Initial Developer” means the individual or entity\n            that first makes Original Software available under this\n            License. \n            \n            1.6. “Larger Work” means a work which combines Covered\n            Software or portions thereof with code not governed by the\n            terms of this License.\n\n            1.7. “License” means this document.\n\n            1.8. “Licensable” means having the right to grant, to the\n            maximum extent possible, whether at the time of the initial\n            grant or subsequently acquired, any and all of the rights\n            conveyed herein.\n            \n            1.9. “Modifications” means the Source Code and Executable\n            form of any of the following: \n\n                  A. Any file that results from an addition to,\n                  deletion from or modification of the contents of a\n                  file containing Original Software or previous\n                  Modifications; \n\n                  B. Any new file that contains any part of the\n                  Original Software or previous Modification; or \n\n                  C. Any new file that is contributed or otherwise made\n                  available under the terms of this License.\n\n            1.10. “Original Software” means the Source Code and\n            Executable form of computer software code that is\n            originally released under this License. \n\n            1.11. “Patent Claims” means any patent claim(s), now owned\n            or hereafter acquired, including without limitation,\n            method, process, and apparatus claims, in any patent\n            Licensable by grantor. \n\n            1.12. “Source Code” means (a) the common form of computer\n            software code in which modifications are made and (b)\n            associated documentation included in or with such code.\n\n            1.13. “You” (or “Your”) means an individual or a legal\n            entity exercising rights under, and complying with all of\n            the terms of, this License. For legal entities, “You”\n            includes any entity which controls, is controlled by, or is\n            under common control with You. For purposes of this\n            definition, “control” means (a) the power, direct or\n            indirect, to cause the direction or management of such\n            entity, whether by contract or otherwise, or (b) ownership\n            of more than fifty percent (50%) of the outstanding shares\n            or beneficial ownership of such entity.\n\n      2. License Grants. \n\n            2.1. The Initial Developer Grant.\n\n            Conditioned upon Your compliance with Section 3.1 below and\n            subject to third party intellectual property claims, the\n            Initial Developer hereby grants You a world-wide,\n            royalty-free, non-exclusive license: \n\n                  (a) under intellectual property rights (other than\n                  patent or trademark) Licensable by Initial Developer,\n                  to use, reproduce, modify, display, perform,\n                  sublicense and distribute the Original Software (or\n                  portions thereof), with or without Modifications,\n                  and/or as part of a Larger Work; and \n\n                  (b) under Patent Claims infringed by the making,\n                  using or selling of Original Software, to make, have\n                  made, use, practice, sell, and offer for sale, and/or\n                  otherwise dispose of the Original Software (or\n                  portions thereof). \n\n                  (c) The licenses granted in Sections 2.1(a) and (b)\n                  are effective on the date Initial Developer first\n                  distributes or otherwise makes the Original Software\n                  available to a third party under the terms of this\n                  License. \n\n                  (d) Notwithstanding Section 2.1(b) above, no patent\n                  license is granted: (1) for code that You delete from\n                  the Original Software, or (2) for infringements\n                  caused by: (i) the modification of the Original\n                  Software, or (ii) the combination of the Original\n                  Software with other software or devices. \n\n            2.2. Contributor Grant.\n\n            Conditioned upon Your compliance with Section 3.1 below and\n            subject to third party intellectual property claims, each\n            Contributor hereby grants You a world-wide, royalty-free,\n            non-exclusive license:\n\n                  (a) under intellectual property rights (other than\n                  patent or trademark) Licensable by Contributor to\n                  use, reproduce, modify, display, perform, sublicense\n                  and distribute the Modifications created by such\n                  Contributor (or portions thereof), either on an\n                  unmodified basis, with other Modifications, as\n                  Covered Software and/or as part of a Larger Work; and\n                  \n\n                  (b) under Patent Claims infringed by the making,\n                  using, or selling of Modifications made by that\n                  Contributor either alone and/or in combination with\n                  its Contributor Version (or portions of such\n                  combination), to make, use, sell, offer for sale,\n                  have made, and/or otherwise dispose of: (1)\n                  Modifications made by that Contributor (or portions\n                  thereof); and (2) the combination of Modifications\n                  made by that Contributor with its Contributor Version\n                  (or portions of such combination). \n\n                  (c) The licenses granted in Sections 2.2(a) and\n                  2.2(b) are effective on the date Contributor first\n                  distributes or otherwise makes the Modifications\n                  available to a third party. \n\n                  (d) Notwithstanding Section 2.2(b) above, no patent\n                  license is granted: (1) for any code that Contributor\n                  has deleted from the Contributor Version; (2) for\n                  infringements caused by: (i) third party\n                  modifications of Contributor Version, or (ii) the\n                  combination of Modifications made by that Contributor\n                  with other software (except as part of the\n                  Contributor Version) or other devices; or (3) under\n                  Patent Claims infringed by Covered Software in the\n                  absence of Modifications made by that Contributor. \n\n      3. Distribution Obligations.\n\n            3.1. Availability of Source Code.\n\n            Any Covered Software that You distribute or otherwise make\n            available in Executable form must also be made available in\n            Source Code form and that Source Code form must be\n            distributed only under the terms of this License. You must\n            include a copy of this License with every copy of the\n            Source Code form of the Covered Software You distribute or\n            otherwise make available. You must inform recipients of any\n            such Covered Software in Executable form as to how they can\n            obtain such Covered Software in Source Code form in a\n            reasonable manner on or through a medium customarily used\n            for software exchange.\n\n            3.2. Modifications.\n\n            The Modifications that You create or to which You\n            contribute are governed by the terms of this License. You\n            represent that You believe Your Modifications are Your\n            original creation(s) and/or You have sufficient rights to\n            grant the rights conveyed by this License.\n\n            3.3. Required Notices.\n\n            You must include a notice in each of Your Modifications\n            that identifies You as the Contributor of the Modification.\n            You may not remove or alter any copyright, patent or\n            trademark notices contained within the Covered Software, or\n            any notices of licensing or any descriptive text giving\n            attribution to any Contributor or the Initial Developer.\n\n            3.4. Application of Additional Terms.\n\n            You may not offer or impose any terms on any Covered\n            Software in Source Code form that alters or restricts the\n            applicable version of this License or the recipients’\n            rights hereunder. You may choose to offer, and to charge a\n            fee for, warranty, support, indemnity or liability\n            obligations to one or more recipients of Covered Software.\n            However, you may do so only on Your own behalf, and not on\n            behalf of the Initial Developer or any Contributor. You\n            must make it absolutely clear that any such warranty,\n            support, indemnity or liability obligation is offered by\n            You alone, and You hereby agree to indemnify the Initial\n            Developer and every Contributor for any liability incurred\n            by the Initial Developer or such Contributor as a result of\n            warranty, support, indemnity or liability terms You offer.\n          \n\n            3.5. Distribution of Executable Versions.\n\n            You may distribute the Executable form of the Covered\n            Software under the terms of this License or under the terms\n            of a license of Your choice, which may contain terms\n            different from this License, provided that You are in\n            compliance with the terms of this License and that the\n            license for the Executable form does not attempt to limit\n            or alter the recipient’s rights in the Source Code form\n            from the rights set forth in this License. If You\n            distribute the Covered Software in Executable form under a\n            different license, You must make it absolutely clear that\n            any terms which differ from this License are offered by You\n            alone, not by the Initial Developer or Contributor. You\n            hereby agree to indemnify the Initial Developer and every\n            Contributor for any liability incurred by the Initial\n            Developer or such Contributor as a result of any such terms\n            You offer.\n\n            3.6. Larger Works.\n\n            You may create a Larger Work by combining Covered Software\n            with other code not governed by the terms of this License\n            and distribute the Larger Work as a single product. In such\n            a case, You must make sure the requirements of this License\n            are fulfilled for the Covered Software. \n            \n      4. Versions of the License. \n\n            4.1. New Versions.\n\n            Sun Microsystems, Inc. is the initial license steward and\n            may publish revised and/or new versions of this License\n            from time to time. Each version will be given a\n            distinguishing version number. Except as provided in\n            Section 4.3, no one other than the license steward has the\n            right to modify this License. \n\n            4.2. Effect of New Versions.\n\n            You may always continue to use, distribute or otherwise\n            make the Covered Software available under the terms of the\n            version of the License under which You originally received\n            the Covered Software. If the Initial Developer includes a\n            notice in the Original Software prohibiting it from being\n            distributed or otherwise made available under any\n            subsequent version of the License, You must distribute and\n            make the Covered Software available under the terms of the\n            version of the License under which You originally received\n            the Covered Software. Otherwise, You may also choose to\n            use, distribute or otherwise make the Covered Software\n            available under the terms of any subsequent version of the\n            License published by the license steward. \n\n            4.3. Modified Versions.\n\n            When You are an Initial Developer and You want to create a\n            new license for Your Original Software, You may create and\n            use a modified version of this License if You: (a) rename\n            the license and remove any references to the name of the\n            license steward (except to note that the license differs\n            from this License); and (b) otherwise make it clear that\n            the license contains terms which differ from this License.\n            \n\n      5. DISCLAIMER OF WARRANTY.\n\n      COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN “AS IS”\n      BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n      INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED\n      SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\n      PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND\n      PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY\n      COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE\n      INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF\n      ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF\n      WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n      ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS\n      DISCLAIMER. \n\n      6. TERMINATION. \n\n            6.1. This License and the rights granted hereunder will\n            terminate automatically if You fail to comply with terms\n            herein and fail to cure such breach within 30 days of\n            becoming aware of the breach. Provisions which, by their\n            nature, must remain in effect beyond the termination of\n            this License shall survive.\n\n            6.2. If You assert a patent infringement claim (excluding\n            declaratory judgment actions) against Initial Developer or\n            a Contributor (the Initial Developer or Contributor against\n            whom You assert such claim is referred to as “Participant”)\n            alleging that the Participant Software (meaning the\n            Contributor Version where the Participant is a Contributor\n            or the Original Software where the Participant is the\n            Initial Developer) directly or indirectly infringes any\n            patent, then any and all rights granted directly or\n            indirectly to You by such Participant, the Initial\n            Developer (if the Initial Developer is not the Participant)\n            and all Contributors under Sections 2.1 and/or 2.2 of this\n            License shall, upon 60 days notice from Participant\n            terminate prospectively and automatically at the expiration\n            of such 60 day notice period, unless if within such 60 day\n            period You withdraw Your claim with respect to the\n            Participant Software against such Participant either\n            unilaterally or pursuant to a written agreement with\n            Participant.\n\n            6.3. In the event of termination under Sections 6.1 or 6.2\n            above, all end user licenses that have been validly granted\n            by You or any distributor hereunder prior to termination\n            (excluding licenses granted to You by any distributor)\n            shall survive termination.\n\n      7. LIMITATION OF LIABILITY.\n\n      UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n      (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE\n      INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF\n      COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE\n      LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR\n      CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT\n      LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK\n      STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n      COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n      INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n      LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL\n      INJURY RESULTING FROM SUCH PARTY’S NEGLIGENCE TO THE EXTENT\n      APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO\n      NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR\n      CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT\n      APPLY TO YOU.\n\n      8. U.S. GOVERNMENT END USERS.\n\n      The Covered Software is a “commercial item,” as that term is\n      defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of “commercial\n      computer software” (as that term is defined at 48 C.F.R. §\n      252.227-7014(a)(1)) and “commercial computer software\n      documentation” as such terms are used in 48 C.F.R. 12.212 (Sept.\n      1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1\n      through 227.7202-4 (June 1995), all U.S. Government End Users\n      acquire Covered Software with only those rights set forth herein.\n      This U.S. Government Rights clause is in lieu of, and supersedes,\n      any other FAR, DFAR, or other clause or provision that addresses\n      Government rights in computer software under this License.\n\n      9. MISCELLANEOUS.\n\n      This License represents the complete agreement concerning subject\n      matter hereof. If any provision of this License is held to be\n      unenforceable, such provision shall be reformed only to the\n      extent necessary to make it enforceable. This License shall be\n      governed by the law of the jurisdiction specified in a notice\n      contained within the Original Software (except to the extent\n      applicable law, if any, provides otherwise), excluding such\n      jurisdiction’s conflict-of-law provisions. Any litigation\n      relating to this License shall be subject to the jurisdiction of\n      the courts located in the jurisdiction and venue specified in a\n      notice contained within the Original Software, with the losing\n      party responsible for costs, including, without limitation, court\n      costs and reasonable attorneys’ fees and expenses. The\n      application of the United Nations Convention on Contracts for the\n      International Sale of Goods is expressly excluded. Any law or\n      regulation which provides that the language of a contract shall\n      be construed against the drafter shall not apply to this License.\n      You agree that You alone are responsible for compliance with the\n      United States export administration regulations (and the export\n      control laws and regulation of any other countries) when You use,\n      distribute or otherwise make available any Covered Software.\n\n      10. RESPONSIBILITY FOR CLAIMS.\n\n      As between Initial Developer and the Contributors, each party is\n      responsible for claims and damages arising, directly or\n      indirectly, out of its utilization of rights under this License\n      and You agree to work with Initial Developer and Contributors to\n      distribute such responsibility on an equitable basis. Nothing\n      herein is intended or shall be deemed to constitute any admission\n      of liability.\n"
        },
        {
          "name": "Version.props",
          "type": "blob",
          "size": 1.1513671875,
          "content": "<Project>\r\n\r\n  <PropertyGroup>\r\n    <!-- Default GVFS version number if not specified at build time -->\r\n    <GVFSVersion Condition=\"'$(GVFSVersion)' == ''\" >0.2.173.2</GVFSVersion>\r\n\r\n    <!--\r\n       Update the GitPackageVersion for the version that is shipped and tested with Scalar.\r\n       The MinimumGitVersion is intentionally lower to allow side-by-side installs of\r\n       VFS for Git (which is less flexible). Only update that version if we rely upon a\r\n       new command-line interface in Git or if there is a truly broken interaction.\r\n\r\n       Note that we require that the revision (Z) of the Git version string (2.X.Y.vfs.Z.W)\r\n       is an exact match. We will use this to signal that a microsoft/git version introduces\r\n       a breaking change that requires a VFS for Git upgrade.\r\n\r\n       Using the revision part allows us to modify the other version items arbitrarily,\r\n       including taking version numbers 2.X.Y from upstream and updating .W if we have any\r\n       hotfixes to microsoft/git.\r\n    -->\r\n    <GitPackageVersion>2.20220414.4</GitPackageVersion>\r\n    <MinimumGitVersion>v2.31.0.vfs.0.1</MinimumGitVersion>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1162109375,
          "content": "{\r\n  \"msbuild-sdks\": {\r\n    \"Microsoft.Build.Traversal\": \"2.0.19\",\r\n    \"Microsoft.Build.NoTargets\": \"1.0.85\"\r\n  }\r\n}\r\n"
        },
        {
          "name": "nuget.config",
          "type": "blob",
          "size": 0.44140625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <config>\r\n    <add key=\"repositoryPath\" value=\"..\\packages\" />\r\n  </config>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"Dependencies\" value=\"https://pkgs.dev.azure.com/gvfs/ci/_packaging/Dependencies/nuget/v3/index.json\" />\r\n  </packageSources>\r\n  <packageRestore>\r\n    <add key=\"enabled\" value=\"true\" />\r\n    <add key=\"automatic\" value=\"true\" />\r\n  </packageRestore>\r\n</configuration>\r\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}