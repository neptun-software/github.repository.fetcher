{
  "metadata": {
    "timestamp": 1736711188361,
    "page": 97,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "canton7/SyncTrayzor",
      "stars": 6037,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1201171875,
          "content": "*.cs\t\teol=crlf\n*.xaml\t\teol=crlf\n*.sln\t\teol=crlf\n*.csproj\teol=crlf\n*.resx \t\teol=crlf\n*.settings \teol=crlf\n*.config\teol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5029296875,
          "content": "#Visual Studio files\n.vs\n*.[Oo]bj\n*.user\n*.aps\n*.pch\n*.vspscc\n*.vssscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.[Cc]ache\n*.ilk\n*.log\n*.lib\n*.sbr\n*.sdf\n*.opensdf\n*.unsuccessfulbuild\nipch/\nobj/\n[Bb]in\n[Dd]ebug/\n[Rr]elease*/\n\n#Project files\n[Bb]uild/\n!/build\n\n#NuGet\npackages/\n*.nupkg\n\n#Installer\nSyncTrayzorSetup*.exe\nSyncTrayzorPortable*\nsyncthing-*.exe\nsyncthing.exe\n\n*.gjq\n*.tmp\nCoverage\nSyncTrayzorPortable\ndeploy\n*.pfx\n*.pvk\n/src/SyncTrayzor/Icons/*.png\nsecurity/private_key.asc\nchocolatey/tools/LICENSE.txt\r\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 18.310546875,
          "content": "Changelog\n=========\n\nv1.1.19\n-------\n\n - Don't crash in rare cases trying to detect if Intel Xe Graphics in use (#626)\n - Make it clearer that balloon settings are on the Folders tab (#613)\n - Don't show device connectivity balloons by default\n - Uninstaller: try to shut down running SyncTrayzor instances (#516)\n\nv1.1.28\n-------\n\n - Work around Intel Xe Graphics driver bug which causes Syncthing's UI to appear blank (#606)\n - Fix chocolatey package (#614)\n\nv1.1.27\n-------\n\n - Fix crashes on a small number of machines (#602, #603)\n - Wrap text on Settings screen (#540)\n - Improve appearance on high-DPI displays (#559)\n\nv1.1.26\n-------\n\n - Fix the problems in v1.1.25 (#594, #595, #596, #597)\n - Uninstaller tries to remove autostart registry keys (#586)\n\nv1.1.25\n-------\n\n - Add touch support\n - Minor UI updates (#538, #540, #541, #543)\n\nv1.1.24\n-------\n\n - Fix issues caused by forward slashes in folder paths (#519, #520)\n\nv1.1.23\n-------\n\n - Include the latest version of Syncthing (#493)\n - Show 'modified by' device in conflict resolver (#492)\n - Fix possible cause of null bytes in config file (#471)\n - If creating the first folder, enable notifications by default (#495)\n\nv1.1.22\n-------\n\n - Fix some crashes (#443, #463, #468, #471)\n - Show the folder name, not ID, in the file transfers progress tooltip  (#457)\n - Add tray button to rescan all folders (#465)\n - Show change in Syncthing theme without requiring refresh (#472)\n - Allow STTRACE to be set in env vars in settings (#473)\n - Fix slow memory leak (#479)\n\nv1.1.21\n-------\n\n - Fix \"Syncthing failed to start correctly\" message when shutting down Windows (#438)\n - Handle \"Access denied\" errors when resolving conflicts (#440)\n\nv1.1.20\n-------\n\n - Fix to allow SyncTrayzor to download updates from GitHub, after they made changes\n\nv1.1.19\n-------\n\n - Disable the built-in filesystem watcher if Syncthing's watcher is enabled\n - Retry starting Syncthing if it crashed (#421)\n - Make it clearer that multiple items in the Conflict Resolver window can be selected at once (#359)\n - Expose the setting to change the location of syncthing.exe (#386)\n - Fix issue where \"Syncthing is starting\" would appear forever (#420)\n - Fix crash when pausing/unpausing devices (#435)\n - Fix a rare condition when trying to enable auto-start would crash (#407)\n - Remove support for debug facilities, since Syncthing has this built in\n\nv1.1.18\n-------\n\n - Fix uninstaller crash if someone filled out the survey while not connected to the internet\n\nv1.1.17\n-------\n\n - Don't store Syncthing's API key in config, and don't log it\n - Fix filesystem notifications when the file contained non-ASCII characters (#400)\n - Don't show device connected/disconnected notifications if a device is reconnecting a lot\n - Don't watch / raise notifications about new folders if no existing folders are watched / have notifications (#393)\n - Don't write to the disk as much by default (#370)\n - Fix crash on the settings screen\n - Be more reslient to weird registry permissions, fixing crash (#378)\n - Fix crash when calculating data transfer stats (#380)\n - Be more reslient when trying to find a free port for Syncthing to use (#381)\n - Add installer command-line flags (for system administrators) (#371, #402)\n - Add an exit poll to the uninstaller\n\nv1.1.16\n-------\n\n - Fix some crashes on startup\n - Fix bug where 'show logs' link on the crash screen would cause another crash\n - Reduce how often SyncTrayzor checks for updates\n\nv1.1.15\n-------\n\n - Add a network usage graph to the tray icon popup\n - Add command-line parameters to start and stop Syncthing programatically\n - Fix problems setting up auto-start on some machines\n - Support custom file browsers (instead of Explorer)\n\nv1.1.14\n-------\n\n - Support selecting and resolving multiple conflicts at once\n - Add better support for changes to Syncthing's event format\n - UI tweaks and improvements\n - Fix a few crashes\n - Better support for right-to-left languages\n\nv1.1.13\n-------\n\n - Improve 'Browse' button next to folder selection input (#297)\n - Fix right-click context menu in embedded browser (#300)\n - Fix crash on conflict resolution screen when Windows can't find an icon for the file type (#301)\n - Fix crash when opening SyncTrayzor (#303, #306, #318)\n - Indication of file conflict in tray icon didn't disappear in some cases (#307)\n - (Hopefully) add workaround for Chinese IME not working (#314)\n - Display folder names instead of folder IDs in tray notifications (#315)\n - Rename 'Restore' option in tray icon context menu (#320)\n\nv1.1.12\n-------\n\n - No functional change. Release is so that new users get Syncthing 0.14 by default.\n\nv1.1.11\n-------\n\n - Display folder labels instead of folder IDs (#284)\n - Fix issue where 'Open Folder' and 'Browse' buttons might not be displayed (#281)\n - Make F5 clear the browser cache, helping with issues were Syncthing's GUI assets have been incorrectly cached\n - Don't spam connected/disconnected events if they happen too quickly (e.g. if a device is paused) (#289)\n - Make it easier to convert between portable and installed versions (#271, #272)\n - Fix race condition causing crash in metered network manager (#291)\n\nv1.1.10\n-------\n\n - Ship with Syncthing 0.13 by default (only affects new users)\n - Fix race condition when reloading config (#259)\n - Don't show 'Finished Syncthing' halfway through a busy sync (#264)\n - Don't crash when right-clicking tray icon early in startup process (#257)\n - Attempt to fix issue where UI half-renders after update to Syncthing 0.13 (#262)\n\nv1.1.9\n------\n\n - Add support for Syncthing v0.13 (#250)\n - Add setting to control tray icon animation (#255)\n - Don't refresh browser when un-minimizing (#248)\n - Don't crash if the filesystem watcher sees a change at the drive root (#253)\n - Handle filesystem notifications when Syncthing is configured with a path of the wrong case (#256)\n - Clarify wording when device paused by metered network (#249)\n\nv1.1.8\n------\n\n - Fix portable upgrades when there's a space in the path (will fix upgrades from 1.1.8 -> 1.1.9) (#232)\n - Improve quality of small tray icons slightly (#140)\n - Add \"new device\" / \"new folder\" balloon messages (#235)\n - Improve update checking schedule\n - Don't confuse the user when pausing devices on Windows 8+ (#242)\n - Fix touch screen operation (although touch screen scrolling is still broken upstream) (#241)\n - Allow settings window to be resized vertically (#238)\n - Move to SHA512 for verifying downloads\n - Add logging to help debug case where Syncthing returns odd values on startup\n - Remove API Key from settings\n\nv1.1.7\n------\n\n - Handle thousands of conflicts in the conflict editor without crashing (#224)\n - Handle crash when syncing many files (reappearance of #112) (#227)\n - Fix rendering of some strings\n - Add logging to file to portable upgrades, in case of error\n\nv1.1.6\n------\n\n - Fix portable installer where TEMP is on a different drive to SyncTrayzor (#218)\n - Fix bug where 'Save' button wouldn't be enabled in Syncthing's 'Add/Edit Folder' pane, after using the 'Browse' button (#219)\n - Fix race crash (#221)\n - Don't force Syncthing to use https (should fix #201)\n - Handle problems getting the icon for a file (should fix #224)\n - Improve help output of ProcessRunner.exe (#223)\n\nv1.1.5\n------\n\n - Fix further crash when failing to determine if a connection is metered (#215, #216)\n\nv1.1.4\n------\n\n - Fix issue with embedded browser failing to start on some systems (#211, #213)\n - Fix crash when failing to determine if a connection is metered (#210, #212)\n\nv1.1.3\n------\n\n - Disable devices which connect over a metered network (#167)\n - Don't report conflict files in the .stversions folder (#203)\n - Add a 'Browse' button (which opens a folder browser) to Syncthing's 'Add folder' dialog (#78)\n - Fix a race condition in the alerts system (#208)\n - Log file transfers to a CSV file in the logs directly (#205)\n - Upgrade the embedded browser: may fix issues with Syncthing's UI not loading at first, and adds support for touch-screen devices (#129)\n - Create chocolatey package (#189)\n - Clarify some wording in Settings and the Conflict Resolver (#204, #209)\n - Handle two instances of SyncTrayzor saving their config at the same time (#185)\n\nv1.1.2\n------\n\n - Handle folders with missing markers again (#187)\n - Don't crash in some cases on .NET 4.5 when the conflict editor is completed (#199)\n - Don't crash if the ConflictFileWatcher is aborted (#200, #202)\n - Don't show conflicts alerts bar if Syncthing isn't running\n - Improve conflict file monitoring (should remove inaccuracies)\n - Don't fail if there's a link loop when scanning for conflicted files (#195)\n - Add 'Size' field to the conflict resolver (#194)\n - Add setting to control whether conflict files are deleted to the recycle bin\n - Pressing F5 will fresh the browser\n - Fix the portable installation procedure (sorry portable users: you'll have to manually upgrade\n   one last time).\n\nv1.1.1\n------\n\n - Fix crash if we fail to look for conflicted files in a path (#191, #193)\n - Fix crash if the user manually specifies a UNC prefix on a folder (#192)\n\nv1.1.0\n-------\n\n - Log Syncthing's output (#162).\n - Add a Settings tab to enable Syncthing debug facilities without setting STTRACE or restarting (#175).\n - Alerts system: show warning triangle on tray icon, and alerts at the top of SyncTrayzor, when there\n   are failed file transfers or conflicted files.\n - Add a tool to find and help resolve file conflicts (under File -> Conflict Resolver).\n - Add support for one-click upgrades for Portable installations.\n - Improve 'Syncthing Console' (#82).\n - Improve update check schedule (#184).\n\nv1.0.32\n-------\n\n - Fix rare crash when trying to save the config file\n\nv1.0.31\n-------\n\n - Fix crash if 'logs archive' folder doesn't exist (#178)\n\nv1.0.30\n-------\n\n- Default to Syncthing v0.12. This only affects new users\n- Fix issue where AV programs could lock our config file, causing a crash (#159, #166)\n- Fix bug where window placement wouldn't be recorded on new installs (#171)\n- Display failed transfers separately in balloon messages (#173)\n- Add pause/clear buttons to Syncthing console window (#174)\n- Clean up config folder\n\nv1.0.29\n-------\n\n - Support Syncthing v0.12\n - Fix a couple of rare crashes (#150, #157)\n \n\nv1.0.28\n-------\n\n - Allow extra Syncthing command-line arguments to be specified (#133)\n - Fix bug which would prevent multiple logged-on users using the same SyncTrayzor installation (#148)\n - Add extra process priority options for Syncthing (other than just 'low priority') (#143)\n - Fix a couple of small crashes\n - Reduce installer/portable zip size slightly\n - Handle restart-less Folder and Device changes in Syncthing\n - Handle some edge-cases where Syncthing state changes in the middle of lots of file transfers may not be noticed\n - Fix a very rare \"Error creating the Web Proxy\" issue (#131)\n - Improve translations (#142, others)\n\n\nv1.0.27\n-------\n\n - Fix issues with corrupted config file\n - Don't queue notification messages\n - Update translations\n\nv1.0.26\n-------\n\n - Add support for Syncthing v0.11.12\n - Allow 'synced' notifications to be controlled per-folder (#99)\n - Don't show upgrade prompt if another application is fullscreen (#118)\n - Launching an already-running SyncTrayzor exe won't launch two instances (#119)\n\nv1.0.25\n-------\n\n - Fix crash on shutdown (#117)\n - Don't show file tranfers that are 'starting'\n - Be smarter about network timeouts when resuming from sleep\n\nv1.0.24\n-------\n\n - Fix a couple of crashes (#116)\n - Add Chinese translation (thanks Honpan Lung!)\n\nv1.0.23\n-------\n\n - Support for Syncthing v0.11.10\n - Fix and improve file transfers window (#101, #106)\n - Fix various crashes (#108, #112, #114, #115)\n - Add option to disable hardware rendering (#104)\n\nv1.0.22\n-------\n\n - Improvements to the \"File Transfers\" view (single-click tray icon)\n - Better error message handling (#93, #96)\n - Update translations\n\nv1.0.21\n-------\n\n - Fix version bump script, which was causing incorrect assembly version to be written\n\nv1.0.20\n-------\n\n - Update translations:\n   - Updates to all languages\n   - New languages: Catalan (Valencian), Portuguese (Brazil)\n\nv1.0.19\n-------\n\n - Add Dropbox-style window with current file transfers. Single-click the icon to view (#18)\n - Remember Syncthing language selection (#87)\n - Reword 'use custom home for Syncthing' option in Settings to be clearer (#88)\n - Don't show main window outside of desktop on very small screens (#84)\n - Don't crash if watched folder is a symlink (#89)\n - Improve error message if Syncthing cannot start (#90)\n - Fix possible crash if computer locale is changed (#91)\n - Allow custom Syncthing paths (by hand-editing config file, useful for edge case setups) (#86)\n - Add context menu to web browser (cut/copy/paste) (#85)\n - Allow multiple SyncTrayzor installations (portable and installed) to co-exist (#81)\n - Ignore system proxy settings when connecting to Syncthing (#80)\n\nv1.0.18\n-------\n\n - Fix crash when file in watched folder is renamed (#79)\n\nv1.0.17\n-------\n\n - Fix crash when renaming a file whose path exceeds the Windows path length limit (#72)\n - Fix 'Open Folder' button in Syncthing UI (#65)\n - Ensure that folder list in Settings does not exceed screen height (#76)\n - Start minimized after automatic upgrade (#59)\n - Add italian translation (thanks stukdev)\n - Improve text in icon context menu (#71)\n - Console will scroll to end after resize (#67)\n\nv1.0.16\n-------\n\n - Installer recommends Syncthing 0.11 (#64)\n - Fix bad browser zoom after restart (#57)\n - Fix display of folders which contain an underscore (#58)\n - Handle duplicate devices/folders in Syncthing config (#61)\n - Fix bad character encoding in Syncthing console (#62)\n - Fix installer's handling of Syncthing version changes (#63)\n - Clarify some UI wording/typos (#60, others)\n - Remember size of Syncthing console (#56)\n - Updated translations\n\nv1.0.15\n-------\n\n - Fix crash on startup if Syncthing is slow to start (#55)\n - Remember window size/position (#51)\n - Zoom built-in browser (#52)\n - Add support for arbitrary environmental variables for Syncthing\n\nv1.0.14\n-------\n\n - Give Syncthing more than 10 seconds to start, fixing crash (#47, #48, #50)\n - Better Syncthing API management in general\n - Add support for 150% and 200% DPI to tray icon\n - Slightly improve UI\n\nv1.0.13\n-------\n\n - Fix crash if 'Show tray icon only on close' is checked (#45)\n - Fix undocumented REST API change in Syncthing 0.11 (#46)\n - Check for updates on resume from sleep \n - Ensure SyncTrayzor is started as original user after auto-update\n\nv1.0.12\n-------\n\n - Compatibility with Syncthing v0.11.x (beta) (#43)\n - Improved auto-updates (#39)\n - Add option to hide the console (#41)\n - Obfuscate Device IDs in log files, as well as in the console\n - Logging will take less space if Syncthing is spamming messages (#42)\n - Updated translations (all languages)\n - New translations:\n   - Czech (thanks Václav Obrtlík)\n   - Greek (thanks alexxtasi and Wasilis Mandratzis-Walz)\n   - French (thanks princejosuah, lpoujol and Martin Erpicum)\n   - Russian (thanks Ivan Lapenkov)\n   - Slovak (thanks Lukáš Černý)\n - Fix bug where 'Close to Tray' from tray context menu would not work if settings say not to close to tray\n\nv1.0.11\n-------\n\n - Fix bug where GUI would freeze if Syncthing logged to console too frequently (#36)\n\nv1.0.10\n-------\n\n - Add \"Open Folder\" buttons (#32):\n   - In the GUI, next to 'Edit' and 'Rescan'\n   - In the tray icon's right-click menu\n - Add settings to:\n   - Stop Syncthing auto-upgrading\n   - Run Syncthing as a low-priority process (#24)\n   - Disable localization (#35)\n - Check for updates when resuming from sleep (#34)\n - Add Spanish translation (thanks Diego Sierra!)\n - Break Settings dialog into multiple tabs, for those with small screens (#29)\n - Always use HTTPS (#33)\n - Store path configuration and default user configuration in SyncTrayzor.exe.config (#30)\n - Reload Syncthing's address / home dir / API key / etc when it's restarted (#31)\n - Fix tray icon\n\nv1.0.9\n------\n\n - Fix bug with directory watcher and paths containing a tilde (~)\n - Fix resolution issue with taskbar icon\n - Add 'device connected/disconnected' tray icon balloon messages\n - Add Dutch translation (thanks Heimen Stoffels!)\n - Small reduction in memory usage\n - Add menu item to restart Syncthing\n\nv1.0.8\n------\n\n- Support HTTPS\n- Add German translation (thanks Adrian Rudnik)\n- Ensure SyncTrayzor is terminated properly when updating/uninstalling using the installer\n\nv1.0.7\n------\n\n - Support GUI Authentication\n - Ignore 'synced' events after device connection/disconnection, reducing noise\n - Add option to obfuscate device IDs (thanks Adrian Rudnik)\n - Allow Syncthing to localize by sending correct language headers (thanks Adrian Rudnik)\n - Add validation to the Settings page\n - Better handle exceptions encountered during shutdown\n - Catch case where syncthing.exe can't be started because of group policy settings\n\nv1.0.6\n------\n\n - Include high-quality icon (thanks to d4k0)\n - Improve settings dialog around API key and GUI Host Address\n - Add 32-bit build\n\nv1.0.5\n------\n\n - Replace syncthing.exe in APPDATA if it goes missing for some reason\n - Add option to run Syncthing with a custom home directory\n - Add portable build\n - Add 'Minimize to Tray' option\n - Improve error messages and logging\n - Close Synchthing gracefully on application exit\n\nv1.0.4\n------\n\n  - Handle Syncthing upgrades (previously would require a 'Kill all syncthing processes' then 'Start')\n  - Fix crash when logging out / shutting down with SyncTrayzor opened (caused by embedded browser component)\n  - Don't unload browser when minimized. This means that open Syncthing dialogs aren't closed when minimizing\n  - Reduce memory usage if SyncTrayzor is never restored from tray\n  - UI tweaks and fixes\n  - Add VC++ x64 Redist to the installer\n\nv1.0.3\n------\n\n - Improve directory watching\n   - Don't notify Syncthing if path is currently being synchronized\n   - Don't notify Syncthing if path is ignored\n   - Handle removed/re-created folders (e.g. USB and network drives)\n - Better UI for updates, if Syncthing fails to start, or if an unhandled exception occurs\n - Double-clicking tray icon always brings window into foreground\n - Start logging to an external log file\n - Add -noautostart command-line flag\n\nv1.0.2\n------\n\n - Fix memory leaks\n - Reduce memory usage by switching from WPF's WebBrowser to CefSharp\n - Move from int -> long for most of the Syncthing API, allowing e.g. repos larger than 3.8GB\n\nv1.0.1\n------\n\n - Add support for new ItemFinished event\n - Handle lots of log messages in quick succession\n\nv1.0.0\n------\n\n - Initial version\n"
        },
        {
          "name": "DONATING.md",
          "type": "blob",
          "size": 1.759765625,
          "content": "Donating\r\n========\r\n\r\nSyncthing and SyncTrayzor are free software, and you don't need to pay a penny to use them.\r\nHowever, if you find them useful, please consider giving a small amount to one of the causes below.\r\n\r\nSyncthing\r\n---------\r\n\r\nSyncTrayzor is just the wrapper around [Syncthing](https://syncthing.net), which makes it look and behave like a native Windows application.\r\nThe heavy lifting is being done by Syncthing.\r\n\r\nWhile development is done for free by a fantastic team, running the infrastructure which lets your devices find and talk to each other costs money, as does hosting things like the [website](https://syncthing.net) and [forum](https://forum.syncthing.net).\r\nIf you make use of these, I kindly ask that you consider sending a small amount towards funding Syncthing's running costs and future development.\r\nDonations are handled by the Syncthing Foundation, whose accounts are public.\r\n\r\n[Donate to Syncthing](https://syncthing.net/donations/).\r\n\r\n\r\nSyncTrayzor Charity Fundraiser\r\n------------------------------\r\n\r\nI've put a lot of my free time into writing and maintaining SyncTrayzor.\r\nIf you use it and appreciate it, I'd be very grateful if you could show your thanks by \r\ndonating a small amount (the price of a beer) to charity.\r\n\r\nI've been running charity fundraisers for many years, and very kind people from all over the world have helped raise thousands for people who really need it, which is absolutely amazing.\r\n\r\nPlease consider [donating to the current appeal](https://synctrayzor.antonymale.co.uk/fundraiser).\r\n\r\n\r\nBuy me a beer\r\n-------------\r\n\r\nIf you want to buy me a coffee (or beer!), you'll absolutely make my day.\r\nThank you!\r\n\r\nI'm on [Ko-fi](https://ko-fi.com/canton7) or [PayPal](https://www.paypal.com/donate?hosted_button_id=92FADFBYS42MU).\r\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.05859375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-2021 Antony Male\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.55078125,
          "content": "\nSyncTrayzor [![Build status](https://ci.appveyor.com/api/projects/status/pwa4mpy4066okxyu?svg=true)](https://ci.appveyor.com/project/canton7/synctrayzor)\n===========\n\nQuick Links\n-----------\n\n - [Download and install SyncTrayzor now](#installation)\n - [Something went wrong](#something-went-wrong)\n - [Find Syncthing/SyncTrayzor useful? Please donate!](DONATING.md#donating)\n\n\nIntroduction\n------------\n\nSyncTrayzor is a little tray utility for [Syncthing](https://syncthing.net/) on Windows.\nIt hosts and wraps Syncthing, making it behave more like a native Windows application and less like a command-line utility with a web browser interface.\n\nFeatures include:\n\n - Has a built-in web browser, so you don't need to fire up an external browser.\n - Optionally starts on login, so you don't need to set up Syncthing as a service.\n - Has drop-box style file download / progress window\n - Tray icon indicates when synchronization is occurring.\n - Alerts you when:\n    - You have file conflicts\n    - One of your folders is out of sync\n    - Folders finish syncing\n    - Devices connect / disconnect\n - Has a tool to help you resolve file conflicts\n - Can pause devices on metered networks, to stop Syncthing transferring data on e.g. a mobile connection or wifi hotspot.\n - Contains translations for many languages\n\n\n![Screenshot](readme/screenshot.png)\n\nInstallation\n------------\n\nSyncTrayzor is packaged as both an installer, standalone zip, and chocolatey package. It will run on Windows Vista or newer.\n\n### Installer\n\n[Download `SyncTrayzorSetup-x64.exe` or `SyncTrayzorSetup-x86.exe`](https://github.com/canton7/SyncTrayzor/releases/latest) and run it.\nIf you already have SyncTrayzor installed, this will update it.\n\n### Standalone\n\nFirst, you'll need .net 4.7.2. [Download the offline](https://support.microsoft.com/en-gb/help/4054530/microsoft-net-framework-4-7-2-offline-installer-for-windows) or [web installer](https://support.microsoft.com/en-gb/help/4054531/microsoft-net-framework-4-7-2-web-installer-for-windows) if you don't have it installed already.\n\n[Download `SyncTrayzorPortable-x64.zip` or `SyncTrayzorPortable-x86.zip`](https://github.com/canton7/SyncTrayzor/releases/latest).\nUnzip, and run `SyncTrayzor.exe`. If you're updating, you'll need to copy the `data` folder across from your previous standalone installation.\n\n\n### Chocolatey\n\nThe installed version of SyncTrayzor is also [available on Chocolatey](https://chocolatey.org/packages/synctrayzor).\n\n```\nC:\\> choco install synctrayzor\n```\n\nSomething went wrong!\n---------------------\n\nFirst, what went wrong? Remember that SyncTrayzor is a wrapper around [Syncthing](https://github.com/syncthing/syncthing).\nSyncthing is the file synchronization program, which has a web interface.\nSyncTrayzor is the tray utility, looks like a normal Windows program, and has menus and suchlike, and a big area where Syncthing's web interface is displayed.\n\n - If you're having problems connecting to other devices, your files aren't synchronizing, or you're getting error messages in the console area, [raise an issue with Syncthing](https://github.com/syncthing/syncthing/issues/new) or [post on the Syncthing forums](https://forum.syncthing.net).\n - If SyncTrayzor isn't talking to Syncthing, you're getting error dialogs, it's not auto-starting, etc, [raise an issue with SyncTrayzor](https://github.com/canton7/SyncTrayzor/issues/new).\n - If you're not sure, raise an issue here and I'll redirect you if appropriate.\n\n\nContributing\n------------\n\nMulti-lingual? SyncTrayzor needs you! Please read [Localization](https://github.com/canton7/SyncTrayzor/wiki/Localization).\n\nWant to make a contribution? Fantastic, and thank you! Please read [Contributing](https://github.com/canton7/SyncTrayzor/wiki/Contributing) first.\n\n\nFind Syncthing/SyncTrayzor useful? Please donate!\n-------------------------------------------------\n\nPlease see [DONATING](DONATING.md#donating).\n\n\nWill SyncTrayzor phone home / give away my secrets / etc?\n---------------------------------------------------------\n\nSyncTrayzor's auto-update mechanism will periodically call a script (found in `server/version_check.php`, hosted on a server of mine) to find out if there's an upgrade available.\nIt will disclose your current SyncTrayzor version, and the package you downloaded (installer/portable and x64/x86).\nIt will also reveal your IP address, which is unavoidable.\n\nYou can turn off auto-updates in the Settings, but in that case you are responsible for manually checking for updates.\n\nUsage information, details of your computer / network / syncthing setup / etc are not reported.\n\n\nHow can I be sure that I'm not downloading a virus?\n---------------------------------------------------\n\nYou can be paranoid and build everything from source (after auditing the source), or you can trust that I'm a good person who's trusted by the Syncthing developers.\n\nYou can verify that this GitHub account hasn't been compromised and is releasing malicious downloads by following the steps in the [Security README](https://github.com/canton7/SyncTrayzor/tree/master/security).\nThis process also lets you verify that Syncthing's developers trust me to release non-malicious software.\n\n\nWhat will SyncTrayzor do to Syncthing?\n--------------------------------------\n\nIt's worth noting that SyncTrayzor will override the 'GUI Listen Address' and 'API Key' in Syncthing's configuration.\nThis is because it needs to fully control these values, in order to ensure that it can communicate with Syncthing.\n\nHowever, you can set these values in File -> Settings, if you want to customise them.\n\n\nWhat will SyncTrayzor do to my system?\n--------------------------------------\n\nGood question. The answer depends on whether you installed SyncTrayzor using the installer, or are running it standalone.\n\n### Installed\n\nThe Installed version of SyncTrayzor will install itself into `C:\\Program Files\\SyncTrayzor` or `C:\\Program Files (x86)\\SyncTrayzor` for the 64-bit and 32-bit version respectively.\n\nBy default, SyncTrayzor will put its own configuration in `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor`, and let Syncthing use its default folder for its database, which is `C:\\Users\\<You>\\AppData\\Local\\Syncthing`.\nIt will also create a registry key at `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SyncTrayzor` the first time that it is run, which will let it start when you log in.\n\nYou can delete this registry key by unchecking \"Automatically start on login\" in the settings.\n\nYou can set a custom home path for Syncthing in the settings if you wish (Settings -> Syncthing -> Advanced -> Syncthing Custom Home Path).\nThis is useful if you want to keep the copy of Syncthing managed by SyncTrayzor separate from another copy running on your machine.\n\nThe auto-update mechanism may download updates to `%TEMP%\\SyncTrayzor`.\nThis location is periodically cleared out.\n\n### Portable\n\nSyncTrayzor Portable will put its own configuration in `SyncTrayzorPortable\\data`, and tell Syncthing to use `SyncTrayzorPortable\\data\\syncthing` for its database.\nThis means that, when manually upgrading, you can simply move the 'data' folder over to move all your settings and database.\n\nThe portable version won't start on login by default. If you check \"Automatically start on login\" in the settings, then a registry key will be created at `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SyncTrayzor`.\n\nThe auto-update mechanism may download updates to `%TEMP%\\SyncTrayzor`.\nThis location is periodically cleared out.\n\n\nMigrating between \"raw\" Syncthing, Portable, and Installed SyncTrayzor\n----------------------------------------------------------------------\n\n\nHere's a handy table of what you need to copy where if you're migrating between different combinations of \"raw\" Syncthing, SyncTrayzor Installed, and SyncTrayzor Portable.\n\n| From | To | Actions |\n| --- | --- | --- |\n| \"raw\" Syncthing | SyncTrayzor Installed | None | \n| \"raw\" Syncthing | SyncTrayzor Portable | Copy the contents of `C:\\Users\\<You>\\AppData\\Local\\Syncthing` into the `data\\syncthing` folder inside the portable directory |\n| SyncTrayzor Installed | \"raw\" Syncthing | None |\n| SyncTrayzor Installed | SyncTrayzor Portable | <ol><li>Copy the contents of `C:\\Users\\<You>\\AppData\\Local\\Syncthing` into the `data\\syncthing` folder inside the portable directory</li><li>Copy `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor\\config.xml` to `data\\config.xml`</li></ol> |\n| SyncTrayzor Portable | \"raw\" Syncthing | Copy the contents of the `data\\syncthing\\` folder inside the portable directly into `C:\\Users\\<You>\\AppData\\Local\\Syncthing` |\n| SyncTrayzor Portable | SyncTrayzor Installed | <ol><li>Copy the contents of the `data\\syncthing` folder inside the portable directory into `C:\\Users\\<You>\\AppData\\Local\\Syncthing`</li><li>Copy `data\\config.xml` to `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor\\config.xml`</li></ol> |\n\n\nBackups\n-------\n\nFor the installed version of SyncTrayzor, in order to save your configuration (both Syncthing's and SyncTrayzor's), you will need to backup the following paths:\n\n - `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor`\n - `C:\\Users\\<You>\\AppData\\Local\\Syncthing`\n\n\nUsing Syncthing beta releases\n-----------------------------\n\n### Installed\n\nSyncTrayzor keeps two copies of syncthing.exe.\n\nThe copy that is executed is at `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor\\syncthing.exe`.\nThis one is writable by the user, allowing Syncthing to auto-upgrade.\n\nThere's also a backup copy in `C:\\Program Files\\SyncTrayzor\\syncthing.exe`.\nThis one is copied to `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor\\syncthing.exe` if that one does not exist (SyncTrayzor has never been run before for that user, for example).\n\nIf you want to manually upgrade (e.g. to a beta version) you should download Syncthing from [the releases page](https://github.com/syncthing/syncthing/releases), and replace the `syncthing.exe` in `C:\\Users\\<You>\\AppData\\Roaming\\SyncTrayzor`.\n\n\n### Portable\n\nSyncTrayzor keeps two copies of syncthing.exe.\n\nThere's a copy in `data\\syncthing.exe`, which is the one which is run. There's also a copy next to `SyncTrayzor.exe`, which is used if the one in `data\\` is missing.\n\nIf you want to manually upgrade (e.g. to a beta version) you should download Syncthing from [the releases page](https://github.com/syncthing/syncthing/releases), and replace the one at `data\\syncthing.exe`.\n\n\nBuilding from Source\n--------------------\n\nYou'll need Visual Studio 2019.\nClone/download the repository, open `src\\SyncTrayzor.sln`, and compile.\nYou'll also need to [download syncthing.exe](https://github.com/syncthing/syncthing/releases) and place it in the `bin\\x86\\Debug`, `bin\\x64\\Debug`, `bin\\x86\\Release`, or `bin\\x64\\Release` folder as appropriate.\n\n\nNotes for System Administrators\n-------------------------------\n\nThe installer is built using Inno Setup, and has various command-line options, [documented here](http://www.jrsoftware.org/ishelp/index.php?topic=setupcmdline).\nIf you pass the `/silent` command-line flag when SyncTrayzor won't be launched when the installer completes: add `/StartSyncTrayzor` to override this (which also causes SyncTrayzor to be launched minimized).\n\nThere are various parameters inside the file `SyncTrayzor.exe.config` which can be customised by system administrators, including the default SyncTrayzor configuration (used to create the user's SyncTrayzor config file when SyncTrayzor is first launched).\nTo override these, pass the flag `/SyncTrayzorExeConfig=\"Path\\To\\Customized\\SyncTrayzor.exe.config\"` to the installer -- the specified `SyncTrayzor.exe.config` will overwrite the default.\n\nNote that the contents / structure of `SyncTrayzor.exe.config` may change between releases.\nUsing the wrong version may cause a crash, or incorrect behaviour.\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 13.595703125,
          "content": "require 'tmpdir'\nrequire 'open-uri'\n\nrequire_relative 'build/TxClient'\nrequire_relative 'build/CsprojResxWriter'\n\nISCC = ENV['ISCC'] || 'C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe'\nSZIP = ENV['SZIP'] || File.join(__dir__, 'build', '7za.exe')\nSIGNTOOL = ENV['SIGNTOOL'] || 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Bin\\signtool.exe'\nVSWHERE = 'build/vswhere.exe'\n\nCONFIG = ENV['CONFIG'] || 'Release'\nMSBUILD_LOGGER = ENV['MSBUILD_LOGGER']\n\nSRC_DIR = 'src/SyncTrayzor'\nINSTALLER_DIR = 'installer'\nDEPLOY_DIR = 'deploy'\n\nSLN = 'src/SyncTrayzor.sln'\n\nCHOCOLATEY_NUSPEC = 'chocolatey/synctrayzor.nuspec'\n\nCHECKSUM_UTIL_CSPROJ = 'src/ChecksumUtil/ChecksumUtil.csproj'\nCHECKSUM_UTIL_EXE = 'bin/ChecksumUtil/Release/ChecksumUtil.exe'\nSYNCTHING_RELEASES_CERT = 'security/syncthing_releases_cert.asc'\n\nCHECKSUM_FILE_PRIV_KEY = 'security/private_key.asc'\n\nPFX = ENV['PFX'] || File.join(INSTALLER_DIR, 'SyncTrayzorCA.pfx')\n\nPORTABLE_SYNCTHING_VERSION = 'latest'\n\nclass ArchDirConfig\n  attr_reader :arch\n  attr_reader :bin_dir\n  attr_reader :installer_dir\n  attr_reader :installer_output\n  attr_reader :installer_iss\n  attr_reader :portable_output_dir\n  attr_reader :portable_output_file\n  attr_reader :syncthing_binaries\n\n  def initialize(arch, github_arch)\n    @arch = arch\n    @github_arch = github_arch\n    @bin_dir = \"bin/#{@arch}/#{CONFIG}\"\n    @installer_dir = File.join(INSTALLER_DIR, @arch)\n    @installer_output = File.join(@installer_dir, \"SyncTrayzorSetup-#{@arch}.exe\")\n    @installer_iss = File.join(@installer_dir, \"installer-#{@arch}.iss\")\n    @portable_output_dir = \"SyncTrayzorPortable-#{@arch}\"\n    @portable_output_file = File.join(DEPLOY_DIR, \"SyncTrayzorPortable-#{@arch}.zip\")\n    @syncthing_binaries = { 'latest' => 'syncthing.exe' }\n  end\n\n  def sha1sum_download_uri(version)\n    \"https://github.com/syncthing/syncthing/releases/download/v#{version}/sha1sum.txt.asc\"\n  end\n\n  def download_uri(version)\n    \"https://github.com/syncthing/syncthing/releases/download/v#{version}/syncthing-windows-#{@github_arch}-v#{version}.zip\"\n  end\nend\n\nSYNCTHING_VERSIONS_TO_UPDATE = ['latest']\n\nARCH_CONFIG = [ArchDirConfig.new('x64', 'amd64'), ArchDirConfig.new('x86', '386')]\nASSEMBLY_INFOS = FileList['**/AssemblyInfo.cs']\n\ndef build(sln, platform, rebuild = true)\n  if ENV['MSBUILD']\n    msbuild = ENV['MSBUILD']\n  else\n    path = `#{VSWHERE} -requires Microsoft.Component.MSBuild -format value -property installationPath`.chomp\n    msbuild = File.join(path, 'MSBuild', 'Current', 'Bin', 'MSBuild.exe')\n  end\n\n  puts \"MSBuild is at #{msbuild}\"\n  tasks = rebuild ? 'Clean;Rebuild' : 'Build'\n  cmd = \"\\\"#{msbuild}\\\" \\\"#{sln}\\\" -t:#{tasks} -p:Configuration=#{CONFIG};Platform=#{platform}\"\n  if MSBUILD_LOGGER\n    cmd << \" -logger:\\\"#{MSBUILD_LOGGER}\\\" /verbosity:minimal\"\n  else\n    cmd << \" -verbosity:quiet\"\n  end\n  \n  puts cmd\n  sh cmd\nend\n\nnamespace :build do\n  ARCH_CONFIG.each do |arch_config|\n    desc \"Build the project (#{arch_config.arch})\"\n    task arch_config.arch do\n      build(SLN, arch_config.arch)\n    end\n  end\nend\n\ndesc 'Build both 64-bit and 32-bit binaries'\ntask :build => ARCH_CONFIG.map{ |x| :\"build:#{x.arch}\" }\n\ntask :\"build-checksum-util\" do\n  build(CHECKSUM_UTIL_CSPROJ, 'AnyCPU', false)\nend\n\nnamespace :installer do\n  ARCH_CONFIG.each do |arch_config|\n    desc \"Create the installer (#{arch_config.arch})\"\n    task arch_config.arch do\n      unless File.exist?(ISCC)\n        warn \"Please install Inno Setup\" \n        exit 1\n      end\n\n      rm arch_config.installer_output if File.exist?(arch_config.installer_output)\n      sh %Q{\"#{ISCC}\" #{arch_config.installer_iss}}\n\n      mkdir_p DEPLOY_DIR\n      mv arch_config.installer_output, DEPLOY_DIR\n    end\n  end\nend\n\ndesc 'Build both 64-bit and 32-bit installers'\ntask :installer => ARCH_CONFIG.map{ |x| :\"installer:#{x.arch}\" }\n\nnamespace :\"sign-installer\" do\n  ARCH_CONFIG.each do |arch_config|\n    desc \"Sign the installer (#{arch_config.arch}). Specify PASSWORD if required\"\n    task arch_config.arch do\n\n      unless File.exist?(SIGNTOOL)\n        warn \"You must install the Windows SDK\"\n        exit 1\n      end\n\n      unless File.exist?(PFX)\n        warn \"#{PFX} must exist\"\n        exit 1\n      end\n\n      args = \"sign /f #{PFX} /t http://timestamp.verisign.com/scripts/timstamp.dll\"\n      args << \" /p #{ENV['PASSWORD']}\" if ENV['PASSWORD']\n      args << \" /v #{File.join(DEPLOY_DIR, File.basename(arch_config.installer_output))}\"\n\n      # Don't want to print out the pasword!\n      puts \"Invoking signtool\"\n      system %Q{\"#{SIGNTOOL}\" #{args}}\n    end\n  end\nend\n\ndesc 'Sign both 64-bit and 32-bit installers. Specify PASSWORD if required'\ntask :\"sign-installer\" => ARCH_CONFIG.map{ |x| :\"sign-installer:#{x.arch}\" }\n\ndef cp_to_portable(output_dir, src, output_filename = nil)\n  dest = File.join(output_dir, output_filename || src)\n  raise \"Cannot find #{src}\" unless File.exist?(src)\n  # It could be an empty directory - so ignore it\n  # We'll create it as and when if there are any files in it\n  if File.file?(src)\n    mkdir_p File.dirname(dest) unless File.exist?(File.dirname(dest))\n    cp src, dest\n  end\nend\n\nnamespace :portable do\n  ARCH_CONFIG.each do |arch_config|\n    desc \"Create the portable package (#{arch_config.arch})\"\n    task arch_config.arch do\n      mkdir_p File.dirname(arch_config.portable_output_file)\n      rm arch_config.portable_output_file if File.exist?(arch_config.portable_output_file)\n\n      Dir.mktmpdir do |tmp|\n        portable_dir = File.join(tmp, arch_config.portable_output_dir)\n        Dir.chdir(arch_config.bin_dir) do\n          files = FileList['**/*'].exclude(\n            '*.xml', '*.vshost.*', '*.log', '*.Installer.config', '*/FluentValidation.resources.dll',\n            '*/System.Windows.Interactivity.resources.dll', 'syncthing.exe', 'data/*', 'logs',\n            'd3dcompiler_47.dll', 'libEGL.dll', 'libGLESv2.dll', 'swiftshader/libEGL.dll', 'swiftshader/libGLESv2.dll',)\n\n          files.each do |file|\n            cp_to_portable(portable_dir, file)\n          end\n        end\n\n        Dir.chdir(File.join('bin', 'PortableInstaller', CONFIG)) do\n          cp_to_portable(portable_dir, 'PortableInstaller.exe')\n        end\n\n        cp File.join(SRC_DIR, 'Icons', 'default.ico'), arch_config.portable_output_dir\n\n        FileList['*.md', '*.txt'].each do |file|\n          cp_to_portable(portable_dir, file)\n        end\n        \n        Dir.chdir(File.join(arch_config.installer_dir, 'ucrt')) do\n          FileList['*.dll'].each do |file|\n            cp_to_portable(portable_dir, file)\n          end\n        end\n        Dir.chdir(File.join(arch_config.installer_dir, 'vc++')) do\n          FileList['*.dll'].each do |file|\n            cp_to_portable(portable_dir, file)\n          end\n        end\n        Dir.chdir(arch_config.installer_dir) do\n          cp_to_portable(portable_dir, arch_config.syncthing_binaries[PORTABLE_SYNCTHING_VERSION], 'syncthing.exe')\n        end\n\n        sh %Q{\"#{SZIP}\" a -tzip -mx=7 -y #{arch_config.portable_output_file} #{portable_dir}}\n      end\n    end\n  end\nend\n\ndef create_checksums(checksum_file, password, algorithm, files)\n  rm checksum_file if File.exist?(checksum_file)\n\n  args = %Q{create \"#{checksum_file}\" #{algorithm} \"#{CHECKSUM_FILE_PRIV_KEY}\" \"#{password}\" } + files.map{ |x| \"\\\"#{x}\\\"\" }.join(' ')\n\n  # Don't want to print out the pasword!\n  puts \"Invoking #{CHECKSUM_UTIL_EXE} for #{checksum_file}\"\n  system %Q{\"#{CHECKSUM_UTIL_EXE}\" #{args}}\nend\n\ndesc 'Create checksums files' \ntask :\"create-checksums\" => [:\"build-checksum-util\"] do\n  password = ENV['PASSWORD'] || '\"\"'\n  checksum_file = File.join(DEPLOY_DIR, 'sha1sum.txt.asc')\n  files = Dir[\"#{DEPLOY_DIR}/*.{zip,exe}\"]\n\n  create_checksums(File.join(DEPLOY_DIR, 'sha1sum.txt.asc'), password, 'sha1', files)\n  create_checksums(File.join(DEPLOY_DIR, 'sha512sum.txt.asc'), password, 'sha512', files)\nend\n\ndesc 'Clean portable and installer, all architectures'\ntask :clean do\n  rm_rf DEPLOY_DIR if File.exist?(DEPLOY_DIR)\nend\n\nnamespace :package do\n  ARCH_CONFIG.each do |arch_config|\n    desc \"Build installer and portable (#{arch_config.arch})\"\n    task arch_config.arch => \n      [\n        :\"update-syncthing:#{arch_config.arch}\",\n        :\"build:#{arch_config.arch}\",\n        :\"installer:#{arch_config.arch}\",\n        :\"sign-installer:#{arch_config.arch}\",\n        :\"portable:#{arch_config.arch}\"\n      ]\n  end\nend\n\ndesc 'Build installer and portable for all architectures'\ntask :package => [:clean, *ARCH_CONFIG.map{ |x| :\"package:#{x.arch}\" }, :\"create-checksums\"]\n\ndesc 'Build chocolatey package'\ntask :chocolatey do\n  chocolatey_dir = File.dirname(CHOCOLATEY_NUSPEC)\n  cp Dir[File.join(DEPLOY_DIR, 'SyncTrayzorSetup-*.exe')], File.join(chocolatey_dir, 'tools')\n  cp 'LICENSE.txt', File.join(chocolatey_dir, 'tools')\n  Dir.chdir(chocolatey_dir) do\n    sh \"choco pack\"\n  end\n  mv Dir[File.join(chocolatey_dir, 'synctrayzor.*.nupkg')], DEPLOY_DIR\nend\n\ndesc \"Bump version number\"\ntask :version, [:version] do |t, args|\n  parts = args[:version].split('.')\n  parts4 = parts.dup\n  parts4 << '0' if parts4.length == 3\n  version4 = parts4.join('.')\n  ASSEMBLY_INFOS.each do |info|\n    content = IO.read(info)\n    content[/^\\[assembly: AssemblyVersion\\(\\\"(.+?)\\\"\\)\\]/, 1] = version4\n    content[/^\\[assembly: AssemblyFileVersion\\(\\\"(.+?)\\\"\\)\\]/, 1] = version4\n    File.open(info, 'w'){ |f| f.write(content) }\n  end\n\n  choco_content = IO.read(CHOCOLATEY_NUSPEC)\n  choco_content[/<version>(.+?)<\\/version>/, 1] = args[:version]\n  File.open(CHOCOLATEY_NUSPEC, 'w'){ |f| f.write(choco_content) }\nend\n\ndesc 'Create both 64-bit and 32-bit portable packages'\ntask :portable => ARCH_CONFIG.map{ |x| :\"portable:#{x.arch}\" }\n\nnamespace :syncthing do\n  namespace :download do\n    ARCH_CONFIG.each do |arch_config|\n      desc \"Download syncthing (#{arch_config.arch})\"\n      task arch_config.arch, [:version] => [:\"build-checksum-util\"] do |t, args|\n        Dir.mktmpdir do |tmp|\n          download_file = File.join(tmp, File.basename(arch_config.download_uri(args[:version])))\n          File.open(download_file, 'wb') do |outfile|\n            open(arch_config.download_uri(args[:version])) do |infile|\n              outfile.write(infile.read)\n            end\n          end\n\n          File.open(File.join(tmp, 'sha1sum.txt.asc.'), 'w') do |outfile|\n            open(arch_config.sha1sum_download_uri(args[:version])) do |infile|\n              outfile.write(infile.read)\n            end\n          end\n\n          sh CHECKSUM_UTIL_EXE, 'verify', File.join(tmp, 'sha1sum.txt.asc'), 'sha1', SYNCTHING_RELEASES_CERT, download_file\n\n          Dir.chdir(tmp) do\n            sh %Q{\"#{SZIP}\" e -y #{File.basename(download_file)}}\n          end\n\n          cp File.join(tmp, 'syncthing.exe'), File.join(arch_config.installer_dir, 'syncthing.exe')\n        end\n      end\n    end\n  end\n\n  desc 'Download syncthing for all architectures'\n  task :download, [:version] => ARCH_CONFIG.map{ |x| :\"syncthing:download:#{x.arch}\" }\n\n  namespace :update do\n    ARCH_CONFIG.each do |arch_config|\n      desc \"Update syncthing binaries (#{arch_config.arch}\"\n      task arch_config.arch do\n        arch_config.syncthing_binaries.values_at(*SYNCTHING_VERSIONS_TO_UPDATE).each do |bin|\n          path = File.join(arch_config.installer_dir, bin)\n          raise \"Could not find #{path}\" unless File.exist?(path)\n          Dir.mktmpdir do |tmp|\n            sh path, '-upgrade', \"-home=#{tmp}\" do; end\n          end\n\n          old_bin = \"#{path}.old\"\n          rm old_bin if File.exist?(old_bin)\n        end\n      end\n    end\n  end\n\n  desc 'Update syncthing binaries, all architectures'\n  task :update => ARCH_CONFIG.map{ |x| :\"syncthing:update:#{x.arch}\" }\nend\n\n\ndef create_tx_client\n  raise \"TX_PASSWORD not specified\" if ENV['TX_PASSWORD'].nil? || ENV['TX_PASSWORD'].empty?\n  TxClient.new('synctrayzor', 'strings', 'canton7', ENV['TX_PASSWORD'])\nend\n\ndef create_csproj_resx_writer\n  csproj_resx_writer = CsprojResxWriter.new('src/SyncTrayzor/SyncTrayzor.csproj', 'Properties')\n  csproj_resx_writer.language_exceptions['es_ES'] = 'es'\n  csproj_resx_writer\nend\n\nnamespace :tx do\n  desc \"Remove all translations from csproj\"\n  task :clean do\n    create_csproj_resx_writer().remove_all_resx\n    puts \"Cleaned translations\"\n  end\n\n  desc \"Fetch all translations\"\n  task :pull => [:\"tx:clean\"] do\n    tx_client = create_tx_client()\n    csproj_resx_writer = create_csproj_resx_writer()\n    tx_client.list_translations().each do |language|\n      next if language == 'en'\n      puts \"Fetching #{language}...\"\n      tx_client.download_translation(language, csproj_resx_writer.absolute_resx_path_for_language(language))\n      csproj_resx_writer.add_resx_to_csproj(language)\n    end\n  end\n\n  desc \"Push source translations\"\n  task :push do\n    tx_client = create_tx_client()\n    csproj_resx_writer = create_csproj_resx_writer()\n\n    source_resx = csproj_resx_writer.read_and_sort_source_resx\n    response = tx_client.upload_source(source_resx)\n    puts \"Added: #{response['strings_added']}. Updated: #{response['strings_updated']}. Deleted: #{response['strings_delete']}.\"\n  end\nend\n\nnamespace :icons do\n  desc \"Create a tray icon (pass 256x256 source)\"\n  task :\"tray-icon\", [:source] do |t,args|\n    source = args[:source]\n    # See https://wiki.lazarus.freepascal.org/Windows_Icon\n    sizes = [\n      16, 32, # Normal 96 DPI\n      20, 40, # 120 DPI (125%)\n      24, 48, # 144 DPI (150%)\n      32, 64, # 192 DPI (200%)\n      36, 72, # 225%\n      40, 80, # 250%\n      44, 88, # 275%\n      48, 96, # 300%\n    ].uniq.sort\n    raise \"Need a source image\" unless source\n    Dir.chdir(File.join('src', 'SyncTrayzor', 'Icons')) do\n      sizes.each do |size|\n        sh 'magick', 'convert', source, '-resize', \"#{size}x#{size}\", source.pathmap(\"%n-#{size}%x\")\n      end\n      sh 'magick', 'convert', *sizes.map{ |x| source.pathmap(\"%n-#{x}%x\") }, source.pathmap('%n.ico')\n      rm sizes.map{ |x| source.pathmap(\"%n-#{x}%x\") }\n    end    \n  end\nend"
        },
        {
          "name": "SyncTrayzor.png",
          "type": "blob",
          "size": 7.5615234375,
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "chocolatey",
          "type": "tree",
          "content": null
        },
        {
          "name": "installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}