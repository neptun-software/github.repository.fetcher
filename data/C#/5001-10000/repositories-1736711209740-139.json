{
  "metadata": {
    "timestamp": 1736711209740,
    "page": 139,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ChilliCream/graphql-platform",
      "stars": 5321,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".build",
          "type": "tree",
          "content": null
        },
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 5.068359375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nrulers = 120\n\n# ReSharper properties\nresharper_align_multiline_statement_conditions = false\nresharper_braces_for_ifelse = not_required\nresharper_wrap_object_and_collection_initializer_style = chop_always\n\n# Microsoft .NET properties\ncsharp_new_line_before_members_in_object_initializers = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n# CSharp code style settings:\n[*.cs]\nindent_size = 4\n\n# Namespace settings\ncsharp_style_namespace_declarations = file_scoped:warning\n\n# Avoid \"this.\" and \"Me.\" if not necessary\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\n\n# Use language keywords instead of framework type names for type references\ndotnet_style_predefined_type_for_locals_parameters_members = true:error\ndotnet_style_predefined_type_for_member_access = true:error\n\n# Suggest more modern language features when available\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:error\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\n\n# Prefer \"var\" everywhere\ncsharp_style_var_for_built_in_types = true:suggestion\ncsharp_style_var_when_type_is_apparent = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\n\n# Prefer method-like constructs to have a block body\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\n\n# Prefer property-like constructs to have an expression-body\ncsharp_style_expression_bodied_properties = true:none\ncsharp_style_expression_bodied_indexers = true:none\ncsharp_style_expression_bodied_accessors = true:none\n\n# Suggest more modern language features when available\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_throw_expression = false:error\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Expression-level preferences\ncsharp_prefer_simple_default_expression = true:error\ncsharp_style_deconstructed_variable_declaration = false:none\ncsharp_style_pattern_local_over_anonymous_function = true:none\n\n# Sort using and Import directives with System.* appearing first\ndotnet_sort_system_directives_first = true\n\n# Newline settings\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\ncsharp_new_line_before_members_in_object_initializers = true\n\n# Indentation options\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = flush_left\n\n# Spacing options\ncsharp_space_after_cast = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\n\n# Wrapping options\ncsharp_preserve_single_line_statements = false\ncsharp_preserve_single_line_blocks = true\n\ndotnet_style_require_accessibility_modifiers = always\n\n# Public API\ndotnet_diagnostic.rs0016.severity = warning\ndotnet_diagnostic.rcs1194.severity = none\n\n# Require braces on all control statements\nresharper_braces_for_for = required\nresharper_braces_for_foreach = required\nresharper_braces_for_ifelse = required\nresharper_braces_for_while = required\n\n# ReSharper inspection severities\nresharper_enforce_do_while_statement_braces_highlighting = error\nresharper_enforce_fixed_statement_braces_highlighting = error\nresharper_enforce_foreach_statement_braces_highlighting = error\nresharper_enforce_for_statement_braces_highlighting = error\nresharper_enforce_if_statement_braces_highlighting = error\nresharper_enforce_lock_statement_braces_highlighting = error\nresharper_enforce_using_statement_braces_highlighting = error\nresharper_enforce_while_statement_braces_highlighting = error\n\n# ReSharper properties\nresharper_align_multiline_binary_expressions_chain = false\nresharper_wrap_before_binary_pattern_op = false\nresharper_wrap_chained_binary_expressions = chop_if_long\nresharper_wrap_chained_binary_patterns = chop_if_long\n\n# Require braces on all control statements\nresharper_csharp_braces_for_ifelse = required\nresharper_csharp_braces_for_for = required\nresharper_csharp_braces_for_foreach = required\nresharper_csharp_braces_for_while = required\nresharper_csharp_braces_for_using = required\nresharper_csharp_braces_for_lock = required\nresharper_csharp_braces_for_fixed = required\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.1748046875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\nlcov.info\ncoverage.json\n.DS_Store\n\nBenchmarkDotNet.Artifacts\n.sonarqube/\n.testresults\n\n# Build related\ntools/**\n!tools/packages.config\n!tools/Build.sln\n!tools/Build.Core.sln\n\ntestoutput/\nartifacts/\n__mismatch__\ncoverage.opencover.xml\noutput\nsrc/All.sln\nsrc/Build.CheckApi.sln\nsrc/Build.Sonar.sln\nsrc/Build.Test.sln\nsrc/Build.Pack.sln\n*.DotSettings\n\n# asp .net core\nappsettings.user.json\n\n# benchmark dbs\nconferences.db\nconferences.db-shm\nconferences.db-wal\n\n.server/\n.nuke/\n.mono/\npackages.lock.json\n"
        },
        {
          "name": ".markdownlint.yml",
          "type": "blob",
          "size": 0.8095703125,
          "content": "# https://github.com/DavidAnson/markdownlint\n\nMD013: false # Rationale: Hard line breaks are unnecessary (use soft wrapping instead).\nMD024:\n  siblings_only: true\nMD025: false # Rationale: The documentation ToC generator is designed to work with multiple top-level headings.\nMD026:\n  punctuation: \".,;:\"\nMD028: false # Rationale: Used for displaying separate notes or warnings in the documentation.\nMD029: false # Rationale: The documentation currently misuses list formatting for other purposes.\nMD033:\n  allowed_elements:\n    - a\n    - ApiChoiceTabs\n    - br\n    - Code\n    - ExampleTabs\n    - img\n    - Implementation\n    - InputChoiceTabs\n    - List\n    - PackageInstallation\n    - Panel\n    - Schema\n    - strong\n    - Tab\n    - u\n    - Video\nMD036: false # Rationale: Possibly too strict, used frequently in documentation.\n"
        },
        {
          "name": ".nuke",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <os@chillicream.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at <https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\n<https://www.contributor-covenant.org/faq>\n"
        },
        {
          "name": "COMMUNITY.md",
          "type": "blob",
          "size": 2.009765625,
          "content": "# Community\n\nThis document highlights projects from our awesome community.\n\nFeel free to open a PR to include your project in this list.\n\n## Libraries\n\nVarious libraries, packages, etc. that developers can add to their own project and benefit from.\n\n### Authorization\n\n- [Cloudey.Reflex.Authorization.HotChocolate](https://github.com/CloudeyIT/Reflex/tree/master/Cloudey.Reflex.Authorization.HotChocolate) - Extensions to make authorization painless in HotChocolate\n\n### Data access\n\n- [GraphQL.PreprocessingExtensions](https://github.com/cajuncoding/GraphQL.RepoDB/tree/main/GraphQL.PreProcessingExtensions) - HotChocolate resolver extensions for working with Micro ORM(s) and encapsulated data access without IQueryable\n- [GraphQL.RepoDB](https://github.com/cajuncoding/GraphQL.RepoDB) - An integration library for HotChocolate and SQL Server data access using RepoDB micro-orm\n- [TransactChoco](https://github.com/dalrankov/TransactChoco) - TransactionScope middleware for HotChocolate\n\n### Relay\n\n- [AutoGuru.HotChocolate.PolymorphicIds](https://github.com/autoguru-au/hotchocolate-polymorphic-ids) - Polymorphic Relay IDs for HotChocolate\n\n### Types\n\n- [HotChocolate.Extensions.Types.Fido2](https://github.com/tr4cks/hotchocolate-types-fido2) - Make available the fido2-net-lib types into HotChocolate\n\n### Validation\n\n- [AppAny.HotChocolate.FluentValidation](https://github.com/appany/AppAny.HotChocolate.FluentValidation) - Input field HotChocolate + FluentValidation integration\n- [DataAnnotatedModelValidations](https://github.com/fiakkasa/DataAnnotatedModelValidations) - Data Annotated Model Validation Middleware for HotChocolate\n- [FairyBread](https://github.com/benmccallum/fairybread) - Input validation for HotChocolate (FluentValidation)\n- [FluentChoco](https://github.com/dalrankov/FluentChoco) - FluentValidation middleware for HotChocolate\n- [Graph.ArgumentValidator](https://github.com/VarunSaiTeja/Graph.ArgumentValidator) - Adds input argument validation to HotChocolate (DataAnnotations)\n\n<!-- spell-checker:ignore Choco, Cloudey -->\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.5078125,
          "content": "# How to contribute\n\nOne of the easiest ways to contribute is to participate in discussions on GitHub issues. You can also contribute by submitting pull requests with code changes.\n\n## General feedback and discussions?\n\nStart a discussion on the [repository issue tracker](https://github.com/ChilliCream/graphql-platform/issues) or [join us on slack](http://slack.chillicream.com/).\n\n## Bugs and feature requests?\n\nBefore reporting a new issue, try to find an existing issue if one already exists. If it already exists, upvote (👍) it. Also consider adding a comment with your unique scenarios and requirements related to that issue.\n\nIf you can't find one, you can file a new issue by choosing the appropriate template [here](https://github.com/ChilliCream/graphql-platform/issues/new/choose).\n\n## How to submit a pull request\n\nWe are always happy to see pull requests from community members both for bug fixes as well as new features.\n\n### Finding an issue to work on\n\nWe have marked issues which are good candidates for first-time contributors, in case you are not already set on working on a specific issue.\n\n- [\"Good first issue\" issues](https://github.com/ChilliCream/graphql-platform/labels/%F0%9F%99%8B%20good%20first%20issue) - we think these are a great for newcomers.\n- [\"Help wanted\" issues](https://github.com/ChilliCream/graphql-platform/labels/%F0%9F%99%8B%20help%20wanted) - these issues are up for grabs.\n\n### Before writing code\n\nBefore you spend time writing code, make sure of the following things:\n\n- You have commented on the related issue to let others know you are working on it\n- You have laid out your solution on a high level and received approval from the maintainers, if you are tackling a bigger change\n\nAfter this you can fork our repository to implement your changes. If you are unfamiliar with forking, be sure to read [this guide](https://guides.github.com/activities/forking/) first.\n\nTo get started with the codebase, see [How to launch and build the solution](#how-to-launch-and-build-the-solution).\n\n### Before submitting a pull request\n\nBefore submitting a pull request containing your changes, make sure that it checks the following requirements:\n\n- You add test coverage following existing patterns within the codebase\n- Your code matches the existing syntax conventions within the codebase\n- You document any changes to the public API surface ([Learn more](./API-Baselines.md))\n- Your pull request is small, focused, and avoids making unrelated changes\n\nIf your pull request contains any of the below, it's less likely to be merged.\n\n- Changes that break backward compatibility\n- Changes that are only wanted by one person/company\n- Changes that add entirely new feature areas without prior agreement\n- Changes that are mostly about refactoring existing code or code style\n\n### Submitting a pull request\n\nFollow [this guide](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork) to submit your pull request. Be sure to mark it as draft if it is in an early stage.\n\n### During pull request review\n\nCore contributors will review your pull request and provide feedback.\n\n## How to launch and build the solution\n\nWe use [Nuke](https://nuke.build/) for build automation.\n\nTo work on Hot Chocolate, you will need .NET 7, Node 14, and Yarn 1.x.\n\nAfter cloning the repository, run `init.sh` or `init.cmd`, which are located in the repository's root. The script files will create the `src/All.sln`, which can be used to develop in Visual Studio 2022 and higher or Rider 2021.3 EAP or higher.  It will also restore the packages for the documentation.\n\nOther more focused solution files exist if you want to narrow in on a particular part of the platform.\nThe smaller solution files are great when working with VSCode.\n\nThe documentation is located in the `website` directory and can be started with `yarn start`.\n\nThere are other available commands too. As set up in the [.build](./.build/) directory.\n\n## How to Check the docs\n\nWe use [markdownlint](https://github.com/DavidAnson/markdownlint) to check markdown formatting and [CSpell](https://cspell.org) for spelling. We have GitHub actions to check these for PRs, but if you'd like to check locally, you can:\n\n- Install CSpell: `npm install --global cspell`\n- Install the markdownlint CLI: `npm install --global markdownlint-cli2`.\n- For spellcheck, run `cspell --config ./cspell.json \"website/src/**/*.md\" --no-progress`\n- For markdown linting, run `markdownlint-cli2 \"*.md\" \"website/src/**/*.md\"`\n\n## Code of conduct\n\nSee [CODE-OF-CONDUCT.md](./CODE-OF-CONDUCT.md)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.072265625,
          "content": "MIT License\n\nCopyright (c) 2024 ChilliCream Inc. (Michael & Rafael Staib)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.0576171875,
          "content": "<!-- markdownlint-disable MD041 -->\n[![NuGet Package](https://img.shields.io/nuget/v/hotchocolate.svg)](https://www.nuget.org/packages/HotChocolate/)\n[![License](https://img.shields.io/badge/license-MIT-green)](https://github.com/ChilliCream/graphql-platform/blob/main/LICENSE)\n[![Slack channel](https://img.shields.io/badge/join%20the%20community-on%20slack-blue.svg)](http://slack.chillicream.com/)\n[![Twitter](https://img.shields.io/badge/join%20us-on%20twitter-green.svg)](https://twitter.com/chilli_cream)\n<!-- markdownlint-enable MD041 -->\n\n---\n\n# ChilliCream GraphQL Platform\n\nWelcome to the ChilliCream GraphQL Platform!\n\nWe help you, developers and companies, to leverage your APIs to the next level with GraphQL. Strongly-typed schemas that match your APIs 100 percent. Efficient data fetching that reduces overall cost without extra effort. Consumer-friendly, declarative, self documented APIs that support you in your daily work to build powerful UIs effectively.\n\nMost of our products are open-source and right here in this repository.\n\nEveryone is welcome! Always remember to treat anyone respectful, no matter their gender, opinion, religion, or skin-tone. We're one world and together we're stronger!\n\nJoin our **awesome community** on [Slack](https://slack.chillicream.com), if you would like to get in touch with us, need help, or just want to learn!\n\n## Our Products\n\n### Hot Chocolate\n\nHot Chocolate is the most efficient, feature-rich, open-source GraphQL server in the .NET ecosystem, that helps developers to build powerful GraphQL APIs and Gateways with ease.\n\n[Documentation](https://chillicream.com/docs/hotchocolate/)\n\n### Nitro\n\nNitro App is an awesome, performant, feature-rich GraphQL IDE / API Cockpit that helps developers and data scientists to explore, share, and test any GraphQL API.\n\nNitro App can be installed as a [Desktop App](https://get-nitro.chillicream.com), used as a [Web App](https://nitro.chillicream.com), which can be installed through your browser of choice as well, or used as middleware on your GraphQL endpoint. Middlewares are available in [.NET](https://www.nuget.org/packages/HotChocolate.AspNetCore) and [NodeJS](https://www.npmjs.com/package/@chillicream/nitro-express-middleware). More middlewares will follow.\n\n[Documentation](https://chillicream.com/docs/nitro/)\n\n### Strawberry Shake\n\nStrawberry Shake is an incredible, open-source GraphQL client for the .NET ecosystem, that helps developers to build awesome UIs in Blazor, Maui, and more. Other than most .NET GraphQL clients, Strawberry Shake is type-safe GraphQL client that generates .NET types from your GraphQL schema out of the box. Moreover, Strawberry Shake comes with a reactive store like in [Relay](https://relay.dev/) and [Apollo Client](https://www.apollographql.com/docs/react/), which is nice due to the fact that you can build reactive UIs in .NET with stuff like client-side data caching and data-fetching strategies.\n\n[Documentation](https://chillicream.com/docs/strawberryshake/)\n\n### Green Donut\n\nGreen Donut is a lightweight, yet powerful DataLoader that simplifies batching, caching, and solves the N+1 problem.\n\n[Documentation](https://chillicream.com/docs/hotchocolate/fetching-data/dataloader/)\n\n## Official examples\n\nExamples of things built on top of the ChilliCream GraphQL Platform that are open source and can be explored by others.\n\n- [GraphQL workshop](https://github.com/ChilliCream/graphql-workshop)\n- [HotChocolate examples](https://github.com/ChilliCream/hotchocolate-examples)\n\n## Contributing\n\n[Become a code contributor](CONTRIBUTING.md) and help us make the ChilliCream GraphQL platform even better!\n\n## From our community\n\n[Check out](COMMUNITY.md) what members of our awesome community have made!\n\n## Financial Contributors\n\n[Become a financial contributor](https://opencollective.com/chillicream/contribute) and help us sustain our community.\n\n### Sponsor\n\n[Become a sponsor](https://opencollective.com/chillicream#contribute) and get your logo on our README on Github with a link to your site.\n\n<!-- markdownlint-disable MD045 -->\n\n<a href=\"https://opencollective.com/chillicream/sponsor/0/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/1/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/2/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/3/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/4/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/5/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/6/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/7/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/8/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/9/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/9/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/10/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/10/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/11/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/11/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/12/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/12/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/13/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/13/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/14/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/14/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/15/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/15/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/16/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/16/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/17/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/17/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/18/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/18/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/sponsor/19/website?requireActive=false\" target=\"_blank\" rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/sponsor/19/avatar.svg?requireActive=false\"></a>\n\n<!-- markdownlint-enable MD045 -->\n\n### Backer\n\n[Become a backer](https://opencollective.com/chillicream#contribute) and get your image on our README on Github with a link to your site.\n\n<!-- markdownlint-disable MD045 -->\n\n<a href=\"https://opencollective.com/chillicream/backer/0/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/1/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/2/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/3/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/4/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/5/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/6/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/7/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/8/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/9/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/9/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/10/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/10/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/11/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/11/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/12/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/12/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/13/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/13/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/14/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/14/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/15/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/15/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/16/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/16/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/17/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/17/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/18/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/18/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/chillicream/backer/19/website?requireActive=false\" target=\"_blank\"  rel=\"noreferrer noopener\"><img src=\"https://opencollective.com/chillicream/backer/19/avatar.svg?requireActive=false\"></a>\n<!-- markdownlint-enable MD045 -->\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.8994140625,
          "content": "# Security Policy\n\n## Supported Versions\n\nWe will provide bug fixes and updates to the latest major version.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 14.x   | :white_check_mark:  |\n| < 13.0   | :x:               |\n\n## Security Updates\n\nWe will provide security relevant fixes to the following versions:\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 14.x   | :white_check_mark:  |\n| 13.x   | :white_check_mark:  |\n| 12.x   | :white_check_mark:  |\n| < 12.0   | :x:               |\n\n## Reporting a Vulnerability\n\nSecurity issues and bugs should be reported privately, via email, to ChilliCream Inc. by emailing <contact@chillicream.com>. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message.\n\nPlease do not open issues for anything you think might have a security implication.\n"
        },
        {
          "name": "accept.cmd",
          "type": "blob",
          "size": 0.1416015625,
          "content": ":; set -eo pipefail\n:; SCRIPT_DIR=$(cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd)\n:; ${SCRIPT_DIR}/accept.sh \"$@\"\n:; exit $?\n\n./build.cmd accept\n"
        },
        {
          "name": "accept.sh",
          "type": "blob",
          "size": 0.029296875,
          "content": "#!/bin/zsh\n\n./build.sh accept\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.2021484375,
          "content": ":; set -eo pipefail\n:; SCRIPT_DIR=$(cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd)\n:; ${SCRIPT_DIR}/build.sh \"$@\"\n:; exit $?\n\n@ECHO OFF\npowershell -ExecutionPolicy ByPass -NoProfile -File \"%~dp0build.ps1\" %*\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 2.8671875,
          "content": "[CmdletBinding()]\nParam(\n    [Parameter(Position=0,Mandatory=$false,ValueFromRemainingArguments=$true)]\n    [string[]]$BuildArguments\n)\n\nWrite-Output \"PowerShell $($PSVersionTable.PSEdition) version $($PSVersionTable.PSVersion)\"\n\nSet-StrictMode -Version 2.0; $ErrorActionPreference = \"Stop\"; $ConfirmPreference = \"None\"; trap { Write-Error $_ -ErrorAction Continue; exit 1 }\n$PSScriptRoot = Split-Path $MyInvocation.MyCommand.Path -Parent\n\n###########################################################################\n# CONFIGURATION\n###########################################################################\n\n$BuildProjectFile = \"$PSScriptRoot\\.build\\Build.csproj\"\n$TempDirectory = \"$PSScriptRoot\\\\.nuke\\temp\"\n\n$DotNetGlobalFile = \"$PSScriptRoot\\\\global.json\"\n$DotNetInstallUrl = \"https://dot.net/v1/dotnet-install.ps1\"\n$DotNetChannel = \"Current\"\n\n$env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = 1\n$env:DOTNET_CLI_TELEMETRY_OPTOUT = 1\n$env:DOTNET_MULTILEVEL_LOOKUP = 0\n\n###########################################################################\n# EXECUTION\n###########################################################################\n\nfunction ExecSafe([scriptblock] $cmd) {\n    & $cmd\n    if ($LASTEXITCODE) { exit $LASTEXITCODE }\n}\n\n# If dotnet CLI is installed globally and it matches requested version, use for execution\nif ($null -ne (Get-Command \"dotnet\" -ErrorAction SilentlyContinue) -and `\n     $(dotnet --version) -and $LASTEXITCODE -eq 0) {\n    $env:DOTNET_EXE = (Get-Command \"dotnet\").Path\n}\nelse {\n    # Download install script\n    $DotNetInstallFile = \"$TempDirectory\\dotnet-install.ps1\"\n    New-Item -ItemType Directory -Path $TempDirectory -Force | Out-Null\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n    (New-Object System.Net.WebClient).DownloadFile($DotNetInstallUrl, $DotNetInstallFile)\n\n    # If global.json exists, load expected version\n    if (Test-Path $DotNetGlobalFile) {\n        $DotNetGlobal = $(Get-Content $DotNetGlobalFile | Out-String | ConvertFrom-Json)\n        if ($DotNetGlobal.PSObject.Properties[\"sdk\"] -and $DotNetGlobal.sdk.PSObject.Properties[\"version\"]) {\n            $DotNetVersion = $DotNetGlobal.sdk.version\n        }\n    }\n\n    # Install by channel or version\n    $DotNetDirectory = \"$TempDirectory\\dotnet-win\"\n    if (!(Test-Path variable:DotNetVersion)) {\n        ExecSafe { & $DotNetInstallFile -InstallDir $DotNetDirectory -Channel $DotNetChannel -NoPath }\n    } else {\n        ExecSafe { & $DotNetInstallFile -InstallDir $DotNetDirectory -Version $DotNetVersion -NoPath }\n    }\n    $env:DOTNET_EXE = \"$DotNetDirectory\\dotnet.exe\"\n}\n\nWrite-Output \"Microsoft (R) .NET Core SDK version $(& $env:DOTNET_EXE --version)\"\n\nExecSafe { & $env:DOTNET_EXE build $BuildProjectFile /nodeReuse:false /p:UseSharedCompilation=false -nologo -clp:NoSummary --verbosity quiet }\nExecSafe { & $env:DOTNET_EXE run --project $BuildProjectFile --no-build -- $BuildArguments }\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 2.4453125,
          "content": "#!/usr/bin/env bash\n\nbash --version 2>&1 | head -n 1\n\nset -eo pipefail\nSCRIPT_DIR=$(cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd)\n\n###########################################################################\n# CONFIGURATION\n###########################################################################\n\nBUILD_PROJECT_FILE=\"$SCRIPT_DIR/.build/Build.csproj\"\nTEMP_DIRECTORY=\"$SCRIPT_DIR/.nuke/temp\"\n\nDOTNET_GLOBAL_FILE=\"$SCRIPT_DIR//global.json\"\nDOTNET_INSTALL_URL=\"https://dot.net/v1/dotnet-install.sh\"\nDOTNET_CHANNEL=\"Current\"\n\nexport DOTNET_CLI_TELEMETRY_OPTOUT=1\nexport DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1\nexport DOTNET_MULTILEVEL_LOOKUP=0\n\n###########################################################################\n# EXECUTION\n###########################################################################\n\nfunction FirstJsonValue {\n    perl -nle 'print $1 if m{\"'\"$1\"'\": \"([^\"]+)\",?}' <<< \"${@:2}\"\n}\n\n# If dotnet CLI is installed globally and it matches requested version, use for execution\nif [ -x \"$(command -v dotnet)\" ] && dotnet --version &>/dev/null; then\n    export DOTNET_EXE=\"$(command -v dotnet)\"\nelse\n    # Download install script\n    DOTNET_INSTALL_FILE=\"$TEMP_DIRECTORY/dotnet-install.sh\"\n    mkdir -p \"$TEMP_DIRECTORY\"\n    curl -Lsfo \"$DOTNET_INSTALL_FILE\" \"$DOTNET_INSTALL_URL\"\n    chmod +x \"$DOTNET_INSTALL_FILE\"\n\n    DOTNET_DIRECTORY=\"$TEMP_DIRECTORY/dotnet-unix\"\n\n    # install older frameworks for tests\n    \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --version \"8.0.404\" --no-path\n    \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --version \"9.0.100\" --no-path\n\n    # If global.json exists, load expected version\n    if [[ -f \"$DOTNET_GLOBAL_FILE\" ]]; then\n        DOTNET_VERSION=$(FirstJsonValue \"version\" \"$(cat \"$DOTNET_GLOBAL_FILE\")\")\n        if [[ \"$DOTNET_VERSION\" == \"\"  ]]; then\n            unset DOTNET_VERSION\n        fi\n    fi\n\n    # Install by channel or version\n    if [[ -z ${DOTNET_VERSION+x} ]]; then\n        \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --channel \"$DOTNET_CHANNEL\" --no-path\n    else\n        \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --version \"$DOTNET_VERSION\" --no-path\n    fi\n    export DOTNET_EXE=\"$DOTNET_DIRECTORY/dotnet\"\nfi\n\necho \"Microsoft (R) .NET Core SDK version $(\"$DOTNET_EXE\" --version)\"\n\n\"$DOTNET_EXE\" build \"$BUILD_PROJECT_FILE\" /nodeReuse:false /p:UseSharedCompilation=false -nologo -clp:NoSummary --verbosity quiet\n\"$DOTNET_EXE\" run --project \"$BUILD_PROJECT_FILE\" --no-build -- \"$@\"\n"
        },
        {
          "name": "cspell.json",
          "type": "blob",
          "size": 0.541015625,
          "content": "{\n  \"$schema\": \"https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\",\n  \"version\": \"0.2\",\n  \"language\": \"en\",\n  \"dictionaries\": [\"csharp\", \"custom\"],\n  \"dictionaryDefinitions\": [\n    {\n      \"name\": \"custom\",\n      \"path\": \"./dictionary.txt\"\n    }\n  ],\n  \"ignorePaths\": [\n    \"__snapshots__/\",\n    \"*.Designer.cs\",\n    \"*.DotSettings*\",\n    \"*.drawio\",\n    \"**/bin/\",\n    \"**/obj/\",\n    \"packages.lock.json\"\n  ],\n  \"ignoreRegExpList\": [\n    \"featuredVideoId:(.*)\", // video hash\n    \"videoId=\\\"(.*)\\\"\" // video hash\n  ]\n}\n"
        },
        {
          "name": "dictionary.txt",
          "type": "blob",
          "size": 1.5830078125,
          "content": "-Lsfo\nABCEGHJKLMNPRSTVWXYZ\nABCEGHJKLMNPRSTVXY\nagrc\nAlderaan\nAndi\naspnetcore\nAstromech\nautomagically\nautonumber\nbackplane\nbackpressure\nBadurina\nbananacakepop\nbbox\nBCPROCKS\nbfnrt\nblazor\nblazorwasm\nBrowsable\nBSON\nbuildtransitive\nbytearray\ncacheable\ncadastre\ncallsite\nCCPA\nchillicream\nCodespaces\ncolocated\ncombinators\ncontentfiles\nContoso\nCQRS\ndataloaders\ndebuggable\ndecompile\ndepersist\ndeprioritization\ndeprioritized\nDispatchable\ndrawio\nenisdenjo\nentityframework\nEPSG\nesque\nevolvability\nFanout\nfffzzz\nfieldset\nFIPS\nfoos\nfricking\nfrontends\nGEOGCS\nGiroux\nGraphiQL\ngraphqlconfig\ngraphqlrc\ngraphyne\ngreendonut\nHasura\nHCXXXX\nhhmm\nHHmmssfffffff\nhotchocolate\nIncludable\ninheritdocs\ninitializable\ninspectable\nKellner\nKydne\nLASTEXITCODE\nLeia\nLICEN*\nLinq\nMarek\nmatchesBrics\nMemberwise\nmercurius\nmergeable\nmeros\nMisordered\nmsbuild\nmsdata\nnamespacing\nNats\nncontains\nnendsWith\nNEOSW\nnetcoreapp\nnetstandard\nNEWHOPE\nNewtonsoft\nngte\nnintersects\nnlte\nNoda\nnologo\nNormen\nnoverlaps\nNpgsql\nnstartsWith\nNSwag\nntouches\nnwithin\noncall\noneof\nOpenIddict\nopensgid\nOPTOUT\nOWIN\npageable\nPartitioner\npipefail\nPKCE\npkey\nPostgraphile\npreconfigured\nPRIMEM\nPROJCS\nprotobuf\nqueryables\nquox\nquux\nRafi\nreencode\nrefetched\nrelayjs\nreprojected\nresheader\nresmimetype\nresx\nRetval\nRgba\nRhai\nRoslynator\nrunbooks\nSatisfiability\nSenn\nshoooe\nSkywalker\nsnapshooter\nsnupkg\nsortings\nSpecwise\nsqft\nsrid\nStaib\nStarships\nstarwars\nStoreless\nstrawberryshake\nstreamable\nStructs\nsubgraphs\nsublicensable\nsupergraph\nSwashbuckle\nSYSLIB\nTarkin\nTatooine\nTengler\nToub\nTOWGS\nTrimmable\nTzdb\nunlisten\nunpublish\nUnsubscriber\nUpsert\nupvote\nURQL\nvsix\nVXNlcjox\nwebsockets\nWilhuff\nWunder\nxunit\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.076171875,
          "content": "{\n  \"sdk\": {\n    \"version\": \"9.0.100\",\n    \"rollForward\": \"latestMinor\"\n  }\n}\n"
        },
        {
          "name": "init.cmd",
          "type": "blob",
          "size": 0.041015625,
          "content": "cd website\nyarn\ncd ..\n./build.cmd restore\n"
        },
        {
          "name": "init.sh",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/usr/bin/env bash\n\ncd website\nyarn\ncd ..\n./build.sh restore\n"
        },
        {
          "name": "nuget.config",
          "type": "blob",
          "size": 0.560546875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <config>\n    <add key=\"DefaultPushSource\" value=\"https://api.nuget.org/v3/index.json\" />\n  </config>\n  <packageRestore>\n    <add key=\"enabled\" value=\"True\" />\n    <add key=\"automatic\" value=\"True\" />\n  </packageRestore>\n  <activePackageSource>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\n  </activePackageSource>\n  <packageSources>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n  </packageSources>\n</configuration>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}