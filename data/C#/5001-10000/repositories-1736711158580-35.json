{
  "metadata": {
    "timestamp": 1736711158580,
    "page": 35,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JeffreySu/WeiXinMPSDK",
      "stars": 8512,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.4599609375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3505859375,
          "content": "# git ignore file\n/backup/\nNuget/\nbin/\nobj/\n_ReSharper.Caches/\n.vscode/\n*.[pdb]\n*.suo\n*.user\nWeiXinMPSDK.zip\nWeiXinMPSDK_v1.zip\nbak.zip\n*.pdb\n*.tmp\n\n# JetBrains Rider\n.idea/\n\n#/Tools/*\n*.DotSettings\n.vs\n.vscode\n.idea/\napplicationhost.config\npackages/\n*/**/App_Data/SenparcTraceLog/\n/src/Senparc.Weixin.QY/Senparc.Weixin.QY.Test/test.config\n/src/Senparc.Weixin.MP.BuildOutPut\n/src/Senparc.Weixin.MP.Sample/Senparc.Weixin.MP.Sample.Libraries.VC.VC.opendb\n/src/Senparc.Weixin.MP.Sample/Senparc.Weixin.MP.Sample.Libraries.VC.db\n/src/Senparc.Weixin.WxOpen/src/Senparc.Weixin.WxOpen.Tests/Config\n/src/Senparc.Weixin.Work/Senparc.Weixin.Work.Test/Config\n\n**/NeuChar/*\n**/PublishProfiles/FolderProfile.pubxml\n\n/src/ProjectFileManager\n/src/BuildOutPut\n**/TestResults\n/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3.Test/appsettings.Test.json\n/src/ProjectFileManager2\n/src/Senparc.Weixin.MP/Senparc.WeixinTests/appsettings.Test.json\n/tools/Senparc.Weixin.CLI/BuildOutPut/\n/Samples/All/net6-mvc/nuget.exe\n/src/Senparc.Weixin.MP/Senparc.Weixin.MP.Test/Config/test.config\n/Samples/TenPayV3/Senparc.Weixin.Sample.TenPayV3/.config/\n**/Properties/PublishProfiles\n**/App_Data/cert\n*.DS_Store\n/Samples/WxOpen/Senparc.Weixin.Sample.WxOpen/Properties/PublishProfiles/FolderProfile1.pubxml\n/src/Senparc.Weixin.Cache/Senparc.Weixin.Cache.CsRedis/Senparc - Backup.Weixin.Cache.CsRedis.net7.csproj\n/src/Senparc.WebSocket/src/Senparc.WebSocket/Senparc.WebSocket/Senparc - Backup.WebSocket.net7.csproj\n/src/Senparc.Weixin.Cache/Senparc.Weixin.Cache.Memcached/Senparc - Backup.Weixin.Cache.Memcached.net7.csproj\n/src/Senparc.Weixin.Cache/Senparc.Weixin.Cache.Redis/Senparc - Backup.Weixin.Cache.Redis.net7.csproj\n/src/Senparc.Weixin.MP/Senparc.Weixin.MP/Senparc - Backup.Weixin.MP.net7.csproj\n/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPay/Senparc - Backup.Weixin.TenPay.net7.csproj\n/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3/Senparc - Backup.Weixin.TenPayV3.net7.csproj\nThumbs.db\n**/App_Data/NeuChar\n**/App_Data/WeChat_OfficialAccount/\nnode_modules\nyarn.lock\n\n/Samples/Work/Senparc.Weixin.Sample.Work/App_Data/WeChat_Work\n/Samples/All/net8-mvc/Senparc.Weixin.Sample.Net8/appsettings.Development.json\n/Samples/MP/Senparc.Weixin.Sample.MP.Simple/appsettings.Development.json\n/src/Senparc.Weixin.MP/Senparc.Weixin.MP.Test/AdvancedAPIs/Media/*.jpg\n/src/Senparc.Weixin.MP/Senparc.Weixin.MP.Test/*.jpg\n/Samples/SamplePublish/\n"
        },
        {
          "name": "Contributors.md",
          "type": "blob",
          "size": 9.970703125,
          "content": "Senparc.Weixin SDK 项目贡献者\n==========\n\n> 本页面收集的贡献者来源：<br>\n> 1、为项目进行 [Pull Request](https://github.com/JeffreySu/WeiXinMPSDK#%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81) 并被 GitHub 系统收录为 [Contributor](https://github.com/JeffreySu/WeiXinMPSDK/graphs/contributors) 的用户；<br>\n> 2、为项目提出了实质性改进方案并被采纳的开发者（主要在 [issue](https://github.com/JeffreySu/WeiXinMPSDK/issues) 栏目中提交的）；<br>\n> 3、进行捐赠的支付宝账户。<br>\n> 如未向我们提供真实姓名，则采用 GitHub 名称、QQ 昵称或支付宝昵称<br>\n> 排名不分先后，统计或有疏漏，请联系我们。\n\n\n贡献者名单\n-----------\n> 更新时间：2024 年 4 月 12 日<br>\n> 排名不分先后 <br>\n>\t1\t.\t2881099 \t<br>\n>\t2\t.\t183328251\t<br>\n>\t3\t.\t397712418\t<br>\n>\t4\t.\t554393109\t<br>\n>\t5\t.\t772413635\t<br>\n>\t6\t.\t1015450578\t<br>\n>\t7\t.\t15989221023\t<br>\n>\t8\t.\t13433103756\t<br>\n>\t9\t.\t513835749\t<br>\n>\t10\t.\tlb0726\t    <br>\n>\t11\t.\t554393109\t<br>\n>\t12\t.\t77Harbor\t<br>\n>\t13\t.\t.\t        <br>\n>\t14\t.\ta673025\t    <br>\n>\t15\t.\tadaxiong\t<br>\n>\t16\t.\tajiebp1977\t<br>\n>\t17\t.\tAjuPrince\t<br>\n>\t18\t.\talexinea\t<br>\n>\t19\t.\tAndroidHarry<br>\n>\t20\t.\tAndysun\t    <br>\n>\t21\t.\tanhuisunfei\t<br>\n>\t22\t.\tAnnXu\t    <br>\n>\t23\t.\tAntain\t    <br>\n>\t24\t.\tanyangmaxin\t<br>\n>\t25\t.\tarcheraya\t<br>\n>\t26\t.\tAxisRay \t<br>\n>\t27\t.\tbangq\t    <br>\n>\t28\t.\tbemguin \t<br>\n>\t29\t.\tbingohanet\t<br>\n>\t30\t.\tBillzjh\t    <br>\n>\t31\t.\tbrookyu2\t<br>\n>\t32\t.\tbt308\t    <br>\n>\t33\t.\tBuzy\t    <br>\n>\t34\t.\tbuyixiaohan\t<br>\n>\t35\t.\tbxjg1987\t<br>\n>\t36\t.\tCandiceDong\t<br>\n>\t37\t.\tcapqueen\t<br>\n>\t38\t.\tccccccmd\t<br>\n>\t39\t.\tCdLian\t    <br>\n>\t40\t.\tchangshuzf\t<br>\n>\t41\t.\tchaoyebugao\t<br>\n>\t42\t.\tchenSean1\t<br>\n>\t43\t.\tchinacoolboyzz\t<br>\n>\t44\t.\tChiakiYu\t<br>\n>\t45\t.\tcqinwn\t    <br>\n>\t46\t.\tc q we b wang\t<br>\n>\t47\t.\tcrashsol\t<br>\n>\t48\t.\tchinanhb\t<br>\n>\t49\t.\tciel\t    <br>\n>\t50\t.\tcnryb\t    <br>\n>\t51\t.\tcoderdp\t    <br>\n>\t52\t.\tcoffee0818\t<br>\n>\t53\t.\tCooBeeDior\t<br>\n>\t54\t.\tcoolboy0821\t<br>\n>\t55\t.\tCoolincy\t<br>\n>\t56\t.\tCooperLiu\t<br>\n>\t57\t.\tcuibty  \t<br>\n>\t58\t.\tcycbluesky\t<br>\n>\t59\t.\tdavidmaster\t<br>\n>\t60\t.\tdeerchao\t<br>\n>\t61\t.\tdongfo\t    <br>\n>\t62\t.\tdong900512\t<br>\n>\t63\t.\tdusdong\t    <br>\n>\t64\t.\tdupeng0811\t<br>\n>\t65\t.\tdyb628\t    <br>\n>\t66\t.\tDysheng\t    <br>\n>\t67\t.\te4ky\t    <br>\n>\t68\t.\tericz9\t    <br>\n>\t69\t.\tF2EVarMan\t<br>\n>\t70\t.\tfairangel\t<br>\n>\t71\t.\tfanheshe\t<br>\n>\t72\t.\tfanyinghao\t<br>\n>\t73\t.\tfdstar\t    <br>\n>\t74\t.\tfengrui358\t<br>\n>\t75\t.\tfengshi19888<br>\n>\t76\t.\tfghshunzi\t<br>\n>\t77\t.\tfjl-net\t    <br>\n>\t78\t.\tfletu\t    <br>\n>\t79\t.\tfuchangqing123\t<br>\n>\t80\t.\tForever\t    <br>\n>\t81\t.\tFrancisFYK\t<br>\n>\t82\t.\tgainorloss\t<br>\n>\t83\t.\tgendou\t    <br>\n>\t84\t.\tGitoffice\t<br>\n>\t85\t.\tGK\t        <br>\n>\t86\t.\tGokeiyou\t<br>\n>\t87\t.\tguozhou19\t<br>\n>\t88\t.\tgwhzh21  \t<br>\n>\t89\t.\tgzf790808802<br>\n>\t90\t.\tgzlboy\t    <br>\n>\t91\t.\tHADB\t    <br>\n>\t92\t.\tHandsomeBoy01<br>\n>\t93\t.\theavenwing\t<br>\n>\t94\t.\thebiziyu\t<br>\n>\t95\t.\tHelloDBA\t<br>\n>\t96\t.\thello2008zj\t<br>\n>\t97\t.\thentaicreep\t<br>\n>\t98\t.\thesi815 \t<br>\n>\t99\t.\thetaoos\t    <br>\n>\t100\t.\thouta-higuchi<br>\n>\t101\t.\tHieasywork\t<br>\n>\t102\t.\thilite2000\t<br>\n>\t103\t.\thiseab\t    <br>\n>\t104\t.\thnsongbiao\t<br>\n>\t105\t.\tHsinky\t    <br>\n>\t106\t.\thybiz\t    <br>\n>\t107\t.\thyl8218\t    <br>\n>\t108\t.\tImQdf\t    <br>\n>\t109\t.\tiwenli210\t<br>\n>\t110\t.\tiXinwei\t    <br>\n>\t111\t.\tInuyasha-cxk<br>\n>\t112\t.\tJasonZhou\t<br>\n>\t113\t.\tJadynWong\t<br>\n>\t114\t.\tjanywhere\t<br>\n>\t115\t.\tJeffreySu\t<br>\n>\t116\t.\tjefth\t    <br>\n>\t117\t.\tjhzou1\t    <br>\n>\t118\t.\tJianCheng\t<br>\n>\t119\t.\tJianChengSun<br>\n>\t120\t.\tjianliulin\t<br>\n>\t121\t.\tjiuzhou2019\t<br>\n>\t122\t.\tJie\t        <br>\n>\t123\t.\tjiehanlin\t<br>\n>\t124\t.\tJiangJingxuan<br>\n>\t125\t.\tjoelz\t    <br>\n>\t126\t.\tjoesjiang\t<br>\n>\t127\t.\tJohn0King\t<br>\n>\t128\t.\tJohnnyWongC\t<br>\n>\t129\t.\tjsionr\t    <br>\n>\t130\t.\tJust run\t<br>\n>\t131\t.\tKagamine\t<br>\n>\t132\t.\tKangLeo\t    <br>\n>\t133\t.\tKchanlee\t<br>\n>\t134\t.\tkevincwq\t<br>\n>\t135\t.\tKevinDai\t<br>\n>\t136\t.\tkevinleptin\t<br>\n>\t137\t.\tKevinPan\t<br>\n>\t138\t.\tKevinQiangK\t<br>\n>\t139\t.\tkistliu\t    <br>\n>\t140\t.\tkuangyanit\t<br>\n>\t141\t.\tlanybass\t<br>\n>\t142\t.\tlaoyangcoder<br>\n>\t143\t.\tlb0726\t    <br>\n>\t144\t.\tleeseett\t<br>\n>\t145\t.\tLeon\t    <br>\n>\t146\t.\tLGinC\t    <br>\n>\t147\t.\tlhg0302 \t<br>\n>\t148\t.\tlhh.net \t<br>\n>\t149\t.\tLiJiangShan（mc7246）<br>\n>\t150\t.\tlingkejia\t<br>\n>\t151\t.\tlisensoft\t<br>\n>\t152\t.\tlishewen（算神）<br>\n>\t153\t.\tliu0621\t    <br>\n>\t154\t.\tliubiqu\t    <br>\n>\t155\t.\tliurongwei\t<br>\n>\t156\t.\tlikui0623\t<br>\n>\t157\t.\tLoongle \t<br>\n>\t158\t.\tLoveHikari\t<br>\n>\t159\t.\tlxings  \t<br>\n>\t160\t.\tluoyunchong\t<br>\n>\t161\t.\tluoxy123\t<br>\n>\t162\t.\tLuohuaRain\t<br>\n>\t163\t.\tLiu-Ryan\t<br>\n>\t164\t.\tlxyruanjian\t<br>\n>\t165\t.\tly303550688\t<br>\n>\t166\t.\tmaikebing\t<br>\n>\t167\t.\tMc7246  \t<br>\n>\t168\t.\tMessilimeng\t<br>\n>\t169\t.\tmichel4liu\t<br>\n>\t170\t.\tmiloc   \t<br>\n>\t171\t.\tMine    \t<br>\n>\t172\t.\tmojinxun\t<br>\n>\t173\t.\tmrouyuanyi\t<br>\n>\t174\t.\tmrrightwangl<br>\n>\t175\t.\tmpnet\t    <br>\n>\t176\t.\tMysticBoy\t<br>\n>\t177\t.\tmzjimzji\t<br>\n>\t178\t.\tName\t    <br>\n>\t179\t.\tNiltor\t    <br>\n>\t180\t.\tniuniu12345677777\t<br>\n>\t181\t.\toTcom\t    <br>\n>\t182\t.\toppoic\t    <br>\n>\t183\t.\tOrchesAdam\t<br>\n>\t184\t.\tOswald\t    <br>\n>\t185\t.\toyq413\t    <br>\n>\t186\t.\tpandyer \t<br>\n>\t187\t.\tp041911070\t<br>\n>\t188\t.\tpbzyy\t    <br>\n>\t189\t.\tpekrr1e \t<br>\n>\t190\t.\tpengweiqhca\t<br>\n>\t191\t.\tpengxinzhe\t<br>\n>\t192\t.\tpercyboy\t<br>\n>\t193\t.\tPhoenixpang\t<br>\n>\t194\t.\tpipihu\t    <br>\n>\t195\t.\tPrivateClare<br>\n>\t196\t.\tqwork\t    <br>\n>\t197\t.\tqi_deqian\t<br>\n>\t198\t.\tqinzhenlong\t<br>\n>\t199\t.\tqzyuanmu\t<br>\n>\t200\t.\tredshana\t<br>\n>\t201\t.\tringls\t    <br>\n>\t202\t.\trongjieaaa\t<br>\n>\t203\t.\tritazh  \t<br>\n>\t204\t.\tRwing   \t<br>\n>\t205\t.\tsdf333  \t<br>\n>\t206\t.\tslwangzi\t<br>\n>\t207\t.\tseeking \t<br>\n>\t208\t.\tsharp-summit<br>\n>\t209\t.\tsherlockleo\t<br>\n>\t210\t.\tSingle  \t<br>\n>\t211\t.\tsipo1209\t<br>\n>\t212\t.\tsnowfoxzx\t<br>\n>\t213\t.\tspadark\t    <br>\n>\t214\t.\tstarpunk\t<br>\n>\t215\t.\tstonychen\t<br>\n>\t216\t.\tsuifengshiqu<br>\n>\t217\t.\tSweetli1415926<br>\n>\t218\t.\tsundayisblue<br>\n>\t219\t.\tszw2003\t    <br>\n>\t220\t.\ttail00zhou\t<br>\n>\t221\t.\tTalkTruly\t<br>\n>\t222\t.\ttanglixu\t<br>\n>\t223\t.\ttangyangming<br>\n>\t224\t.\ttaobaohi\t<br>\n>\t225\t.\ttausi0661\t<br>\n>\t226\t.\ttongbenchuan<br>\n>\t227\t.\ttony26050369<br>\n>\t228\t.\tthisXYH\t<br>\n>\t229\t.\tThinkinLiu\t<br>\n>\t230\t.\ttickwudi\t<br>\n>\t231\t.\ttkoncat \t<br>\n>\t232\t.\tToFuKing\t<br>\n>\t233\t.\tTomLiu-GitHub<br>\n>\t234\t.\ttoyoung \t<br>\n>\t235\t.\tturbodu \t<br>\n>\t236\t.\tTYSZCC  \t<br>\n>\t237\t.\tulyanvosk\t<br>\n>\t238\t.\tuliian  \t<br>\n>\t239\t.\tulswww  \t<br>\n>\t240\t.\tVarorbc \t<br>\n>\t241\t.\tvejuhust\t<br>\n>\t242\t.\tvsantw  \t<br>\n>\t243\t.\tvgiagiigi\t<br>\n>\t244\t.\tWangDrama\t<br>\n>\t245\t.\twarman007\t<br>\n>\t246\t.\twbingchao\t<br>\n>\t247\t.\twtujvk  \t<br>\n>\t248\t.\twilltoto\t<br>\n>\t249\t.\twlclass \t<br>\n>\t250\t.\twlsoftware\t<br>\n>\t251\t.\twuball  \t<br>\n>\t252\t.\twushancool\t<br>\n>\t253\t.\t@withsalt\t<br>\n>\t254\t.\tXbCore\t    <br>\n>\t255\t.\txbotter \t<br>\n>\t256\t.\txcaptain\t<br>\n>\t257\t.\txjfxkook\t<br>\n>\t258\t.\txland   \t<br>\n>\t259\t.\tXxvolvo \t<br>\n>\t260\t.\tXiaoJia12138<br>\n>\t261\t.\txuchangsoufang<br>\n>\t262\t.\txuefuruanjian<br>\n>\t263\t.\txuSs1994\t<br>\n>\t264\t.\txy109\t    <br>\n>\t265\t.\ty1024866464\t<br>\n>\t266\t.\tYaChengMu\t<br>\n>\t267\t.\tyang524433\t<br>\n>\t268\t.\tyangpengfei\t<br>\n>\t269\t.\tyaols   \t<br>\n>\t270\t.\tYinqingwen\t<br>\n>\t271\t.\tyongjinc\t<br>\n>\t272\t.\tYouraiseme\t<br>\n>\t273\t.\tys9168274\t<br>\n>\t274\t.\tytpos   \t<br>\n>\t275\t.\tyuchen1030\t<br>\n>\t276\t.\tyueliuhun\t<br>\n>\t277\t.\tYuiane  \t<br>\n>\t278\t.\tyuxiaochou\t<br>\n>\t279\t.\tyyhui00 \t<br>\n>\t280\t.\tz872126034\t<br>\n>\t281\t.\tZachShine\t<br>\n>\t282\t.\tzeje    \t<br>\n>\t283\t.\tzgmqdl  \t<br>\n>\t284\t.\tzhaochenghang<br>\n>\t285\t.\tzhao365845726<br>\n>\t286\t.\tzhcnlei \t<br>\n>\t287\t.\tZhenZhang\t<br>\n>\t288\t.\tzhongyi112134\t<br>\n>\t289\t.\tzhou0818\t<br>\n>\t290\t.\tzhoujs712\t<br>\n>\t291\t.\tzhouxin93\t<br>\n>\t292\t.\tziyunhx\t    <br>\n>\t293\t.\tzjfsdnu \t<br>\n>\t294\t.\tzmjack  \t<br>\n>\t295\t.\tzxz19   \t<br>\n>\t296\t.\tzxz524  \t<br>\n>\t297\t.\t阿举    \t<br>\n>\t298\t.\t阿力    \t<br>\n>\t299\t.\t巴斯    \t<br>\n>\t300\t.\t摆渡人  \t<br>\n>\t301\t.\t包延军  \t<br>\n>\t302\t.\t查无此人\t<br>\n>\t303\t.\t错觉    \t<br>\n>\t304\t.\t方栋    \t<br>\n>\t305\t.\t芳平        <br>\n>\t306\t.\t飞机大猪 \t<br>\n>\t307\t.\t飞鱼    \t<br>\n>\t308\t.\t风格    \t<br>\n>\t309\t.\t峰      \t<br>\n>\t310\t.\t扶强     \t<br>\n>\t311\t.\t傅深文   \t<br>\n>\t312\t.\t宫志伟  \t<br>\n>\t313\t.\t够了没有\t<br>\n>\t314\t.\t鼓噪的街舞\t<br>\n>\t315\t.\t国兴    \t<br>\n>\t316\t.\t寒冷的北极\t<br>\n>\t317\t.\t贺斌    \t<br>\n>\t318\t.\t侯**    \t<br>\n>\t319\t.\t胡卫星  \t<br>\n>\t320\t.\t魂牵悲梦    <br>\n>\t321\t.\t江南\t    <br>\n>\t322\t.\t孔大强\t    <br>\n>\t323\t.\t孔令强  \t<br>\n>\t324\t.\t拉风的汉子  <br>\n>\t325\t.\t蓝微.石 \t<br>\n>\t326\t.\t老蒋    \t<br>\n>\t327\t.\t李蒙    \t<br>\n>\t328\t.\t理想天空    <br>\n>\t329\t.\t刘建华  \t<br>\n>\t330\t.\t孟婆来杯果汁<br>\n>\t331\t.\t明刚    \t<br>\n>\t332\t.\t树超    \t<br>\n>\t333\t.\t素还真   \t<br>\n>\t334\t.\t天涯海角    <br>\n>\t335\t.\t听雨一生    <br>\n>\t336\t.\t魏战朋  \t<br>\n>\t337\t.\t文兄    \t<br>\n>\t338\t.\t吴宏伟  \t<br>\n>\t339\t.\t吴晓阳  \t<br>\n>\t340\t.\t伍超    \t<br>\n>\t341\t.\t向东辉  \t<br>\n>\t342\t.\t向虎    \t<br>\n>\t343\t.\t潇洒哥  \t<br>\n>\t344\t.\t小木木木    <br>\n>\t345\t.\t星星    \t<br>\n>\t346\t.\t徐朗    \t<br>\n>\t347\t.\t徐林     \t<br>\n>\t348\t.\t徐泽远  \t<br>\n>\t349\t.\t薛彬    \t<br>\n>\t350\t.\t杨恒连  \t<br>\n>\t351\t.\t杨月明  \t<br>\n>\t352\t.\t垚祎    \t<br>\n>\t353\t.\t一生有你    <br>\n>\t354\t.\t异\t        <br>\n>\t355\t.\t櫻花鉤吻鮭  <br>\n>\t356\t.\t远朝    \t<br>\n>\t357\t.\t在长沙  \t<br>\n>\t358\t.\t张举    \t<br>\n>\t359\t.\t张晓恩  \t<br>\n>\t360\t.\t张晓林  \t<br>\n>\t361\t.\t振峰    \t<br>\n>\t362\t.\t郑贝贝  \t<br>\n>\t363\t.\t忠燕    \t<br>\n>\t364\t.\t周园    \t<br>\n>\t365\t.\t李洋leon    <br>\n>\t366\t.\t卖白菜的    <br>\n>\t367\t.\tkb虎小子    <br>\n>\t368\t.\t上善若水    <br>\n>\t369\t.\t卖卤鸽的    <br>\n>\t370\t.\tJaneConan    <br>\n>\t371\t.\tGuili95    <br>\n>\t372\t.\tIcedMango    <br>\n>\t373\t.\tbocblca    <br>\n>\t374\t.\tNiuHongBo    <br>\n>\t375\t.\tharry7988    <br>\n>\t376\t.\tdukecheng    <br>\n>\t377\t.\tTonWin618    <br>\n>\t378\t.\tqideqian    <br>\n>\t379\t.\txiaopotian1990    <br>\n>\t380\t.\tfunvh    <br>\n>\t381\t.\tzhu-xb    <br>\n>\t382\t.\tMrSummerFang    <br>\n>\t383\t.\tbbkingz    <br>\n>\t384\t.\tLonLin8    <br>\n>\t385\t.\tOne0627   <br>\n>\t386\t.\tssjun    <br>\n>\t387\t.\tjacoat    <br>\n>\t388\t.\ttiansfather    <br>\n>\t389\t.\tbonnlee2016    <br>\n>\t390\t.\twahahage    <br>\n>\t391\t.\tbl93014    <br>\n>\t392\t.\tprogrammer-zheng    <br>\n>\t393\t.\tWanderingGrass    <br>\n>\t394\t.\tDengchenlu    <br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
          "name": "Samples with AI",
          "type": "tree",
          "content": null
        },
        {
          "name": "Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.7861328125,
          "content": "version: 1.0.0.{build}\nimage:\n  - Visual Studio 2017\npull_requests:\n  do_not_increment_build_number: true\n#branches:\n#  only:\n#    - master\n#    - Developer\nskip_branch_with_pr: true\nconfiguration: Release\nbefore_build:\n  - cmd: dotnet restore Samples\\Senparc.Weixin.MP.Sample.vs2017\\Senparc.Weixin.MP.Sample.vs2017.sln\nbuild:\n  verbosity: minimal\n  parallel: true\nbuild_script:\n  - cmd: dotnet build -c Release Samples\\Senparc.Weixin.MP.Sample.vs2017\\Senparc.Weixin.MP.Sample.vs2017.sln\ntest_script:\n  - cmd: dotnet test -c Release Samples\\Senparc.Weixin.MP.Sample.vs2017\\Senparc.Weixin.MP.Sample.vs2017.sln\nartifacts:\n  - path: '**\\*.nupkg'\n    name: nupkg\n  - path: '**\\*.snupkg'\n    name: snupkg\nnuget:\n  disable_publish_on_pr: true\n#deploy:\n#  provider: NuGet\n#  api_key:\n#    secure: <Your secret>\n\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 1.94921875,
          "content": "# ASP.NET Core (.NET Framework)\n# Build and test ASP.NET Core projects targeting the full .NET Framework.\n# Add steps that publish symbols, save build artifacts, and more:\n# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core\n\ntrigger:\n- master\n\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  solution: '**/tools/Senparc.Weixin.CLI/*.sln'\n  buildPlatform: 'Any CPU'\n  buildConfiguration: 'Release'\n\nsteps:\n- task: NuGetToolInstaller@1\n\n- task: UseDotNet@2\n  displayName: 'Use .NET SDK 8'\n  inputs:\n    version: '8.0.x'\n    packageType: 'sdk'\n\n# - task: NuGetCommand@2\n#   inputs:\n#     restoreSolution: '$(solution)'\n\n\n# - task: VSBuild@1\n#   inputs:\n#     solution: '$(solution)'\n#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation=\"$(build.artifactStagingDirectory)\\WebApp.zip\" /p:DeployIisAppPath=\"Default Web Site\"'\n#     platform: '$(buildPlatform)'\n#     configuration: '$(buildConfiguration)'\n\n\n- task: NuGetCommand@2\n  inputs:\n    command: 'restore'\n    restoreSolution: '$(solution)'\n    feedsToUse: 'config'\n    externalFeedCredentials: 'Nuget Official （V2）'\n   \n- task: DotNetCoreCLI@2\n  displayName: Build\n  inputs:\n    command: build\n    projects: '$(solution)'\n    arguments: '--configuration Release'\n\n- task: NuGetCommand@2\n  displayName: Senparc.Weixin.CLI\n  inputs:\n    command: push\n    packagesToPush: '**/Weixin.*.nupkg'\n    nuGetFeedType: external\n    publishFeedCredentials: 'Nuget Official （V2）'\n  continueOnError: true\n  condition: succeededOrFailed()\n\n\n- task: NuGetCommand@2\n  displayName: Senparc.WeChat.CLI\n  inputs:\n    command: push\n    packagesToPush: '**/WeChat.*.nupkg'\n    nuGetFeedType: external\n    publishFeedCredentials: 'Nuget Official （V2）'\n  continueOnError: true\n  condition: succeededOrFailed()\n\n\n# - task: VSTest@2\n#   inputs:\n#     platform: '$(buildPlatform)'\n#     configuration: '$(buildConfiguration)'\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.md",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "readme.en.md",
          "type": "blob",
          "size": 48.1357421875,
          "content": "<img src=\"https://sdk.weixin.senparc.com/images/senparc-logo-500.jpg\" />\n\nSenparc.Weixin —— WeChat .NET SDK \n=================\n\n[![Build status](https://mysenparc.visualstudio.com/Senparc%20SDK/_apis/build/status/Weixin%20SDK/Senparc.Weixin%20Dev-%E5%86%85%E9%83%A8-%E8%87%AA%E5%8A%A8-.Net6)](https://mysenparc.visualstudio.com/Senparc%20SDK/_build/latest?definitionId=36)\n[![NuGet](https://img.shields.io/nuget/dt/Senparc.Weixin.svg)](https://www.nuget.org/packages/Senparc.Weixin)\n[![GitHub commit activity the past week, 4 weeks, year](https://img.shields.io/github/commit-activity/4w/JeffreySu/WeiXinMPSDK.svg)](https://github.com/JeffreySu/WeiXinMPSDK/commits/master)\n![Static Badge](https://img.shields.io/badge/.NET-8.0-blue)\n[![Senparc.Weixin.All](https://img.shields.io/nuget/vpre/Senparc.Weixin.All?label=Senparc.Weixin.All)](https://www.nuget.org/packages/Senparc.Weixin.All/)\n[![license](https://img.shields.io/github/license/JeffreySu/WeiXinMPSDK.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\n[![Senparc.Weixin](https://img.shields.io/nuget/vpre/Senparc.Weixin?label=Senparc.Weixin)](https://www.nuget.org/packages/Senparc.Weixin/)\n[![Senparc.Weixin.MP](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP?label=Senparc.Weixin.MP)](https://www.nuget.org/packages/Senparc.Weixin.MP/)\n[![Senparc.Weixin.MP.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP.Middleware?label=Senparc.Weixin.MP.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.MP.Middleware/)\n[![Senparc.Weixin.MP.Mvc](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP.Mvc?label=Senparc.Weixin.MP.Mvc)](https://www.nuget.org/packages/Senparc.Weixin.MP.Mvc/)\n[![Senparc.Weixin.WxOpen](https://img.shields.io/nuget/vpre/Senparc.Weixin.WxOpen?label=Senparc.Weixin.WxOpen)](https://www.nuget.org/packages/Senparc.Weixin.WxOpen/)\n[![Senparc.Weixin.WxOpen.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.WxOpen.Middleware?label=Senparc.Weixin.WxOpen.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.WxOpen.Middleware/)\n[![Senparc.Weixin.Work](https://img.shields.io/nuget/vpre/Senparc.Weixin.Work?label=Senparc.Weixin.Work)](https://www.nuget.org/packages/Senparc.Weixin.Work/)\n[![Senparc.Weixin.Work.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.Work.Middleware?label=Senparc.Weixin.Work.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.Work.Middleware/)\n[![Senparc.Weixin.TenPay](https://img.shields.io/nuget/vpre/Senparc.Weixin.TenPay?label=Senparc.Weixin.TenPay)](https://www.nuget.org/packages/Senparc.Weixin.TenPay/)\n[![Senparc.Weixin.TenPayV3](https://img.shields.io/nuget/vpre/Senparc.Weixin.TenPayV3?label=Senparc.Weixin.TenPayV3)](https://www.nuget.org/packages/Senparc.Weixin.TenPayV3/)\n[![Senparc.Weixin.Open](https://img.shields.io/nuget/vpre/Senparc.Weixin.Open?label=Senparc.Weixin.Open)](https://www.nuget.org/packages/Senparc.Weixin.Open/)\n[![Senparc.Weixin.AspNet](https://img.shields.io/nuget/vpre/Senparc.Weixin.AspNet?label=Senparc.Weixin.AspNet)](https://www.nuget.org/packages/Senparc.Weixin.AspNet/)\n[![Senparc.Weixin.Cache.Redis](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.Redis?label=Senparc.Weixin.Cache.Redis)](https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis/)\n[![Senparc.Weixin.Cache.CsRedis](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.CsRedis?label=Senparc.Weixin.Cache.CsRedis)](https://www.nuget.org/packages/Senparc.Weixin.Cache.CsRedis/)\n[![Senparc.Weixin.Cache.Memcached](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.Memcached?label=Senparc.Weixin.Cache.Memcached)](https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached/)\n[![Senparc.WebSocket](https://img.shields.io/nuget/vpre/Senparc.WebSocket?label=Senparc.WebSocket)](https://www.nuget.org/packages/Senparc.WebSocket/)\n\n\n\n\n[[中文]](readme.md)\n\nWith Senparc.Weixin, you can easily and quickly develop applications for the Wechat platform, including Wechat Official Accounts, Mini Programs, Mini Games, Enterprise Accounts, Open Platforms, Wechat Pay, JS-SDK, Wechat Hardware/Bluetooth, and more. The demo of this project is also suitable for beginners to learn .NET programming.  \n  \nCurrently, Senparc.Weixin supports almost all Wechat platform modules and interfaces, and supports multiple frameworks such as .NET 3.5 / 4.0 / 4.5 / .NET Standard 2.x / .NET Core 2.x / .NET Core 3.x / .NET 6.0 / .NET 7.0 / .NET 8.0. It is compatible with all environments including MVC, Razor, WebApi, Console (command line), desktop applications (.exe), Blazor, MAUI, and background services, and is completely decoupled from external frameworks.  \n  \nSenparc.Weixin SDK is currently the most widely used Wechat .NET SDK and one of the most popular .NET open source projects in China.  \n  \nSince its inception in 2013, we have been continuously updating the project and sharing the complete source code and design ideas without reservation, hoping that more people can benefit from it, understand and spread the spirit of open source, and help the open source cause in China! We are grateful to all the friends who have helped us along the way!  \n  \nIf you like this project and want us to continue improving it, please give us a ★Star :)  \n  \n## 🔔 Announcement  \n\n> 🔥 AI chatbot wechat integration Sample is online! [click here to view](/Samples%20with%20AI)<br>\n> 📺 <img src=\"https://github.com/JeffreySu/WeiXinMPSDK/assets/2281927/743f3019-c96b-4b61-acdb-d1834947d5d0\" width=\"400\" /><br />\nAt the 2024 Microsoft MVP Global Summit, I had the privilege of interviewing Scott Hanselman and discussed a range of topics related to AI. We will continue our conversation on April 13, 2024, during the \"Senparc 3.14 Technology Open Day\" event, where we will delve deeper into the impact of AI and Agents on the future of the software industry and open-source software. Everyone is welcome to follow along! [Watch the video](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%BE%AE%E8%BD%AF-MVP-%E5%85%A8%E7%90%83%E5%B3%B0%E4%BC%9A%E9%87%87%E8%AE%BF-Scott-Hanselman)<br/>\n> ⚡ Sample now supports .NET 8.0 (backward compatible), [click here to view](/Samples/All/net8-mvc)!<br/>  \n> 🔒 [Wechat Pay V3 module (V1.0)](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3) is now online! [Nuget](https://www.nuget.org/packages/Senparc.Weixin.TenPayV3)<br>  \n> 🎠 Fully support automatic segmentation and sending of long text messages, more: [《Auto Reply Long Text Messages to Adapt to AIGC Applications》](https://www.cnblogs.com/szw/p/weixin-large-text-response.html)<br/>  \n  \n<!-- _1. In order to isolate the demo from the source code and make it easier for everyone to find the demo, the Senparc.Weixin.MP.Sample and other folders have been moved to the [/Samples/](/Samples/) folder._<br>  \n_2. The `Senparc.Weixin.Plugins` plan has been launched, details [click here](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/Plugins)._ -->  \n  \n  \n## 🌟 Start: Separate documentation for each module + Sample code examples  \n  \nModule | Link  \n----|----  \nOfficial Account | https://sdk.weixin.senparc.com/Docs/MP/  \nMini Program | https://sdk.weixin.senparc.com/Docs/WxOpen/  \nEnterprise Wechat | https://sdk.weixin.senparc.com/Docs/Work/  \nWechat Pay V3 (recommended) | https://sdk.weixin.senparc.com/Docs/TenPayV3/  \nWechat Pay V2 (not recommended) | https://sdk.weixin.senparc.com/Docs/TenPayV2/  \n  \n> Note:<br>  \n> 1. The above module examples include both documentation and runnable code templates (just need to configure Wechat parameters without modifying any code).  \n> 2. The configuration, registration, and interface calling methods in the examples are consistent. Once you learn how to develop one module, you can apply the same knowledge to other modules. The Hello World example below uses Official Account as an example, but it can be extended to other modules as well.  \n> 3. More complete development documentation is provided in the [/docs](/docs/) directory for advanced development, [click here to view](/docs/).  \n  \n## 🚀 Hello World: Start your Wechat development journey with 3 lines of code!  \n  \n> Note:<br>  \n> 1. The following source code is located in the [`/Samples/MP/`](/Samples/MP/) folder, using Wechat Official Account as an example. Once you learn how to develop for Official Account, you can apply the same knowledge to other modules (Mini Program, Enterprise Wechat, Wechat Pay, etc.).  <br>\n> 2. To view other module or integration examples, you can check the independent samples in the [`/Samples/`](/Samples/) folder or the integration samples in the [`/Samples/All/`](/Samples/All/) folder (for advanced users).  <br>\n> 3. For different WeChat platforms, the Senparc.Weixin SDK has decoupled and independently released each module. To simplify referencing, you can directly reference [Senparc.Weixin.All](https://www.nuget.org/packages/Senparc.Weixin.All), which will automatically reference all modules.\n  \n  \n### Startup code (just 2 lines of code):  \n1. <strong>Add configuration above `builder.Build()` in Program.cs:</strong>  \n``` C#  \nbuilder.Services.AddSenparcWeixinServices(builder.Configuration);  \n```  \n> Corresponds to ConfigureServices() method in Startup.cs.  \n  \n2. <strong>Enable configuration below `builder.Build()` in Program.cs:</strong>  \n``` C#  \nvar registerService = app.UseSenparcWeixin(app.Environment, null, null, register => { },  \n    (register, weixinSetting) =>  \n{  \n    // Register Official Account information (can be executed multiple times to register multiple Official Accounts)  \n    register.RegisterMpAccount(weixinSetting, \"Senparc Network Assistant Official Account\");  \n});  \n```  \n> Corresponds to Configure() method in Startup.cs.  \n  \n### Call advanced interfaces (just 1 line of code):  \nYou can call interfaces (using Customer Service interface as an example) at any position in the program:  \n``` C#  \nawait CustomApi.SendTextAsync(\"AppId\", \"OpenId\", \"Hello World!\");  \n```  \n> Tips:<br>  \n> 1. Senparc.Weixin SDK automatically manages the AccessToken throughout its life cycle, so during development, you only need to provide the AppId without worrying about AccessToken expiration, etc.  \n> 2. Registration information such as AppId can be automatically obtained from `Senparc.Weixin.Config.SenparcWeixinSetting`, and the relevant parameters are configured in `appsettings.json`.  \n> 3. The above method also supports synchronous calls: Senparc.Weixin.MP.AdvancedAPIs.CustomApi.SendText().  \n> 4. All interface namespaces are defined according to the official API path rules, and the parameter naming is kept as consistent as possible with the documentation (especially the return parameters), making it easier for developers to quickly locate and test, and reduce the likelihood of bugs.  \n  \nWith the above code, you can call interfaces for all Wechat modules! Continue reading for more skills.  \n  \n### How to use the messaging capability of Official Accounts?  \nOfficial Accounts provide a messaging window by default, which can send different types of messages and interact with programs using text, images, voice, etc.  \n  \nThe following example also applies to the messaging of Enterprise Wechat and Mini Program Customer Service, just two steps!  \n  \n#### Step 1: Create a custom MessageHandler to control message processing logic:  \n  \n<details>  \n<summary>CustomMessageHandler.cs</summary>  \n  \n  \n``` C#  \nusing Senparc.NeuChar.Entities;  \nusing Senparc.Weixin.MP.Entities;  \nusing Senparc.Weixin.MP.Entities.Request;  \nusing Senparc.Weixin.MP.MessageContexts;  \nusing Senparc.Weixin.MP.MessageHandlers;  \n  \nnamespace Senparc.Weixin.Sample.MP  \n{  \n    /// <summary>  \n    /// Custom MessageHandler  \n    /// Inherits from MessageHandler and overrides the corresponding request handling methods  \n    /// </summary>  \n    public partial class CustomMessageHandler : MessageHandler<DefaultMpMessageContext>  \n    {  \n        public CustomMessageHandler(Stream inputStream, PostModel postModel, int maxRecordCount = 0,  \n            bool onlyAllowEncryptMessage = false, IServiceProvider serviceProvider = null)  \n            : base(inputStream, postModel, maxRecordCount, onlyAllowEncryptMessage, null, serviceProvider)  \n        {  \n        }  \n  \n        /// <summary>  \n        /// Default message for all unhandled types  \n        /// </summary>  \n        /// <returns></returns>  \n        public override IResponseMessageBase DefaultResponseMessage(IRequestMessageBase requestMessage)  \n        {  \n            //ResponseMessageText can also be News or other types  \n            var responseMessage = this.CreateResponseMessage<ResponseMessageText>();  \n            responseMessage.Content = $\"You sent a message, but the program did not specify a processing procedure\";  \n            return responseMessage;  \n        }  \n  \n        public override Task<IResponseMessageBase> OnImageRequestAsync(RequestMessageImage requestMessage)  \n        {  \n            //Handle image requests...  \n        }  \n  \n        public override Task<IResponseMessageBase> OnLocationRequestAsync(RequestMessageLocation requestMessage)  \n        {  \n            //Handle location requests...  \n        }  \n    }  \n}  \n```  \n</details>  \n  \n  \n#### Step 2: Request the CustomMessageHandler:  \n  \nWe provide two ways to request the CustomMessageHandler: `Middleware` (recommended) and `Controller (or WebApi)`. You can choose either one. Taking Middleware as an example, after enabling the configuration in Program.cs, add the following code to register the MessageHandler:  \n``` C#  \napp.UseMessageHandlerForMp(\"/WeixinAsync\",  \n    (stream, postModel, maxRecordCount, serviceProvider)  \n        => new CustomMessageHandler(stream, postModel, maxRecordCount, false, serviceProvider),  \n    options   \n        =>  \n    {  \n        options.AccountSettingFunc = context => Senparc.Weixin.Config.SenparcWeixinSetting;  \n    });  \n```  \n  \nAt this point, you can use [https://YourDomain/WeixinAsync](https://sdk.weixin.senparc.com/WeixinAsync) to configure in the Wechat Official Account backend [Settings and Development]>[Basic Configuration]>Server Address (URL), and the corresponding Token is set in [appsettings.json](/Samples/MP/Senparc.Weixin.Sample.MP/appsettings.json#L36) (also applicable to Enterprise Wechat and Mini Program, please refer to the corresponding [Sample](/Samples/)).  \n  \nIn addition, you can also use the `Controller (or WebApi)` method to have more precise control over the entire message processing process (or use it in .NET Framework), [click here to view](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8MessageHandler%E7%AE%80%E5%8C%96%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B).  \n  \nNow you have mastered the basic skills required to develop for Wechat platforms. Keep reading for more resources:  \n  \n<img src=\"https://sdk.weixin.senparc.com/images/SenparcRobotsnapshoot.jpg\" width=\"300\" align=\"right\">  \n  \n## 📇 More Indexes  \n  \n* [🏹 Libraries for each module](#-libraries-for-each-module)  \n* [💾 Source code project folder description (under src folder)](#-source-code-project-folder-description-under-src-folder)  \n* [🖥️ Samples folder description (under Samples folder)](#%EF%B8%8F-samples-folder-description-under-samples-folder)  \n* [🎨 Resources](#-resources)  \n* [📖 Senparc Official Book Tutorial](#-senparc-official-book-tutorial)  \n* [🖥️ Senparc Official Video Tutorial](#-senparc-official-video-tutorial)  \n* [🧪 Follow the test account (SenparcRobot)](#-follow-the-test-account-senparcrobot-to-experience-the-features)  \n* [✋ Contribute to the code](#-contribute-to-the-code)  \n* [👩‍🏫 How to develop using .NET Core](#-how-to-develop-using-net-core)  \n* [↕️ Install via Nuget](#-install-via-nuget)  \n* [🏬 How to deploy](#-how-to-deploy)  \n* [🍴 Description of important branches](#-description-of-important-branches)  \n* [🍟 Thanks to contributors](#-thanks-to-contributors)  \n* [💰 Donate](#-donate)  \n* [⭐ Star Count](#-star-count)  \n* [📎 License](#-license)  \n  \nThis repository contains the source code for multiple versions including .NET Framework/.NET Standard 2.0+/.NET Core 3.1/.NET 6/.NET 7/.NET 8:  \n  \n* Use Visual Studio 2022 to open the demo (supports all versions): .NET 8.0 - [Senparc.Weixin.Sample.Net7.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net8-mvc) (includes recommended source code references)  \n* Use Visual Studio 2019 or higher to open the .NET Framework demo: [Senparc.Weixin.MP.Sample.Net45.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net45-mvc/) (does not include source code, only references the libraries)  \n* Use Visual Studio 2019 or higher to open the command line Console demo (.NET Core): [Senparc.Weixin.MP.Sample.Consoles.vs2019.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/console)\n\n#### Legend  \n| ![.NET 4.6][net46Y] | ![.NET Standard 2.x][core20Y] | ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]    \n|--|--|--|  \n| .NET Framework 4.6.2+      |  .NET Standard 2.0 / 2.1  |   .NET 8.0, backward compatible with .NET 5.0-7.0  \n   \n> Tip:<br>  \n> 1. Starting from May 1, 2019, .NET Framework 3.5 and 4.0 will no longer receive updates. The last stable version of .NET Framework 3.5 + 4.0 can be found [here](https://github.com/JeffreySu/WeiXinMPSDK/releases/tag/v16.6.15).<br>  \n> 2. Starting from April 3, 2022, .NET Framework 4.5 has been upgraded to 4.6.2. The last stable version of .NET Framework 4.5 can be found [here](https://github.com/JeffreySu/WeiXinMPSDK/releases/tag/v16.17.9).<br>  \n> 3. If you are still using .NET Framework, it is recommended to upgrade your application to .NET Framework 4.8+ by January 12, 2027, as official support for .NET Framework 4.6.2 will end by then ([source](https://learn.microsoft.com/en-us/lifecycle/products/microsoft-net-framework)).<br>\n> 4. Use the 'Senparc.Weixin.All' integration library to automatically reference all libraries at once.\n\n[1.1]: https://img.shields.io/nuget/v/Senparc.Weixin.svg?style=flat\n[1.2]: https://www.nuget.org/packages/Senparc.Weixin\n[2.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.svg?style=flat\n[2.2]: https://www.nuget.org/packages/Senparc.Weixin.MP\n[3.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.MVC.svg?style=flat\n[3.2]: https://www.nuget.org/packages/Senparc.Weixin.MP.MVC\n[4.1]: https://img.shields.io/nuget/v/Senparc.Weixin.QY.svg?style=flat\n[4.2]: https://www.nuget.org/packages/Senparc.Weixin.QY \n[5.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Work.svg?style=flat\n[5.2]: https://www.nuget.org/packages/Senparc.Weixin.Work\n[6.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Open.svg?style=flat\n[6.2]: https://www.nuget.org/packages/Senparc.Weixin.Open\n[7.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Cache.Redis.svg?style=flat\n[7.2]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis\n[8.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Cache.Memcached.svg?style=flat\n[8.2]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached\n[9.1]: https://img.shields.io/nuget/v/Senparc.Weixin.WxOpen.svg?style=flat\n[9.2]: https://www.nuget.org/packages/Senparc.Weixin.WxOpen\n[10.1]: https://img.shields.io/nuget/v/Senparc.WebSocket.svg?style=flat\n[10.2]: https://www.nuget.org/packages/Senparc.WebSocket\n[11.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.CoreMVC.svg?style=flat\n[11.2]: https://www.nuget.org/packages/Senparc.Weixin.MP.CoreMVC\n[12.1]: https://img.shields.io/nuget/v/Senparc.Weixin.TenPay.svg?style=flat\n[12.2]: https://www.nuget.org/packages/Senparc.Weixin.TenPay\n[13.1]: https://img.shields.io/nuget/v/Senparc.Weixin.TenPayV3.svg?style=flat\n[13.2]: https://www.nuget.org/packages/Senparc.Weixin.TenPayV3\n\n[net46Y]: https://img.shields.io/badge/.NET%20Framework%204.6+-Y-brightgreen.svg\n[net46N]: https://img.shields.io/badge/.NET%20Framework%204.6+-N-lightgrey.svg\n[net46N-]: https://img.shields.io/badge/.NET%20Framework%204.6+----lightgrey.svg\n[core20Y]: https://img.shields.io/badge/.NET%20Standard2.x-Y-brightgreen.svg\n[net8]: https://img.shields.io/badge/.NET%208.0-Y-brightgreen.svg\n\n\n[nuget-img-base]: https://img.shields.io/nuget/dt/Senparc.Weixin.svg\n[nuget-url-base]: https://www.nuget.org/packages/Senparc.Weixin\n[nuget-img-mp]: https://img.shields.io/nuget/dt/Senparc.Weixin.MP.svg\n[nuget-url-mp]: https://www.nuget.org/packages/Senparc.Weixin.MP\n[nuget-img-mvc]: https://img.shields.io/nuget/dt/Senparc.Weixin.MP.Mvc.svg\n[nuget-url-mvc]: https://www.nuget.org/packages/Senparc.Weixin.MP.Mvc\n[nuget-img-tenpay]: https://img.shields.io/nuget/dt/Senparc.Weixin.TenPay.svg\n[nuget-url-tenpay]: https://www.nuget.org/packages/Senparc.Weixin.TenPay\n[nuget-img-tenpayv3]: https://img.shields.io/nuget/dt/Senparc.Weixin.TenPayV3.svg\n[nuget-url-tenpayv3]: https://www.nuget.org/packages/Senparc.Weixin.TenPayV3\n[nuget-img-qy]: https://img.shields.io/nuget/dt/Senparc.Weixin.QY.svg\n[nuget-url-qy]: https://www.nuget.org/packages/Senparc.Weixin.QY\n[nuget-img-work]: https://img.shields.io/nuget/dt/Senparc.Weixin.Work.svg\n[nuget-url-work]: https://www.nuget.org/packages/Senparc.Weixin.Work\n[nuget-img-open]: https://img.shields.io/nuget/dt/Senparc.Weixin.Open.svg\n[nuget-url-open]: https://www.nuget.org/packages/Senparc.Weixin.Open\n[nuget-img-redis]: https://img.shields.io/nuget/dt/Senparc.Weixin.Cache.Redis.svg\n[nuget-url-redis]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis\n[nuget-img-mc]: https://img.shields.io/nuget/dt/Senparc.Weixin.Cache.Memcached.svg\n[nuget-url-mc]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached\n[nuget-img-wxopen]: https://img.shields.io/nuget/dt/Senparc.Weixin.WxOpen.svg\n[nuget-url-wxopen]: https://www.nuget.org/packages/Senparc.Weixin.WxOpen\n[nuget-img-ws]: https://img.shields.io/nuget/dt/Senparc.WebSocket.svg\n[nuget-url-ws]: https://www.nuget.org/packages/Senparc.WebSocket\n\n\n## Feature Support  \n  \n* Most of the WeChat 8.x APIs are supported, including WeChat Pay, custom menu/personalized menu, template message interface, material upload interface, mass message interface, customer service interface, payment interface, WeChat store interface, card interface, invoice interface, etc.  \n* Support for WeChat Official Accounts, Mini Programs, Enterprise Accounts, Open Platforms, WeChat Pay, and other modules.  \n* Support for user session context (solving the problem of using Session to process user information on the server).  \n* Full support for the latest APIs of WeChat Official Accounts, Mini Programs, Enterprise Accounts (WeChat Work), WeChat Pay V2/V3, and Open Platforms.  \n* Support for distributed caching and caching strategy extension (default support: local cache, Redis, Memcached, can be freely extended), no need to worry about the type of cache used during development, can be freely switched in the configuration file or during runtime.  \n  \n> 1. The official APIs are perfectly integrated, and all upgrades will try to ensure backward compatibility unless otherwise specified. So you can safely use or directly upgrade (overwrite) the latest DLLs. It is recommended to use [NuGet](https://www.nuget.org/) for updates.<br>  \n> 2. You can also modify and compile the code yourself. Open the [Senparc.Weixin.Sample.Net8.sln](/Samples/All/net8-mvc/) solution to see all the source code. When the compilation mode is `Release`, a local NuGet package will be automatically generated (default generated in the `/src/BuildOutPut/` folder).  \n  \n## 💾 Explanation of Source Code Project Folders (under the src folder)  \n  \n<details>  \n<summary>Expand</summary>  \n  \n  \n| Folder | Description |  \n|--------|--------|  \n|[Senparc.WebSocket](src/Senparc.WebSocket/)|WebSocket module|  \n|[Senparc.Weixin.Cache](src/Senparc.Weixin.Cache)\t\t\t\t\t\t\t|Senparc.Weixin.Cache.Memcached.dll, Senparc.Weixin.Cache.Redis.dll, and other distributed cache extension solutions|  \n|[Senparc.Weixin.AspNet](src/Senparc.Weixin.AspNet)\t\t\t\t\t\t\t|Senparc.Weixin.AspNet.dll, a class library specifically for web support|  \n|[Senparc.Weixin.MP.MvcExtension](src/Senparc.Weixin.MP.MvcExtension)\t\t|Senparc.Weixin.MP.MvcExtension.dll source code, an extension package for MVC projects |  \n|[Senparc.Weixin.MP](src/Senparc.Weixin.MP)\t\t\t\t\t\t\t\t\t|Senparc.Weixin.MP.dll WeChat Official Account SDK source code|  \n|[Senparc.Weixin.MP.Middleware](src/Senparc.Weixin.MP.Middleware)           |Senparc.Weixin.MP.Middleware.dll WeChat Official Account message middleware source code|  \n|[Senparc.Weixin.Open](src/Senparc.Weixin.Open)\t\t\t\t\t\t\t\t|Senparc.Weixin.Open.dll Third-party Open Platform SDK source code|  \n|[Senparc.Weixin.TenPay](src/Senparc.Weixin.TenPay)\t\t\t\t\t\t\t|Senparc.Weixin.TenPay.dll & Senparc.Weixin.TenPayV3.dll source code for WeChat Pay [V2](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPay) and [V3](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3)|  \n|[Senparc.Weixin.Work](src/Senparc.Weixin.Work)\t\t\t\t\t\t\t\t|Senparc.Weixin.Work.dll Enterprise WeChat SDK source code|  \n|[Senparc.Weixin.Work.Middleware](src/Senparc.Weixin.Work.Middleware)       |Senparc.Weixin.Work.Middleware.dll Enterprise WeChat message middleware source code|  \n|[Senparc.Weixin.WxOpen](src/Senparc.Weixin.WxOpen)\t\t\t\t\t\t\t|Senparc.Weixin.WxOpen.dll WeChat Mini Program SDK source code, including Mini Games|  \n|[Senparc.Weixin.WxOpen.Middleware](src/Senparc.Weixin.WxOpen.Middleware)   |Senparc.Weixin.WxOpen.Middleware.dll WeChat Mini Program message middleware source code, including Mini Games|  \n|[Senparc.Weixin](src/Senparc.Weixin)\t\t\t\t\t\t\t\t\t\t|Source code for all Senparc.Weixin.[x].dll basic libraries|  \n</details>  \n  \n[Enter Folder](/src/)  \n  \n## 🖥️ Explanation of Samples Folder (under the Samples folder)  \n  \nThe usage of all modules in the Senparc.Weixin SDK is highly consistent, including the configuration process, AccessToken management, message processing, service messages, API calls, etc. You only need to refer to the usage of any module (it is recommended to start with `Official Accounts` or `Mini Programs`), and you can apply the same principles to other modules.  \n  \nFrom the following samples, you can learn about the configuration and usage of each independent module. Just open the `.sln` solution file in the corresponding folder to view the source code and run it to see the documentation. The `All` folder contains more comprehensive and advanced feature demonstrations.  \n  \n| Folder | Description | SDK Reference Method |  \n|--------|--------|----|  \n|[MP](/Samples/MP/)          |   Official Accounts | NuGet Package  \n|[TenPayV2](/Samples/TenPayV2/)    |   WeChat Pay V1 and V2  | NuGet Package  \n|[TenPayV3](/Samples/TenPayV3/)    |   WeChat Pay V3 (TenPay APIv3) | NuGet Package  \n|[Work](/Samples/Work/)        |   Enterprise Accounts | NuGet Package  \n|[WxOpen](/Samples/WxOpen/)      |   Mini Programs | NuGet Package  \n|[Shared](/Samples/Shared)      |   Shared files required by all samples  \n|[All](/Samples/All/)         |   A mixed scenario demonstration that includes all functions of WeChat Official Accounts, Mini Programs, WeChat Pay, Enterprise Accounts, etc., recommended for projects that integrate multiple platforms or require deep development (advanced) |   \n| ┣ [All/console](/Samples/All/console)\t\t\t|Command Line Console Demo (.NET Core)| NuGet Package  \n| ┣ [All/net45-mvc](/Samples/All/net45-mvc)\t\t\t\t\t\t|Demo that can be directly published and used (.NET Framework 4.5 + ASP.NET MVC)|  NuGet Package  \n| ┗ [All/net8-mvc](/Samples/All/net8-mvc)\t\t\t|Demo that can be directly published and used (.NET 8.0), compatible with .NET 5.0, 6.0, 7.0, and .NET Core | <strong>Source Code<strong>  \n  \n[Enter Samples Folder](/Samples/)  \n  \n<!-- ## Customize Your WeChat Project Sample  \n  \nWeb version: [Click here](https://www.cnblogs.com/szw/p/WeChatSampleBuilder-V2.html#Web-WeChatSampleBuilder) for the tutorial.  \n  \n<img src=\"https://sdk.weixin.senparc.com/images/WeChatSampleBuilder-v0.2.0-web.png?t=1\" width=\"700\" alt=\"WeChatSampleBuilder\" /> -->  \n  \n<!--   \n2. Desktop version: Log in to [https://weixin.senparc.com/User](https://weixin.senparc.com/User) to download the WeChatSampleBuilder tool and view the instructions.  \n  \n<img src=\"https://sdk.weixin.senparc.com/images/WeChatSampleBuilder-v0.2.0.png?t=1\" width=\"700\" alt=\"WeChatSampleBuilder\" />  \n-->  \n<!-- > Note: Using the WeChatSampleBuilder tool is only for simplifying the sample code for testing and learning purposes. It cannot help you generate complete production projects with business logic. To build a production project, please refer to the complete demos or other tutorials. It is recommended to use existing system frameworks for project construction, such as [NeuCharFramework](https://github.com/NeuCharFramework/NCF). -->  \n  \n  \n## 🎨 Resources  \n  \n1. Official website: https://weixin.senparc.com/  \n2. Online demo (for .NET 8.0, backward compatible with .NET 6.0, 7.0, and .NET Core): https://sdk.weixin.senparc.com/  \n3. WeChat development tutorials: https://www.cnblogs.com/szw/p/weixin-course-index.html  \n4. WeChat technical community: https://weixin.senparc.com/QA  \n5. Custom menu online editor: https://sdk.weixin.senparc.com/Menu  \n6. Online message testing tool: https://sdk.weixin.senparc.com/SimulateTool  \n7. Cache testing tool: https://sdk.weixin.senparc.com/Cache/Test  \n8. chm help document download: https://sdk.weixin.senparc.com/Document  \n9. Source code and latest updates: https://github.com/JeffreySu/WeiXinMPSDK  \n10. WeChat development resource collection: https://github.com/JeffreySu/WeixinResource  \n11. Auxiliary system for reading \"In-depth Analysis of WeChat Development\": https://book.weixin.senparc.com  \n12. Purchase \"In-depth Analysis of WeChat Development\": [https://item.jd.com/12220004.html](https://book.weixin.senparc.com/book/link?code=github-homepage-resource)  \n13. \"Rapid Development of WeChat Official Accounts and Mini Programs\" video tutorial: [https://github.com/JeffreySu/WechatVideoCourse](https://github.com/JeffreySu/WechatVideoCourse)  \n  \n* Technical communication QQ groups:  \n  \n>Group 1 (Official Accounts): 300313885<br>  \n>Group 14 (Video Course Students): 588231256<br>  \n>Group 10 (Distributed Cache): 246860933<br>  \n>Group 12 (Mini Programs): 108830388<br>  \n>Group 16 (Open Platform): 860626938<br>  \n>*`The following groups are full:`*<br>  \n>`Group 2: 293958349 (Full), Group 3: 342319110 (Full)`<br>  \n>`Group 4: 372212092 (Full), Group 5: 377815480 (Full), Group 6: 425898825 (Full)`<br>  \n>`Group 7: 482942254 (Full), Group 8: 106230270 (Full), Group 9: 539061281 (Full)`<br>  \n>`Group 11: 553198593 (Full), Group 13: 183424136 (Open Platform, Full), Group 15: 289181996 (Full)`<br>  \n  \n* Business contact QQ: 498977166  \n  \n<!-- * Sina Weibo: [@苏震巍](http://weibo.com/jeffreysu1984) -->  \n  \nIf this project is helpful to you, we welcome any form of donation or participation in code updates and feedback. Thank you!  \n  \nDonation: [Enter](http://sdk.weixin.senparc.com#donate)\n\n## 📖 Senparc Official Book Tutorial  \n  \n<img src=\"https://sdk.weixin.senparc.com/images/book-cover-front-small-3d.png\" width=\"400\" align=\"right\">  \n  \n> The Wechat development book, titled \"In-Depth Analysis of Wechat Development: Efficient Development Secrets for Official Accounts and Mini Programs,\" completed by Jeffrey Su and the Senparc team after 2 years of effort, has been published. The book comes with an auxiliary reading system: [BookHelper](http://book.weixin.senparc.com).<br>  \n> Welcome to purchase the genuine book: [【Buy Genuine】](https://book.weixin.senparc.com/book/link?code=github-homepage)<br>  \n> The code snapshot of the book's publication version is in the branch [BookVersion1](https://github.com/JeffreySu/WeiXinMPSDK/tree/BookVersion1).  \n  \n  \n## 💻 Senparc Official Video Tutorial  \n  \n> In order to help everyone understand Wechat development details more intuitively and learn Wechat development and various tricks in .NET development process, we have established the \"Senparc Classroom\" group and launched Wechat development video courses, which cover the following two parts:<br>  \n> 1. Wechat development basic skills<br>  \n> 2. Case study of official accounts and mini programs<br>  \n>   \n> The total course duration is 60 lessons, with additional episodes.<br>  \n> Currently, the videos are available on NetEase Cloud Classroom, with well-produced content and abundant materials. The course has been selected as an \"A\" level course. [【Watch Videos】](https://book.weixin.senparc.com/book/videolinknetease?code=github-homepage), [【View Course Code and Slides】](https://github.com/JeffreySu/WechatVideoCourse).  \n  \n  \n## 🧪 Follow the test account to experience the functions (SenparcRobot):  \n  \n|Senparc Network Assistant Official Account|Senparc Network Assistant Mini Program|BookHelper|  \n|--|--|--|  \n| <img src=\"https://sdk.weixin.senparc.com/Images/qrcode.jpg\" width=\"258\" /> | <img src=\"https://sdk.weixin.senparc.com/Images/SenparcRobot_MiniProgram.jpg\" width=\"258\" /> | <img src=\"https://sdk.weixin.senparc.com/Images/qrcode-bookhelper.jpg\" width=\"258\" /> |  \n  \n  \n## ✋ Contribute Code  \n  \n> If you need to use or modify the source code of this project, it is recommended to Fork first. You are also welcome to submit a Pull Request for the general version you modified.  \n  \n1. Fork  \n2. Create your feature branch (`git checkout -b my-new-feature`)  \n3. Commit your changes (`git commit -am 'Added some feature'`)  \n4. Push to the remote `git` repository (`git push origin my-new-feature`)  \n5. Go to the `my-new-feature` branch of your `git` remote repository on the github website and submit a Pull Request  \n(Submit to the `Developer` branch instead of the `master` branch directly)  \n  \n<!--  \n### /Controllers/WeixinController.cs  \n  \nThe Token below needs to be synchronized with the Token set in the Wechat official platform backend. If it is frequently changed, it is recommended to write it into the Web.config or other configuration files (In actual use, it is recommended to use numbers + English letters in different cases to rewrite the Token. Once the Token is cracked, Wechat requests will be easily forged!):  \n```C#  \npublic readonly string Token = \"weixin\";  \n```  \nThe following Action (Get) is used to receive and return the verification result of the Wechat backend URL. No modification is required. The address is like: http://domain/Weixin or http://domain/Weixin/Index  \n```C#  \n/// <summary>  \n/// Wechat backend verification address (using Get), the \"Interface Configuration Information\" Url of Wechat backend is filled as: http://weixin.senparc.com/weixin  \n/// </summary>  \n[HttpGet]  \n[ActionName(\"Index\")]  \npublic ActionResult Get(PostModel postModel, string echostr)  \n{  \n    if (CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))  \n    {  \n        return Content(echostr); // If a random string is returned, it means the verification is passed  \n    }  \n    else  \n    {  \n        return Content(\"failed:\" + postModel.Signature + \",\"   \n            + MP.CheckSignature.GetSignature(postModel.Timestamp, postModel.Nonce, Token) + \"。\" +  \n            \"If you see this sentence in the browser, it means that this address can be used as the Url of the Wechat official account backend. Please keep the Token consistent.\");  \n    }  \n}  \n```  \nThe above method's PostModel is an entity class that includes Signature, Timestamp, Nonce (passed in by the Wechat server through the Url parameters when the request is made), as well as AppId, Token, EncodingAESKey and other sensitive information (needs to be passed in). It will also be used later.  \n  \n  \nThe following Action (Post) is used to receive Post requests from the Wechat server (usually initiated by the user). The if statement is essential here. The previous Get method only provides verification when the Wechat backend saves the Url. The verification must be re-verified for each Post, otherwise the request can be easily forged.  \n```C#  \n/// <summary>  \n/// After the user sends a message, the Wechat platform automatically posts a request here and waits for the XML response  \n/// </summary>  \n[HttpPost]  \n[ActionName(\"Index\")]  \npublic ActionResult Post(PostModel postModel)  \n{  \n    if (!CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))  \n    {  \n        return Content(\"Parameter error!\");  \n    }  \n    ...  \n}  \n```  \n  \n### How to handle Wechat official account requests?  \n  \nSenparc.Weixin.MP provides two ways to handle requests, the [conventional method](https://github.com/JeffreySu/WeiXinMPSDK/wiki/Handling-Wechat-messages-in-the-usual-way) and the [MessageHandler](https://github.com/JeffreySu/WeiXinMPSDK/wiki/How-to-use-MessageHandler-to-simplify-message-processing). The wiki has detailed explanations of these two methods. Here is a simple example of using the MessageHandler processing method.  \n  \nThe processing flow of the MessageHandler is very simple:  \n``` C#  \n[HttpPost]  \n[ActionName(\"Index\")]  \npublic ActionResult Post(PostModel postModel)  \n{  \n    if (!CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))  \n    {  \n        return Content(\"Parameter error!\");  \n    }  \n  \n    postModel.Token = Token;  \n    postModel.EncodingAESKey = EncodingAESKey;// Keep consistent with your own backend settings  \n    postModel.AppId = AppId;// Keep consistent with your own backend settings  \n  \n    var messageHandler = new CustomMessageHandler(Request.InputStream, postModel);// Receive the message (first step)  \n  \n    messageHandler.Execute();// Execute the Wechat processing process (second step)  \n  \n    return new FixWeixinBugWeixinResult(messageHandler);// Return (third step)  \n}  \n```  \nExcept for the assignment of postModel in the above code, the receiving (first step), processing (second step), and returning (third step) of the message only require one line of code each.  \n  \nThe CustomMessageHandler in the above code is a custom class that inherits from Senparc.Weixin.MP.MessageHandler.cs. MessageHandler is an abstract class that contains abstract methods for executing various request types (such as text, voice, location, image, etc.). We only need to implement these methods one by one in the CustomMessageHandler we created. The CustomMessageHandler.cs just created is as follows:  \n  \n```C#  \nusing System;  \nusing System.IO;  \nusing Senparc.Weixin.MP.MessageHandlers;  \nusing Senparc.Weixin.MP.Entities;  \n  \nnamespace Senparc.Weixin.MP.Sample.CustomerMessageHandler  \n{  \n    public class CustomMessageHandler : MessageHandler<MessageContext>  \n    {  \n        public public CustomMessageHandler(Stream inputStream, PostModel postModel, int maxRecordCount = 0)  \n            : base(inputStream, postModel, maxRecordCount)  \n        {  \n  \n        }  \n  \n        public override IResponseMessageBase DefaultResponseMessage(IRequestMessageBase requestMessage)  \n        {  \n            //ResponseMessageText can also be News or other types  \n            var responseMessage = CreateResponseMessage<ResponseMessageText>();  \n            responseMessage.Content = \"This message is from DefaultResponseMessage.\";  \n            return responseMessage;  \n        }  \n  \n        public override IResponseMessageBase OnTextRequest(RequestMessageText requestMessage)  \n        {  \n            //...  \n        }  \n  \n        public override IResponseMessageBase OnVoiceRequest(RequestMessageVoice requestMessage)  \n        {  \n            //...  \n        }  \n  \n        //More OnXX methods that are not overridden will return the results in DefaultResponseMessage by default.  \n        ....  \n    }  \n}  \n```  \n  \nWhere OnTextRequest, OnVoiceRequest, etc. correspond to different types of requests such as receiving text, voice, etc.  \n  \nFor example, if we need to respond to text type requests, we just need to improve the OnTextRequest method:  \n```C#  \n      public override IResponseMessageBase OnTextRequest(RequestMessageText requestMessage)  \n      {  \n          //TODO: The logic here can be handed over to the Service to handle specific information. Refer to the OnLocationRequest method or /Service/LocationSercice.cs  \n          var responseMessage = CreateResponseMessage<ResponseMessageText>();  \n          responseMessage.Content = string.Format(\"You just sent a text message: {0}\", requestMessage.Content);  \n          return responseMessage;  \n      }  \n```  \nWhen CustomMessageHandler executes messageHandler.Execute(), if it finds that the request information type is text, it will automatically call the above code and return the responseMessage in the code as the returned information. responseMessage can be any type under the IResponseMessageBase interface (including text, news, multimedia, etc.).  \n  \nStarting from v0.4.0, MessageHandler adds support for user session context to solve the problem that user sessions cannot be managed on the server. See: [User Context WeixinContext and MessageContext](https://github.com/JeffreySu/WeiXinMPSDK/wiki/User-Context-WeixinContext-and-MessageContext)  \n  \n-->  \n  \n  \n## 👩‍🏫 How to develop with .NET Core  \n  \n> The current branch includes the full version of .NET Framework 4.6.2+ and .NET 6.0/7.0/8.0 code (snapshot of versions that are no longer updated can be found in [release](https://github.com/JeffreySu/WeiXinMPSDK/releases)).<br>  \n> The Demo for .NET Framework is located in the `/src/Samples/All/net45-mvc` directory, and<br>  \n> 【Recommended】The Demo for .NET 8.0 (compatible with .NET 5.0, 6.0, 7.0, and .NET Core 3.1 and lower versions) is located in the `/Samples/All/net8-mvc` directory.<br><br>  \n> Note: In the above Samples, the `net8-mvc` Sample directly references the source code of each module, and can generate a Senaprc.Weixin SDK library compatible with different versions after being compiled with `Release`.\n  \n## ↕️ Install via Nuget to the project  \n  \nThe Nuget installation methods for each module: [Installing the SDK into the project using Nuget](https://github.com/JeffreySu/WeiXinMPSDK/wiki/Installing-the-SDK-into-the-project-using-Nuget)  \n  \n## 🏬 Deployment guide  \n  \n### 1) Deploy to Azure App Service  \n  \n[App Service](https://docs.microsoft.com/zh-cn/azure/app-service/azure-web-sites-web-hosting-plans-in-depth-overview) is a Web service launched by Microsoft Azure, which has good support for .NET. The deployment steps are detailed in: [Deploy the Wechat site to Azure](https://github.com/JeffreySu/WeiXinMPSDK/wiki/Deploy-the-Wechat-site-to-Azure).  \n  \n### 2) Deploy to any server via FTP  \n  \nInstall an FTP service (FileZilla Server is recommended) on the Web server, and directly upload the compiled code from the local machine (the corresponding code in the [Samples](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/Samples) is [Senparc.Weixin.Sample.Net8](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net8-mvc). After compilation, you can use it directly without modifying the code. If you use Azure App Service or other cloud services, FTP is usually enabled as well.  \n  \n  \n<!--  \nImplemented Functions  \n-------------  \n* Wechat Official Account  \n>   - [x] Receive/Send Messages (Events)  \n>   - [x] Custom Menu & Personalized Menu  \n>   - [x] Message Management  \n>   - [x] OAuth Authorization  \n>   - [x] JSSDK  \n>   - [x] Wechat Payment  \n>   - [x] User Management  \n>   - [x] Material Management  \n>   - [x] Account Management  \n>       - [x] Parameterized QR Code  \n>       - [x] Long URL to Short URL Interface  \n>       - [x] Wechat Authentication Event Push  \n>   - [x] Data Statistics  \n>   - [x] Wechat Store  \n>   - [x] Wechat Card Coupon  \n>       - [x] Card Coupon Event Push  \n>           - [ ] Payment Event Push  \n>           - [ ] Membership Card Content Update Event Push  \n>           - [ ] Inventory Alert Event Push  \n>           - [ ] Coupon Point Flow Detail Event Push  \n>   - [x] Wechat Store  \n>   - [x] Wechat Intelligence  \n>   - [x] Wechat Device Function  \n>   - [x] Customer Service Function  \n>   - [x] Wechat Shake Around  \n>   - [x] Wechat Wi-Fi (Incomplete)  \n>   - [x] Wechat Scan QR Code (Merchant)  \n>       - [ ] Scan QR Code Event Push  \n>           - [ ] Open Product Homepage Event Push  \n>           - [ ] Follow Official Account Event Push  \n>           - [ ] Enter Official Account Event Push  \n>           - [ ] Asynchronous Push of Geographic Location Information  \n>           - [ ] Product Audit Result Push  \n  \n* Wechat Open Platform  \n>   - [x] Website Application  \n>   - [x] Official Account Third-Party Platform  \n  \n  \n* Wechat Work Account  \n>\t- [x] Manage Address Book  \n>\t- [x] Manage Material Files  \n>\t- [x] Manage Enterprise Account Applications  \n>\t- [x] Receive Messages and Events  \n>\t- [x] Send Messages  \n>\t- [x] Custom Menu  \n>\t- [x] Identity Authentication Interface  \n>\t- [x] JSSDK  \n>\t- [x] Third-Party Application Authorization  \n>\t    - [x] Third-Party Callback Protocol  \n>\t        - [ ] Authorization Code Event Push  \n>\t        - [ ] Address Book Change Notification  \n> \t- [x] Enterprise Account Authorization Login  \n>\t- [x] Enterprise Account Wechat Payment  \n>\t- [x] Enterprise Session Service  \n>\t    - [ ] Enterprise Session Callback  \n>\t- [x] Enterprise Shake Around  \n>\t- [ ] Enterprise Card Coupon Service  \n>\t    - [ ] Card Coupon Event Push  \n>\t- [x] Enterprise Customer Service  \n>\t    - [ ] Customer Service Reply Message Callback  \n\t      \n  \n  \n* Cache Strategy  \n>   - [x] Strategy Extension Interface  \n>   - [x] Local Cache  \n>   - [x] Redis Extension Package  \n>   - [x] Memcached Extension Package  \n  \n Welcome developers to submit Pull Requests for unfinished or to-be-supplemented modules!  \n-->  \n  \n## 🍴 Important Branches  \n  \n|  Branch    |     Description           \n|-----------|---------------  \n| master    | The main branch for official releases. This branch is usually more stable and can be used in production environments.  \n| Developer | 1. The development branch. This branch is usually the Beta version, and new versions are developed in this branch before being pushed to the master branch. If you want to get a sneak peek of new features, you can use this branch.<br>2. This branch is compatible with .NET 4.5 / .NET Core / .NET Core 2.0 versions at the same time. It is recommended to submit Pull Requests for code to this branch instead of the master branch.  \n| BookVersion1 | This branch is a code snapshot of the book [In-Depth Analysis of Wechat Development: Efficient Development Secrets for Official Accounts and Mini Programs](https://book.weixin.senparc.com/book/link?code=github-homepage2) publication.  \n| DotNET-Core_MySQL | This branch is a demonstration branch for integrating [Pomelo.EntityFrameworkCore.MySql](https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql) framework in .NET Core environment.  \n| NET4.0     | Branch that only supports .NET 4.0. This branch was stopped updating in 2017. The latest code for .NET 4.0 is synchronized with the master / Developer branch.  \n| NET3.5     | Branch that only supports .NET 3.5. This branch was stopped updating in 2015. The latest code for .NET 3.5 is synchronized with the master / Developer branch.  \n| Developer-Senparc.SDK | This branch is only used for internal testing of the Senparc team and can be ignored.  \n  \n  \n## 🍟 Thanks To Contributors  \n  \nThanks to the developers who contributed to this project. You have not only improved this project, but also made a contribution to the Chinese open source community. Thank you! The list can be found [here](https://github.com/JeffreySu/WeiXinMPSDK/blob/master/Contributors.md).  \n\n<a href=\"https://github.com/JeffreySu/WeiXinMPSDK/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=JeffreySu/WeiXinMPSDK&max=200\" />\n</a>\n  \n## 💰 Donations  \n  \nIf this project is useful to you, we welcome any form of donation, including participating in project code updates or providing feedback. Thank you!  \n  \nDonate:  \n  \n[![donate](http://sdk.weixin.senparc.com/Images/T1nAXdXb0jXXXXXXXX_s.png)](http://sdk.weixin.senparc.com#donate)\n\n\n## ⭐ Star Quantity Statistics \n\n[![starcharts stargazers over time](https://starchart.cc/JeffreySu/WeiXinMPSDK.svg)](https://starchart.cc/JeffreySu/WeiXinMPSDK)\n\n## 📎 License\n\nApache License Version 2.0\n\n```\nCopyright 2024 Jeffrey Su & Suzhou Senparc Network Technology Co.,Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file \nexcept in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the \nLicense is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, \neither express or implied. See the License for the specific language governing permissions \nand limitations under the License.\n```\nDetail: https://github.com/JeffreySu/WeiXinMPSDK/blob/master/license.md\n\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 49.390625,
          "content": "<img src=\"https://sdk.weixin.senparc.com/images/senparc-logo-500.jpg\" />\n\nSenparc.Weixin —— 微信 .NET SDK \n=================\n\n[![Build status](https://mysenparc.visualstudio.com/Senparc%20SDK/_apis/build/status/Weixin%20SDK/Senparc.Weixin%20Dev-%E5%86%85%E9%83%A8-%E8%87%AA%E5%8A%A8-.Net6)](https://mysenparc.visualstudio.com/Senparc%20SDK/_build/latest?definitionId=36)\n[![NuGet](https://img.shields.io/nuget/dt/Senparc.Weixin.svg)](https://www.nuget.org/packages/Senparc.Weixin)\n[![GitHub commit activity the past week, 4 weeks, year](https://img.shields.io/github/commit-activity/4w/JeffreySu/WeiXinMPSDK.svg)](https://github.com/JeffreySu/WeiXinMPSDK/commits/master)\n![Static Badge](https://img.shields.io/badge/.NET-8.0-blue)\n[![Senparc.Weixin.All](https://img.shields.io/nuget/vpre/Senparc.Weixin.All?label=Senparc.Weixin.All)](https://www.nuget.org/packages/Senparc.Weixin.All/)\n[![license](https://img.shields.io/github/license/JeffreySu/WeiXinMPSDK.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\n[![Senparc.Weixin](https://img.shields.io/nuget/vpre/Senparc.Weixin?label=Senparc.Weixin)](https://www.nuget.org/packages/Senparc.Weixin/)\n[![Senparc.Weixin.MP](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP?label=Senparc.Weixin.MP)](https://www.nuget.org/packages/Senparc.Weixin.MP/)\n[![Senparc.Weixin.MP.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP.Middleware?label=Senparc.Weixin.MP.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.MP.Middleware/)\n[![Senparc.Weixin.MP.Mvc](https://img.shields.io/nuget/vpre/Senparc.Weixin.MP.Mvc?label=Senparc.Weixin.MP.Mvc)](https://www.nuget.org/packages/Senparc.Weixin.MP.Mvc/)\n[![Senparc.Weixin.WxOpen](https://img.shields.io/nuget/vpre/Senparc.Weixin.WxOpen?label=Senparc.Weixin.WxOpen)](https://www.nuget.org/packages/Senparc.Weixin.WxOpen/)\n[![Senparc.Weixin.WxOpen.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.WxOpen.Middleware?label=Senparc.Weixin.WxOpen.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.WxOpen.Middleware/)\n[![Senparc.Weixin.Work](https://img.shields.io/nuget/vpre/Senparc.Weixin.Work?label=Senparc.Weixin.Work)](https://www.nuget.org/packages/Senparc.Weixin.Work/)\n[![Senparc.Weixin.Work.Middleware](https://img.shields.io/nuget/vpre/Senparc.Weixin.Work.Middleware?label=Senparc.Weixin.Work.Middleware)](https://www.nuget.org/packages/Senparc.Weixin.Work.Middleware/)\n[![Senparc.Weixin.TenPay](https://img.shields.io/nuget/vpre/Senparc.Weixin.TenPay?label=Senparc.Weixin.TenPay)](https://www.nuget.org/packages/Senparc.Weixin.TenPay/)\n[![Senparc.Weixin.TenPayV3](https://img.shields.io/nuget/vpre/Senparc.Weixin.TenPayV3?label=Senparc.Weixin.TenPayV3)](https://www.nuget.org/packages/Senparc.Weixin.TenPayV3/)\n[![Senparc.Weixin.Open](https://img.shields.io/nuget/vpre/Senparc.Weixin.Open?label=Senparc.Weixin.Open)](https://www.nuget.org/packages/Senparc.Weixin.Open/)\n[![Senparc.Weixin.AspNet](https://img.shields.io/nuget/vpre/Senparc.Weixin.AspNet?label=Senparc.Weixin.AspNet)](https://www.nuget.org/packages/Senparc.Weixin.AspNet/)\n[![Senparc.Weixin.Cache.Redis](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.Redis?label=Senparc.Weixin.Cache.Redis)](https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis/)\n[![Senparc.Weixin.Cache.CsRedis](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.CsRedis?label=Senparc.Weixin.Cache.CsRedis)](https://www.nuget.org/packages/Senparc.Weixin.Cache.CsRedis/)\n[![Senparc.Weixin.Cache.Memcached](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.Memcached?label=Senparc.Weixin.Cache.Memcached)](https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached/)\n[![Senparc.Weixin.Cache.Dapr](https://img.shields.io/nuget/vpre/Senparc.Weixin.Cache.Dapr?label=Senparc.Weixin.Cache.Dapr)](https://www.nuget.org/packages/Senparc.Weixin.Cache.Dapr/)\n[![Senparc.WebSocket](https://img.shields.io/nuget/vpre/Senparc.WebSocket?label=Senparc.WebSocket)](https://www.nuget.org/packages/Senparc.WebSocket/)\n\n\n[[English Version]](readme.en.md)\n\n> 📈 **Senparc.Weixin SDK 是目前使用率最高的微信 .NET SDK，也是国内最受欢迎的 .NET 开源项目之一。本项目已持续维护超过 11 年，助力大量系统和应用取得成功。我们将继续保持更新，并正在深度融合 [AI](https://github.com/Senparc/Senparc.AI) 场景应用，示例正在逐步上线。欢迎加入我们的社区 👐**\n\n使用 Senparc.Weixin，您可以方便快速地开发微信全平台的应用（包括微信公众号、小程序、小游戏、企业号、开放平台、微信支付、JS-SDK、微信硬件/蓝牙，等等）。本项目的 Demo 同样适合初学者进行 .NET 编程学习。\n\n目前 Senparc.Weixin 已经支持几乎所有微信平台模块和接口，并同时支持 \n[.NET 3.5 / 4.0 / 4.5 / .NET Standard 2.x / .NET Core 2.x / .NET Core 3.x / .NET 6.0 / .NET 7.0 / .NET 8.0](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer) 等多种框架，同时兼容所有 MVC、Razor、WebApi、Console（命令行）、桌面应用（.exe）、Blazor、MAUI、后台服务等环境，和外部框架完全解耦。<br>\n\n自 2013 年起立项 10 年多来，我们一直保持着项目的持续更新，并将完整的源代码以及设计思想毫无保留地分享给大家，希望有更多的人可以从中受益，理解并传播开源的精神，一同助力中国开源事业！感恩一路上给我们提供帮助的朋友们！\n\n如果你喜欢并希望我们继续优化这个项目，请给我们一个 ★Star ：)\n\n## 🔔 公告\n\n> [!TIP]\n> 🔥 AI 聊天机器人微信集成 Sample 已上线！[查看](/Samples%20with%20AI)<br>\n> 🥇 [2024-2025 年度盛派开发者社区“优秀贡献者”评选活动正式启动](https://mp.weixin.qq.com/s/1b6iBuTZbFsm92l17pLz8Q)<br>\n> 🎬 `Scott Hansleman 关于 AI 话题的专访（2024 年盛派 3.14 开放日活动）` [查看视频](https://www.bilibili.com/video/BV1NE421K78D/)<br/>\n<!-- > 📺 <img src=\"https://github.com/JeffreySu/WeiXinMPSDK/assets/2281927/743f3019-c96b-4b61-acdb-d1834947d5d0\" width=\"400\" /><br />\n在 2024 微软 MVP 全球峰会上有幸采访到 Scott Hanselman，并交流了一部分有关 AI 的话题，我们将会在 2024 年 4 月 13 日的“盛派 3.14 技术开放日”活动上再次进行对话，深入交流关于 AI 和 Agent 对未来软件行业以及开源软件的影响，欢迎大家关注！[查看视频](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%BE%AE%E8%BD%AF-MVP-%E5%85%A8%E7%90%83%E5%B3%B0%E4%BC%9A%E9%87%87%E8%AE%BF-Scott-Hanselman)<br/>-->\n> [!NOTE]\n> ⚡ Sample 已支持 .NET 8.0（向下兼容），[点击这里查看](/Samples/All/net8-mvc)！<br/>\n> 🔒 [微信支付 V3 模块（V1.0）](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3)已上线！[Nuget](https://www.nuget.org/packages/Senparc.Weixin.TenPayV3)<br>\n> 🎠 全面支持长文本自动分片发送，更多：[《顺应 GenAI 应用，自动“续航”回复超长文本消息》](https://www.cnblogs.com/szw/p/weixin-large-text-response.html)<br/>\n\n<!-- _1. 为了将 Demo 和源代码隔离，并让大家更方便地找到 Demo，现已将 Senparc.Weixin.MP.Sample 等文件夹转移到 [/Samples/](/Samples/) 文件夹下。_<br> -->\n<!-- _2. `Senparc.Weixin.Plugins`计划已经启动，详情 [点击这里](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/Plugins)。_ -->\n\n\n## 🌟 Start：分模块独立说明文档 + Sample 代码示例\n\n模块 | 地址\n----|----\n公众号 | https://sdk.weixin.senparc.com/Docs/MP/\n小程序 | https://sdk.weixin.senparc.com/Docs/WxOpen/\n企业微信 | https://sdk.weixin.senparc.com/Docs/Work/\n微信支付 V3（推荐） | https://sdk.weixin.senparc.com/Docs/TenPayV3/\n微信支付 V2（不推荐） | https://sdk.weixin.senparc.com/Docs/TenPayV2/\n\n> [!NOTE]\n> 1、上述分模块示例中，同时包含了文档及可以立即运行的代码模板（只需要配置微信参数，无需修改任何代码）。<br>\n> 2、示例中的配置、注册、接口调用方法均一致，只要学会其中一个模块开发，就可以举一反三。以下的 Hello World 示例也以公众号为例，可以延伸到所有其他模块。<br>\n> 3、[/docs](/docs/) 目录中提供了更完整的开发说明文档，供进阶开发使用，[点击查看](/docs/)。 <br>\n> 4、对应于微信不同平台，Senparc.Weixin SDK 已经将各模块解耦并独立发布，为了简化引用，您也可以直接引用 [Senparc.Weixin.All](https://www.nuget.org/packages/Senparc.Weixin.All)，自动引用所有模块。\n\t\n## 🚀 Hello World ：用 3 句代码开启你的微信开发之旅！\n\n> [!NOTE]\n> 1、下述源码位于 [`/Samples/MP/Senparc.Weixin.Sample.MP`](/Samples/MP/Senparc.Weixin.Sample.MP) 文件夹，以微信公众号为例。学会公众号就可以举一反三使用其他模块，基本用法一致（小程序、企业微信、微信支付等）。<br>\n> 2、如需查看其他模块或集成示例，可以查看位于 [`/Samples/`](/Samples/) 文件夹下的其他独立 Sample，或 [`/Samples/All/`](/Samples/All/) 文件夹下的集成 Sample（进阶）。\n\n\n### 启动代码（只需 2 句代码）：\n1、 <strong>在 Program.cs 的 builder.Build() 上方添加配置：</strong>\n``` C#\nbuilder.Services.AddSenparcWeixinServices(builder.Configuration);\n```\n> 如果您使用的是旧格式的 Startup.cs 文件，上述代码对应于 Startup.cs 的 ConfigureServices() 方法内。\n\n2、 <strong>在 Program.cs 的 builder.Build() 下方启用配置：</strong>\n``` C#\nvar registerService = app.UseSenparcWeixin(app.Environment, null, null, register => { },\n    (register, weixinSetting) =>\n{\n    //注册公众号信息（可以执行多次，注册多个公众号）\n    register.RegisterMpAccount(weixinSetting, \"【盛派网络小助手】公众号\");\n});\n```\n> - 如果您使用的是旧格式的 Startup.cs 文件，上述代码对应于 Startup.cs 的 Configure() 方法内。\n> - 如果您希望系统自动注册所有配置好的账号，只需上述方法最后追加一个 `autoRegisterAllPlatforms: true` 的设置即可（需要引用 `Senparc.Weixin.All` 包）：\n> ```C#\n> var registerService = app.UseSenparcWeixin(app.Environment, null, null, register => { },\n>     (register, weixinSetting) => { /* 无需手动注册 */ },\n>     autoRegisterAllPlatforms: true /* 自动注册所有平台 */\n> );\n\n### 调用高级接口（只需 1 句代码）：\n可在程序任意位置调用接口（以客服接口为例）：\n``` C#\nawait CustomApi.SendTextAsync(\"AppId\", \"OpenId\", \"Hello World!\");\n```\n> [!TIP]\n> 1. Senparc.Weixin SDK 将全生命周期自动托管 AccessToken，因此开发过程只需提供 AppId，无需操心 AccessToken 过期等问题。<br>\n> 2. AppId 等注册信息可从 `Senparc.Weixin.Config.SenparcWeixinSetting` 中自动获取，相关参数在 `appsettings.json` 中配置。<br>\n> 3. 以上方法也支持同步方法：`Senparc.Weixin.MP.AdvancedAPIs.CustomApi.SendText()`。<br>\n> 4. 所有接口命名空间均参照官方 API 路径规则定义，且参数命名方式尽量与文档保持一致（特别是返回参数），以方便开发者在源码中快速查找定位、提升测试效率、降低 bug 发生的可能性。\n\n> [!TIP]\n> 至此，您已经可以举一反三调用所有微信模块的接口啦！解锁更多技能请继续往下看。\n\n### 如何使用公众号消息对话能力？\n公众号默认提供了对话窗口，可以发送文字、图片、语音等不同类型的信息和程序互动。\n\n以下示例同样适用于企业微信和小程序客服消息的对话，只需两步！\n\n#### 第一步：创建自定义 MessageHandler 负责控制消息处理逻辑：\n\n<details>\n<summary>CustomMessageHandler.cs</summary>\n\n\n``` C#\nusing Senparc.NeuChar.Entities;\nusing Senparc.Weixin.MP.Entities;\nusing Senparc.Weixin.MP.Entities.Request;\nusing Senparc.Weixin.MP.MessageContexts;\nusing Senparc.Weixin.MP.MessageHandlers;\n\nnamespace Senparc.Weixin.Sample.MP\n{\n    /// <summary>\n    /// 自定义MessageHandler\n    /// 把MessageHandler作为基类，重写对应请求的处理方法\n    /// </summary>\n    public partial class CustomMessageHandler : MessageHandler<DefaultMpMessageContext>\n    {\n        public CustomMessageHandler(Stream inputStream, PostModel postModel, int maxRecordCount = 0,\n            bool onlyAllowEncryptMessage = false, IServiceProvider serviceProvider = null)\n            : base(inputStream, postModel, maxRecordCount, onlyAllowEncryptMessage, null, serviceProvider)\n        {\n        }\n\n        /// <summary>\n        /// 所有未处理类型的默认消息\n        /// </summary>\n        /// <returns></returns>\n        public override IResponseMessageBase DefaultResponseMessage(IRequestMessageBase requestMessage)\n        {\n            //ResponseMessageText也可以是News等其他类型\n            var responseMessage = this.CreateResponseMessage<ResponseMessageText>();\n            responseMessage.Content = $\"你发送了一条消息，但程序没有指定处理过程\";\n            return responseMessage;\n        }\n\n        public override Task<IResponseMessageBase> OnImageRequestAsync(RequestMessageImage requestMessage)\n        {\n            //处理图片请求...\n        }\n\n        public override Task<IResponseMessageBase> OnLocationRequestAsync(RequestMessageLocation requestMessage)\n        {\n            //处理地理位置请求...\n        }\n    }\n}\n```\n</details>\n\n\n#### 第二步：请求 CustomMessageHandler：\n\n我们提供了 `中间件`（推荐）和 `Controller（或WebApi）` 两种方式请求 CustomMessageHandler，您可以任选其一。以中间件为例，在 Program.cs 中启用配置后添加代码，注册 MessageHandler：\n``` C#\napp.UseMessageHandlerForMp(\"/WeixinAsync\",\n    (stream, postModel, maxRecordCount, serviceProvider)\n        => new CustomMessageHandler(stream, postModel, maxRecordCount, false, serviceProvider),\n    options \n        =>\n    {\n        options.AccountSettingFunc = context => Senparc.Weixin.Config.SenparcWeixinSetting;\n    });\n```\n\n此时，您已经可以使用 [https://YourDomain/WeixinAsync](https://sdk.weixin.senparc.com/WeixinAsync) 在微信公众号后台【设置与开发】>【基本配置】> 服务器地址(URL) 中进行配置，对应 Token 在 [appsettings.json](/Samples/MP/Senparc.Weixin.Sample.MP/appsettings.json#L36) 中设置（同样适用于企业微信和小程序，请参考对应 [Sample](/Samples/)）。\n\n此外，您还可以使用 `Controller（或 WebApi）` 方式可以对整个消息处理步骤进行更加细致的控制（或在 .NET Framework 中使用），[点击这里查看](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8MessageHandler%E7%AE%80%E5%8C%96%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B)。\n\n至此，您已经掌握了开发微信各平台所需要的基本技能，更多资源请继续往下看：\n\n<img src=\"https://sdk.weixin.senparc.com/images/SenparcRobotsnapshoot.jpg\" width=\"300\" align=\"right\">\n\n## 📇 更多介绍索引\n\n* [🏹 各模块类库](#-各模块类库)\n* [💾 源码项目文件夹说明（src文件夹下）](#-源码项目文件夹说明src文件夹下)\n* [🖥️ Samples 文件夹说明（Samples文件夹下）](#%EF%B8%8F-samples-文件夹说明samples文件夹下)\n* [🎨 资源](#-资源)\n* [📖 Senparc 官方图书教程](#-senparc-官方图书教程)\n* [🖥️ Senparc 官方视频教程](#-senparc-官方视频教程)\n* [🧪 关注测试账号（SenparcRobot）](#-关注测试账号体验功能senparcrobot)\n* [✋ 贡献代码](#-贡献代码)\n* [👩‍🏫 如何使用 .NET Core 开发](#-如何使用-net-core-开发)\n* [↕️ 使用 Nuget 安装到项目中](#-使用-nuget安装到项目中)\n* [🏬 如何部署](#-如何部署)\n* [🍴 各重要分支说明](#-各重要分支说明)\n* [🍟 感谢贡献者](#-感谢贡献者)\n* [💰 捐助](#-捐助)\n* [⭐ Star 数量统计](#-star-数量统计)\n* [📎 License](#-license)\n\n本库包含了 .NET Framework/.NET Standard 2.0+/.NET Core 3.1/.NET 6/.NET 7/.NET 8 等多个版本的源代码（核心逻辑完全一致）：\n\n* 使用 Visual Studio 2022 打开 Demo（支持所有版本）：.NET 8.0 - [Senparc.Weixin.Sample.Net8.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net8-mvc)（包含源码引用推荐）\n* 使用 Visual Studio 2019 或更高版本打开 .NET Framework Demo：[Senparc.Weixin.MP.Sample.Net45.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net45-mvc/)（不包含源码，仅引用类库）\n* 使用 Visual Studio 2019 或更高版本打开命令行 Console Demo（.NET Core）：[Senparc.Weixin.MP.Sample.Consoles.vs2019.sln](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/console)\n\n## 🏹 各模块类库\n\n| # | 模块功能                                            | DLL                                             | Nuget                          | 支持 .NET 版本 \n|---|----------------------------------------------------|-------------------------------------------------|---------------------------------------|--------------------------------------\n| 1| 基础库                                               |Senparc.Weixin.dll                               | [![Senparc.Weixin][1.1]][1.2]<br>[![Senparc.Weixin][nuget-img-base]][nuget-url-base]  |         ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8] \n| 2| 微信公众号 /<br> JSSDK / 摇周边<br> 等等 |Senparc.Weixin.MP.dll                           | [![MP][2.1]][2.2]<br>[![MP][nuget-img-mp]][nuget-url-mp]  |          ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 3| [微信小程序<br>（支持小游戏）<br>（独立项目）](https://github.com/JeffreySu/WxOpen)  |Senparc.Weixin.WxOpen.dll  |  [![WxOpen][9.1]][9.2]<br>[![WxOpen][nuget-img-wxopen]][nuget-url-wxopen] |       ![.NET 4.5][net46Y]  ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 4| 微信支付                                             |Senparc.Weixin.TenPay.dll  |  [![TenPay][12.1]][12.2]<br>[![TenPay][nuget-img-tenpay]][nuget-url-tenpay] |       ![.NET 4.5][net46Y]  ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 5| 微信支付 V3                                         |Senparc.Weixin.TenPayV3.dll  |  [![TenPayV3][13.1]][13.2]<br>[![TenPay][nuget-img-tenpayv3]][nuget-url-tenpayv3] |       ![.NET 4.5][net46N]  ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 6| ASP.NET MVC 扩展<br>               |Senparc.Weixin.MP.MVC.dll                 | [![MP.MVC][3.1]][3.2]<br>[![Mvc][nuget-img-mvc]][nuget-url-mvc] |        ![.NET 4.5][net46Y] ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 7| 微信企业号<br>（官方已停更）                                           |Senparc.Weixin.QY.dll                            | [![QY][4.1]][4.2]<br>[![QY][nuget-img-qy]][nuget-url-qy]  |      ![.NET 4.5][net46Y] ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 9| 企业微信                                             |Senparc.Weixin.Work.dll                          | [![Work][5.1]][5.2]<br>[![Work][nuget-img-work]][nuget-url-work]  |          ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 9| 微信开放平台                                         |Senparc.Weixin.Open.dll                          | [![Open][6.1]][6.2]<br>[![Open][nuget-img-open]][nuget-url-open]|         ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 10| Redis 分布式缓存                                     |Senparc.Weixin.Cache.<br>Redis.dll               | [![Cache.Redis][7.1]][7.2]<br>[![Redis][nuget-img-redis]][nuget-url-redis] |           ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 11| Memcached <br> 分布式缓存                            |Senparc.Weixin.Cache.<br>Memcached.dll           | [![Cache.Memcached][8.1]][8.2]<br>[![MC][nuget-img-mc]][nuget-url-mc] |         ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 12| [WebSocket <br>（独立项目）](https://github.com/JeffreySu/Senparc.WebSocket)    |Senparc.WebSocket.dll |  [![Senparc.WebSocket][10.1]][10.2]<br>[![WebSocket][nuget-img-ws]][nuget-url-ws]  |          ![.NET 4.5][net46Y]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n| 13| All In One 集成库       |Senparc.Weixin.All.dll                               | [![Senparc.Weixin.All][14.1]][14.2]<br>[![Senparc.Weixin.All][nuget-img-base]][nuget-url-base]  |         ![.NET 4.5][net46N]    ![.NET Standard 2.0/2.1][core20Y]   ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8] \n\n#### 图例\n| ![.NET 4.6][net46Y] | ![.NET Standard 2.x][core20Y] | ![.NET 5.0 / 6.0 / 7.0 / 8.0][net8]  \n|--|--|--|\n| .NET Framework 4.6.2+      |  .NET Standard 2.0 / 2.1  |   .NET 8.0，向下兼容 .NET 5.0-7.0\n\n> [!WARNING]\n> 1. 自 2019 年 5 月 1 日起，.NET Framework 3.5 及 4.0 停止更新，最后一个 .NET Framework 3.5 + 4.0 稳定版[点击这里](https://github.com/JeffreySu/WeiXinMPSDK/releases/tag/v16.6.15)。<br>\n> 2. 自 2022 年 4 月 3 日起，.NET Framework 4.5 升级为 4.6.2，最后一个 .NET Framework 4.5 的稳定版[点击这里](https://github.com/JeffreySu/WeiXinMPSDK/releases/tag/v16.17.9)。<br>\n> 3. 如果您还在使用 .NET Framework，建议您在 2027 年 1 月 12 日之间，将 .NET Framework 应用升级至 .NET Framework 4.8+，彼时官方将停止对 .NET Framework 4.6.2 的支持（[查看](https://learn.microsoft.com/en-us/lifecycle/products/microsoft-net-framework)）。<br>\n> 4. 使用 `Senparc.Weixin.All` 集成库可一次性自动引用所有模块。\n\t\n\t\n[1.1]: https://img.shields.io/nuget/v/Senparc.Weixin.svg?style=flat\n[1.2]: https://www.nuget.org/packages/Senparc.Weixin\n[2.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.svg?style=flat\n[2.2]: https://www.nuget.org/packages/Senparc.Weixin.MP\n[3.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.MVC.svg?style=flat\n[3.2]: https://www.nuget.org/packages/Senparc.Weixin.MP.MVC\n[4.1]: https://img.shields.io/nuget/v/Senparc.Weixin.QY.svg?style=flat\n[4.2]: https://www.nuget.org/packages/Senparc.Weixin.QY \n[5.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Work.svg?style=flat\n[5.2]: https://www.nuget.org/packages/Senparc.Weixin.Work\n[6.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Open.svg?style=flat\n[6.2]: https://www.nuget.org/packages/Senparc.Weixin.Open\n[7.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Cache.Redis.svg?style=flat\n[7.2]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis\n[8.1]: https://img.shields.io/nuget/v/Senparc.Weixin.Cache.Memcached.svg?style=flat\n[8.2]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached\n[9.1]: https://img.shields.io/nuget/v/Senparc.Weixin.WxOpen.svg?style=flat\n[9.2]: https://www.nuget.org/packages/Senparc.Weixin.WxOpen\n[10.1]: https://img.shields.io/nuget/v/Senparc.WebSocket.svg?style=flat\n[10.2]: https://www.nuget.org/packages/Senparc.WebSocket\n[11.1]: https://img.shields.io/nuget/v/Senparc.Weixin.MP.CoreMVC.svg?style=flat\n[11.2]: https://www.nuget.org/packages/Senparc.Weixin.MP.CoreMVC\n[12.1]: https://img.shields.io/nuget/v/Senparc.Weixin.TenPay.svg?style=flat\n[12.2]: https://www.nuget.org/packages/Senparc.Weixin.TenPay\n[13.1]: https://img.shields.io/nuget/v/Senparc.Weixin.TenPayV3.svg?style=flat\n[13.2]: https://www.nuget.org/packages/Senparc.Weixin.TenPayV3\n[14.1]: https://img.shields.io/nuget/v/Senparc.Weixin.All.svg?style=flat\n[14.2]: https://www.nuget.org/packages/Senparc.Weixin.All\n\n[net46Y]: https://img.shields.io/badge/.NET%20Framework%204.6+-Y-brightgreen.svg\n[net46N]: https://img.shields.io/badge/.NET%20Framework%204.6+-N-lightgrey.svg\n[net46N-]: https://img.shields.io/badge/.NET%20Framework%204.6+----lightgrey.svg\n[core20Y]: https://img.shields.io/badge/.NET%20Standard2.x-Y-brightgreen.svg\n[net8]: https://img.shields.io/badge/.NET%208.0-Y-brightgreen.svg\n\n\n[nuget-img-base]: https://img.shields.io/nuget/dt/Senparc.Weixin.svg\n[nuget-url-base]: https://www.nuget.org/packages/Senparc.Weixin\n[nuget-img-mp]: https://img.shields.io/nuget/dt/Senparc.Weixin.MP.svg\n[nuget-url-mp]: https://www.nuget.org/packages/Senparc.Weixin.MP\n[nuget-img-mvc]: https://img.shields.io/nuget/dt/Senparc.Weixin.MP.Mvc.svg\n[nuget-url-mvc]: https://www.nuget.org/packages/Senparc.Weixin.MP.Mvc\n[nuget-img-tenpay]: https://img.shields.io/nuget/dt/Senparc.Weixin.TenPay.svg\n[nuget-url-tenpay]: https://www.nuget.org/packages/Senparc.Weixin.TenPay\n[nuget-img-tenpayv3]: https://img.shields.io/nuget/dt/Senparc.Weixin.TenPayV3.svg\n[nuget-url-tenpayv3]: https://www.nuget.org/packages/Senparc.Weixin.TenPayV3\n[nuget-img-qy]: https://img.shields.io/nuget/dt/Senparc.Weixin.QY.svg\n[nuget-url-qy]: https://www.nuget.org/packages/Senparc.Weixin.QY\n[nuget-img-work]: https://img.shields.io/nuget/dt/Senparc.Weixin.Work.svg\n[nuget-url-work]: https://www.nuget.org/packages/Senparc.Weixin.Work\n[nuget-img-open]: https://img.shields.io/nuget/dt/Senparc.Weixin.Open.svg\n[nuget-url-open]: https://www.nuget.org/packages/Senparc.Weixin.Open\n[nuget-img-redis]: https://img.shields.io/nuget/dt/Senparc.Weixin.Cache.Redis.svg\n[nuget-url-redis]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Redis\n[nuget-img-mc]: https://img.shields.io/nuget/dt/Senparc.Weixin.Cache.Memcached.svg\n[nuget-url-mc]: https://www.nuget.org/packages/Senparc.Weixin.Cache.Memcached\n[nuget-img-wxopen]: https://img.shields.io/nuget/dt/Senparc.Weixin.WxOpen.svg\n[nuget-url-wxopen]: https://www.nuget.org/packages/Senparc.Weixin.WxOpen\n[nuget-img-ws]: https://img.shields.io/nuget/dt/Senparc.WebSocket.svg\n[nuget-url-ws]: https://www.nuget.org/packages/Senparc.WebSocket\n\n\n## 功能支持\n\n* 已经支持大部分微信 8.x API，包括微信支付、自定义菜单/个性化菜单、模板信息接口、素材上传接口、群发接口、多客服接口、支付接口、微小店接口、卡券接口、发票接口等等。\n* 已支持微信公众号、小程序、企业号、开放平台、微信支付等各个模块。\n* 已经支持用户会话上下文（解决服务器无法使用 Session 处理用户信息的问题）。\n* 已经全面支持微信公众号、小程序、企业号（企业微信）、微信支付V2/V3、开放平台的最新 API。\n* 已经支持分布式缓存及缓存策略扩展（默认支持：本地缓存、Redis、Memcached，可自由扩展），开发过程无需关心所使用缓存的类型，可在配置文件或运行过程中自由切换。\n\n> 1.目前官方的 API 都已完美集成，除非有特殊说明，所有升级都会尽量确保向下兼容，所以已经发布的版本请放心使用或直接升级（覆盖）最新的 dll，建议使用 [Nuget](https://www.nuget.org/) 进行更新。<br>\n> 2. 您也可以自行修改并编译代码，打开 [Senparc.Weixin.Sample.Net8.sln](/Samples/All/net8-mvc/) 解决方案即可看到所有源码。当编译模式为 `Release` 时，将自动生成本地 Nuget 包（默认生成到 `/src/BuildOutPut/` 文件夹下）。\n\n## 💾 源码项目文件夹说明（src文件夹下）\n\n<details>\n<summary>展开</summary>\n\n\n| 文件夹 | 说明 |\n|--------|--------|\n|[Senparc.WebSocket](src/Senparc.WebSocket/)|WebSocket 模块|\n|[Senparc.Weixin.Cache](src/Senparc.Weixin.Cache)\t\t\t\t\t\t\t|Senparc.Weixin.Cache.Memcached.dll 、 Senparc.Weixin.Cache.Redis.dll 等分布式缓存扩展方案|\n|[Senparc.Weixin.AspNet](src/Senparc.Weixin.AspNet)\t\t\t\t\t\t\t|Senparc.Weixin.AspNet.dll 专为 Web 提供支撑的类库|\n|[Senparc.Weixin.MP.MvcExtension](src/Senparc.Weixin.MP.MvcExtension)\t\t|Senparc.Weixin.MP.MvcExtension.dll源码，为 MVC 项目提供的扩展包 |\n|[Senparc.Weixin.MP](src/Senparc.Weixin.MP)\t\t\t\t\t\t\t\t\t|Senparc.Weixin.MP.dll 微信公众账号SDK源代码|\n|[Senparc.Weixin.MP.Middleware](src/Senparc.Weixin.MP.Middleware)           |Senparc.Weixin.MP.Middleware.dll 微信公众账号消息中间件源代码|\n|[Senparc.Weixin.Open](src/Senparc.Weixin.Open)\t\t\t\t\t\t\t\t|Senparc.Weixin.Open.dll 第三方开放平台SDK源代码|\n|[Senparc.Weixin.TenPay](src/Senparc.Weixin.TenPay)\t\t\t\t\t\t\t|Senparc.Weixin.TenPay.dll & Senparc.Weixin.TenPayV3.dll 包含微信支付 [V2](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPay) 和 [V3](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/src/Senparc.Weixin.TenPay/Senparc.Weixin.TenPayV3) 的源代码|\n|[Senparc.Weixin.Work](src/Senparc.Weixin.Work)\t\t\t\t\t\t\t\t|Senparc.Weixin.Work.dll 企业微信SDK源代码|\n|[Senparc.Weixin.Work.Middleware](src/Senparc.Weixin.Work.Middleware)       |Senparc.Weixin.Work.Middleware.dll 企业微信消息中间件源代码|\n|[Senparc.Weixin.WxOpen](src/Senparc.Weixin.WxOpen)\t\t\t\t\t\t\t|Senparc.Weixin.WxOpen.dll 微信小程序SDK源代码，包括小游戏|\n|[Senparc.Weixin.WxOpen.Middleware](src/Senparc.Weixin.WxOpen.Middleware)   |Senparc.Weixin.WxOpen.Middleware.dll 微信小程序消息中间件源代码，包括小游戏|\n|[Senparc.Weixin](src/Senparc.Weixin)\t\t\t\t\t\t\t\t\t\t|所有Senparc.Weixin.[x].dll 基础类库源代码|\n</details>\n\n[进入文件夹](/src/)\n\n## 🖥️ Samples 文件夹说明（Samples文件夹下）\n\nSenparc.Weixin SDK 所有的模块的用法都保持了高度的一致，包括配置过程、AccessToken 管理、消息处理、服务消息、接口调用，等等。您只需参考任意一个模块的用法（推荐从`公众号`或`小程序`开始），就可以举一反三使用其他模块。\n\n从以下 Sample 中您可以了解到每个独立模块的配置和使用方式，直接打开对应文件夹下的 `.sln` 解决方案即可查看对应源码，运行即可看到说明文档。其中 `All` 文件夹中包含了更多综合和进阶功能的演示。\n\n| 文件夹 | 说明 |  SDK 引用方式\n|--------|--------|----|\n|[MP](/Samples/MP/)          |   公众号 | Nuget 包\n|[TenPayV2](/Samples/TenPayV2/)    |   微信支付 V1 和 V2  | Nuget 包\n|[TenPayV3](/Samples/TenPayV3/)    |   微信支付 V3（TenPay APIv3） | Nuget 包\n|[Work](/Samples/Work/)        |   企业微信 | Nuget 包\n|[WxOpen](/Samples/WxOpen/)      |   微信小程序 | Nuget 包\n|[Shared](/Samples/Shared)      |   所有 Sample 都需要用到的共享文件\n|[All](/Samples/All/)         |   包含微信公众号、小程序、微信支付、企业微信等所有功能的混合场景演示，<br>推荐用于集成多个平台的项目，或许要进行深度开发的场景参考（进阶） | \n| ┣ [All/console](/Samples/All/console)\t\t\t|命令行 Console Demo（.NET Core）| Nuget 包\n| ┣ [All/net45-mvc](/Samples/All/net45-mvc)\t\t\t\t\t\t|可以直接发布使用的Demo（.NET Framework 4.5 + ASP.NET MVC）|  Nuget 包\n| ┗ [All/net8-mvc](/Samples/All/net8-mvc)\t\t\t|可以直接发布使用的 Demo（.NET 8.0），兼容 .NET 5.0、6.0、7.0 和 .NET Core | <strong>源码（最新）<strong>\n\n[进入 Samples 文件夹](/Samples/)\n\n\n<!-- ## 私人定制你的微信项目 Sample\n\nWeb 版：<a href=\"https://www.cnblogs.com/szw/p/WeChatSampleBuilder-V2.html#Web-WeChatSampleBuilder\" target=\"_blank\">查看教程</a>。\n\n<img src=\"https://sdk.weixin.senparc.com/images/WeChatSampleBuilder-v0.2.0-web.png?t=1\" width=\"700\" alt=\"WeChatSampleBuilder\" /> -->\n\n<!-- \n2. 桌面版：登录 <a href=\"https://weixin.senparc.com/User\" target=\"_blank\">https://weixin.senparc.com/User</a>下载 WeChatSampleBuilder 工具，并查看使用说明。\n\n<img src=\"https://sdk.weixin.senparc.com/images/WeChatSampleBuilder-v0.2.0.png?t=1\" width=\"700\" alt=\"WeChatSampleBuilder\" />\n-->\n<!-- > 注意：使用 WeChatSampleBuilder 工具只是方便您简化 Sample 代码进行测试和学习，并不能帮助您生成完整的带有业务逻辑的生产环境项目。如需构建生产环境项目，请参考完整的 Demo 或其他教程，推荐使用已有的系统框架进行项目搭建，如 [NeuCharFramework](https://github.com/NeuCharFramework/NCF)。 -->\n\n\n## 🎨 资源\n\n1. 官网地址：https://weixin.senparc.com/\n2. 在线 Demo 地址（.NET 8.0，向下兼容 .NET 6.0、7.0 和 .NET Core）：https://sdk.weixin.senparc.com/\n3. 微信开发系列教程：https://www.cnblogs.com/szw/p/weixin-course-index.html\n4. 微信技术交流社区：https://weixin.senparc.com/QA\n5. 自定义菜单在线编辑工具：https://sdk.weixin.senparc.com/Menu\n6. 在线消息测试工具：https://sdk.weixin.senparc.com/SimulateTool\n7. 缓存测试工具：https://sdk.weixin.senparc.com/Cache/Test\n8. chm帮助文档下载：https://sdk.weixin.senparc.com/Document\n9. 源代码及最新更新：https://github.com/JeffreySu/WeiXinMPSDK\n10. 微信开发资源集合：https://github.com/JeffreySu/WeixinResource\n11. 《微信开发深度解析》阅读辅助系统：https://book.weixin.senparc.com\n12. 购买《微信开发深度解析》：[https://item.jd.com/12220004.html](https://book.weixin.senparc.com/book/link?code=github-homepage-resource)\n13. 《微信公众号 + 小程序快速开发》视频教程：[https://github.com/JeffreySu/WechatVideoCourse](https://github.com/JeffreySu/WechatVideoCourse)\n\n* 技术交流QQ群：\n\n>1群（公众号）：300313885<br>\n> 14群（视频课程学员群）：588231256<br>\n> 10群（分布式缓存群）：246860933<br>\n> 12群（微信小程序）：108830388<br>\n> 16群（开放平台）：860626938<br>\n> *`以下群已满：`*<br>\n> `2群：293958349（已满），3群：342319110（已满）`<br>\n> `4群：372212092（已满）， 5群：377815480（已满），6群：425898825（已满）`<br>\n> `7群：482942254（已满），8群：106230270（已满），9群：539061281（已满）`<br>\n> `11群：553198593（已满），13群：183424136（开放平台，已满），15群：289181996（已满）`\n\n* 业务联系QQ：498977166\n\n<!-- * 新浪微博：[@苏震巍](http://weibo.com/jeffreysu1984) -->\n\n如果这个项目对您有用，我们欢迎各方任何形式的捐助，也包括参与到项目代码更新或意见反馈中来。谢谢！\n\n\n资金捐助：[进入](http://sdk.weixin.senparc.com#donate)\n\n\n## 📖 Senparc 官方图书教程\n\n<img src=\"https://sdk.weixin.senparc.com/images/book-cover-front-small-3d.png\" width=\"400\" align=\"right\">\n\n> 由 Jeffrey Su 和盛派团队耗时 2 年完成的微信开发图书已经出版，书名：《微信开发深度解析：公众号、小程序高效开发秘籍》，全书配套辅助阅读系统已经上线： [BookHelper](http://book.weixin.senparc.com)。<br>\n> 欢迎购买正版图书：[【购买正版】](https://book.weixin.senparc.com/book/link?code=github-homepage)<br>\n> 图书出版时的代码版本快照见分支 [BookVersion1](https://github.com/JeffreySu/WeiXinMPSDK/tree/BookVersion1)。\n\n\n## 💻 Senparc 官方视频教程\n\n> 为了帮助大家更直观地了解微信开发细节，同时结合《微信开发深度解析》图书进行学习，我们成立“盛派课堂”小组，开设了微信开发视频课程，帮助大家从多个维度学习微信开发以及 .NET 开发过程中的诸多技巧。<br>\n> 视频包含两大部分：<br>\n> 1. 微信开发基础技能<br>\n> 2. 公众号及小程序案例实战<br>\n> \n> 共计 60 课时，配有番外篇。<br>\n> 目前视频已经在网易云课堂上线，课程制作精良、内容充实，被选为“A”级课程，[【观看视频】](https://book.weixin.senparc.com/book/videolinknetease?code=github-homepage)，[【查看课程代码及课件】](https://github.com/JeffreySu/WechatVideoCourse)。\n\n\n## 🧪 关注测试账号体验功能（SenparcRobot）：\n|盛派网络小助手公众号|盛派网络小助手小程序|BookHelper|\n|--|--|--|\n| <img src=\"https://sdk.weixin.senparc.com/Images/qrcode.jpg\" width=\"258\" /> | <img src=\"https://sdk.weixin.senparc.com/Images/SenparcRobot_MiniProgram.jpg\" width=\"258\" /> | <img src=\"https://sdk.weixin.senparc.com/Images/qrcode-bookhelper.jpg\" width=\"258\" /> |\n\n## ✋ 贡献代码\n\n> 如果需要使用或修改此项目的源代码，建议先Fork。也欢迎将您修改的通用版本Pull Request过来。\n\n1. Fork\n2. 创建您的特性分支 (`git checkout -b my-new-feature`)\n3. 提交您的改动 (`git commit -am 'Added some feature'`)\n4. 将您的修改记录提交到远程 `git` 仓库 (`git push origin my-new-feature`)\n5. 然后到 github 网站的该 `git` 远程仓库的 `my-new-feature` 分支下发起 Pull Request\n（请提交到 `Developer` 分支，不要直接提交到 `master` 分支）\n\n<!--\n### /Controllers/WeixinController.cs\n\n下面的Token需要和微信公众平台后台设置的Token同步，如果经常更换建议写入Web.config等配置文件（实际使用过程中两列建议使用数字+英文大小写改写Token，Token一旦被破解，微信请求将很容易被伪造！）：\n```C#\npublic readonly string Token = \"weixin\";\n```\n下面这个Action（Get）用于接收并返回微信后台Url的验证结果，无需改动。地址如：http://domain/Weixin 或 http://domain/Weixin/Index\n```C#\n/// <summary>\n/// 微信后台验证地址（使用Get），微信后台的“接口配置信息”的Url填写如：http://weixin.senparc.com/weixin\n/// </summary>\n[HttpGet]\n[ActionName(\"Index\")]\npublic ActionResult Get(PostModel postModel, string echostr)\n{\n    if (CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))\n    {\n        return Content(echostr); //返回随机字符串则表示验证通过\n    }\n    else\n    {\n        return Content(\"failed:\" + postModel.Signature + \",\" \n            + MP.CheckSignature.GetSignature(postModel.Timestamp, postModel.Nonce, Token) + \"。\" +\n            \"如果你在浏览器中看到这句话，说明此地址可以被作为微信公众账号后台的Url，请注意保持Token一致。\");\n    }\n}\n```\n上述方法中的PostModel是一个包括了了Signature、Timestamp、Nonce（由微信服务器通过请求时的Url参数传入），以及AppId、Token、EncodingAESKey等一系列内部敏感的信息（需要自行传入）的实体类，同时也会在后面用到。\n\n\n下面这个Action（Post）用于接收来自微信服务器的Post请求（通常由用户发起），这里的if必不可少，之前的Get只提供微信后台保存Url时的验证，每次Post必须重新验证，否则很容易伪造请求。\n```C#\n/// <summary>\n/// 用户发送消息后，微信平台自动Post一个请求到这里，并等待响应XML\n/// </summary>\n[HttpPost]\n[ActionName(\"Index\")]\npublic ActionResult Post(PostModel postModel)\n{\n    if (!CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))\n    {\n        return Content(\"参数错误！\");\n    }\n    ...\n}\n```\n\n### 如何处理微信公众账号请求？\n\nSenparc.Weixin.MP提供了2中处理请求的方式，[传统方法](https://github.com/JeffreySu/WeiXinMPSDK/wiki/处理微信信息的常规方法)及使用[MessageHandler](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8MessageHandler%E7%AE%80%E5%8C%96%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B)处理方法（推荐）。上面两个方法在wiki中已经有比较详细的说明，这里简单举例MessageHandler的处理方法。\n\nMessageHandler的处理流程非常简单：\n``` C#\n[HttpPost]\n[ActionName(\"Index\")]\npublic ActionResult Post(PostModel postModel)\n{\n    if (!CheckSignature.Check(postModel.Signature, postModel.Timestamp, postModel.Nonce, Token))\n    {\n        return Content(\"参数错误！\");\n    }\n\n    postModel.Token = Token;\n    postModel.EncodingAESKey = EncodingAESKey;//根据自己后台的设置保持一致\n    postModel.AppId = AppId;//根据自己后台的设置保持一致\n\n    var messageHandler = new CustomMessageHandler(Request.InputStream, postModel);//接收消息（第一步）\n\n    messageHandler.Execute();//执行微信处理过程（第二步）\n\n    return new FixWeixinBugWeixinResult(messageHandler);//返回（第三步）\n}\n```\n整个消息除了postModel的赋值以外，接收（第一步）、处理（第二步）、返回（第三步）分别只需要一行代码。\n\n上述代码中的CustomMessageHandler是一个自定义的类，继承自Senparc.Weixin.MP.MessageHandler.cs。MessageHandler是一个抽象类，包含了执行各种不同请求类型的抽象方法（如文字，语音，位置、图片等等），我们只需要在自己创建的CustomMessageHandler中逐个实现这些方法就可以了。刚建好的CustomMessageHandler.cs如下：\n\n```C#\nusing System;\nusing System.IO;\nusing Senparc.Weixin.MP.MessageHandlers;\nusing Senparc.Weixin.MP.Entities;\n\nnamespace Senparc.Weixin.MP.Sample.CustomerMessageHandler\n{\n    public class CustomMessageHandler : MessageHandler<MessageContext>\n    {\n        public public CustomMessageHandler(Stream inputStream, PostModel postModel, int maxRecordCount = 0)\n            : base(inputStream, postModel, maxRecordCount)\n        {\n\n        }\n\n        public override IResponseMessageBase DefaultResponseMessage(IRequestMessageBase requestMessage)\n        {\n            //ResponseMessageText也可以是News等其他类型\n            var responseMessage = CreateResponseMessage<ResponseMessageText>();\n            responseMessage.Content = \"这条消息来自DefaultResponseMessage。\";\n            return responseMessage;\n        }\n\n        public override IResponseMessageBase OnTextRequest(RequestMessageText requestMessage)\n        {\n            //...\n        }\n\n        public override IResponseMessageBase OnVoiceRequest(RequestMessageVoice requestMessage)\n        {\n            //...\n        }\n\n        //更多没有重写的OnXX方法，将默认返回DefaultResponseMessage中的结果。\n        ....\n    }\n}\n```\n\n其中OnTextRequest、OnVoiceRequest等分别对应了接收文字、语音等不同的请求类型。\n\n比如我们需要对文字类型请求做出回应，只需要完善OnTextRequest方法：\n```C#\n      public override IResponseMessageBase OnTextRequest(RequestMessageText requestMessage)\n      {\n          //TODO:这里的逻辑可以交给Service处理具体信息，参考OnLocationRequest方法或/Service/LocationSercice.cs\n          var responseMessage = CreateResponseMessage<ResponseMessageText>();\n          responseMessage.Content = string.Format(\"您刚才发送了文字信息：{0}\", requestMessage.Content);\n          return responseMessage;\n      }\n```\n这样CustomMessageHandler在执行messageHandler.Execute()的时候，如果发现请求信息的类型是文本，会自动调用以上代码，并返回代码中的responseMessage作为返回信息。responseMessage可以是IResponseMessageBase接口下的任何类型（包括文字、新闻、多媒体等格式）。\n\n从v0.4.0开始，MessageHandler增加了对用户会话上下文的支持，用于解决服务器上无法使用Session管理用户会话的缺陷。详见：[用户上下文WeixinContext和MessageContext](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E7%94%A8%E6%88%B7%E4%B8%8A%E4%B8%8B%E6%96%87WeixinContext%E5%92%8CMessageContext)\n\n-->\n\n\n## 👩‍🏫 如何使用 .NET Core 开发\n\n> 当前分支包含了 .NET Framework 4.6.2+ 及 .NET 6.0/7.0/8.0 的全版本代码（已经不更新的版本请查看 [release](https://github.com/JeffreySu/WeiXinMPSDK/releases) 快照）。<br>\n> 其中 .NET Framework 的 Demo 位于 `/src/Samples/All/net45-mvc` 目录下，<br>\n> 【推荐】.NET 8.0（向下兼容 .NET 5.0、6.0、7.0 及 .NET Core 3.1 等更低版本） 的 Demo 位于 `/Samples/All/net8-mvc` 目录下。<br><br>\n> 注意：以上 Sample 中，`net8-mvc` 中的 Sample 直接引用了每个模块的源码，使用 `Release` 编译后可生成兼容不同版本的 Senaprc.Weixin SDK 库。\n\n## ↕️ 使用Nuget安装到项目中\n\n各个模块的 Nuget 安装方式：《[使用 Nuget 将 SDK 安装到项目中](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E4%BD%BF%E7%94%A8-Nuget-%E5%B0%86-SDK-%E5%AE%89%E8%A3%85%E5%88%B0%E9%A1%B9%E7%9B%AE%E4%B8%AD)》\n\n## 🏬 如何部署\n\n### 1) 部署到 Azure App Service\n\n[App Service]( https://docs.microsoft.com/zh-cn/azure/app-service/azure-web-sites-web-hosting-plans-in-depth-overview ) 是 Microsoft Azure 推出的 Web 服务，对 .NET 有很好的支持。部署步骤详见：[《将微信站点部署到 Azure 中》](https://github.com/JeffreySu/WeiXinMPSDK/wiki/%E5%B0%86%E5%BE%AE%E4%BF%A1%E7%AB%99%E7%82%B9%E9%83%A8%E7%BD%B2%E5%88%B0-Azure-%E4%B8%AD)。\n\n### 2) 部署到任意服务器的 FTP\n\n在 Web 服务器上安装 FTP 服务（推荐 [FileZilla Server](https://filezilla-project.org/download.php?type=server)），直接使用 FTP 直接上传本地已经编译好的代码（本项项目 [Samples](https://github.com/JeffreySu/WeiXinMPSDK/tree/master/Samples) 中对应的是 [Senparc.Weixin.Sample.Net8](https://github.com/JeffreySu/WeiXinMPSDK/tree/Developer/Samples/All/net8-mvc)，编译后即可直接使用，无需修改代码）。如果使用 Azure App Service 或其他云服务，通常 FTP 也都是开通的。\n\n\n<!--\n已实现功能\n-------------\n* 微信公众号\n>   - [x] 接收/发送消息（事件）\n>   - [x] 自定义菜单 & 个性化菜单\n>   - [x] 消息管理\n>   - [x] OAuth授权\n>   - [x] JSSDK\n>   - [x] 微信支付\n>   - [x] 用户管理\n>   - [x] 素材管理\n>   - [x] 账号管理\n>       - [x] 带参数二维码\n>       - [x] 长链接转短链接接口\n>       - [x] 微信认证事件推送\n>   - [x] 数据统计\n>   - [x] 微信小店\n>   - [x] 微信卡券\n>       - [x] 卡券事件推送\n>           - [ ] 买单事件推送\n>           - [ ] 会员卡内容更新事件推送\n>           - [ ] 库存报警事件推送\n>           - [ ] 券点流水详情事件推送\n>   - [x] 微信门店\n>   - [x] 微信智能\n>   - [x] 微信设备功能\n>   - [x] 多客服功能\n>   - [x] 微信摇一摇周边\n>   - [x] 微信连WI-FI（未完整）\n>   - [x] 微信扫一扫（商家）\n>       - [ ] 扫一扫事件推送\n>           - [ ] 打开商品主页事件推送\n>           - [ ] 关注公众号事件推送\n>           - [ ] 进入公众号事件推送\n>           - [ ] 地理位置信息异步推送\n>           - [ ] 商品审核结果推送\n\n* 微信开放平台\n>   - [x] 网站应用\n>   - [x] 公众号第三方平台\n\n\n* 微信企业号\n>\t- [x] 管理通讯录\n>\t- [x] 管理素材文件\n>\t- [x] 管理企业号应用\n>\t- [x] 接收消息与事件\n>\t- [x] 发送消息\n>\t- [x] 自定义菜单\n>\t- [x] 身份验证接口\n>\t- [x] JSSDK\n>\t- [x] 第三方应用授权\n>\t    - [x] 第三方回调协议\n>\t        - [ ] 授权成功推送auth_code事件\n>\t        - [ ] 通讯录变更通知\n> \t- [x] 企业号授权登陆\n>\t- [x] 企业号微信支付\n>\t- [x] 企业回话服务\n>\t    - [ ] 企业会话回调\n>\t- [x] 企业摇一摇周边\n>\t- [ ] 企业卡券服务\n>\t    - [ ] 卡券事件推送\n>\t- [x] 企业客服服务\n>\t    - [ ] 客服回复消息回调\n\t    \n\n\n* 缓存策略\n>   - [x] 策略扩展接口\n>   - [x] 本地缓存\n>   - [x] Redis 扩展包\n>   - [x] Memcached 扩展包\n\n 欢迎开发者对未完成或需要补充的模块进行 Pull Request！\n-->\n\n## 🍴 各重要分支说明\n\n\n|  分支      |     说明         \n|-----------|---------------\n| master    | 正式发布的主分支，通常这个分支比较稳定，可以用于生产环境。\n| Developer | 1、开发分支，此分支通常为 Beta 版本，新版本都会先在此分支中进行开发，最后推送稳定版到 master 分支，如果想对新功能先睹为快，可以使用此分支。<br> 2、此分支同时兼容 .NET 4.5 / .NET Core / .NET Core 2.0 版本，建议 Pull Request 的代码都到这个分支下，而不是 master\n| BookVersion1 | 此分支为[《微信开发深度解析：微信公众号、小程序高效开发秘籍》](https://book.weixin.senparc.com/book/link?code=github-homepage2)图书出版时对应代码快照。\n| DotNET-Core_MySQL | 此分支为 .NET Core 环境下的 [Pomelo.EntityFrameworkCore.MySql](https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql) 框架集成演示分支。\n| NET4.0     | 仅支持 .NET 4.0 的分支，此分支已于2017年停止更新。.NET 4.0 最新代码随 master / Developer 分支同步更新\n| NET3.5     | 仅支持 .NET 3.5 的分支，此分支已于2015年停止更新。.NET 3.5 最新代码随 master / Developer 分支同步更新\n| Developer-Senparc.SDK | 此分支仅用于 Senparc 团队内部测试，可忽略。\n\n\n## 🍟 感谢贡献者\n\n感谢为此项目做出贡献的开发者，你们不光完善了这个项目，也为中国开源事业出了一份力，感谢你们！名单[点击这里](https://github.com/JeffreySu/WeiXinMPSDK/blob/master/Contributors.md)查看。\n\n<a href=\"https://github.com/JeffreySu/WeiXinMPSDK/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=JeffreySu/WeiXinMPSDK&max=200\" />\n</a>\n\n## 💰 捐助\n\n如果这个项目对您有用，我们欢迎各方任何形式的捐助，也包括参与到项目代码更新或意见反馈中来。谢谢！\n\n资金捐助：\n\n[![donate](http://sdk.weixin.senparc.com/Images/T1nAXdXb0jXXXXXXXX_s.png)](http://sdk.weixin.senparc.com#donate)\n\n## ⭐ Star 数量统计 \n\n[![starcharts stargazers over time](https://starchart.cc/JeffreySu/WeiXinMPSDK.svg)](https://starchart.cc/JeffreySu/WeiXinMPSDK)\n\n## 📎 License\n\nApache License Version 2.0\n\n```\nCopyright 2024 Jeffrey Su & Suzhou Senparc Network Technology Co.,Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file \nexcept in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the \nLicense is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, \neither express or implied. See the License for the specific language governing permissions \nand limitations under the License.\n```\nDetail: https://github.com/JeffreySu/WeiXinMPSDK/blob/master/license.md\n\n> [!TIP]\n> 100% 开源，支持商用。\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "微信资源",
          "type": "tree",
          "content": null
        },
        {
          "name": "规范文档",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}