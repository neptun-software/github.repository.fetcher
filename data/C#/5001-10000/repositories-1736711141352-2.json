{
  "metadata": {
    "timestamp": 1736711141352,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MathewSachin/Captura",
      "stars": 9953,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0810546875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n*.cs diff=csharp"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "# Build Output\nbin/\nobj/\n\n# NuGet\n*.nupkg\npackages/\n\n# Visual Studio\n.vs/\n.vscode/\npublish/\nTestResults/\n*.suo\n*.user\n\n# Cake\n/tools\n\n/temp/\n/dist/\n*.pfx\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3,
          "content": "# Contributor Covenant Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at `mathew DOT sachin DOT git AT outlook DOT com`. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at http://contributor-covenant.org/version/1/4"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6318359375,
          "content": "# Contributing\n\n### Star :star:\nThe easiest way to show your support is by starring the repository\n\n### Reporting Bugs\n- Check the [FAQ](https://mathewsachin.github.io/Captura/faq).\n- Check if an issue has already been reported. If so, comment on it and provide further info if any.\n- Follow the `Bug Report` issue template and provide relevant information.\n\n### Get in touch\nYou can chat with us on [Gitter](https://gitter.im/MathewSachin/Captura).\n\n### Contributing Code\n- Make sure to follow the code style followed throughout the project.\n- If you add a new dependency, make sure it is compatible with MIT license.\n  *e.g. GPL is not compatible with MIT license.*\n  Also, add the license file to the **licenses** folder.\n- If you want to add a new feature, discuss it first by opening an issue on GitHub whether it aligns with the goals of the project.\n- If possible, write tests.\n\n### Translation\nDon't send pull-requests for translation.\nUse [Crowdin](https://crowdin.com/project/captura) instead.\n\nIf you want to add a new language, open a discussion on the Crowdin project or a new issue here on GitHub to let me know.\n\n### Testing\nA lot of help is needed in this area.\nWriting tests or just manually testing and reporting or fixing the issues found would be a great help.\n\n### Website\nThe website in written in Angular and resides in a [separate repository](https://github.com/MathewSachin/ng-captura).\n\n### Donation :heavy_dollar_sign:\nYou can donate on [PayPal](https://www.paypal.me/MathewSachin).\n\nYou can see the list of donations on the [website](https://mathewsachin.github.io/Captura/donate).\n\n### Spread the word\nRecommend to others, write reviews, etc."
        },
        {
          "name": "Inno.iss",
          "type": "blob",
          "size": 2.1953125,
          "content": "; Override version before compiling\n;#define MyAppVersion \"6.0.0\"\n\n#define MyAppName \"Captura\"\n#define MyAppPublisher \"Mathew Sachin\"\n#define MyAppURL \"https://MathewSachin.github.io/Captura\"\n#define MyAppExeName \"captura.exe\"\n\n[Setup]\nAppId={{C1670C5E-5042-4300-9491-6BFFF963823F}\nAppName={#MyAppName}\nAppVersion={#MyAppVersion}\nAppVerName={#MyAppName} v{#MyAppVersion}\nAppPublisher={#MyAppPublisher}\nAppPublisherURL={#MyAppURL}\nAppSupportURL={#MyAppURL}\nAppUpdatesURL={#MyAppURL}\nDefaultDirName={pf}\\{#MyAppName}\nDisableProgramGroupPage=yes\nOutputBaseFilename=Captura-Setup\nCompression=lzma\nSolidCompression=yes\nSetupIconFile=src/Captura/Images/Captura.ico\nOutputDir=temp\n\n[Languages]\nName: \"english\"; MessagesFile: \"compiler:Default.isl\"\nName: \"danish\"; MessagesFile: \"compiler:Languages\\Danish.isl\"\nName: \"dutch\"; MessagesFile: \"compiler:Languages\\Dutch.isl\"\nName: \"finnish\"; MessagesFile: \"compiler:Languages\\Finnish.isl\"\nName: \"french\"; MessagesFile: \"compiler:Languages\\French.isl\"\nName: \"german\"; MessagesFile: \"compiler:Languages\\German.isl\"\nName: \"hebrew\"; MessagesFile: \"compiler:Languages\\Hebrew.isl\"\nName: \"italian\"; MessagesFile: \"compiler:Languages\\Italian.isl\"\nName: \"norwegian\"; MessagesFile: \"compiler:Languages\\Norwegian.isl\"\nName: \"polish\"; MessagesFile: \"compiler:Languages\\Polish.isl\"\nName: \"portuguese\"; MessagesFile: \"compiler:Languages\\Portuguese.isl\"\nName: \"russian\"; MessagesFile: \"compiler:Languages\\Russian.isl\"\nName: \"spanish\"; MessagesFile: \"compiler:Languages\\Spanish.isl\"\nName: \"ukrainian\"; MessagesFile: \"compiler:Languages\\Ukrainian.isl\"\n\n[Tasks]\nName: \"desktopicon\"; Description: \"{cm:CreateDesktopIcon}\"; GroupDescription: \"{cm:AdditionalIcons}\"; Flags: unchecked\n\n; Remove Assemblies from previous installation to prevent conflicts\n[InstallDelete]\nType: files; Name: \"{app}\\lib\\*.dll\"\n\n[Files]\nSource: \"dist\\*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs createallsubdirs\n\n[Icons]\nName: \"{commonprograms}\\{#MyAppName}\"; Filename: \"{app}\\{#MyAppExeName}\"\nName: \"{commondesktop}\\{#MyAppName}\"; Filename: \"{app}\\{#MyAppExeName}\"; Tasks: desktopicon\n\n[Run]\nFilename: \"{app}\\{#MyAppExeName}\"; Description: \"{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}\"; Flags: nowait postinstall skipifsilent"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0478515625,
          "content": "ï»¿MIT License\n\nCopyright (c) 2020 Mathew Sachin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.4873046875,
          "content": "![Captura](https://mathewsachin.github.io/Captura/assets/Banner.png)\n\n[![Master Build Status](https://img.shields.io/appveyor/ci/MathewSachin/Captura/master.svg?style=flat-square&logo=appveyor)](https://ci.appveyor.com/project/MathewSachin/Captura)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](LICENSE.md)\n[![Chat](https://img.shields.io/badge/chat-on_gitter-yellow.svg?style=flat-square&logo=gitter)](https://gitter.im/MathewSachin/Captura)\n\n[![Downloads](https://img.shields.io/github/downloads/MathewSachin/Captura/total.svg?style=flat-square)](https://mathewsachin.github.io/Captura/download)\n[![PayPal Donate](https://img.shields.io/badge/donate-PayPal-orange.svg?style=flat-square&logo=paypal)](https://mathewsachin.github.io/Captura/donate)\n[![Crowdin](https://d322cqt584bo4o.cloudfront.net/captura/localized.svg)](https://crowdin.com/project/captura)\n\n&copy; [Copyright 2019](LICENSE.md) Mathew Sachin\n\n:link: <https://mathewsachin.github.io/Captura/>\n\nCapture Screen, WebCam, Audio, Cursor, Mouse Clicks and Keystrokes.\n\n<a href=\"docs/Screenshots\"><img src=\"https://mathewsachin.github.io/Captura/assets/ScreenShots/Home.png\" style=\"max-width: 200px\"></a>\n\n## Features\n\n- Take ScreenShots\n- Capture ScreenCasts (Avi/Gif/Mp4)\n- Capture with/without Mouse Cursor\n- Capture Specific Regions, Screens or Windows\n- Capture Mouse Clicks or Keystrokes\n- Mix Audio recorded from Microphone and Speaker Output\n- Capture from WebCam.\n- Can be used from [Command-line](https://mathewsachin.github.io/Captura/cmdline) (*BETA*).\n- Available in [multiple languages](https://mathewsachin.github.io/Captura/translation)\n- Configurable [Hotkeys](https://mathewsachin.github.io/Captura/hotkeys)\n\n## Installation\n\n[latest]: https://github.com/MathewSachin/Captura/releases/latest\n\nPortable and Setup builds for the latest release can be downloaded from [here][latest].\n\n### Chocolatey\n\n```powershell\nchoco install captura -y\n```\n\n### Dev Builds\n\nSee the [Continuous Integration page](docs/CI.md).\n\n## Docs\n[Build Notes](docs/Build.md) | [System Requirements](docs/System-Requirements.md) | [Contributing](CONTRIBUTING.md)\n\n[ScreenShots](docs/Screenshots) | [Command-line](docs/Cmdline/README.md) | [Hotkeys](https://mathewsachin.github.io/Captura/hotkeys)\n\n[FAQ](docs/FAQ.md) | [Code of Conduct](CODE_OF_CONDUCT.md) | [Changelog](docs/Changelogs/README.md)\n\n[Continuous Integration](docs/CI.md) | [FFmpeg](docs/FFmpeg.md)\n\n## License\n\n[MIT License](LICENSE.md)\n\nCheck [here](licenses/) for licenses of dependencies.\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 0.7626953125,
          "content": "# Support\n\n## GitHub Issues\nUse [GitHub issues](https://github.com/MathewSachin/Captura/issues) for Bug Reports, Feature Requests and Questions.\n\n## Gitter\n[![Chat](https://img.shields.io/badge/chat-on_gitter-yellow.svg?style=flat-square)](https://gitter.im/MathewSachin/Captura)\n\n## Mail\nTry to use GitHub Issues instead of mailing, it allows us to track your Feature Requests and Bug Reports better.\n\nUse mail only in cases where personal information is involved.\nPlease specify what you want help with in the mail itself instead of asking for other contact information like phone number or social account details.\n\nAvoid sending mails regarding selling Captura or making a product similar to Captura as those won't be entertained.\n\n`mathew DOT sachin DOT git AT outlook DOT com`"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.0341796875,
          "content": "version: 0.0.{build}\n\nbranches:\n  except:\n    - l10n_master # Crowdin\n    - gh-pages # Website\n\nimage: Visual Studio 2019\n\nconfiguration:\n- Debug\n- Release\n\n# Used in build.cake\nenvironment:\n  imgur_client_id:\n    secure: Y/2WUSisk7oLSQNY1YzUxw==\n  yt_client_id:\n    secure: CPwUWOhTyZ2IiE+lvVilTKQz1h8sbn7FmkTJvtTlY6mJf2pDlfDhFmhDk1i47M9OPnD4y8a8BlB6yfkpVt/0U/PODAXPzFR0QuOWIfJvltc=\n  yt_client_secret:\n    secure: fsl/BRldjlmEJCroWa0iqw5tAxbGx84BbHT3BpzaeX4=\n  choco_key:\n    secure: h5jOVeiDmjLnF3EotkOhBFJharX/9TWx6OWykiXn30pWSIfVjSvAaCJM1Y48zjXr\n  git_key:\n    secure: eRA1NCG/iXaLTQaBbe2X5Tpje+2Hvk3WOPEP3ZLPFMqW7ZS0ZMTb4UXpw7w59pbc\n\ninstall:\n  - dotnet tool install -g Cake.Tool --version 0.32.1\n  - choco install innosetup -y --no-progress\n\n# Build using Cake\nbuild_script:\n  - ps: >-\n      $tag = $env:APPVEYOR_REPO_TAG_NAME\n\n      if ($tag -ne $null)\n      {\n        $env:prerelease = $tag.Contains(\"-\")\n\n        if ($tag -match \"^build-number-\")\n        {\n          Write-Host \"Build number tag is skipped\"\n          Exit-AppveyorBuild\n        }\n        else \n        {\n          dotnet-cake --target=CI --configuration=$env:CONFIGURATION --build_version=$tag\n        }\n      }\n      else\n      {\n        $version = \"v0.0.\" + $env:APPVEYOR_BUILD_NUMBER\n\n        dotnet-cake --target=CI --configuration=$env:CONFIGURATION --build_version=$version\n      }\n\ntest: off\n\nartifacts:\n  - path: temp/Captura-Portable.zip\n    name: Portable\n  - path: temp/Captura-Setup.exe\n    name: Setup\n  - path: temp/captura.*.nupkg\n    name: Chocolatey\n\ndeploy:\n  - provider: GitHub\n    tag: $(APPVEYOR_REPO_TAG_NAME)\n    release: Captura $(APPVEYOR_REPO_TAG_NAME)\n    prerelease: $(prerelease)\n    description: \"[Changelog](https://github.com/MathewSachin/Captura/tree/master/docs/Changelogs)\"\n    auth_token: $(git_key)\n    artifact: Portable, Setup\n    on:\n      configuration: Release\n      appveyor_repo_tag: true\n\n  - provider: NuGet\n    server: https://chocolatey.org\n    api_key: $(choco_key)\n    artifact: Chocolatey\n    on:\n      configuration: Release\n      appveyor_repo_tag: true"
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 3.9814453125,
          "content": "#tool nuget:?package=xunit.runner.console&version=2.4.1\n#l \"scripts/backup.cake\"\n#l \"scripts/constants.cake\"\n#l \"scripts/choco.cake\"\n#l \"scripts/apikeys.cake\"\n#l \"scripts/version.cake\"\nusing System.Collections.Generic;\n\n#region Fields\nreadonly var target = Argument(\"target\", \"Default\");\nreadonly var configuration = Argument(\"configuration\", Release);\n#endregion\n\n#region Functions\nvoid PopulateOutput()\n{\n    // Copy License files\n    CopyDirectory(licensesFolder, distFolder + Directory(\"licenses\"));\n\n    var consoleBinFolder = sourceFolder + Directory(\"Captura.Console/bin\") + Directory(configuration);\n    var uiBinFolder = sourceFolder + Directory(\"Captura/bin\") + Directory(configuration);\n    \n    // Copy Languages\n    CopyDirectory(uiBinFolder + Directory(\"Languages\"), distFolder + Directory(\"languages\"));\n\n    // Copy executables and config files\n    CopyFiles(consoleBinFolder.Path + \"/*.exe*\", distFolder);\n    CopyFiles(uiBinFolder.Path + \"/*.exe*\", distFolder);\n\n    // Copy Keymap files\n    CopyDirectory(uiBinFolder + Directory(\"keymaps\"), distFolder + Directory(\"keymaps\"));\n\n    // For Debug builds\n    if (configuration != Release)\n    {\n        // Assemblies, Symbol Files and XML Documentation\n        foreach (var extension in new [] { \".dll\", \".pdb\", \".xml\" })\n        {\n            CopyFiles(consoleBinFolder.Path + \"/*\" + extension, distFolder);\n            CopyFiles(uiBinFolder.Path + \"/*\" + extension, distFolder);\n        }\n    }\n    else\n    {\n        CopyDirectory(consoleBinFolder + Directory(\"lib\"), distFolder + Directory(\"lib\"));\n        CopyDirectory(uiBinFolder + Directory(\"lib\"), distFolder + Directory(\"lib\"));\n    }\n}\n\nvoid PackPortable()\n{\n    // Portable build directories\n    var settingsDir = distFolder + Directory(\"Settings\");\n    var codecsDir = distFolder + Directory(\"Codecs\");\n\n    CreateDirectory(settingsDir);\n    CreateDirectory(codecsDir);\n\n    Zip(distFolder, PortablePath);\n\n    var dirDeleteSettings = new DeleteDirectorySettings {\n        Recursive = true,\n        Force = true\n    };\n\n    DeleteDirectory(settingsDir, dirDeleteSettings);\n    DeleteDirectory(codecsDir, dirDeleteSettings);\n}\n#endregion\n\n#region Setup / Teardown\nSetup(context =>\n{\n    EnsureDirectoryExists(tempFolder);\n    EnsureDirectoryExists(distFolder);\n\n    HandleVersion();\n\n    if (configuration == Release)\n    {\n        EmbedApiKeys();\n    }\n});\n\nTeardown(context =>\n{\n    RestoreBackups();\n});\n#endregion\n\n#region Tasks\nvar buildTask = Task(\"Build\")\n    .Does(() =>\n{\n    MSBuild(slnPath, settings =>\n    {\n        settings.SetConfiguration(configuration)\n            .SetVerbosity(Verbosity.Minimal)\n            .WithTarget(\"Rebuild\")\n            .WithRestore()\n            .UseToolVersion(MSBuildToolVersion.VS2019);\n    });\n});\n\nvar cleanOutputTask = Task(\"Clean-Output\").Does(() => CleanDirectory(distFolder));\n\nvar populateOutputTask = Task(\"Populate-Output\")\n    .IsDependentOn(cleanOutputTask)\n    .IsDependentOn(buildTask)\n    .Does(() => PopulateOutput());\n\nvar packPortableTask = Task(\"Pack-Portable\")\n    .IsDependentOn(populateOutputTask)\n    .Does(() => PackPortable());\n\nvar packSetupTask = Task(\"Pack-Setup\")\n    .IsDependentOn(populateOutputTask)\n    .Does(() =>\n{\n    const string InnoScriptPath = \"Inno.iss\";\n\n    InnoSetup(InnoScriptPath, new InnoSetupSettings\n    {\n        QuietMode = InnoSetupQuietMode.Quiet,\n        ArgumentCustomization = Args => Args.Append($\"/DMyAppVersion={version}\")\n    });\n});\n\nvar packChocoTask = Task(\"Pack-Choco\")\n    .IsDependentOn(packPortableTask)\n    .Does(() => PackChoco());\n\nvar testTask = Task(\"Test\")\n    .IsDependentOn(buildTask)\n    .Does(() => XUnit2(sourceFolder + File($\"Tests/bin/{configuration}/**/Captura.Tests.dll\")));\n\nvar defaultTask = Task(\"Default\")\n    .IsDependentOn(packPortableTask)\n    .IsDependentOn(packSetupTask)\n    .IsDependentOn(packChocoTask);\n#endregion\n\nTask(\"CI\")\n    .IsDependentOn(testTask)\n    .IsDependentOn(packPortableTask)\n    .IsDependentOn(packSetupTask)\n    .IsDependentOn(packChocoTask)\n    .Does(() => { });\n\n// Start\nRunTarget(target);"
        },
        {
          "name": "choco",
          "type": "tree",
          "content": null
        },
        {
          "name": "crowdin.yml",
          "type": "blob",
          "size": 0.2255859375,
          "content": "files:\n  - source: /src/Captura.Loc/Languages/en.json\n    translation: /src/Captura.Loc/Languages/%two_letters_code%.json\n    languages_mapping:\n      two_letters_code:\n        zh-CN: zh-CN\n        zh-TW: zh-TW\n        pt-BR: pt-BR"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}