{
  "metadata": {
    "timestamp": 1736711154075,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "quasar/Quasar",
      "stars": 8916,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.9931640625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings \n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.7080078125,
          "content": "# Quasar Changelog\n\n## Quasar v1.4.1 [12.03.2023]\n* Added missing WOW64 subsystem autostart locations\n* Fixed file transfers of files larger than 2 GB\n* Fixed file transfers of empty files\n* Fixed browser credentials recovery\n* Fixed race condition on shutdown\n* Fixed IP Geolocation\n* Fixed opening remote shell sessions on non-system drives\n* Fixed incorrectly set file attributes on client installations\n* Fixed sorting of listview columns with numbers\n* Updated dependencies\n\n## Quasar v1.4.0 [05.06.2020]\n* **Changed target framework to .NET Framework 4.5.2**\n* **Changed license to MIT**\n* Changed message serializer to Protobuf\n* Changed versioning scheme to Semantic Versioning (https://semver.org/)\n* Added attended/unattended client modes\n* Added TLS 1.2 as transport encryption\n* Added UTC timestamps to log files\n* Added dependencies as NuGet packages\n* Updated dependencies\n* Updated message processing in client and server\n* Updated mouse and keyboard input to SendInput API\n* Fixed file transfer vulnerbilities ([#623](https://github.com/quasar/Quasar/issues/623))\n* Lots of under the hood changes for an upcoming plugin system\n\n## Quasar v1.3.0.0 [28.09.2016]\n* Added Registry Editor\n* Added Remote Webcam\n* Added Windows DPI scaling support\n* Added IPv6 support\n* Added ability to elevate Client\n* Added full Unicode support\n* Added Remote TCP Connections Viewer\n* Added option to hide sub directory of installation path\n* Improved cryptography\n* Fixed XSS vulnerability in Keylogger Logs\n* Fixed Remote Messagebox having wrong icon\n* Fixed FileZilla Recovery base64 decoding\n* Fixed UPnP discovery freezing in some cases\n* Fixed IP Geolocation\n* Fixed Client loses Administrator privileges on restart\n* Some minor improvements\n\n## Quasar v1.2.0.0 [12.10.2015]\n* Added Client restart on unhandled exceptions\n* Added additional settings to Keylogger (set/hide log-directory)\n* Added encrypted Keylogger logs\n* Improved Client Builder\n* Improved System Information\n* Improved File Manager behaviour when loading directories with many files\n* Improved Remote Shell (scrolls now correctly to the bottom when new text received)\n* Improved compatibility with many connected clients (1k+)\n* Improved AES encryption/decryption speed (if available, makes use of hardware accelerated AES)\n* Fixed Client not setting file attribute correctly on startup\n* Fixed Remote Desktop lagging with mouse input and maximized window\n* Some minor improvements\n\n## Quasar v1.1.0.0 [30.08.2015]\n* **Changed Target Framework to .NET Framework 4.0 Client Profile**\n* Added deletion of ZoneIdentifier file when installing\n* Improved Client installation error handling\n* Improved Client HardwareID generation\n* Improved Client-Server handshake\n* Support detection of multiple AVs, Firewalls, GPUs, CPUs\n* Fixed Builder Profile not saving correctly Installation Subfolder\n* Fixed Builder not validating input correctly\n* Fixed Builder creating Client with empty list of hosts\n* Fixed Settings Password not hashed when pressing 'Start listening'\n* Fixed Reverse Proxy using always wrong port\n* Fixed Server throwing NullReferenceException when closing and no Clients connected\n* Fixed Client reporting wrong uptime on systems with uptime longer than 49.7 days\n* Fixed Client installation path empty on Windows XP 32-bit in some scenarios\n* Fixed Client installation to system directory failing on 64-bit OS\n* Fixed Client uninstallation not working when file is marked as read-only\n* Fixed Client crashing after update on first start in some scenarios\n* Fixed Client crashing when list of hosts is empty (Client exits now)\n* Fixed Client not reconnecting when Server uses different password\n* Fixed Client registry access\n* Removed Statistics window, will be remade in a later version\n\n## Quasar v1.0.0.0 [22.08.2015]\n* **xRAT is now Quasar**\n* Added Password Recovery (Common Browsers and FTP Clients)\n* Added Server compatiblity with Mono (Server now runs on Linux with Mono installed)\n  * Client Builder works also on Linux/Mono\n* Added ability to upload batch files\n* Added Client support for multiple hosts\n* Added maximum simultaneous file downloads/uploads (current max: 2)\n* Fixed Remote Shell redirecting of standard output not working after redirecting error output\n* Fixed Remote Shell not displaying unicode characters correctly\n* Fixed Remote Desktop crash when changing screen resolution\n* Fixed File Manager would refresh directory when double-clicking files\n* Improved support for Windows 8 and above\n* Improved Remote Desktop (Speed, Full Mouse and Keyboard support)\n* Improved File Manager (Show name of drive, current path, upload files)\n* Improved UPnP support\n* Improved Geo IP support\n* Improved Builder UI\n* Switched from Protobuff to NetSerializer\n* Lots of under the hood changes for stability and performance\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.9013671875,
          "content": "# Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new pull request (PR)\n\n## Guidelines for pull requests:\n\n1. Respect the coding style of Quasar.\n2. Create a new branch for each PR.\n3. Single feature or bug-fix per PR.\n4. Make single commit per PR.\n5. Make your modification compact - don't reformat source code in your request. It makes code review more difficult.\n6. PR of reformatting (changing of ws/TAB, line endings or coding style) of source code won't be accepted. Use the issue tracker for your request instead.\n7. Typo fixing and code refactoring won't be accepted - please create issues with title started with TYPO to request the changing.\n\nIn short: The easier the code review is, the better the chance your pull request will get accepted.\n"
        },
        {
          "name": "Images",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2023 MaxXor\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quasar.Client",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quasar.Common.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quasar.Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quasar.Server",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quasar.sln",
          "type": "blob",
          "size": 2.5185546875,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.30104.148\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Quasar.Server\", \"Quasar.Server\\Quasar.Server.csproj\", \"{14CA405B-8BAC-48AB-9FBA-8FB5DF88FD0D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Quasar.Client\", \"Quasar.Client\\Quasar.Client.csproj\", \"{9F5CF56A-DDB2-4F40-AB99-2A1DC47588E1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Quasar.Common\", \"Quasar.Common\\Quasar.Common.csproj\", \"{C7C363BA-E5B6-4E18-9224-39BC8DA73172}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Quasar.Common.Tests\", \"Quasar.Common.Tests\\Quasar.Common.Tests.csproj\", \"{32A2A734-7429-47E6-A362-E344A19C0D85}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|AnyCPU = Debug|AnyCPU\n\t\tRelease|AnyCPU = Release|AnyCPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{14CA405B-8BAC-48AB-9FBA-8FB5DF88FD0D}.Debug|AnyCPU.ActiveCfg = Debug|Any CPU\n\t\t{14CA405B-8BAC-48AB-9FBA-8FB5DF88FD0D}.Debug|AnyCPU.Build.0 = Debug|Any CPU\n\t\t{14CA405B-8BAC-48AB-9FBA-8FB5DF88FD0D}.Release|AnyCPU.ActiveCfg = Release|Any CPU\n\t\t{14CA405B-8BAC-48AB-9FBA-8FB5DF88FD0D}.Release|AnyCPU.Build.0 = Release|Any CPU\n\t\t{9F5CF56A-DDB2-4F40-AB99-2A1DC47588E1}.Debug|AnyCPU.ActiveCfg = Debug|Any CPU\n\t\t{9F5CF56A-DDB2-4F40-AB99-2A1DC47588E1}.Debug|AnyCPU.Build.0 = Debug|Any CPU\n\t\t{9F5CF56A-DDB2-4F40-AB99-2A1DC47588E1}.Release|AnyCPU.ActiveCfg = Release|Any CPU\n\t\t{9F5CF56A-DDB2-4F40-AB99-2A1DC47588E1}.Release|AnyCPU.Build.0 = Release|Any CPU\n\t\t{C7C363BA-E5B6-4E18-9224-39BC8DA73172}.Debug|AnyCPU.ActiveCfg = Debug|Any CPU\n\t\t{C7C363BA-E5B6-4E18-9224-39BC8DA73172}.Debug|AnyCPU.Build.0 = Debug|Any CPU\n\t\t{C7C363BA-E5B6-4E18-9224-39BC8DA73172}.Release|AnyCPU.ActiveCfg = Release|Any CPU\n\t\t{C7C363BA-E5B6-4E18-9224-39BC8DA73172}.Release|AnyCPU.Build.0 = Release|Any CPU\n\t\t{32A2A734-7429-47E6-A362-E344A19C0D85}.Debug|AnyCPU.ActiveCfg = Debug|Any CPU\n\t\t{32A2A734-7429-47E6-A362-E344A19C0D85}.Debug|AnyCPU.Build.0 = Debug|Any CPU\n\t\t{32A2A734-7429-47E6-A362-E344A19C0D85}.Release|AnyCPU.ActiveCfg = Release|Any CPU\n\t\t{32A2A734-7429-47E6-A362-E344A19C0D85}.Release|AnyCPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {83BA842F-789A-4E7C-827D-AE8A710862A1}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3623046875,
          "content": "# Quasar\n\n[![Build status](https://ci.appveyor.com/api/projects/status/5857hfy6r1ltb5f2?svg=true)](https://ci.appveyor.com/project/MaxXor/quasar)\n[![Downloads](https://img.shields.io/github/downloads/quasar/Quasar/total.svg)](https://github.com/quasar/Quasar/releases)\n[![License](https://img.shields.io/github/license/quasar/Quasar.svg)](LICENSE)\n\n**Free, Open-Source Remote Administration Tool for Windows**\n\nQuasar is a fast and light-weight remote administration tool coded in C#. The usage ranges from user support through day-to-day administrative work to employee monitoring. Providing high stability and an easy-to-use user interface, Quasar is the perfect remote administration solution for you.\n\nPlease check out the [Getting Started](https://github.com/quasar/Quasar/wiki/Getting-Started) guide.\n\n## Screenshots\n\n![remote-shell](Images/remote-shell.png)\n\n![remote-desktop](Images/remote-desktop.png)\n\n![remote-files](Images/remote-files.png)\n\n## Features\n* TCP network stream (IPv4 & IPv6 support)\n* Fast network serialization (Protocol Buffers)\n* Encrypted communication (TLS)\n* UPnP Support (automatic port forwarding)\n* Task Manager\n* File Manager\n* Startup Manager\n* Remote Desktop\n* Remote Shell\n* Remote Execution\n* System Information\n* Registry Editor\n* System Power Commands (Restart, Shutdown, Standby)\n* Keylogger (Unicode Support)\n* Reverse Proxy (SOCKS5)\n* Password Recovery (Common Browsers and FTP Clients)\n* ... and many more!\n\n## Download\n* [Latest stable release](https://github.com/quasar/Quasar/releases) (recommended)\n* [Latest development snapshot](https://ci.appveyor.com/project/MaxXor/quasar)\n\n## Supported runtimes and operating systems\n* .NET Framework 4.5.2 or higher\n* Supported operating systems (32- and 64-bit)\n  * Windows 11\n  * Windows Server 2022\n  * Windows 10\n  * Windows Server 2019\n  * Windows Server 2016\n  * Windows 8/8.1\n  * Windows Server 2012\n  * Windows 7\n  * Windows Server 2008 R2\n* For older systems please use [Quasar version 1.3.0](https://github.com/quasar/Quasar/releases/tag/v1.3.0.0)\n\n## Compiling\nOpen the project `Quasar.sln` in Visual Studio 2019+ with installed .NET desktop development features and [restore the NuGET packages](https://docs.microsoft.com/en-us/nuget/consume-packages/package-restore). Once all packages are installed the project can be compiled as usual by clicking `Build` at the top or by pressing `F6`. The resulting executables can be found in the `Bin` directory. See below which build configuration to choose from.\n\n## Building a client\n| Build configuration         | Usage scenario | Description\n| ----------------------------|----------------|--------------\n| Debug configuration         | Testing        | The pre-defined [Settings.cs](/Quasar.Client/Config/Settings.cs) will be used, so edit this file before compiling the client. You can execute the client directly with the specified settings.\n| Release configuration       | Production     | Start `Quasar.exe` and use the client builder.\n\n## Contributing\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Roadmap\nSee [ROADMAP.md](ROADMAP.md)\n\n## Documentation\nSee the [wiki](https://github.com/quasar/Quasar/wiki) for usage instructions and other documentation.\n\n## License\nQuasar is distributed under the [MIT License](LICENSE).  \nThird-party licenses are located [here](Licenses).\n\n## Thank you!\nI really appreciate all kinds of feedback and contributions. Thanks for using and supporting Quasar!\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 1.9267578125,
          "content": "# Quasar Roadmap\n\n## Web API\nA web API (e.g. REST-like) allows to interact with the clients in more flexible ways and can be used to build a web interface for Quasar.\n\n## Transparent communication protocol\nTo open up the way for Quasar clients in different programming languages the communication protocol needs to be clearly specified and documented.\n\n## Cross-platform support\nA long-term goal is to support operating systems such as MacOS and Linux. The new .NET Core framework will help achieve this goal.\n\n## Command line (CLI) version of the server\nIt should be possible to use the server as a simple CLI tool to accept and forward (proxy) connections to other servers.\n\n## GUI overhaul\nThe GUI needs to be reworked in a more modern way, such as WPF or a web-based interface. WPF as GUI framework would drastically improve rendering performance of the remote desktop with the hardware accelerated rendering, similar to a web-based GUI depending on the used browser.\n\n## Allow different types of clients (permissioned clients)\nAllow clients with higher privileges (i.e. ability to administrate other lower privileged clients) connect to the server. This change would allow administrators to manage clients from their own computers with a lightweight client without having to run the server.\n\n## Allow client installation as Windows service\nCurrently the client is installed on a per-user basis and this makes it unflexible to remotly manage the machine when the user is not logged in. it also requires the client to be installed for every account who uses the machine. Machines which are used by multiple users would greatly benefit when Quasar could be run as a Windows service.\n\n## Basic client GUI\nAdd a basic GUI to the client to allow the user at any time to check the status if a specific feature is active. Additionally it can show a notification when the client gets installed or when someone requests permission to use remote desktop (similar to teamviewer).\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.23828125,
          "content": "version: BUILD{build}\n\nimage: Visual Studio 2019\nshallow_clone: true\n\nconfiguration:\n- Debug\n- Release\n\nbefore_build:\n  - nuget restore\n\nbuild:\n  project: Quasar.sln\n  parallel: true\n  verbosity: minimal\n\nartifacts:\n- path: Bin\n  name: binaries"
        }
      ]
    }
  ]
}