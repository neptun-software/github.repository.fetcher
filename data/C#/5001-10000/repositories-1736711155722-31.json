{
  "metadata": {
    "timestamp": 1736711155722,
    "page": 31,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "litedb-org/LiteDB",
      "stars": 8721,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.5576171875,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# MacOS files\n.DS_Store\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n.vs\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n\n# NuGet Packages Directory\npackages/\n## TODO: If the tool you use requires repositories.config uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n# This line needs to be after the ignore of the build folder (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n/WebShell/Properties/PublishProfiles/*.pubxml\n/WebShell/App_Data\n\n# Nuget 3.0 Files\n*.lock.json\n*.nuget.props\n*.nuget.targets\n\n# Intellij\n*.iml\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/dictionaries\n.idea/libraries\n\n# User-specific configurations\n.idea/libraries/\n.idea/.name\n.idea/compiler.xml\n.idea/copyright/profiles_settings.xml\n.idea/encodings.xml\n.idea/misc.xml\n.idea/modules.xml\n.idea/scopes/scope_settings.xml\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n.idea/datasources.xml\n.idea/dataSources.ids\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n### JetBrains+all Patch ###\n# Ignores the whole idea folder\n# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360\n\n.idea/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n/LiteDB.BadJsonTest\n"
        },
        {
          "name": "ConsoleApp1",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.060546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2022 Mauricio David\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LiteDB.Benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "LiteDB.Shell",
          "type": "tree",
          "content": null
        },
        {
          "name": "LiteDB.Stress",
          "type": "tree",
          "content": null
        },
        {
          "name": "LiteDB.Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "LiteDB.sln",
          "type": "blob",
          "size": 3.0712890625,
          "content": "ï»¿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.1.32328.378\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB\", \"LiteDB\\LiteDB.csproj\", \"{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB.Tests\", \"LiteDB.Tests\\LiteDB.Tests.csproj\", \"{74E32E43-2A57-4A38-BD8C-9108B0DCAEAA}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB.Shell\", \"LiteDB.Shell\\LiteDB.Shell.csproj\", \"{99887C89-CAE4-4A8D-AC4B-87E28B9B1F87}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB.Benchmarks\", \"LiteDB.Benchmarks\\LiteDB.Benchmarks.csproj\", \"{DF9C82C1-446F-458A-AA50-78E58BA17273}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB.Stress\", \"LiteDB.Stress\\LiteDB.Stress.csproj\", \"{FFBC5669-DA32-4907-8793-7B414279DA3B}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{74E32E43-2A57-4A38-BD8C-9108B0DCAEAA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{74E32E43-2A57-4A38-BD8C-9108B0DCAEAA}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{74E32E43-2A57-4A38-BD8C-9108B0DCAEAA}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{74E32E43-2A57-4A38-BD8C-9108B0DCAEAA}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{99887C89-CAE4-4A8D-AC4B-87E28B9B1F87}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{99887C89-CAE4-4A8D-AC4B-87E28B9B1F87}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{99887C89-CAE4-4A8D-AC4B-87E28B9B1F87}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{99887C89-CAE4-4A8D-AC4B-87E28B9B1F87}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{DF9C82C1-446F-458A-AA50-78E58BA17273}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{DF9C82C1-446F-458A-AA50-78E58BA17273}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{DF9C82C1-446F-458A-AA50-78E58BA17273}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{DF9C82C1-446F-458A-AA50-78E58BA17273}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{FFBC5669-DA32-4907-8793-7B414279DA3B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{FFBC5669-DA32-4907-8793-7B414279DA3B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{FFBC5669-DA32-4907-8793-7B414279DA3B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{FFBC5669-DA32-4907-8793-7B414279DA3B}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {45099B85-2AE1-434B-913A-6AD14FD3AF4A}\n\tEndGlobalSection\n\tGlobalSection(Performance) = preSolution\n\t\tHasPerformanceSessions = true\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "LiteDB",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.61328125,
          "content": "# LiteDB - A .NET NoSQL Document Store in a single data file\n\n[![NuGet Version](https://img.shields.io/nuget/v/LiteDB)](https://www.nuget.org/packages/LiteDB/)\n[![NuGet Downloads](https://img.shields.io/nuget/dt/LiteDB)](https://www.nuget.org/packages/LiteDB/)\n[![Build status](https://ci.appveyor.com/api/projects/status/sfe8he0vik18m033?svg=true)](https://ci.appveyor.com/project/mbdavid/litedb) \n[![](https://dcbadge.limes.pink/api/server/u8seFBH9Zu?style=flat-square)](https://discord.gg/u8seFBH9Zu)\n\n\nLiteDB is a small, fast and lightweight .NET NoSQL embedded database. \n\n- Serverless NoSQL Document Store\n- Simple API, similar to MongoDB\n- 100% C# code for .NET 4.5 / NETStandard 1.3/2.0 in a single DLL (less than 450kb)\n- Thread-safe\n- ACID with full transaction support\n- Data recovery after write failure (WAL log file)\n- Datafile encryption using DES (AES) cryptography\n- Map your POCO classes to `BsonDocument` using attributes or fluent mapper API\n- Store files and stream data (like GridFS in MongoDB)\n- Single data file storage (like SQLite)\n- Index document fields for fast search\n- LINQ support for queries\n- SQL-Like commands to access/transform data\n- [LiteDB Studio](https://github.com/mbdavid/LiteDB.Studio) - Nice UI for data access \n- Open source and free for everyone - including commercial use\n- Install from NuGet: `Install-Package LiteDB`\n\n\n## New v5\n\n- New storage engine\n- No locks for `read` operations (multiple readers)\n- `Write` locks per collection (multiple writers)\n- Internal/System collections \n- New `SQL-Like Syntax`\n- New query engine (support projection, sort, filter, query)\n- Partial document load (root level)\n- and much, much more!\n\n## Lite.Studio\n\nNew UI to manage and visualize your database:\n\n\n![LiteDB.Studio](https://www.litedb.org/images/banner.gif)\n\n## Documentation\n\nVisit [the Wiki](https://github.com/mbdavid/LiteDB/wiki) for full documentation. For simplified chinese version, [check here](https://github.com/lidanger/LiteDB.wiki_Translation_zh-cn).\n\n## LiteDB Community\n\nHelp LiteDB grow its user community by answering this [simple survey](https://docs.google.com/forms/d/e/1FAIpQLSc4cNG7wyLKXXcOLIt7Ea4TlXCG6s-51_EfHPu2p5WZ2dIx7A/viewform?usp=sf_link)\n\n## How to use LiteDB\n\nA quick example for storing and searching documents:\n\n```C#\n// Create your POCO class\npublic class Customer\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public int Age { get; set; }\n    public string[] Phones { get; set; }\n    public bool IsActive { get; set; }\n}\n\n// Open database (or create if doesn't exist)\nusing(var db = new LiteDatabase(@\"MyData.db\"))\n{\n    // Get customer collection\n    var col = db.GetCollection<Customer>(\"customers\");\n\n    // Create your new customer instance\n    var customer = new Customer\n    { \n        Name = \"John Doe\", \n        Phones = new string[] { \"8000-0000\", \"9000-0000\" }, \n        Age = 39,\n        IsActive = true\n    };\n\n    // Create unique index in Name field\n    col.EnsureIndex(x => x.Name, true);\n\n    // Insert new customer document (Id will be auto-incremented)\n    col.Insert(customer);\n\n    // Update a document inside a collection\n    customer.Name = \"Joana Doe\";\n\n    col.Update(customer);\n\n    // Use LINQ to query documents (with no index)\n    var results = col.Find(x => x.Age > 20);\n}\n```\n\nUsing fluent mapper and cross document reference for more complex data models\n\n```C#\n// DbRef to cross references\npublic class Order\n{\n    public ObjectId Id { get; set; }\n    public DateTime OrderDate { get; set; }\n    public Address ShippingAddress { get; set; }\n    public Customer Customer { get; set; }\n    public List<Product> Products { get; set; }\n}        \n\n// Re-use mapper from global instance\nvar mapper = BsonMapper.Global;\n\n// \"Products\" and \"Customer\" are from other collections (not embedded document)\nmapper.Entity<Order>()\n    .DbRef(x => x.Customer, \"customers\")   // 1 to 1/0 reference\n    .DbRef(x => x.Products, \"products\")    // 1 to Many reference\n    .Field(x => x.ShippingAddress, \"addr\"); // Embedded sub document\n            \nusing(var db = new LiteDatabase(\"MyOrderDatafile.db\"))\n{\n    var orders = db.GetCollection<Order>(\"orders\");\n        \n    // When query Order, includes references\n    var query = orders\n        .Include(x => x.Customer)\n        .Include(x => x.Products) // 1 to many reference\n        .Find(x => x.OrderDate <= DateTime.Now);\n\n    // Each instance of Order will load Customer/Products references\n    foreach(var order in query)\n    {\n        var name = order.Customer.Name;\n        ...\n    }\n}\n\n```\n\n## Where to use?\n\n- Desktop/local small applications\n- Application file format\n- Small web sites/applications\n- One database **per account/user** data store\n\n## Plugins\n\n- A GUI viewer tool: https://github.com/falahati/LiteDBViewer (v4)\n- A GUI editor tool: https://github.com/JosefNemec/LiteDbExplorer (v4)\n- Lucene.NET directory: https://github.com/sheryever/LiteDBDirectory\n- LINQPad support: https://github.com/adospace/litedbpad\n- F# Support: https://github.com/Zaid-Ajaj/LiteDB.FSharp (v4)\n- UltraLiteDB (for Unity or IOT): https://github.com/rejemy/UltraLiteDB\n- OneBella - cross platform (windows, macos, linux) GUI tool : https://github.com/namigop/OneBella\n- LiteDB.Migration: Framework that makes schema migrations easier: https://github.com/JKamsker/LiteDB.Migration/\n\n## Changelog\n\nChange details for each release are documented in the [release notes](https://github.com/mbdavid/LiteDB/releases).\n\n## Code Signing\n\nLiteDB is digitally signed courtesy of [SignPath](https://www.signpath.io)\n\n<a href=\"https://www.signpath.io\">\n    <img src=\"https://about.signpath.io/assets/signpath-logo.svg\" width=\"150\">\n</a>\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.642578125,
          "content": "version: 5.0.{build}\nbranches:\n  only:\n  - master\nimage: Visual Studio 2022\nconfiguration: \n  - Debug\n  - Release\nbefore_build:\n  - cmd: nuget restore LiteDB.sln\nbuild:\n  project: LiteDB.sln\n  publish_nuget: true\n  verbosity: minimal\nfor:\n-\n  matrix:\n    only:\n      - configuration: Release\n  artifacts:\n    - path: LiteDB\\bin\\Release\\LiteDB*.nupkg\n  deploy:\n  - provider: Webhook\n    url: https://app.signpath.io/API/v1/f5b329b8-705f-4d6c-928a-19465b83716b/Integrations/AppVeyor?ProjectKey=LiteDB.git&SigningPolicyKey=release-signing\n    authorization:\n      secure: 3eLjGkpQC1wg1s5GIEqs7yk/V8OZNnpKmpwdsaloGExc5jMspM4nA7u/UlG5ugraEyXRC05ZxLU4FIfH2V2BEg==\n"
        },
        {
          "name": "icon_64x64.png",
          "type": "blob",
          "size": 2.525390625,
          "content": null
        }
      ]
    }
  ]
}