{
  "metadata": {
    "timestamp": 1736711213210,
    "page": 145,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AngleSharp/AngleSharp",
      "stars": 5211,
      "defaultBranch": "devel",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.54296875,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n[*.csproj]\nindent_style = space\nindent_size = 2\n\n[*.cs]\ndotnet_style_predefined_type_for_member_access = false:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = false:suggestion\n\ncsharp_prefer_braces = true:suggestion\ncsharp_using_directive_placement = inside_namespace:suggestion\ncsharp_style_var_for_built_in_types=true:suggestion\ncsharp_style_var_when_type_is_apparent=true:suggestion\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.40234375,
          "content": "#################\n## Eclipse\n#################\n\n*.pydevproject\n.project\n.metadata\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n################\n## Rider\n################\n\n.idea/\n\n################\n## VS Code\n################\n\n.vscode/\n\n#################\n## Visual Studio\n#################\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Rr]elease/\n[Bb]in/\n[Bb]uild/\n[Oo]bj/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# DNX\n*.lock.json\nartifacts/\n\n[Dd]ebug/\n[Rr]elease/\n[Pp]ackages/\n[Tt]ools/\n![Tt]ools/packages.config\nTestResults/\nnode_modules\npackage-lock.json\n*.nuget.targets\n*.nuget.props\n*.nupkg\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.vspscc\n.builds\n*.dotCover\n*.dotSettings\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n\n# Visual Studio profiler\n*.psess\n*.vsp\n\n# ReSharper is a .NET coding add-in\n_ReSharper*\n\n# Installshield output folder\n[Ee]xpress\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish\n\n# Others\n[Bb]in\n[Oo]bj\nsql\nTestResults\n*.Cache\nClientBin\nstylecop.*\n~$*\n*.dbmdl\nGenerated_Code #added for RIA/Silverlight projects\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\n\n\n\n############\n## Windows\n############\n\n# Windows image file caches\nThumbs.db\n\n# Folder config file\nDesktop.ini\n\n\n#############\n## Python\n#############\n\n*.py[co]\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n# Mac crap\n.DS_Store\n\n# Nuke build tool\n.nuke/temp\n\n/src/AngleSharp.Benchmarks/BenchmarkDotNet.Artifacts*\n/src/AngleSharp.Benchmarks/temp\n"
        },
        {
          "name": ".nuke",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 24.28515625,
          "content": "# 1.2.0\n\nReleased on Tuesday, December 31 2024.\n\n- Fixed loading of link element source (#1184) @tomvanenckevort\n- Fixed usage of outdated dependency (#1186)\n- Fixed cookie `Expires` recognized as local time (#1212) @noobow34\n- Fixed validation for problematic decimal step values (#1210) @rhuebner76\n- Removed unnecessary references for .NET 6 and higher (#1187) @lahma\n- Removed support for .NET 4.6.1 (least version is 4.6.2)\n- Updated to NUKE 8 (#1188) @lahma\n- Added new `OnToken` event for the tokenizer (#1153) @schaakverslaafd\n- Added new setting for disabling `StringBuilder` pooling (#1203) @micahbresette\n- Added context to extension methods (#1194) @memiamp\n- Added `property` attribute to meta tags (#1195) @hflexgrig\n\n# 1.1.2\n\nReleased on Friday, March 8 2024.\n\n- Fixed exception when providing wrong response (#1181)\n- Fixed handling of various inputs leading to timeouts (#1180)\n\n# 1.1.1\n\nReleased on Friday, March 1 2024.\n\n- Fixed `ISourceReference` not using `HtmlToken` underneath\n- Fixed handling of replacement characters in escaped script blocks (#1174)\n- Fixed handling of empty template element in SVG foreign mode (#1176)\n- Fixed handling of `<template>` in foreign elements (#1179)\n- Improved pre-release version to follow semver (#1171) @georg-jung\n- Improved NuGet package with link to repository (#1168) @thompson-tomo\n- Added `PostAsMultipart` helper for multipart/form-data to `DocumentRequest` (#1173)\n\n# 1.1.0\n\nReleased on Thursday, January 18 2024.\n\n- Fixed priority calculations for selector lists (#1161)\n- Fixed `:where` and `:is` selectors using forgiving lists\n- Added option for read only DOM (#1154) @dv00d00\n- Added more optimizations to reduce allocation rate (#1159) @dv00d00\n- Added support for nested selectors (`&`)\n\n# 1.0.7\n\nReleased on Friday, November 17 2023.\n\n- Fixed implementation of `IRange` using offsets (#1147) @zukarusan\n- Improved performance in `Node.set_Owner` (#1149) @campersau\n- Added `net8.0` as direct target framework\n\n# 1.0.6\n\nReleased on Saturday, November 11 2023.\n\n- Fixed case-sensitiveness in virtual responses\n- Fixed warning for outdated actions in CI/CD workflow (#1145) @martincostello\n- Fixed AoT warning when trimming (#1144) @martincostello\n- Fixed decoding of entities in `InnerHtml` of `<noscript>` (#1139)\n- Updated `PrettyMarkupFormatter` to keep new lines on demand (#1131) @dramlian\n\n# 1.0.5\n\nReleased on Tuesday, October 3 2023.\n\n- Improved codebase (#1128, #1126, #1133) @matkoch @ivandrofly\n- Improved documentation (#1127)\n- Improved child selector performance (#1135) @lahma\n- Improved query selector all performance (#584, #1134) @lahma\n- Fixed issue with foreign content using end tags\n- Fixed typo `descendants` (#1136) @SimonCropp\n- Added a way to resolve symbols by their name to `HtmlEntityProvider` (#396)\n\n# 1.0.4\n\nReleased on Saturday, June 24 2023.\n\n- Fixed issue with gzip encoding under certain conditions (#1122)\n- Fixed issue with `li` scope leading to stack overflow (#1123)\n- Added more pseudo selectors from Selector L4 spec (#1121)\n\n# 1.0.3\n\nReleased on Thursday, June 8 2023.\n\n- Fixed wrong escaping of CSS selector pseudo class functions (#1069)\n\n# 1.0.2\n\nReleased on Tuesday, June 4 2023.\n\n- Improved codebase (#1091, #1090, #1089, #1088, #1087, #1086) @SimonCropp\n- Fixed potential stack overflow in `GetStyleSheets` (#1084) @bjornri\n- Fixed serialization of `DocumentReadyState` by providing `DomName` attributes (#1109)\n- Fixed start and end of `Range` to handle specific offset in a `TextNode` (#1118)\n- Fixed `Range` inclusion algorithm (#1119)\n- Added public class `HtmlTokenizer` (#1113)\n\n# 1.0.1\n\nReleased on Monday, January 16 2023.\n\n- Fixed entities in `noscript` being double encoded (#1070)\n- Added previous `Event` constructor overload for ABI compatibility\n- Added README to NuGet package\n\n# 1.0.0\n\nReleased on Tuesday, January 10 2023.\n\n- Updated build system to use NUKE instead of CAKE (#1075) @driekus77\n- Fixed `TagClosedWrong` error with nested formatting elements (#1052)\n- Fixed performance issue within deeply nested structures (#1066) @heinrich-ulbricht\n- Fixed decoding of entities in `noscript` elements without scripting (#1070)\n- Fixed setting templte content using `InnerHtml` (#1072)\n- Fixed `TreeWalker` throwing `NullReferenceException` (#1073)\n- Improved `GetItemByIndex` performance (#1050) @egil\n- Improved nullability (#1057) @jodydonetti\n- Improved CSS selectors by counting the specificity properly (#1080) @patrikwlund\n- Added `GetComposedPath` and `IsComposed` to the `Event` class (#1053)\n\n# 0.17.1\n\nReleased on Thursday, June 2 2022.\n\n- Fixed wrong reference to `System.Text.Encoding.CodePages` (#1046) @linkdotnet\n\n# 0.17.0\n\nReleased on Tuesday, May 31 2022.\n\n- Dropped .NET Framework 4.6 (#960)\n- Updated GitHub actions logger (#1044) @Tyrrrz\n- Updated editorconfig to include code conventions (#1025) @kzrnm\n- Updated to use RFC1123Pattern format (#1018) @kzrnm\n- Fixed some typos (#1043) @mavaddat\n- Fixed inheritence of query parameters for fragment-only URLs (#1037)\n- Fixed `Query` dependence on `SearchParams` (#1024) @kzrnm\n- Fixed `Hash` and `Search` in `Url` (#1021) @kzrnm\n- Fixed behavior of `Url` with empty query (#1016) @kzrnm\n- Added option to parse custom elements in `head` (#1035)\n- Added option to prevent self-closing in `XhtmlMarkupFormatter` (#1031) @Aizeren\n- Added option to keep original attribute names / casing (#897)\n\n# 0.16.1\n\nReleased on Wednesday, October 6 2021.\n\n- Fixed `namespaceUri` parameters to allow nullable values when possible (#975)\n- Fixed mutation observer not connecting to document (#1001)\n- Add missing `IHtmlPictureElement` to picture element (#978)\n\n# 0.16.0\n\nReleased on Tuesday, June 8 2021.\n\n- Moved `Url` from `AngleSharp` to `AngleSharp.Dom`\n- Remove usage of CWT and introduce context info bag (#918)\n- Fixed recursion depth of `FindDescendant` with configurable limit (#936)\n- Fixed `IAttr` to actually inherit from `INode`\n- Added ability to parse only the head from a stream (#966)\n- Added new `UrlSearchParams` class (#970)\n- Exposed `Url` class to `URL` DOM API (#970)\n\n# 0.15.0\n\nReleased on Thursday, April 22 2021.\n\n- Added `ToHtmlAsync()` extension method (#863)\n- Added `ParseFragment` overload using `Stream` (#896)\n- Added `euc-kr` encoding (#928)\n- Fixed CSS attribute value comparison w.r.t. case sensitivity (#864)\n- Fixed issue in the Heisenberg algorithm of the HTML5 parser (#893)\n- Fixed issue with the strictness of broken char references in attribute values (#902)\n- Fixed possible NRE in the markup formatters / attribute serialization (#903)\n- Fixed `GetSelector` returning invalid ID selector (#909)\n- Fixed `GetSelector` returning duplicate element ids (#910)\n- Fixed possible NRE in media and `embed` elements without `src` (#914)\n- Updated CI/CD system to GitHub Actions (#942)\n- Dropped support for the .NET Standard 1.3 target (#944)\n\n# 0.14.0\n\nReleased on Tuesday, March 31 2020.\n\n- Included context event `error` for error tracking (#698)\n- Extended the `IMarkupFormatter` for literal text (#821)\n- Extended the `IElementFactory` definition\n- Fixed an issue regarding n-th child for the `GetSelector` utility (#835)\n- Added explicit support for .NET 4.6.1 (#842)\n- Added public constructor to `BrowsingContext` (#844)\n- Force `IBrowsingContext` to be `IDisposable` for cleanup purposes\n- Fixed missing `Media` property of stylesheets (#846)\n- Improved API of `IMarkupFormatter` (#858)\n- Enhanced existing `IMarkupFormatter` instances to allow inheritance\n- Added default accepts header for standard document requests (#859)\n\n# 0.13.0\n\nReleased on Friday, September 6 2019.\n\n- Removed the `TaskEventLoop` (#782)\n- Renamed `WithCookies` to `WithDefaultCookies`\n- Fixed bubbling of `DOMContentLoaded` event (#789)\n- Fixed maximum recursion depth at query selector (#763)\n- Added `MinifyMarkupFormatter` (#745)\n- Added `Prettify` and `Minify` extension methods\n- Moved `hashchange` to be emitted on `IWindow`\n- Added option to avoid consuming character references (#494)\n- Added more pseudo elements for GCPM\n- Fixed character position starting at normalized CRLF (#786)\n- Improved setting `Href` in `Url`\n- Fixed crash for invalid attribute names during SVG parsing (#795)\n- Added more punycode replacement characters on .NET Standard 1.3 (#797)\n- Added use of correct hostname IDN on .NET Standard 2.0 and .NET Framework 4.6 (#797)\n- Added ability to delay load in `Document` (#815)\n\n# 0.12.1\n\nReleased on Wednesday, May 15 2019.\n\n- Binary version fix\n- Updated documentation regarding AngleSharp.Js\n\n# 0.12.0\n\nReleased on Thursday, May 2 2019.\n\n- Added `GetExtension` helper to `MimeTypeNames`\n- Improved extension capability for document fragment parsing\n- Added `Index` and more documentation to `TextPosition` (#787)\n- Added ability to create a selector for an element (#784)\n- Enhanced documentation (#776, #774, #771)\n- Fixed DOM name attribute in `AdjacentPosition` (#775)\n- Fixed bug regarding `set-cookie` header (#768)\n- Added attribute start position in token (#766)\n- Added support for XML processing instruction (#761)\n- Fixed serialization of xmlns attributes (#760)\n- Added `ISourceReference` for source position retrieval (#754)\n\n# 0.11.0\n\nReleased on Monday, February 11 2019.\n\n- Moved everything from `AngleSharp.Xml` to its own library (#139)\n- Added more examples regarding forms (#242)\n- Moved `ISvgDocument` and `AutoSelectedMarkupFormatter` to AngleSharp.Xml\n- Improved fragment parsing (#594)\n- Fixed inconsistent behavior in fragment parsing (#741)\n- Improved migration documentation (#743)\n- Fixed internal bug in `link` resolution (#753)\n- Removed `SetDefault` function from `Configuration`\n\n# 0.10.1\n\nReleased on Monday, January 7 2019.\n\n- Added .NET Standard 1.3 target (#738)\n- Fixed missing reference to `System.Encoding.CodePages` (#740)\n- Fixed invalid context of `OuterHtml` parsing (#741)\n\n# 0.10.0\n\nReleased on Friday, January 4 2019.\n\n- Removed CSS parser from AngleSharp.Core (#139)\n- Improvements to CSS selector evaluation (#352, #550)\n- Fixed bug in `location.assign` (#496)\n- Introduced the concept of scope to selectors (#440)\n- Improved the `IEntityProvider` (#442)\n- Fixed parsing the Cookie header (#431)\n- Some fixes regarding attributes (#434)\n- Pseudo-class `:has()` improvements (#439)\n- Allow underscores in URLs (#445)\n- Improved XML namespace handling (#448)\n- Fixed the insert method (#449)\n- Restructured services and configuration (#454)\n- Fixed trailing comments bug (#459)\n- Make AngleSharp build on Linux (#460)\n- Corrected \"specifity\" (#463)\n- Optimized node iteration allocations (#476)\n- Improved cookie handling for path-dependent cookies (#477)\n- Optimized tag name allocations (#479)\n- Micro-Optimized `CharacterData.Append()` (#481)\n- Fixed culture-specific number parsing (#482)\n- Fast resource dictionary lookup (#485)\n- Introduced the `ISelectorVisitor` to get selector information (#487)\n- Fixed multi-threading element initialization bug (#489)\n- Extended the attribute changed callback with `IAttributeObserver` (#491)\n- Fixed computation of `href` (#501)\n- General cookie handling improvements (#519, #548, #607, #702)\n- Solved potential encoding issues in .NET Core (#534)\n- Improved parsing of invalid HTML tags (#543)\n- Improved the default requester (#572)\n- Updated parts to adhere to HTML 5.2 (#618)\n- Added support for parsing `noframes` (#631)\n- Fixed build on Visual Studio 2017 (#679)\n- Updated to new csproj format (#713)\n- Fixed parser mode selection w.r.t. templates (#735)\n- Placed extensions close to their instances\n- Exposed the `ILinkRelationFactory` interface and default implementation\n- Exposed the `IInputTypeFactory` interface and default implementation\n- Reordered events for requesters and parsers\n\n# 0.9.11.0\n\nReleased on Friday, November 23 2018.\n\n- Prevent entity overflow (#716)\n- Fixed bug in URL parser (#711)\n- Include setup to configure default `HttpWebRequest` (#700)\n\n# 0.9.10.0\n\nReleased on Sunday, July 15 2018.\n\n- `ColSpan` default should be 1 (#689)\n- `RowSpan` default should be 1 (#688)\n- Expose image source set via `SourceSet.Parse` (#682)\n- Implemented case insensitive attribute selector (#666)\n- Fixed invalid date in `MemoryCookieProvider` (#663)\n\n# 0.9.9.2\n\nReleased on Tuesday, March 13 2018.\n\n- Provided `Tokenize` extension method for `TextSource` (#636)\n- Replaced Conditional Weak Table for performance gains (#637)\n- Fixed a bug for non-Unicode characters to stop parsing (#590)\n- Fixed weird `iframe` behavior to self-load (#581)\n\n# 0.9.9.1\n\nReleased on Wednesday, January 3 2017.\n\n- Fixed build (#566)\n- Several bugfixes (#587, see: #491, #406, #512, and #544)\n- Memory improvement (#588)\n- Corrected casing (#589)\n- Fixed wrong default for `Url` ports (#624)\n- Fixed behavior on empty string selectors (#601)\n- Fixed multiple slashes stack overflow (#613)\n- Fixed parsing with initial comment (#610)\n- Fixed cookie time format handling (#599, #598)\n- Fixed stack overflow when parsing (#570)\n- Initialize default `Request` content (#567)\n\n# 0.9.9.0\n\nReleased on Friday, October 7 2016.\n\n- Attribute API refinements (#422)\n- Cookies are now sent for all requests (#420)\n- Fixed DOM attribute name culture bug (#419)\n- Added CSS `word-wrap` (`overflow-wrap`) and `word-breakword` properties (#417)\n- Added CSS `text-align-last`, `text-anchor`, and `text-justify` properties (#413)\n- Added CSS `stroke-*` properties (#407, #409, #411)\n- Handle compression in HTTP responses (#416)\n- Included `StatusCode` property in `IDocument` (#408)\n- Improved default event loop (#404)\n- Fixed invalid entity errors in XML (#401)\n- Added HTML `mark` element (#399)\n\n# 0.9.8.1\n\nReleased on Saturday, September 10 2016.\n\n- Added parsing callback (e.g., to retrieve line number) (#374)\n- Exposed the original `Source` in documents (#396)\n- Fixed a crash during redirects for requesters (#394)\n\n# 0.9.8.0\n\nReleased on Saturday, September 3 2016.\n\n- Improved the `HttpRequester` (#387)\n- Extended the `CookieContainer` (#385)\n- Bug fixes for `ToCss()` (#382)\n- Added custom mime-type handling (#381)\n- Transport cookie on page redirect (#368)\n- Submit from Button (#354)\n- Implemented document unloading (#339)\n- Possibility to use strict mode (#336)\n- Included sub-resource integrity (#308)\n- `IHtmlCollection` helpers and API improvement (#293)\n- General performance improvements (#390)\n\n# 0.9.7.0\n\nReleased on Sunday, July 17 2016.\n\n- Fixed some bugs (#343, #325, #341, #347, #355, #358)\n- Improved cookie handling (#280, #274, #365)\n- Added a document factory (#331)\n- `EventNames`, `AttributeNames` and others are available (#330)\n- Allow setting the active document (#281)\n- Improved Xamarin.iOS build (#85)\n- Changed service API slightly (#157)\n- Enhanced CoreCLR support (#270, #362)\n\n# 0.9.6.0\n\nReleased on Thursday, May 5 2016.\n\n- Fixed some bugs (#304, #295, #286)\n- Provide XHTML markup formatter (#128, #313)\n- Dropped the `IEventAggregator` (#156)\n- Allow custom selector factories (#182, #233)\n- Open `TagNames` (#252)\n- Internal cosmetics and improvements (#279, #300)\n- Execute dynamically added scripts (#287)\n- Property declarations of CSS rules can be modified (#297)\n- Allow saving HTML DOM to a stream using `ToHtml` (#249)\n- React to attributes containing event handlers (#190)\n\n# 0.9.5.0\n\nReleased on Wednesday, March 16 2016.\n\n- Fixed some bugs (#282, #273, #266, #260, #256, #250, #243, #234, #230, #229, #223, #208)\n- Added missing `bottom` CSS property (#253)\n- Invalid indices throw now exceptions (#232)\n- Provide new `dotnet` target (#271)\n- Changed behavior of `OpenAsync` to wait for resources (#158)\n- Added a set of extension methods for index-related selectors (#183)\n- Redesigned the request pipeline (#189)\n- Added extension method for submitting forms (#218)\n- `Style` is now available at `IElement` level (#193)\n- Enhanced to distinguish between the stylesheet types (#191)\n- Included extension methods to improve CSSOM modifications (#205)\n\n# 0.9.4.0\n\nReleased on Wednesday, December 30 2015.\n\n- Added the link relation factory (#174)\n- Fixed a bug related to `document.write` (#173)\n- Delay document loading for resources (#178)\n- Improved HTTP requester performance (#194)\n- Added HTML imports (#179)\n- Include CSS color enhancements (#176)\n- Enhanced encoding with multibyte characters (#210, #212)\n- Use common `CssNode` as root (#145)\n- Added `Attr` extension method (#199)\n\n# 0.9.3.0\n\nReleased on Thursday, October 8 2015.\n\n- Important bugfixes (#160, #161, #162, #165, #170)\n- XML parser enhancements\n- Ability to provide custom entities\n- Fixed `CompareDocumentPosition` (#168)\n\n# 0.9.2.0\n\nReleased on Thursday, September 24 2015.\n\n- Some bugfixes (#150)\n- XML parser enhancement (#144)\n- JSON form submission (#126)\n- Changed license to MIT\n- Provide flex hex parsing (`Color`)\n\n# 0.9.1.0\n\nReleased on Wednesday, September 9 2015.\n\n- Content of `iframe` can be set\n- Default `IEventLoop` provided\n- Improved the `HttpRequester`\n- Fixed obtaining ext. stylesheets without CSS\n- Added option to filter requests\n- Parse CSS Unicode escapes\n\n# 0.9.0.0\n\nReleased on Wednesday, August 27 2015.\n\n- Implemented `srcset` attribute\n- Implemented `picture` element\n- Made Shadow DOM API spec. draft available\n- Custom `MimeType` datatype\n- Supports CSS round-tripping\n- Assembly is now strongly signed\n- Provide standard `IEventAggregator` implementation\n\n# 0.8.9.0\n\nReleased on Wednesday, July 29 2015.\n\n- Improved resource fetching\n- Fixed waiting mechanism\n- Fixed form submission (avoid initial empty line)\n- HTML Parser perf. improved\n- Expose `INamedNodeMap` interface\n- Fixed problems with `@import`\n- Added the `@viewport` CSS rule\n\n# 0.8.8.0\n\nReleased on Wednesday, July 22 2015.\n\n- Fixed a bug in the `HtmlDomBuilder`\n- Adjusted CSSOM for tolerating unknown rules\n- Parser enhancements\n\n# 0.8.7.0\n\nReleased on Wednesday, July 15 2015.\n\n- CSS parser more flexible\n- Allow inline styles to be customized\n\n# 0.8.6.0\n\nReleased on Wednesday, July 8 2015.\n\n- Owner's are now weakly referenced\n- The CSS parser supports unknown parsing\n- Fixed several bugs in the CSS parser\n- Fixed some smaller issues\n- The `AngleSharp.Linq` namespace is now `AngleSharp.Extensions`\n- Improved decoding algorithms\n- `PrettyStyleFormatter` for readable CSS output\n- `IStyleFormatter` with default `CssStyleFormatter` implementation\n- `DocumentRequest` static helpers (for `GET` and `POST`)\n- Default `ICookieService` implementation offered\n\n# 0.8.5.0\n\nReleased on Wednesday, June 17 2015.\n\n- Fixed CSS property parsing\n- Implemented new CSS value converters\n- Fixed some cookie issues\n- Made `Configuration.Default` available\n- Changed some namespace assignments (e.g., `ScriptOptions`)\n- Fixed `HtmlLinkElement` issue\n- Fixed CSS twisted comment issue\n\n# 0.8.4.0\n\nReleased on Wednesday, June 3 2015.\n\n- Added ability to wait for outstanding requests\n- Fixed missing dashes in hostnames\n- Changed CSS parser / tokenizer interaction\n- Reworked CSS value model\n- Extended `IMarkupFormatter` to serialize attributes\n- Included encoding service\n- Fixed `BrowsingContext` content from string loading\n- Improved HTML parser performance\n- Allow unknown properties in the CSSOM\n\n# 0.8.3.0\n\nReleased on Wednesday, April 22 2015.\n\n- `PrettyMarkupFormatter` for readable output\n- Add some missing `ConfigureAwait(false)` calls\n- Included virtual response callback for the context\n- Add `IHtmlDocument` for completeness\n- Reintegrated `XmlParser` (only non-validating)\n- Changed `Configuration` to be immutable\n- All `IConfiguration` extensions return new object\n- Fixed smaller issues\n\n# 0.8.2.0\n\nReleased on Wednesday, April 15 2015.\n\n- `DocumentBuilder` declared obsolete\n- Fixed bugs in DOM methods\n- Added `ToHtml()` overloads with custom formatters\n- Changed CSS value model\n- Fixed BOM in form submits\n- Changed case of tags to mimic browsers\n- Improved URL encoded form submission\n- Improved CSS shorthand properties\n- Fixed `Origin` of `Url`\n- Improved loading customization\n- Included `IEventAggregator` for events\n- Fixed several smaller bugs\n\n# 0.8.1.0\n\nReleased on Tuesday, February 10 2015.\n\n- `IsInvalid` of `Url` corrected\n- Included .NET 4 version in the NuGet package\n- Included Silverlight version in the NuGet package\n- Fixed a few smaller bugs\n\n# 0.8.0.0\n\nReleased on Monday, February 02 2015.\n\n- Major encoding improvements\n- DOM ranges are (weakly) connected and updated\n- Mutation callbacks are now included\n- Implemented parsing keyframe selectors\n- CSS document (rule) functions are checked\n- CSS value model finished\n- `HTMLObjectElement` can be serviced\n- All CSS4 selectors included (excluding `||`)\n- Small pseudo element integration\n- More services e.g. spellcheck available\n- Media features and CSS properties extended\n- HTML5 constraint form validation finished\n- All HTML5 input types are supported\n- Changed `DOM` namespace to `Dom` to fix naming\n- Finished `Url` implementation according to spec.\n\n# 0.7.0.0\n\nReleased on Saturday, November 08 2014.\n\n- Native (callback based) asynchronous parsing\n- Interfaces for resource loading defined\n- Browsing context available / creation possible\n- Extension methods to `IConfiguration` available\n- More attributes added\n- Namespace changes for the attributes\n- CSS property architecture finalized\n\n# 0.6.1.0\n\nReleased on Thursday, August 21 2014.\n\n- Minor bug fixes\n- DOM Events\n- Configuration improved\n- Performance improvements\n- `Url` origin\n- Core algorithms changed [WHATWG]\n- Scripting and styling interfaces\n\n# 0.6.0.0\n\nReleased on Sunday, July 27 2014.\n\n- Refactored DOM model\n- Window implementation\n- Compute style information\n- More documentation\n- Tree traversal included\n- Refactored DOM attributes\n- Script engine interface\n- Style engine interface\n- Removed IOC container\n- New source code reader\n- Unified `Url` class\n\n# 0.5.1.0\n\nReleased on Tuesday, May 27 2014.\n\n- Finished CSS properties\n- CSS parser update\n- Media rules implemented\n- Rewritten URL parsing\n- More documentation\n- Extended DocumentBuilder\n\n# 0.5.0.0\n\nReleased on Monday, April 21 2014.\n\n- Support for Legacy version of AngleSharp\n- Updated styling\n- Removed XML parser\n- API renewal\n- Dependency Injection update\n- New CSS value model\n- More DOM properties\n- CSS properties added\n- Finished form submission\n\n# 0.4.0.0\n\nReleased on Thursday, November 21 2013.\n\n- DTD parsing improved\n- Rewritten CSS parser\n- More methods and DOM completeness\n- XML validation\n\n# 0.3.7.0\n\nReleased on Wednesday, September 11 2013.\n\n- Namespaces fully included\n- Doctype improved\n- DTD parsing finished\n- Cleanup\n- CSS rules extended\n- CSS functions added\n\n# 0.3.6.0\n\nReleased on Tuesday, September 03 2013.\n\n- Performance improvements\n- Fixed CSS selector\n- More documentation\n- Live collection\n- Started form submission\n- Fixed double-escaped script tags\n- Improved parsing of inline styling\n\n# 0.3.5.0\n\nReleased on Thursday, August 29 2013.\n\n- Finished template implementation\n- MathML and SVG elements\n- More annotations\n- `RelList` established\n- Improved TextNode\n\n# 0.3.4.0\n\nReleased on Monday, August 26 2013.\n\n- More DOM properties\n- Hyper reference normalization\n- Introduced template element\n- Polish API\n\n# 0.3.3.0\n\nReleased on Wednesday, August 21 2013.\n\n- Fixed double escaped script content\n- DOM extensions\n- Configuration object\n- Default HTTP requester\n\n# 0.3.2.0\n\nReleased on Sunday, August 18 2013.\n\n- Fixed parser bugs\n- Improved entity retrieval\n- Extended CDATA parsing\n- Improved fragment parsing\n\n# 0.3.1.0\n\nReleased on Wednesday, August 14 2013.\n\n- Improved character parsing\n- Cleanup\n- Line skipping for `textarea`, `pre`\n- Extended Location\n\n# 0.3.0.0\n\nReleased on Thursday, July 18 2013.\n\n- Included XmlParser\n- DTD parsing\n- Added IOC container\n- Finished element type declaration\n\n# 0.2.9.0\n\nReleased on Wednesday, July 10 2013.\n\n- Fixed GetElementsByName\n- Improved GetElementsByTagName\n- Converted to PCL project\n- Updated Children property\n\n# 0.2.8.0\n\nReleased on Wednesday, July 03 2013.\n\n- Binding capabilities\n- CSS parser update\n- More decorations\n- Integrated table, frame\n- Added pooling\n\n# 0.2.7.0\n\nReleased on Wednesday, June 26 2013.\n\n- Updated CSS serialization\n- Intermediate objects\n- More DOM attributes\n\n# 0.2.6.0\n\nReleased on Wednesday, June 19 2013.\n\n- Improved API\n- QuerySelector implementation\n- Fixed DocumentUri bug\n\n# 0.2.5.0\n\nReleased on Tuesday, June 18 2013.\n\n- HTML element re-ordering\n- Extended documentation\n- HtmlColor structure\n\n# 0.2.4.0\n\nReleased on Sunday, June 16 2013.\n\n- Faster CSS parser\n- Initial CSS parser release\n\n# 0.2.3.0\n\nReleased on Wednesday, June 12 2013.\n\n- StyleSheet integration\n- Ignore unknown CSS rules\n\n# 0.2.2.0\n\nReleased on Sunday, June 09 2013.\n\n- Updated documentation\n- Fixed parsing bug\n\n# 0.2.1.0\n\nReleased on Sunday, June 09 2013.\n\n- XML documentation\n- Merged DocumentBuilder and NodeBuilder\n\n# 0.2.0.0\n\nReleased on Wednesday, June 05 2013.\n\n- Initial release\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 3.1640625,
          "content": "# AngleSharp Contributors\n\nThanks :heart: to all who contributed to AngleSharp via issues, pull requests, suggestions, and questions.\n\nAngleSharp contains code written by (in order of first pull request / commit):\n\n* [Florian Rappl](https://github.com/FlorianRappl)\n* [Andreas Augustin](https://github.com/AndreasAugustin)\n* [Jerrie Pelser](https://github.com/jerriep)\n* [Liwen Guo](https://github.com/Livven)\n* [Raphael DUCOM](https://github.com/rducom)\n* [Georgii Dolzhykov](https://github.com/thorn0)\n* [miroslav22](https://github.com/miroslav22)\n* [Joel Verhagen](https://github.com/joelverhagen)\n* [Michael Ganss](https://github.com/mganss)\n* [Robin Sue](https://github.com/Suchiman)\n* [Henry Roeland](https://github.com/driekus77)\n* [Adrian Phinney](https://github.com/TheCloudlessSky)\n* [Andreas Håkansson](https://github.com/thecodejunkie)\n* [Jeremy Meng](https://github.com/jeremymeng)\n* [Yehudah Asher](https://github.com/YehudahA)\n* [Dennis Daume](https://github.com/flagbug)\n* [Jakub Swietek](https://github.com/jswietek)\n* [Dennis Gorelik](https://github.com/dennisgorelik)\n* [Georgios Diamantopoulos](https://github.com/georgiosd)\n* [Brian Ricketts](https://github.com/briman0094)\n* [Laurynas Ruškys](https://github.com/laurynasr)\n* [Martin Wakley](https://github.com/comdw)\n* [Bastian Buchholz](https://github.com/campersau)\n* [Keith Hall](https://github.com/keith-hall)\n* [Nikita Ilinykh](https://github.com/Gordory)\n* [Thomas Bolon](https://github.com/tbolon)\n* [Alexander Ubillus](https://github.com/alexanderuv)\n* [Max Katz](https://github.com/Tirraon)\n* [Jason Nelson](https://github.com/iamcarbon)\n* [kzrnm](https://github.com/kzrnm)\n* [Avatar Mavaddat Javid](https://github.com/mavaddat)\n* [Steven Giesel](https://github.com/linkdotnet)\n* [Bainova Ekaterina](https://github.com/Aizeren)\n* [Oleksii Holub](https://github.com/Tyrrrz)\n* [Henry Roeland](https://github.com/driekus77)\n* [Jody Donetti](https://github.com/jodydonetti)\n* [Heinrich Ulbricht](https://github.com/heinrich-ulbricht)\n* [Patrik Westerlund](https://github.com/patrikwlund)\n* [Egil Hansen](https://github.com/egil)\n* [jbrayfaithlife](https://github.com/jbrayfaithlife)\n* [Simon Cropp](https://github.com/SimonCropp)\n* [Bjørn Olav Ringstad ](https://github.com/bjornri)\n* [Martin Welsch](https://github.com/MartinWelsch)\n* [Matthias Koch](https://github.com/matkoch)\n* [Marko Lahma](https://github.com/lahma)\n* [Ivandro Jao](https://github.com/ivandrofly)\n* [Muhammad Nabilasykar](https://github.com/zukarusan)\n* [Dmitry Kushnir](https://github.com/dv00d00)\n* [Georg Jung](https://github.com/georg-jung)\n* [James Thompson](https://github.com/thompson-tomo)\n* [schaakverslaafd](https://github.com/schaakverslaafd)\n* [Tom van Enckevort](https://github.com/tomvanenckevort)\n* [Micah Bresette](https://github.com/micahbresette)\n* [Russ H](https://github.com/rhuebner76)\n* [noobow](https://github.com/noobow34)\n* [Martin Parkin](https://github.com/memiamp)\n* [Hakob Grigoryan](https://github.com/hflexgrig)\n\nWithout these awesome people AngleSharp could not exist. Thanks to everyone for your contributions! :beers:\n\nMissing you? Please contact us! Potentially, the simplest way is to file a PR with your name / GitHub profile link added to this file.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0595703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 - 2024 AngleSharp\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.4560546875,
          "content": "![logo](https://raw.githubusercontent.com/AngleSharp/AngleSharp/master/header.png)\n\n# AngleSharp\n\n[![CI](https://github.com/AngleSharp/AngleSharp/actions/workflows/ci.yml/badge.svg)](https://github.com/AngleSharp/AngleSharp/actions/workflows/ci.yml)\n[![GitHub Tag](https://img.shields.io/github/tag/AngleSharp/AngleSharp.svg?style=flat-square)](https://github.com/AngleSharp/AngleSharp/releases)\n[![NuGet Count](https://img.shields.io/nuget/dt/AngleSharp.svg?style=flat-square)](https://www.nuget.org/packages/AngleSharp/)\n[![Issues Open](https://img.shields.io/github/issues/AngleSharp/AngleSharp.svg?style=flat-square)](https://github.com/AngleSharp/AngleSharp/issues)\n[![Gitter Chat](http://img.shields.io/badge/gitter-AngleSharp/AngleSharp-blue.svg?style=flat-square)](https://gitter.im/AngleSharp/AngleSharp)\n[![StackOverflow Questions](https://img.shields.io/stackexchange/stackoverflow/t/anglesharp.svg?style=flat-square)](https://stackoverflow.com/tags/anglesharp)\n[![CLA Assistant](https://cla-assistant.io/readme/badge/AngleSharp/AngleSharp?style=flat-square)](https://cla-assistant.io/AngleSharp/AngleSharp)\n\nAngleSharp is a .NET library that gives you the ability to parse angle bracket based hyper-texts like HTML, SVG, and MathML. XML without validation is also supported by the library. An important aspect of AngleSharp is that CSS can also be parsed. The included parser is built upon the official W3C specification. This produces a perfectly portable HTML5 DOM representation of the given source code and ensures compatibility with results in evergreen browsers. Also standard DOM features such as `querySelector` or `querySelectorAll` work for tree traversal.\n\n:zap::zap: **Migrating from AngleSharp 0.9 to AngleSharp 0.10 or later** (incl. 1.0)? Look at our [migration documentation](docs/tutorials/05-Migration.md). :zap::zap:\n\n## Key Features\n\n- **Portable** (using .NET Standard 2.0)\n- **Standards conform** (works exactly as evergreen browsers)\n- **Great performance** (outperforms similar parsers in most scenarios)\n- **Extensible** (extend with your own services)\n- **Useful abstractions** (type helpers, jQuery like construction)\n- **Fully functional DOM** (all the lists, iterators, and events you know)\n- **Form submission** (easily log in everywhere)\n- **Navigation** (a `BrowsingContext` is like a browser tab - control it from .NET!).\n- **LINQ enhanced** (use LINQ with DOM elements, naturally without wrappers)\n\nThe advantage over similar libraries like *HtmlAgilityPack* is that the exposed DOM is using the official W3C specified API, i.e., that even things like `querySelectorAll` are available in AngleSharp. Also the parser uses the HTML 5.1 specification, which defines error handling and element correction. The AngleSharp library focuses on standards compliance, interactivity, and extensibility. It is therefore giving web developers working with C# all possibilities as they know from using the DOM in any modern browser.\n\nThe performance of AngleSharp is quite close to the performance of browsers. Even very large pages can be processed within milliseconds. AngleSharp tries to minimize memory allocations and reuses elements internally to avoid unnecessary object creation.\n\n## Simple Demo\n\nThe simple example will use the website of Wikipedia for data retrieval.\n\n```cs\nvar config = Configuration.Default.WithDefaultLoader();\nvar address = \"https://en.wikipedia.org/wiki/List_of_The_Big_Bang_Theory_episodes\";\nvar context = BrowsingContext.New(config);\nvar document = await context.OpenAsync(address);\nvar cellSelector = \"tr.vevent td:nth-child(3)\";\nvar cells = document.QuerySelectorAll(cellSelector);\nvar titles = cells.Select(m => m.TextContent);\n```\n\nOr the same with explicit types:\n\n```cs\nIConfiguration config = Configuration.Default.WithDefaultLoader();\nstring address = \"https://en.wikipedia.org/wiki/List_of_The_Big_Bang_Theory_episodes\";\nIBrowsingContext context = BrowsingContext.New(config);\nIDocument document = await context.OpenAsync(address);\nstring cellSelector = \"tr.vevent td:nth-child(3)\";\nIHtmlCollection<IElement> cells = document.QuerySelectorAll(cellSelector);\nIEnumerable<string> titles = cells.Select(m => m.TextContent);\n```\n\nIn the example we see:\n\n* How to setup the configuration for supporting document loading\n* Asynchronously get the document in a new context using the configuration\n* Performing a query to get all cells with the content of interest\n* The whole DOM supports LINQ queries\n\nEvery collection in AngleSharp supports LINQ statements. AngleSharp also provides many useful extension methods for element collections that cannot be found in the official DOM.\n\n## Supported Platforms\n\nAngleSharp has been created as a .NET Standard 2.0 compatible library. This includes, but is not limited to:\n\n- .NET Core (2.0 and later)\n- .NET Framework (4.6.2 and later)\n- Xamarin.Android (7.0 and 8.0)\n- Xamarin.iOS (10.0 and 10.14)\n- Xamarin.Mac (3.0 and 3.8)\n- Mono (4.6 and 5.4)\n- UWP (10.0 and 10.0.16299)\n- Unity (2018.1)\n\n## Documentation\n\nThe documentation of AngleSharp is located [in the docs folder](docs/README.md). More examples, best-practices, and general information can be found there. The documentation also contains a list of [frequently asked questions](docs/tutorials/06-Questions.md).\n\nMore information is also available by following some of the hyper references mentioned in the Wiki. In-depth articles will be published on the CodeProject, with links being placed in the Wiki at GitHub.\n\n## Use-Cases\n\n- Parsing HTML (incl. fragments)\n- Parsing CSS (incl. selectors, declarations, ...)\n- Constructing HTML (e.g., view-engine)\n- Minifying CSS, HTML, ...\n- Querying document elements\n- Crawling information\n- Gathering statistics\n- Web automation\n- Tools with HTML / CSS / ... support\n- Connection to page analytics\n- HTML / DOM unit tests\n- Automated JavaScript interaction\n- Testing other concepts, e.g., script engines\n- ...\n\n## Vision\n\nThe project aims to bring a solid implementation of the W3C DOM for HTML, SVG, MathML, and CSS to the CLR - all written in C#. The idea is that you can basically do everything with the DOM in C# that you can do in JavaScript (plus, of course, more).\n\nMost parts of the DOM are included, even though some may still miss their (fully specified / correct) implementation. The goal for v1.0 is to have *all practically relevant* parts implemented according to the official W3C specification (with useful extensions by the WHATWG).\n\nThe API is close to the DOM4 specification, however, the naming has been adjusted to apply with .NET conventions. Nevertheless, to make AngleSharp really useful for, e.g., a JavaScript engine, attributes have been placed on the corresponding interfaces (and methods, properties, ...) to indicate the status of the field in the official specification. This allows automatic generation of DOM objects with the official API.\n\nThis is a long-term project which will eventually result in a state of the art parser for the most important angle bracket based hyper-texts.\n\nOur hope is to build a community around web parsing and libraries from this project. So far we had great contributions, but that goal was not fully achieved. Want to help? Get in touch with us!\n\n## Participating in the Project\n\nIf you know some feature that AngleSharp is currently missing, and you are willing to implement the feature, then your contribution is more than welcome! Also if you have a really cool idea - do not be shy, we'd like to hear it.\n\nIf you have an idea how to improve the API (or what is missing) then posts / messages are also welcome. For instance there have been ongoing discussions about some styles that have been used by AngleSharp (e.g., `HTMLDocument` or `HtmlDocument`) in the past. In the end AngleSharp stopped using `HTMLDocument` (at least visible outside of the library). Now AngleSharp uses names like `IDocument`, `IHtmlElement` and so on. This change would not have been possible without such fruitful discussions.\n\nThe project is always searching for additional contributors. Even if you do not have any code to contribute, but rather an idea for improvement, a bug report or a mistake in the documentation. These are the contributions that keep this project active.\n\nLive discussions can take place in our [Gitter chat](https://gitter.im/AngleSharp/AngleSharp), which supports using GitHub accounts.\n\nMore information is found in the [contribution guidelines](.github/CONTRIBUTING.md). All contributors can be found [in the CONTRIBUTORS](CONTRIBUTORS.md) file.\n\nThis project has also adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community.\n\nFor more information see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct).\n\n## Funding / Support\n\nIf you use AngleSharp frequently, but you do not have the time to support the project by active participation you may still be interested to ensure that the AngleSharp projects keeps the lights on.\n\nTherefore we created a backing model via [Bountysource](https://salt.bountysource.com/teams/anglesharp). Any donation is welcome and much appreciated. We will mostly spend the money on dedicated development time to improve AngleSharp where it needs to be improved, plus invest in the web utility eco-system in .NET (e.g., in JavaScript engines, other parsers, or a renderer for AngleSharp to mention some outstanding projects).\n\n> Visit [Bountysource](https://salt.bountysource.com/teams/anglesharp) for more details.\n\n## Development\n\nAngleSharp is written in the most recent version of C# and thus requires Roslyn as a compiler. Using an IDE like Visual Studio 2019+ is recommended on Windows. Alternatively, VSCode (with OmniSharp or another suitable Language Server Protocol implementation) should be the tool of choice on other platforms.\n\nThe code tries to be as clean as possible. Notably the following rules are used:\n\n- Use braces for any conditional / loop body\n- Use the `-Async` suffixed methods when available\n- Use VIP (\"Var If Possible\") style (in C++ called AAA: Almost Always Auto) to place types on the right\n\nMore important, however, is the proper usage of tests. Any new feature should come with a set of tests to cover the functionality and prevent regression.\n\n## Changelog\n\nA very detailed [changelog](CHANGELOG.md) exists. If you are just interested in major releases then have a look at [the GitHub releases](https://github.com/AngleSharp/AngleSharp/releases).\n\n## .NET Foundation\n\nThis project is supported by the [.NET Foundation](https://dotnetfoundation.org).\n\n## License\n\nAngleSharp is released using the MIT license. For more information see the [license file](./LICENSE).\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.2021484375,
          "content": ":; set -eo pipefail\n:; SCRIPT_DIR=$(cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd)\n:; ${SCRIPT_DIR}/build.sh \"$@\"\n:; exit $?\n\n@ECHO OFF\npowershell -ExecutionPolicy ByPass -NoProfile -File \"%~dp0build.ps1\" %*\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 3.1474609375,
          "content": "[CmdletBinding()]\nParam(\n    [Parameter(Position=0,Mandatory=$false,ValueFromRemainingArguments=$true)]\n    [string[]]$BuildArguments\n)\n\nWrite-Output \"PowerShell $($PSVersionTable.PSEdition) version $($PSVersionTable.PSVersion)\"\n\nSet-StrictMode -Version 2.0; $ErrorActionPreference = \"Stop\"; $ConfirmPreference = \"None\"; trap { Write-Error $_ -ErrorAction Continue; exit 1 }\n$PSScriptRoot = Split-Path $MyInvocation.MyCommand.Path -Parent\n\n###########################################################################\n# CONFIGURATION\n###########################################################################\n\n$BuildProjectFile = \"$PSScriptRoot\\nuke\\_build.csproj\"\n$TempDirectory = \"$PSScriptRoot\\\\.nuke\\temp\"\n\n$DotNetGlobalFile = \"$PSScriptRoot\\\\global.json\"\n$DotNetInstallUrl = \"https://dot.net/v1/dotnet-install.ps1\"\n$DotNetChannel = \"STS\"\n\n$env:DOTNET_CLI_TELEMETRY_OPTOUT = 1\n$env:DOTNET_NOLOGO = 1\n\n###########################################################################\n# EXECUTION\n###########################################################################\n\nfunction ExecSafe([scriptblock] $cmd) {\n    & $cmd\n    if ($LASTEXITCODE) { exit $LASTEXITCODE }\n}\n\n# If dotnet CLI is installed globally and it matches requested version, use for execution\nif ($null -ne (Get-Command \"dotnet\" -ErrorAction SilentlyContinue) -and `\n     $(dotnet --version) -and $LASTEXITCODE -eq 0) {\n    $env:DOTNET_EXE = (Get-Command \"dotnet\").Path\n}\nelse {\n    # Download install script\n    $DotNetInstallFile = \"$TempDirectory\\dotnet-install.ps1\"\n    New-Item -ItemType Directory -Path $TempDirectory -Force | Out-Null\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n    (New-Object System.Net.WebClient).DownloadFile($DotNetInstallUrl, $DotNetInstallFile)\n\n    # If global.json exists, load expected version\n    if (Test-Path $DotNetGlobalFile) {\n        $DotNetGlobal = $(Get-Content $DotNetGlobalFile | Out-String | ConvertFrom-Json)\n        if ($DotNetGlobal.PSObject.Properties[\"sdk\"] -and $DotNetGlobal.sdk.PSObject.Properties[\"version\"]) {\n            $DotNetVersion = $DotNetGlobal.sdk.version\n        }\n    }\n\n    # Install by channel or version\n    $DotNetDirectory = \"$TempDirectory\\dotnet-win\"\n    if (!(Test-Path variable:DotNetVersion)) {\n        ExecSafe { & powershell $DotNetInstallFile -InstallDir $DotNetDirectory -Channel $DotNetChannel -NoPath }\n    } else {\n        ExecSafe { & powershell $DotNetInstallFile -InstallDir $DotNetDirectory -Version $DotNetVersion -NoPath }\n    }\n    $env:DOTNET_EXE = \"$DotNetDirectory\\dotnet.exe\"\n    $env:PATH = \"$DotNetDirectory;$env:PATH\"\n}\n\nWrite-Output \"Microsoft (R) .NET SDK version $(& $env:DOTNET_EXE --version)\"\n\nif (Test-Path env:NUKE_ENTERPRISE_TOKEN) {\n    & $env:DOTNET_EXE nuget remove source \"nuke-enterprise\" > $null\n    & $env:DOTNET_EXE nuget add source \"https://f.feedz.io/nuke/enterprise/nuget\" --name \"nuke-enterprise\" --username \"PAT\" --password $env:NUKE_ENTERPRISE_TOKEN > $null\n}\n\nExecSafe { & $env:DOTNET_EXE build $BuildProjectFile /nodeReuse:false /p:UseSharedCompilation=false -nologo -clp:NoSummary --verbosity quiet }\nExecSafe { & $env:DOTNET_EXE run --project $BuildProjectFile --no-build -- $BuildArguments }\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 2.564453125,
          "content": "#!/usr/bin/env bash\n\nbash --version 2>&1 | head -n 1\n\nset -eo pipefail\nSCRIPT_DIR=$(cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd)\n\n###########################################################################\n# CONFIGURATION\n###########################################################################\n\nBUILD_PROJECT_FILE=\"$SCRIPT_DIR/nuke/_build.csproj\"\nTEMP_DIRECTORY=\"$SCRIPT_DIR//.nuke/temp\"\n\nDOTNET_GLOBAL_FILE=\"$SCRIPT_DIR//global.json\"\nDOTNET_INSTALL_URL=\"https://dot.net/v1/dotnet-install.sh\"\nDOTNET_CHANNEL=\"STS\"\n\nexport DOTNET_CLI_TELEMETRY_OPTOUT=1\nexport DOTNET_NOLOGO=1\n\n###########################################################################\n# EXECUTION\n###########################################################################\n\nfunction FirstJsonValue {\n    perl -nle 'print $1 if m{\"'\"$1\"'\": \"([^\"]+)\",?}' <<< \"${@:2}\"\n}\n\n# If dotnet CLI is installed globally and it matches requested version, use for execution\nif [ -x \"$(command -v dotnet)\" ] && dotnet --version &>/dev/null; then\n    export DOTNET_EXE=\"$(command -v dotnet)\"\nelse\n    # Download install script\n    DOTNET_INSTALL_FILE=\"$TEMP_DIRECTORY/dotnet-install.sh\"\n    mkdir -p \"$TEMP_DIRECTORY\"\n    curl -Lsfo \"$DOTNET_INSTALL_FILE\" \"$DOTNET_INSTALL_URL\"\n    chmod +x \"$DOTNET_INSTALL_FILE\"\n\n    # If global.json exists, load expected version\n    if [[ -f \"$DOTNET_GLOBAL_FILE\" ]]; then\n        DOTNET_VERSION=$(FirstJsonValue \"version\" \"$(cat \"$DOTNET_GLOBAL_FILE\")\")\n        if [[ \"$DOTNET_VERSION\" == \"\"  ]]; then\n            unset DOTNET_VERSION\n        fi\n    fi\n\n    # Install by channel or version\n    DOTNET_DIRECTORY=\"$TEMP_DIRECTORY/dotnet-unix\"\n    if [[ -z ${DOTNET_VERSION+x} ]]; then\n        \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --channel \"$DOTNET_CHANNEL\" --no-path\n    else\n        \"$DOTNET_INSTALL_FILE\" --install-dir \"$DOTNET_DIRECTORY\" --version \"$DOTNET_VERSION\" --no-path\n    fi\n    export DOTNET_EXE=\"$DOTNET_DIRECTORY/dotnet\"\n    export PATH=\"$DOTNET_DIRECTORY:$PATH\"\nfi\n\necho \"Microsoft (R) .NET SDK version $(\"$DOTNET_EXE\" --version)\"\n\nif [[ ! -z ${NUKE_ENTERPRISE_TOKEN+x} && \"$NUKE_ENTERPRISE_TOKEN\" != \"\" ]]; then\n    \"$DOTNET_EXE\" nuget remove source \"nuke-enterprise\" &>/dev/null || true\n    \"$DOTNET_EXE\" nuget add source \"https://f.feedz.io/nuke/enterprise/nuget\" --name \"nuke-enterprise\" --username \"PAT\" --password \"$NUKE_ENTERPRISE_TOKEN\" --store-password-in-clear-text &>/dev/null || true\nfi\n\n\"$DOTNET_EXE\" build \"$BUILD_PROJECT_FILE\" /nodeReuse:false /p:UseSharedCompilation=false -nologo -clp:NoSummary --verbosity quiet\n\"$DOTNET_EXE\" run --project \"$BUILD_PROJECT_FILE\" --no-build -- \"$@\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "header.png",
          "type": "blob",
          "size": 13.625,
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 4.4013671875,
          "content": null
        },
        {
          "name": "nuke",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}