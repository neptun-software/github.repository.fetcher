{
  "metadata": {
    "timestamp": 1736711144740,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dodyg/practical-aspnetcore",
      "stars": 9631,
      "defaultBranch": "net8.0",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.08984375,
          "content": "csharp_style_namespace_declarations = file_scoped\ndotnet_diagnostic.IDE0161.severity = error"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1865234375,
          "content": "*.cs linguist-detectable=true\n*.cshtml linguist-detectable=true\n*.html linguist-detectable=false\n*.js linguist-detectable=false\n*.ts linguist-detectable=false\n*.css linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.103515625,
          "content": "[Oo]bj/\n[Bb]in/\nnode_modules/\n\nproject.lock.json\n\n*.user\n*.suo\n*.cache\n*.docstates\n*.db\n\n.vs/\nProperties/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at dodyg@silverkeytech.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.62109375,
          "content": "## Contributor Guidelines\n\n* Put all the code inside Program.cs. It makes it easier for casual users to read the code online and learn something. Sometimes it is too cumbersome to chase down types using browser.\n* Keep your sample very simple and specific. Try to minimise the amount of concept that people need to know in order to understand your code.\n* There is no sample that is too small. If it shows one single interesting and useful knoweldge, add it in.* \n* When you are ready, update readme and add the link to the project with a paragraph or two. Do not forget to increment the sample count at the beginning of this document.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Dody Gunawinata\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.3798828125,
          "content": "# Samples for ASP.NET Core 8.0 \n\n> [!NOTE]\n> This repository is WIP. I am updating all the previous samples from .NET 6/7 to .NET 8. Check the previous stable branch ([6.0](https://github.com/dodyg/practical-aspnetcore/tree/net6.0/)) if you want to browse the existing stable samples that contains also .NET 7/8 samples.\n\nGreetings from Cairo, Egypt. You can [sponsor](https://github.com/sponsors/dodyg) this project [here](https://github.com/sponsors/dodyg). \n\n## ASP.NET Core 9\n\nYou can find samples on new features availabel in ASP.NET Core 9(3) [here](/projects/net9).\n\n## Previous versions\n\n[6.0](https://github.com/dodyg/practical-aspnetcore/tree/net6.0/), [5.0](https://github.com/dodyg/practical-aspnetcore/tree/net5.0/), [3.1 LTS](https://github.com/dodyg/practical-aspnetcore/tree/3.1-LTS/), [2.1 LTS](https://github.com/dodyg/practical-aspnetcore/tree/2.1-LTS)\n\n## Other Samples\n\n- For ATProtocol (the underlying open protocol for Bluesky) related samples, you can find them [here](https://github.com/dodyg/bluenile). \n- For Hydro Framework (Razor Pages compatible), you can find them [here](/projects/hydro/)(4).\n- [Official .NET Aspire samples](https://github.com/dotnet/aspire-samples).\n- For Data Access samples, go to the excellent [ORM Cookbook](https://github.com/Grauenwolf/DotNet-ORM-Cookbook).\n- .NET team also has [a sample repository](https://github.com/dotnet/samples).\n\n\n## Sections\n\n| Section                                                                 |     |                                                                              |\n| ----------------------------------------------------------------------- | --- | ---------------------------------------------------------------------------- |\n| [Authentication](/projects/authentication)                              | 5   |                                                                              |\n| [Blazor Client Side (Web Assembly)](/projects/blazor-wasm)              | 22  | .NET8 (WIP), Components, Data Binding                                        |\n| [Blazor Server](/projects/blazor-ss)                                    | 16  | Localization                                                                 |\n| [Blazor Server Side Render](/projects/blazor-ssr)                       | 22  |                                                                              |\n| [Caching](/projects/caching)                                            | 5   |                                                                              |\n| [Configurations](/projects/configurations)                              | 10  |                                                                              |\n| [CoreWCF](/projects/corewcf)                                            | 1   |                                                                              |\n| [Dependency Injection](/projects/dependency-injection/)                 | 4   |                                                                              |\n| [Diagnostics](/projects/diagnostics)                                    | 5   |                                                                              |\n| [Endpoint Routing](/projects/endpoint-routing)                          | 32  |                                                                              |\n| [Email](/projects/mailkit)                                              | 2   |                                                                              |\n| [Elsa Workflow](/projects/elsa)                                         | 14  | .NET8                                                                        |\n| [Exception Handler Middleware](/projects/exception-handler-middleware/) | 2   |                                                                              |\n| [Features](/projects/features)                                          | 11  |                                                                              |\n| [Generic Hosting](/projects/generic-host)                               | 9   |                                                                              |\n| [gRPC](/projects/grpc) (including grpc-Web)                             | 12  |                                                                              |\n| [Health Check](/projects/health-check)                                  | 6   |                                                                              |\n| [HTMX](/projects/htmx)                                                  | 40  |                                                                              |\n| [IHttpClientFactory](/projects/httpclientfactory)                       | 4   |                                                                              |\n| [IHostedService](/projects/ihosted-service)                             | 2   |                                                                              |\n| [Logging](/projects/logging)                                            | 5   |                                                                              |\n| [Localization and Globalization](/projects/localization)                | 6   |                                                                              |\n| [Middleware](/projects/middleware)                                      | 14  |                                                                              |\n| [Mini Apps](/projects/mini)                                             | 2   |                                                                              |\n| [Minimal API](/projects/minimal-api)                                    | 36  | Routing, Parameter Bindings, etc                                             |\n| [Minimal Hosting](/projects/minimal-hosting)                            | 23  |                                                                              |\n| [MVC](/projects/mvc)                                                    | 47  | Localization, Routing, Razor Class Library, Tag Helpers, View Component, etc |\n| [Output Cache Middleware](/projects/output-cache-middleware)            |     |                                                                              |\n| [Open Telemetry](/projects/open-telemetry/)                             | 3   |                                                                              |\n| [Orchard Core](/projects/orchard-core)                                  | 4   |                                                                              |\n| [Path String (HttpContext.Request.Path)](/projects/path-string)         | 1   |                                                                              |\n| [Polly](/projects/polly/)                                               | 1   |                                                                              |\n| [Problem Details Middleware](/projects/problem-details-middleware/)     | 3   |                                                                              |\n| [Razor Pages](/projects/razor-pages)                                    | 10  | TempData                                                                     |\n| [RazorSlices](/projects/razor-slices)                                   | 1   |                                                                              |\n| [Request](/projects/request)                                            | 15  | Form, Cookies, Query String, Headers                                         |\n| [Request Timeouts Middleware](/projets/request-timeouts-middleware)     | 6   |                                                                              |\n| [Response](/projects/response)                                          | 3   |                                                                              |\n| [SignalR](/projects/signalr)                                            | 1   |                                                                              |\n| [Security](/projects/security)                                          | 7   |                                                                              |\n| [Single File Application](/projects/sfa)                                | 2   |                                                                              |\n| [Static Files and File Provider](/projects/file-provider)               | 10  |                                                                              |\n| [System.Text.Json](/projects/json)                                      | 23  |                                                                              |\n| [Syndications](/projects/syndications)                                  | 3   |                                                                              |\n| [Testing](/projects/testing)                                            | 1   |                                                                              |\n| [Unpoly](/projects/unpoly)                                              | 5   |                                                                              |\n| [URL Redirect/Rewrite](/projects/rewrite)                               | 6   |                                                                              |\n| [Uri Helper](/projects/uri-helper)                                      | 5   |                                                                              |\n| [Windows Service](/projects/windows-service)                            | 1   |                                                                              |\n| [Web Sockets](/projects/web-sockets)                                    | 6   |                                                                              |\n| [Web Utilities](/projects/web-utilities)                                | 3   |                                                                              |\n| [Orleans](/projects/orleans)                                            | 5   | .NET.8                                                                       |\n| [Xml](/projects/xml)                                                    | 1   |                                                                              |\n| [YARP](/projects/yarp)                                                  | 1   |                                                                              |\n\n## How to run these samples\n\nTo run these samples, simply open your command line console, go to each folder and execute `dotnet watch run`.\n\n### Misc (6)\n\n-   [Application Environment](/projects/application-environment)\n\n    This sample shows how to obtain application environment information (target framework, etc).\n\n-   [Show Connection info](/projects/connection-info)\n\n    Enumerate the connection information of a HTTP request.\n\n-   [Password Hasher server](/projects/password-hasher)\n\n    Give it a string and it will generate a secure hash for you, e.g. `localhost:5000?password=mypassword`.\n\n-   [Version info](/projects/version)\n\n    Show various version info of the framework your system is running on.\n\n-   [IApplicationLifetime](/projects/i-application-lifetime)\n\n    Responds to application startup and shutdown.\n\n    We are using `IApplicationLifetime` that trigger events during application startup and shutdown.\n\n- [Short Circuit](map-short-circuit)\n\n  Use `MapShortCircuit` or `.ShortCircuit()` to efficiently respond to a request without going through a middleware pipeline run. \n\n### Server-Sent Events (1)\n\n-   [Forever Server](/projects/sse)\n\n    This server will send a 'hello world' greeting forever.\n\n### Markdown (2)\n\n-   [Markdown server](/projects/markdown-server)\n\n    Serve markdown file as html file. You will see how you can create useful app using a few basic facilities in aspnetcore.\n\n    We take `\"Markdig\"` as dependency.\n\n-   [Markdown server - implemented as middleware component](/projects/markdown-server-middleware)\n\n    Serve markdown file as html file. It has the same exact functionality as [Markdown server](/projects/markdown-server) but implemented using middleware component.\n\n    We take `\"Markdig\"` as dependency.\n\n### Utils (3)\n\n-   [Status Codes](/projects/utils/http-status-codes)\n\n    Here we contrast between the usage of `Microsoft.AspNetCore.Http.StatusCodes` and `System.Net.HttpStatusCode`.\n\n-   [MediaTypeNames](/projects/utils/media-type-names)\n\n    This class provides convenient constants for some common MIME types. It's not extensive by any means however `MediaTypeNames.Text.Html` and `MediaTypeNames.Application.Json` come handy.\n\n-   [MediaTypeNames - 2](/projects/utils/media-type-names-2)\n\n    Using `FileExtensionContentTypeProvider` to obtain the correct MIME type of a filename extension.\n\n### Device Detection (1)\n\nThe samples in this section rely on [Wangkanai.Detection](https://github.com/wangkanai/wangkanai/tree/main/Detection) library.\n\n-   [Device Detection](/projects/device-detection)\n\n    This is the most basic device detection. You will be able to detect whether the client is a desktop or a mobile client.\n\n### Image Sharp (1)\n\nAll these samples require `SixLabors.ImageSharp.Web` middleware package. This middleware is an excelent tool to process your day to day image processing need.\n\n-   [Image-Sharp](/projects/image-sharp)\n\n    This example shows how to enable image resizing functionality to your site. It's super easy and the middleware takes care of caching, etc.\n\n## Misc\n\n-   [Contributor Guidelines](https://github.com/dodyg/practical-aspnetcore/blob/master/CONTRIBUTING.md)\n-   [Code of Conduct](https://github.com/dodyg/practical-aspnetcore/blob/master/CODE_OF_CONDUCT.md)\n"
        },
        {
          "name": "exercises",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.0693359375,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"major\"\n  }\n}"
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "skills-checklist.md",
          "type": "blob",
          "size": 0.0927734375,
          "content": "#Skills Checklist\n\nThe following are the checklist of ASP.NET Core that you need to know\n\n(WIP)"
        }
      ]
    }
  ]
}