{
  "metadata": {
    "timestamp": 1736711147516,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MahApps/MahApps.Metro",
      "stars": 9372,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.41796875,
          "content": "; Top-most http://editorconfig.org/ file\nroot = true\n\n[*]\nend_of_line = CRLF\n\n; 4-column tab indentation\n[*.{cs,csproj,xaml,xml,props,targets}]\nindent_style = space\nindent_size = 4\n\n[*.{md,yml,json}]\nindent_style = space\nindent_size = 2\n\n\n[*.cs]\n# WPF0011: Containing type should be used as registered owner.\ndotnet_diagnostic.WPF0011.severity = error\n\n# WPF0132: Use PART prefix.\ndotnet_diagnostic.WPF0132.severity = suggestion"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.470703125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain"
        },
        {
          "name": ".gitbugtraq",
          "type": "blob",
          "size": 0.5302734375,
          "content": "[bugtraq \"issues\"]\n    url = https://github.com/MahApps/MahApps.Metro/issues/%BUGID%\n    logfilterregex = \"([^C](#\\\\d+)+)\"\n    logregex = \\\\d+\n    \n[bugtraq \"users\"]\n    url = https://github.com/%BUGID%\n    loglinkregex = @\\\\w+\n    logregex = \\\\w+\n    \n[bugtraq \"commitId\"]\n    url = https://github.com/MahApps/MahApps.Metro/commit/%BUGID%\n    logregex = [0-9a-f]{6,32}\n    \n[bugtraq \"version\"]\n    url = https://github.com/MahApps/MahApps.Metro/releases/tag/%BUGID%\n    loglinkregex = v[0-9]+.[0-9]+.[0-9]+\n    logregex = [0-9]+.[0-9]+.[0-9]+"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.3037109375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.binlog\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignoreable files\n*.nuget.props\n*.nuget.targets\n\n# scriptcs\n**/scriptcs_packages/*\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n#.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# Generated files\n*_wpftmp.csproj\nsrc/MahApps.Metro/Styles/Themes/*.xaml\n\n# Allowed files\n!src/MahApps.Metro/Styles/Themes/Theme.Template.xaml\n\n# cake\ntools/*\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.14453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at mahapps.metro@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "GitReleaseManager.yaml",
          "type": "blob",
          "size": 0.890625,
          "content": "create:\n  include-footer: true\n  footer-heading: Where to get it\n  footer-content: You can download this release from [MahApps.Metro](https://github.com/MahApps/MahApps.Metro/releases/{milestone})\n  footer-includes-milestone: true\n  milestone-replace-text: '{milestone}'\nexport:\n  include-created-date-in-title: true\n  created-date-string-format: MMMM dd, yyyy\n  perform-regex-removal: true\n  regex-text: '### Where to get it(\\r\\n)*You can .*\\)'\n  multiline-regex: true\nissue-labels-include:\n- Breaking Change\n- Bug\n- Bug Fix\n- Feature\n- Feature Request\n- Improvement\n- Hacktoberfest\nissue-labels-exclude:\n- Internal Refactoring\n- Build\n- Question\n- WontFix\n- Duplicate\n- Housekeeping\n- Documentation\n- CleanUp / Typos\nissue-labels-alias:\n    - name:    Documentation\n      header:  Documentation\n      plural:  Documentation\n    - name:    Hacktoberfest\n      header:  Hacktoberfest\n      plural:  Hacktoberfest"
        },
        {
          "name": "GitVersion.yml",
          "type": "blob",
          "size": 0.513671875,
          "content": "assembly-versioning-scheme: Major\nassembly-file-versioning-scheme: MajorMinorPatchTag\nmode: ContinuousDeployment\nnext-version: 3.0.0\nbranches:\n  master:\n    regex: ^main\n    mode: ContinuousDeployment\n    tag: rc\n    prevent-increment-of-merged-branch-version: true\n    track-merge-target: false\n    is-release-branch: true\n  develop:\n    mode: ContinuousDeployment\n    tag: alpha\n    prevent-increment-of-merged-branch-version: true\n    track-merge-target: true\n  pull-request:\n    mode: ContinuousDelivery\nignore:\n  sha: []\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.080078125,
          "content": "MIT License\n\nCopyright (c) .NET Foundation and Contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 6.67578125,
          "content": "# MahApps.Metro\n\nMIT License\n\nCopyright (c) 2011 - 2020 MahApps and Contributors.\n\nCopyright (c) 2020 .NET Foundation and Contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n# Third party notice\n\nMahApps.Metro contains third party open source code and uses third party open source libraries.\n\nUnless indicated otherwise on a per-file basis all source and documentation herein is licensed under the MIT license.\n\n## AvalonControlsLibrary (RangeSlider)\n\n- [Source (Codeplex)](http://avaloncontrolslib.codeplex.com)\n- [Source (GitHub)](https://github.com/MahApps/AvalonControlLibrary)\n- [Microsoft Public License (Ms-PL)](https://github.com/MahApps/AvalonControlLibrary/blob/master/LICENSE)\n\n## Caliburn.Micro\n\n- [Source](https://github.com/Caliburn-Micro/Caliburn.Micro)\n- [MIT License](https://github.com/Caliburn-Micro/Caliburn.Micro/blob/master/License.txt)\n\n## Callisto\n\n- Copyright (c) 2012,2013 Tim Heuer\n- [Source](https://github.com/timheuer/callisto)\n- [Microsoft Public License (Ms-PL)](https://github.com/timheuer/callisto/blob/master/License.txt)\n\n## ControlzEx\n\n- Copyright (c) Jan Karger, Bastian Schmidt, James Willock\n- [Source](https://github.com/ControlzEx/ControlzEx)\n- [MIT License](https://github.com/ControlzEx/ControlzEx/blob/develop/LICENSE)\n\n## Costura\n\n- Copyright (c) 2012 Simon Cropp and contributors\n- [Source](https://github.com/Fody/Costura)\n- [MIT License](https://github.com/Fody/Costura/blob/develop/LICENSE)\n\n## ExposedObject\n\n- [Source](https://github.com/skolima/ExposedObject)\n- [MIT License](https://opensource.org/licenses/MIT)\n\n## Fody\n\n- Copyright (c) Simon Cropp\n- [Source](https://github.com/Fody/Fody)\n- [MIT License](https://github.com/Fody/Fody/blob/master/License.txt)\n\n## InfragisticsThemesForMicrosoftControls\n\n- The standard `CheckBox` and `RadioButton` styles adapted from styles created by [Brian Lagunas](https://brianlagunas.com/free-metro-light-and-dark-themes-for-wpf-and-silverlight-microsoft-controls/)\n- Copyright (c) 2015 Infragistics\n- [Source](https://github.com/Infragistics/InfragisticsThemesForMicrosoftControls)\n- [MIT License](https://github.com/Infragistics/InfragisticsThemesForMicrosoftControls/blob/master/LICENSE.txt)\n\n## JetBrains.Annotations\n\n- [NuGet](https://www.nuget.org/packages/JetBrains.Annotations)\n- [Info](https://www.jetbrains.com/help/resharper/Code_Analysis__Code_Annotations.html)\n- [MIT License](https://opensource.org/licenses/MIT)\n\n## MahApps.Metro.IconPacks\n\n- Copyright (c) MahApps, Jan Karger\n- [Source](https://github.com/MahApps/MahApps.Metro.IconPacks)\n- [MIT License](https://github.com/MahApps/MahApps.Metro.IconPacks/blob/develop/LICENSE)\n\n## MaterialDesignColors\n\n- Copyright (c) James Willock, Mulholland Software and Contributors\n- [NuGet](https://www.nuget.org/packages/MaterialDesignColors/)\n- [Source](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit)\n- [MIT License](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/blob/master/LICENSE)\n\n## MaterialDesignThemes\n\n- Copyright (c) James Willock, Mulholland Software and Contributors\n- [NuGet](https://www.nuget.org/packages/MaterialDesignThemes)\n- [Source](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit)\n- [MIT License](https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit/blob/master/LICENSE)\n\n## Microsoft.NET.Test.Sdk\n\n- Copyright (c) Microsoft Corporation. All rights reserved.\n- [NuGet](https://www.nuget.org/packages/Microsoft.NET.Test.Sdk)\n- [Source](https://github.com/microsoft/vstest/)\n- [MIT License](https://github.com/microsoft/vstest/blob/master/LICENSE)\n\n## Microsoft.SourceLink.GitHub\n\n- [NuGet](https://www.nuget.org/packages/Microsoft.SourceLink.GitHub)\n- [Source](https://github.com/dotnet/sourcelink)\n- [Apache License 2.0](https://github.com/dotnet/sourcelink/blob/master/License.txt)\n\n## Newtonsoft.Json\n\n- Copyright (c) 2007 James Newton-King\n- [NuGet](https://www.nuget.org/packages/Newtonsoft.Json)\n- [Source](https://github.com/JamesNK/Newtonsoft.Json)\n- [MIT License](https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md)\n\n## NHotkey.Wpf\n\n- [NuGet](https://www.nuget.org/packages/NHotkey.Wpf)\n- [Source](https://github.com/thomaslevesque/NHotkey)\n- [Apache License v2.0](https://github.com/thomaslevesque/NHotkey/blob/master/LICENSE.md)\n\n## Silverlight Toolkit 5\n\n- `TransitioningContentControl`\n- [Source](https://github.com/microsoftarchive/SilverlightToolkit)\n- [Microsoft Public License (MS-PL)](https://github.com/microsoftarchive/SilverlightToolkit/blob/master/LICENSE)\n\n## WpfAnalyzers\n\n- Copyright (c) 2016 .NET Analyzers\n- [NuGet](https://www.nuget.org/packages/WpfAnalyzers)\n- [Source](https://github.com/DotNetAnalyzers/WpfAnalyzers)\n- [MIT License](https://github.com/DotNetAnalyzers/WpfAnalyzers/blob/master/LICENSE)\n\n## WPFSpark\n\n- `ClipBorder`\n- Copyright (c) 2017 Ratish Philip\n- [Source](https://github.com/ratishphilip/wpfspark)\n- [MIT License](https://github.com/ratishphilip/wpfspark/blob/master/LICENSE)\n\n## XamlColorSchemeGenerator\n\n- Copyright (c) 2017 - 2020 Bastian Schmidt\n- [NuGet](https://www.nuget.org/packages/XamlColorSchemeGenerator)\n- [Source](https://github.com/batzen/XamlColorSchemeGenerator)\n- [MIT License](https://github.com/batzen/XamlColorSchemeGenerator/blob/master/LICENSE)\n\n## xunit\n\n- Copyright (c) .NET Foundation and Contributors. All Rights Reserved.\n- [NuGet](https://www.nuget.org/packages/xunit)\n- [Source](https://github.com/xunit/xunit)\n- [License](https://github.com/xunit/xunit/blob/main/LICENSE)\n\n## xunit.runner.visualstudio\n\n- Copyright (c) .NET Foundation and Contributors. All Rights Reserved.\n- [NuGet](https://www.nuget.org/packages/xunit.runner.visualstudio)\n- [Source](https://github.com/xunit/visualstudio.xunit)\n- [License](https://github.com/xunit/visualstudio.xunit/blob/master/License.txt)\n"
        },
        {
          "name": "NuGet.Config",
          "type": "blob",
          "size": 1.4990234375,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <solution>\n    <add key=\"disableSourceControlIntegration\" value=\"true\" />\n  </solution>  \n  <packageRestore>\n    <add key=\"enabled\" value=\"True\" />\n    <add key=\"automatic\" value=\"True\" />\n  </packageRestore>\n  <packageSources>\n    <clear />\n    <!-- <add key=\"CI.ControlzEx\" value=\"https://ci.appveyor.com/nuget/controlzex\" /> -->\n    <!-- <add key=\"CI.ControlzEx\" value=\"C:\\DEV\\OSS_Own\\ControlzEx\\src\\bin\" /> -->\n    <!-- <add key=\"CI.XamlColorSchemeGenerator\" value=\"https://ci.appveyor.com/nuget/xamlcolorschemegenerator\" /> -->\n    <!-- <add key=\"CI.XamlColorSchemeGenerator\" value=\"C:\\DEV\\OSS_Own\\XamlColorSchemeGenerator\\bin\\Release\" /> -->\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n  </packageSources>\n  <activePackageSource>\n    <clear />\n    <!-- <add key=\"CI.ControlzEx\" value=\"https://ci.appveyor.com/nuget/controlzex\" /> -->\n    <!-- <add key=\"CI.ControlzEx\" value=\"C:\\DEV\\OSS_Own\\ControlzEx\\src\\bin\" /> -->\n    <!-- <add key=\"CI.XamlColorSchemeGenerator\" value=\"https://ci.appveyor.com/nuget/xamlcolorschemegenerator\" /> -->\n    <!-- <add key=\"CI.XamlColorSchemeGenerator\" value=\"C:\\DEV\\OSS_Own\\XamlColorSchemeGenerator\\bin\\Release\" /> -->\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\n  </activePackageSource>\n  <packageSourceMapping>\n    <packageSource key=\"nuget.org\">\n      <package pattern=\"*\" />\n    </packageSource>\n  </packageSourceMapping>\n</configuration>"
        },
        {
          "name": "Settings.XAMLStyler",
          "type": "blob",
          "size": 1.97265625,
          "content": "{\n    \"IndentSize\": 4,\n    \"AttributesTolerance\": 2,\n    \"KeepFirstAttributeOnSameLine\": true,\n    \"MaxAttributeCharactersPerLine\": 0,\n    \"MaxAttributesPerLine\": 1,\n    \"NewlineExemptionElements\": \"RadialGradientBrush, GradientStop, LinearGradientBrush, ScaleTransform, SkewTransform, RotateTransform, TranslateTransform, Trigger, MultiTrigger, DataTrigger, MultiDataTrigger, Condition, Setter, SolidColorBrush, Pen\",\n    \"SeparateByGroups\": false,\n    \"AttributeIndentation\": 0,\n    \"AttributeIndentationStyle\": 1,\n    \"RemoveDesignTimeReferences\":  false,\n    \"EnableAttributeReordering\": true,\n    \"AttributeOrderingRuleGroups\": [\n        \"x:Class\",\n        \"xmlns, xmlns:x\",\n        \"xmlns:*\",\n        \"x:Key, Key, x:Name, Name, x:Uid, Uid, Title\",\n        \"Grid.Row, Grid.RowSpan, Grid.Column, Grid.ColumnSpan, Canvas.Left, Canvas.Top, Canvas.Right, Canvas.Bottom\",\n        \"Width, Height, MinWidth, MinHeight, MaxWidth, MaxHeight\",\n        \"Margin, Padding, HorizontalAlignment, VerticalAlignment, HorizontalContentAlignment, VerticalContentAlignment, Panel.ZIndex\",\n        \"*:*, *\",\n        \"PageSource, PageIndex, Offset, Color, TargetName, Property, Value, StartPoint, EndPoint\",\n        \"*:Freeze, mc:Ignorable, d:IsDataSource, d:LayoutOverrides, d:IsStaticText\",\n        \"Storyboard.*, From, To, Duration\"\n    ],\n    \"FirstLineAttributes\": \"\",\n    \"OrderAttributesByName\": true,\n    \"PutEndingBracketOnNewLine\": false,\n    \"RemoveEndingTagOfEmptyElement\": true,\n    \"SpaceBeforeClosingSlash\": true,\n    \"RootElementLineBreakRule\": 1,\n    \"ReorderVSM\": 2,\n    \"ReorderGridChildren\": false,\n    \"ReorderCanvasChildren\": false,\n    \"ReorderSetters\": 3,\n    \"FormatMarkupExtension\": true,\n    \"NoNewLineMarkupExtensions\": \"x:Bind, Binding, TemplateBinding, x:Static, DynamicResource, ComponentResourceKey, iconPacks:Modern, iconPacks:Material\",\n    \"ThicknessSeparator\": 1,\n    \"ThicknessAttributes\": \"Margin, Padding, BorderThickness, ThumbnailClipMargin\",\n    \"FormatOnSave\": false,\n    \"CommentPadding\": 2,\n}"
        },
        {
          "name": "Visual Studio Templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.6943359375,
          "content": "# http://www.appveyor.com/docs/appveyor-yml\n\nbranches:\n  only:\n    - develop\n    - main\n\nenvironment:\n  # bad, but without this, gitversion doesn't work anymore\n  IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1\n  azure-key-vault-url:\n    secure: 1mKS/HfCVq+iYNRVSrrN8NEowOkKt3knrpMzw+SOy3g=\n  azure-key-vault-client-id:\n    secure: JfSqzmsJdXB6uIxttCRoQw1NygwxqXHDj9uIqQnWOb9VCnQYlRPlAnxgW0yTSX4b\n  azure-key-vault-tenant-id:\n    secure: FxjkcqtpulfpDpfSAu4onaLVP/H1S1ORRCQCqsZkDC6YhCSmFoMxYNsWv5uGe3ah\n  azure-key-vault-client-secret:\n    secure: CUpRJxMLeUZwNPMcqI0wECaWfy5AMnWn1UZhBd9WnQ3Z16lJP1Vzrkf24mccbhUD\n  azure-key-vault-certificate:\n    secure: BSPdW2TgnQtoQXXbeDECug==\n\nskip_tags: true\nimage: Visual Studio 2022\ntest: false\n\ninstall:\n  # Appveyor uses git checkout -qf FETCH_HEAD but all GitVersion versions above 5.6.3 doesn't support this detached header\n  # This is a workaround for this issue\n  - ps: |\n      if ($env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT -ne \"\")\n      {\n        git checkout -qf $($env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT)\n      }\n  - ps: Invoke-WebRequest 'https://dot.net/v1/dotnet-install.ps1' -OutFile 'dotnet-install.ps1'\n  - ps: ./dotnet-install.ps1 -Version 8.0.403 -InstallDir \"C:\\Program Files\\dotnet\"\n\npull_requests:\n  do_not_increment_build_number: false\n\nbuild_script:\n  - ps: dotnet --info\n  - ps: gitversion /version\n  - ps: .\\build.ps1 --target=ci --verbosity=diagnostic\n\nafter_build:\n  - ps: gci -Filter *.trx -Path .\\TestResults\\ | % { (New-Object 'System.Net.WebClient').UploadFile(\"https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)\", (Resolve-Path $_.FullName)) }\n\nartifacts:\n  - path: \\Publish\\*.*\n\nnuget:\n  disable_publish_on_pr: true\n\nskip_commits:\n  files:\n    - '**/*.md'\n"
        },
        {
          "name": "build.cake",
          "type": "blob",
          "size": 16.6494140625,
          "content": "///////////////////////////////////////////////////////////////////////////////\n// TOOLS / ADDINS\n///////////////////////////////////////////////////////////////////////////////\n\n#tool dotnet:?package=NuGetKeyVaultSignTool&version=3.2.3\n#tool dotnet:?package=AzureSignTool&version=4.0.1\n#tool dotnet:?package=GitReleaseManager.Tool&version=0.15.0\n#tool dotnet:?package=XamlStyler.Console&version=3.2404.2\n#tool nuget:?package=GitVersion.CommandLine&version=5.12.0\n\n///////////////////////////////////////////////////////////////////////////////\n// ARGUMENTS\n///////////////////////////////////////////////////////////////////////////////\n\nvar target = Argument(\"target\", \"Default\");\n\n///////////////////////////////////////////////////////////////////////////////\n// PREPARATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar repoName = \"MahApps.Metro\";\nvar baseDir = MakeAbsolute(Directory(\".\")).ToString();\nvar srcDir = baseDir + \"/src\";\nvar solution = srcDir + \"/MahApps.Metro.sln\";\nvar publishDir = baseDir + \"/Publish\";\nvar testResultsDir = Directory(baseDir + \"/TestResults\");\n\nvar gitVersionPath = Context.Tools.Resolve(\"gitversion.exe\");\n\nvar styler = Context.Tools.Resolve(\"xstyler.exe\");\nvar stylerFile = baseDir + \"/Settings.XAMLStyler\";\n\npublic class BuildData\n{\n    public string Configuration { get; }\n    public Verbosity Verbosity { get; }\n    public DotNetVerbosity DotNetVerbosity { get; }\n    public bool IsLocalBuild { get; set; }\n    public bool IsPullRequest { get; set; }\n    public bool IsPrerelease { get; set; }\n    public GitVersion GitVersion { get; set; }\n\n    public BuildData(\n        string configuration,\n        Verbosity verbosity,\n        DotNetVerbosity dotNetVerbosity\n    )\n    {\n        Configuration = configuration;\n        Verbosity = verbosity;\n        DotNetVerbosity = dotNetVerbosity;\n    }\n\n    public void SetGitVersion(GitVersion gitVersion)\n    {\n        GitVersion = gitVersion;\n        IsPrerelease = GitVersion.NuGetVersion.Contains(\"-\");\n    }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// SETUP / TEARDOWN\n///////////////////////////////////////////////////////////////////////////////\n\nSetup<BuildData>(ctx =>\n{\n    if (!IsRunningOnWindows())\n    {\n        throw new NotImplementedException($\"{repoName} will only build on Windows because it's not possible to target WPF and Windows Forms from UNIX.\");\n    }\n\n    Spectre.Console.AnsiConsole.Write(new Spectre.Console.FigletText(repoName));\n\n    var buildData = new BuildData(\n        configuration: Argument(\"configuration\", \"Release\"),\n        verbosity: Argument(\"verbosity\", Verbosity.Minimal),\n        dotNetVerbosity: Argument(\"dotNetVerbosity\", DotNetVerbosity.Minimal)\n    )\n    {\n        IsLocalBuild = BuildSystem.IsLocalBuild,\n        IsPullRequest =\n            (BuildSystem.GitHubActions.IsRunningOnGitHubActions && BuildSystem.GitHubActions.Environment.PullRequest.IsPullRequest)\n            || (BuildSystem.AppVeyor.IsRunningOnAppVeyor && BuildSystem.AppVeyor.Environment.PullRequest.IsPullRequest)\n    };\n\n    // Set build version for CI\n    if (buildData.IsLocalBuild == false || buildData.Verbosity == Verbosity.Verbose)\n    {\n        GitVersion(new GitVersionSettings { ToolPath = gitVersionPath, OutputType = GitVersionOutput.BuildServer });\n    }\n    buildData.SetGitVersion(GitVersion(new GitVersionSettings { ToolPath = gitVersionPath, OutputType = GitVersionOutput.Json }));\n\n    Information(\"GitVersion             : {0}\", gitVersionPath);\n    Information(\"Branch                 : {0}\", buildData.GitVersion.BranchName);\n    Information(\"Configuration          : {0}\", buildData.Configuration);\n    Information(\"IsLocalBuild           : {0}\", buildData.IsLocalBuild);\n    Information(\"IsPrerelease           : {0}\", buildData.IsPrerelease);\n    Information(\"Informational   Version: {0}\", buildData.GitVersion.InformationalVersion);\n    Information(\"SemVer          Version: {0}\", buildData.GitVersion.SemVer);\n    Information(\"AssemblySemVer  Version: {0}\", buildData.GitVersion.AssemblySemVer);\n    Information(\"MajorMinorPatch Version: {0}\", buildData.GitVersion.MajorMinorPatch);\n    Information(\"NuGet           Version: {0}\", buildData.GitVersion.NuGetVersion);\n    Information(\"Verbosity              : {0}\", buildData.Verbosity);\n    Information(\"Publish folder         : {0}\", publishDir);\n\n    return buildData;\n});\n\nTeardown(ctx =>\n{\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// TASKS\n///////////////////////////////////////////////////////////////////////////////\n\nTask(\"Clean\")\n    .ContinueOnError()\n    .Does(() =>\n{\n    var filesToDelete = GetFiles(\"**/*_wpftmp.csproj\");\n    DeleteFiles(filesToDelete);\n\n    var directoriesToDelete = GetDirectories(\"./**/obj\")\n        .Concat(GetDirectories(\"./**/bin\"))\n        .Concat(GetDirectories(\"./**/Publish\"))\n        ;\n    DeleteDirectories(directoriesToDelete, new DeleteDirectorySettings { Recursive = true, Force = true });\n});\n\nTask(\"Restore\")\n    .Does<BuildData>(data =>\n{\n    DotNetRestore(solution);\n});\n\nTask(\"Build\")\n    .Does<BuildData>(data =>\n{\n    var msbuildSettings = new DotNetMSBuildSettings\n    {\n      MaxCpuCount = 0,\n      Version = data.GitVersion.NuGetVersion,\n      AssemblyVersion = data.GitVersion.AssemblySemVer,\n      FileVersion = data.GitVersion.AssemblySemFileVer,\n      InformationalVersion = data.GitVersion.InformationalVersion,\n      ContinuousIntegrationBuild = true,\n      ArgumentCustomization = args => args.Append(\"/m\").Append(\"/nr:false\") // The /nr switch tells msbuild to quite once it's done\n    };\n    // msbuildSettings.FileLoggers.Add(\n    //     new MSBuildFileLoggerSettings\n    //     {\n    //       LogFile = buildLogFile,\n    //       AppendToLogFile = true,\n    //       Verbosity = data.DotNetVerbosity\n    //     }\n    // );\n\n    var settings = new DotNetBuildSettings\n    {\n      MSBuildSettings = msbuildSettings,\n      Configuration = data.Configuration,\n      Verbosity = data.DotNetVerbosity,\n      NoRestore = true\n    };\n\n    DotNetBuild(solution, settings);\n});\n\nTask(\"Pack\")\n    .ContinueOnError()\n    .Does<BuildData>(data =>\n{\n    EnsureDirectoryExists(Directory(publishDir));\n\n    var msbuildSettings = new DotNetMSBuildSettings\n    {\n      MaxCpuCount = 0,\n      Version = data.GitVersion.NuGetVersion,\n      AssemblyVersion = data.GitVersion.AssemblySemVer,\n      FileVersion = data.GitVersion.AssemblySemFileVer,\n      InformationalVersion = data.GitVersion.InformationalVersion\n    }\n    .WithProperty(\"IncludeBuildOutput\", \"true\")\n    .WithProperty(\"RepositoryBranch\", data.GitVersion.BranchName)\n    .WithProperty(\"RepositoryCommit\", data.GitVersion.Sha)\n    .WithProperty(\"Description\", \"The goal of MahApps.Metro is to allow devs to quickly and easily cobble together a 'Modern' UI for their WPF apps (.Net 4.6.2 and later), with minimal effort.\")\n    ;\n    // msbuildSettings.FileLoggers.Add(\n    //     new MSBuildFileLoggerSettings\n    //     {\n    //       LogFile = buildLogFile,\n    //       AppendToLogFile = true,\n    //       Verbosity = DotNetVerbosity.Minimal\n    //     }\n    // );\n\n    var settings = new DotNetPackSettings\n    {\n      Configuration = data.Configuration,\n      OutputDirectory = MakeAbsolute(Directory(publishDir)).FullPath,\n      MSBuildSettings = msbuildSettings,\n      NoBuild = true,\n      NoRestore = true\n    };\n\n    var project = \"./src/MahApps.Metro/MahApps.Metro.csproj\";\n    DotNetPack(project, settings);\n});\n\nTask(\"Sign\")\n    .WithCriteria<BuildData>((context, data) => !data.IsPullRequest)\n    .ContinueOnError()\n    .Does(() =>\n{\n    var files = GetFiles(\"./src/MahApps.Metro/bin/**/*/MahApps.Metro*.dll\");\n    SignFiles(files, \"MahApps.Metro, a toolkit for creating Metro / Modern UI styled WPF applications.\");\n\n    files = GetFiles(\"./src/MahApps.Metro.Samples/**/bin/**/*.exe\");\n    SignFiles(files, \"Demo application of MahApps.Metro, a toolkit for creating Metro / Modern UI styled WPF applications.\");\n});\n\nTask(\"SignNuGet\")\n    .WithCriteria<BuildData>((context, data) => !data.IsPullRequest)\n    .WithCriteria<BuildData>((context, data) => DirectoryExists(Directory(publishDir)))\n    .ContinueOnError()\n    .Does(() =>\n{\n    var vurl = EnvironmentVariable(\"azure-key-vault-url\");\n    if(string.IsNullOrWhiteSpace(vurl)) {\n        Error(\"Could not resolve signing url.\");\n        return;\n    }\n\n    var vcid = EnvironmentVariable(\"azure-key-vault-client-id\");\n    if(string.IsNullOrWhiteSpace(vcid)) {\n        Error(\"Could not resolve signing client id.\");\n        return;\n    }\n\n    var vctid = EnvironmentVariable(\"azure-key-vault-tenant-id\");\n    if(string.IsNullOrWhiteSpace(vctid)) {\n        Error(\"Could not resolve signing client tenant id.\");\n        return;\n    }\n\n    var vcs = EnvironmentVariable(\"azure-key-vault-client-secret\");\n    if(string.IsNullOrWhiteSpace(vcs)) {\n        Error(\"Could not resolve signing client secret.\");\n        return;\n    }\n\n    var vc = EnvironmentVariable(\"azure-key-vault-certificate\");\n    if(string.IsNullOrWhiteSpace(vc)) {\n        Error(\"Could not resolve signing certificate.\");\n        return;\n    }\n\n    var nugetFiles = GetFiles(publishDir + \"/*.nupkg\");\n    var signTool = Context.Tools.Resolve(\"NuGetKeyVaultSignTool.exe\");\n\n    foreach(var file in nugetFiles)\n    {\n        Information($\"Sign file: {file}\");\n\n        ExecuteProcess(signTool,\n                        new ProcessArgumentBuilder()\n                            .Append(\"sign\")\n                            .Append(MakeAbsolute(file).FullPath)\n                            .Append(\"--force\")\n                            .AppendSwitchQuoted(\"--file-digest\", \"sha256\")\n                            .AppendSwitchQuoted(\"--timestamp-rfc3161\", \"http://timestamp.digicert.com\")\n                            .AppendSwitchQuoted(\"--timestamp-digest\", \"sha256\")\n                            .AppendSwitchQuoted(\"--azure-key-vault-url\", vurl)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-id\", vcid)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-tenant-id\", vctid)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-client-secret\", vcs)\n                            .AppendSwitchQuotedSecret(\"--azure-key-vault-certificate\", vc)\n                        );\n    }\n});\n\nTask(\"Zip\")\n    .Does<BuildData>(data =>\n{\n    EnsureDirectoryExists(Directory(publishDir));\n\n    Zip(\"./src/MahApps.Metro.Samples/MahApps.Metro.Demo/bin/\" + data.Configuration, publishDir + \"/MahApps.Metro.Demo-v\" + data.GitVersion.NuGetVersion + \".zip\");\n    Zip(\"./src/MahApps.Metro.Samples/MahApps.Metro.Caliburn.Demo/bin/\" + data.Configuration, publishDir + \"/MahApps.Metro.Caliburn.Demo-v\" + data.GitVersion.NuGetVersion + \".zip\");\n});\n\nTask(\"Tests\")\n    .ContinueOnError()\n    .Does<BuildData>(data =>\n{\n    CleanDirectory(testResultsDir);\n\n    var settings = new DotNetTestSettings\n        {\n            Configuration = data.Configuration,\n            NoBuild = true,\n            NoRestore = true,\n            Loggers = new[] { \"trx\" },\n            ResultsDirectory = testResultsDir,\n            Verbosity = data.DotNetVerbosity\n        };\n\n    DotNetTest(\"./src/Mahapps.Metro.Tests/Mahapps.Metro.Tests.csproj\", settings);\n});\n\nTask(\"StyleXaml\")\n    .Description(\"Ensures XAML Formatting is Clean\")\n    .Does(() =>\n{\n    Func<IFileSystemInfo, bool> exclude_Dir =\n        fileSystemInfo => !fileSystemInfo.Path.Segments.Contains(\"obj\") && !fileSystemInfo.Path.ToString().Contains(\"Styles/Themes\");\n\n    var files = GetFiles(srcDir + \"/**/*.xaml\", new GlobberSettings { Predicate = exclude_Dir });\n    Information(\"\\nChecking \" + files.Count() + \" file(s) for XAML Structure\");\n    ExecuteProcess(styler, \"-f \\\"\" + string.Join(\",\", files.Select(f => f.ToString())) + \"\\\" -c \\\"\" + stylerFile + \"\\\"\");\n});\n\nTask(\"CreateRelease\")\n    .WithCriteria<BuildData>((context, data) => !data.IsPullRequest)\n    .Does<BuildData>(data =>\n{\n    var token = EnvironmentVariable(\"GITHUB_TOKEN\");\n    if (string.IsNullOrEmpty(token))\n    {\n        throw new Exception(\"The GITHUB_TOKEN environment variable is not defined.\");\n    }\n\n    GitReleaseManagerCreate(token, \"MahApps\", repoName, new GitReleaseManagerCreateSettings {\n        Milestone         = data.GitVersion.MajorMinorPatch,\n        Name              = data.GitVersion.AssemblySemFileVer,\n        Prerelease        = data.IsPrerelease,\n        TargetCommitish   = data.GitVersion.BranchName,\n        WorkingDirectory  = \".\"\n    });\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// HELPER\n///////////////////////////////////////////////////////////////////////////////\n\nvoid SignFiles(IEnumerable<FilePath> files, string description)\n{\n    var vurl = EnvironmentVariable(\"azure-key-vault-url\");\n    if(string.IsNullOrWhiteSpace(vurl)) {\n        Error(\"Could not resolve signing url.\");\n        return;\n    }\n\n    var vcid = EnvironmentVariable(\"azure-key-vault-client-id\");\n    if(string.IsNullOrWhiteSpace(vcid)) {\n        Error(\"Could not resolve signing client id.\");\n        return;\n    }\n\n    var vctid = EnvironmentVariable(\"azure-key-vault-tenant-id\");\n    if(string.IsNullOrWhiteSpace(vctid)) {\n        Error(\"Could not resolve signing client tenant id.\");\n        return;\n    }\n\n    var vcs = EnvironmentVariable(\"azure-key-vault-client-secret\");\n    if(string.IsNullOrWhiteSpace(vcs)) {\n        Error(\"Could not resolve signing client secret.\");\n        return;\n    }\n\n    var vc = EnvironmentVariable(\"azure-key-vault-certificate\");\n    if(string.IsNullOrWhiteSpace(vc)) {\n        Error(\"Could not resolve signing certificate.\");\n        return;\n    }\n\n    var filesToSign = string.Join(\" \", files.Select(f => MakeAbsolute(f).FullPath));\n    var azureSignTool = Context.Tools.Resolve(\"azuresigntool.exe\");\n\n    ExecuteProcess(azureSignTool,\n                    new ProcessArgumentBuilder()\n                        .Append(\"sign\")\n                        .Append(filesToSign)\n                        .AppendSwitchQuoted(\"--file-digest\", \"sha256\")\n                        .AppendSwitchQuoted(\"--description\", description)\n                        .AppendSwitchQuoted(\"--description-url\", \"https://github.com/MahApps/MahApps.Metro\")\n                        .Append(\"--no-page-hashing\")\n                        .AppendSwitchQuoted(\"--timestamp-rfc3161\", \"http://timestamp.digicert.com\")\n                        .AppendSwitchQuoted(\"--timestamp-digest\", \"sha256\")\n                        .AppendSwitchQuoted(\"--azure-key-vault-url\", vurl)\n                        .AppendSwitchQuotedSecret(\"--azure-key-vault-client-id\", vcid)\n                        .AppendSwitchQuotedSecret(\"--azure-key-vault-tenant-id\", vctid)\n                        .AppendSwitchQuotedSecret(\"--azure-key-vault-client-secret\", vcs)\n                        .AppendSwitchQuotedSecret(\"--azure-key-vault-certificate\", vc)\n                    );\n}\n\nvoid ExecuteProcess(FilePath fileName, ProcessArgumentBuilder arguments, string workingDirectory = null)\n{\n  if (!FileExists(fileName))\n  {\n    throw new Exception($\"File not found: {fileName}\");\n  }\n\n  var processSettings = new ProcessSettings\n  {\n    RedirectStandardOutput = true,\n    RedirectStandardError = true,\n    Arguments = arguments\n  };\n\n  if (!string.IsNullOrEmpty(workingDirectory))\n  {\n    processSettings.WorkingDirectory = workingDirectory;\n  }\n\n  Information($\"Arguments: {arguments.RenderSafe()}\");\n\n  using(var process = StartAndReturnProcess(fileName, processSettings))\n  {\n    process.WaitForExit();\n\n    if (process.GetStandardOutput().Any())\n    {\n      Information($\"Output:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardOutput())}\");\n    }\n\n    if (process.GetStandardError().Any())\n    {\n      // Information($\"Errors occurred:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardError())}\");\n      throw new Exception($\"Errors occurred:{Environment.NewLine} {string.Join(Environment.NewLine, process.GetStandardError())}\");\n    }\n\n    // This should output 0 as valid arguments supplied\n    var exitCode = process.GetExitCode();\n    Information($\"Exit code: {exitCode}\");\n\n    if (exitCode > 0)\n    {\n      throw new Exception($\"Exit code: {exitCode}\");\n    }\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// TASK TARGETS\n///////////////////////////////////////////////////////////////////////////////\n\nTask(\"Default\")\n    .IsDependentOn(\"Clean\")\n    .IsDependentOn(\"Restore\")\n    .IsDependentOn(\"StyleXaml\")\n    .IsDependentOn(\"Build\")\n    .IsDependentOn(\"Tests\")\n    ;\n\nTask(\"ci\")\n    .IsDependentOn(\"Default\")\n    .IsDependentOn(\"Sign\")\n    .IsDependentOn(\"Pack\")\n    .IsDependentOn(\"SignNuGet\")\n    .IsDependentOn(\"Zip\")\n    ;\n\n///////////////////////////////////////////////////////////////////////////////\n// EXECUTION\n///////////////////////////////////////////////////////////////////////////////\n\nRunTarget(target);\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.3115234375,
          "content": "$ErrorActionPreference = 'Stop'\n\nSet-Location -LiteralPath $PSScriptRoot\n\n$env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'\n$env:DOTNET_CLI_TELEMETRY_OPTOUT = '1'\n$env:DOTNET_NOLOGO = '1'\n\ndotnet tool restore\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n\ndotnet cake @args\nif ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }\n"
        },
        {
          "name": "cake.config",
          "type": "blob",
          "size": 0.3740234375,
          "content": "; This is the default configuration file for Cake.\n; This file was downloaded from https://github.com/cake-build/resources\n\n[Nuget]\nSource=https://api.nuget.org/v3/index.json\nUseInProcessClient=true\nLoadDependencies=false\n\n[Paths]\nTools=./tools\nAddins=./tools/Addins\nModules=./tools/Modules\n\n[Settings]\nSkipVerification=false\nSkipPackageVersionCheck=true\nShowProcessCommandLine=true\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.1005859375,
          "content": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"feature\",\n    \"allowPrerelease\": false\n  }\n}"
        },
        {
          "name": "mahapps.metro.logo.png",
          "type": "blob",
          "size": 23.7734375,
          "content": null
        },
        {
          "name": "mahapps.metro.logo2.png",
          "type": "blob",
          "size": 4.16796875,
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 11.443359375,
          "content": "<!-- [![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine) -->\n\n<div align=\"center\">\n  <br />\n  <a href=\"https://github.com/MahApps/MahApps.Metro\">\n    <!-- <img alt=\"MahApps.Metro\" width=\"200\" heigth=\"200\" src=\"./docs/logo_ukraine.png\"> -->\n    <img alt=\"MahApps.Metro\" width=\"200\" heigth=\"200\" src=\"./mahapps.metro.logo.png\">\n  </a>\n  <h1>MahApps.Metro</h1>\n  <p>\n    A toolkit for creating awesome WPF applications. Lots of goodness out-of-the box.\n  </p>\n  <p>\n    Supporting .NET Framework 4.6.2 and greater, .NET Core 3.1, .NET 5 and .NET 6 (on Windows)\n  </p>\n  <a href=\"https://www.nuget.org/packages/MahApps.Metro\">\n    <img src=\"https://img.shields.io/nuget/dt/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <a href=\"https://www.nuget.org/packages/MahApps.Metro\">\n    <img src=\"https://img.shields.io/nuget/v/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <a href=\"https://www.nuget.org/packages/MahApps.Metro\">\n    <img src=\"https://img.shields.io/nuget/vpre/MahApps.Metro.svg?style=flat-square&label=nuget-pre\">\n  </a>\n  <a href=\"https://ci.appveyor.com/nuget/mahapps.metro\">\n    <img src=\"https://img.shields.io/badge/nuget--pre-appveyor-green.svg?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/MahApps/MahApps.Metro/releases/latest\">\n    <img src=\"https://img.shields.io/github/release/MahApps/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <br />\n  <a href=\"https://ci.appveyor.com/project/punker76/mahapps-metro/branch/main\">\n    <img alt=\"main status\" src=\"https://img.shields.io/appveyor/ci/punker76/mahapps-metro/master.svg?style=flat-square&&label=main\">\n  </a>\n  <a href=\"https://ci.appveyor.com/project/punker76/mahapps-metro/branch/develop\">\n    <img alt=\"dev status\" src=\"https://img.shields.io/appveyor/ci/punker76/mahapps-metro/develop.svg?style=flat-square&&label=develop\">\n  </a>\n  <a href=\"https://ci.appveyor.com/project/punker76/mahapps-metro/branch/develop\">\n    <img alt=\"dev tests\" src=\"https://img.shields.io/appveyor/tests/punker76/mahapps-metro/develop.svg?style=flat-square\">\n  </a>\n  <br />\n  <a href=\"https://github.com/MahApps/MahApps.Metro/issues\">\n    <img src=\"https://img.shields.io/github/issues-raw/MahApps/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/MahApps/MahApps.Metro/issues\">\n    <img src=\"https://img.shields.io/github/issues-closed-raw/MahApps/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/MahApps/MahApps.Metro/issues\">\n    <img src=\"https://img.shields.io/github/issues-pr-raw/MahApps/MahApps.Metro.svg?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/MahApps/MahApps.Metro/issues\">\n    <img src=\"https://img.shields.io/github/issues-pr-closed-raw/MahApps/MahApps.Metro.svg?style=flat-square\">\n  </a>\n</div>\n\n## Let's get started\n\n- [Documentation](https://github.com/MahApps/MahApps.Metro/wiki/Documentation)\n- [Quick Start](https://github.com/MahApps/MahApps.Metro/wiki/Quick-Start)\n- [Icons](https://github.com/MahApps/MahApps.Metro/wiki/Icons) (MahApps.Metro.IconPacks)\n- [Contributing](https://github.com/MahApps/MahApps.Metro/wiki/Contributing) to MahApps.Metro\n- [Building](https://github.com/MahApps/MahApps.Metro/wiki/Building-the-MahApps.Metro-solution) the MahApps.Metro solution\n- [Releases and Release Notes](https://github.com/MahApps/MahApps.Metro/releases)\n- [Visual Studio Templates](https://github.com/MahApps/MahApps.Metro/wiki/Visual-Studio-Templates)\n- [Wiki](https://github.com/MahApps/MahApps.Metro/wiki)\n\n## Get in touch\n\n[![Follow @punker76](https://img.shields.io/badge/Twitter-Follow%20%40punker76-blue.svg?style=flat-square)](https://twitter.com/intent/follow?screen_name=punker76)\n\n[![Join the chat at https://gitter.im/MahApps/MahApps.Metro](https://img.shields.io/badge/Gitter-Join%20Chat-green.svg?style=flat-square)](https://matrix.to/#/#MahApps_MahApps.Metro:gitter.im)\n\n## License\n\nCopyright © .NET Foundation, Jan Karger, Brendan Forster, Dennis Daume, Alex Mitchell, Paul Jenkins and contributors.\n\nMahApps.Metro is provided as-is under the MIT license. For more information see [LICENSE](./LICENSE).\n\n## Code of Conduct\n\nThis project has adopted the code of conduct defined by the [Contributor Covenant](http://contributor-covenant.org/)\nto clarify expected behavior in our community.\nFor more information see the [.NET Foundation Code of Conduct](http://www.dotnetfoundation.org/code-of-conduct).\n\n## Contribution License Agreement\n\nBy signing the [CLA](https://cla.dotnetfoundation.org/MahApps/MahApps.Metro), the community is free to use your contribution to .NET Foundation projects.\n\n## .NET Foundation\n\nThis project is supported by the [.NET Foundation](http://www.dotnetfoundation.org).\n\n## Dev Tools\n\nWe want to give some :heart: to this dev tools which makes the work a little bit easier!\n\n- [Cake (C# Make)](https://cakebuild.net/) a free and open source cross-platform build automation system.\n- [ReSharper](https://www.jetbrains.com/resharper/)\n- [Rider](https://www.jetbrains.com/rider/)\n- [AppVeyor](https://www.appveyor.com/) CI/CD service for Windows, Linux and macOS\n\nA big thank goes to [JetBrains](https://www.jetbrains.com) who provide an [Open Source License](https://www.jetbrains.com/community/opensource/) for ReSharper and Rider.\n\n## Contributors\n\nA big virtual hug :hugs: goes to all the great people around the world who contributed to this project!\n\n[![Contributors](https://opencollective.com/mahappsmetro/contributors.svg?width=900&button=false)](https://github.com/MahApps/MahApps.Metro/graphs/contributors)\n\n## Awesome Application Samples\n\n* [Showcase/Demo application](./src/MahApps.Metro.Samples/MahApps.Metro.Demo) The showcase/demo application built by the MahApps.Metro team. Compiled versions can be downloaded from [releases](https://github.com/MahApps/MahApps.Metro/releases) and preview versions can be downloaded from [CI artifacts](https://ci.appveyor.com/project/punker76/mahapps-metro/branch/develop/artifacts)\n* [Azuser](https://github.com/Inzanit/azuser) by [@Inzanit](https://github.com/Inzanit) Azure SQL Server User Management\n* [Carnac](https://github.com/Code52/carnac) by [@Code52](https://github.com/Code52) the Magnificent Keyboard Utility\n* [Certify The Web](https://github.com/webprofusion/certify) by [@webprofusion](https://github.com/webprofusion) The GUI to manage free certificates from Let's Encrypt\n* [Chocolatey GUI](https://github.com/chocolatey/ChocolateyGUI) Chocolatey GUI is a user interface for [Chocolatey](https://chocolatey.org/) (a Machine Package Manager for Windows)\n* [CodeTrack](http://www.getcodetrack.com) by [Nico Van Goethem](https://twitter.com/GoethemNico) CodeTrack is a versatile profiler with some extra tricks up its sleeve.\n* [FolderSecurityViewer](https://www.foldersecurityviewer.com) Easy to use NTFS permissions reporter to get all effective security owners of your data\n* [Hearthstone-Deck-Tracker](https://github.com/Epix37/Hearthstone-Deck-Tracker) by [@Epix37](https://github.com/Epix37) HDT is an automatic deck tracker and manager for Hearthstone\n* [Markdown Edit](https://github.com/mike-ward/Markdown-Edit) by [@mike-ward](https://github.com/mike-ward) A full-featured Markdown editor for Windows with an emphasis on content and keyboard shortcuts\n* [Markdown Monster](https://markdownmonster.west-wind.com) by [@RickStrahl](https://github.com/RickStrahl) An extensible Markdown Editor, Viewer and Weblog Publisher for Windows\n* [MarkPad (DownmarkerWPF)](https://github.com/Code52/DownmarkerWPF) by [@Code52](https://github.com/Code52) a visual Markdown editor\n* [Modern UI for WPF (MUI)](https://github.com/firstfloorsoftware/mui) Inspired by MahApps.Metro\n* [NETworkManager](https://github.com/BornToBeRoot/NETworkManager) by [@BornToBeRoot](https://github.com/BornToBeRoot) A powerful tool for managing networks and troubleshoot network problems!\n* [Papercut](https://github.com/jaben/papercut) by [@Jaben](https://github.com/Jaben) Simple Desktop SMTP Server / Email Receiver\n* [RainyDay Backup](https://www.copidal.com) Backup system for Azure DevOps Services and Azure Devops Server\n* [SimpleMP](https://github.com/punker76/simple-music-player) by [@punker76](https://github.com/punker76) Simple Music Player - SimpleMP - Keeps it simple and plays your music\n* [Solutionizer](https://github.com/thoemmi/Solutionizer) by [@thoemmi](https://github.com/thoemmi) Creating ad-hoc solutions for Visual Studio\n* [Version Changer](https://marketplace.visualstudio.com/items?itemName=Newky2k.VersionChanger2022) Version Changer is a Visual Studio extension that makes it simple to change the version numbers of all the projects in a solution.\n* [WinReform](https://github.com/AKruimink/WinReform) by [@AKruimink](https://github.com/AKruimink) A simple tool to help resize and relocate stubborn windows.\n* [Xamarin Inspector](https://docs.microsoft.com/en-us/xamarin/tools/inspector/release-notes/) Visualize and debug your live app\n* [Xamarin Workbooks](https://github.com/microsoft/workbooks) Xamarin Workbooks provide a blend of documentation and code that is perfect for experimentation, learning, and creating guides and teaching aids.\n\n## Something missing?\n\nIf you're looking for other awesome libraries which are compatible with MahApps, check them out:\n\n- [MaterialDesignInXamlToolkit](https://github.com/ButchersBoy/MaterialDesignInXamlToolkit) Comprehensive and easy to use Material Design theme and control library for the Windows desktop. [http://materialdesigninxaml.net](http://materialdesigninxaml.net)\n- [Fluent.Ribbon](https://github.com/fluentribbon/Fluent.Ribbon) made by [@batzen](https://github.com/batzen) a library that implements an Office-like user interface for the Windows Presentation Foundation (WPF).\n- [MahApps.Metro.SimpleChildWindow](https://github.com/punker76/MahApps.Metro.SimpleChildWindow) A simple child window for MahApps.Metro.\n- [LoadingIndicators.WPF](https://github.com/zeluisping/LoadingIndicators.WPF) made by [@zeluisping](https://github.com/zeluisping)\n- [Dragablz](https://github.com/ButchersBoy/Dragablz) Tearable tab control for WPF, which includes docking, tool windows and MDI. [http://dragablz.net](http://dragablz.net)\n\n## Sponsoring\n\nThis framework is free and can be used for free, open source and commercial applications. MahApps.Metro (all code, NuGets and binaries) are under the [MIT License (MIT)](./LICENSE). It's tested, used and contributed by many awesome people. So hit the magic :star: button, we appreciate it!!! :pray:\n\nThe core team member(s), MahApps.Metro contributors and contributors in the ecosystem do this open source work in their free time. If you use MahApps.Metro a serious task, and you'd like us to invest more time on it, please donate. This project increases your income/productivity/usability too.\n\n[Become a sponsor](https://github.com/sponsors/punker76) and show your support to this open source project.\n\n### :pray: All OpenCollective Backers (archived) :heart:\n\n[![Backers](https://opencollective.com/mahappsmetro/backers.svg?button=false)](https://opencollective.com/mahappsmetro#section-contributors)\n\n## Screenshots\n\n<div align=\"center\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h26_59.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h27_24.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h27_45.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h27_55.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h28_34.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h28_56.png\">\n\n<img alt=\"screenshot01\" src=\"./docs/2020-05-23_14h30_24.png\">\n\n<img alt=\"screenshot18\" src=\"./docs/mahapps_v1.6.0.gif\">\n\n</div>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}