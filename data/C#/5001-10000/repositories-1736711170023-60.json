{
  "metadata": {
    "timestamp": 1736711170023,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/EntityComponentSystemSamples",
      "stars": 7322,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2236328125,
          "content": "* text=auto eol=lf\n\n*.compute text\n*.cs diff=csharp text\n*.mat text\n*.md text\n*.md5 text\n*.meta text\n*.prefab text\n*.shader text\n*.txt text\n\n*/ProjectSettings/*.asset text\n\n# the ms t4 processor requires crlf\n*.tt eol=crlf text\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.109375,
          "content": "# This .gitignore file should be placed at the root of your Unity project directory\n#\n# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore\n#\n[Ll]ibrary/\n[Tt]emp/\n[Oo]bj/\n[Bb]uild/\n[Bb]uilds/\n[Ll]ogs/\n[Mm]emoryCaptures/\n[Uu]ser[Ss]ettings/\n\n\n# Asset meta data should only be ignored when the corresponding asset is also ignored\n!/[Aa]ssets/**/*.meta\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n[Aa]ssets/Plugins/Editor/JetBrains*\n\n# Visual Studio cache directory\n.vs/\n\n# Gradle cache directory\n.gradle/\n\n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n# Builds\n*.apk\n\n# Crashlytics generated file\ncrashlytics-build.properties\n\n# Custom\nAssets/SceneDependencyCache*\nAssets/NetCodeGenerated*\n.idea/\n.DS_Store\nRiderScriptEditorPersistedState.asset"
        },
        {
          "name": "EntitiesSamples",
          "type": "tree",
          "content": null
        },
        {
          "name": "GraphicsSamples",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.474609375,
          "content": "Entity Component System copyright © 2017-2020 Unity Technologies ApS\n\nLicensed under the Unity Companion License for Unity-dependent projects--see [Unity Companion License](https://unity3d.com/legal/licenses/Unity_Companion_License). \n\nUnless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions.\n"
        },
        {
          "name": "NetcodeSamples",
          "type": "tree",
          "content": null
        },
        {
          "name": "PhysicsSamples",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.2724609375,
          "content": "# DOTS Samples\n\n- [Entities samples](./EntitiesSamples/README.md)\n- [Netcode samples](./NetcodeSamples/README.md)\n- [Physics samples](./PhysicsSamples/README.md)\n- [Entities.Graphics HDRP samples](./GraphicsSamples/HDRPSamples/README.md)\n- [Entities.Graphics URP samples](./GraphicsSamples/URPSamples/README.md)\n\n# Learning DOTS\n\nFor those new to DOTS, here's the recommended sequence to follow through the introductory material in the [Entities samples project](./EntitiesSamples/README.md):\n\nA few short videos introduce the basic concepts of the job system and ECS:\n\n1. [Video: The C# Job system](https://youtu.be/jdW66hA-Qu8) (11 minutes)\n1. [Video: ECS Entities and components](https://youtu.be/jzCEzNoztzM) (10 minutes)\n1. [Video: ECS Systems](https://youtu.be/k07I-DpCcvE) (7 minutes)\n1. [Video: ECS Baking](https://youtu.be/r337nXZFYeA) (6 minutes)\n\nYou may also want to read the [Entities API overview](./EntitiesSamples/README.md#entities-api-overview), which is briefer and more sequentially structured than the [manual](https://docs.unity3d.com/Packages/com.unity.entities@latest/).\n\nThese starter samples each have an explanatory video:\n\n- The [Jobs Tutorial sample](./EntitiesSamples/Assets/Tutorials/Jobs/README.md) (17 minute [walkthrough video](https://youtu.be/oOgNg2gL2yw)) demonstrates creation and scheduling of jobs.\n- The [HelloCube samples](./EntitiesSamples/Assets/HelloCube/README.md) (30 minute [walkthrough video](https://youtu.be/32TLgtA9yUM)) demonstrate very basic Entities usage, such as creating and moving rendered entities in systems and jobs.\n- The [Tanks tutorial](./EntitiesSamples/Assets/Tutorials/Tanks/README.md) (23 minute [walkthrough video](https://youtu.be/jAVVxoWU5lo)) puts the basic elements of Entities and jobs together to demonstrate a small simulation.\n- The [Kickball tutorial](./EntitiesSamples/Assets/Tutorials/Kickball/README.md) (55 minute [walkthrough video](https://youtu.be/P6_3L7RTcm0)) also demonstrates a small simulation, but with a bit more depth. \n- The [StateChange sample](./EntitiesSamples/Assets/Miscellaneous/StateChange/) (14 minute [walkthrough video](https://youtu.be/KC-EyCh5TrY)) demonstrates three different ways to handle state representation in Entities. \n\nBeyond the above starter samples, there are samples covering [Baking](./EntitiesSamples/Assets/Baking/README.md), [Streaming](./EntitiesSamples/Assets/Streaming/README.md) (for large worlds and scene management), and [Miscellaneous](./EntitiesSamples/Assets/Miscellaneous/README.md).\n\nFor quick reference of basic API usage, use these example code snippets and cheat sheets:\n\n- [Example code: jobs](./EntitiesSamples/Assets/ExampleCode/Jobs.cs)\n- [Example code: components and systems](./EntitiesSamples/Assets/ExampleCode/ComponentsSystems.cs)\n- [Example code: baking](./EntitiesSamples/Assets/ExampleCode/Baking.cs)\n- [Cheat sheet: collections](./EntitiesSamples/Docs/cheatsheet/collections.md)\n- [Cheat sheet: mathematics](./EntitiesSamples/Docs/cheatsheet/mathematics.md)\n\nFinally, there's the [ECS Network Racing sample](https://github.com/Unity-Technologies/ECS-Network-Racing-Sample), which is a working DOTS game using DOTS Netcode and Physics.\n\n# Release notes\n\nThis is the samples release for Unity 2022.3 LTS and the 1.2 release of the `Entities`, `Netcode`, `Physics`, and `Entities.Graphics` packages.\n"
        }
      ]
    }
  ]
}