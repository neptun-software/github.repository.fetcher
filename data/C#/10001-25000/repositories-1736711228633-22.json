{
  "metadata": {
    "timestamp": 1736711228633,
    "page": 22,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dotnet/runtime",
      "stars": 15658,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".CodeQL.yml",
          "type": "blob",
          "size": 0.9794921875,
          "content": "# This file configures CodeQL runs and TSA bug autofiling. For more information, see:\n# https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/codeql/troubleshooting/bugs/generated-library-code\n# (Access restricted to Microsoft employees only.)\n\npath_classifiers:\n  refs:\n    # The ref/ directories don't contain shipping implementations of code, so they should\n    # be excluded from analysis. If there is a problem at the API layer, the analysis\n    # engine will detect the problem in the src/ implementations anyway.\n    - src/libraries/**/ref/*\n    # exclude artifacts/obj/**/CMakeFiles/**/CheckFunctionExists.c since CMake \n    # generates random directory names causing creation of duplicate issues \n    # related to obsolete encryption algorithm used. Note that CheckFuntionExists \n    # files are generated as part of build-time checks in CMake and are not compiled\n    # or linked into any product binaries.\n    - artifacts/obj/**/CMakeFiles/**/CheckFunctionExists.c\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.01953125,
          "content": "DisableFormat: true\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.037109375,
          "content": "---\nChecks: '-*' # Disable all checks\n"
        },
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 4.9228515625,
          "content": "### VisualStudio ###\n\n# Tool Runtime Dir\n**/.dotnet/\n**/.packages/\n**/.tools/\n\n# User-specific files\n**/*.suo\n**/*.user\n**/*.userosscache\n**/*.sln.docstates\n\n# Build results\n**/artifacts/\n**/.idea/\n**/[Dd]ebug/\n**/[Dd]ebugPublic/\n**/[Rr]elease/\n**/[Rr]eleases/\n**/bld/\n**/[Bb]in/\n**/[Oo]bj/\n**/msbuild.log\n**/msbuild.err\n**/msbuild.wrn\n**/msbuild.binlog\n**/.deps/\n**/.dirstamp\n**/.libs/\n**/*.lo\n**/*.o\n\n# Cross building rootfs\n**/cross/rootfs/\n**/cross/android-rootfs/\n\n# Visual Studio\n**/.vs/\n\n# Ionide\n**/.ionide/\n\n# MSTest test Results\n**/[Tt]est[Rr]esult*/\n**/[Bb]uild[Ll]og.*\n\n#NUNIT\n**/*.VisualState.xml\n**/TestResult.xml\n\n# Build Results of an ATL Project\n**/[Dd]ebugPS/\n**/[Rr]eleasePS/\n**/dlldata.c\n\n**/*_i.c\n**/*_p.c\n**/*.ilk\n**/*.meta\n**/*.obj\n**/*.pch\n**/*.pdb\n!**/_.pdb\n**/*.pgc\n**/*.pgd\n**/*.rsp\n**/*.sbr\n**/*.tlb\n**/*.tli\n**/*.tlh\n**/*.tmp\n**/*.tmp_proj\n**/*.log\n**/*.vspscc\n**/*.vssscc\n**/.builds\n**/*.pidb\n**/*.svclog\n**/*.scc\n\n# Chutzpah Test files\n**/_Chutzpah*\n\n# Visual C++ cache files\n**/ipch/\n**/*.aps\n**/*.ncb\n**/*.opendb\n**/*.opensdf\n**/*.sdf\n**/*.cachefile\n**/*.VC.db\n\n# Visual Studio profiler\n**/*.psess\n**/*.vsp\n**/*.vspx\n\n# TFS 2012 Local Workspace\n**/$tf/\n\n# Guidance Automation Toolkit\n**/*.gpState\n\n# ReSharper is a .NET coding add-in\n**/_ReSharper*/\n**/*.[Rr]e[Ss]harper\n**/*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n**/.JustCode\n\n# TeamCity is a build add-in\n**/_TeamCity*\n\n# DotCover is a Code Coverage Tool\n**/*.dotCover\n\n# NCrunch\n**/_NCrunch_*\n**/.*crunch*.local.xml\n\n# MightyMoose\n**/*.mm.*\n**/AutoTest.Net/\n\n# Web workbench (sass)\n**/.sass-cache/\n\n# Installshield output folder\n**/[Ee]xpress/\n\n# DocProject is a documentation generator add-in\n**/DocProject/buildhelp/\n**/DocProject/Help/*.HxT\n**/DocProject/Help/*.HxC\n**/DocProject/Help/*.hhc\n**/DocProject/Help/*.hhk\n**/DocProject/Help/*.hhp\n**/DocProject/Help/Html2\n**/DocProject/Help/html\n\n# Publish Web Output\n**/*.[Pp]ublish.xml\n**/*.azurePubxml\n**/*.pubxml\n**/*.publishproj\n\n# NuGet Packages\n**/*.nupkg\n**/*.nuget.g.props\n**/*.nuget.g.targets\n**/*.nuget.cache\n**/**/packages/*\n**/project.lock.json\n**/project.assets.json\n**/*.nuget.dgspec.json\n\n# Windows Azure Build Output\n**/csx/\n**/*.build.csdef\n\n# Windows Store app package directory\n**/AppPackages/\n\n# Others\n**/*.Cache\n**/ClientBin/\n**/[Ss]tyle[Cc]op.*\n**/~$*\n**/*.dbmdl\n**/*.dbproj.schemaview\n**/*.pfx\n**/*.publishsettings\n**/node_modules/\n**/*.metaproj\n**/*.metaproj.tmp\n**/bin.localpkg/\n\n# RIA/Silverlight projects\n**/Generated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n**/_UpgradeReport_Files/\n**/Backup*/\n**/UpgradeLog*.XML\n**/UpgradeLog*.htm\n\n# SQL Server files\n**/*.mdf\n**/*.ldf\n\n# Business Intelligence projects\n**/*.rdl.data\n**/*.bim.layout\n**/*.bim_*.settings\n\n# Microsoft Fakes\n**/FakesAssemblies/\n\n# C/C++ extension for Visual Studio Code\n**/browse.VC.db\n# Local settings folder for Visual Studio Code\n**/**/.vscode/**\n!**/**/.vscode/c_cpp_properties.json\n\n### MonoDevelop ###\n\n**/*.pidb\n**/*.userprefs\n\n### Windows ###\n\n# Windows image file caches\n**/Thumbs.db\n**/ehthumbs.db\n\n# Folder config file\n**/Desktop.ini\n\n# Recycle Bin used on file shares\n**/$RECYCLE.BIN/\n\n# Windows Installer files\n**/*.cab\n**/*.msi\n**/*.msm\n**/*.msp\n\n# Windows shortcuts\n**/*.lnk\n\n### Linux ###\n\n**/*~\n\n# KDE directory preferences\n**/.directory\n\n### OSX ###\n\n**/.DS_Store\n**/.AppleDouble\n**/.LSOverride\n\n# Icon must end with two \\r\n**/Icon\n\n# Thumbnails\n**/._*\n\n# Files that might appear on external disk\n**/.Spotlight-V100\n**/.Trashes\n\n# Directories potentially created on remote AFP share\n**/.AppleDB\n**/.AppleDesktop\n**/Network Trash Folder\n**/Temporary Items\n**/.apdisk\n\n# vim temporary files\n**/[._]*.s[a-w][a-z]\n**/[._]s[a-w][a-z]\n**/*.un~\n**/Session.vim\n**/.netrwhist\n**/*~\n\n# Visual Studio Code\n**/.vscode/\n\n# Private test configuration and binaries.\n**/config.ps1\n**/**/IISApplications\n\n# VS debug support files\n**/launchSettings.json\n\n# Snapcraft files\n**/.snapcraft\n**/*.snap\n**/parts/\n**/prime/\n**/stage/\n\n# CLR prebuilt generated files\n!**/src/pal/prebuilt/idl/*_i.c\n\n# Valid 'debug' folder, that contains CLR debugging code\n!**/src/**/debug\n\n# Ignore folders created by the CLR test build\n**/TestWrappers_x64_[d|D]ebug\n**/TestWrappers_x64_[c|C]hecked\n**/TestWrappers_x64_[r|R]elease\n**/TestWrappers_x86_[d|D]ebug\n**/TestWrappers_x86_[c|C]hecked\n**/TestWrappers_x86_[r|R]elease\n**/TestWrappers_arm_[d|D]ebug\n**/TestWrappers_arm_[c|C]hecked\n**/TestWrappers_arm_[r|R]elease\n**/TestWrappers_arm64_[d|D]ebug\n**/TestWrappers_arm64_[c|C]hecked\n**/TestWrappers_arm64_[r|R]elease\n**/tests/src/common/test_runtime/project.json\n\n**/Vagrantfile\n**/.vagrant\n\n# CMake files\n**/CMakeFiles/\n**/cmake_install.cmake\n**/CMakeCache.txt\n**/Makefile\n\n# Cross compilation\n**/cross/rootfs/*\n**/cross/android-rootfs/*\n# add x86 as it is ignored in 'Build results'\n!**/cross/x86\n\n#python import files\n**/*.pyc\n\n# JIT32 files\n**/src/jit32\n\n# performance testing sandbox\n**/sandbox\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 7.6171875,
          "content": "# editorconfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Default settings:\n# A newline ending every file\n# Use 4 spaces as indentation\n[*]\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n\n# Generated code\n[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]\ngenerated_code = true\n\n# C# files\n[*.cs]\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_between_query_expression_clauses = true\n\n# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = false\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = one_less_than_current\n\n# Modifier preferences\ncsharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:suggestion\n\n# avoid this. unless absolutely necessary\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\n\n# Types: use keywords instead of BCL types, and permit var only when the type is clear\ncsharp_style_var_for_built_in_types = false:suggestion\ncsharp_style_var_when_type_is_apparent = false:none\ncsharp_style_var_elsewhere = false:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion\n\n# name all constant fields using PascalCase\ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style\ndotnet_naming_symbols.constant_fields.applicable_kinds   = field\ndotnet_naming_symbols.constant_fields.required_modifiers = const\ndotnet_naming_style.pascal_case_style.capitalization = pascal_case\n\n# static fields should have s_ prefix\ndotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion\ndotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields\ndotnet_naming_rule.static_fields_should_have_prefix.style    = static_prefix_style\ndotnet_naming_symbols.static_fields.applicable_kinds   = field\ndotnet_naming_symbols.static_fields.required_modifiers = static\ndotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected\ndotnet_naming_style.static_prefix_style.required_prefix = s_\ndotnet_naming_style.static_prefix_style.capitalization = camel_case\n\n# internal and private fields should be _camelCase\ndotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion\ndotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields\ndotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style\ndotnet_naming_symbols.private_internal_fields.applicable_kinds = field\ndotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal\ndotnet_naming_style.camel_case_underscore_style.required_prefix = _\ndotnet_naming_style.camel_case_underscore_style.capitalization = camel_case\n\n# Code style defaults\ncsharp_using_directive_placement = outside_namespace:suggestion\ndotnet_sort_system_directives_first = true\ncsharp_prefer_braces = true:silent\ncsharp_preserve_single_line_blocks = true:none\ncsharp_preserve_single_line_statements = false:none\ncsharp_prefer_static_local_function = true:suggestion\ncsharp_prefer_simple_using_statement = false:none\ncsharp_style_prefer_switch_expression = true:suggestion\ndotnet_style_readonly_field = true:suggestion\n\n# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_prefer_collection_expression = when_types_exactly_match\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_auto_properties = true:suggestion\ndotnet_style_prefer_conditional_expression_over_assignment = true:silent\ndotnet_style_prefer_conditional_expression_over_return = true:silent\ncsharp_prefer_simple_default_expression = true:suggestion\n\n# Expression-bodied members\ncsharp_style_expression_bodied_methods = true:silent\ncsharp_style_expression_bodied_constructors = true:silent\ncsharp_style_expression_bodied_operators = true:silent\ncsharp_style_expression_bodied_properties = true:silent\ncsharp_style_expression_bodied_indexers = true:silent\ncsharp_style_expression_bodied_accessors = true:silent\ncsharp_style_expression_bodied_lambdas = true:silent\ncsharp_style_expression_bodied_local_functions = true:silent\n\n# Pattern matching\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\n\n# Null checking preferences\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion\n\n# Other features\ncsharp_style_prefer_index_operator = false:none\ncsharp_style_prefer_range_operator = false:none\ncsharp_style_pattern_local_over_anonymous_function = false:none\n\n# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false\n\n# License header\nfile_header_template = Licensed to the .NET Foundation under one or more agreements.\\nThe .NET Foundation licenses this file to you under the MIT license.\n\n# C++ Files\n[*.{cpp,h,in}]\ncurly_bracket_next_line = true\nindent_brace_style = Allman\n\n# Xml project files\n[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]\nindent_size = 2\n\n[*.{csproj,vbproj,proj,nativeproj,locproj}]\ncharset = utf-8\n\n# Xml build files\n[*.builds]\nindent_size = 2\n\n# Xml files\n[*.{xml,stylecop,resx,ruleset}]\nindent_size = 2\n\n# Xml config files\n[*.{props,targets,config,nuspec}]\nindent_size = 2\n\n# YAML config files\n[*.{yml,yaml}]\nindent_size = 2\n\n# Shell scripts\n[*.sh]\nend_of_line = lf\n[*.{cmd,bat}]\nend_of_line = crlf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.0185546875,
          "content": "# Set default behavior to automatically normalize line endings.\n* text=auto\n\n*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n\n*.lss \ttext\n\n# Force bash scripts to always use lf line endings so that if a repo is accessed\n# in Unix via a file share from Windows, the scripts will work.\n*.in text eol=lf\n*.sh text eol=lf\n\n# Likewise, force cmd and batch scripts to always use crlf\n*.cmd text eol=crlf\n*.bat text eol=crlf\n\n*.cs text diff=csharp\n*.vb text\n*.resx text\n*.c text\n*.cpp text\n*.cxx text\n*.h text\n*.hxx text\n*.py text\n*.rb text\n*.java text\n*.html text\n*.htm text\n*.css text\n*.scss text\n*.sass text\n*.less text\n*.js text\n*.lisp text\n*.clj text\n*.sql text\n*.php text\n*.lua text\n*.m text\n*.asm text\n*.erl text\n*.fs text\n*.fsx text\n*.hs text\n\n*.csproj text\n*.vbproj text\n*.fsproj text\n*.dbproj text\n*.sln text eol=crlf\n\n# Set linguist language for .h files explicitly based on\n# https://github.com/github/linguist/issues/1626#issuecomment-401442069\n# this only affects the repo's language statistics\n*.h linguist-language=C\n\n# CLR specific\nsrc/coreclr/pal/tests/palsuite/paltestlist.txt text eol=lf\nsrc/coreclr/pal/tests/palsuite/paltestlist_to_be_reviewed.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/regex-redux/regexdna-input25.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/regex-redux/regexdna-input25000.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/reverse-complement/revcomp-input25.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/reverse-complement/revcomp-input25000.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/k-nucleotide/knucleotide-input.txt text eol=lf\nsrc/tests/JIT/Performance/CodeQuality/BenchmarksGame/k-nucleotide/knucleotide-input-big.txt text eol=lf\nsrc/mono/browser/runtime/dotnet.d.ts text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.42578125,
          "content": "syntax: glob\n\n### VisualStudio ###\n\n# Tool Runtime Dir\n# note: there is no trailing slash so if these are symlinks (which are seen as files,\n#       instead of directories), git will still ignore them.\n.dotnet\n.dotnet-mono\n.dotnet-tools-global\n.packages\n.tools\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# Build results\nartifacts/\n.idea/\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nbld/\n[Bb]in/\n[Oo]bj/\nMSBuild_Logs/\nmsbuild.log\nmsbuild.err\nmsbuild.wrn\n*.binlog\n*.pp\n.deps/\n.dirstamp\n.libs/\n*.lo\n*.o\n\n# Cross building rootfs\ncross/rootfs/\ncross/android-rootfs/\n\n# Visual Studio\n.vs/\n\n# Ionide\n.ionide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\ntestResults.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Special file\n!src/coreclr/.nuget/_.pdb\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n*.nuget.g.props\n*.nuget.g.targets\n*.nuget.cache\n**/packages/*\nproject.lock.json\nproject.assets.json\n*.nuget.dgspec.json\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n*.metaproj\n*.metaproj.tmp\nbin.localpkg/\n.mono/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# C/C++ extension for Visual Studio Code\nbrowse.VC.db\n# Local settings folder for Visual Studio Code\n**/.vscode/**\n!**/.vscode/c_cpp_properties.json\n\n### MonoDevelop ###\n*.userprefs\n\n### Windows ###\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n### Linux ###\n\n*~\n\n# KDE directory preferences\n.directory\n\n### OSX ###\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# vim temporary files\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n\n# Visual Studio Code\n.vscode/\n\n# Codespaces\n.venv/\n\n# Private test configuration and binaries.\nconfig.ps1\n**/IISApplications\n\n# VS debug support files\nlaunchSettings.json\n\n# Snapcraft files\n.snapcraft\n*.snap\nparts/\nprime/\nstage/\n\n# Valid 'debug' folder, that contains CLR debugging code\n!src/coreclr/debug\n\n# Ignore folders created by the CLR test build\nTestWrappers_x64_[d|D]ebug\nTestWrappers_x64_[c|C]hecked\nTestWrappers_x64_[r|R]elease\nTestWrappers_x86_[d|D]ebug\nTestWrappers_x86_[c|C]hecked\nTestWrappers_x86_[r|R]elease\nTestWrappers_arm_[d|D]ebug\nTestWrappers_arm_[c|C]hecked\nTestWrappers_arm_[r|R]elease\nTestWrappers_arm64_[d|D]ebug\nTestWrappers_arm64_[c|C]hecked\nTestWrappers_arm64_[r|R]elease\n\nVagrantfile\n.vagrant\n\n# CMake files\nCMakeFiles/\ncmake_install.cmake\nCMakeCache.txt\nCMakeUserPresets.json\n\n# Cross compilation\ncross/rootfs/*\ncross/android-rootfs/*\n# add x86 as it is ignored in 'Build results'\n!cross/x86\n\n#python import files\n*.pyc\n\n# JIT32 files\njit32\n\n# performance testing sandbox\nsandbox\n\n# Symbolic link for the shared portion of CoreLib to make grep/findstr work for runtime devs\n#\n# On Windows, make your own by running these commands from the repo root:\n# mklink /D src\\coreclr\\System.Private.CoreLib\\shared %CD%\\src\\libraries\\System.Private.CoreLib\\src\n# mklink /D src\\coreclr\\System.Private.CoreLib\\common %CD%\\src\\libraries\\Common\\src\n#\n# On Unix, make your own by running these commands from the repo root:\n# ln -s $(pwd)/src/libraries/System.Private.CoreLib/src src/coreclr/System.Private.CoreLib/shared\n# ln -s $(pwd)/src/libraries/Common/src src/coreclr/System.Private.CoreLib/common\nsrc/coreclr/System.Private.CoreLib/shared\nsrc/coreclr/System.Private.CoreLib/common\n\n# Exceptions to the exclusions\n!src/coreclr/.nuget/_.pdb\n!src/coreclr/inc/obj/\n!src/coreclr/vm/.vscode/\n!src/coreclr/vm/.vscode/c_cpp_properties.json\n\n# Temporary artifacts from local libraries stress builds\n.dotnet-daily/\nrun-stress-*\ntest:.cs\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.0693359375,
          "content": "{\n    \"default\": false,\n    \"MD009\": {\n        \"br_spaces\": 0\n    },\n}\n"
        },
        {
          "name": ".vsconfig",
          "type": "blob",
          "size": 2.4658203125,
          "content": "{\n  \"version\": \"1.0\",\n  \"components\": [\n    \"Component.CPython39.x64\",\n    \"Microsoft.Component.CodeAnalysis.SDK\",\n    \"Microsoft.Component.MSBuild\",\n    \"Microsoft.ComponentGroup.ClickOnce.Publish\",\n    \"Microsoft.Net.Component.4.6.1.TargetingPack\",\n    \"Microsoft.Net.Component.4.6.2.SDK\",\n    \"Microsoft.Net.Component.4.6.2.TargetingPack\",\n    \"Microsoft.Net.Component.4.6.TargetingPack\",\n    \"Microsoft.Net.Component.4.7.2.TargetingPack\",\n    \"Microsoft.Net.Component.4.7.SDK\",\n    \"Microsoft.Net.Component.4.7.TargetingPack\",\n    \"Microsoft.Net.Component.4.8.SDK\",\n    \"Microsoft.Net.Component.4.8.TargetingPack\",\n    \"Microsoft.Net.ComponentGroup.DevelopmentPrerequisites\",\n    \"Microsoft.Net.ComponentGroup.TargetingPacks.Common\",\n    \"Microsoft.NetCore.Component.DevelopmentTools\",\n    \"Microsoft.NetCore.Component.Runtime.3.1\",\n    \"Microsoft.NetCore.Component.Runtime.6.0\",\n    \"Microsoft.NetCore.Component.SDK\",\n    \"Microsoft.VisualStudio.Component.ClassDesigner\",\n    \"Microsoft.VisualStudio.Component.CoreEditor\",\n    \"Microsoft.VisualStudio.Component.DiagnosticTools\",\n    \"Microsoft.VisualStudio.Component.FSharp\",\n    \"Microsoft.VisualStudio.Component.FSharp.Desktop\",\n    \"Microsoft.VisualStudio.Component.Git\",\n    \"Microsoft.VisualStudio.Component.GraphDocument\",\n    \"Microsoft.VisualStudio.Component.IntelliCode\",\n    \"Microsoft.VisualStudio.Component.LinqToSql\",\n    \"Microsoft.VisualStudio.Component.ManagedDesktop.Core\",\n    \"Microsoft.VisualStudio.Component.ManagedDesktop.Prerequisites\",\n    \"Microsoft.VisualStudio.Component.NuGet\",\n    \"Microsoft.VisualStudio.Component.Roslyn.Compiler\",\n    \"Microsoft.VisualStudio.Component.Roslyn.LanguageServices\",\n    \"Microsoft.VisualStudio.Component.SQL.CLR\",\n    \"Microsoft.VisualStudio.Component.SQL.LocalDB.Runtime\",\n    \"Microsoft.VisualStudio.Component.TextTemplating\",\n    \"Microsoft.VisualStudio.Component.VC.CLI.Support\",\n    \"Microsoft.VisualStudio.Component.VC.CMake.Project\",\n    \"Microsoft.VisualStudio.Component.VC.CoreIde\",\n    \"Microsoft.VisualStudio.Component.VC.Redist.14.Latest\",\n    \"Microsoft.VisualStudio.Component.VC.Tools.ARM64\",\n    \"Microsoft.VisualStudio.Component.VC.Tools.x86.x64\",\n    \"Microsoft.VisualStudio.Component.Windows11SDK.22621\",\n    \"Microsoft.VisualStudio.ComponentGroup.MSIX.Packaging\",\n    \"Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Core\",\n    \"Microsoft.VisualStudio.Workload.CoreEditor\",\n    \"Microsoft.VisualStudio.Workload.ManagedDesktop\",\n    \"Microsoft.VisualStudio.Workload.NativeDesktop\",\n  ]\n}\n"
        },
        {
          "name": "Build.proj",
          "type": "blob",
          "size": 0.810546875,
          "content": "<Project Sdk=\"Microsoft.Build.Traversal\">\n\n  <ItemGroup Condition=\"'$(RestoreToolsetOnly)' != 'true'\">\n    <!-- Subsets are already imported by Directory.Build.props. -->\n    <ProjectReference Include=\"@(ProjectToBuild)\" />\n    <!-- Only include tasks.proj during restore and build incrementally via a target. -->\n    <ProjectReference Include=\"$(RepoTasksDir)tasks.proj\" Condition=\"'$(MSBuildRestoreSessionId)' != ''\" />\n  </ItemGroup>\n\n  <Import Project=\"$(RepositoryEngineeringDir)SubsetValidation.targets\" />\n  <Import Project=\"$(RepositoryEngineeringDir)restore\\optimizationData.targets\" Condition=\"'$(DotNetBuildSourceOnly)' != 'true'\" />\n\n  <Target Name=\"BuildLocalTasks\"\n          BeforeTargets=\"Build\">\n    <MSBuild Projects=\"$(RepoTasksDir)tasks.proj\"\n             Targets=\"BuildIncrementally\" />\n  </Target>\n</Project>\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.251953125,
          "content": "# Code of Conduct\n\nThis project has adopted the code of conduct defined by the Contributor Covenant\nto clarify expected behavior in our community.\nFor more information, see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 14.576171875,
          "content": "# Contribution to .NET Runtime\n\nYou can contribute to .NET Runtime with issues and PRs. Simply filing issues for problems you encounter is a great way to contribute. Contributing implementations is greatly appreciated.\n\n## Reporting Issues\n\nWe always welcome bug reports, API proposals and overall feedback. Here are a few tips on how you can make reporting your issue as effective as possible.\n\n### Identify Where to Report\n\nThe .NET codebase is distributed across multiple repositories in the [dotnet organization](https://github.com/dotnet). Depending on the feedback you might want to file the issue on a different repo. Here are a few common repos:\n\n* [dotnet/runtime](https://github.com/dotnet/runtime) .NET runtime, libraries and shared host installers.\n* [dotnet/roslyn](https://github.com/dotnet/roslyn) C# and VB compiler.\n* [dotnet/aspnetcore](https://github.com/dotnet/aspnetcore) ASP.NET Core.\n* [dotnet/efcore](https://github.com/dotnet/efcore) Entity Framework Core.\n* [dotnet/maui](https://github.com/dotnet/maui) .NET MAUI.\n* [dotnet/core](https://github.com/dotnet/core) Can be used to submit feedback if not sure what repo to use.\n\n### Finding Existing Issues\n\nBefore filing a new issue, please search our [open issues](https://github.com/dotnet/runtime/issues) to check if it already exists.\n\nIf you do find an existing issue, please include your own feedback in the discussion. Do consider upvoting (👍 reaction) the original post, as this helps us prioritize popular issues in our backlog.\n\n### Writing a Good API Proposal\n\nPlease review our [API review process](https://github.com/dotnet/runtime/blob/main/docs/project/api-review-process.md) documents for guidelines on how to submit an API review. When ready to submit a proposal, please use the [API Suggestion issue template](https://github.com/dotnet/runtime/issues/new?assignees=&labels=api-suggestion&template=02_api_proposal.yml&title=%5BAPI+Proposal%5D%3A+).\n\n### Writing a Good Bug Report\n\nGood bug reports make it easier for maintainers to verify and root cause the underlying problem. The better a bug report, the faster the problem will be resolved. Ideally, a bug report should contain the following information:\n\n* A high-level description of the problem.\n* A _minimal reproduction_, i.e. the smallest size of code/configuration required to reproduce the wrong behavior.\n* A description of the _expected behavior_, contrasted with the _actual behavior_ observed.\n* Information on the environment: OS/distro, CPU arch, SDK version, etc.\n* Additional information, e.g. is it a regression from previous versions? are there any known workarounds?\n\nWhen ready to submit a bug report, please use the [Bug Report issue template](https://github.com/dotnet/runtime/issues/new?assignees=&labels=&template=01_bug_report.yml).\n\n#### Why are Minimal Reproductions Important?\n\nA reproduction lets maintainers verify the presence of a bug, and diagnose the issue using a debugger. A _minimal_ reproduction is the smallest possible console application demonstrating that bug. Minimal reproductions are generally preferable since they:\n\n1. Focus debugging efforts on a simple code snippet,\n2. Ensure that the problem is not caused by unrelated dependencies/configuration,\n3. Avoid the need to share production codebases.\n\n#### Are Minimal Reproductions Required?\n\nIn certain cases, creating a minimal reproduction might not be practical (e.g. due to nondeterministic factors, external dependencies). In such cases you would be asked to provide as much information as possible, for example by sharing a memory dump of the failing application. If maintainers are unable to root cause the problem, they might still close the issue as not actionable. While not required, minimal reproductions are strongly encouraged and will significantly improve the chances of your issue being prioritized and fixed by the maintainers.\n\n#### How to Create a Minimal Reproduction\n\nThe best way to create a minimal reproduction is gradually removing code and dependencies from a reproducing app, until the problem no longer occurs. A good minimal reproduction:\n\n* Excludes all unnecessary types, methods, code blocks, source files, nuget dependencies and project configurations.\n* Contains documentation or code comments illustrating expected vs actual behavior.\n* If possible, avoids performing any unneeded IO or system calls. For example, can the ASP.NET based reproduction be converted to a plain old console app?\n\n## Contributing Changes\n\nProject maintainers will merge changes that improve the product significantly.\n\nThe [Pull Request Guide](docs/workflow/ci/pr-guide.md) and [Copyright](docs/project/copyright.md) docs define additional guidance.\n\n### DOs and DON'Ts\n\nPlease do:\n\n* **DO** follow our [coding style](docs/coding-guidelines/coding-style.md) (C# code-specific).\n* **DO** give priority to the current style of the project or file you're changing even if it diverges from the general guidelines.\n* **DO** include tests when adding new features. When fixing bugs, start with\n  adding a test that highlights how the current behavior is broken.\n* **DO** keep the discussions focused. When a new or related topic comes up\n  it's often better to create new issue than to side track the discussion.\n* **DO** clearly state on an issue that you are going to take on implementing it.\n* **DO** blog and tweet (or whatever) about your contributions, frequently!\n\nPlease do not:\n\n* **DON'T** make PRs for style changes.\n* **DON'T** surprise us with big pull requests. Instead, file an issue and start\n  a discussion so we can agree on a direction before you invest a large amount\n  of time.\n* **DON'T** commit code that you didn't write. If you find code that you think is a good fit to add to the .NET runtime, file an issue and start a discussion before proceeding.\n* **DON'T** submit PRs that alter licensing related files or headers. If you believe there's a problem with them, file an issue and we'll be happy to discuss it.\n* **DON'T** add API additions without filing an issue and discussing with us first. See [API Review Process](docs/project/api-review-process.md).\n\n### Breaking Changes\n\nContributions must maintain [API signature](docs/coding-guidelines/breaking-changes.md#bucket-1-public-contract) and behavioral compatibility. Contributions that include [breaking changes](docs/coding-guidelines/breaking-changes.md) will be rejected. Please file an issue to discuss your idea or change if you believe that it may affect managed code compatibility.\n\n### Suggested Workflow\n\nWe use and recommend the following workflow:\n\n1. Create an issue for your work.\n    - You can skip this step for trivial changes.\n    - Reuse an existing issue on the topic, if there is one.\n    - Get agreement from the team and the community that your proposed change is a good one.\n    - If your change adds a new API, follow the [API Review Process](docs/project/api-review-process.md).\n    - Clearly state that you are going to take on implementing it, if that's the case. You can request that the issue be assigned to you. Note: The issue filer and the implementer don't have to be the same person.\n2. Create a personal fork of the repository on GitHub (if you don't already have one).\n3. In your fork, create a branch off of main (`git checkout -b mybranch`).\n    - Name the branch so that it clearly communicates your intentions, such as issue-123 or githubhandle-issue.\n    - Branches are useful since they isolate your changes from incoming changes from upstream. They also enable you to create multiple PRs from the same fork.\n4. Make and commit your changes to your branch.\n    - [Workflow Instructions](docs/workflow/README.md) explains how to build and test.\n    - Please follow our [Commit Messages](#commit-messages) guidance.\n5. Add new tests corresponding to your change, if applicable.\n6. Build the repository with your changes.\n    - Make sure that the builds are clean.\n    - Make sure that the tests are all passing, including your new tests.\n7. Create a pull request (PR) against the dotnet/runtime repository's **main** branch.\n    - State in the description what issue or improvement your change is addressing.\n    - Check if all the Continuous Integration checks are passing. Refer to [triaging failures in CI](docs/workflow/ci/failure-analysis.md) to check if any outstanding errors are known.\n8. Wait for feedback or approval of your changes from the [area owners](docs/area-owners.md).\n    - Details about the pull request [review procedure](docs/workflow/ci/pr-guide.md).\n9. When area owners have signed off, and all checks are green, your PR will be merged.\n    - The next official build will automatically include your change.\n    - You can delete the branch you used for making the change.\n\n### Help Wanted (Up for Grabs)\n\nThe team marks the most straightforward issues as [help wanted](https://github.com/dotnet/runtime/labels/help%20wanted). This set of issues is the place to start if you are interested in contributing but new to the codebase.\n\n### Commit Messages\n\nPlease format commit messages as follows (based on [A Note About Git Commit Messages](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)):\n\n```\nSummarize change in 50 characters or less\n\nProvide more detail after the first line. Leave one blank line below the\nsummary and wrap all lines at 72 characters or less.\n\nIf the change fixes an issue, leave another blank line after the final\nparagraph and indicate which issue is fixed in the specific format\nbelow.\n\nFix #42\n```\n\nAlso do your best to factor commits appropriately, not too large with unrelated things in the same commit, and not too small with the same small change applied N times in N different commits.\n\n### Contributor License Agreement\n\nYou must sign a [.NET Foundation Contribution License Agreement (CLA)](https://cla.dotnetfoundation.org) before your PR will be merged. This is a one-time requirement for projects in the .NET Foundation. You can read more about [Contribution License Agreements (CLA)](http://en.wikipedia.org/wiki/Contributor_License_Agreement) on Wikipedia and the [Microsoft Open Source](https://opensource.microsoft.com/cla/) program.\n\nYou don't have to do this up-front. You can simply clone, fork, and submit your pull-request as usual. When your pull-request is created, it is classified by a CLA bot. If the change is trivial (for example, you just fixed a typo), then the PR is labelled with `cla-not-required`. Otherwise it's classified as `cla-required` and the CLA bot will present the agreement to you on the pull-request. The CLA bot will provide a prompt to sign the CLA through a comment on the pull-request. Once you sign a CLA, the current and all future pull-requests will be labelled as `cla-signed`.\n\n### File Headers\n\nThe following file header is the used for files in this repo. Please use it for new files.\n\n```\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n```\n\n- See [class.cpp](./src/coreclr/vm/class.cpp) for an example of the header in a C++ file.\n- See [List.cs](./src/libraries/System.Private.CoreLib/src/System/Collections/Generic/List.cs) for an example of the header in a C# file.\n\n### PR - CI Process\n\nThe [dotnet continuous integration](https://dev.azure.com/dnceng-public/public/_build) (CI) system will automatically perform the required builds and run tests (including the ones you are expected to run) for PRs. Builds and test runs must be clean or have bugs properly filed against flaky/unexpected failures that are unrelated to your change.\n\nIf the CI build fails for any reason, the PR issue will link to the `Azure DevOps` build with further information on the failure.\n\n### PR Feedback\n\nMicrosoft team and community members will provide feedback on your change. Community feedback is highly valued. You will often see the absence of team feedback if the community has already provided good review feedback.\n\nOne or more Microsoft team members will review every PR prior to merge. They will often reply with \"LGTM, modulo comments\". That means that the PR will be merged once the feedback is resolved. \"LGTM\" == \"looks good to me\".\n\nThere are lots of thoughts and [approaches](https://github.com/antlr/antlr4-cpp/blob/master/CONTRIBUTING.md#emoji) for how to efficiently discuss changes. It is best to be clear and explicit with your feedback. Please be patient with people who might not understand the finer details about your approach to feedback.\n\n### Contributing Ports\n\nWe encourage ports of CoreCLR to other platforms. There are multiple ports ongoing at any one time. You may be interested in one of the following ports:\n\nChips:\n\n- [ARM32](https://github.com/dotnet/runtime/labels/arch-arm32)\n- [ARM64](https://github.com/dotnet/runtime/labels/arch-arm64)\n- [X86](https://github.com/dotnet/runtime/labels/arch-x86)\n- [LoongArch64](https://github.com/dotnet/runtime/labels/arch-loongarch64)\n- [RISC-V](https://github.com/dotnet/runtime/labels/arch-riscv)\n\nOperating System:\n\n- [Linux](https://github.com/dotnet/runtime/labels/os-linux)\n- [macOS](https://github.com/dotnet/runtime/labels/os-mac-os-x)\n- [Windows Subsystem for Linux](https://github.com/dotnet/runtime/labels/os-windows-wsl)\n- [FreeBSD](https://github.com/dotnet/runtime/labels/os-freebsd)\n\nNote: Add links to install instructions for each of these ports.\n\nPorts have a weaker contribution bar, at least initially. A functionally correct implementation is considered an important first goal. Performance, reliability and compatibility are all important concerns after that.\n\n#### Copying Files from Other Projects\n\nThe .NET runtime uses some files from other projects, per [copyright](./docs/project/copyright.md) rules.\n\nThe following rules must be followed for PRs that include files from another project:\n\n- The license of the file is [permissive](https://en.wikipedia.org/wiki/Permissive_free_software_licence).\n- The license of the file is left in-tact.\n- The contribution is correctly attributed in the [3rd party notices](./THIRD-PARTY-NOTICES.TXT) file in the repository, as needed.\n\nSee [IdnMapping.cs](./src/libraries/System.Private.CoreLib/src/System/Globalization/IdnMapping.cs) for an example of a file copied from another project and attributed in the [CoreCLR 3rd party notices](./THIRD-PARTY-NOTICES.TXT) file.\n\n#### Porting Files from Other Projects\n\nThere are many good algorithms implemented in other languages that would benefit the .NET runtime. The rules for porting a Java file to C#, for example, are the same as would be used for copying the same file, as described above.\n\n[Clean-room](https://en.wikipedia.org/wiki/Clean_room_design) implementations of existing algorithms that are not permissively licensed will generally not be accepted. If you want to create or nominate such an implementation, please create an issue to discuss the idea.\n"
        },
        {
          "name": "Directory.Build.props",
          "type": "blob",
          "size": 39.8408203125,
          "content": "<Project>\n\n  <PropertyGroup>\n    <!-- For non-SDK projects that import this file and then import Microsoft.Common.props,\n         tell Microsoft.Common.props not to import Directory.Build.props again. -->\n    <ImportDirectoryBuildProps>false</ImportDirectoryBuildProps>\n    <!-- Used to determine if we should build some packages only once across multiple official build legs.\n         For offline builds we still set OfficialBuildId but we need to build all the packages for a single\n         leg only, so we also take DotNetBuildSourceOnly into account. -->\n    <BuildingAnOfficialBuildLeg Condition=\"'$(BuildingAnOfficialBuildLeg)' == '' and '$(OfficialBuildId)' != '' and '$(DotNetBuildSourceOnly)' != 'true'\">true</BuildingAnOfficialBuildLeg>\n    <!-- When doing a source build, we want to build the various text-only manifests in\n         all cases, rather than ordinarily where we build them during mobile or wasm\n         build legs. This makes the manifests available on source-only builds. -->\n    <ForceBuildMobileManifests Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">true</ForceBuildMobileManifests>\n    <!-- Propagate the configuration and platform to project references. When building in VS, this defaults to true.\n         Explicitly setting it to false ensures projects are built in the corresponding configuration both in VS and on the command line. -->\n    <ShouldUnsetParentConfigurationAndPlatform>false</ShouldUnsetParentConfigurationAndPlatform>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"CalculateTargetOS\">\n    <_hostOS>linux</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('OSX'))\">osx</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('FREEBSD'))\">freebsd</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('NETBSD'))\">netbsd</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('ILLUMOS'))\">illumos</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('SOLARIS'))\">solaris</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('HAIKU'))\">haiku</_hostOS>\n    <_hostOS Condition=\"$([MSBuild]::IsOSPlatform('WINDOWS'))\">windows</_hostOS>\n    <HostOS>$(_hostOS)</HostOS>\n    <TargetOS Condition=\"'$(TargetOS)' == '' and '$(RuntimeIdentifier)' == 'browser-wasm'\">browser</TargetOS>\n    <TargetOS Condition=\"'$(TargetOS)' == ''\">$(_hostOS)</TargetOS>\n    <TargetsMobile Condition=\"'$(TargetOS)' == 'ios' or '$(TargetOS)' == 'iossimulator' or '$(TargetOS)' == 'maccatalyst' or '$(TargetOS)' == 'tvos' or '$(TargetOS)' == 'tvossimulator' or '$(TargetOS)' == 'android' or '$(TargetOS)' == 'browser' or '$(TargetOS)' == 'wasi'\">true</TargetsMobile>\n    <TargetsAppleMobile Condition=\"'$(TargetOS)' == 'ios' or '$(TargetOS)' == 'iossimulator' or '$(TargetOS)' == 'maccatalyst' or '$(TargetOS)' == 'tvos' or '$(TargetOS)' == 'tvossimulator'\">true</TargetsAppleMobile>\n  </PropertyGroup>\n\n  <!-- Platform property is required by RepoLayout.props in Arcade SDK. -->\n  <PropertyGroup Label=\"CalculateArch\">\n    <_hostArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture.ToString().ToLowerInvariant)</_hostArch>\n    <BuildArchitecture Condition=\"'$(BuildArchitecture)' == ''\">$(_hostArch)</BuildArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and ('$(TargetOS)' == 'browser' or '$(RuntimeIdentifier)' == 'browser-wasm')\">wasm</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and ('$(TargetOS)' == 'wasi' or '$(RuntimeIdentifier)' == 'wasi-wasm')\">wasm</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'arm'\">arm</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'armv6'\">armv6</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'armel'\">armel</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'arm64'\">arm64</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'loongarch64'\">loongarch64</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 's390x'\">s390x</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(_hostArch)' == 'ppc64le'\">ppc64le</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == '' and '$(TargetsMobile)' == 'true'\">x64</TargetArchitecture>\n    <TargetArchitecture Condition=\"'$(TargetArchitecture)' == ''\">x64</TargetArchitecture>\n    <Platform Condition=\"'$(Platform)' == '' and '$(InferPlatformFromTargetArchitecture)' == 'true'\">$(TargetArchitecture)</Platform>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"SetOSTargetMinVersions\">\n    <!--\n      Minimum target OS versions, keep in sync with:\n        - eng/native/configurecompiler.cmake\n        - eng/native/build-commons.sh\n        - src/native/libs/build-native.sh\n        - src/coreclr/tools/aot/ILCompiler.Compiler/Compiler/ObjectWriter/MachObjectWriter.cs\n        - src/coreclr/nativeaot/BuildIntegration/Microsoft.NETCore.Native.Unix.targets\n        - src/mono/mono/tools/offsets-tool/offsets-tool.py\n        - src/mono/msbuild/apple/build/AppleBuild.targets\n        - src/installer/pkg/sfx/bundle/shared-framework-distribution-template-x64.xml\n        - src/installer/pkg/sfx/bundle/shared-framework-distribution-template-arm64.xml\n        - src/tasks/AotCompilerTask/MonoAOTCompiler.props\n        - src/tasks/AppleAppBuilder/Xcode.cs\n        - src/tasks/MobileBuildTasks/Apple/AppleProject.cs\n        - https://github.com/dotnet/sdk repo > src/Installer/redist-installer/targets/GeneratePKG.targets\n     -->\n    <AndroidApiLevelMin>21</AndroidApiLevelMin>\n    <iOSVersionMin>12.2</iOSVersionMin>\n    <tvOSVersionMin>12.2</tvOSVersionMin>\n    <macOSVersionMin>12.0</macOSVersionMin>\n    <MacCatalystVersionMin>15.0</MacCatalystVersionMin>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <!-- Set OutDirName (Arcade specific property that must be set before the Arcade SDK is imported) to change the BaseOutputPath and\n         BaseIntermediateOutputPath properties to include the ref subfolder. -->\n    <IsReferenceAssemblyProject Condition=\"$([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)')) == 'ref'\">true</IsReferenceAssemblyProject>\n    <OutDirName Condition=\"'$(IsReferenceAssemblyProject)' == 'true'\">$(MSBuildProjectName)$([System.IO.Path]::DirectorySeparatorChar)ref</OutDirName>\n  </PropertyGroup>\n\n  <!-- Import the Arcade SDK -->\n  <Import Project=\"Sdk.props\" Sdk=\"Microsoft.DotNet.Arcade.Sdk\" />\n\n  <!-- The TFMs to build and test against. -->\n  <PropertyGroup>\n    <NetCoreAppCurrentVersion>10.0</NetCoreAppCurrentVersion>\n    <NetCoreAppCurrentIdentifier>.NETCoreApp</NetCoreAppCurrentIdentifier>\n    <NetCoreAppCurrentTargetFrameworkMoniker>$(NetCoreAppCurrentIdentifier),Version=v$(NetCoreAppCurrentVersion)</NetCoreAppCurrentTargetFrameworkMoniker>\n    <MicrosoftNetCoreAppFrameworkName>Microsoft.NETCore.App</MicrosoftNetCoreAppFrameworkName>\n    <NetCoreAppCurrentBrandName>.NET $(NetCoreAppCurrentVersion)</NetCoreAppCurrentBrandName>\n    <NetCoreAppCurrent>net$(NetCoreAppCurrentVersion)</NetCoreAppCurrent>\n\n    <!-- The previous supported .NET version. -->\n    <NetCoreAppPrevious>net9.0</NetCoreAppPrevious>\n    <NetCoreAppPrevious Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">$(NetCoreAppCurrent)</NetCoreAppPrevious>\n\n    <!-- The minimum supported .NET version. -->\n    <NetCoreAppMinimum>net8.0</NetCoreAppMinimum>\n    <NetCoreAppMinimum Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">$(NetCoreAppCurrent)</NetCoreAppMinimum>\n\n    <!-- when this is updated, make sure to keep $(_NetCoreAppToolCurrent)\n         in src/mono/wasm/build/WasmApp.LocalBuild.props\n         and in src/mono/msbuild/apple/build/AppleBuild.LocalBuild.props in sync -->\n    <NetCoreAppToolCurrentVersion>10.0</NetCoreAppToolCurrentVersion>\n    <NetCoreAppToolCurrent>net$(NetCoreAppToolCurrentVersion)</NetCoreAppToolCurrent>\n    <NetCoreAppCurrentToolTargetFrameworkMoniker>$(NetCoreAppCurrentIdentifier),Version=v$(NetCoreAppToolCurrentVersion)</NetCoreAppCurrentToolTargetFrameworkMoniker>\n\n    <AspNetCoreAppCurrentVersion>10.0</AspNetCoreAppCurrentVersion>\n    <AspNetCoreAppCurrent>net$(AspNetCoreAppCurrentVersion)</AspNetCoreAppCurrent>\n\n    <NetFrameworkMinimum>net462</NetFrameworkMinimum>\n    <NetFrameworkCurrent>net48</NetFrameworkCurrent>\n    <NetFrameworkToolCurrent>net472</NetFrameworkToolCurrent>\n    <!-- Don't build for NETFramework during source-build. -->\n    <NetFrameworkMinimum Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\" />\n    <NetFrameworkToolCurrent Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\" />\n    <NetFrameworkCurrent Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\" />\n\n    <ApiCompatNetCoreAppBaselineVersion>9.0.0</ApiCompatNetCoreAppBaselineVersion>\n    <ApiCompatNetCoreAppBaselineTFM>net9.0</ApiCompatNetCoreAppBaselineTFM>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"CalculateConfiguration\">\n    <!-- The RuntimeConfiguration property allows to pass in/specify a configuration that applies to both CoreCLR and Mono. -->\n    <RuntimeConfiguration Condition=\"'$(RuntimeConfiguration)' == ''\">$(Configuration)</RuntimeConfiguration>\n    <RuntimeConfiguration Condition=\"'$(RuntimeConfiguration)' == '' and ('$(Configuration)' == 'Debug' or '$(Configuration)' == 'Release')\">$(Configuration)</RuntimeConfiguration>\n    <RuntimeConfiguration Condition=\"'$(RuntimeConfiguration)' == ''\">Debug</RuntimeConfiguration>\n    <CoreCLRConfiguration Condition=\"'$(CoreCLRConfiguration)' == ''\">$(RuntimeConfiguration)</CoreCLRConfiguration>\n    <MonoConfiguration Condition=\"'$(MonoConfiguration)' == '' and '$(RuntimeConfiguration.ToLower())' != 'checked'\">$(RuntimeConfiguration)</MonoConfiguration>\n    <!-- There's no checked configuration on Mono. -->\n    <MonoConfiguration Condition=\"'$(MonoConfiguration)' == '' and '$(RuntimeConfiguration.ToLower())' == 'checked'\">Debug</MonoConfiguration>\n    <LibrariesConfiguration Condition=\"'$(LibrariesConfiguration)' == ''\">$(Configuration)</LibrariesConfiguration>\n    <HostConfiguration Condition=\"'$(HostConfiguration)' == ''\">$(Configuration)</HostConfiguration>\n    <TasksConfiguration Condition=\"'$(TasksConfiguration)' == ''\">$(Configuration)</TasksConfiguration>\n    <ToolsConfiguration Condition=\"'$(ToolsConfiguration)' == ''\">$(Configuration)</ToolsConfiguration>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <LibrariesProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'libraries'))</LibrariesProjectRoot>\n    <CoreClrProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'coreclr'))</CoreClrProjectRoot>\n    <MonoProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'mono'))</MonoProjectRoot>\n    <InstallerProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'installer'))</InstallerProjectRoot>\n    <WorkloadsProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'workloads'))</WorkloadsProjectRoot>\n    <ToolsProjectRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'tools'))</ToolsProjectRoot>\n    <SharedNativeRoot>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'src', 'native'))</SharedNativeRoot>\n    <RepoTasksDir>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'src', 'tasks'))</RepoTasksDir>\n    <IbcOptimizationDataDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'ibc'))</IbcOptimizationDataDir>\n    <MibcOptimizationDataDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'mibc'))</MibcOptimizationDataDir>\n    <DocsDir>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'docs'))</DocsDir>\n    <BrowserProjectRoot>$([MSBuild]::NormalizeDirectory($(MonoProjectRoot), 'browser'))</BrowserProjectRoot>\n    <WasmProjectRoot>$([MSBuild]::NormalizeDirectory($(MonoProjectRoot), 'wasm'))</WasmProjectRoot>\n    <WasiProjectRoot>$([MSBuild]::NormalizeDirectory($(MonoProjectRoot), 'wasi'))</WasiProjectRoot>\n\n    <AppleAppBuilderDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'AppleAppBuilder', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</AppleAppBuilderDir>\n    <AndroidAppBuilderDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'AndroidAppBuilder', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)', 'publish'))</AndroidAppBuilderDir>\n    <MobileBuildTasksDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'MobileBuildTasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</MobileBuildTasksDir>\n    <WasmAppBuilderDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'WasmAppBuilder', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</WasmAppBuilderDir>\n    <WasmBuildTasksDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'WasmBuildTasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)', 'publish'))</WasmBuildTasksDir>\n    <WorkloadBuildTasksDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'WorkloadBuildTasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</WorkloadBuildTasksDir>\n    <LibraryBuilderDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'LibraryBuilder', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</LibraryBuilderDir>\n    <MonoAOTCompilerDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'MonoAOTCompiler', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</MonoAOTCompilerDir>\n    <MonoTargetsTasksDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'MonoTargetsTasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</MonoTargetsTasksDir>\n    <TestExclusionListTasksDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'TestExclusionListTasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)'))</TestExclusionListTasksDir>\n    <InstallerTasksAssemblyPath Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'installer.tasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)', 'installer.tasks.dll'))</InstallerTasksAssemblyPath>\n    <InstallerTasksAssemblyPath Condition=\"'$(MSBuildRuntimeType)' != 'Core'\">$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'installer.tasks', '$(TasksConfiguration)', '$(NetFrameworkToolCurrent)', 'installer.tasks.dll'))</InstallerTasksAssemblyPath>\n    <Crossgen2SdkOverridePropsPath Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'Crossgen2Tasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)', 'Microsoft.NET.CrossGen.props'))</Crossgen2SdkOverridePropsPath>\n    <Crossgen2SdkOverrideTargetsPath Condition=\"'$(MSBuildRuntimeType)' == 'Core'\">$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'Crossgen2Tasks', '$(TasksConfiguration)', '$(NetCoreAppToolCurrent)', 'Microsoft.NET.CrossGen.targets'))</Crossgen2SdkOverrideTargetsPath>\n    <AppleAppBuilderTasksAssemblyPath>$([MSBuild]::NormalizePath('$(AppleAppBuilderDir)', 'AppleAppBuilder.dll'))</AppleAppBuilderTasksAssemblyPath>\n    <AndroidAppBuilderTasksAssemblyPath>$([MSBuild]::NormalizePath('$(AndroidAppBuilderDir)', 'AndroidAppBuilder.dll'))</AndroidAppBuilderTasksAssemblyPath>\n    <MobileBuildTasksAssemblyPath>$([MSBuild]::NormalizePath('$(MobileBuildTasksDir)', 'MobileBuildTasks.dll'))</MobileBuildTasksAssemblyPath>\n    <WasmAppBuilderTasksAssemblyPath>$([MSBuild]::NormalizePath('$(WasmAppBuilderDir)', 'WasmAppBuilder.dll'))</WasmAppBuilderTasksAssemblyPath>\n    <WasmBuildTasksAssemblyPath>$([MSBuild]::NormalizePath('$(WasmBuildTasksDir)', 'WasmBuildTasks.dll'))</WasmBuildTasksAssemblyPath>\n    <WasmAppHostDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'WasmAppHost', 'wasm', '$(Configuration)'))</WasmAppHostDir>\n    <WorkloadBuildTasksAssemblyPath>$([MSBuild]::NormalizePath('$(WorkloadBuildTasksDir)', 'WorkloadBuildTasks.dll'))</WorkloadBuildTasksAssemblyPath>\n    <LibraryBuilderTasksAssemblyPath>$([MSBuild]::NormalizePath('$(LibraryBuilderDir)', 'LibraryBuilder.dll'))</LibraryBuilderTasksAssemblyPath>\n    <MonoAOTCompilerTasksAssemblyPath>$([MSBuild]::NormalizePath('$(MonoAOTCompilerDir)', 'MonoAOTCompiler.dll'))</MonoAOTCompilerTasksAssemblyPath>\n    <MonoTargetsTasksAssemblyPath>$([MSBuild]::NormalizePath('$(MonoTargetsTasksDir)', 'MonoTargetsTasks.dll'))</MonoTargetsTasksAssemblyPath>\n    <TestExclusionListTasksAssemblyPath>$([MSBuild]::NormalizePath('$(TestExclusionListTasksDir)', 'TestExclusionListTasks.dll'))</TestExclusionListTasksAssemblyPath>\n    <CoreCLRToolPath>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'coreclr', '$(TargetOS).$(TargetArchitecture).$(RuntimeConfiguration)'))</CoreCLRToolPath>\n    <ILAsmToolPath Condition=\"'$(DotNetBuildSourceOnly)' == 'true' or '$(BuildArchitecture)' == 's390x' or '$(BuildArchitecture)' == 'ppc64le'\">$(CoreCLRToolPath)</ILAsmToolPath>\n    <!-- force download temmporarily https://github.com/dotnet/runtime/issues/101528\n    <WasmtimeDir Condition=\"'$(WasmtimeDir)' == '' and '$(WASMTIME_PATH)' != '' and Exists($(WASMTIME_PATH))\">$(WASMTIME_PATH)</WasmtimeDir>\n    -->\n    <WasmtimeDir Condition=\"'$(WasmtimeDir)' == ''\">$([MSBuild]::NormalizeDirectory($(ArtifactsObjDir), 'wasmtime'))</WasmtimeDir>\n    <InstallWasmtimeForTests Condition=\"'$(InstallWasmtimeForTests)' == '' and !Exists($(WasmtimeDir))\">true</InstallWasmtimeForTests>\n    <WasmCommonTargetsPath>$([MSBuild]::NormalizeDirectory($(WasmProjectRoot), 'build'))</WasmCommonTargetsPath>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"'$(DotNetBuildRuntimeNativeAOTRuntimePack)' == 'true'\">\n    <BuildNativeAOTRuntimePack>true</BuildNativeAOTRuntimePack>\n    <SkipLibrariesNativeRuntimePackages>true</SkipLibrariesNativeRuntimePackages>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"'$(DotNetBuildMonoCrossAOT)' == 'true'\">\n    <BuildMonoAOTCrossCompilerOnly>true</BuildMonoAOTCrossCompilerOnly>\n    <MonoCrossAOTTargetOS>android+browser+wasi</MonoCrossAOTTargetOS>\n    <MonoCrossAOTTargetOS Condition=\"'$(TargetOS)' == 'osx'\">$(MonoCrossAOTTargetOS)+tvos+ios+maccatalyst</MonoCrossAOTTargetOS>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"CalculatePortableBuild\">\n    <PortableBuild Condition=\"'$(PortableBuild)' == '' and '$(DotNetBuildSourceOnly)' == 'true'\">false</PortableBuild>\n    <PortableBuild Condition=\"'$(PortableBuild)' == ''\">true</PortableBuild>\n  </PropertyGroup>\n\n  <!-- _portableOS is the portable rid-OS corresponding to the target platform. -->\n  <PropertyGroup Label=\"CalculatePortableOS\">\n    <!-- To determine _portableOS we use TargetOS.\n         TargetOS is not a rid-OS. For example: for Windows it is 'windows' instead of 'win'.\n         And, for flavors of Linux, like 'linux-musl' and 'linux-bionic', TargetOS is 'linux'. -->\n\n    <_portableOS>$(TargetOS.ToLowerInvariant())</_portableOS>\n    <_portableOS Condition=\"'$(_portableOS)' == 'windows'\">win</_portableOS>\n\n    <!-- TargetOS=AnyOS is a sentinel value used by tests, ignore it.  -->\n    <_portableOS Condition=\"'$(_portableOS)' == 'anyos'\">$(__PortableTargetOS)</_portableOS>\n\n    <!-- Detect linux flavors using __PortableTargetOS from the native script. -->\n    <_portableOS Condition=\"'$(_portableOS)' == 'linux' and '$(__PortableTargetOS)' == 'linux-musl'\">linux-musl</_portableOS>\n    <_portableOS Condition=\"'$(_portableOS)' == 'linux' and '$(__PortableTargetOS)' == 'linux-bionic'\">linux-bionic</_portableOS>\n\n    <!-- On Windows, we can build for Windows and Mobile.\n         For other TargetOSes, create a \"win\" build, built from TargetOS sources and \"win\" pre-built packages. -->\n    <_portableOS Condition=\"'$(HostOS)' == 'win' and '$(TargetsMobile)' != 'true'\">win</_portableOS>\n  </PropertyGroup>\n\n  <!-- PackageRID is used for packages needed for the target. -->\n  <PropertyGroup Label=\"CalculatePackageRID\">\n    <_packageOS>$(_portableOS)</_packageOS>\n\n    <_packageOS Condition=\"'$(CrossBuild)' == 'true' and '$(_portableOS)' != 'linux-musl' and '$(_portableOS)' != 'linux-bionic'\">$(_hostOS)</_packageOS>\n\n    <!-- source-build sets PackageOS to build with non-portable rid packages that were source-built previously. -->\n    <PackageRID Condition=\"'$(PackageOS)' != ''\">$(PackageOS)-$(TargetArchitecture)</PackageRID>\n    <PackageRID Condition=\"'$(PackageRID)' == ''\">$(_packageOS)-$(TargetArchitecture)</PackageRID>\n  </PropertyGroup>\n\n  <!-- ToolsRID is used for packages needed on the build host. -->\n  <PropertyGroup Label=\"CalculateToolsRID\">\n    <!-- _portableHostOS is the portable rid-OS corresponding to the build host platform.\n\n         To determine _portableHostOS we use _hostOS, similar to how _portableOS is calculated from TargetOS.\n\n         When we're not cross-building we can detect linux flavors by looking at _portableOS\n         because the target platform and the build host platform are the same.\n         For cross-builds, we're currently unable to detect the flavors. -->\n    <_portableHostOS>$(_hostOS)</_portableHostOS>\n    <_portableHostOS Condition=\"'$(_portableHostOS)' == 'windows'\">win</_portableHostOS>\n    <_portableHostOS Condition=\"'$(CrossBuild)' != 'true' and '$(_portableOS)' == 'linux-musl'\">linux-musl</_portableHostOS>\n\n    <!-- source-build sets ToolsOS to build with non-portable rid packages that were source-built previously. -->\n    <ToolsRID Condition=\"'$(ToolsOS)' != ''\">$(ToolsOS)-$(_hostArch)</ToolsRID>\n    <ToolsRID Condition=\"'$(ToolsRID)' == ''\">$(_portableHostOS)-$(_hostArch)</ToolsRID>\n\n    <!-- Microsoft.NET.Sdk.IL SDK defaults to the portable host rid. Match it to ToolsRID (for source-build). -->\n    <MicrosoftNetCoreIlasmPackageRuntimeId>$(ToolsRID)</MicrosoftNetCoreIlasmPackageRuntimeId>\n  </PropertyGroup>\n\n  <!-- OutputRID is used to name the target platform.\n       For portable builds, OutputRID matches _portableOS.\n       For non-portable builds, it uses __DistroRid (from the native build script), or falls back to RuntimeInformation.RuntimeIdentifier.\n       Source-build sets OutputRID directly. -->\n  <PropertyGroup Label=\"CalculateOutputRID\">\n    <_hostRid Condition=\"'$(MSBuildRuntimeType)' == 'core'\">$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</_hostRid>\n    <_hostRid Condition=\"'$(MSBuildRuntimeType)' != 'core'\">win-$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</_hostRid>\n\n    <_parseDistroRid>$(__DistroRid)</_parseDistroRid>\n    <_parseDistroRid Condition=\"'$(_parseDistroRid)' == ''\">$(_hostRid)</_parseDistroRid>\n    <_distroRidIndex>$(_parseDistroRid.LastIndexOf('-'))</_distroRidIndex>\n\n    <_outputOS>$(_parseDistroRid.SubString(0, $(_distroRidIndex)))</_outputOS>\n    <_outputOS Condition=\"'$(PortableBuild)' == 'true'\">$(_portableOS)</_outputOS>\n\n    <OutputRID Condition=\"'$(OutputRID)' == ''\">$(_outputOS)-$(TargetArchitecture)</OutputRID>\n  </PropertyGroup>\n\n  <PropertyGroup Label=\"CalculateTargetOSName\">\n    <TargetsFreeBSD Condition=\"'$(TargetOS)' == 'freebsd'\">true</TargetsFreeBSD>\n    <Targetsillumos Condition=\"'$(TargetOS)' == 'illumos'\">true</Targetsillumos>\n    <TargetsSolaris Condition=\"'$(TargetOS)' == 'solaris'\">true</TargetsSolaris>\n    <TargetsHaiku Condition=\"'$(TargetOS)' == 'haiku'\">true</TargetsHaiku>\n    <TargetsLinux Condition=\"'$(TargetOS)' == 'linux' or '$(TargetOS)' == 'android'\">true</TargetsLinux>\n    <TargetsLinuxBionic Condition=\"'$(_portableOS)' == 'linux-bionic'\">true</TargetsLinuxBionic>\n    <TargetsLinuxMusl Condition=\"'$(_portableOS)' == 'linux-musl'\">true</TargetsLinuxMusl>\n    <TargetsLinuxGlibc Condition=\"'$(TargetsLinux)' == 'true' and '$(TargetsLinuxMusl)' != 'true' and '$(TargetsLinuxBionic)' != 'true'\">true</TargetsLinuxGlibc>\n    <TargetsNetBSD Condition=\"'$(TargetOS)' == 'netbsd'\">true</TargetsNetBSD>\n    <TargetsOSX Condition=\"'$(TargetOS)' == 'osx'\">true</TargetsOSX>\n    <TargetsMacCatalyst Condition=\"'$(TargetOS)' == 'maccatalyst'\">true</TargetsMacCatalyst>\n    <TargetsiOS Condition=\"'$(TargetOS)' == 'ios' or '$(TargetOS)' == 'iossimulator'\">true</TargetsiOS>\n    <TargetstvOS Condition=\"'$(TargetOS)' == 'tvos' or '$(TargetOS)' == 'tvossimulator'\">true</TargetstvOS>\n    <TargetsiOSSimulator Condition=\"'$(TargetOS)' == 'iossimulator'\">true</TargetsiOSSimulator>\n    <TargetstvOSSimulator Condition=\"'$(TargetOS)' == 'tvossimulator'\">true</TargetstvOSSimulator>\n    <TargetsAndroid Condition=\"'$(TargetOS)' == 'android'\">true</TargetsAndroid>\n    <TargetsBrowser Condition=\"'$(TargetOS)' == 'browser'\">true</TargetsBrowser>\n    <TargetsWasi Condition=\"'$(TargetOS)' == 'wasi'\">true</TargetsWasi>\n    <TargetsWindows Condition=\"'$(TargetOS)' == 'windows'\">true</TargetsWindows>\n    <TargetsUnix Condition=\"'$(TargetsFreeBSD)' == 'true' or '$(Targetsillumos)' == 'true' or '$(TargetsSolaris)' == 'true' or '$(TargetsHaiku)' == 'true' or '$(TargetsLinux)' == 'true' or '$(TargetsNetBSD)' == 'true' or '$(TargetsOSX)' == 'true' or '$(TargetsMacCatalyst)' == 'true' or '$(TargetstvOS)' == 'true' or '$(TargetsiOS)' == 'true' or '$(TargetsAndroid)' == 'true'\">true</TargetsUnix>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <MicrosoftNetCoreAppRefPackDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'microsoft.netcore.app.ref'))</MicrosoftNetCoreAppRefPackDir>\n    <MicrosoftNetCoreAppRefPackRefDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRefPackDir)', 'ref', '$(NetCoreAppCurrent)'))</MicrosoftNetCoreAppRefPackRefDir>\n    <MicrosoftNetCoreAppRefPackDataDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRefPackDir)', 'data'))</MicrosoftNetCoreAppRefPackDataDir>\n\n    <MicrosoftNetCoreAppRuntimePackDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'microsoft.netcore.app.runtime.$(OutputRID)', '$(LibrariesConfiguration)'))</MicrosoftNetCoreAppRuntimePackDir>\n    <MicrosoftNetCoreAppRuntimePackRidDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRuntimePackDir)', 'runtimes', '$(OutputRID)'))</MicrosoftNetCoreAppRuntimePackRidDir>\n    <MicrosoftNetCoreAppRuntimePackRidLibTfmDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRuntimePackRidDir)', 'lib', '$(NetCoreAppCurrent)'))</MicrosoftNetCoreAppRuntimePackRidLibTfmDir>\n    <MicrosoftNetCoreAppRuntimePackNativeDir>$([MSBuild]::NormalizeDirectory('$(MicrosoftNetCoreAppRuntimePackRidDir)', 'native'))</MicrosoftNetCoreAppRuntimePackNativeDir>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <DotNetHostBinDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', '$(OutputRID).$(HostConfiguration)', 'corehost'))</DotNetHostBinDir>\n  </PropertyGroup>\n\n  <!--Feature switches -->\n  <PropertyGroup>\n    <NoPgoOptimize Condition=\"'$(NoPgoOptimize)' == '' and '$(DotNetBuildSourceOnly)' == 'true'\">true</NoPgoOptimize>\n    <EnableNgenOptimization Condition=\"'$(EnableNgenOptimization)' == '' and '$(DotNetBuildSourceOnly)' == 'true'\">false</EnableNgenOptimization>\n    <EnableNgenOptimization Condition=\"'$(EnableNgenOptimization)' == '' and ('$(Configuration)' == 'Release' or '$(Configuration)' == 'Checked')\">true</EnableNgenOptimization>\n    <!-- Enable NuGet static graph evaluation to optimize incremental restore -->\n    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>\n    <!-- Turn off end of life target framework checks as we intentionally build older .NETCoreApp configurations. -->\n    <CheckEolTargetFramework>false</CheckEolTargetFramework>\n    <!-- Turn off workload support until we support them. -->\n    <MSBuildEnableWorkloadResolver>false</MSBuildEnableWorkloadResolver>\n    <!-- Disable source link when building locally. -->\n    <DisableSourceLink Condition=\"'$(DisableSourceLink)' == '' and\n                                  '$(ContinuousIntegrationBuild)' != 'true' and\n                                  '$(OfficialBuildId)' == ''\">true</DisableSourceLink>\n    <!-- Runtime doesn't support Arcade-driven target framework filtering. -->\n    <NoTargetFrameworkFiltering>true</NoTargetFrameworkFiltering>\n\n    <NativeBuildPartitionPropertiesToRemove>ClrFullNativeBuild;ClrRuntimeSubset;ClrJitSubset;ClrPalTestsSubset;ClrAllJitsSubset;ClrILToolsSubset;ClrNativeAotSubset;ClrSpmiSubset;ClrCrossComponentsSubset;ClrDebugSubset;HostArchitecture;PgoInstrument;NativeOptimizationDataSupported;CMakeArgs;CxxStandardLibrary;CxxStandardLibraryStatic;CxxAbiLibrary</NativeBuildPartitionPropertiesToRemove>\n    <UseSystemZlib Condition=\"'$(TargetsAppleMobile)' == 'true' or '$(TargetOS)' == 'android' or '$(TargetArchitecture)' == 'armv6'\">true</UseSystemZlib>\n  </PropertyGroup>\n\n  <!-- RepositoryEngineeringDir isn't set when Installer tests import this file. -->\n  <Import Project=\"$(RepositoryEngineeringDir)native\\naming.props\" />\n  <Import Project=\"$(RepositoryEngineeringDir)Subsets.props\" />\n\n  <PropertyGroup>\n    <CoreLibSharedDir>$([MSBuild]::NormalizeDirectory('$(LibrariesProjectRoot)', 'System.Private.CoreLib', 'src'))</CoreLibSharedDir>\n    <CoreLibRefDir>$([MSBuild]::NormalizeDirectory('$(LibrariesProjectRoot)', 'System.Private.CoreLib', 'ref'))</CoreLibRefDir>\n    <CoreLibProject Condition=\"'$(RuntimeFlavor)' == 'CoreCLR'\">$([MSBuild]::NormalizePath('$(CoreClrProjectRoot)', 'System.Private.CoreLib', 'System.Private.CoreLib.csproj'))</CoreLibProject>\n    <CoreLibProject Condition=\"'$(RuntimeFlavor)' == 'Mono'\">$([MSBuild]::NormalizePath('$(MonoProjectRoot)', 'System.Private.CoreLib', 'System.Private.CoreLib.csproj'))</CoreLibProject>\n    <CoreLibProject Condition=\"'$(UseNativeAotCoreLib)' == 'true'\">$([MSBuild]::NormalizePath('$(CoreClrProjectRoot)', 'nativeaot', 'System.Private.CoreLib', 'src', 'System.Private.CoreLib.csproj'))</CoreLibProject>\n    <UriProject>$([MSBuild]::NormalizePath('$(LibrariesProjectRoot)', 'System.Private.Uri', 'src', 'System.Private.Uri.csproj'))</UriProject>\n\n    <!-- this property is used by the SDK to pull in mono-based runtime packs -->\n    <UseMonoRuntime Condition=\"'$(UseMonoRuntime)' == '' and '$(RuntimeFlavor)' == 'Mono'\">true</UseMonoRuntime>\n\n    <!-- For enabling the use of XUnitLogChecker in coreclr and libraries test runs. -->\n    <!-- TODO: Enable XUnitLogChecker for NativeAOT tests https://github.com/dotnet/runtime/issues/94722 -->\n    <IsXUnitLogCheckerSupported Condition=\"'$(IsXUnitLogCheckerSupported)' == ''\">false</IsXUnitLogCheckerSupported>\n    <IsXUnitLogCheckerSupported Condition=\"'$(RuntimeFlavor)' == 'CoreCLR' and '$(TestNativeAot)' != 'true' and '$(RunNativeAotTestApps)' != 'true' and '$(TestSingleFile)' != 'true' and '$(TargetOS)' != 'browser' and '$(TargetOS)' != 'wasi' and '$(TargetOS)' != 'ios' and '$(TargetOS)' != 'iossimulator' and '$(TargetOS)' != 'tvos' and '$(TargetOS)' != 'tvossimulator' and '$(TargetOS)' != 'maccatalyst' and '$(TargetOS)' != 'android'\">true</IsXUnitLogCheckerSupported>\n    <XUnitLogCheckerLibrariesOutDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'XUnitLogChecker'))</XUnitLogCheckerLibrariesOutDir>\n  </PropertyGroup>\n\n  <!-- Packaging -->\n  <PropertyGroup>\n    <GitHubRepositoryName>runtime</GitHubRepositoryName>\n    <RepositoryUrl>https://github.com/dotnet/$(GitHubRepositoryName)</RepositoryUrl>\n    <PackageProjectUrl>https://dot.net</PackageProjectUrl>\n    <Owners>microsoft,dotnetframework</Owners>\n    <IncludeSymbols>true</IncludeSymbols>\n    <LicenseFile>$(MSBuildThisFileDirectory)LICENSE.TXT</LicenseFile>\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\n    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>\n    <Copyright>$(CopyrightNetFoundation)</Copyright>\n    <PackageThirdPartyNoticesFile>$(MSBuildThisFileDirectory)THIRD-PARTY-NOTICES.TXT</PackageThirdPartyNoticesFile>\n    <PackageReleaseNotes>https://go.microsoft.com/fwlink/?LinkID=799421</PackageReleaseNotes>\n    <IsPrivateAssembly>$(MSBuildProjectName.Contains('Private'))</IsPrivateAssembly>\n    <!-- Private packages should not be stable -->\n    <SuppressFinalPackageVersion Condition=\"'$(SuppressFinalPackageVersion)' == '' and $(IsPrivateAssembly)\">true</SuppressFinalPackageVersion>\n    <!-- We don't want Private packages to be shipped to NuGet.org -->\n    <IsShippingPackage Condition=\"$(IsPrivateAssembly)\">false</IsShippingPackage>\n    <PlaceholderFile>$(RepositoryEngineeringDir)_._</PlaceholderFile>\n  </PropertyGroup>\n\n  <!-- Flow these properties to consuming projects. -->\n  <ItemDefinitionGroup>\n    <TargetPathWithTargetPlatformMoniker>\n      <IsPrivateAssembly>$(IsPrivateAssembly.ToLowerInvariant())</IsPrivateAssembly>\n    </TargetPathWithTargetPlatformMoniker>\n  </ItemDefinitionGroup>\n\n  <!-- Language configuration -->\n  <PropertyGroup>\n    <!-- default to allowing all language features -->\n    <LangVersion>preview</LangVersion>\n    <!-- default to max warnlevel -->\n    <AnalysisLevel Condition=\"'$(MSBuildProjectExtension)' == '.csproj'\">preview</AnalysisLevel>\n    <LangVersion Condition=\"'$(MSBuildProjectExtension)' == '.vbproj'\">latest</LangVersion>\n    <!-- Enables Strict mode for Roslyn compiler -->\n    <Features>strict;nullablePublicOnly</Features>\n    <TreatWarningsAsErrors Condition=\"'$(TreatWarningsAsErrors)' == ''\">true</TreatWarningsAsErrors>\n    <!-- Only upgrade NuGetAudit warnings to errors for official builds. -->\n    <WarningsNotAsErrors Condition=\"'$(OfficialBuild)' != 'true' OR '$(NuGetAuditWarnNotError)' == 'true'\">$(WarningsNotAsErrors);NU1901;NU1902;NU1903;NU1904</WarningsNotAsErrors>\n    <!-- Warnings to always disable -->\n    <NoWarn>$(NoWarn);CS8500;CS8969</NoWarn>\n    <!-- Suppress \"CS1591 - Missing XML comment for publicly visible type or member\" compiler errors for private assemblies. -->\n    <NoWarn Condition=\"'$(IsPrivateAssembly)' == 'true'\">$(NoWarn);CS1591</NoWarn>\n    <!-- Always pass portable to override arcade sdk which uses embedded for local builds -->\n    <DebugType>portable</DebugType>\n    <KeepNativeSymbols Condition=\"'$(KeepNativeSymbols)' == '' and '$(DotNetBuildSourceOnly)' == 'true'\">true</KeepNativeSymbols>\n    <KeepNativeSymbols Condition=\"'$(KeepNativeSymbols)' == ''\">false</KeepNativeSymbols>\n    <!-- Used for launchSettings.json and runtime config files. -->\n    <AppDesignerFolder>Properties</AppDesignerFolder>\n    <!-- By default the SDK produces ref assembly for 5.0 or later -->\n    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n  </PropertyGroup>\n\n  <!-- Define test projects and companions -->\n  <PropertyGroup Condition=\"$(MSBuildProjectFullPath.Contains('$([System.IO.Path]::DirectorySeparatorChar)tests$([System.IO.Path]::DirectorySeparatorChar)'))\">\n    <IsTestProject Condition=\"$(MSBuildProjectName.EndsWith('.UnitTests')) or $(MSBuildProjectName.EndsWith('.Tests'))\">true</IsTestProject>\n    <IsTrimmingTestProject Condition=\"$(MSBuildProjectName.EndsWith('.TrimmingTests'))\">true</IsTrimmingTestProject>\n    <IsTestSupportProject Condition=\"'$(IsTestProject)' != 'true' and '$(IsTrimmingTestProject)' != 'true'\">true</IsTestSupportProject>\n\n    <!-- Treat test assemblies as non-shipping (do not publish or sign them). -->\n    <IsShipping Condition=\"'$(IsTestProject)' == 'true' or '$(IsTestSupportProject)' == 'true' or '$(IsTrimmingTestProject)' == 'true'\">false</IsShipping>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <!-- Treat as a generator project if either the parent or the parent parent directory is named gen. -->\n    <IsGeneratorProject Condition=\"$([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)')) == 'gen' or\n                                   $([System.IO.Path]::GetFileName('$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)\\..'))')) == 'gen'\">true</IsGeneratorProject>\n    <IsSourceProject Condition=\"'$(IsSourceProject)' == '' and\n                                '$(IsReferenceAssemblyProject)' != 'true' and\n                                '$(IsGeneratorProject)' != 'true' and\n                                '$(IsTestProject)' != 'true' and\n                                '$(IsTrimmingTestProject)' != 'true' and\n                                '$(IsTestSupportProject)' != 'true' and\n                                '$(UsingMicrosoftDotNetSharedFrameworkSdk)' != 'true' and\n                                '$(MSBuildProjectExtension)' != '.pkgproj' and\n                                '$(UsingMicrosoftNoTargetsSdk)' != 'true' and\n                                '$(UsingMicrosoftTraversalSdk)' != 'true'\">true</IsSourceProject>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"'$(IsReferenceAssemblyProject)' == 'true'\">\n    <!-- Reference assemblies are special and don't initialize fields or have empty finalizers, etc. -->\n    <RunAnalyzers>false</RunAnalyzers>\n    <!-- disable warnings about unused fields -->\n    <NoWarn>$(NoWarn);CS0169;CS0649;CS8618</NoWarn>\n    <!-- disable CS8597 because we throw null on reference assemblies. -->\n    <NoWarn>$(NoWarn);CS8597</NoWarn>\n    <!-- We base calls from constructors with null literals. -->\n    <NoWarn>$(NoWarn);CS8625</NoWarn>\n    <!-- We dont need to add null annotation within the ref for explicit interface methods. -->\n    <NoWarn>$(NoWarn);CS8617</NoWarn>\n    <!-- No symbols are produced for ref assemblies, but some parts of the SDK still expect pdbs, so we explicitly tell it there are none. -->\n    <!-- Must be set after importing Arcade to override its defaults. -->\n    <DebugType>none</DebugType>\n    <!-- Don't try to publish PDBs for ref assemblies that have none. -->\n    <PublishWindowsPdb>false</PublishWindowsPdb>\n  </PropertyGroup>\n\n\n  <!-- All reference assemblies should have a ReferenceAssemblyAttribute and the 0x70 flag which prevents them from loading. -->\n  <ItemGroup Condition=\"'$(IsReferenceAssemblyProject)' == 'true'\">\n    <AssemblyAttribute Include=\"System.Runtime.CompilerServices.ReferenceAssemblyAttribute\" />\n    <AssemblyAttribute Include=\"System.Reflection.AssemblyFlags\">\n      <_Parameter1>(System.Reflection.AssemblyNameFlags)0x70</_Parameter1>\n      <_Parameter1_IsLiteral>true</_Parameter1_IsLiteral>\n    </AssemblyAttribute>\n  </ItemGroup>\n\n  <PropertyGroup Condition=\"'$(IsSourceProject)' == 'true'\">\n    <!-- Must be defined in a props file as imports in Microsoft.DotNet.ApiCompat.Task.targets depend on it. -->\n    <ApiCompatValidateAssemblies>true</ApiCompatValidateAssemblies>\n  </PropertyGroup>\n\n  <PropertyGroup Condition=\"'$(IsGeneratorProject)' == 'true'\">\n    <!-- Unique assembly versions increases(3x) the compiler throughput during reference package updates. -->\n    <AutoGenerateAssemblyVersion>true</AutoGenerateAssemblyVersion>\n    <!-- To suppress warnings about resetting the assembly version.-->\n    <AssemblyVersion />\n    <!-- Enforce extended rules around API usages in analyzers and generators to ensure our generators follow best practices. -->\n    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>\n  </PropertyGroup>\n\n  <!-- Warnings that should be disabled in our test projects. -->\n  <PropertyGroup Condition=\"'$(IsTestProject)' == 'true' or '$(IsTestSupportProject)' == 'true' or '$(IsTrimmingTestProject)' == 'true'\">\n    <!-- we need to re-enable BinaryFormatter within test projects since some tests exercise these code paths to ensure compat -->\n    <EnableUnsafeBinaryFormatterSerialization>true</EnableUnsafeBinaryFormatterSerialization>\n    <!-- For DotNetBuildSourceOnly, only the bundled BinaryFormatter is built which does not support serialization. -->\n    <EnableUnsafeBinaryFormatterSerialization Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">false</EnableUnsafeBinaryFormatterSerialization>\n    <!-- don't warn on usage of BinaryFormatter or legacy serialization infrastructure from test projects -->\n    <NoWarn>$(NoWarn);SYSLIB0011;SYSLIB0050;SYSLIB0051</NoWarn>\n    <!-- don't warn about unnecessary trim warning suppressions. can be removed with preview 6. -->\n    <NoWarn>$(NoWarn);IL2121</NoWarn>\n    <!-- allow nullable annotated files to be incorporated into tests without warning -->\n    <Nullable Condition=\"'$(Nullable)' == '' and '$(Language)' == 'C#'\">annotations</Nullable>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <CustomBeforeNoTargets>$(RepositoryEngineeringDir)NoTargetsSdk.BeforeTargets.targets</CustomBeforeNoTargets>\n    <CustomAfterTraversalTargets>$(RepositoryEngineeringDir)TraversalSdk.AfterTargets.targets</CustomAfterTraversalTargets>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <!-- Keep in sync with outputs defined in Microsoft.NETCore.Platforms.csproj. -->\n    <BundledRuntimeIdentifierGraphFile>$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'Microsoft.NETCore.Platforms', 'runtime.json'))</BundledRuntimeIdentifierGraphFile>\n    <BundledRuntimeIdentifierGraphFile Condition=\"!Exists('$(BundledRuntimeIdentifierGraphFile)')\">$([MSBuild]::NormalizePath('$(LibrariesProjectRoot)', 'Microsoft.NETCore.Platforms', 'src', 'runtime.json'))</BundledRuntimeIdentifierGraphFile>\n  </PropertyGroup>\n\n</Project>\n"
        },
        {
          "name": "Directory.Build.rsp",
          "type": "blob",
          "size": 0.08984375,
          "content": "# disable terminal logger for now: https://github.com/dotnet/runtime/issues/97211\n-tl:false\n"
        },
        {
          "name": "Directory.Build.targets",
          "type": "blob",
          "size": 13.36328125,
          "content": "<Project InitialTargets=\"ValidateTargetOSLowercase\">\n  <PropertyGroup>\n    <!--\n    For non-SDK projects that import this file and then import Microsoft.Common.targets,\n    tell Microsoft.Common.targets not to import Directory.Build.targets again\n    -->\n    <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>\n  </PropertyGroup>\n\n  <Import Project=\"$(RepositoryEngineeringDir)Analyzers.targets\" />\n  <Import Project=\"Sdk.targets\" Sdk=\"Microsoft.DotNet.Arcade.Sdk\" />\n  <Import Project=\"$(RepositoryEngineeringDir)liveBuilds.targets\" />\n  <Import Project=\"$(RepositoryEngineeringDir)toolAot.targets\" />\n  <Import Project=\"$(RepositoryEngineeringDir)generators.targets\" />\n  <Import Project=\"$(RepositoryEngineeringDir)python.targets\" />\n  <Import Project=\"$(RepositoryEngineeringDir)generatorProjects.targets\" Condition=\"'$(IsGeneratorProject)' == 'true'\" />\n  <Import Project=\"$(RepositoryEngineeringDir)resolveContract.targets\" Condition=\"'$(IsSourceProject)' == 'true'\" />\n  <Import Project=\"$(RepositoryEngineeringDir)packaging.targets\" Condition=\"'$(IsPackable)' == 'true' and '$(MSBuildProjectExtension)' != '.pkgproj'\" />\n  <Import Project=\"$(RepositoryEngineeringDir)slngen.targets\" Condition=\"'$(IsSlnGen)' == 'true'\" />\n\n  <!--\n  When .NET gets built from source, make the SDK aware there are bootstrap packages\n  for Microsoft.NETCore.App.Runtime.<rid> and Microsoft.NETCore.App.Crossgen2.<rid>.\n  -->\n  <ItemGroup Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">\n    <KnownFrameworkReference Update=\"Microsoft.NETCore.App\">\n      <RuntimePackRuntimeIdentifiers\n        Condition=\"'%(TargetFramework)' == '$(NetCoreAppCurrent)'\">%(RuntimePackRuntimeIdentifiers);$(PackageRID)</RuntimePackRuntimeIdentifiers>\n    </KnownFrameworkReference>\n    <KnownCrossgen2Pack Update=\"Microsoft.NETCore.App.Crossgen2\">\n      <Crossgen2RuntimeIdentifiers\n        Condition=\"'%(TargetFramework)' == '$(NetCoreAppCurrent)'\" >%(Crossgen2RuntimeIdentifiers);$(PackageRID)</Crossgen2RuntimeIdentifiers>\n    </KnownCrossgen2Pack>\n    <!-- Avoid references to Microsoft.AspNetCore.App.Runtime.<rid> -->\n    <KnownFrameworkReference Remove=\"Microsoft.AspNetCore.App\" />\n  </ItemGroup>\n\n  <PropertyGroup>\n    <!--\n      Define this here (not just in Versions.props) because the SDK resets it\n      unconditionally in Microsoft.NETCoreSdk.BundledVersions.props.\n    -->\n    <NETCoreAppMaximumVersion>$(NetCoreAppCurrentVersion)</NETCoreAppMaximumVersion>\n    <UnsupportedTargetFrameworkVersion>$([MSBuild]::Add('$(NETCoreAppMaximumVersion.Split('.')[0])', '1')).0</UnsupportedTargetFrameworkVersion>\n    <!-- SDK sets product to assembly but we want it to be our product name -->\n    <Product>Microsoft%AE .NET</Product>\n    <!-- Use the .NET product branding version for informational version description -->\n    <InformationalVersion Condition=\"'$(InformationalVersion)' == '' and '$(VersionSuffix)' == ''\">$(ProductVersion)</InformationalVersion>\n    <InformationalVersion Condition=\"'$(InformationalVersion)' == '' and '$(PreReleaseVersionLabel)' == 'servicing'\">$(ProductVersion)</InformationalVersion>\n    <InformationalVersion Condition=\"'$(InformationalVersion)' == '' and '$(VersionSuffix)' != ''\">$(ProductVersion)-$(VersionSuffix)</InformationalVersion>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <SupportedNETCoreAppTargetFramework Include=\".NETCoreApp,Version=v$(NETCoreAppMaximumVersion)\" DisplayName=\".NET $(NETCoreAppMaximumVersion)\" Alias=\"net$(NETCoreAppMaximumVersion)\" />\n  </ItemGroup>\n\n  <!-- The Default behavior in VS is to show files for the first target framework in TargetFrameworks property.\n       This is required to show all the files corresponding to all target frameworks in VS. -->\n  <ItemGroup Condition=\"'$(DefaultLanguageSourceExtension)' != '' and\n                        ('$(BuildingInsideVisualStudio)' == 'true' or '$(DesignTimeBuild)' == 'true')\">\n    <None Include=\"$(MSBuildProjectDirectory)\\**\\*$(DefaultLanguageSourceExtension)\"\n          Exclude=\"$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Compile)\" />\n  </ItemGroup>\n\n  <!-- Packaging -->\n  <ItemGroup Condition=\"'$(IsPackable)' == 'true'\">\n    <!-- The sfxproj files add the license themselves. -->\n    <None Include=\"$(LicenseFile)\"\n          PackagePath=\"$([System.IO.Path]::GetFileName('$(LicenseFile)'))\"\n          Pack=\"true\"\n          Condition=\"'$(MSBuildProjectExtension)' != '.sfxproj' and '$(MSBuildProjectFile)' != 'msi.csproj'\" />\n    <None Include=\"$(PackageThirdPartyNoticesFile)\"\n          PackagePath=\"$([System.IO.Path]::GetFileName('$(PackageThirdPartyNoticesFile)'))\"\n          Pack=\"true\" />\n  </ItemGroup>\n\n  <PropertyGroup>\n    <PackageDescription Condition=\"'$(PackageDescription)' == '' and '$(Description)' != ''\">$(Description)</PackageDescription>\n    <RuntimePackageDisclaimer>Internal implementation package not meant for direct consumption. Please do not reference directly.</RuntimePackageDisclaimer>\n    <UseRuntimePackageDisclaimer Condition=\"'$(UseRuntimePackageDisclaimer)' == '' and\n                                            ($(MSBuildProjectName.StartsWith('runtime.native')) or '$(PackageTargetRuntime)' != '')\">true</UseRuntimePackageDisclaimer>\n    <PackageDescription Condition=\"'$(PackageDescription)' != '' and '$(UseRuntimePackageDisclaimer)' == 'true'\">$(RuntimePackageDisclaimer) %0A$(PackageDescription)</PackageDescription>\n    <PackageDescription Condition=\"'$(PackageDescription)' == '' and '$(UseRuntimePackageDisclaimer)' == 'true'\">$(RuntimePackageDisclaimer)</PackageDescription>\n    <!-- Keep in sync as required by the Packaging SDK in Arcade. -->\n    <Description>$(PackageDescription)</Description>\n    <!-- Until we update the TFM to match the Major version, we need to patch in support for RequiresPreviewFeatures -->\n    <GenerateRequiresPreviewFeaturesAttribute Condition=\"'$(TargetFrameworkMoniker)' == '$(NetCoreAppCurrentTargetFrameworkMoniker)'\">true</GenerateRequiresPreviewFeaturesAttribute>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <!-- when building from source we need to use the current version of various packages as the toolset version, but source-build imports\n         another props file which overrides the versions from Version.props so we can't set it there -->\n    <SystemReflectionMetadataLoadContextToolsetVersion Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">$(SystemReflectionMetadataLoadContextVersion)</SystemReflectionMetadataLoadContextToolsetVersion>\n    <SystemTextJsonToolsetVersion Condition=\"'$(DotNetBuildSourceOnly)' == 'true'\">$(SystemTextJsonVersion)</SystemTextJsonToolsetVersion>\n  </PropertyGroup>\n\n  <Target Name=\"ValidateTargetOSLowercase\"\n          Condition=\"!$(TargetOS.Equals($(TargetOS.ToLower()), StringComparison.InvariantCulture))\">\n    <Error Text=\"The passed-in TargetOS property value '$(TargetOS)' must be lowercase.\" />\n  </Target>\n\n  <Target Name=\"ValidateReferenceAssemblyProjectTargetFramework\"\n          BeforeTargets=\"CoreCompile\"\n          Condition=\"'$(IsReferenceAssemblyProject)' == 'true' and\n                     '$(SkipValidateReferenceAssemblyProjectReferences)' != 'true'\">\n    <Error Text=\"Reference assemblies must be TargetPlatform agnostic. $(MSBuildProjectName) incorrectly targets $(TargetFramework), platform: $(TargetPlatformIdentifier).\"\n           Condition=\"'$(TargetPlatformIdentifier)' != ''\" />\n  </Target>\n\n  <!-- For experimental ref assemblies (which typically have the same name as a regular ref\n       assembly), bump their minor file version by 100 to make it distinguishable from the regular\n       ref assembly. -->\n  <Target Name=\"UpdateExperimentalRefAssemblyFileVersion\"\n          AfterTargets=\"_InitializeAssemblyVersion\"\n\t        Condition=\"'$(IsReferenceAssemblyProject)' == 'true' and '$(IsExperimentalRefAssembly)' == 'true'\">\n    <PropertyGroup>\n      <_FileVersionMaj>$(FileVersion.Split('.')[0])</_FileVersionMaj>\n      <_FileVersionMin>$(FileVersion.Split('.')[1])</_FileVersionMin>\n      <_FileVersionBld>$(FileVersion.Split('.')[2])</_FileVersionBld>\n      <_FileVersionRev>$(FileVersion.Split('.')[3])</_FileVersionRev>\n      <FileVersion>$(_FileVersionMaj).$([MSBuild]::Add($(_FileVersionMin), 100)).$(_FileVersionBld).$(_FileVersionRev)</FileVersion>\n    </PropertyGroup>\n  </Target>\n\n  <!-- Allows building against source assemblies when the 'SkipUseReferenceAssembly' attribute is present on ProjectReference items. -->\n  <Target Name=\"HandleReferenceAssemblyAttributeForProjectReferences\"\n          AfterTargets=\"ResolveProjectReferences\"\n          BeforeTargets=\"FindReferenceAssembliesForReferences\"\n          Condition=\"'@(ProjectReference)' != '' and '@(_ResolvedProjectReferencePaths)' != ''\">\n    <!-- If we have a ProjectReference to CoreLib, we need to compile against implementation assemblies,\n         and ignore architecture mismatches in those implementation assemblies. -->\n    <PropertyGroup Condition=\"@(_ResolvedProjectReferencePaths->AnyHaveMetadataValue('MSBuildSourceProjectFile', '$(CoreLibProject)'))\">\n      <CompileUsingReferenceAssemblies Condition=\"'$(CompileUsingReferenceAssemblies)' == ''\">false</CompileUsingReferenceAssemblies>\n      <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>\n    </PropertyGroup>\n\n    <!-- Clear the ReferenceAssembly attribute on resolved P2Ps that set SkipUseReferenceAssembly to true. -->\n    <ItemGroup>\n      <_ResolvedProjectReferencePaths Condition=\"'%(_ResolvedProjectReferencePaths.SkipUseReferenceAssembly)' == 'true'\"\n                                      ReferenceAssembly=\"\" />\n    </ItemGroup>\n  </Target>\n\n  <!-- Filter out transitive P2Ps which should be excluded. -->\n  <Target Name=\"FilterTransitiveProjectReferences\"\n          AfterTargets=\"IncludeTransitiveProjectReferences\"\n          Condition=\"'$(DisableTransitiveProjectReferences)' != 'true' and\n                     ('@(DefaultReferenceExclusion)' != '' or '@(ProjectReferenceExclusion)' != '')\">\n    <ItemGroup>\n      <_transitiveProjectReferenceWithProjectName Include=\"@(ProjectReference->Metadata('NuGetPackageId'))\"\n                                                  OriginalIdentity=\"%(Identity)\" />\n      <_transitiveIncludedProjectReferenceWithProjectName Include=\"@(_transitiveProjectReferenceWithProjectName)\"\n                                                          Exclude=\"@(DefaultReferenceExclusion);@(ProjectReferenceExclusion)\" />\n      <_transitiveExcludedProjectReferenceWithProjectName Include=\"@(_transitiveProjectReferenceWithProjectName)\"\n                                                          Exclude=\"@(_transitiveIncludedProjectReferenceWithProjectName)\" />\n      <ProjectReference Remove=\"@(_transitiveExcludedProjectReferenceWithProjectName->Metadata('OriginalIdentity'))\" />\n    </ItemGroup>\n  </Target>\n\n  <!-- Filter out conflicting implicit assembly references. -->\n  <Target Name=\"FilterImplicitAssemblyReferences\"\n          Condition=\"'$(DisableImplicitFrameworkReferences)' != 'true'\"\n          DependsOnTargets=\"ResolveProjectReferences\"\n          AfterTargets=\"ResolveTargetingPackAssets\">\n    <ItemGroup>\n      <_targetingPackReferenceExclusion Include=\"$(TargetName)\" />\n      <_targetingPackReferenceExclusionProjects Include=\"@(_ResolvedProjectReferencePaths->Metadata('Filename'))\" />\n      <_targetingPackReferenceExclusion Include=\"@(DefaultReferenceExclusion)\" />\n    </ItemGroup>\n\n    <!-- Filter out shims from the targeting pack references as an opt-in. -->\n    <ItemGroup Condition=\"'$(TargetFrameworkIdentifier)' == '.NETCoreApp' and\n                          '$(SkipTargetingPackShimReferences)' == 'true'\">\n      <_targetingPackReferenceExclusion Include=\"@(NetFxReference)\" />\n      <_targetingPackReferenceExclusion Include=\"netstandard\" />\n    </ItemGroup>\n\n    <ItemGroup>\n      <_targetingPackReferenceWithProjectName Include=\"@(Reference->WithMetadataValue('ExternallyResolved', 'true')->Metadata('Filename'))\"\n                                              OriginalIdentity=\"%(Identity)\" />\n      <_targetingPackIncludedReferenceWithProjectName Include=\"@(_targetingPackReferenceWithProjectName)\"\n                                                      Exclude=\"@(_targetingPackReferenceExclusion);@(_targetingPackReferenceExclusionProjects->WithMetadataValue('ReferenceOutputAssembly', 'true'))\" />\n      <_targetingPackExcludedReferenceWithProjectName Include=\"@(_targetingPackReferenceWithProjectName)\"\n                                                      Exclude=\"@(_targetingPackIncludedReferenceWithProjectName)\" />\n      <Reference Remove=\"@(_targetingPackExcludedReferenceWithProjectName->Metadata('OriginalIdentity'))\" />\n    </ItemGroup>\n\n    <ItemGroup>\n      <_targetingPackAnalyzerReferenceWithProjectName Include=\"@(Analyzer->WithMetadataValue('ExternallyResolved', 'true')->Metadata('Filename'))\"\n                                                      OriginalIdentity=\"%(Identity)\" />\n      <_targetingPackIncludedAnalyzerReferenceWithProjectName Include=\"@(_targetingPackAnalyzerReferenceWithProjectName)\"\n                                                              Exclude=\"@(_targetingPackReferenceExclusion);@(_targetingPackReferenceExclusionProjects->WithMetadataValue('OutputItemType', 'Analyzer'))\" />\n      <_targetingPackExcludedAnalyzerReferenceWithProjectName Include=\"@(_targetingPackAnalyzerReferenceWithProjectName)\"\n                                                              Exclude=\"@(_targetingPackIncludedAnalyzerReferenceWithProjectName)\" />\n      <Analyzer Remove=\"@(_targetingPackExcludedAnalyzerReferenceWithProjectName->Metadata('OriginalIdentity'))\" />\n    </ItemGroup>\n  </Target>\n</Project>\n"
        },
        {
          "name": "Directory.Solution.props",
          "type": "blob",
          "size": 0.228515625,
          "content": "<Project>\n  <PropertyGroup>\n    <!-- For solution restore, msbuild doesn't honor the property set in Directory.Build.props. -->\n    <RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>\n  </PropertyGroup>\n</Project>\n"
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 1.08984375,
          "content": "The MIT License (MIT)\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NuGet.config",
          "type": "blob",
          "size": 1.6220703125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <!-- Don't use any higher level config files.\n       Our builds need to be isolated from user/machine state -->\n  <fallbackPackageFolders>\n    <clear />\n  </fallbackPackageFolders>\n  <packageSources>\n    <clear />\n    <!--\n      'src/test/PrepareTestAssets/PrepareTestAssets.proj' generates a NuGet.config file using this\n      one as a template. The following line is a marker to insert the test restore sources.\n    -->\n    <!-- TEST_RESTORE_SOURCES_INSERTION_LINE -->\n    <add key=\"dotnet-public\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\" />\n    <add key=\"dotnet-tools\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\" />\n    <add key=\"dotnet-eng\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json\" />\n    <add key=\"dotnet-libraries\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json\" />\n    <add key=\"dotnet-libraries-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries-transport/nuget/v3/index.json\" />\n    <add key=\"dotnet10\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet10/nuget/v3/index.json\" />\n    <add key=\"dotnet10-transport\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet10-transport/nuget/v3/index.json\" />\n  </packageSources>\n  <auditSources>\n    <clear />\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\n  </auditSources>\n  <disabledPackageSources>\n    <clear />\n  </disabledPackageSources>\n</configuration>\n"
        },
        {
          "name": "PATENTS.TXT",
          "type": "blob",
          "size": 2.5234375,
          "content": "﻿Microsoft Patent Promise for .NET Libraries and Runtime Components \n\nMicrosoft Corporation and its affiliates (\"Microsoft\") promise not to assert \nany .NET Patents against you for making, using, selling, offering for sale, \nimporting, or distributing Covered Code, as part of either a .NET Runtime or \nas part of any application designed to run on a .NET Runtime. \n\nIf you file, maintain, or voluntarily participate in any claim in a lawsuit \nalleging direct or contributory patent infringement by any Covered Code, or \ninducement of patent infringement by any Covered Code, then your rights under \nthis promise will automatically terminate. \n\nThis promise is not an assurance that (i) any .NET Patents are valid or \nenforceable, or (ii) Covered Code does not infringe patents or other \nintellectual property rights of any third party. No rights except those \nexpressly stated in this promise are granted, waived, or received by \nMicrosoft, whether by implication, exhaustion, estoppel, or otherwise. \nThis is a personal promise directly from Microsoft to you, and you agree as a \ncondition of benefiting from it that no Microsoft rights are received from \nsuppliers, distributors, or otherwise from any other person in connection with \nthis promise. \n\nDefinitions: \n\n\"Covered Code\" means those Microsoft .NET libraries and runtime components as \nmade available by Microsoft at https://github.com/dotnet/runtime.\n\n\".NET Patents\" are those patent claims, both currently owned by Microsoft and \nacquired in the future, that are necessarily infringed by Covered Code. .NET \nPatents do not include any patent claims that are infringed by any Enabling \nTechnology, that are infringed only as a consequence of modification of \nCovered Code, or that are infringed only by the combination of Covered Code \nwith third party code. \n\n\".NET Runtime\" means any compliant implementation in software of (a) all of \nthe required parts of the mandatory provisions of Standard ECMA-335 – Common \nLanguage Infrastructure (CLI); and (b) if implemented, any additional \nfunctionality in Microsoft's .NET Framework, as described in Microsoft's API \ndocumentation on its MSDN website. For example, .NET Runtimes include \nMicrosoft's .NET Framework and those portions of the Mono Project compliant \nwith (a) and (b). \n\n\"Enabling Technology\" means underlying or enabling technology that may be \nused, combined, or distributed in connection with Microsoft's .NET Framework \nor other .NET Runtimes, such as hardware, operating systems, and applications \nthat run on .NET Framework or other .NET Runtimes. \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8525390625,
          "content": "# .NET Runtime\n\n[![Build Status](https://dev.azure.com/dnceng-public/public/_apis/build/status/dotnet/runtime/runtime?branchName=main)](https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=129&branchName=main)\n[![Help Wanted](https://img.shields.io/github/issues/dotnet/runtime/help%20wanted?style=flat-square&color=%232EA043&label=help%20wanted)](https://github.com/dotnet/runtime/labels/help%20wanted)\n[![Good First Issue](https://img.shields.io/github/issues/dotnet/runtime/good%20first%20issue?style=flat-square&color=%232EA043&label=good%20first%20issue)](https://github.com/dotnet/runtime/labels/good%20first%20issue)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dotnet/runtime)\n[![Discord](https://img.shields.io/discord/732297728826277939?style=flat-square&label=Discord&logo=discord&logoColor=white&color=7289DA)](https://aka.ms/dotnet-discord)\n\n* [What is .NET?](#what-is-net)\n* [How can I contribute?](#how-can-i-contribute)\n* [Reporting security issues and security bugs](#reporting-security-issues-and-security-bugs)\n* [Filing issues](#filing-issues)\n* [Useful Links](#useful-links)\n* [.NET Foundation](#net-foundation)\n* [License](#license)\n\nThis repo contains the code to build the .NET runtime, libraries and shared host (`dotnet`) installers for\nall supported platforms, as well as the sources to .NET runtime and libraries.\n\n## What is .NET?\n\nOfficial Starting Page: <https://dotnet.microsoft.com>\n\n* [How to use .NET](https://learn.microsoft.com/dotnet/core/get-started) (with VS, VS Code, command-line CLI)\n  * [Install official releases](https://dotnet.microsoft.com/download)\n  * [Documentation](https://learn.microsoft.com/dotnet/core) (Get Started, Tutorials, Porting from .NET Framework, API reference, ...)\n    * [Deploying apps](https://learn.microsoft.com/dotnet/core/deploying)\n* [Support](https://github.com/dotnet/core/blob/main/support.md) (Releases, OS Versions, ...)\n* [Roadmap](https://github.com/dotnet/core/blob/main/roadmap.md)\n\n## How can I contribute?\n\nWe welcome contributions! Many people all over the world have helped make this project better.\n\n* [Contributing](CONTRIBUTING.md) explains what kinds of contributions we welcome\n* [Workflow Instructions](docs/workflow/README.md) explains how to build and test\n* [Dogfooding .NET](docs/project/dogfooding.md) explains how to get nightly builds of the runtime and its libraries to test them in your own projects.\n\n## Reporting security issues and security bugs\n\nSecurity issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) <secure@microsoft.com>. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the [Security TechCenter](https://www.microsoft.com/msrc/faqs-report-an-issue). You can also find these instructions in this repo's [Security doc](SECURITY.md).\n\nAlso see info about related [Microsoft .NET Bounty Program](https://www.microsoft.com/msrc/bounty-dot-net-core).\n\n## Filing issues\n\nThis repo should contain issues that are tied to the runtime, the class libraries and frameworks, the installation of the `dotnet` binary (sometimes known as the `muxer`) and the installation of the .NET runtime and libraries.\n\nFor other issues, please file them to their appropriate sibling repos. We have links to many of them on [our new issue page](https://github.com/dotnet/runtime/issues/new/choose).\n\n## Useful Links\n\n* [.NET source index](https://source.dot.net) / [.NET Framework source index](https://referencesource.microsoft.com)\n* [API Reference docs](https://learn.microsoft.com/dotnet/api)\n* [.NET API Catalog](https://apisof.net) (incl. APIs from daily builds and API usage info)\n* [API docs writing guidelines](https://github.com/dotnet/dotnet-api-docs/wiki) - useful when writing /// comments\n* [.NET Discord Server](https://aka.ms/dotnet-discord) - a place to discuss the development of .NET and its ecosystem\n\n## .NET Foundation\n\n.NET Runtime is a [.NET Foundation](https://www.dotnetfoundation.org/projects) project.\n\nThere are many .NET related projects on GitHub.\n\n* [.NET home repo](https://github.com/Microsoft/dotnet) - links to 100s of .NET projects, from Microsoft and the community.\n* [ASP.NET Core home](https://learn.microsoft.com/aspnet/core) - the best place to start learning about ASP.NET Core.\n\nThis project has adopted the code of conduct defined by the [Contributor Covenant](https://contributor-covenant.org) to clarify expected behavior in our community. For more information, see the [.NET Foundation Code of Conduct](https://www.dotnetfoundation.org/code-of-conduct).\n\nGeneral .NET OSS discussions: [.NET Foundation Discussions](https://github.com/dotnet-foundation/Home/discussions)\n\n## License\n\n.NET (including the runtime repo) is licensed under the [MIT](LICENSE.TXT) license.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.017578125,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe .NET Core and ASP.NET Core support policy, including supported versions can be found at the [.NET Core Support Policy Page](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\n\n## Reporting a Vulnerability\n\nSecurity issues and bugs should be reported privately to the Microsoft Security Response Center (MSRC), either by emailing secure@microsoft.com or via the portal at https://msrc.microsoft.com.\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your\noriginal message. Further information, including the MSRC PGP key, can be found in the [MSRC Report an Issue FAQ](https://www.microsoft.com/en-us/msrc/faqs-report-an-issue).\n\nReports via MSRC may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\n\nPlease do not open issues for anything you think might have a security implication.\n"
        },
        {
          "name": "THIRD-PARTY-NOTICES.TXT",
          "type": "blob",
          "size": 72.50390625,
          "content": ".NET Runtime uses third-party libraries or other resources that may be\ndistributed under licenses different than the .NET Runtime software.\n\nIn the event that we accidentally failed to list a required notice, please\nbring it to our attention. Post an issue or email us:\n\n           dotnet@microsoft.com\n\nThe attached notices are provided for information only.\n\nLicense notice for ASP.NET\n-------------------------------\n\nCopyright (c) .NET Foundation. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\nAvailable at\nhttps://github.com/dotnet/aspnetcore/blob/main/LICENSE.txt\n\nLicense notice for Slicing-by-8\n-------------------------------\n\nhttp://sourceforge.net/projects/slicing-by-8/\n\nCopyright (c) 2004-2006 Intel Corporation - All Rights Reserved\n\n\nThis software program is licensed subject to the BSD License,  available at\nhttp://www.opensource.org/licenses/bsd-license.html.\n\n\nLicense notice for Unicode data\n-------------------------------\n\nhttps://www.unicode.org/license.html\n\nCopyright © 1991-2022 Unicode, Inc. All rights reserved.\nDistributed under the Terms of Use in https://www.unicode.org/copyright.html.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Unicode data files and any associated documentation\n(the \"Data Files\") or Unicode software and any associated documentation\n(the \"Software\") to deal in the Data Files or Software\nwithout restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, and/or sell copies of\nthe Data Files or Software, and to permit persons to whom the Data Files\nor Software are furnished to do so, provided that either\n(a) this copyright and permission notice appear with all copies\nof the Data Files or Software, or\n(b) this copyright and permission notice appear in associated\nDocumentation.\n\nTHE DATA FILES AND SOFTWARE ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT OF THIRD PARTY RIGHTS.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS\nNOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL\nDAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\nDATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THE DATA FILES OR SOFTWARE.\n\nExcept as contained in this notice, the name of a copyright holder\nshall not be used in advertising or otherwise to promote the sale,\nuse or other dealings in these Data Files or Software without prior\nwritten authorization of the copyright holder.\n\nLicense notice for zlib-ng\n-----------------------\n\nhttps://github.com/zlib-ng/zlib-ng/blob/d54e3769be0c522015b784eca2af258b1c026107/LICENSE.md\n\n(C) 1995-2024 Jean-loup Gailly and Mark Adler\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n\nLicense notice for LinuxTracepoints\n-----------------------------------\n\nhttps://github.com/microsoft/LinuxTracepoints/blob/main/LICENSE\n\nCopyright (c) Microsoft Corporation.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n\nLicense notice for Mono\n-------------------------------\n\nhttp://www.mono-project.com/docs/about-mono/\n\nCopyright (c) .NET Foundation Contributors\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software  and associated documentation files (the Software), to deal\nin the Software without restriction,  including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense,  and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so,  subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for International Organization for Standardization\n-----------------------------------------------------------------\n\nPortions (C) International Organization for Standardization 1986:\n     Permission to copy in any form is granted for use with\n     conforming SGML systems and applications as defined in\n     ISO 8879, provided this notice is included in all copies.\n\nLicense notice for Intel\n------------------------\n\n\"Copyright (c) 2004-2006 Intel Corporation - All Rights Reserved\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for Xamarin and Novell\n-------------------------------------\n\nCopyright (c) 2015 Xamarin, Inc (http://www.xamarin.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nCopyright (c) 2011 Novell, Inc (http://www.novell.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nThird party notice for W3C\n--------------------------\n\n\"W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE\nStatus: This license takes effect 13 May, 2015.\nThis work is being provided by the copyright holders under the following license.\nLicense\nBy obtaining and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions.\nPermission to copy, modify, and distribute this work, with or without modification, for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the work or portions thereof, including modifications:\nThe full text of this NOTICE in a location viewable to users of the redistributed or derivative work.\nAny pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, the W3C Software and Document Short Notice should be included.\nNotice of any changes or modifications, through a copyright statement on the new code or document such as \"This software or document includes material copied from or derived from [title and URI of the W3C document]. Copyright © [YEAR] W3C® (MIT, ERCIM, Keio, Beihang).\"\nDisclaimers\nTHIS WORK IS PROVIDED \"AS IS,\" AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENT WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENT.\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the work without specific, written prior permission. Title to copyright in this work will at all times remain with copyright holders.\"\n\nLicense notice for Bit Twiddling Hacks\n--------------------------------------\n\nBit Twiddling Hacks\n\nBy Sean Eron Anderson\nseander@cs.stanford.edu\n\nIndividually, the code snippets here are in the public domain (unless otherwise\nnoted) — feel free to use them however you please. The aggregate collection and\ndescriptions are © 1997-2005 Sean Eron Anderson. The code and descriptions are\ndistributed in the hope that they will be useful, but WITHOUT ANY WARRANTY and\nwithout even the implied warranty of merchantability or fitness for a particular\npurpose.\n\nLicense notice for Brotli\n--------------------------------------\n\nCopyright (c) 2009, 2010, 2013-2016 by the Brotli Authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\ncompress_fragment.c:\nCopyright (c) 2011, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"\"AS IS\"\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndecode_fuzzer.c:\nCopyright (c) 2015 The Chromium Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"\"AS IS\"\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\n\nLicense notice for Json.NET\n-------------------------------\n\nhttps://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md\n\nThe MIT License (MIT)\n\nCopyright (c) 2007 James Newton-King\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for vectorized base64 encoding / decoding\n--------------------------------------------------------\n\nCopyright (c) 2005-2007, Nick Galbreath\nCopyright (c) 2013-2017, Alfred Klomp\nCopyright (c) 2015-2017, Wojciech Mula\nCopyright (c) 2016-2017, Matthieu Darbois\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for vectorized hex parsing\n--------------------------------------------------------\n\nCopyright (c) 2022, Geoff Langdale\nCopyright (c) 2022, Wojciech Mula\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for RFC 3492\n---------------------------\n\nThe punycode implementation is based on the sample code in RFC 3492\n\nCopyright (C) The Internet Society (2003).  All Rights Reserved.\n\nThis document and translations of it may be copied and furnished to\nothers, and derivative works that comment on or otherwise explain it\nor assist in its implementation may be prepared, copied, published\nand distributed, in whole or in part, without restriction of any\nkind, provided that the above copyright notice and this paragraph are\nincluded on all such copies and derivative works.  However, this\ndocument itself may not be modified in any way, such as by removing\nthe copyright notice or references to the Internet Society or other\nInternet organizations, except as needed for the purpose of\ndeveloping Internet standards in which case the procedures for\ncopyrights defined in the Internet Standards process must be\nfollowed, or as required to translate it into languages other than\nEnglish.\n\nThe limited permissions granted above are perpetual and will not be\nrevoked by the Internet Society or its successors or assigns.\n\nThis document and the information contained herein is provided on an\n\"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\nTASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION\nHEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\nMERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\nCopyright(C) The Internet Society 1997. All Rights Reserved.\n\nThis document and translations of it may be copied and furnished to others,\nand derivative works that comment on or otherwise explain it or assist in\nits implementation may be prepared, copied, published and distributed, in\nwhole or in part, without restriction of any kind, provided that the above\ncopyright notice and this paragraph are included on all such copies and\nderivative works.However, this document itself may not be modified in any\nway, such as by removing the copyright notice or references to the Internet\nSociety or other Internet organizations, except as needed for the purpose of\ndeveloping Internet standards in which case the procedures for copyrights\ndefined in the Internet Standards process must be followed, or as required\nto translate it into languages other than English.\n\nThe limited permissions granted above are perpetual and will not be revoked\nby the Internet Society or its successors or assigns.\n\nThis document and the information contained herein is provided on an \"AS IS\"\nbasis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE\nDISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\nANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY\nRIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A\nPARTICULAR PURPOSE.\n\nLicense notice for Algorithm from RFC 4122 -\nA Universally Unique IDentifier (UUID) URN Namespace\n----------------------------------------------------\n\nCopyright (c) 1990- 1993, 1996 Open Software Foundation, Inc.\nCopyright (c) 1989 by Hewlett-Packard Company, Palo Alto, Ca. &\nDigital Equipment Corporation, Maynard, Mass.\nCopyright (c) 1998 Microsoft.\nTo anyone who acknowledges that this file is provided \"AS IS\"\nwithout any express or implied warranty: permission to use, copy,\nmodify, and distribute this file for any purpose is hereby\ngranted without fee, provided that the above copyright notices and\nthis notice appears in all source code copies, and that none of\nthe names of Open Software Foundation, Inc., Hewlett-Packard\nCompany, Microsoft, or Digital Equipment Corporation be used in\nadvertising or publicity pertaining to distribution of the software\nwithout specific, written prior permission. Neither Open Software\nFoundation, Inc., Hewlett-Packard Company, Microsoft, nor Digital\nEquipment Corporation makes any representations about the\nsuitability of this software for any purpose.\"\n\nLicense notice for The LLVM Compiler Infrastructure\n---------------------------------------------------\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\nLicense notice for Bob Jenkins\n------------------------------\n\nBy Bob Jenkins, 1996.  bob_jenkins@burtleburtle.net.  You may use this\ncode any way you wish, private, educational, or commercial.  It's free.\n\nLicense notice for Greg Parker\n------------------------------\n\nGreg Parker     gparker@cs.stanford.edu     December 2000\nThis code is in the public domain and may be copied or modified without\npermission.\n\nLicense notice for libunwind based code\n----------------------------------------\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for Printing Floating-Point Numbers (Dragon4)\n------------------------------------------------------------\n\n/******************************************************************************\n  Copyright (c) 2014 Ryan Juckett\n  http://www.ryanjuckett.com/\n\n  This software is provided 'as-is', without any express or implied\n  warranty. In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n\n  3. This notice may not be removed or altered from any source\n     distribution.\n******************************************************************************/\n\nLicense notice for Printing Floating-point Numbers (Grisu3)\n-----------------------------------------------------------\n\nCopyright 2012 the V8 project authors. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of Google Inc. nor the names of its\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for xxHash\n-------------------------\n\nxxHash - Extremely Fast Hash algorithm\nHeader File\nCopyright (C) 2012-2021 Yann Collet\n\nBSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\n     copyright notice, this list of conditions and the following disclaimer\n     in the documentation and/or other materials provided with the\n     distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nYou can contact the author at:\n  - xxHash homepage: https://www.xxhash.com\n  - xxHash source repository: https://github.com/Cyan4973/xxHash\n\nLicense notice for Berkeley SoftFloat Release 3e\n------------------------------------------------\n\nhttps://github.com/ucb-bar/berkeley-softfloat-3\nhttps://github.com/ucb-bar/berkeley-softfloat-3/blob/master/COPYING.txt\n\nLicense for Berkeley SoftFloat Release 3e\n\nJohn R. Hauser\n2018 January 20\n\nThe following applies to the whole of SoftFloat Release 3e as well as to\neach source file individually.\n\nCopyright 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018 The Regents of the\nUniversity of California.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n    this list of conditions, and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions, and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n 3. Neither the name of the University nor the names of its contributors\n    may be used to endorse or promote products derived from this software\n    without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \"AS IS\", AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE\nDISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for xoshiro RNGs\n--------------------------------\n\nWritten in 2018 by David Blackman and Sebastiano Vigna (vigna@acm.org)\n\nTo the extent possible under law, the author has dedicated all copyright\nand related and neighboring rights to this software to the public domain\nworldwide. This software is distributed without any warranty.\n\nSee <http://creativecommons.org/publicdomain/zero/1.0/>.\n\nLicense for fastmod (https://github.com/lemire/fastmod), ibm-fpgen (https://github.com/nigeltao/parse-number-fxx-test-data) and fastrange (https://github.com/lemire/fastrange)\n--------------------------------------\n\n   Copyright 2018 Daniel Lemire\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\nLicense for sse4-strstr (https://github.com/WojciechMula/sse4-strstr)\n--------------------------------------\n\n   Copyright (c) 2008-2016, Wojciech Mula\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions are\n   met:\n\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n   IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n   TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n   PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n   HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for The C++ REST SDK\n-----------------------------------\n\nC++ REST SDK\n\nThe MIT License (MIT)\n\nCopyright (c) Microsoft Corporation\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense notice for MessagePack-CSharp\n-------------------------------------\n\nMessagePack for C#\n\nMIT License\n\nCopyright (c) 2017 Yoshifumi Kawai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense notice for lz4net\n-------------------------------------\n\nlz4net\n\nCopyright (c) 2013-2017, Milosz Krajewski\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for Nerdbank.Streams\n-----------------------------------\n\nThe MIT License (MIT)\n\nCopyright (c) Andrew Arnott\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense notice for RapidJSON\n----------------------------\n\nTencent is pleased to support the open source community by making RapidJSON available.\n\nCopyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved.\n\nLicensed under the MIT License (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://opensource.org/licenses/MIT\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n\nLicense notice for DirectX Math Library\n---------------------------------------\n\nhttps://github.com/microsoft/DirectXMath/blob/master/LICENSE\n\n                               The MIT License (MIT)\n\nCopyright (c) 2011-2020 Microsoft Corp\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be included in all copies\nor substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for ldap4net\n---------------------------\n\nThe MIT License (MIT)\n\nCopyright (c) 2018 Alexander Chermyanin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for vectorized sorting code\n------------------------------------------\n\nMIT License\n\nCopyright (c) 2020 Dan Shechter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense notice for musl\n-----------------------\n\nmusl as a whole is licensed under the following standard MIT license:\n\nCopyright © 2005-2020 Rich Felker, et al.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nLicense notice for \"Faster Unsigned Division by Constants\"\n------------------------------\n\nReference implementations of computing and using the \"magic number\" approach to dividing\nby constants, including codegen instructions. The unsigned division incorporates the\n\"round down\" optimization per ridiculous_fish.\n\nThis is free and unencumbered software. Any copyright is dedicated to the Public Domain.\n\n\nLicense notice for mimalloc\n-----------------------------------\n\nMIT License\n\nCopyright (c) 2019 Microsoft Corporation, Daan Leijen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense for remote stack unwind (https://github.com/llvm/llvm-project/blob/main/lldb/source/Symbol/CompactUnwindInfo.cpp)\n--------------------------------------\n\nCopyright 2019 LLVM Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\") with LLVM Exceptions;\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttps://llvm.org/LICENSE.txt\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nLicense notice for Apple header files\n-------------------------------------\n\nCopyright (c) 1980, 1986, 1993\n   The Regents of the University of California.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\n   This product includes software developed by the University of\n   California, Berkeley and its contributors.\n4. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nLicense notice for JavaScript queues\n-------------------------------------\n\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER.\n\nStatement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following:\nthe right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;\nmoral rights retained by the original author(s) and/or performer(s);\npublicity and privacy rights pertaining to a person's image or likeness depicted in a Work;\nrights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;\nrights protecting the extraction, dissemination, use and reuse of data in a Work;\ndatabase rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and\nother similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.\n2. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.\n3. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.\n4. Limitations and Disclaimers.\na. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.\nb. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\nc. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.\nd. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.\n\n\nLicense notice for FastFloat algorithm\n-------------------------------------\nMIT License\nCopyright (c) 2021 csFastFloat authors\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nLicense notice for MsQuic\n--------------------------------------\n\nCopyright (c) Microsoft Corporation.\nLicensed under the MIT License.\n\nAvailable at\nhttps://github.com/microsoft/msquic/blob/main/LICENSE\n\nLicense notice for m-ou-se/floatconv\n-------------------------------\n\nCopyright (c) 2020 Mara Bos <m-ou.se@m-ou.se>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for code from The Practice of Programming\n-------------------------------\n\nCopyright (C) 1999 Lucent Technologies\n\nExcerpted from 'The Practice of Programming\nby Brian W. Kernighan and Rob Pike\n\nYou may use this code for any purpose, as long as you leave the copyright notice and book citation attached.\n\nNotice for Euclidean Affine Functions and Applications to Calendar\nAlgorithms\n-------------------------------\n\nAspects of Date/Time processing based on algorithm described in \"Euclidean Affine Functions and Applications to Calendar\nAlgorithms\", Cassio Neri and Lorenz Schneider. https://arxiv.org/pdf/2102.06959.pdf\n\nLicense notice for amd/aocl-libm-ose\n-------------------------------\n\nCopyright (C) 2008-2020 Advanced Micro Devices, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software without\n   specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\nOR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\nLicense notice for fmtlib/fmt\n-------------------------------\n\nFormatting library for C++\n\nCopyright (c) 2012 - present, Victor Zverovich\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense for Jb Evain\n---------------------\n\nCopyright (c) 2006 Jb Evain (jbevain@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n--- Optional exception to the license ---\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into a machine-executable object form of such\nsource code, you may redistribute such embedded portions in such object form\nwithout including the above copyright and permission notices.\n\n\nLicense for MurmurHash3\n--------------------------------------\n\nhttps://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp\n\nMurmurHash3 was written by Austin Appleby, and is placed in the public\ndomain. The author hereby disclaims copyright to this source\n\nLicense for Fast CRC Computation\n--------------------------------------\n\nhttps://github.com/intel/isa-l/blob/33a2d9484595c2d6516c920ce39a694c144ddf69/crc/crc32_ieee_by4.asm\nhttps://github.com/intel/isa-l/blob/33a2d9484595c2d6516c920ce39a694c144ddf69/crc/crc64_ecma_norm_by8.asm\n\nCopyright(c) 2011-2015 Intel Corporation All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n  * Neither the name of Intel Corporation nor the names of its\n    contributors may be used to endorse or promote products derived\n    from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nLicense for C# Implementation of Fast CRC Computation\n-----------------------------------------------------\n\nhttps://github.com/SixLabors/ImageSharp/blob/f4f689ce67ecbcc35cebddba5aacb603e6d1068a/src/ImageSharp/Formats/Png/Zlib/Crc32.cs\n\nCopyright (c) Six Labors.\nLicensed under the Apache License, Version 2.0.\n\nAvailable at\nhttps://github.com/SixLabors/ImageSharp/blob/f4f689ce67ecbcc35cebddba5aacb603e6d1068a/LICENSE\n\nLicense for the Teddy multi-substring searching implementation\n--------------------------------------\n\nhttps://github.com/BurntSushi/aho-corasick\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Andrew Gallant\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\nLicense notice for Avx512Vbmi base64 encoding / decoding\n--------------------------------------------------------\n\nCopyright (c) 2015-2018, Wojciech Muła\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------\n\nAspects of base64 encoding / decoding are based on algorithm described in \"Base64 encoding and decoding at almost the speed of a memory\ncopy\", Wojciech Muła and Daniel Lemire. https://arxiv.org/pdf/1910.05109.pdf\n\nLicense for FormatJS Intl.Segmenter grapheme segmentation algorithm\n--------------------------------------------------------------------------\nAvailable at https://github.com/formatjs/formatjs/blob/58d6a7b398d776ca3d2726d72ae1573b65cc3bef/packages/intl-segmenter/LICENSE.md\n\nMIT License\n\nCopyright (c) 2022 FormatJS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense for SharpFuzz and related samples\n--------------------------------------\n\nhttps://github.com/Metalnem/sharpfuzz\nhttps://github.com/Metalnem/dotnet-fuzzers\nhttps://github.com/Metalnem/libfuzzer-dotnet\n\nMIT License\n\nCopyright (c) 2018 Nemanja Mijailovic\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 0.2001953125,
          "content": "@echo off\nsetlocal\n\nset _args=%*\nif \"%~1\"==\"-?\" set _args=-help\nif \"%~1\"==\"/?\" set _args=-help\n\npowershell -ExecutionPolicy ByPass -NoProfile -Command \"& '%~dp0eng\\build.ps1'\" %_args%\nexit /b %ERRORLEVEL%\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.8330078125,
          "content": "#!/usr/bin/env bash\n\nsource=\"${BASH_SOURCE[0]}\"\n\nfunction is_cygwin_or_mingw()\n{\n  case $(uname -s) in\n    CYGWIN*)    return 0;;\n    MINGW*)     return 0;;\n    *)          return 1;;\n  esac\n}\n\n# resolve $SOURCE until the file is no longer a symlink\nwhile [[ -h $source ]]; do\n  scriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n  source=\"$(readlink \"$source\")\"\n\n  # if $source was a relative symlink, we need to resolve it relative to the path where the\n  # symlink file was located\n  [[ $source != /* ]] && source=\"$scriptroot/$source\"\ndone\n\nscriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n\nif is_cygwin_or_mingw; then\n  # if bash shell running on Windows (not WSL),\n  # pass control to powershell build script.\n  scriptroot=$(cygpath -d \"$scriptroot\")\n  powershell -c \"$scriptroot\\\\build.cmd\" $@\nelse\n  \"$scriptroot/eng/build.sh\" $@\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dotnet.cmd",
          "type": "blob",
          "size": 0.759765625,
          "content": "@echo off\n\npowershell -ExecutionPolicy ByPass -NoProfile -Command \"& { . '%~dp0eng\\common\\tools.ps1'; InitializeDotNetCli $true $true }\"\n\nif NOT [%ERRORLEVEL%] == [0] (\n  echo Failed to install or invoke dotnet... 1>&2\n  exit /b %ERRORLEVEL%\n)\n\nset /p dotnetPath=<%~dp0artifacts\\toolset\\sdk.txt\n\n:: Clear the 'Platform' env variable for this session, as it's a per-project setting within the build, and\n:: misleading value (such as 'MCD' in HP PCs) may lead to build breakage (issue: #69).\nset Platform=\n\n:: Don't resolve runtime, shared framework, or SDK from other locations to ensure build determinism\nset DOTNET_MULTILEVEL_LOOKUP=0\n\n:: Disable first run since we want to control all package sources\nset DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1\n\ncall \"%dotnetPath%\\dotnet.exe\" %*\n"
        },
        {
          "name": "dotnet.sh",
          "type": "blob",
          "size": 0.8466796875,
          "content": "#!/usr/bin/env bash\n\nsource=\"${BASH_SOURCE[0]}\"\n# resolve $SOURCE until the file is no longer a symlink\nwhile [[ -h $source ]]; do\n  scriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n  source=\"$(readlink \"$source\")\"\n\n  # if $source was a relative symlink, we need to resolve it relative to the path where the\n  # symlink file was located\n  [[ $source != /* ]] && source=\"$scriptroot/$source\"\ndone\nscriptroot=\"$( cd -P \"$( dirname \"$source\" )\" && pwd )\"\n\n# Don't resolve runtime, shared framework, or SDK from other locations to ensure build determinism\nexport DOTNET_MULTILEVEL_LOOKUP=0\n\n# Disable first run since we want to control all package sources\nexport DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1\n\nsource $scriptroot/eng/common/tools.sh\n\nInitializeDotNetCli true # Install\n__dotnetDir=${_InitializeDotNetCli}\n\ndotnetPath=${__dotnetDir}/dotnet\n${dotnetPath} \"$@\"\n"
        },
        {
          "name": "eng",
          "type": "tree",
          "content": null
        },
        {
          "name": "github-merge-flow.jsonc",
          "type": "blob",
          "size": 1.140625,
          "content": "// IMPORTANT: This file is read by the merge flow from main branch only. \n{\n    \"merge-flow-configurations\": {\n        // Automate merging runtime release/6.0 branch into release/6.0-staging\n        \"release/6.0\":{\n            \"MergeToBranch\": \"release/6.0-staging\",\n            \"ExtraSwitches\": \"-QuietComments\"\n        },\n        // Automate merging runtime release/8.0 branch into release/8.0-staging\n        \"release/8.0\":{\n            \"MergeToBranch\": \"release/8.0-staging\",\n            \"ExtraSwitches\": \"-QuietComments\"\n        },\n        // Automate merging runtime release/8.0-rc branches back to release/8.0\n        \"release/8.0-rc\":{\n            \"MergeToBranch\": \"release/8.0\",\n            \"ExtraSwitches\": \"-QuietComments\"\n        },\n        // Automate merging runtime release/9.0-rc1 branch back to release/9.0\n        \"release/9.0-rc1\":{\n            \"MergeToBranch\": \"release/9.0\",\n            \"ExtraSwitches\": \"-QuietComments\"\n        },\n        // Automate merging runtime release/9.0-rc2 branch back to release/9.0\n        \"release/9.0-rc2\":{\n            \"MergeToBranch\": \"release/9.0\",\n            \"ExtraSwitches\": \"-QuietComments\"\n        }\n    }\n}\n"
        },
        {
          "name": "global.json",
          "type": "blob",
          "size": 0.509765625,
          "content": "{\n  \"sdk\": {\n    \"version\": \"10.0.100-alpha.1.24610.7\",\n    \"allowPrerelease\": true,\n    \"rollForward\": \"major\"\n  },\n  \"tools\": {\n    \"dotnet\": \"10.0.100-alpha.1.24610.7\"\n  },\n  \"msbuild-sdks\": {\n    \"Microsoft.DotNet.Arcade.Sdk\": \"10.0.0-beta.25058.4\",\n    \"Microsoft.DotNet.Helix.Sdk\": \"10.0.0-beta.25058.4\",\n    \"Microsoft.DotNet.SharedFramework.Sdk\": \"10.0.0-beta.25058.4\",\n    \"Microsoft.Build.NoTargets\": \"3.7.0\",\n    \"Microsoft.Build.Traversal\": \"3.4.0\",\n    \"Microsoft.NET.Sdk.IL\": \"10.0.0-alpha.1.25057.24\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}