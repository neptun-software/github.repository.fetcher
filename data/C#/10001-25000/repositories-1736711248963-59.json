{
  "metadata": {
    "timestamp": 1736711248963,
    "page": 59,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "QuantConnect/Lean",
      "stars": 10258,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "packages/*\n.git/*\n.github/*\n.vs/*\n.nuget/*\nTests/*"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1669921875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\n\n[*.{js,yml,json,config,csproj}]\nindent_size = 2\n\n[*.sh]\nend_of_line = lf"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.5126953125,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n\n#these files are used in linux, so use just LF\n*.sh lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.763671875,
          "content": "# OS Files\n.DS_Store\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n*.pyc\n\n# Visual Studio Project Items:\n*.suo\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n#*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*/bin/*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# QC Cloud Setup Bash Files\n*.sh\n# Include docker launch scripts for Mac/Linux\n!run_docker.sh\n!research/run_docker_notebook.sh\n\n# QC Config Files:\n# config.json\n\n# QC-C-Specific\n*Engine/bin/Debug/cache/data/*.zip\n*/obj/*\n*/bin/*\n*Data/*\n*Docker/*\n*/Docker/*\n*Algorithm.Python/Lib/*\n*/[Ee]xtensions/*\n!**/Libraries/*\n\n# C Debug Binaries\n*.pdb\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n.vs/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# JetBrains Rider\n.idea/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings \n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\n!LocalPackages/*\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# If using the old MSBuild-Integrated Package Restore, uncomment this:\n#!**/packages/repositories.config\n# ignore sln level nuget\n.nuget/\n!.nuget/NuGet.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\nbower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Test Runner\ntestrunner/\n\n# Meld original diff files\n*.orig\n\n# Output chart data\nCharts/\n\n# NCrunch files\n*.ncrunchsolution\n*.ncrunchproject\n\n# QuantConnect plugin files\nQuantConnectProjects.xml\nLauncher/Plugins/*\n/ApiPython/dist\n/ApiPython/quantconnect.egg-info\n/ApiPython/quantconnect.egg-info/*\n\nQuantConnect.Lean.sln.DotSettings*\n\n#User notebook files\nResearch/Notebooks\n\n#Docker result files\nResults/"
        },
        {
          "name": ".nuget",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.0068359375,
          "content": "language: csharp\nmono: none\ndotnet: 5.0\nos: linux\ndist: focal\nbefore_install:\n  - export PATH=\"$HOME/miniconda3/bin:$PATH\"\n  - export PYTHONNET_PYDLL=\"$HOME/miniconda3/lib/libpython3.6m.so\"\n  - wget -q https://cdn.quantconnect.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh\n  - bash Miniconda3-4.5.12-Linux-x86_64.sh -b\n  - rm -rf Miniconda3-4.5.12-Linux-x86_64.sh\n  - sudo ln -s $HOME/miniconda3/lib/libpython3.6m.so /usr/lib/libpython3.6m.so\n  - conda update -y python conda pip\n  - conda install -y python=3.6.8\n  - conda install -y numpy=1.18.1\n  - conda install -y pandas=0.25.3\n  - conda install -y cython=0.29.15\n  - conda install -y scipy=1.4.1\n  - conda install -y wrapt=1.12.1\nscript:\n  - dotnet nuget add source $TRAVIS_BUILD_DIR/LocalPackages\n  - dotnet build /p:Configuration=Release /v:quiet /p:WarningLevel=1 QuantConnect.Lean.sln\n  - dotnet test ./Tests/bin/Release/QuantConnect.Tests.dll --filter TestCategory!=TravisExclude -- TestRunParameters.Parameter\\(name=\\\"log-handler\\\", value=\\\"ConsoleErrorLogHandler\\\"\\)"
        },
        {
          "name": ".vs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Algorithm.CSharp",
          "type": "tree",
          "content": null
        },
        {
          "name": "Algorithm.Framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "Algorithm.Python",
          "type": "tree",
          "content": null
        },
        {
          "name": "Algorithm",
          "type": "tree",
          "content": null
        },
        {
          "name": "AlgorithmFactory",
          "type": "tree",
          "content": null
        },
        {
          "name": "Api",
          "type": "tree",
          "content": null
        },
        {
          "name": "Brokerages",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.5126953125,
          "content": "# Contributor's Guide\n\nWelcome and thank you for your interest in contributing to the QuantConnect Lean open source project.  This document aims to describe the preferred workflow contributors should follow when contributing new source code to the project. This Git workflow is inspired greatly by the [irON-Parsers Contributors Guide](https://github.com/structureddynamics/irON-Parsers/wiki/Collaboration%3A-git-development-workflow).\n\n# Contributing\n\n## Who is a Collaborator?\n\nA collaborator is someone with write access to the QuantConnect Lean repository. Collaborators merge pull requests from contributors.\n\n## Who is a Contributor?\n\nA contributor can be anyone! It could be you. Continue reading this section if you wish to get involved and contribute back to the QuantConnect Lean open source project!\n\n## Code Style and Testing\n\nCode reviewers will be expecting to see code that follows Microsoft's C# guidelines. There are a few resources available [here](https://msdn.microsoft.com/en-us/library/czefa0ke(VS.71).aspx) and [here](https://msdn.microsoft.com/en-us/library/ff926074.aspx).\n\nAs a point of consistency, we use soft tabs of four spaces to ensure files render correctly in everyone's environment/diff tools.\n\nAll pull requests must be accompanied by units tests. If it is a new feature, the tests should highlight expected use cases as well as edge cases, if applicable. If it is a bugfix, there should be tests that expose the bug in question.\n\n## Guidelines for Framework Modules Contributions\n\nContributions of [Algorithm Framework](https://www.quantconnect.com/docs/algorithm-framework/overview) Modules needs to follow certain extra patterns, since QuantConnect users can use them in their algorithms.\n\nGenerally modules should do one focused, specific role well. For example, combining risk control logic with [notifications](https://www.quantconnect.com/docs/live-trading/notifications) or placing orders outside execution models violates the general programming rule 'separation of concerns'. Keep each module doing one specific task and if you want to consider additional functionality add event handlers that users can bind to from their Algorithm instance.\n\nBy default production code should be silent unless there is a fatal exception. Because of this, [logging or debugging](https://www.quantconnect.com/docs/algorithm-reference/logging-and-debug) is not allowed inside LEAN framework modules. Additional [charting](https://www.quantconnect.com/docs/algorithm-reference/charting) inside the module consumes the resources and should not be included in a module as well.\n\n## Initial Setup\n\n* Setup a [GitHub](https://github.com/) account\n* [Fork](https://help.github.com/articles/fork-a-repo/) the [repository](https://github.com/QuantConnect/Lean) of the project\n* Clone your fork locally\n\n```bash\n$ git clone https://github.com/username/Lean.git\n```\n\n* Navigate to the QuantConnect Lean directory and add the upstream remote\n\n```bash\n$ cd Lean\n$ git remote add upstream https://github.com/QuantConnect/Lean.git\n```\n\nThe remote upstream branch links your fork of Lean with our master copy, so when you perform a `git pull --rebase` you'll be getting updates from our repository.\n\n## Keeping your master up-to-date!\nNow that you've defined the `remote upstream branch`, you can refresh your local copy of master with the following commands:\n\n```bash\n$ git checkout master\n$ git pull --rebase\n```\n\nThis will checkout your local master branch and then merge changes in from the remote upstream branch. We use [rebase](https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase) to reduce noise from merge commits.\n\n# Branching Model\n\nIf unfamiliar with git branches, please read this [short guide on branches](https://www.atlassian.com/git/tutorials/using-branches/).\n\nThe following names will be used to differentiate between the different repositories:\n\n* **upstream** - The 'official' QuantConnect Lean [repository](https://github.com/QuantConnect/Lean.git) (what is on QuantConnect's GitHub account)\n* **origin** - Your fork of the official repository on GitHub (what is on your GitHub account)\n* **local** - This will be your local clone of **origin** (what is on your computer)\n\nAs a **contributor** you will push your completed **local** topic branch to **origin**. As a **contributor** you will pull your updates from **upstream**. As a **collaborator** (write-access) you will merge branches from **contributors** into **upstream**.\n\n## Primary Branch\n\nThe upstream repository holds a single primary branch that we maintain:\n\n* **upstream/master** - This is the where main development takes place\n\n## Topic Branches\n\nTopic branches are for contributors to develop bug fixes and new features so that they can be easily merged to **master**. They must follow a few simple rules for consistency:\n\n* Must branch off from **master**\n* Must be merged back into **master**\n* Consider using the GitHub issue number in the branch name\n\nTopic branches should exist in your **local** and **origin** repositories only. Submitting a pull request will request a merge from your topic branch to our **upstream/master** branch.\n\n## Working on topic branches\n\nFirst create a new branch for the work you'd like to perform. When naming your branch, please use the following convention: `bug-<issue#>-<description>` or `feature-<issue#>-<description>`:\n\n```bash\n$ git checkout -b bug-123-short-issue-description\nSwitched to a new branch 'bug-123-short-issue-description'\n```\n\nNow perform some work and commit changes. Always review your changes before committing\n\n```bash\n$ git status\n$ git diff\n$ git add --all\n$ git commit\n```\n\nYou can push your changes to your fork's master branch using:\n\n```bash\n$ git push origin master\n```\n\nWhen committing, be sure to follow [best practices](https://github.com/erlang/otp/wiki/Writing-good-commit-messages) writing good commit descriptions.\n\nAfter performing some work you'll want to merge in changes from the **upstream/master**. You can use the following two commands in order to assist upstream merging:\n\n```bash\n$ git fetch upstream\n$ git rebase upstream/master bug-123-short-issue-description\n```\n\nThe `git fetch upstream` command will download the **upstream** repository to your computer but not merge it. The `rebase upstream/master bug-123-short-issue-description` command will [rebase](https://www.atlassian.com/git/tutorials/rewriting-history/git-commit--amend) your changes on top of **upstream/master**. This will make the review process easier for **collaborators**.\n\n> CAUTION Please note that once you have pushed your branch remotely you MUST NOT rebase!\n\nIf you need to merge changes in after pushing your branch to **origin**, use the following:\n\n```bash\n$ git pull upstream/master\n```\n\nWhen topic branches are finished and ready for review, they should be pushed back to **origin**.\n\n```bash\n$ git push origin bug-123-short-issue-description\nTo git@github.com:username/Lean.git\n    * [new branch]       bug-123-short-issue-description -> bug-123-short-issue-description\n```\n\nNow you're ready to send a [pull request](https://help.github.com/articles/using-pull-requests/) from this branch to **upstream/master** and update the GitHub issue tracker to let a collaborator know that your branch is ready to be reviewed and merged.  If extra changes are required as part of the review process, make those changes on the topic branch and re-push. First re-checkout the topic branch you made your original changes on:\n\n```bash\n$ git checkout bug-123-short-issue-description\n```\n\nNow make responses to the review comments, commit, and re-push your changes:\n\n```bash\n$ git add --all\n$ git commit\n$ git push\n```\n"
        },
        {
          "name": "Common",
          "type": "tree",
          "content": null
        },
        {
          "name": "Compression",
          "type": "tree",
          "content": null
        },
        {
          "name": "Configuration",
          "type": "tree",
          "content": null
        },
        {
          "name": "Data",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.9765625,
          "content": "#\n#   LEAN Docker Container 20200522\n#   Cross platform deployment for multiple brokerages\n#\n\n# Use base system\nFROM quantconnect/lean:foundation\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n#Install debugpy and PyDevD for remote python debugging\nRUN pip install --no-cache-dir ptvsd==4.3.2 debugpy~=1.6.7 pydevd-pycharm~=231.9225.15\n\n# Install vsdbg for remote C# debugging in Visual Studio and Visual Studio Code\nRUN wget https://aka.ms/getvsdbgsh -O - 2>/dev/null | /bin/sh /dev/stdin -v 17.10.20209.7 -l /root/vsdbg\n\nCOPY ./DataLibraries /Lean/Launcher/bin/Debug/\nCOPY ./Lean/Data/ /Lean/Data/\nCOPY ./Lean/Launcher/bin/Debug/ /Lean/Launcher/bin/Debug/\nCOPY ./Lean/Optimizer.Launcher/bin/Debug/ /Lean/Optimizer.Launcher/bin/Debug/\nCOPY ./Lean/Report/bin/Debug/ /Lean/Report/bin/Debug/\nCOPY ./Lean/DownloaderDataProvider/bin/Debug/ /Lean/DownloaderDataProvider/bin/Debug/\n\n# Can override with '-w'\nWORKDIR /Lean/Launcher/bin/Debug\n\nENTRYPOINT [ \"dotnet\", \"QuantConnect.Lean.Launcher.dll\" ]\n"
        },
        {
          "name": "DockerfileJupyter",
          "type": "blob",
          "size": 2.20703125,
          "content": "#\n#    LEAN Jupyter Docker Container 20190428\n#\n\n# Use base system for cleaning up wayward processes\nARG LEAN_TAG=latest\nFROM quantconnect/lean:$LEAN_TAG\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Install Tini\nRUN if [ \"$(uname -m)\" = \"aarch64\" ]; then \\\n        tini_binary=\"tini-arm64\"; \\\n        tini_sha256=\"07952557df20bfd2a95f9bef198b445e006171969499a1d361bd9e6f8e5e0e81\"; \\\n    else \\\n        tini_binary=\"tini-amd64\"; \\\n        tini_sha256=\"93dcc18adc78c65a028a84799ecf8ad40c936fdfc5f2a57b1acda5a8117fa82c\"; \\\n    fi && \\\n    wget --quiet -O tini \"https://github.com/krallin/tini/releases/download/v0.19.0/${tini_binary}\" && \\\n    echo \"${tini_sha256} *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Install clr-loader for PythonNet\nRUN pip install --no-cache-dir clr-loader==0.1.6\n\n# Setting some environment variables\nENV WORK /Lean/Launcher/bin/Debug/\nENV PYTHONPATH=${WORK}:${PYTHONPATH}\n\n# Link Python startup file to profile\nRUN mkdir -p /root/.ipython/profile_default/startup/ && \\\n    ln -s /Lean/Launcher/bin/Debug/start.py /root/.ipython/profile_default/startup/start.py\n\nRUN find ${WORK} -type f -not -name '*.py*' -not -name '*.xml' -not -name '*.exe.config' -not -name '*.exe' -not -name '*.so' -not -name '*.dll' -not -name '*.ipynb' -not -name '*.csx' -not -name 'QuantConnect.Lean.Launcher.runtimeconfig.json' -not -name 'decimal.py' -delete\n\n# Create initialize script\nRUN echo \"if [ ! -d \\\"${WORK}Notebooks\\\" ]; then mkdir ${WORK}Notebooks; fi && \\\n    if [ ! -f \\\"${WORK}Notebooks/config.json\\\" ]; then echo '{ \\\"data-folder\\\": \\\"/home/Data/\\\", \\\n    \\\"composer-dll-directory\\\": \\\"$WORK\\\", \\\"algorithm-language\\\": \\\"Python\\\", \\\n    \\\"messaging-handler\\\": \\\"QuantConnect.Messaging.Messaging\\\", \\\"job-queue-handler\\\": \\\"QuantConnect.Queues.JobQueue\\\", \\\n    \\\"api-handler\\\": \\\"QuantConnect.Api.Api\\\" }' > ${WORK}Notebooks/config.json; fi && \\\n    echo \\\"Starting JupyterLab, access in your browser at localhost:8888\\\" && \\\n    jupyter lab --ip='0.0.0.0' --port=8888 --no-browser --allow-root --notebook-dir=\\\"Notebooks\\\" --LabApp.token='' \" \\\n    > start.sh\n\nRUN chmod -R 777 ${WORK}\nEXPOSE 8888\nWORKDIR $WORK\n\nENTRYPOINT [ \"/usr/local/bin/tini\", \"--\" ]\nCMD ./start.sh\n"
        },
        {
          "name": "DockerfileLeanFoundation",
          "type": "blob",
          "size": 15.1513671875,
          "content": "#\n#   LEAN Foundation Docker Container\n#   Cross platform deployment for multiple brokerages\n#   Intended to be used in conjunction with Dockerfile. This is just the foundation common OS+Dependencies required.\n#\n\n# Use base system for cleaning up wayward processes\nFROM phusion/baseimage:jammy-1.0.1\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Install OS Packages:\n# Misc tools for running Python.NET and IB inside a headless container.\nRUN apt-get update && apt-get -y install wget curl unzip \\\n   && apt-get install -y git bzip2 zlib1g-dev \\\n   xvfb libxrender1 libxtst6 libxi6 libglib2.0-dev libopenmpi-dev libstdc++6 openmpi-bin \\\n   pandoc libcurl4-openssl-dev libgtk2.0.0 build-essential \\\n   && apt-get clean && apt-get autoclean && apt-get autoremove --purge -y \\\n   && rm -rf /var/lib/apt/lists/*\n\n# Install dotnet sdk & runtime\nRUN add-apt-repository ppa:dotnet/backports && apt-get update && apt-get install -y dotnet-sdk-9.0 && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove --purge -y && rm -rf /var/lib/apt/lists/*\n\n# Set PythonDLL variable for PythonNet\nENV PYTHONNET_PYDLL=\"/opt/miniconda3/lib/libpython3.11.so\"\n\n# Install miniconda\nENV CONDA=\"Miniconda3-py311_24.9.2-0-Linux-x86_64.sh\"\nENV PATH=\"/opt/miniconda3/bin:${PATH}\"\nRUN wget -q https://cdn.quantconnect.com/miniconda/${CONDA} && \\\n    bash ${CONDA} -b -p /opt/miniconda3 && rm -rf ${CONDA} && \\\n    conda config --set solver classic && \\\n    conda config --set auto_update_conda false\n\n# Install java runtime for h2o lib\nRUN wget https://download.oracle.com/java/17/archive/jdk-17.0.12_linux-x64_bin.deb \\\n    && dpkg -i jdk-17.0.12_linux-x64_bin.deb \\\n    && update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-17.0.12-oracle-x64/bin/java 1 \\\n    && rm jdk-17.0.12_linux-x64_bin.deb\n\n# Avoid pip install read timeouts\nENV PIP_DEFAULT_TIMEOUT=120\n\n# Install all packages\nRUN pip install --no-cache-dir      \\\n    cython==3.0.9                   \\\n    pandas==2.1.4                   \\\n    scipy==1.11.4                   \\\n    numpy==1.26.4                   \\\n    wrapt==1.16.0                   \\\n    astropy==7.0.0                  \\\n    beautifulsoup4==4.12.3          \\\n    dill==0.3.8                     \\\n    jsonschema==4.23.0              \\\n    lxml==5.3.0                     \\\n    msgpack==1.1.0                  \\\n    numba==0.59.1                   \\\n    xarray==2024.11.0               \\\n    plotly==5.24.1                  \\\n    jupyterlab==4.3.2               \\\n    ipywidgets==8.1.5               \\\n    jupyterlab-widgets==3.0.13      \\\n    tensorflow==2.18.0              \\\n    docutils==0.21.2                \\\n    cvxopt==1.3.2                   \\\n    gensim==4.3.3                   \\\n    keras==3.7.0                    \\\n    lightgbm==4.5.0                 \\\n    nltk==3.9.1                     \\\n    graphviz==0.20.3                \\\n    cmdstanpy==1.2.4                \\\n    copulae==0.7.9                  \\\n    featuretools==1.31.0            \\\n    PuLP==2.9.0                     \\\n    pymc==5.19.0                    \\\n    rauth==0.7.3                    \\\n    scikit-learn==1.4.2             \\\n    scikit-optimize==0.10.2         \\\n    aesara==2.9.4                   \\\n    tsfresh==0.20.2                 \\\n    tslearn==0.6.3                  \\\n    tweepy==4.14.0                  \\\n    PyWavelets==1.7.0               \\\n    umap-learn==0.5.7               \\\n    fastai==2.7.18                  \\\n    arch==7.2.0                     \\\n    copulas==0.12.0                 \\\n    creme==0.6.1                    \\\n    cufflinks==0.17.3               \\\n    gym==0.26.2                     \\\n    deap==1.4.1                     \\\n    pykalman==0.9.7                 \\\n    cvxpy==1.6.0                    \\\n    pyportfolioopt==1.5.6           \\\n    pmdarima==2.0.4                 \\\n    pyro-ppl==1.9.1                 \\\n    riskparityportfolio==0.6.0      \\\n    sklearn-json==0.1.0             \\\n    statsmodels==0.14.4             \\\n    QuantLib==1.36                  \\\n    xgboost==2.1.3                  \\\n    dtw-python==1.5.3               \\\n    gluonts==0.16.0                 \\\n    gplearn==0.4.2                  \\\n    jax==0.4.35                     \\\n    jaxlib==0.4.35                  \\\n    keras-rl==0.4.2                 \\\n    pennylane==0.39.0               \\\n    PennyLane-Lightning==0.39.0     \\\n    pennylane-qiskit==0.36.0        \\\n    qiskit==1.2.4                   \\\n    neural-tangents==0.6.5          \\\n    mplfinance==0.12.10b0           \\\n    hmmlearn==0.3.3                 \\\n    catboost==1.2.7                 \\\n    fastai2==0.0.30                 \\\n    scikit-tda==1.1.1               \\\n    ta==0.11.0                      \\\n    seaborn==0.13.2                 \\\n    optuna==4.1.0                   \\\n    findiff==0.10.2                 \\\n    sktime==0.26.0                  \\\n    hyperopt==0.2.7                 \\\n    bayesian-optimization==2.0.0    \\\n    pingouin==0.5.5                 \\\n    quantecon==0.7.2                \\\n    matplotlib==3.7.5               \\\n    sdeint==0.3.0                   \\\n    pandas_market_calendars==4.4.2  \\\n    dgl==2.1.0                      \\\n    ruptures==1.1.9                 \\\n    simpy==4.1.1                    \\\n    scikit-learn-extra==0.3.0       \\\n    ray==2.40.0                     \\\n    \"ray[tune]\"==2.40.0             \\\n    \"ray[rllib]\"==2.40.0            \\\n    \"ray[data]\"==2.40.0             \\\n    \"ray[train]\"==2.40.0            \\\n    fastText==0.9.3                 \\\n    h2o==3.46.0.6                   \\\n    prophet==1.1.6                  \\\n    torch==2.5.1                    \\\n    torchvision==0.20.1             \\\n    ax-platform==0.4.3              \\\n    alphalens-reloaded==0.4.5       \\\n    pyfolio-reloaded==0.9.8         \\\n    altair==5.5.0                   \\\n    modin==0.26.1                   \\\n    persim==0.3.7                   \\\n    ripser==0.6.10                  \\\n    pydmd==2024.12.1                \\\n    spacy==3.7.5                    \\\n    pandas-ta==0.3.14b              \\\n    pytorch-ignite==0.5.1           \\\n    tensorly==0.9.0                 \\\n    mlxtend==0.23.3                 \\\n    shap==0.46.0                    \\\n    lime==0.2.0.1                   \\\n    tensorflow-probability==0.25.0  \\\n    mpmath==1.3.0                   \\\n    tensortrade==1.0.3              \\\n    polars==1.16.0                  \\\n    stockstats==0.6.2               \\\n    autokeras==2.0.0                \\\n    QuantStats==0.0.64              \\\n    hurst==0.0.5                    \\\n    numerapi==2.19.1                \\\n    pymdptoolbox==4.0-b3            \\\n    panel==1.5.4                    \\\n    hvplot==0.11.1                  \\\n    line-profiler==4.2.0            \\\n    py-heat==0.0.6                  \\\n    py-heat-magic==0.0.2            \\\n    bokeh==3.6.2                    \\\n    tensorflow-decision-forests==1.11.0 \\\n    river==0.21.0                   \\\n    stumpy==1.13.0                  \\\n    pyvinecopulib==0.6.5            \\\n    ijson==3.3.0                    \\\n    jupyter-resource-usage==1.1.0   \\\n    injector==0.22.0                \\\n    openpyxl==3.1.5                 \\\n    xlrd==2.0.1                     \\\n    mljar-supervised==1.1.9         \\\n    dm-tree==0.1.8                  \\\n    lz4==4.3.3                      \\\n    ortools==9.9.3963               \\\n    py_vollib==1.0.1                \\\n    thundergbm==0.3.17              \\\n    yellowbrick==1.5                \\\n    livelossplot==0.5.5             \\\n    gymnasium==1.0.0                \\\n    interpret==0.6.7                \\\n    DoubleML==0.9.0                 \\\n    jupyter-bokeh==4.0.5            \\\n    imbalanced-learn==0.12.4        \\\n    openai==1.57.0                  \\\n    lazypredict==0.2.14a1           \\\n    darts==0.31.0                   \\\n    fastparquet==2024.11.0          \\\n    tables==3.10.1                  \\\n    dimod==0.12.17                  \\\n    dwave-samplers==1.3.0           \\\n    python-statemachine==2.5.0      \\\n    pymannkendall==1.4.3            \\\n    Pyomo==6.8.2                    \\\n    gpflow==2.9.2                   \\\n    pyarrow==15.0.1                 \\\n    dwave-ocean-sdk==8.0.1          \\\n    chardet==5.2.0                  \\\n    stable-baselines3==2.4.0        \\\n    Shimmy==2.0.0                   \\\n    pystan==3.10.0                  \\\n    FixedEffectModel==0.0.5         \\\n    transformers==4.46.3            \\\n    Rbeast==0.1.23                  \\\n    langchain==0.2.17               \\\n    pomegranate==1.1.1              \\\n    MAPIE==0.9.1                    \\\n    mlforecast==0.15.1              \\\n    tensorrt==10.7.0                \\\n    x-transformers==1.42.24         \\\n    Werkzeug==3.1.3                 \\\n    TPOT==0.12.2                    \\\n    llama-index==0.12.2             \\\n    mlflow==2.18.0                  \\\n    ngboost==0.5.1                  \\\n    pycaret==3.3.2                  \\\n    control==0.10.1                 \\\n    pgmpy==0.1.26                   \\\n    mgarch==0.3.0                   \\\n    jupyter-ai==2.28.2              \\\n    keras-tcn==3.5.0                \\\n    neuralprophet[live]==0.9.0      \\\n    Riskfolio-Lib==6.1.1            \\\n    fuzzy-c-means==1.7.2            \\\n    EMD-signal==1.6.4               \\\n    dask[complete]==2024.9.0        \\\n    nolds==0.6.1                    \\\n    feature-engine==1.6.2           \\\n    pytorch-tabnet==4.1.0           \\\n    opencv-contrib-python-headless==4.10.0.84 \\\n    POT==0.9.5                      \\\n    alibi-detect==0.12.0            \\\n    datasets==2.21.0                \\\n    scikeras==0.13.0                \\\n    accelerate==0.34.2              \\\n    peft==0.13.2                    \\\n    FlagEmbedding==1.2.11           \\\n    contourpy==1.3.1                \\\n    tensorboardX==2.6.2.2           \\\n    scikit-image==0.22.0            \\\n    scs==3.2.7                      \\\n    thinc==8.2.5                    \\\n    cesium==0.12.1                  \\\n    cvxportfolio==1.4.0             \\\n    tsfel==0.1.9                    \\\n    ipympl==0.9.4                   \\\n    PyQt6==6.7.1                    \\\n    nixtla==0.6.4                   \\\n    tigramite==5.2.6.7              \\\n    pytorch-forecasting==1.2.0      \\\n    chronos-forecasting[training]==1.4.1 \\\n    setuptools==73.0.1              \\\n    tinygrad==0.10.0\n\nRUN conda install -c nvidia -y cuda-compiler=12.3.2 && conda clean -y --all\n\nENV CUDA_MODULE_LOADING=LAZY\nENV XLA_FLAGS=--xla_gpu_cuda_data_dir=/opt/miniconda3/\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cublas/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cuda_cupti/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cuda_nvrtc/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cuda_runtime/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cudnn/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cufft/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/curand/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cusolver/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/cusparse/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/nccl/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/nvjitlink/lib/:/opt/miniconda3/lib/python3.11/site-packages/nvidia/nvtx/lib/\n# reduces GPU memory usage\nENV PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True\n\n# required for numba to work correctly\nRUN ln -s /opt/miniconda3/lib/python3.11/site-packages/nvidia/cuda_runtime/lib/libcudart.so.12 /opt/miniconda3/lib/python3.11/site-packages/nvidia/cuda_runtime/lib/libcudart.so\n\n# iisignature requires numpy to be already installed. cupy requires cuda installed\nRUN pip install --no-cache-dir iisignature==0.24 cupy-cuda12x==13.3.0 mamba-ssm[causal-conv1d]==2.2.4\n\n# TF uses this version, pytorch a slightly older (9.1) but cuDNN is backwards compatible\nRUN pip install --no-cache-dir nvidia-cudnn-cu12==9.3.0.75\n\n# Install dwave tool\nRUN dwave install --all -y\n\n# Install 'ipopt' solver for 'Pyomo'\nRUN conda install -c conda-forge -y ipopt==3.14.16 coincbc==2.10.12 openmpi=5.0.6    \\\n    && conda clean -y --all\n\n# Install spacy models\nRUN python -m spacy download en_core_web_md && python -m spacy download en_core_web_sm\n\n# Install PyTorch Geometric\nRUN TORCH=$(python -c \"import torch; print(torch.__version__)\") && \\\n    CUDA=$(python -c \"import torch; print('cu' + torch.version.cuda.replace('.', ''))\") && \\\n    pip install --no-cache-dir -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html \\\n    torch-scatter==2.1.2 torch-sparse==0.6.18 torch-cluster==1.6.3 torch-spline-conv==1.2.2 torch-geometric==2.6.1\n\n# Install nltk data\nRUN python -m nltk.downloader -d /usr/share/nltk_data punkt && \\\n    python -m nltk.downloader -d /usr/share/nltk_data punkt_tab && \\\n    python -m nltk.downloader -d /usr/share/nltk_data vader_lexicon && \\\n    python -m nltk.downloader -d /usr/share/nltk_data stopwords && \\\n    python -m nltk.downloader -d /usr/share/nltk_data wordnet\n\n# Install Pyrb\nRUN wget -q https://cdn.quantconnect.com/pyrb/pyrb-master-250054e.zip && \\\n    unzip -q pyrb-master-250054e.zip && cd pyrb-master && \\\n    pip install . && cd .. && rm -rf pyrb-master && rm pyrb-master-250054e.zip\n\n# Install SSM\nRUN wget -q https://cdn.quantconnect.com/ssm/ssm-master-646e188.zip && \\\n    unzip -q ssm-master-646e188.zip && cd ssm-master && \\\n    pip install . && cd .. && rm -rf ssm-master && rm ssm-master-646e188.zip\n\n# Install TA-lib for python\nRUN wget -q https://cdn.quantconnect.com/ta-lib/ta-lib-0.4.0-src.tar.gz && \\\n    tar -zxvf ta-lib-0.4.0-src.tar.gz && cd ta-lib && \\\n    ./configure --prefix=/usr && make && make install && \\\n    cd .. && rm -rf ta-lib && rm ta-lib-0.4.0-src.tar.gz && \\\n    pip install --no-cache-dir TA-Lib==0.5.1\n\n# chronos-forecasting we manually copy the 'scripts' folder which holds the fine tuning tools\nRUN wget -q https://cdn.quantconnect.com/chronos-forecasting/chronos-forecasting-main-133761a.zip && \\\n    unzip -q chronos-forecasting-main-133761a.zip && cd chronos-forecasting-main && \\\n    cp -r scripts /opt/miniconda3/lib/python3.11/site-packages/chronos/ && \\\n    cd .. && rm -rf chronos-forecasting-main && rm chronos-forecasting-main-133761a.zip\n\nRUN echo \"{\\\"argv\\\":[\\\"python\\\",\\\"-m\\\",\\\"ipykernel_launcher\\\",\\\"-f\\\",\\\"{connection_file}\\\"],\\\"display_name\\\":\\\"Foundation-Py-Default\\\",\\\"language\\\":\\\"python\\\",\\\"metadata\\\":{\\\"debugger\\\":true}}\" > /opt/miniconda3/share/jupyter/kernels/python3/kernel.json\n\n# Install wkhtmltopdf and xvfb to support HTML to PDF conversion of reports\nRUN apt-get update && apt install -y xvfb wkhtmltopdf && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove --purge -y && rm -rf /var/lib/apt/lists/*\n\n# Install fonts for matplotlib\nRUN wget -q https://cdn.quantconnect.com/fonts/foundation.zip && unzip -q foundation.zip && rm foundation.zip \\\n    && mv \"lean fonts/\"* /usr/share/fonts/truetype/ && rm -rf \"lean fonts/\" \"__MACOSX/\"\n\n# Install IB Gateway: Installs to /root/ibgateway\nRUN mkdir -p /root/ibgateway && \\\n    wget -q https://cdn.quantconnect.com/interactive/ibgateway-stable-standalone-linux-x64.v10.19.2a.sh && \\\n    chmod 777 ibgateway-stable-standalone-linux-x64.v10.19.2a.sh && \\\n    ./ibgateway-stable-standalone-linux-x64.v10.19.2a.sh -q -dir /root/ibgateway && \\\n    rm ibgateway-stable-standalone-linux-x64.v10.19.2a.sh\n\n# label definitions\nLABEL strict_python_version=3.11.11\nLABEL python_version=3.11\nLABEL target_framework=net9.0"
        },
        {
          "name": "DockerfileLeanFoundationARM",
          "type": "blob",
          "size": 11.220703125,
          "content": "# This is a version of DockerfileLeanFoundation for ARM\n# Some packages from the AMD image are excluded because they are not available on ARM or take too long to build\n\n# Use base system for cleaning up wayward processes\nFROM phusion/baseimage:jammy-1.0.1\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Install OS Packages:\n# Misc tools for running Python.NET and IB inside a headless container.\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test && apt-get update \\\n    && apt-get install -y git libgtk2.0.0 bzip2 curl unzip wget python3-pip python3-opengl zlib1g-dev \\\n    xvfb libxrender1 libxtst6 libxi6 libglib2.0-dev libopenmpi-dev libstdc++6 openmpi-bin \\\n    r-base pandoc libcurl4-openssl-dev \\\n    openjdk-11-jdk openjdk-11-jre bbe \\\n    && apt-get clean && apt-get autoclean && apt-get autoremove --purge -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install dotnet 9 sdk & runtime\n# The .deb packages don't support ARM, the install script does\nENV PATH=\"/root/.dotnet:${PATH}\"\nRUN wget https://dot.net/v1/dotnet-install.sh && \\\n    chmod 777 dotnet-install.sh && \\\n    ./dotnet-install.sh -c 9.0 && \\\n    rm dotnet-install.sh\nENV DOTNET_ROOT=\"/root/.dotnet\"\n\n# Set PythonDLL variable for PythonNet\nENV PYTHONNET_PYDLL=\"/opt/miniconda3/lib/libpython3.11.so\"\n\n# Install miniconda\nENV CONDA=\"Miniconda3-py311_24.9.2-0-Linux-aarch64.sh\"\nENV PATH=\"/opt/miniconda3/bin:${PATH}\"\nRUN wget -q https://cdn.quantconnect.com/miniconda/${CONDA} && \\\n    bash ${CONDA} -b -p /opt/miniconda3 && rm -rf ${CONDA}\n\n# Install java runtime for h2o lib\nRUN apt-get update && apt-get install -y alien dpkg-dev debhelper build-essential && wget https://download.oracle.com/java/17/archive/jdk-17.0.12_linux-aarch64_bin.rpm \\\n    && alien -i jdk-17.0.12_linux-aarch64_bin.rpm \\\n    && update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-17.0.12-oracle-aarch64/bin/java 1 \\\n    && rm jdk-17.0.12_linux-aarch64_bin.rpm\n\n# Avoid pip install read timeouts\nENV PIP_DEFAULT_TIMEOUT=120\n\n# Install numpy first to avoid it not being resolved when installing libraries that depend on it next\nRUN pip install --no-cache-dir numpy==1.26.4\n\n# Install newer (than provided by ubuntu) cmake required by scikit build process\nRUN conda install -c conda-forge cmake==3.28.4 && conda clean -y --all\n\n# The list of packages in this image is shorter than the list in the AMD images\n# This list only includes packages that can be installed within 2 minutes on ARM\nRUN pip install --no-cache-dir      \\\n    cython==3.0.9                   \\\n    pandas==2.1.4                   \\\n    scipy==1.11.4                   \\\n    numpy==1.26.4                   \\\n    wrapt==1.16.0                   \\\n    astropy==7.0.0                  \\\n    beautifulsoup4==4.12.3          \\\n    dill==0.3.8                     \\\n    jsonschema==4.23.0              \\\n    lxml==5.3.0                     \\\n    msgpack==1.1.0                  \\\n    numba==0.59.1                   \\\n    xarray==2024.11.0               \\\n    plotly==5.24.1                  \\\n    jupyterlab==4.3.2               \\\n    ipywidgets==8.1.5               \\\n    jupyterlab-widgets==3.0.13      \\\n    tensorflow==2.18.0              \\\n    docutils==0.21.2                \\\n    gensim==4.3.3                   \\\n    keras==3.7.0                    \\\n    lightgbm==4.5.0                 \\\n    nltk==3.9.1                     \\\n    graphviz==0.20.3                \\\n    cmdstanpy==1.2.4                \\\n    copulae==0.7.9                  \\\n    featuretools==1.31.0            \\\n    PuLP==2.9.0                     \\\n    pymc==5.19.0                    \\\n    rauth==0.7.3                    \\\n    scikit-learn==1.4.2             \\\n    scikit-optimize==0.10.2         \\\n    aesara==2.9.4                   \\\n    tsfresh==0.20.2                 \\\n    tslearn==0.6.3                  \\\n    tweepy==4.14.0                  \\\n    PyWavelets==1.7.0               \\\n    umap-learn==0.5.7               \\\n    fastai==2.7.18                  \\\n    arch==7.2.0                     \\\n    copulas==0.12.0                 \\\n    cufflinks==0.17.3               \\\n    gym==0.26.2                     \\\n    deap==1.4.1                     \\\n    pykalman==0.9.7                 \\\n    cvxpy==1.6.0                    \\\n    pyro-ppl==1.9.1                 \\\n    sklearn-json==0.1.0             \\\n    dtw-python==1.5.3               \\\n    gluonts==0.16.0                 \\\n    gplearn==0.4.2                  \\\n    jax==0.4.35                     \\\n    pennylane==0.39.0               \\\n    PennyLane-Lightning==0.39.0     \\\n    pennylane-qiskit==0.36.0        \\\n    mplfinance==0.12.10b0           \\\n    hmmlearn==0.3.3                 \\\n    ta==0.11.0                      \\\n    seaborn==0.13.2                 \\\n    optuna==4.1.0                   \\\n    findiff==0.10.2                 \\\n    sktime==0.26.0                  \\\n    hyperopt==0.2.7                 \\\n    bayesian-optimization==2.0.0    \\\n    matplotlib==3.7.5               \\\n    sdeint==0.3.0                   \\\n    pandas_market_calendars==4.4.2  \\\n    ruptures==1.1.9                 \\\n    simpy==4.1.1                    \\\n    scikit-learn-extra==0.3.0       \\\n    ray==2.40.0                     \\\n    \"ray[tune]\"==2.40.0             \\\n    \"ray[rllib]\"==2.40.0            \\\n    \"ray[data]\"==2.40.0             \\\n    \"ray[train]\"==2.40.0            \\\n    fastText==0.9.3                 \\\n    h2o==3.46.0.6                   \\\n    prophet==1.1.6                  \\\n    Riskfolio-Lib==6.1.1            \\\n    torch==2.5.1                    \\\n    torchvision==0.20.1             \\\n    ax-platform==0.4.3              \\\n    alphalens-reloaded==0.4.5       \\\n    pyfolio-reloaded==0.9.8         \\\n    altair==5.5.0                   \\\n    modin==0.26.1                   \\\n    persim==0.3.7                   \\\n    ripser==0.6.10                  \\\n    pydmd==2024.12.1                \\\n    EMD-signal==1.6.4               \\\n    spacy==3.7.5                    \\\n    pandas-ta==0.3.14b              \\\n    pytorch-ignite==0.5.1           \\\n    tensorly==0.9.0                 \\\n    mlxtend==0.23.3                 \\\n    shap==0.46.0                    \\\n    lime==0.2.0.1                   \\\n    mpmath==1.3.0                   \\\n    polars==1.16.0                  \\\n    stockstats==0.6.2               \\\n    QuantStats==0.0.64              \\\n    hurst==0.0.5                    \\\n    numerapi==2.19.1                \\\n    pymdptoolbox==4.0-b3            \\\n    panel==1.5.4                    \\\n    hvplot==0.11.1                  \\\n    py-heat==0.0.6                  \\\n    py-heat-magic==0.0.2            \\\n    bokeh==3.6.2                    \\\n    river==0.21.0                   \\\n    stumpy==1.13.0                  \\\n    pyvinecopulib==0.6.5            \\\n    ijson==3.3.0                    \\\n    jupyter-resource-usage==1.1.0   \\\n    injector==0.22.0                \\\n    openpyxl==3.1.5                 \\\n    xlrd==2.0.1                     \\\n    mljar-supervised==1.1.9         \\\n    dm-tree==0.1.8                  \\\n    lz4==4.3.3                      \\\n    ortools==9.9.3963               \\\n    py_vollib==1.0.1                \\\n    thundergbm==0.3.17              \\\n    yellowbrick==1.5                \\\n    livelossplot==0.5.5             \\\n    gymnasium==1.0.0                \\\n    interpret==0.6.7                \\\n    DoubleML==0.9.0                 \\\n    jupyter-bokeh==4.0.5            \\\n    imbalanced-learn==0.12.4        \\\n    openai==1.57.0                  \\\n    lazypredict==0.2.14a1           \\\n    darts==0.31.0                   \\\n    fastparquet==2024.11.0          \\\n    tables==3.10.1                  \\\n    dimod==0.12.17                  \\\n    dwave-samplers==1.3.0           \\\n    python-statemachine==2.5.0      \\\n    pymannkendall==1.4.3            \\\n    Pyomo==6.8.2                    \\\n    gpflow==2.9.2                   \\\n    pyarrow==15.0.1                 \\\n    dwave-ocean-sdk==8.0.1          \\\n    chardet==5.2.0                  \\\n    stable-baselines3==2.4.0        \\\n    Shimmy==2.0.0                   \\\n    FixedEffectModel==0.0.5         \\\n    transformers==4.46.3            \\\n    langchain==0.2.17               \\\n    pomegranate==1.1.1              \\\n    MAPIE==0.9.1                    \\\n    mlforecast==0.15.1              \\\n    x-transformers==1.42.24         \\\n    Werkzeug==3.1.3                 \\\n    nolds==0.6.1                    \\\n    feature-engine==1.6.2           \\\n    pytorch-tabnet==4.1.0           \\\n    opencv-contrib-python-headless==4.10.0.84 \\\n    POT==0.9.5                      \\\n    alibi-detect==0.12.0            \\\n    datasets==2.21.0                \\\n    scikeras==0.13.0                \\\n    contourpy==1.3.1\n\n# Install dwave tool\nRUN dwave install --all -y\n\n# Install 'ipopt' solver for 'Pyomo'\nRUN conda install -c conda-forge ipopt==3.14.16 \\\n    && conda clean -y --all\n\n# We install need to install separately else fails to find numpy\nRUN pip install --no-cache-dir iisignature==0.24\n\n# Install spacy models\nRUN python -m spacy download en_core_web_md && python -m spacy download en_core_web_sm\n\nRUN conda config --set solver classic && conda install -y -c conda-forge \\\n    openmpi=5.0.6                   \\\n    && conda clean -y --all\n\n# Install nltk data\nRUN python -m nltk.downloader -d /usr/share/nltk_data punkt && \\\n    python -m nltk.downloader -d /usr/share/nltk_data punkt_tab && \\\n    python -m nltk.downloader -d /usr/share/nltk_data vader_lexicon && \\\n    python -m nltk.downloader -d /usr/share/nltk_data stopwords && \\\n    python -m nltk.downloader -d /usr/share/nltk_data wordnet\n\n# Install Pyrb\nRUN wget -q https://cdn.quantconnect.com/pyrb/pyrb-master-250054e.zip && \\\n    unzip -q pyrb-master-250054e.zip && cd pyrb-master && \\\n    pip install . && cd .. && rm -rf pyrb-master && rm pyrb-master-250054e.zip\n\n# Install SSM\nRUN wget -q https://cdn.quantconnect.com/ssm/ssm-master-646e188.zip && \\\n    unzip -q ssm-master-646e188.zip && cd ssm-master && \\\n    pip install . && cd .. && rm -rf ssm-master && rm ssm-master-646e188.zip\n\n# Install uni2ts\nRUN wget -q https://cdn.quantconnect.com/uni2ts/uni2ts-main-ffe78db.zip && \\\n    unzip -q uni2ts-main-ffe78db.zip && cd uni2ts-main && \\\n    pip install . && cd .. && rm -rf uni2ts-main && rm uni2ts-main-ffe78db.zip\n\n# Install chronos-forecasting\nRUN wget -q https://cdn.quantconnect.com/chronos-forecasting/chronos-forecasting-main-b0bdbd9.zip && \\\n    unzip -q chronos-forecasting-main-b0bdbd9.zip && cd chronos-forecasting-main && \\\n    pip install \".[training]\" && cd .. && rm -rf chronos-forecasting-main && rm chronos-forecasting-main-b0bdbd9.zip\n\nRUN echo \"{\\\"argv\\\":[\\\"python\\\",\\\"-m\\\",\\\"ipykernel_launcher\\\",\\\"-f\\\",\\\"{connection_file}\\\"],\\\"display_name\\\":\\\"Foundation-Py-Default\\\",\\\"language\\\":\\\"python\\\",\\\"metadata\\\":{\\\"debugger\\\":true}}\" > /opt/miniconda3/share/jupyter/kernels/python3/kernel.json\n\n# Install wkhtmltopdf and xvfb to support HTML to PDF conversion of reports\nRUN apt-get update && apt install -y xvfb wkhtmltopdf && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove --purge -y && rm -rf /var/lib/apt/lists/*\n\n# Install fonts for matplotlib\nRUN wget -q https://cdn.quantconnect.com/fonts/foundation.zip && unzip -q foundation.zip && rm foundation.zip \\\n    && mv \"lean fonts/\"* /usr/share/fonts/truetype/ && rm -rf \"lean fonts/\" \"__MACOSX/\"\n\n# label definitions\nLABEL strict_python_version=3.11.11\nLABEL python_version=3.11\nLABEL target_framework=net9.0"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "DownloaderDataProvider",
          "type": "tree",
          "content": null
        },
        {
          "name": "Engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "Indicators",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.4853515625,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2014 QuantConnect Corporation\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "LocalPackages",
          "type": "tree",
          "content": null
        },
        {
          "name": "Logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "Messaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "Optimizer.Launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "Optimizer",
          "type": "tree",
          "content": null
        },
        {
          "name": "QuantConnect.Lean.sln",
          "type": "blob",
          "size": 12.2978515625,
          "content": "﻿\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.4.33205.214\nMinimumVisualStudioVersion = 15.0.0.0\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Lean.Launcher\", \"Launcher\\QuantConnect.Lean.Launcher.csproj\", \"{09E7B916-E58B-4021-BD8B-C10B4446E226}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Lean.Engine\", \"Engine\\QuantConnect.Lean.Engine.csproj\", \"{12156F46-D07E-4E3D-AD2B-7409E82AB62F}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{C5D44209-49A0-4505-A870-043C5EF5FDDF} = {C5D44209-49A0-4505-A870-043C5EF5FDDF}\n\t\t{39A81C16-A1E8-425E-A8F2-1433ADB80228} = {39A81C16-A1E8-425E-A8F2-1433ADB80228}\n\t\t{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8} = {F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}\n\t\t{D6633172-1368-4DF6-9444-825C3E00C819} = {D6633172-1368-4DF6-9444-825C3E00C819}\n\t\t{3240ACA4-BDD4-4D24-AC36-BBB651C39212} = {3240ACA4-BDD4-4D24-AC36-BBB651C39212}\n\tEndProjectSection\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Algorithm\", \"Algorithm\\QuantConnect.Algorithm.csproj\", \"{3240ACA4-BDD4-4D24-AC36-BBB651C39212}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect\", \"Common\\QuantConnect.csproj\", \"{2545C0B4-FABB-49C9-8DD1-9AD7EE23F86B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Logging\", \"Logging\\QuantConnect.Logging.csproj\", \"{01911409-86BE-4E7D-9947-DF714138610D}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Indicators\", \"Indicators\\QuantConnect.Indicators.csproj\", \"{73FB2522-C3ED-4E47-8E3D-AFAD48A6B888}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Tests\", \"Tests\\QuantConnect.Tests.csproj\", \"{F15E0E67-E6CA-4BE4-BA36-54D73C5ACC11}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Queues\", \"Queues\\QuantConnect.Queues.csproj\", \"{D6633172-1368-4DF6-9444-825C3E00C819}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Messaging\", \"Messaging\\QuantConnect.Messaging.csproj\", \"{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.AlgorithmFactory\", \"AlgorithmFactory\\QuantConnect.AlgorithmFactory.csproj\", \"{E99D056A-B6FB-48D2-9F7C-683C54CEBBF9}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Brokerages\", \"Brokerages\\QuantConnect.Brokerages.csproj\", \"{2D3E13CF-2D14-4180-A42D-F0A13AF0ADE2}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Configuration\", \"Configuration\\QuantConnect.Configuration.csproj\", \"{0AEB4EA3-28C8-476E-89FD-926F06590B4C}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Compression\", \"Compression\\QuantConnect.Compression.csproj\", \"{BC3BC77E-0502-43DB-A727-B94F9765D74B}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Api\", \"Api\\QuantConnect.Api.csproj\", \"{C5D44209-49A0-4505-A870-043C5EF5FDDF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Algorithm.CSharp\", \"Algorithm.CSharp\\QuantConnect.Algorithm.CSharp.csproj\", \"{39A81C16-A1E8-425E-A8F2-1433ADB80228}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Algorithm.Python\", \"Algorithm.Python\\QuantConnect.Algorithm.Python.csproj\", \"{48289996-CE56-4EDF-B451-4A2B1519EBC3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.ToolBox\", \"ToolBox\\QuantConnect.ToolBox.csproj\", \"{AC9A142C-B485-44D7-91FF-015C22C43D05}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Research\", \"Research\\QuantConnect.Research.csproj\", \"{9561D14A-467E-40AD-928E-EE9F758D7D98}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Algorithm.Framework\", \"Algorithm.Framework\\QuantConnect.Algorithm.Framework.csproj\", \"{75981418-7246-4B91-B136-482728E02901}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Report\", \"Report\\QuantConnect.Report.csproj\", \"{2431419F-8BC6-4F59-944E-9A1CD28982DF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Optimizer\", \"Optimizer\\QuantConnect.Optimizer.csproj\", \"{4ECD7DF3-A675-4E9E-ACA3-2B51C88736CE}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.Optimizer.Launcher\", \"Optimizer.Launcher\\QuantConnect.Optimizer.Launcher.csproj\", \"{D46D2A8D-340C-4B40-8EE6-6BAA7B1198AB}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"QuantConnect.DownloaderDataProvider.Launcher\", \"DownloaderDataProvider\\QuantConnect.DownloaderDataProvider.Launcher.csproj\", \"{D139191E-50D5-4284-AC9C-247ED60950F4}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{09E7B916-E58B-4021-BD8B-C10B4446E226}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{09E7B916-E58B-4021-BD8B-C10B4446E226}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{09E7B916-E58B-4021-BD8B-C10B4446E226}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{09E7B916-E58B-4021-BD8B-C10B4446E226}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{12156F46-D07E-4E3D-AD2B-7409E82AB62F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{12156F46-D07E-4E3D-AD2B-7409E82AB62F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{12156F46-D07E-4E3D-AD2B-7409E82AB62F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{12156F46-D07E-4E3D-AD2B-7409E82AB62F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{3240ACA4-BDD4-4D24-AC36-BBB651C39212}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{3240ACA4-BDD4-4D24-AC36-BBB651C39212}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{3240ACA4-BDD4-4D24-AC36-BBB651C39212}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{3240ACA4-BDD4-4D24-AC36-BBB651C39212}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2545C0B4-FABB-49C9-8DD1-9AD7EE23F86B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2545C0B4-FABB-49C9-8DD1-9AD7EE23F86B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2545C0B4-FABB-49C9-8DD1-9AD7EE23F86B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2545C0B4-FABB-49C9-8DD1-9AD7EE23F86B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{01911409-86BE-4E7D-9947-DF714138610D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{01911409-86BE-4E7D-9947-DF714138610D}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{01911409-86BE-4E7D-9947-DF714138610D}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{01911409-86BE-4E7D-9947-DF714138610D}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{73FB2522-C3ED-4E47-8E3D-AFAD48A6B888}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{73FB2522-C3ED-4E47-8E3D-AFAD48A6B888}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{73FB2522-C3ED-4E47-8E3D-AFAD48A6B888}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{73FB2522-C3ED-4E47-8E3D-AFAD48A6B888}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F15E0E67-E6CA-4BE4-BA36-54D73C5ACC11}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F15E0E67-E6CA-4BE4-BA36-54D73C5ACC11}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F15E0E67-E6CA-4BE4-BA36-54D73C5ACC11}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F15E0E67-E6CA-4BE4-BA36-54D73C5ACC11}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D6633172-1368-4DF6-9444-825C3E00C819}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D6633172-1368-4DF6-9444-825C3E00C819}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D6633172-1368-4DF6-9444-825C3E00C819}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D6633172-1368-4DF6-9444-825C3E00C819}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F2E90E2D-BA25-40E2-B39A-0BA31E68F7F8}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{E99D056A-B6FB-48D2-9F7C-683C54CEBBF9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{E99D056A-B6FB-48D2-9F7C-683C54CEBBF9}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{E99D056A-B6FB-48D2-9F7C-683C54CEBBF9}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{E99D056A-B6FB-48D2-9F7C-683C54CEBBF9}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2D3E13CF-2D14-4180-A42D-F0A13AF0ADE2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2D3E13CF-2D14-4180-A42D-F0A13AF0ADE2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2D3E13CF-2D14-4180-A42D-F0A13AF0ADE2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2D3E13CF-2D14-4180-A42D-F0A13AF0ADE2}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{0AEB4EA3-28C8-476E-89FD-926F06590B4C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{0AEB4EA3-28C8-476E-89FD-926F06590B4C}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{0AEB4EA3-28C8-476E-89FD-926F06590B4C}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{0AEB4EA3-28C8-476E-89FD-926F06590B4C}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{BC3BC77E-0502-43DB-A727-B94F9765D74B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{BC3BC77E-0502-43DB-A727-B94F9765D74B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{BC3BC77E-0502-43DB-A727-B94F9765D74B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{BC3BC77E-0502-43DB-A727-B94F9765D74B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{C5D44209-49A0-4505-A870-043C5EF5FDDF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{C5D44209-49A0-4505-A870-043C5EF5FDDF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{C5D44209-49A0-4505-A870-043C5EF5FDDF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{C5D44209-49A0-4505-A870-043C5EF5FDDF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{39A81C16-A1E8-425E-A8F2-1433ADB80228}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{39A81C16-A1E8-425E-A8F2-1433ADB80228}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{39A81C16-A1E8-425E-A8F2-1433ADB80228}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{39A81C16-A1E8-425E-A8F2-1433ADB80228}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{48289996-CE56-4EDF-B451-4A2B1519EBC3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{48289996-CE56-4EDF-B451-4A2B1519EBC3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AC9A142C-B485-44D7-91FF-015C22C43D05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{AC9A142C-B485-44D7-91FF-015C22C43D05}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{AC9A142C-B485-44D7-91FF-015C22C43D05}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{AC9A142C-B485-44D7-91FF-015C22C43D05}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9561D14A-467E-40AD-928E-EE9F758D7D98}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9561D14A-467E-40AD-928E-EE9F758D7D98}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9561D14A-467E-40AD-928E-EE9F758D7D98}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9561D14A-467E-40AD-928E-EE9F758D7D98}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{75981418-7246-4B91-B136-482728E02901}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{75981418-7246-4B91-B136-482728E02901}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{75981418-7246-4B91-B136-482728E02901}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{75981418-7246-4B91-B136-482728E02901}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{2431419F-8BC6-4F59-944E-9A1CD28982DF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{2431419F-8BC6-4F59-944E-9A1CD28982DF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{2431419F-8BC6-4F59-944E-9A1CD28982DF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{2431419F-8BC6-4F59-944E-9A1CD28982DF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4ECD7DF3-A675-4E9E-ACA3-2B51C88736CE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4ECD7DF3-A675-4E9E-ACA3-2B51C88736CE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4ECD7DF3-A675-4E9E-ACA3-2B51C88736CE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4ECD7DF3-A675-4E9E-ACA3-2B51C88736CE}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D46D2A8D-340C-4B40-8EE6-6BAA7B1198AB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D46D2A8D-340C-4B40-8EE6-6BAA7B1198AB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D46D2A8D-340C-4B40-8EE6-6BAA7B1198AB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D46D2A8D-340C-4B40-8EE6-6BAA7B1198AB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D139191E-50D5-4284-AC9C-247ED60950F4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D139191E-50D5-4284-AC9C-247ED60950F4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D139191E-50D5-4284-AC9C-247ED60950F4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D139191E-50D5-4284-AC9C-247ED60950F4}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {67BACDB0-1FDB-4AF0-A199-88CF436FB470}\n\tEndGlobalSection\nEndGlobal\n"
        },
        {
          "name": "QuantConnect.Lean.sln.DotSettings",
          "type": "blob",
          "size": 5.70703125,
          "content": "﻿<wpf:ResourceDictionary xml:space=\"preserve\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:s=\"clr-namespace:System;assembly=mscorlib\" xmlns:ss=\"urn:shemas-jetbrains-com:settings-storage-xaml\" xmlns:wpf=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceDoWhileStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceFixedStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceForeachStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceForStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceIfStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceLockStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceUsingStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=EnforceWhileStatementBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeInspection/Highlighting/InspectionSeverities/=RemoveRedundantBraces/@EntryIndexedValue\">HINT</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue\">Required</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue\">ExpressionBody</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/INDENT_METHOD_DECL_PARS/@EntryValue\">OUTSIDE</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/LINE_FEED_AT_FILE_END/@EntryValue\">True</s:Boolean>\n\t<s:Int64 x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_FORMAL_PARAMETERS_ON_LINE/@EntryValue\">4</s:Int64>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue\">NEVER</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue\">NEVER</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue\">NEVER</s:String>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue\">False</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_DECLARATION_RPAR/@EntryValue\">True</s:Boolean>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_EXTENDS_LIST_STYLE/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue\">CHOP_IF_LONG</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_VERBATIM_INTERPOLATED_STRINGS/@EntryValue\">WRAP_IF_LONG</s:String>\n\t<s:String x:Key=\"/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue\">&lt;Policy Inspect=\"True\" Prefix=\"\" Suffix=\"\" Style=\"aaBb\" /&gt;</s:String>\n\t<s:String x:Key=\"/Default/Environment/PerformanceGuide/SwitchBehaviour/=Antivirus/@EntryIndexedValue\">DO_NOTHING</s:String>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=comparand/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=expirations/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=Quant/@EntryIndexedValue\">True</s:Boolean>\n\t<s:Boolean x:Key=\"/Default/UserDictionary/Words/=QUANTCONNECT/@EntryIndexedValue\">True</s:Boolean>\n</wpf:ResourceDictionary>\n"
        },
        {
          "name": "Queues",
          "type": "tree",
          "content": null
        },
        {
          "name": "Report",
          "type": "tree",
          "content": null
        },
        {
          "name": "Research",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ToolBox",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci_build_stubs.sh",
          "type": "blob",
          "size": 3.0224609375,
          "content": "#!/bin/bash\n\nCLI_ARGS=(\"$@\")\n\nGENERATOR_REPO=\"https://github.com/QuantConnect/quantconnect-stubs-generator\"\nGENERATOR_BRANCH=\"master\"\n\nRUNTIME_REPO=\"https://github.com/dotnet/runtime\"\nRUNTIME_BRANCH=\"main\"\n\nLEAN_DIR=\"$(pwd)\"\nLEAN_BIN_DIR=\"$LEAN_DIR/Launcher/bin/Release\"\nGENERATOR_DIR=\"$LEAN_BIN_DIR/quantconnect-stubs-generator\"\nRUNTIME_DIR=\"$LEAN_BIN_DIR/dotnet-runtime\"\nSTUBS_DIR=\"$LEAN_BIN_DIR/generated-stubs\"\n\n# Change to \"testpypi\" to upload to https://test.pypi.org/\n# If you do this, know that PyPI and TestPyPI require different API tokens\nPYPI_REPO=\"pypi\"\n\n# For our all additional repos we want to include in our stubs\n# Passed in env secret of repos is one long string that needs to be split\nADDITIONAL_REPOS=$(echo $ADDITIONAL_STUBS_REPOS | tr \";\" \"\\n\")\nADDITIONAL_REPOS_DIR=\"$LEAN_DIR/ADDITIONAL_STUBS\"\n\n# This function essentially loads in additional repo into our Lean directory\n# which will then be included in our generation of stubs\nfunction prepare_additional_repos {\n    if [ ! -d $ADDITIONAL_REPOS_DIR ]; then\n        mkdir $ADDITIONAL_REPOS_DIR\n    fi\n\n    cd $ADDITIONAL_REPOS_DIR\n    for REPO in ${ADDITIONAL_REPOS}; do\n        #Replace github.com with token from environment before checking it out\n        git clone \"${REPO//github.com/\"${QC_GIT_TOKEN}@github.com\"}\"\n    done\n\n    # Return us back to previous directory\n    cd -\n}\n\nfunction ensure_repo_up_to_date {\n    if [ ! -d $3 ]; then\n        git clone $1 $3\n    fi\n\n    cd $3\n    git checkout $2\n    git pull origin $2\n}\n\nfunction install_twine {\n    pip install -U twine -q\n}\n\nfunction generate_stubs {\n    ensure_repo_up_to_date $GENERATOR_REPO $GENERATOR_BRANCH $GENERATOR_DIR\n    ensure_repo_up_to_date $RUNTIME_REPO $RUNTIME_BRANCH $RUNTIME_DIR\n\n    prepare_additional_repos\n\n    if [ -d $STUBS_DIR ]; then\n        rm -rf $STUBS_DIR\n    fi\n\n    cd \"$GENERATOR_DIR/QuantConnectStubsGenerator\"\n\n    STUBS_VERSION=\"${GITHUB_REF#refs/tags/}\" \\\n    dotnet run -v q $LEAN_DIR $RUNTIME_DIR $STUBS_DIR\n\n    if [ $? -ne 0 ]; then\n        echo \"Generation of stubs failed\"\n        exit 1\n    fi\n}\n\nfunction publish_stubs {\n    # Requires the PYPI_API_TOKEN environment variable to be set\n    # This API token should be valid for the current $PYPI_REPO and should include the \"pypi-\" prefix\n\n    cd $STUBS_DIR\n    python setup.py --quiet sdist bdist_wheel\n\n    TWINE_USERNAME=\"__token__\" \\\n    TWINE_PASSWORD=\"$PYPI_API_TOKEN\" \\\n    TWINE_REPOSITORY=\"$PYPI_REPO\" \\\n    twine upload \"$STUBS_DIR/dist/*\" > /dev/null\n\n    if [ $? -ne 0 ]; then\n        echo \"PyPI publishing failed\"\n        exit 1\n    fi\n}\n\nif [[ \" ${CLI_ARGS[@]} \" =~ \" -h \" ]]; then\n    echo \"STUBS GENERATOR (Debian distros only)\"\n    echo \"  -t: Install Twine\"\n    echo \"  -g: Generate new stubs\"\n    echo \"  -p: Publish new stubs to PyPI\"\n    exit 0\nfi\n\nif [[ ! \"$GITHUB_REF\" =~ \"refs/tags/\" ]]; then\n    echo \"GITHUB_REF not defined!\"\n    exit 0\nfi\n\nif [[ \" ${CLI_ARGS[@]} \" =~ \" -t \" ]]; then\n    install_twine\nfi\n\nif [[ \" ${CLI_ARGS[@]} \" =~ \" -g \" ]]; then\n    generate_stubs\nfi\n\nif [[ \" ${CLI_ARGS[@]} \" =~ \" -p \" ]]; then\n    publish_stubs\nfi\n"
        },
        {
          "name": "compare_benchmarks.py",
          "type": "blob",
          "size": 0.97265625,
          "content": "import sys\nimport json\n\nprint(f'Will compare benchmark results {sys.argv[2]} against reference {sys.argv[1]}')\n\nreferenceBenchmark = json.load(open(sys.argv[1]))\nnewBenchmark = json.load(open(sys.argv[2]))\n\nfailed = False\nfor language in [\"CSharp\", \"Python\"]:\n\n\tfor key, value in referenceBenchmark[language].items():\n\t\tif key not in newBenchmark[language]:\n\t\t\tfailed = True\n\t\t\tprint(f'Performance benchmark {key} language {language} was not found in new results')\n\t\t\tcontinue\n\t\tnewResult = newBenchmark[language][key]\n\n\t\t# allow 5% noise\n\t\texpectedValue = value[\"average-dps\"] * 0.90\n\t\tif expectedValue > newResult[\"average-dps\"]:\n\t\t\tfailed = True\n\t\t\tprint(f'Performance benchmark Failed for algorithm {key} language {language}. Was {str(newResult[\"average-dps\"])} expected as low as {str(expectedValue)}')\n\t\telse:\n\t\t\tprint(f'Performance benchmark Passed for algorithm {key} language {language}. Was {str(newResult[\"average-dps\"])} expected as low as {str(expectedValue)}')\n\nif failed:\n\texit(1)\n"
        },
        {
          "name": "google9161359af9633398.html",
          "type": "blob",
          "size": 0.0517578125,
          "content": "google-site-verification: google9161359af9633398.html"
        },
        {
          "name": "lean.ico",
          "type": "blob",
          "size": 1.123046875,
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 10.740234375,
          "content": "<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/f3581da5-1983-4f6c-af5a-55c79b37913a\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/0f8022d5-952d-418c-9011-2644830137d2\">\n  <img alt=\"lean-header\" width=\"100%\">\n</picture>\n<br />\n<br />\n\n[![Build Status](https://github.com/QuantConnect/Lean/workflows/Build%20%26%20Test%20Lean/badge.svg)](https://github.com/QuantConnect/Lean/actions?query=workflow%3A%22Build%20%26%20Test%20Lean%22) &nbsp;&nbsp;&nbsp; [![Regression Tests](https://github.com/QuantConnect/Lean/workflows/Regression%20Tests/badge.svg)](https://github.com/QuantConnect/Lean/actions?query=workflow%3A%22Regression%20Tests%22) &nbsp;&nbsp;&nbsp; [![LEAN Forum](https://img.shields.io/badge/debug-LEAN%20Forum-53c82b.svg)](https://www.quantconnect.com/forum/discussions/1/lean) &nbsp;&nbsp;&nbsp; [![Discord Chat](https://img.shields.io/badge/chat-Discord-53c82b.svg)](https://www.quantconnect.com/discord)\n\n\n[Lean Home][1] | [Documentation][2] | [Download Zip][3] | [Docker Hub][8] | [Nuget][9]\n\n#\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/09d7707d-619d-48e2-b6d9-ef2d2d61144b\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/aab2422c-f480-421d-9ad2-5a355843d82a\">\n  <img alt=\"features-header\" width=\"100%\">\n</picture>\n\nLEAN is an event-driven, professional-caliber algorithmic trading  platform built with a passion for elegant engineering and deep quant  concept modeling. Out-of-the-box alternative data and live-trading support.\n<br/>\n<br/>\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/d0ca17eb-307f-4155-b989-9afe502845b9\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/9135fa86-c3e3-48e6-bbf9-de97f17afb52\">\n  <img alt=\"feature-list\" width=\"100%\">\n</picture>\n\n<br/>\n<br/>\n\n#\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/f486e040-e350-4c9b-98c5-7b3902c0b7d8\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/d28fd3d4-dad8-4828-94a9-676ddb360bdd\">\n  <img alt=\"modular-header\" width=\"100%\">\n</picture>\nLEAN is modular in design, with each component pluggable and customizable. It ships with models for all major plug-in points.\n<br/>\n<br/>\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/7989d185-45cd-4a40-acef-6ff61d9d82f6\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/5f9cc976-a715-495a-9977-87961509d2e0\">\n  <img alt=\"modular-architecture\" width=\"100%\">\n</picture>\n\n#\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/9b7b7abf-b0f5-41a3-8a1b-a9400738b27a\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/1bb1dd23-dbc7-4a96-b556-edbae84012b5\">\n  <img alt=\"cli-header\" width=\"100%\">\n</picture>\n\n<img width=\"100%\" alt=\"lean-animation\" src=\"https://github.com/user-attachments/assets/09a32ba9-99ee-4fa9-9b33-d98dbf5d291f\">\n\nQuantConnect Lean CLI is a command-line interface tool for interacting with the Lean algorithmic trading engine, which is an open-source platform for backtesting and live trading algorithms in multiple financial markets. It allows developers to manage projects, run backtests, deploy live algorithms, and perform various other tasks related to algorithmic trading directly from the terminal. The CLI simplifies the workflow by automating tasks, enabling seamless integration with cloud services, and facilitating collaboration with the QuantConnect community. It's designed for quant developers who need a powerful and flexible tool to streamline their trading strategies. Please watch the [instructions videos](https://www.youtube.com/watch?v=QJibe1XpP-U&list=PLD7-B3LE6mz61Hojce6gKshv5-7Qo4y0r) to learn more.\n\n### Installation\n\n```\npip install lean\n```\n\n\n### Commands\n\nCreate a new project containing starter code\n\n```\nlean project-create\n```\n\nRun a local Jupyter Lab environment using Docker\n\n```\nlean research\n```\n\nBacktest a project locally using Docker\n\n```\nlean backtest\n```\n\nOptimize a project locally using Docker\n\n```\nlean optimize\n```\n\nStart live trading a project locally using Docker\n\n```\nlean live\n```\n\nDownload the [LEAN CLI Cheat Sheet](https://cdn.quantconnect.com/i/tu/cli-cheat-sheet.pdf) for the full list of commands.\n\n#\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/85b548f8-9fd1-47f1-9b10-d73b3cfc6b23\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/b6866983-adac-4461-ac2f-8642a72ef2a5\">\n  <img alt=\"modular-architecture\" width=\"100%\">\n</picture>\n<br>\n\n![diagram](https://github.com/user-attachments/assets/f482fae4-5908-4d95-a427-4b1d685c355c)\n\n#\n\n<picture >\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/user-attachments/assets/7b230a0d-6bf2-45bb-872e-c0faf4f1471e\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/user-attachments/assets/23b59138-aab5-43c3-91b0-20eff46ab21a\">\n  <img alt=\"modular-architecture\" width=\"100%\">\n</picture>\n\n\nThis section will cover how to install lean locally for you to use in your environment. **For most users we strongly recommend the LEAN CLI which is prebuilt and runs on all platforms.** Refer to the following readme files for a detailed guide regarding using your local IDE with Lean.\n<br/>\n\n* [VS Code](.vscode/readme.md)\n* [VS](.vs/readme.md)\n  \nTo install locally, download the zip file with the [latest master](https://github.com/QuantConnect/Lean/archive/master.zip) and unzip it to your favorite location. Alternatively, install [Git](https://git-scm.com/downloads) and clone the repo:\n\n```\ngit clone https://github.com/QuantConnect/Lean.git\ncd Lean\n```\n\n### macOS \n\nNOTE: Visual Studio for Mac [has been discontinued](https://learn.microsoft.com/en-gb/visualstudio/releases/2022/what-happened-to-vs-for-mac), use Visual Studio Code instead\n\n- Install [Visual Studio Code for Mac](https://code.visualstudio.com/download)\n- Install the [C# Dev Kit extension](https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit)\n- Install [dotnet 6 SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0):\n- To build the solution, either:\n  - choose **Run Task** > **build** from the Panel task dropdown, or\n  - from the command line run\n    ```\n    dotnet build\n    ```\n- To run the solution, either:\n  - choose **Run and Debug** from the Activity Bar, then click **Launch**, or\n  - click F5, or\n  - from the command line run\n    ```\n    cd Launcher/bin/Debug\n    dotnet QuantConnect.Lean.Launcher.dll\n    ```\n\n### Linux (Debian, Ubuntu)\n\n- Install [dotnet 6](https://docs.microsoft.com/en-us/dotnet/core/install/linux):\n- Compile Lean Solution:\n```\ndotnet build QuantConnect.Lean.sln\n```\n- Run Lean:\n```\ncd Launcher/bin/Debug\ndotnet QuantConnect.Lean.Launcher.dll\n```\n\n### Windows\n\n- Install [Visual Studio](https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx)\n- Open `QuantConnect.Lean.sln` in Visual Studio\n- Build the solution by clicking Build Menu -> Build Solution (this should trigger the NuGet package restore)\n- Press `F5` to run\n\n### Python Support\n\nA full explanation of the Python installation process can be found in the [Algorithm.Python](https://github.com/QuantConnect/Lean/tree/master/Algorithm.Python#quantconnect-python-algorithm-project) project.\n\n### Local-Cloud Hybrid Development. \n\nSeamlessly develop locally in your favorite development environment, with full autocomplete and debugging support to quickly and easily identify problems with your strategy. Please see the [CLI Home](https://www.lean.io/cli) for more information.\n\n## Issues and Feature Requests ##\n\nPlease submit bugs and feature requests as an issue to the [Lean Repository][5]. Before submitting an issue, please read the instructions to ensure it is not duplicated.\n\n## Mailing List ## \n\nThe mailing list for the project can be found on [LEAN Forum][6]. Please use this to ask for assistance with your installation and setup questions.\n\n## Contributors and Pull Requests ##\n\nContributions are warmly welcomed, but we ask you to read the existing code to see how it is formatted and commented on and ensure contributions match the existing style. All code submissions must include accompanying tests. Please see the [contributor guidelines][7]. All accepted pull requests will get a $50 cloud credit on QuantConnect. Once your pull request has been merged, write to us at support@quantconnect.com with a link to your PR to claim your free live trading. QC <3 Open Source.\n\nA huge thank you to all our contributors!\n\n<br/>\n\n<a href=\"https://github.com/QuantConnect/Lean/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=QuantConnect/Lean\" />\n</a>\n\n## Acknowledgements ##\n\nThe open sourcing of QuantConnect would not have been possible without the support of the Pioneers. The Pioneers formed the core 100 early adopters of QuantConnect who subscribed and allowed us to launch the project into open source. \n\nRyan H, Pravin B, Jimmie B, Nick C, Sam C, Mattias S, Michael H, Mark M, Madhan, Paul R, Nik M, Scott Y, BinaryExecutor.com, Tadas T, Matt B, Binumon P, Zyron, Mike O, TC, Luigi, Lester Z, Andreas H, Eugene K, Hugo P, Robert N, Christofer O, Ramesh L, Nicholas S, Jonathan E, Marc R, Raghav N, Marcus, Hakan D, Sergey M, Peter McE, Jim M, INTJCapital.com, Richard E, Dominik, John L, H. Orlandella, Stephen L, Risto K, E.Subasi, Peter W, Hui Z, Ross F, Archibald112, MooMooForex.com, Jae S, Eric S, Marco D, Jerome B, James B. Crocker, David Lypka, Edward T, Charlie Guse, Thomas D, Jordan I, Mark S, Bengt K, Marc D, Al C, Jan W, Ero C, Eranmn, Mitchell S, Helmuth V, Michael M, Jeremy P, PVS78, Ross D, Sergey K, John Grover, Fahiz Y, George L.Z., Craig E, Sean S, Brad G, Dennis H, Camila C, Egor U, David T, Cameron W, Napoleon Hernandez, Keeshen A, Daniel E, Daniel H, M.Patterson, Asen K, Virgil J, Balazs Trader, Stan L, Con L, Will D, Scott K, Barry K, Pawel D, S Ray, Richard C, Peter L, Thomas L., Wang H, Oliver Lee, Christian L..\n\n\n  [1]: https://www.lean.io/ \"Lean Open Source Home Page\"\n  [2]: https://www.lean.io/docs/ \"Lean Documentation\"\n  [3]: https://github.com/QuantConnect/Lean/archive/master.zip\n  [4]: https://www.quantconnect.com \"QuantConnect\"\n  [5]: https://github.com/QuantConnect/Lean/issues\n  [6]: https://www.quantconnect.com/forum/discussions/1/lean\n  [7]: https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md\n  [8]: https://hub.docker.com/orgs/quantconnect/repositories\n  [9]: https://www.nuget.org/profiles/jaredbroad\n"
        },
        {
          "name": "rebase_organization_branches.sh",
          "type": "blob",
          "size": 0.7099609375,
          "content": "#!/bin/bash\n\necho \"Start Rebasing Organization Branches\"\ngit config user.name \"$(git log -n 1 --pretty=format:%an)\"\ngit config user.email \"$(git log -n 1 --pretty=format:%ae)\"\n\ngit remote set-branches origin '*'\ngit checkout -- .\ngit clean -xqdf\n\nfor branch in $(git for-each-ref refs/remotes/origin/* | cut -d\"$(printf '\\t')\" -f2 | cut -b21- | grep ^org-)\ndo\n    echo \"Rebasing branch $branch\"\n    git checkout $branch\n    git rebase master\n    retVal=$?\n    if [ $retVal -eq 0 ]; then\n        echo \"Pushing branch $branch\"\n        git push --force-with-lease --set-upstream origin $branch\n    else\n        echo \"Rebase failed branch $branch\"\n        git rebase --abort\n    fi\n    git checkout master\n    git clean -xqdf\ndone\n"
        },
        {
          "name": "run_benchmarks.py",
          "type": "blob",
          "size": 2.2314453125,
          "content": "import os\nimport re\nimport sys\nimport json\nimport subprocess\nimport statistics\nfrom pathlib import Path\n\ndataPath = '../../../Data'\nif len(sys.argv) > 1:\n\tdataPath = sys.argv[1]\nprint(f'Using data path {dataPath}')\n\nresults = {}\nfor baseDirectory in [\"Algorithm.CSharp/Benchmarks\", \"Algorithm.Python/Benchmarks\"]:\n\n\tlanguage = baseDirectory[len(\"Algorithm\") + 1:baseDirectory.index(\"/\")]\n\tresultsPerLanguage = {}\n\n\tfor algorithmFile in sorted(os.listdir(baseDirectory)):\n\t\tif algorithmFile.endswith((\"py\", \"cs\")):\n\n\t\t\talgorithmName = Path(algorithmFile).stem\n\n\t\t\tif \"Fine\" in algorithmName:\n\t\t\t\t# we skip fundamental benchmarks for now\n\t\t\t\tcontinue\n\t\t\talgorithmLocation = \"QuantConnect.Algorithm.CSharp.dll\" if language == \"CSharp\" else os.path.join(\"../../../\", baseDirectory, algorithmFile)\n\t\t\tprint(f'Start running algorithm {algorithmName} language {language}...')\n\n\t\t\tdataPointsPerSecond = []\n\t\t\tbenchmarkLengths = []\n\t\t\tfor x in range(1, 2):\n\n\t\t\t\tsubprocess.run([\"dotnet\", \"./QuantConnect.Lean.Launcher.dll\",\n\t\t\t\t\t\"--data-folder \" + dataPath,\n\t\t\t\t\t\"--algorithm-language \" + language,\n\t\t\t\t\t\"--algorithm-type-name \" + algorithmName,\n\t\t\t\t\t\"--algorithm-location \" + algorithmLocation,\n\t\t\t\t\t\"--log-handler ConsoleErrorLogHandler\",\n\t\t\t\t\t\"--close-automatically true\"],\n\t\t\t\t\tcwd=\"./Launcher/bin/Release\",\n\t\t\t\t\tstdout=subprocess.DEVNULL,\n\t\t\t\t\tstderr=subprocess.DEVNULL)\n\n\t\t\t\talgorithmLogs = os.path.join(\"./Launcher/bin/Release\", algorithmName + \"-log.txt\")\n\t\t\t\tfile = open(algorithmLogs, 'r')\n\t\t\t\tfor line in file.readlines():\n\t\t\t\t\tfor match in re.findall(r\"(\\d+)k data points per second\", line):\n\t\t\t\t\t\tdataPointsPerSecond.append(int(match))\n\t\t\t\t\tfor match in re.findall(r\" completed in (\\d+)\", line):\n\t\t\t\t\t\tbenchmarkLengths.append(int(match))\n\n\t\t\taverageDps = statistics.mean(dataPointsPerSecond)\n\t\t\taverageLength = statistics.mean(benchmarkLengths)\n\t\t\tresultsPerLanguage[algorithmName] = { \"average-dps\": averageDps, \"samples\": dataPointsPerSecond, \"average-length\": averageLength }\n\t\t\tprint(f'Performance for {algorithmName} language {language} avg dps: {averageDps}k samples: [{\",\".join(str(x) for x in dataPointsPerSecond)}] avg length {averageLength} sec')\n\n\tresults[language] = resultsPerLanguage\n\nwith open(\"benchmark_results.json\", \"w\") as outfile:\n\tjson.dump(results, outfile)\n"
        }
      ]
    }
  ]
}