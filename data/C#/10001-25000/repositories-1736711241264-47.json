{
  "metadata": {
    "timestamp": 1736711241264,
    "page": 47,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mono/mono",
      "stars": 11188,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.802734375,
          "content": "# diff settings\n*.cs\tdiff=csharp\n\n# ensure LF endings on all checkouts\nconfigure.ac\tcrlf=input\nconfig.rpath\tcrlf=input\nconfigure.host\tcrlf=input\nmkinstalldirs\tcrlf=input\n*.sh\tcrlf=input\n*.sources\tcrlf=input\n.gitattributes\tcrlf=input\n*akefile*\tcrlf=input\nm4/mono-output.m4\tcrlf=input\n\n# ensure native line endings on checkout\n*.c\tcrlf\n*.h\tcrlf\n*.cs\tcrlf\n*.il\tcrlf\n*.sln\t\tcrlf\n*.*proj*\tcrlf\n\n*.bat text eol=crlf\n*.cmd text eol=crlf\n\n# don't do anything to line-endings.  Let CRLFs/LFs go into the repo, and CRLF/LFs on checkout\n*.xml \t\t-crlf\n\n# CRLF Handling\n# -------------\n#\n# The ideal situation would be to do no EOL normalization.  Each file\n# would have a default EOL, and tools on Windows and Linux would handle\n# both EOL formats.\n#\n# We're not in the ideal world.  A popular editor on Windows (possibly\n# Visual Studio) silently introduces EOL corruption -- it displays an\n# LF-file normally, but any newly added lines have CRLF.  On Linux,\n# Emacs and versions of VI handle LF-files and CRLF-files properly.\n# However, emacs doesn't like files with both LF and CRLF EOLs.  Editing\n# the file without additional action will increase the EOL corruption\n# in the file.\n#\n# Another vector for mixed EOLs is scripts.  We mostly don't have scripts\n# that add new lines -- so we rarely see this.  However, one major event\n# in the tree was the addition of copyright headers using a script.  That\n# script introduced EOL corruption.\n#\n# Any automated EOL normalization of files already in the repository will\n# cause difficulties in traversing histories, assigning blame, etc.  So, we\n# don't want to change what's in the repository significantly, even if it\n# causes trouble.\n#\n# What we do now:\n#\n# a) we ensure that there's no further corruption of LF-files.  So, we use\n#    git's 'crlf' attribute on those files to ensure that things are fine\n#    when we work on Windows.  We could use 'crlf=input', but it doesn't buy\n#    us much -- we might as well be working with consistent EOLs for files in\n#    working directories as well as in the repository\n#\n# b) if the file already of CRLFs, we don't do any normalization.  We use '-crlf'\n#    so that git doesn't do any EOL-conversion of the file.  As I said, this\n#    is mostly harmless on Linux.  We can't mark these files as 'crlf' or use\n#    the new (git 1.7.2) 'eol=crlf' attribute, since it changes the contents\n#    _inside_ the repository [1], and hence makes history traversal annoying.\n#    So, we live with occasional EOL corruption.\n#\n# c) We can handle mixed-EOL files on a case-by-case basis, converting them to\n#    LF- or CRLF-files based on which causes fewer lines to change\n#\n# d) We try to ensure no further headaches, by declaring EOL normalization on\n#    code files, and Unix-flavoured files, like shell-scripts, makefiles, etc.\n#\n# [1] GIT use LFs as the normalized internal representation.\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.775390625,
          "content": "##############################################################################\n# General\n##############################################################################\n\n# OS junk files\n[Tt]humbs.db\n*.DS_Store\n\n# Visual Studio / MonoDevelop\n*.[Oo]bj\n*.exe\n*.dll\n*.pdb\n*.user\n*.aps\n*.pch\n*.vspscc\n*.vssscc\n*_i.c\n*_p.c\n*.mdb\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.ilk\n*.lib\n*.sbr\n*.sdf\n*.opensdf\n*.resources\n*.res\nipch/\nobj/\n[Bb]in\n[Dd]ebug*/\n[Rr]elease*/\nAnkh.NoLoad\n*.gpState\n.vscode/\n*.exp\n.vs/\n\n# Tooling\n_ReSharper*/\n*.resharper\n.idea/*\n[Tt]est[Rr]esult*\n*.orig\n*.rej\n\n# NuGet packages\n!.nuget/*\n[Pp]ackages/*\n![Pp]ackages/repositories.config\n\n# Temporary Files\n~.*\n~$*\n\n# Autotools-generated files\n/Makefile\nMakefile.in\naclocal.m4\nautom4te.cache\n/build/\nconfig.cache\nconfig.guess\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfig.sub\nconfigure\nconfigure.scan\ncygconfig.h\ndepcomp\ninstall-sh\nlibtool\nltmain.sh\nmissing\nmkinstalldirs\nreleases\nstamp-h\nstamp-h1\nstamp-h.in\n/test-driver\n*~\n*.swp\n*.o\n*.dylib\n.deps\n.libs\n\n# Libtool\nlibtool.m4\nlt~obsolete.m4\nltoptions.m4\nltsugar.m4\nltversion.m4\n\n# Dolt (libtool replacement)\ndoltlibtool\ndoltcompile\n\n# pkg-config\n*.pc\n\n# Emacs\nsemantic.cache\n\n# gtags\nGPATH\nGRTAGS\nGSYMS\nGTAGS\n\n# Doxygen\ndocs/doxygen*\ndocs/perlmod*\n\n\n##############################################################################\n# Mono-specific patterns\n##############################################################################\n\n.dirstamp\ncompile\nmono.h\nmono-*.tar.*\nmono_crash*\ntmpinst-dir.stamp\nextensions-config.h\n*.dylib.dSYM\n*.mlpd\nllvm/build/\nllvm/usr/\nmcs/build/compiler-server.log\n\n##############################################################################\n# Arcade output directories\n##############################################################################\n\n.packages\nartifacts\n.dotnet\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.453125,
          "content": "[submodule \"external/aspnetwebstack\"]\n\tpath = external/aspnetwebstack\n\turl = https://github.com/mono/aspnetwebstack.git\n[submodule \"external/Newtonsoft.Json\"]\n\tpath = external/Newtonsoft.Json\n\turl = https://github.com/mono/Newtonsoft.Json.git\n[submodule \"external/cecil\"]\n\tpath = external/cecil\n\turl = https://github.com/mono/cecil.git\n[submodule \"external/rx\"]\n\tpath = external/rx\n\turl = https://github.com/mono/rx.git\n\tbranch = rx-oss-v2.2\n[submodule \"external/ikvm\"]\n\tpath = external/ikvm\n\turl = https://github.com/mono/ikvm-fork.git\n[submodule \"external/ikdasm\"]\n\tpath = external/ikdasm\n\turl = https://github.com/mono/ikdasm.git\n[submodule \"external/reference-assemblies\"]\n\tpath = external/binary-reference-assemblies\n\turl = https://github.com/mono/reference-assemblies.git\n[submodule \"external/nunit-lite\"]\n\tpath = external/nunit-lite\n\turl = https://github.com/mono/NUnitLite.git\n[submodule \"external/nuget-buildtasks\"]\n\tpath = external/nuget-buildtasks\n\turl = https://github.com/mono/NuGet.BuildTasks\n[submodule \"external/cecil-legacy\"]\n\tpath = external/cecil-legacy\n\turl = https://github.com/mono/cecil.git\n\tbranch = mono-legacy-0.9.5\n[submodule \"external/boringssl\"]\n\tpath = external/boringssl\n\turl = https://github.com/mono/boringssl.git\n\tbranch = mono\n[submodule \"external/corefx\"]\n\tpath = external/corefx\n\turl = https://github.com/mono/corefx.git\n[submodule \"external/bockbuild\"]\n\tpath = external/bockbuild\n\turl = https://github.com/mono/bockbuild.git\n[submodule \"external/linker\"]\n\tpath = external/linker\n\turl = https://github.com/mono/linker.git\n[submodule \"external/roslyn-binaries\"]\n\tpath = external/roslyn-binaries\n\turl = https://github.com/mono/roslyn-binaries.git\n[submodule \"external/corert\"]\n\tpath = external/corert\n\turl = https://github.com/mono/corert.git\n[submodule \"external/xunit-binaries\"]\n\tpath = external/xunit-binaries\n\turl = https://github.com/mono/xunit-binaries.git\n[submodule \"external/api-doc-tools\"]\n\tpath = external/api-doc-tools\n\turl = https://github.com/mono/api-doc-tools.git\n[submodule \"external/api-snapshot\"]\n\tpath = external/api-snapshot\n\turl = https://github.com/mono/api-snapshot.git\n[submodule \"external/illinker-test-assets\"]\n\tpath = external/illinker-test-assets\n\turl = https://github.com/mono/illinker-test-assets.git\n[submodule \"external/llvm-project\"]\n\tpath = external/llvm-project\n\turl = https://github.com/dotnet/llvm-project.git\n\tbranch = release/6.x\n[submodule \"external/bdwgc\"]\n\tpath = external/bdwgc\n\turl = https://github.com/Unity-Technologies/bdwgc.git\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYING.LIB",
          "type": "blob",
          "size": 0.064453125,
          "content": "See LICENSE file in the project root for full license information."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 71.748046875,
          "content": "\nIn general, the runtime and its class libraries are licensed under the\nterms of the MIT license, and some third party code is licensed under\nthe 3-clause BSD license.  See the file \"PATENTS.TXT\" for Microsoft's\npatent grant on the Mono codebase.\n\nThe Mono distribution does include a handful of pieces of code that\nare used during the build system and are covered under different\nlicenses, those include:\n\nBuild Time Code\n===============\n\nThis is code that is used at build time, or during the maintenance of\nMono itself, and does not end up in the redistributable part of Mono:\n\n* gettext\n\n  m4 source files used to probe features at build time: GPL\n\n* Benchmark Source Files\n\n  Logic.cs and zipmark.cs are GPL source files.\n\n* mono/docs/HtmlAgilityPack\n\n  MS-PL licensed\n\n* mcs/jay: 4-clause BSD licensed\n\n* mcs/class/I18N/mklist.sh, tools/cvt.sh: GNU GPLv2\n\nRuntime Code\n============\n\nThe following code is linked with the final Mono runtime, the libmono\nembeddable runtime:\n\n* support/minizip: BSD license.\n\n* mono/utils/memcheck.h: BSD license, used on debug builds that use Valgrind.\n\n* mono/utils/freebsd-dwarf.h, freebsd-elf_common.h, freebsd-elf64.h freebsd-elf32.h: BSD license.\n\n* mono/utils/bsearch.c: BSD license.\n\n* mono/metadata/w32file-unix-glob.c, w32file-unix-glob.h: BSD license\n\nClass Library code\n==================\n\nThese are class libraries that can be loaded by your process:\n\n* mcs/class/RabbitMQ.Client: dual licensed in Apache v2, and Mozilla Public License 1.1\n\n* mcs/class/Compat.ICSharpCode.SharpZipLib and\n  mcs/class/ICSharpCode.SharpZipLib are GPL with class-path exception.\n  Originates with the SharpDevelop project.\n\n* mcs/class/System.Core/System/TimeZoneInfo.Android.cs\n\n  This is a port of Apache 2.0-licensed Android code, and thus is\n  licensed under the Apache 2.0 license\n\n\t    http://www.apache.org/licenses/LICENSE-2.0\n\nAPI Documentation\n=================\n\nThe API documentation is licensed under the terms of the Creative\nCommons Attribution 4.0 International Public License\n\n\nThe Licenses\n============\n\n\tThese are the licenses used in Mono, the files are located:\n\n### MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n### Mozilla.MPL\n\n                          MOZILLA PUBLIC LICENSE\n                                Version 1.1\n\n                              ---------------\n\n1. Definitions.\n\n     1.0.1. \"Commercial Use\" means distribution or otherwise making the\n     Covered Code available to a third party.\n\n     1.1. \"Contributor\" means each entity that creates or contributes to\n     the creation of Modifications.\n\n     1.2. \"Contributor Version\" means the combination of the Original\n     Code, prior Modifications used by a Contributor, and the Modifications\n     made by that particular Contributor.\n\n     1.3. \"Covered Code\" means the Original Code or Modifications or the\n     combination of the Original Code and Modifications, in each case\n     including portions thereof.\n\n     1.4. \"Electronic Distribution Mechanism\" means a mechanism generally\n     accepted in the software development community for the electronic\n     transfer of data.\n\n     1.5. \"Executable\" means Covered Code in any form other than Source\n     Code.\n\n     1.6. \"Initial Developer\" means the individual or entity identified\n     as the Initial Developer in the Source Code notice required by Exhibit\n     A.\n\n     1.7. \"Larger Work\" means a work which combines Covered Code or\n     portions thereof with code not governed by the terms of this License.\n\n     1.8. \"License\" means this document.\n\n     1.8.1. \"Licensable\" means having the right to grant, to the maximum\n     extent possible, whether at the time of the initial grant or\n     subsequently acquired, any and all of the rights conveyed herein.\n\n     1.9. \"Modifications\" means any addition to or deletion from the\n     substance or structure of either the Original Code or any previous\n     Modifications. When Covered Code is released as a series of files, a\n     Modification is:\n          A. Any addition to or deletion from the contents of a file\n          containing Original Code or previous Modifications.\n\n          B. Any new file that contains any part of the Original Code or\n          previous Modifications.\n\n     1.10. \"Original Code\" means Source Code of computer software code\n     which is described in the Source Code notice required by Exhibit A as\n     Original Code, and which, at the time of its release under this\n     License is not already Covered Code governed by this License.\n\n     1.10.1. \"Patent Claims\" means any patent claim(s), now owned or\n     hereafter acquired, including without limitation,  method, process,\n     and apparatus claims, in any patent Licensable by grantor.\n\n     1.11. \"Source Code\" means the preferred form of the Covered Code for\n     making modifications to it, including all modules it contains, plus\n     any associated interface definition files, scripts used to control\n     compilation and installation of an Executable, or source code\n     differential comparisons against either the Original Code or another\n     well known, available Covered Code of the Contributor's choice. The\n     Source Code can be in a compressed or archival form, provided the\n     appropriate decompression or de-archiving software is widely available\n     for no charge.\n\n     1.12. \"You\" (or \"Your\")  means an individual or a legal entity\n     exercising rights under, and complying with all of the terms of, this\n     License or a future version of this License issued under Section 6.1.\n     For legal entities, \"You\" includes any entity which controls, is\n     controlled by, or is under common control with You. For purposes of\n     this definition, \"control\" means (a) the power, direct or indirect,\n     to cause the direction or management of such entity, whether by\n     contract or otherwise, or (b) ownership of more than fifty percent\n     (50%) of the outstanding shares or beneficial ownership of such\n     entity.\n\n2. Source Code License.\n\n     2.1. The Initial Developer Grant.\n     The Initial Developer hereby grants You a world-wide, royalty-free,\n     non-exclusive license, subject to third party intellectual property\n     claims:\n          (a)  under intellectual property rights (other than patent or\n          trademark) Licensable by Initial Developer to use, reproduce,\n          modify, display, perform, sublicense and distribute the Original\n          Code (or portions thereof) with or without Modifications, and/or\n          as part of a Larger Work; and\n\n          (b) under Patents Claims infringed by the making, using or\n          selling of Original Code, to make, have made, use, practice,\n          sell, and offer for sale, and/or otherwise dispose of the\n          Original Code (or portions thereof).\n\n          (c) the licenses granted in this Section 2.1(a) and (b) are\n          effective on the date Initial Developer first distributes\n          Original Code under the terms of this License.\n\n          (d) Notwithstanding Section 2.1(b) above, no patent license is\n          granted: 1) for code that You delete from the Original Code; 2)\n          separate from the Original Code;  or 3) for infringements caused\n          by: i) the modification of the Original Code or ii) the\n          combination of the Original Code with other software or devices.\n\n     2.2. Contributor Grant.\n     Subject to third party intellectual property claims, each Contributor\n     hereby grants You a world-wide, royalty-free, non-exclusive license\n\n          (a)  under intellectual property rights (other than patent or\n          trademark) Licensable by Contributor, to use, reproduce, modify,\n          display, perform, sublicense and distribute the Modifications\n          created by such Contributor (or portions thereof) either on an\n          unmodified basis, with other Modifications, as Covered Code\n          and/or as part of a Larger Work; and\n\n          (b) under Patent Claims infringed by the making, using, or\n          selling of  Modifications made by that Contributor either alone\n          and/or in combination with its Contributor Version (or portions\n          of such combination), to make, use, sell, offer for sale, have\n          made, and/or otherwise dispose of: 1) Modifications made by that\n          Contributor (or portions thereof); and 2) the combination of\n          Modifications made by that Contributor with its Contributor\n          Version (or portions of such combination).\n\n          (c) the licenses granted in Sections 2.2(a) and 2.2(b) are\n          effective on the date Contributor first makes Commercial Use of\n          the Covered Code.\n\n          (d)    Notwithstanding Section 2.2(b) above, no patent license is\n          granted: 1) for any code that Contributor has deleted from the\n          Contributor Version; 2)  separate from the Contributor Version;\n          3)  for infringements caused by: i) third party modifications of\n          Contributor Version or ii)  the combination of Modifications made\n          by that Contributor with other software  (except as part of the\n          Contributor Version) or other devices; or 4) under Patent Claims\n          infringed by Covered Code in the absence of Modifications made by\n          that Contributor.\n\n3. Distribution Obligations.\n\n     3.1. Application of License.\n     The Modifications which You create or to which You contribute are\n     governed by the terms of this License, including without limitation\n     Section 2.2. The Source Code version of Covered Code may be\n     distributed only under the terms of this License or a future version\n     of this License released under Section 6.1, and You must include a\n     copy of this License with every copy of the Source Code You\n     distribute. You may not offer or impose any terms on any Source Code\n     version that alters or restricts the applicable version of this\n     License or the recipients' rights hereunder. However, You may include\n     an additional document offering the additional rights described in\n     Section 3.5.\n\n     3.2. Availability of Source Code.\n     Any Modification which You create or to which You contribute must be\n     made available in Source Code form under the terms of this License\n     either on the same media as an Executable version or via an accepted\n     Electronic Distribution Mechanism to anyone to whom you made an\n     Executable version available; and if made available via Electronic\n     Distribution Mechanism, must remain available for at least twelve (12)\n     months after the date it initially became available, or at least six\n     (6) months after a subsequent version of that particular Modification\n     has been made available to such recipients. You are responsible for\n     ensuring that the Source Code version remains available even if the\n     Electronic Distribution Mechanism is maintained by a third party.\n\n     3.3. Description of Modifications.\n     You must cause all Covered Code to which You contribute to contain a\n     file documenting the changes You made to create that Covered Code and\n     the date of any change. You must include a prominent statement that\n     the Modification is derived, directly or indirectly, from Original\n     Code provided by the Initial Developer and including the name of the\n     Initial Developer in (a) the Source Code, and (b) in any notice in an\n     Executable version or related documentation in which You describe the\n     origin or ownership of the Covered Code.\n\n     3.4. Intellectual Property Matters\n          (a) Third Party Claims.\n          If Contributor has knowledge that a license under a third party's\n          intellectual property rights is required to exercise the rights\n          granted by such Contributor under Sections 2.1 or 2.2,\n          Contributor must include a text file with the Source Code\n          distribution titled \"LEGAL\" which describes the claim and the\n          party making the claim in sufficient detail that a recipient will\n          know whom to contact. If Contributor obtains such knowledge after\n          the Modification is made available as described in Section 3.2,\n          Contributor shall promptly modify the LEGAL file in all copies\n          Contributor makes available thereafter and shall take other steps\n          (such as notifying appropriate mailing lists or newsgroups)\n          reasonably calculated to inform those who received the Covered\n          Code that new knowledge has been obtained.\n\n          (b) Contributor APIs.\n          If Contributor's Modifications include an application programming\n          interface and Contributor has knowledge of patent licenses which\n          are reasonably necessary to implement that API, Contributor must\n          also include this information in the LEGAL file.\n\n               (c)    Representations.\n          Contributor represents that, except as disclosed pursuant to\n          Section 3.4(a) above, Contributor believes that Contributor's\n          Modifications are Contributor's original creation(s) and/or\n          Contributor has sufficient rights to grant the rights conveyed by\n          this License.\n\n     3.5. Required Notices.\n     You must duplicate the notice in Exhibit A in each file of the Source\n     Code.  If it is not possible to put such notice in a particular Source\n     Code file due to its structure, then You must include such notice in a\n     location (such as a relevant directory) where a user would be likely\n     to look for such a notice.  If You created one or more Modification(s)\n     You may add your name as a Contributor to the notice described in\n     Exhibit A.  You must also duplicate this License in any documentation\n     for the Source Code where You describe recipients' rights or ownership\n     rights relating to Covered Code.  You may choose to offer, and to\n     charge a fee for, warranty, support, indemnity or liability\n     obligations to one or more recipients of Covered Code. However, You\n     may do so only on Your own behalf, and not on behalf of the Initial\n     Developer or any Contributor. You must make it absolutely clear than\n     any such warranty, support, indemnity or liability obligation is\n     offered by You alone, and You hereby agree to indemnify the Initial\n     Developer and every Contributor for any liability incurred by the\n     Initial Developer or such Contributor as a result of warranty,\n     support, indemnity or liability terms You offer.\n\n     3.6. Distribution of Executable Versions.\n     You may distribute Covered Code in Executable form only if the\n     requirements of Section 3.1-3.5 have been met for that Covered Code,\n     and if You include a notice stating that the Source Code version of\n     the Covered Code is available under the terms of this License,\n     including a description of how and where You have fulfilled the\n     obligations of Section 3.2. The notice must be conspicuously included\n     in any notice in an Executable version, related documentation or\n     collateral in which You describe recipients' rights relating to the\n     Covered Code. You may distribute the Executable version of Covered\n     Code or ownership rights under a license of Your choice, which may\n     contain terms different from this License, provided that You are in\n     compliance with the terms of this License and that the license for the\n     Executable version does not attempt to limit or alter the recipient's\n     rights in the Source Code version from the rights set forth in this\n     License. If You distribute the Executable version under a different\n     license You must make it absolutely clear that any terms which differ\n     from this License are offered by You alone, not by the Initial\n     Developer or any Contributor. You hereby agree to indemnify the\n     Initial Developer and every Contributor for any liability incurred by\n     the Initial Developer or such Contributor as a result of any such\n     terms You offer.\n\n     3.7. Larger Works.\n     You may create a Larger Work by combining Covered Code with other code\n     not governed by the terms of this License and distribute the Larger\n     Work as a single product. In such a case, You must make sure the\n     requirements of this License are fulfilled for the Covered Code.\n\n4. Inability to Comply Due to Statute or Regulation.\n\n     If it is impossible for You to comply with any of the terms of this\n     License with respect to some or all of the Covered Code due to\n     statute, judicial order, or regulation then You must: (a) comply with\n     the terms of this License to the maximum extent possible; and (b)\n     describe the limitations and the code they affect. Such description\n     must be included in the LEGAL file described in Section 3.4 and must\n     be included with all distributions of the Source Code. Except to the\n     extent prohibited by statute or regulation, such description must be\n     sufficiently detailed for a recipient of ordinary skill to be able to\n     understand it.\n\n5. Application of this License.\n\n     This License applies to code to which the Initial Developer has\n     attached the notice in Exhibit A and to related Covered Code.\n\n6. Versions of the License.\n\n     6.1. New Versions.\n     Netscape Communications Corporation (\"Netscape\") may publish revised\n     and/or new versions of the License from time to time. Each version\n     will be given a distinguishing version number.\n\n     6.2. Effect of New Versions.\n     Once Covered Code has been published under a particular version of the\n     License, You may always continue to use it under the terms of that\n     version. You may also choose to use such Covered Code under the terms\n     of any subsequent version of the License published by Netscape. No one\n     other than Netscape has the right to modify the terms applicable to\n     Covered Code created under this License.\n\n     6.3. Derivative Works.\n     If You create or use a modified version of this License (which you may\n     only do in order to apply it to code which is not already Covered Code\n     governed by this License), You must (a) rename Your license so that\n     the phrases \"Mozilla\", \"MOZILLAPL\", \"MOZPL\", \"Netscape\",\n     \"MPL\", \"NPL\" or any confusingly similar phrase do not appear in your\n     license (except to note that your license differs from this License)\n     and (b) otherwise make it clear that Your version of the license\n     contains terms which differ from the Mozilla Public License and\n     Netscape Public License. (Filling in the name of the Initial\n     Developer, Original Code or Contributor in the notice described in\n     Exhibit A shall not of themselves be deemed to be modifications of\n     this License.)\n\n7. DISCLAIMER OF WARRANTY.\n\n     COVERED CODE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS\" BASIS,\n     WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,\n     WITHOUT LIMITATION, WARRANTIES THAT THE COVERED CODE IS FREE OF\n     DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING.\n     THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED CODE\n     IS WITH YOU. SHOULD ANY COVERED CODE PROVE DEFECTIVE IN ANY RESPECT,\n     YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE\n     COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER\n     OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n     ANY COVERED CODE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n\n8. TERMINATION.\n\n     8.1.  This License and the rights granted hereunder will terminate\n     automatically if You fail to comply with terms herein and fail to cure\n     such breach within 30 days of becoming aware of the breach. All\n     sublicenses to the Covered Code which are properly granted shall\n     survive any termination of this License. Provisions which, by their\n     nature, must remain in effect beyond the termination of this License\n     shall survive.\n\n     8.2.  If You initiate litigation by asserting a patent infringement\n     claim (excluding declatory judgment actions) against Initial Developer\n     or a Contributor (the Initial Developer or Contributor against whom\n     You file such action is referred to as \"Participant\")  alleging that:\n\n     (a)  such Participant's Contributor Version directly or indirectly\n     infringes any patent, then any and all rights granted by such\n     Participant to You under Sections 2.1 and/or 2.2 of this License\n     shall, upon 60 days notice from Participant terminate prospectively,\n     unless if within 60 days after receipt of notice You either: (i)\n     agree in writing to pay Participant a mutually agreeable reasonable\n     royalty for Your past and future use of Modifications made by such\n     Participant, or (ii) withdraw Your litigation claim with respect to\n     the Contributor Version against such Participant.  If within 60 days\n     of notice, a reasonable royalty and payment arrangement are not\n     mutually agreed upon in writing by the parties or the litigation claim\n     is not withdrawn, the rights granted by Participant to You under\n     Sections 2.1 and/or 2.2 automatically terminate at the expiration of\n     the 60 day notice period specified above.\n\n     (b)  any software, hardware, or device, other than such Participant's\n     Contributor Version, directly or indirectly infringes any patent, then\n     any rights granted to You by such Participant under Sections 2.1(b)\n     and 2.2(b) are revoked effective as of the date You first made, used,\n     sold, distributed, or had made, Modifications made by that\n     Participant.\n\n     8.3.  If You assert a patent infringement claim against Participant\n     alleging that such Participant's Contributor Version directly or\n     indirectly infringes any patent where such claim is resolved (such as\n     by license or settlement) prior to the initiation of patent\n     infringement litigation, then the reasonable value of the licenses\n     granted by such Participant under Sections 2.1 or 2.2 shall be taken\n     into account in determining the amount or value of any payment or\n     license.\n\n     8.4.  In the event of termination under Sections 8.1 or 8.2 above,\n     all end user license agreements (excluding distributors and resellers)\n     which have been validly granted by You or any distributor hereunder\n     prior to termination shall survive termination.\n\n9. LIMITATION OF LIABILITY.\n\n     UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n     (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL\n     DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED CODE,\n     OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR\n     ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY\n     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL,\n     WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n     COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n     INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n     LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY\n     RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT APPLICABLE LAW\n     PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE\n     EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO\n     THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n\n10. U.S. GOVERNMENT END USERS.\n\n     The Covered Code is a \"commercial item,\" as that term is defined in\n     48 C.F.R. 2.101 (Oct. 1995), consisting of \"commercial computer\n     software\" and \"commercial computer software documentation,\" as such\n     terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48\n     C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995),\n     all U.S. Government End Users acquire Covered Code with only those\n     rights set forth herein.\n\n11. MISCELLANEOUS.\n\n     This License represents the complete agreement concerning subject\n     matter hereof. If any provision of this License is held to be\n     unenforceable, such provision shall be reformed only to the extent\n     necessary to make it enforceable. This License shall be governed by\n     California law provisions (except to the extent applicable law, if\n     any, provides otherwise), excluding its conflict-of-law provisions.\n     With respect to disputes in which at least one party is a citizen of,\n     or an entity chartered or registered to do business in the United\n     States of America, any litigation relating to this License shall be\n     subject to the jurisdiction of the Federal Courts of the Northern\n     District of California, with venue lying in Santa Clara County,\n     California, with the losing party responsible for costs, including\n     without limitation, court costs and reasonable attorneys' fees and\n     expenses. The application of the United Nations Convention on\n     Contracts for the International Sale of Goods is expressly excluded.\n     Any law or regulation which provides that the language of a contract\n     shall be construed against the drafter shall not apply to this\n     License.\n\n12. RESPONSIBILITY FOR CLAIMS.\n\n     As between Initial Developer and the Contributors, each party is\n     responsible for claims and damages arising, directly or indirectly,\n     out of its utilization of rights under this License and You agree to\n     work with Initial Developer and Contributors to distribute such\n     responsibility on an equitable basis. Nothing herein is intended or\n     shall be deemed to constitute any admission of liability.\n\n13. MULTIPLE-LICENSED CODE.\n\n     Initial Developer may designate portions of the Covered Code as\n     \"Multiple-Licensed\".  \"Multiple-Licensed\" means that the Initial\n     Developer permits you to utilize portions of the Covered Code under\n     Your choice of the NPL or the alternative licenses, if any, specified\n     by the Initial Developer in the file described in Exhibit A.\n\nEXHIBIT A -Mozilla Public License.\n\n     ``The contents of this file are subject to the Mozilla Public License\n     Version 1.1 (the \"License\"); you may not use this file except in\n     compliance with the License. You may obtain a copy of the License at\n     http://www.mozilla.org/MPL/\n\n     Software distributed under the License is distributed on an \"AS IS\"\n     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n     License for the specific language governing rights and limitations\n     under the License.\n\n     The Original Code is ______________________________________.\n\n     The Initial Developer of the Original Code is ________________________.\n     Portions created by ______________________ are Copyright (C) ______\n     _______________________. All Rights Reserved.\n\n     Contributor(s): ______________________________________.\n\n     Alternatively, the contents of this file may be used under the terms\n     of the _____ license (the  \"[___] License\"), in which case the\n     provisions of [______] License are applicable instead of those\n     above.  If you wish to allow use of your version of this file only\n     under the terms of the [____] License and not to allow others to use\n     your version of this file under the MPL, indicate your decision by\n     deleting  the provisions above and replace  them with the notice and\n     other provisions required by the [___] License.  If you do not delete\n     the provisions above, a recipient may use your version of this file\n     under either the MPL or the [___] License.\"\n\n     [NOTE: The text of this Exhibit A may differ slightly from the text of\n     the notices in the Source Code files of the Original Code. You should\n     use the text of this Exhibit A rather than the text found in the\n     Original Code Source Code for Your Modifications.]\n\n### Microsoft Public License\n\nMicrosoft Permissive License (Ms-PL)\n \n\tThis license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the license, do not use the software.\n \n1. Definitions\n\n\tThe terms reproduce, reproduction, derivative works, and distribution have the same meaning here as under U.S. copyright law.\n\tA contribution is the original software, or any additions or changes to the software.\n\tA contributor is any person that distributes its contribution under this license.\n\t Licensed patents are a contributors patent claims that read directly on its contribution.\n \n2. Grant of Rights\n\n\t(A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free copyright license to reproduce its contribution, prepare derivative works of its contribution, and distribute its contribution or any derivative works that you create.\n\t(B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed patents to make, have made, use, sell, offer for sale, import, and/or otherwise dispose of its contribution in the software or derivative works of the contribution in the software.\n \n3. Conditions and Limitations\n\n\t(A) No Trademark License- This license does not grant you rights to use any contributors name, logo, or trademarks.\n\t(B) If you bring a patent claim against any contributor over patents that you claim are infringed by the software, your patent license from such contributor to the software ends automatically.\n\t(C) If you distribute any portion of the software, you must retain all copyright, patent, trademark, and attribution notices that are present in the software.\n\t(D) If you distribute any portion of the software in source code form, you may do so only under this license by including a complete copy of this license with your distribution. If you distribute any portion of the software in compiled or object code form, you may only do so under a license that complies with this license.\n\t(E) The software is licensed as-is. You bear the risk of using it. The contributors give no express warranties, guarantees or conditions. You may have additional consumer rights under your local laws which this license cannot change. To the extent permitted under your local laws, the contributors exclude the implied warranties of merchantability, fitness for a particular purpose and non-infringement.\n\t(F) If you distribute the software or derivative works with programs you develop, you agree to indemnify, defend, and hold harmless all contributors from any claims, including attorneys fees, related to the distribution or use of your programs.  For clarity, you have no such obligations to a contributor for any claims based solely on the unmodified contributions of that contributor.\n\t(G) If you make any additions or changes to the original software, you may only distribute them under a new namespace.  In addition, you will clearly identify your changes or additions as your own.\n\n### Infozip BSD\n\nThis is version 2009-Jan-02 of the Info-ZIP license. The definitive\nversion of this document should be available at\nftp://ftp.info-zip.org/pub/infozip/license.html indefinitely and a\ncopy at http://www.info-zip.org/pub/infozip/license.html.\n\nCopyright (c) 1990-2009 Info-ZIP. All rights reserved.\n\nFor the purposes of this copyright and license, \"Info-ZIP\" is defined\nas the following set of individuals: Mark Adler, John Bush, Karl\nDavis, Harald Denker, Jean-Michel Dubois, Jean-loup Gailly, Hunter\nGoatley, Ed Gordon, Ian Gorman, Chris Herborth, Dirk Haase, Greg\nHartwig, Robert Heath, Jonathan Hudson, Paul Kienitz, David\nKirschbaum, Johnny Lee, Onno van der Linden, Igor Mandrichenko, Steve\nP. Miller, Sergio Monesi, Keith Owens, George Petrov, Greg Roelofs,\nKai Uwe Rommel, Steve Salisbury, Dave Smith, Steven M. Schweda,\nChristian Spieler, Cosmin Truta, Antoine Verheijen, Paul von Behren,\nRich Wales, Mike White.\n\nThis software is provided \"as is,\" without warranty of any kind,\nexpress or implied. In no event shall Info-ZIP or its contributors be\nheld liable for any direct, indirect, incidental, special or\nconsequential damages arising out of the use of or inability to use\nthis software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the above disclaimer and the following\nrestrictions:\n\nRedistributions of source code (in whole or in part) must retain the\nabove copyright notice, definition, disclaimer, and this list of\nconditions.\n\nRedistributions in binary form (compiled executables and libraries)\nmust reproduce the above copyright notice, definition, disclaimer, and\nthis list of conditions in documentation and/or other materials\nprovided with the distribution. Additional documentation is not needed\nfor executables where a command line license option provides these and\na note regarding this option is in the executable's startup\nbanner. The sole exception to this condition is redistribution of a\nstandard UnZipSFX binary (including SFXWiz) as part of a\nself-extracting archive; that is permitted without inclusion of this\nlicense, as long as the normal SFX banner has not been removed from\nthe binary or disabled.\n\nAltered versions--including, but not limited to, ports to new\noperating systems, existing ports with new graphical interfaces,\nversions with modified or added functionality, and dynamic, shared, or\nstatic library versions not from Info-ZIP--must be plainly marked as\nsuch and must not be misrepresented as being the original source or,\nif binaries, compiled from the original source. Such altered versions\nalso must not be misrepresented as being Info-ZIP releases--including,\nbut not limited to, labeling of the altered versions with the names\n\"Info-ZIP\" (or any variation thereof, including, but not limited to,\ndifferent capitalizations), \"Pocket UnZip,\" \"WiZ\" or \"MacZip\" without\nthe explicit permission of Info-ZIP. Such altered versions are further\nprohibited from misrepresentative use of the Zip-Bugs or Info-ZIP\ne-mail addresses or the Info-ZIP URL(s), such as to imply Info-ZIP\nwill provide support for the altered versions.\n\nInfo-ZIP retains the right to use the names \"Info-ZIP,\" \"Zip,\"\n\"UnZip,\" \"UnZipSFX,\" \"WiZ,\" \"Pocket UnZip,\" \"Pocket Zip,\" and \"MacZip\"\nfor its own source and binary releases.\n\n### License Creative Commons 2.5\n\n// Copyright 2006 James Newton-King\n// http://www.newtonsoft.com\n//\n// This work is licensed under the Creative Commons Attribution 2.5 License\n// http://creativecommons.org/licenses/by/2.5/\n//\n// You are free:\n//    * to copy, distribute, display, and perform the work\n//    * to make derivative works\n//    * to make commercial use of the work\n//\n// Under the following conditions:\n//    * For any reuse or distribution, you must make clear to others the license terms of this work.\n//    * Any of these conditions can be waived if you get permission from the copyright holder.\n\nFrom: james.newtonking@gmail.com [mailto:james.newtonking@gmail.com] On Behalf Of James Newton-King\nSent: Tuesday, June 05, 2007 6:36 AM\nTo: Konstantin Triger\nSubject: Re: Support request by Konstantin Triger for Json.NET\n\nHey Kosta\n\nI think it would be awesome to use Json.NET in Mono for System.Web.Extensions.\n\nThe CC license has the following clause: Any of the above conditions can be waived if you get permission from the copyright holder.\n\nI can waive that statement for you and Mono. Would that be acceptable?\n\n\nRegards,\nJames\n\n### Creative Commons Attribution 4.0 International Public License\n\nAttribution 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n\twiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution 4.0 International Public License\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution 4.0 International Public License (\"Public License\"). To the\nextent this Public License may be interpreted as a contract, You are\ngranted the Licensed Rights in consideration of Your acceptance of\nthese terms and conditions, and the Licensor grants You such rights in\nconsideration of benefits the Licensor receives from making the\nLicensed Material available under these terms and conditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  j. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  k. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part; and\n\n            b. produce, reproduce, and Share Adapted Material.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the “Licensor.” The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n\n### GPL version 2\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 3.1298828125,
          "content": "ACLOCAL_AMFLAGS = -I m4\n\nSUBDIRS = @MONO_SUBDIRS@\nnoinst_SUBDIRS = @MONO_NOINST_SUBDIRS@\nDIST_SUBDIRS = $(SUBDIRS) m4\n\nall: $(update_submodules)\n\nupdate_submodules:\n\t@cd $(srcdir) && scripts/update_submodules.sh\n\n.PHONY: update_submodules\n\nEXTRA_DIST= \\\n\tREADME.md \t\t\\\n\tLICENSE \t\t\\\n\tautogen.sh \t\t\\\n\tmkinstalldirs \t\t\\\n\tmono-uninstalled.pc.in \t\\\n\twinconfig.h \t\t\\\n\tcode_of_conduct.md \t\\\n\texternal\t\t\\\n\tmcs/class/referencesource\n\nDISTCHECK_CONFIGURE_FLAGS = EXTERNAL_RUNTIME=false\n\n# Distribute the 'mcs' tree too\nGIT_DIR ?= $(srcdir)/.git\ndist-hook:\n\ttest -d $(distdir)/mcs || mkdir $(distdir)/mcs\n\td=`cd $(distdir)/mcs && pwd`; cd $(mcs_topdir) && $(MAKE) distdir=$$d dist-recursive\n\trm -rf `find $(top_distdir)/external -path '*\\.git'`\n\trm -rf `find $(top_distdir)/external -path '*\\.libs'`\n\trm -rf `find $(top_distdir)/external -path '*\\.deps'`\n\trm -f `find $(top_distdir)/external -path '*\\.o'`\n\trm -f `find $(top_distdir)/external -path '*\\.so'`\n\trm -f `find $(top_distdir)/external -path '*\\.lo'`\n\trm -f `find $(top_distdir)/external -path '*\\.Plo'`\n\trm -f `find $(top_distdir)/external -name '\\.dirstamp'`\n\trm -f `find $(top_distdir)/external -path '*\\.exe' -not -path '*/roslyn-binaries/*'`\n\trm -f `find $(top_distdir)/external -path '*\\.dll' -not -path '*/binary-reference-assemblies/*' -not -path '*/roslyn-binaries/*'`\n\trm -rf \"$(top_distdir)/external/linker/test\"\n\trm -rf \"$(top_distdir)/external/llvm-project/lldb/test\"\n\trm -rf \"$(top_distdir)/external/llvm-project/libcxx/test\"\n\trm -rf \"$(top_distdir)/external/llvm-project/clang/test\"\n\npkgconfigdir = $(libdir)/pkgconfig\nnoinst_DATA = mono-uninstalled.pc\nDISTCLEANFILES= mono-uninstalled.pc\n\n# building with monolite\n.PHONY: get-monolite-latest \nget-monolite-latest:\n\t$(MAKE) -C $(mcs_topdir)/class get-monolite-latest\n\nif BITCODE\nBITCODE_CHECK=yes\nendif\n\nif DEFAULT_TESTS\nCI_TEST_SCRIPT=$(srcdir)/scripts/ci/run-test-default.sh\nelse\nCI_TEST_SCRIPT=$(srcdir)/scripts/ci/run-test-$(TEST_PROFILE).sh\nendif\n\n.PHONY: check-ci\ncheck-ci:\n\tMONO_LLVMONLY=$(BITCODE_CHECK) $(CI_TEST_SCRIPT)\n\n.PHONY: validate do-build-mono-mcs mcs-do-clean mcs-do-tests\nvalidate: do-build-mono-mcs\n\t$(MAKE) mcs-do-tests\ndo-build-mono-mcs: mcs-do-clean\n\t$(MAKE) all\nmcs-do-clean:\n\tcd runtime && $(MAKE) clean-local\n\tcd mono/tests && $(MAKE) clean\nmcs-do-tests:\n\tcd runtime && $(MAKE) check-local\n\tcd mono/tests && $(MAKE) check\n\n.PHONY: compiler-tests mcs-do-compiler-tests\ncompiler-tests:\n\t$(MAKE) test_select='TEST_SUBDIRS=\"tests errors\"' validate\nmcs-do-compiler-tests:\n\t$(MAKE) test_select='TEST_SUBDIRS=\"tests errors\"' mcs-do-tests\n\n.PHONY: bootstrap-world\nbootstrap-world: compiler-tests\n\t$(MAKE) install\n\ninstall:\n\tfor mydir in $(filter-out $(noinst_SUBDIRS),$(SUBDIRS)); do \\\n\t  (cd $${mydir} && ${MAKE} install) \\\n\tdone\n\n# Update llvm version in configure.ac to the output of $LLVM_DIR/bin/llvm-config --version\nupdate-llvm-version:\n\tif test \"x$$LLVM_DIR\" = \"x\"; then echo \"Set the make variable LLVM_DIR to the directory containing the LLVM installation.\"; exit 1; fi\n\tREV=`$(LLVM_DIR)/bin/llvm-config --version` && sed -e \"s,expected_llvm_version=.*,expected_llvm_version=\\\"$$REV\\\",\" < configure.ac > tmp && mv tmp configure.ac && echo \"Version set to $$REV.\"\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.111328125,
          "content": "Release notes for Mono are hosted on the web, please see:\n\n\thttp://www.mono-project.com/docs/about-mono/releases/\n"
        },
        {
          "name": "PATENTS.TXT",
          "type": "blob",
          "size": 2.2490234375,
          "content": "Microsoft Patent Promise for Mono\n\nMicrosoft Corporation and its affiliates (“Microsoft”) promise not to\nassert any Applicable Patents against you for making, using, selling,\noffering for sale, importing, or distributing Mono.\n\nIf you file, maintain, or voluntarily participate in any claim in a\nlawsuit alleging direct or contributory patent infringement by Mono,\nor inducement of patent infringement by Mono, then your rights under\nthis promise will automatically terminate.\n\nThis promise is not an assurance that (i) any Applicable Patents are\nvalid or enforceable or (ii) Mono does not infringe patents or other\nintellectual property rights of any third party. No rights except\nthose expressly stated in this promise are granted, waived or received\nby Microsoft, whether by implication, exhaustion, estoppel or\notherwise. This is a personal promise directly from Microsoft to you,\nand you agree as a condition of benefitting from it that no Microsoft\nrights are received from suppliers, distributors, or otherwise in\nconnection with this promise.\n\nDefinitions:\n\n“Mono” means those portions of the software development technology, as\noriginally distributed by Xamarin, Inc. or the .NET Foundation under\nthe name “Mono,” that implement .NET Framework Functionality, provided\nthat such portions at a minimum implement all of the required parts of\nthe mandatory provisions of Standard ECMA-335 – Common Language\nInfrastructure (CLI).\n\n“.NET Framework Functionality” means any functionality in Microsoft’s\n.NET Framework as described in Microsoft’s API documentation on\nMicrosoft’s MSDN website, including the functionality in\nWindowsbase.dll, but excluding all other functionality in the Windows\nPresentation Foundation component of .NET Framework.\n\n“Applicable Patents” are those patent claims, currently owned by\nMicrosoft and acquired in the future, that are necessarily infringed\nby Mono. For clarity, Applicable Patents do not include any patent\nclaims that are infringed (x) by any underlying or enabling technology\nthat may be used, combined, or distributed in connection with Mono\n(such as hardware, operating systems, or applications that run on\nMono), (y) only as a consequence of modification of Mono, or (z) only\nby the combination of Mono with third party code.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.9580078125,
          "content": "Mono is a software platform designed to allow developers to easily\ncreate cross platform applications.  It is an open source\nimplementation of Microsoft's .NET Framework based on the ECMA\nstandards for C# and the Common Language Runtime.\n\nThe Mono project is part of the [.NET Foundation](https://www.dotnetfoundation.org/)\n\n> [!IMPORTANT]\n> The [Mono Project (mono/mono)]( https://github.com/mono/mono) (‘original mono’) has been an important part of the .NET ecosystem since it was launched in 2001. Microsoft became the steward of the Mono Project when it acquired Xamarin in 2016.\n>\n> The last major release of the Mono Project was in July 2019, with minor patch releases since that time. The last patch release was February 2024.\n>\n> We are happy to announce that the WineHQ organization will be taking over as the stewards of the Mono Project upstream at [wine-mono / Mono · GitLab (winehq.org)](https://gitlab.winehq.org/wine-mono/mono).  Source code in existing [mono/mono](https://github.com/mono/mono) and other repos will remain available, although repos may be archived. Binaries will remain available for up to four years.\n>\n> Microsoft maintains a modern fork of [Mono runtime in the dotnet/runtime repo](https://github.com/dotnet/runtime/tree/main/src/mono) and has been progressively moving workloads to that fork. That work is now complete, and we recommend that active Mono users and maintainers of Mono-based app frameworks migrate to [.NET](https://github.com/dotnet/core) which includes work from this fork.\n>\n> We want to recognize that the Mono Project was the first .NET implementation on Android, iOS, Linux, and other operating systems. The Mono Project was a trailblazer for the .NET platform across many operating systems. It helped make cross-platform .NET a reality and enabled .NET in many new places and we appreciate the work of those who came before us.\n>\n> Thank you to all the Mono developers!\n\nJoin us on [Discord](https://aka.ms/dotnet-discord) in the `#monovm` channel:\n\n<a href=\"https://aka.ms/dotnet-discord\">\n  <img src=\"https://img.shields.io/discord/732297728826277939?style=flat-square&label=Discord&logo=discord&logoColor=white&color=7289DA\">\n</a>\n\n### Contents\n\n1. [Compilation and Installation](#compilation-and-installation)\n2. [Using Mono](#using-mono)\n3. [Directory Roadmap](#directory-roadmap)\n4. [Contributing to Mono](#contributing-to-mono)\n5. [Reporting bugs](#reporting-bugs)\n6. [Configuration Options](#configuration-options)\n7. [Working with Submodules](#working-with-submodules)\n\n### Build Status\n\nPublic CI: [![Azure Pipelines](https://dev.azure.com/dnceng/public/_apis/build/status/mono/mono-ci?branchName=main)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=952&branchName=main)\n\nLegacy Jenkins CI (no longer available publicly):\n\n| OS           | Architecture       | Status                       |\n|--------------|--------------------|------------------------------|\n| Debian 9     | amd64              | [![debian-9-amd64][1]][2]    |\n| Debian 9     | i386               | [![debian-9-i386][3]][4]     |\n| Debian 9     | armel              | [![debian-9-armel][5]][6]    |\n| Debian 9     | armhf              | [![debian-9-armhf][7]][8]    |\n| Debian 9     | arm64              | [![debian-9-arm64][9]][10]   |\n| OS X         | amd64              | [![osx-amd64][11]][12]       |\n| OS X         | i386               | [![osx-i386][13]][14]        |\n| Windows      | amd64              | [![windows-amd64][15]][16]   |\n| Windows      | i386               | [![windows-i386][17]][18]    |\n| CentOS       | s390x (cs)         | [![centos-s390x][19]][20]    |\n| Debian 9     | ppc64el (cs)       | [![debian-9-ppc64el][21]][22]|\n| AIX 6.1      | ppc64 (cs)         | [![aix-ppc64][23]][24]       |\n| FreeBSD 12   | amd64 (cs)         | [![freebsd-amd64][25]][26]   |\n\n_(cs) = community supported architecture_\n\n[1]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-amd64/badge/icon\n[2]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-amd64\n[3]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-i386/badge/icon\n[4]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-i386/\n[5]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armel/badge/icon\n[6]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armel/\n[7]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armhf/badge/icon\n[8]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-armhf/\n[9]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-arm64/badge/icon\n[10]: https://jenkins.mono-project.com/job/test-mono-mainline-linux/label=debian-9-arm64/\n[11]: https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-amd64/badge/icon\n[12]: https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-amd64/\n[13]: https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-i386/badge/icon\n[14]: https://jenkins.mono-project.com/job/test-mono-mainline/label=osx-i386/\n[15]: https://jenkins.mono-project.com/job/z/label=w64/badge/icon\n[16]: https://jenkins.mono-project.com/job/z/label=w64/\n[17]: https://jenkins.mono-project.com/job/z/label=w32/badge/icon\n[18]: https://jenkins.mono-project.com/job/z/label=w32/\n[19]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=centos-s390x/badge/icon\n[20]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=centos-s390x\n[21]: https://jenkins.mono-project.com/job/test-mono-mainline-community-chroot/label=debian-9-ppc64el/badge/icon\n[22]: https://jenkins.mono-project.com/job/test-mono-mainline-community-chroot/label=debian-9-ppc64el\n[23]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=aix-ppc64/badge/icon\n[24]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=aix-ppc64\n[25]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=freebsd-12-amd64/badge/icon\n[26]: https://jenkins.mono-project.com/job/test-mono-mainline-community/label=freebsd-12-amd64\n\nCompilation and Installation\n============================\n\nBuilding the Software\n---------------------\n\nPlease see our guides for building Mono on\n[Mac OS X](https://www.mono-project.com/docs/compiling-mono/mac/),\n[Linux](https://www.mono-project.com/docs/compiling-mono/linux/) and \n[Windows](https://www.mono-project.com/docs/compiling-mono/windows/).\n\nNote that building from Git assumes that you already have Mono installed,\nso please download and [install the latest Mono release](https://www.mono-project.com/download/)\nbefore trying to build from Git. This is required because the Mono build\nrelies on a working Mono C# compiler to compile itself\n(also known as [bootstrapping](https://en.wikipedia.org/wiki/Bootstrapping_(compilers))).\n\nIf you don't have a working Mono installation\n---------------------------------------------\n\nIf you don't have a working Mono installation, you can try a slightly\nmore risky approach: getting the latest version of the 'monolite' distribution,\nwhich contains just enough to run the 'mcs' compiler. You do this with:\n\n    # Run the following line after ./autogen.sh\n    make get-monolite-latest\n\nThis will download and place the files appropriately so that you can then\njust run:\n\n    make\n\nThe build will then use the files downloaded by `make get-monolite-latest`.\n\nTesting and Installation\n------------------------\n\nYou can run the mono and mcs test suites with the command: `make check`.\n\nExpect to find a few test suite failures. As a sanity check, you\ncan compare the failures you got with [https://jenkins.mono-project.com/](https://jenkins.mono-project.com/).\n\nYou can now install mono with: `make install`\n\nYou can verify your installation by using the mono-test-install\nscript, it can diagnose some common problems with Mono's install.\nFailure to follow these steps may result in a broken installation. \n\nUsing Mono\n==========\n\nOnce you have installed the software, you can run a few programs:\n\n* `mono program.exe` runtime engine\n\n* `mcs program.cs` C# compiler\n\n* `monodis program.exe` CIL Disassembler\n\nSee the man pages for mono(1), mcs(1) and monodis(1) for further details.\n\nDirectory Roadmap\n=================\n\n* `acceptance-tests/` - Optional third party test suites used to validate Mono against a wider range of test cases.\n\n* `data/` - Configuration files installed as part of the Mono runtime.\n\n* `docs/` - Technical documents about the Mono runtime.\n\n* `external/` - Git submodules for external libraries (Newtonsoft.Json, ikvm, etc).\n\n* `ikvm-native/` - Glue code for ikvm.\n\n* `libgc/` - The (deprecated) Boehm GC implementation.\n\n* `llvm/` - Utility Makefiles for integrating the Mono LLVM fork.\n\n* `m4/` - General utility Makefiles.\n\n* `man/` - Manual pages for the various Mono commands and programs.\n\n* `mcs/` - The class libraries, compiler and tools\n\n  * `class/` - The class libraries (like System.*, Microsoft.Build, etc.)\n\n  * `mcs/` - The Mono C# compiler written in C#\n\n  * `tools/` - Tools like gacutil, ikdasm, mdoc, etc.\n\n* `mono/` - The core of the Mono Runtime.\n\n  * `arch/` - Architecture specific portions.\n\n  * `benchmark/` - A collection of benchmarks.\n\n  * `btls/` - Build files for the BTLS library which incorporates BoringSSL.\n\n  * `cil/` - Common Intermediate Representation, XML\ndefinition of the CIL bytecodes.\n\n  * `dis/` - CIL executable Disassembler.\n\n  * `eglib/` - Independent implementation of the glib API.\n\n  * `metadata/` - The object system and metadata reader.\n\n  * `mini/` - The Just in Time Compiler.\n\n  * `profiler/` - The profiler implementation.\n\n  * `sgen/` - The SGen Garbage Collector implementation.\n\n  * `tests/` - The main runtime tests.\n\n  * `unit-tests/` - Additional runtime unit tests.\n\n  * `utils/` - Utility functions used across the runtime codebase.\n\n* `msvc/` - Logic for the MSVC / Visual Studio based runtime and BCL build system.\nThe latter is experimental at the moment.\n\n* `packaging/` - Packaging logic for the OS X and Windows Mono packages.\n\n* `po/` - Translation files.\n\n* `runtime/` - A directory that contains the Makefiles that link the\nmono/ and mcs/ build systems.\n\n* `samples/` - Some simple sample programs on uses of the Mono\nruntime as an embedded library.\n\n* `scripts/` - Scripts used to invoke Mono and the corresponding program.\n\n* `support/` - Various support libraries.\n\n* `tools/` - A collection of tools, mostly used during Mono development.\n\nContributing to Mono\n====================\n\nBefore submitting changes to Mono, please review the [contribution\nguidelines](https://www.mono-project.com/community/contributing/).\nPlease pay particular attention to the [Important\nRules](https://www.mono-project.com/community/contributing/#important-rules)\nsection.\n\nReporting bugs\n==============\n\nTo submit bug reports, please [open an issue on the mono GitHub repo](https://github.com/mono/mono/issues/new).\n\nPlease use the search facility to ensure the same bug hasn't already\nbeen submitted and follow our\n[guidelines](https://www.mono-project.com/community/bugs/make-a-good-bug-report/)\non how to make a good bug report.\n\nConfiguration Options\n=====================\n\nThe following are the configuration options that someone building Mono\nmight want to use:\n\n* `--with-sgen=yes,no` - Generational GC support: Used to enable or\ndisable the compilation of a Mono runtime with the SGen garbage\ncollector.\n\n  * On platforms that support it, after building Mono, you will have\nboth a `mono-boehm` binary and a `mono-sgen` binary. `mono-boehm` uses Boehm,\nwhile `mono-sgen` uses the Simple Generational GC.\n\n* `--with-libgc=[included, none]` - Selects the default Boehm\ngarbage collector engine to use.\n\n  * *included*: (*slightly modified Boehm GC*) This is the default\nvalue for the Boehm GC, and it's the most feature complete, it will\nallow Mono to use typed allocations and support the debugger.\n\n  * *none*:\nDisables the inclusion of a Boehm garbage collector.\n\n  * This defaults to `included`.\n\n* `--enable-cooperative-suspend`\n\n  * If you pass this flag the Mono runtime is configured to only use\n  the cooperative mode of the garbage collector.  If you do not pass\n  this flag, then you can control at runtime the use of the\n  cooperative GC mode by setting the `MONO_ENABLE_COOP_SUSPEND` flag.\n  \n* `--with-tls=__thread,pthread`\n\n  * Controls how Mono should access thread local storage,\npthread forces Mono to use the pthread APIs, while\n__thread uses compiler-optimized access to it.\n\n  * Although __thread is faster, it requires support from\nthe compiler, kernel and libc. Old Linux systems do\nnot support with __thread.\n\n  * This value is typically pre-configured and there is no\nneed to set it, unless you are trying to debug a problem.\n\n* `--with-sigaltstack=yes,no`\n\n  * **Experimental**: Use at your own risk, it is known to\ncause problems with garbage collection and is hard to\nreproduce those bugs.\n\n  * This controls whether Mono will install a special\nsignal handler to handle stack overflows. If set to\n`yes`, it will turn stack overflows into the\nStackOverflowException. Otherwise when a stack\noverflow happens, your program will receive a\nsegmentation fault.\n\n  * The configure script will try to detect if your\noperating system supports this. Some older Linux\nsystems do not support this feature, or you might want\nto override the auto-detection.\n\n* `--with-static_mono=yes,no`\n\n  * This controls whether `mono` should link against a\nstatic library (libmono.a) or a shared library\n(libmono.so). \n\n  * This defaults to `yes`, and will improve the performance\nof the `mono` program. \n\n  * This only affects the `mono' binary, the shared\nlibrary libmono.so will always be produced for\ndevelopers that want to embed the runtime in their\napplication.\n\n* `--with-xen-opt=yes,no` - Optimize code for Xen virtualization.\n\n  * It makes Mono generate code which might be slightly\nslower on average systems, but the resulting executable will run\nfaster under the Xen virtualization system.\n\n  * This defaults to `yes`.\n\n* `--with-large-heap=yes,no` - Enable support for GC heaps larger than 3GB.\n\n  * This only applies only to the Boehm garbage collector, the SGen garbage\ncollector does not use this configuration option.\n\n  * This defaults to `no`.\n\n* `--enable-small-config=yes,no` - Enable some tweaks to reduce memory usage\nand disk footprint at the expense of some capabilities.\n\n  * Typically this means that the number of threads that can be created\nis limited (256), that the maximum heap size is also reduced (256 MB)\nand other such limitations that still make mono useful, but more suitable\nto embedded devices (like mobile phones).\n\n  * This defaults to `no`.\n\n* `--with-ikvm-native=yes,no` - Controls whether the IKVM JNI interface library is\nbuilt or not.\n\n  * This is used if you are planning on\nusing the IKVM Java Virtual machine with Mono.\n\n  * This defaults to `yes`.\n\n* `--with-profile4=yes,no` - Whether you want to build the 4.x profile libraries\nand runtime.\n\n  * This defaults to `yes`.\n\n* `--with-libgdiplus=installed,sibling,<path>` - Configure where Mono\nsearches for libgdiplus when running System.Drawing tests.\n\n  * It defaults to `installed`, which means that the\nlibrary is available to Mono through the regular\nsystem setup.\n\n  * `sibling` can be used to specify that a libgdiplus\nthat resides as a sibling of this directory (mono)\nshould be used.\n\n * Or you can specify a path to a libgdiplus.\n\n* `--enable-minimal=LIST`\n\n  * Use this feature to specify optional runtime\ncomponents that you might not want to include.  This\nis only useful for developers embedding Mono that\nrequire a subset of Mono functionality.\n  * The list is a comma-separated list of components that\nshould be removed, these are:\n\n    * `aot`:\nDisables support for the Ahead of Time compilation.\n\n    * `attach`:\nSupport for the Mono.Management assembly and the\nVMAttach API (allowing code to be injected into\na target VM)\n\n    * `com`:\nDisables COM support.\n\n    * `debug`:\nDrop debugging support.\n\n    * `decimal`:\nDisables support for System.Decimal.\n\n    * `full_messages`:\nBy default Mono comes with a full table\nof messages for error codes. This feature\nturns off uncommon error messages and reduces\nthe runtime size.\n\n    * `generics`:\nGenerics support.  Disabling this will not\nallow Mono to run any 2.0 libraries or\ncode that contains generics.\n\n    * `jit`:\nRemoves the JIT engine from the build, this reduces\nthe executable size, and requires that all code\nexecuted by the virtual machine be compiled with\nFull AOT before execution.\n\n    * `large_code`:\nDisables support for large assemblies.\n\n    * `logging`:\nDisables support for debug logging.\n\n    * `pinvoke`:\nSupport for Platform Invocation services,\ndisabling this will drop support for any\nlibraries using DllImport.\n\n    * `portability`:\nRemoves support for MONO_IOMAP, the environment\nvariables for simplifying porting applications that \nare case-insensitive and that mix the Unix and Windows path separators.\n\n    * `profiler`:\nDisables support for the default profiler.\n\n    * `reflection_emit`:\nDrop System.Reflection.Emit support\n\n    * `reflection_emit_save`:\nDrop support for saving dynamically created\nassemblies (AssemblyBuilderAccess.Save) in\nSystem.Reflection.Emit.\n\n    * `shadow_copy`:\nDisables support for AppDomain's shadow copies\n(you can disable this if you do not plan on \nusing appdomains).\n\n    * `simd`:\nDisables support for the Mono.SIMD intrinsics\nlibrary.\n\n    * `ssa`:\nDisables compilation for the SSA optimization\nframework, and the various SSA-based optimizations.\n\n* `--enable-llvm`\n\n  * This enables the use of LLVM as a code generation engine\nfor Mono.  The LLVM code generator and optimizer will be \nused instead of Mono's built-in code generator for both\nJust in Time and Ahead of Time compilations.\n\n  * See https://www.mono-project.com/docs/advanced/mono-llvm/ for the \nfull details and up-to-date information on this feature.\n\n  * You will need to have an LLVM built that Mono can link\nagainst.\n\n* `--enable-big-arrays` - Enable use of arrays with indexes larger\nthan Int32.MaxValue.\n\n  * By default Mono has the same limitation as .NET on\nWin32 and Win64 and limits array indexes to 32-bit\nvalues (even on 64-bit systems).\n\n  * In certain scenarios where large arrays are required,\nyou can pass this flag and Mono will be built to\nsupport 64-bit arrays.\n\n  * This is not the default as it breaks the C embedding\nABI that we have exposed through the Mono development\ncycle.\n\n* `--enable-parallel-mark`\n\n  * Use this option to enable the garbage collector to use\nmultiple CPUs to do its work.  This helps performance\non multi-CPU machines as the work is divided across CPUS.\n\n  * This option is not currently the default on OSX\nas it runs into issues there.\n\n  * This option only applies to the Boehm GC.\n\n* `--enable-dtrace`\n\n  * On Solaris and MacOS X builds a version of the Mono\nruntime that contains DTrace probes and can\nparticipate in the system profiling using DTrace.\n\n* `--disable-dev-random`\n\n  * Mono uses /dev/random to obtain good random data for\nany source that requires random numbers.   If your\nsystem does not support this, you might want to\ndisable it.\n\n  * There are a number of runtime options to control this\nalso, see the man page.\n\n* `--with-csc=roslyn,mcs,default`\n\n  * Use this option to configure which C# compiler to use.  By default\n    the configure script will pick Roslyn, except on platforms where\n    Roslyn does not work (Big Endian systems) where it will pick mcs.\n\n    If you specify \"mcs\", then Mono's C# compiler will be used.  This\n    also allows for a complete bootstrap of Mono's core compiler and\n    core libraries from source.\n\n    If you specify \"roslyn\", then Roslyn's C# compiler will be used.\n    This currently uses Roslyn binaries.\n  \n* `--enable-nacl`\n\n  * This configures the Mono compiler to generate code\nsuitable to be used by Google's Native Client:\nhttps://code.google.com/p/nativeclient/\n\n  * Currently this is used with Mono's AOT engine as\nNative Client does not support JIT engines yet.\n\n* `--enable-wasm`\n\n  * Use this option to configure mono to run on WebAssembly. It will\n    set both host and target to the WebAssembly triplet. This overrides\n    the values passed to `--host` or `--target` and ignored what config.sub guesses.\n\n    This is a workaround to enable usage of old automake versions that don't\n    recognize the wasm triplet.\n\n\nWorking With Submodules\n=======================\n\nMono references several external git submodules, for example\na fork of Microsoft's reference source code that has been altered\nto be suitable for use with the Mono runtime.\n\nThis section describes how to use it.\n\nAn initial clone should be done recursively so all submodules will also be\ncloned in a single pass:\n\n\t$ git clone --recursive git@github.com:mono/mono\n\nOnce cloned, submodules can be updated to pull down the latest changes.\nThis can also be done after an initial non-recursive clone:\n\n\t$ git submodule update --init --recursive\n\nTo pull external changes into a submodule:\n\n\t$ cd <submodule>\n\t$ git pull origin <branch>\n\t$ cd <top-level>\n\t$ git add <submodule>\n\t$ git commit\n\nBy default, submodules are detached because they point to a specific commit.\nUse `git checkout` to move back to a branch before making changes:\n\n\t$ cd <submodule>\n\t$ git checkout <branch>\n\t# work as normal; the submodule is a normal repo\n\t$ git commit/push new changes to the repo (submodule)\n\n\t$ cd <top-level>\n\t$ git add <submodule> # this will record the new commits to the submodule\n\t$ git commit\n\nTo switch the repo of a submodule (this should not be a common or normal thing\nto do at all), first edit `.gitmodules` to point to the new location, then:\n\n\t$ git submodule sync -- <path of the submodule>\n\t$ git submodule update --recursive\n\t$ git checkout <desired new hash or branch>\n\nThe desired output diff is a change in `.gitmodules` to reflect the\nchange in the remote URL, and a change in /<submodule> where you see\nthe desired change in the commit hash.\n\nLicense\n=======\n\nSee the LICENSE file for licensing information, and the PATENTS.TXT\nfile for information about Microsoft's patent grant.\n\nMono Trademark Use Policy\n=========================\n\nThe use of trademarks and logos for Mono can be found [here](https://www.dotnetfoundation.org/legal/mono-tm). \n"
        },
        {
          "name": "THIRD-PARTY-NOTICES.TXT",
          "type": "blob",
          "size": 7.9912109375,
          "content": "\nMono uses third-party libraries or other resources that may be\ndistributed under licenses different than the Mono software.\n\nAttributions and license notices for test cases originally authored by\nthird parties can be found in the respective test directories.\n\nIn the event that we accidentally failed to list a required notice, please\nbring it to our attention. Post an issue or email us:\n\n            dotnet@microsoft.com\n\n The attached notices are provided for information only.\n\nLicense notice for Mono\n-----------------------\n\nNote: multiple license notices are provided that occure in source code.\nThey are equivalent forms of the the MIT license from various copyright holders.\n\n// Dual licensed under the terms of the MIT X11 or GNU GPL\n// Copyright 2003-2011 Novell, Inc.\n// Copyright 2011 Xamarin Inc\n\n/**\n *\n * Copyright 2001-2003 Ximian, Inc\n * Copyright 2003-2010 Novell, Inc.\n * Copyright (C) 2012 Xamarin Inc\n *\n * Licensed under the MIT license. See LICENSE file in the project root for full license information.\n */\n\n/******************************************************************************\n* The MIT License\n* Copyright (c) 2003 Novell Inc.  www.novell.com\n* \n* Permission is hereby granted, free of charge, to any person obtaining  a copy\n* of this software and associated documentation files (the Software), to deal\n* in the Software without restriction, including  without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell \n* copies of the Software, and to  permit persons to whom the Software is \n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in \n* all copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*******************************************************************************/\n\nLicense notice for Apple\n-------------------------\nContent: https://github.com/mono/mono/blob/435f968102d0820ca65d63e1e741e4130b4d1303/support/ios/net/route.h\nLicense: https://opensource.apple.com/apsl/\n\nLicense for GCC\n---------------\n\nLicense: http://gcc.gnu.org/onlinedocs/gcc-4.6.4/libstdc++/manual/manual/license.html\nContent: https://github.com/mono/mono/blob/c398e19d3515c6bbb6046ed014b2095594a15229/mono/mini\nExample: https://github.com/mono/mono/blob/c398e19d3515c6bbb6046ed014b2095594a15229/mono/mini/decompose.c#L967\n\nGCC RUNTIME LIBRARY EXCEPTION\n\nVersion 3.1, 31 March 2009\n\nCopyright (C) 2009 Free Software Foundation, Inc.\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nThis GCC Runtime Library Exception (\"Exception\") is an additional\npermission under section 7 of the GNU General Public License, version\n3 (\"GPLv3\"). It applies to a given file (the \"Runtime Library\") that\nbears a notice placed by the copyright holder of the file stating that\nthe file is governed by GPLv3 along with this Exception.\n\nWhen you use GCC to compile a program, GCC may combine portions of\ncertain GCC header files and runtime libraries with the compiled\nprogram. The purpose of this Exception is to allow compilation of\nnon-GPL (including proprietary) programs to use, in this way, the\nheader files and runtime libraries covered by this Exception.\n\n0. Definitions.\n\nA file is an \"Independent Module\" if it either requires the Runtime\nLibrary for execution after a Compilation Process, or makes use of an\ninterface provided by the Runtime Library, but is not otherwise based\non the Runtime Library.\n\n\"GCC\" means a version of the GNU Compiler Collection, with or without\nmodifications, governed by version 3 (or a specified later version) of\nthe GNU General Public License (GPL) with the option of using any\nsubsequent versions published by the FSF.\n\n\"GPL-compatible Software\" is software whose conditions of propagation,\nmodification and use would permit combination with GCC in accord with\nthe license of GCC.\n\n\"Target Code\" refers to output from any compiler for a real or virtual\ntarget processor architecture, in executable form or suitable for\ninput to an assembler, loader, linker and/or execution\nphase. Notwithstanding that, Target Code does not include data in any\nformat that is used as a compiler intermediate representation, or used\nfor producing a compiler intermediate representation.\n\nThe \"Compilation Process\" transforms code entirely represented in\nnon-intermediate languages designed for human-written code, and/or in\nJava Virtual Machine byte code, into Target Code. Thus, for example,\nuse of source code generators and preprocessors need not be considered\npart of the Compilation Process, since the Compilation Process can be\nunderstood as starting with the output of the generators or\npreprocessors.\n\nA Compilation Process is \"Eligible\" if it is done using GCC, alone or\nwith other GPL-compatible software, or if it is done without using any\nwork based on GCC. For example, using non-GPL-compatible Software to\noptimize any GCC intermediate representations would not qualify as an\nEligible Compilation Process.\n\n1. Grant of Additional Permission.\n\nYou have permission to propagate a work of Target Code formed by\ncombining the Runtime Library with Independent Modules, even if such\npropagation would otherwise violate the terms of GPLv3, provided that\nall Target Code was generated by Eligible Compilation Processes. You\nmay then convey such a combination under terms of your choice,\nconsistent with the licensing of the Independent Modules.\n\n2. No Weakening of GCC Copyleft.\n\nThe availability of this Exception does not imply any general\npresumption that third-party software is unaffected by the copyleft\nrequirements of the license of GCC.\n    \n\nHopefully that text is self-explanatory. If it isn't, you need to speak to your lawyer, or the Free Software Foundation.\n\nLicense notice for Silicon Graphics and HP\n------------------------------------------\n\n/*\n * Copyright (c) 1996-1997\n * Silicon Graphics Computer Systems, Inc.\n *\n * Permission to use, copy, modify, distribute and sell this software\n * and its documentation for any purpose is hereby granted without fee,\n * provided that the above copyright notice appear in all copies and\n * that both that copyright notice and this permission notice appear\n * in supporting documentation.  Silicon Graphics makes no\n * representations about the suitability of this software for any\n * purpose.  It is provided \"as is\" without express or implied warranty.\n *\n * Copyright (c) 2002\n * Hewlett-Packard Company\n *\n * Permission to use, copy, modify, distribute and sell this software\n * and its documentation for any purpose is hereby granted without fee,\n * provided that the above copyright notice appear in all copies and\n * that both that copyright notice and this permission notice appear\n * in supporting documentation.  Hewlett-Packard Company makes no\n * representations about the suitability of this software for any\n * purpose.  It is provided \"as is\" without express or implied warranty.\n */\n\n/*\n * This implements standard-conforming allocators that interact with\n * the garbage collector.  Gc_alloctor<T> allocates garbage-collectable\n * objects of type T.  Traceable_allocator<T> allocates objects that\n * are not temselves garbage collected, but are scanned by the\n * collector for pointers to collectable objects.  Traceable_alloc\n * should be used for explicitly managed STL containers that may\n * point to collectable objects.\n *\n * This code was derived from an earlier version of the GNU C++ standard\n * library, which itself was derived from the SGI STL implementation.\n */\n \n Content: https://github.com/mono/mono/blob/d58dfa185af1d48fb93efdef1d046762f214f0a7/libgc/include/gc_allocator.h\n"
        },
        {
          "name": "acceptance-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "acinclude.m4",
          "type": "blob",
          "size": 5.46875,
          "content": "dnl dolt, a replacement for libtool\ndnl Copyright © 2007-2008 Josh Triplett <josh@freedesktop.org>\ndnl Copying and distribution of this file, with or without modification,\ndnl are permitted in any medium without royalty provided the copyright\ndnl notice and this notice are preserved.\ndnl\ndnl To use dolt, invoke the DOLT macro immediately after the libtool macros.\ndnl Optionally, copy this file into acinclude.m4, to avoid the need to have it\ndnl installed when running autoconf on your project.\n\nAC_DEFUN([DOLT], [\nAC_REQUIRE([AC_CANONICAL_HOST])\n# dolt, a replacement for libtool\n# Josh Triplett <josh@freedesktop.org>\nAC_PATH_PROG(DOLT_BASH, bash)\nAC_MSG_CHECKING([if dolt supports this host])\ndolt_supported=yes\nif test x$DOLT_BASH = x; then\n    dolt_supported=no\nfi\nif test x$GCC != xyes; then\n    dolt_supported=no\nfi\ncase $host in\ni?86-*-linux*|i?86-apple-darwin*|x86_64-*-linux*|powerpc-*-linux*|powerpc64-*-linux* \\\n|amd64-*-freebsd*|i?86-*-freebsd*|ia64-*-freebsd*|arm*-*-linux*|sparc*-*-linux*|mips*-*-linux*|x86_64-apple-darwin*|aarch64*)\n    pic_options='-fPIC'\n    ;;\n?86-pc-cygwin*|i?86-pc-cygwin*|i?86-pc-mingw32*)\n    pic_options='-DDLL_EXPORT'\n    ;;\ni?86-apple-darwin*|arm-apple-darwin*)\n    pic_options='-fno-common'\n    ;;\n*)\n    dolt_supported=no\n    ;;\nesac\nif test x$dolt_supported = xno ; then\n    AC_MSG_RESULT([no, falling back to libtool])\n    LTCOMPILE='$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(COMPILE)'\n    LTCXXCOMPILE='$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXXCOMPILE)'\nelse\n    AC_MSG_RESULT([yes, replacing libtool])\n\ndnl Start writing out doltcompile.\n    cat <<__DOLTCOMPILE__EOF__ >doltcompile\n#!$DOLT_BASH\n__DOLTCOMPILE__EOF__\n    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\nargs=(\"$[]@\")\nfor ((arg=0; arg<${#args@<:@@@:>@}; arg++)) ; do\n    if test x\"${args@<:@$arg@:>@}\" = x-o ; then\n        objarg=$((arg+1))\n        break\n    fi\ndone\nif test x$objarg = x ; then\n    echo 'Error: no -o on compiler command line' 1>&2\n    exit 1\nfi\nlo=\"${args@<:@$objarg@:>@}\"\nobj=\"${lo%.lo}\"\nif test x\"$lo\" = x\"$obj\" ; then\n    echo \"Error: libtool object file name \\\"$lo\\\" does not end in .lo\" 1>&2\n    exit 1\nfi\nobjbase=\"${obj##*/}\"\n__DOLTCOMPILE__EOF__\n\ndnl Write out shared compilation code.\n    if test x$enable_shared = xyes; then\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\nlibobjdir=\"${obj%$objbase}.libs\"\nif test ! -d \"$libobjdir\" ; then\n    mkdir_out=\"$(mkdir \"$libobjdir\" 2>&1)\"\n    mkdir_ret=$?\n    if test \"$mkdir_ret\" -ne 0 && test ! -d \"$libobjdir\" ; then\n\techo \"$mkdir_out\" 1>&2\n        exit $mkdir_ret\n    fi\nfi\npic_object=\"$libobjdir/$objbase.o\"\nargs@<:@$objarg@:>@=\"$pic_object\"\n__DOLTCOMPILE__EOF__\n    cat <<__DOLTCOMPILE__EOF__ >>doltcompile\n\"\\${args@<:@@@:>@}\" $pic_options -DPIC || exit \\$?\n__DOLTCOMPILE__EOF__\n    fi\n\ndnl Write out static compilation code.\ndnl Avoid duplicate compiler output if also building shared objects.\n    if test x$enable_static = xyes; then\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\nnon_pic_object=\"$obj.o\"\nargs@<:@$objarg@:>@=\"$non_pic_object\"\n__DOLTCOMPILE__EOF__\n        if test x$enable_shared = xyes; then\n            cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\n\"${args@<:@@@:>@}\" >/dev/null 2>&1 || exit $?\n__DOLTCOMPILE__EOF__\n        else\n            cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\n\"${args@<:@@@:>@}\" || exit $?\n__DOLTCOMPILE__EOF__\n        fi\n    fi\n\ndnl Write out the code to write the .lo file.\ndnl The second line of the .lo file must match \"^# Generated by .*libtool\"\n    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\n{\necho \"# $lo - a libtool object file\"\necho \"# Generated by doltcompile, not libtool\"\n__DOLTCOMPILE__EOF__\n\n    if test x$enable_shared = xyes; then\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\necho \"pic_object='.libs/${objbase}.o'\"\n__DOLTCOMPILE__EOF__\n    else\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\necho pic_object=none\n__DOLTCOMPILE__EOF__\n    fi\n\n    if test x$enable_static = xyes; then\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\necho \"non_pic_object='${objbase}.o'\"\n__DOLTCOMPILE__EOF__\n    else\n        cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\necho non_pic_object=none\n__DOLTCOMPILE__EOF__\n    fi\n\n    cat <<'__DOLTCOMPILE__EOF__' >>doltcompile\n} > \"$lo\"\n__DOLTCOMPILE__EOF__\n\ndnl Done writing out doltcompile; substitute it for libtool compilation.\n    chmod +x doltcompile\n    LTCOMPILE='$(top_builddir)/doltcompile $(COMPILE)'\n    LTCXXCOMPILE='$(top_builddir)/doltcompile $(CXXCOMPILE)'\n\ndnl automake ignores LTCOMPILE and LTCXXCOMPILE when it has separate CFLAGS for\ndnl a target, so write out a libtool wrapper to handle that case.\ndnl Note that doltlibtool does not handle inferred tags or option arguments\ndnl without '=', because automake does not use them.\n    cat <<__DOLTLIBTOOL__EOF__ > doltlibtool\n#!$DOLT_BASH\n__DOLTLIBTOOL__EOF__\n    cat <<'__DOLTLIBTOOL__EOF__' >>doltlibtool\ntop_builddir_slash=\"${0%%doltlibtool}\"\n: ${top_builddir_slash:=./}\nargs=()\nmodeok=false\ntagok=false\nfor arg in \"$[]@\"; do\n    case \"$arg\" in\n        --silent) ;;\n        --mode=compile) modeok=true ;;\n        --tag=CC|--tag=CXX) tagok=true ;;\n        --quiet) ;;\n        *) args@<:@${#args[@]}@:>@=\"$arg\" ;;\n    esac\ndone\nif $modeok && $tagok ; then\n    . ${top_builddir_slash}doltcompile \"${args@<:@@@:>@}\"\nelse\n    exec ${top_builddir_slash}libtool \"$[]@\"\nfi\n__DOLTLIBTOOL__EOF__\n\ndnl Done writing out doltlibtool; substitute it for libtool.\n    chmod +x doltlibtool\n    LIBTOOL='$(top_builddir)/doltlibtool'\nfi\nAC_SUBST(LTCOMPILE)\nAC_SUBST(LTCXXCOMPILE)\n# end dolt\n])\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 5.416015625,
          "content": "#!/usr/bin/env bash\n# Run this to generate all the initial makefiles, etc.\n# Ripped off from GNOME macros version\n\nDIE=0\n\nsrcdir=`dirname $0`\ntest -z \"$srcdir\" && srcdir=.\n\nif [ -n \"$MONO_PATH\" ]; then\n\t# from -> /mono/lib:/another/mono/lib\n\t# to -> /mono /another/mono\n\tfor i in `echo ${MONO_PATH} | tr \":\" \" \"`; do\n\t\ti=`dirname ${i}`\n\t\tif [ -n \"{i}\" -a -d \"${i}/share/aclocal\" ]; then\n\t\t\tACLOCAL_FLAGS=\"-I ${i}/share/aclocal $ACLOCAL_FLAGS\"\n\t\tfi\n\t\tif [ -n \"{i}\" -a -d \"${i}/bin\" ]; then\n\t\t\tPATH=\"${i}/bin:$PATH\"\n\t\tfi\n\tdone\n\texport PATH\nfi\n\n(autoconf --version) < /dev/null > /dev/null 2>&1 || {\n  echo\n  echo \"**Error**: You must have \\`autoconf' installed to compile Mono.\"\n  echo \"Download the appropriate package for your distribution,\"\n  echo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n  DIE=1\n}\n\nif [ -z \"$LIBTOOLIZE\" ]; then\n  LIBTOOLIZE=`which glibtoolize 2>/dev/null`\n  if [ ! -x \"$LIBTOOLIZE\" ]; then\n    LIBTOOLIZE=`which libtoolize`\n  fi\nfi\n\n(grep \"^AM_PROG_LIBTOOL\" $srcdir/configure.ac >/dev/null) && {\n  ($LIBTOOLIZE --version) < /dev/null > /dev/null 2>&1 || {\n    echo\n    echo \"**Error**: You must have \\`libtoolize' installed to compile Mono.\"\n    echo \"Get ftp://ftp.gnu.org/gnu/libtool/libtool-1.2.tar.gz\"\n    echo \"(or a newer version if it is available)\"\n    DIE=1\n  }\n}\n\ngrep \"^AM_GNU_GETTEXT\" $srcdir/configure.ac >/dev/null && {\n  grep \"sed.*POTFILES\" $srcdir/configure.ac >/dev/null || \\\n  (gettext --version) < /dev/null > /dev/null 2>&1 || {\n    echo\n    echo \"**Error**: You must have \\`gettext' installed to compile Mono.\"\n    echo \"Get ftp://alpha.gnu.org/gnu/gettext-0.10.35.tar.gz\"\n    echo \"(or a newer version if it is available)\"\n    DIE=1\n  }\n}\n\n(automake --version) < /dev/null > /dev/null 2>&1 || {\n  echo\n  echo \"**Error**: You must have \\`automake' installed to compile Mono.\"\n  echo \"Get ftp://ftp.gnu.org/pub/gnu/automake-1.3.tar.gz\"\n  echo \"(or a newer version if it is available)\"\n  DIE=1\n  NO_AUTOMAKE=yes\n}\n\n\n# if no automake, don't bother testing for aclocal\ntest -n \"$NO_AUTOMAKE\" || (aclocal --version) < /dev/null > /dev/null 2>&1 || {\n  echo\n  echo \"**Error**: Missing \\`aclocal'.  The version of \\`automake'\"\n  echo \"installed doesn't appear recent enough.\"\n  echo \"Get ftp://ftp.gnu.org/pub/gnu/automake-1.3.tar.gz\"\n  echo \"(or a newer version if it is available)\"\n  DIE=1\n}\n\nif test \"$DIE\" -eq 1; then\n  exit 1\nfi\n\nif test x$NOCONFIGURE = x && test -z \"$*\"; then\n  echo \"**Warning**: I am going to run \\`configure' with no arguments.\"\n  echo \"If you wish to pass any to it, please specify them on the\"\n  echo \\`$0\\'\" command line.\"\n  echo\nfi\n\nam_opt=\"--add-missing --copy --gnu -Wno-portability -Wno-obsolete\"\n\ncase $CC in\nxlc )\n  am_opt=\"$am_opt --include-deps\";;\nesac\n\n\nif grep \"^AM_PROG_LIBTOOL\" configure.ac >/dev/null; then\n  if test -z \"$NO_LIBTOOLIZE\" ; then \n    echo \"Running libtoolize...\"\n    $LIBTOOLIZE --force --copy\n  fi\nfi\n\n# Parse parameters\nhas_ext_mod=false\next_mod_args=''\nhas_disable_boehm=false\nfor PARAM; do\n    if [[ $PARAM =~ \"--enable-extension-module\" ]] ; then\n        has_ext_mod=true\n        if [[ $PARAM =~ \"=\" ]] ; then\n            ext_mod_args=`echo $PARAM | cut -d= -f2`\n        fi\n    fi\n    if [[ $PARAM =~ \"--disable-boehm\" ]] ; then\n      has_disable_boehm=true\n    fi\ndone\n\n#\n# Plug in the extension module\n#\nif test x$has_ext_mod = xtrue; then\n\tpushd $top_srcdir../mono-extensions/scripts\n\tsh ./prepare-repo.sh $ext_mod_args || exit 1\n\tpopd\nelse\n\tcat mono/mini/Makefile.am.in > mono/mini/Makefile.am\nfi\n\n\necho \"Running aclocal -I m4 -I . $ACLOCAL_FLAGS ...\"\naclocal -Wnone -I m4 -I . $ACLOCAL_FLAGS || {\n  echo\n  echo \"**Error**: aclocal failed. This may mean that you have not\"\n  echo \"installed all of the packages you need, or you may need to\"\n  echo \"set ACLOCAL_FLAGS to include \\\"-I \\$prefix/share/aclocal\\\"\"\n  echo \"for the prefix where you installed the packages whose\"\n  echo \"macros were not found\"\n  exit 1\n}\n\nif grep \"^AC_CONFIG_HEADERS\" configure.ac >/dev/null; then\n  echo \"Running autoheader...\"\n  autoheader || { echo \"**Error**: autoheader failed.\"; exit 1; }\nfi\n\necho \"Running automake $am_opt ...\"\nautomake $am_opt ||\n  { echo \"**Error**: automake failed.\"; exit 1; }\necho \"Running autoconf ...\"\nautoconf || { echo \"**Error**: autoconf failed.\"; exit 1; }\n\n# Update all submodules recursively to ensure everything is checked out\nif test -e $srcdir/scripts/update_submodules.sh; then\n  (cd $srcdir && scripts/update_submodules.sh)\nfi\n\nif test x$has_disable_boehm = xfalse -a -d $srcdir/external/bdwgc; then\n  echo Running external/bdwgc/autogen.sh ...\n  (cd $srcdir/external/bdwgc ; NOCONFIGURE=1 ./autogen.sh \"$@\")\n  echo Done running external/bdwgc/autogen.sh ...\nfi\n\nif test x$MONO_EXTRA_CONFIGURE_FLAGS != x; then\n\techo \"MONO_EXTRA_CONFIGURE_FLAGS is $MONO_EXTRA_CONFIGURE_FLAGS\"\nfi\n\nhost_conf_flag=\nbuild_uname_all=`(uname -a) 2>/dev/null`\ncase \"$build_uname_all\" in\nCYGWIN*)\n  if [[ \"$@\" != *\"--host=\"* ]]; then\n\t  echo \"Missing --host parameter, configure using ./configure --host=i686-w64-mingw32 or --host=x86_64-w64-mingw32\"\n\t  echo \"Falling back using --host=x86_64-w64-mingw32 as default.\"\n    host_conf_flag=\"--host=x86_64-w64-mingw32\"\n  fi\n\t;;\nesac\n\nconf_flags=\"$MONO_EXTRA_CONFIGURE_FLAGS --enable-maintainer-mode --enable-compile-warnings $host_conf_flag\" #--enable-iso-c\n\nif test x$NOCONFIGURE = x; then\n  echo Running $srcdir/configure $conf_flags \"$@\" ...\n  $srcdir/configure $conf_flags \"$@\" \\\n  && echo Now type \\`make\\' to compile $PKG_NAME || exit 1\nelse\n  echo Skipping configure process.\nfi\n"
        },
        {
          "name": "code_of_conduct.md",
          "type": "blob",
          "size": 0.2529296875,
          "content": "# Code of Conduct\n\nThis project has adopted the code of conduct defined by the Contributor Covenant\nto clarify expected behavior in our community.\n\nFor more information, see the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct).\n"
        },
        {
          "name": "config.rpath",
          "type": "blob",
          "size": 18.009765625,
          "content": "#! /bin/sh\n# Output a system dependent set of variables, describing how to set the\n# run time search path of shared libraries in an executable.\n#\n#   Copyright 1996-2010 Free Software Foundation, Inc.\n#   Taken from GNU libtool, 2001\n#   Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n#   This file is free software; the Free Software Foundation gives\n#   unlimited permission to copy and/or distribute it, with or without\n#   modifications, as long as this notice is preserved.\n#\n# The first argument passed to this file is the canonical host specification,\n#    CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or\n#    CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# The environment variables CC, GCC, LDFLAGS, LD, with_gnu_ld\n# should be set by the caller.\n#\n# The set of defined variables is at the end of this script.\n\n# Known limitations:\n# - On IRIX 6.5 with CC=\"cc\", the run time search patch must not be longer\n#   than 256 bytes, otherwise the compiler driver will dump core. The only\n#   known workaround is to choose shorter directory names for the build\n#   directory and/or the installation directory.\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\nshrext=.so\n\nhost=\"$1\"\nhost_cpu=`echo \"$host\" | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\nhost_vendor=`echo \"$host\" | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\nhost_os=`echo \"$host\" | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n\n# Code taken from libtool.m4's _LT_CC_BASENAME.\n\nfor cc_temp in $CC\"\"; do\n  case $cc_temp in\n    compile | *[\\\\/]compile | ccache | *[\\\\/]ccache ) ;;\n    distcc | *[\\\\/]distcc | purify | *[\\\\/]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`echo \"$cc_temp\" | sed -e 's%^.*/%%'`\n\n# Code taken from libtool.m4's _LT_COMPILER_PIC.\n\nwl=\nif test \"$GCC\" = yes; then\n  wl='-Wl,'\nelse\n  case \"$host_os\" in\n    aix*)\n      wl='-Wl,'\n      ;;\n    darwin*)\n      case $cc_basename in\n        xlc*)\n          wl='-Wl,'\n          ;;\n      esac\n      ;;\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      ;;\n    hpux9* | hpux10* | hpux11*)\n      wl='-Wl,'\n      ;;\n    irix5* | irix6* | nonstopux*)\n      wl='-Wl,'\n      ;;\n    newsos6)\n      ;;\n    linux* | k*bsd*-gnu)\n      case $cc_basename in\n        ecc*)\n          wl='-Wl,'\n          ;;\n        icc* | ifort*)\n          wl='-Wl,'\n          ;;\n        lf95*)\n          wl='-Wl,'\n          ;;\n        pgcc | pgf77 | pgf90)\n          wl='-Wl,'\n          ;;\n        ccc*)\n          wl='-Wl,'\n          ;;\n        como)\n          wl='-lopt='\n          ;;\n        *)\n          case `$CC -V 2>&1 | sed 5q` in\n            *Sun\\ C*)\n              wl='-Wl,'\n              ;;\n          esac\n          ;;\n      esac\n      ;;\n    osf3* | osf4* | osf5*)\n      wl='-Wl,'\n      ;;\n    rdos*)\n      ;;\n    solaris*)\n      wl='-Wl,'\n      ;;\n    sunos4*)\n      wl='-Qoption ld '\n      ;;\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      wl='-Wl,'\n      ;;\n    sysv4*MP*)\n      ;;\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      wl='-Wl,'\n      ;;\n    unicos*)\n      wl='-Wl,'\n      ;;\n    uts4*)\n      ;;\n  esac\nfi\n\n# Code taken from libtool.m4's _LT_LINKER_SHLIBS.\n\nhardcode_libdir_flag_spec=\nhardcode_libdir_separator=\nhardcode_direct=no\nhardcode_minus_L=no\n\ncase \"$host_os\" in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\nesac\n\nld_shlibs=yes\nif test \"$with_gnu_ld\" = yes; then\n  # Set some defaults for GNU ld with shared library support. These\n  # are reset later if shared libraries are not supported. Putting them\n  # here allows them to be overridden if necessary.\n  # Unlike libtool, we use -rpath here, not --rpath, since the documented\n  # option of GNU ld is called -rpath, not --rpath.\n  hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n  case \"$host_os\" in\n    aix[3-9]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n        ld_shlibs=no\n      fi\n      ;;\n    amigaos*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports\n      # that the semantics of dynamic libraries on AmigaOS, at least up\n      # to version 4, is to share data among multiple programs linked\n      # with the same dynamic library.  Since this doesn't match the\n      # behavior of shared libraries on other platforms, we cannot use\n      # them.\n      ld_shlibs=no\n      ;;\n    beos*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n        :\n      else\n        ld_shlibs=no\n      fi\n      ;;\n    cygwin* | mingw* | pw32* | cegcc*)\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      hardcode_libdir_flag_spec='-L$libdir'\n      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n        :\n      else\n        ld_shlibs=no\n      fi\n      ;;\n    interix[3-9]*)\n      hardcode_direct=no\n      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'\n      ;;\n    gnu* | linux* | k*bsd*-gnu)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n        :\n      else\n        ld_shlibs=no\n      fi\n      ;;\n    netbsd*)\n      ;;\n    solaris*)\n      if $LD -v 2>&1 | grep 'BFD 2\\.8' > /dev/null; then\n        ld_shlibs=no\n      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n        :\n      else\n        ld_shlibs=no\n      fi\n      ;;\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [01].* | *\\ 2.[0-9].* | *\\ 2.1[0-5].*)\n          ld_shlibs=no\n          ;;\n        *)\n          if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n            hardcode_libdir_flag_spec='`test -z \"$SCOABSPATH\" && echo ${wl}-rpath,$libdir`'\n          else\n            ld_shlibs=no\n          fi\n          ;;\n      esac\n      ;;\n    sunos4*)\n      hardcode_direct=yes\n      ;;\n    *)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n        :\n      else\n        ld_shlibs=no\n      fi\n      ;;\n  esac\n  if test \"$ld_shlibs\" = no; then\n    hardcode_libdir_flag_spec=\n  fi\nelse\n  case \"$host_os\" in\n    aix3*)\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      hardcode_minus_L=yes\n      if test \"$GCC\" = yes; then\n        # Neither direct hardcoding nor static linking is supported with a\n        # broken collect2.\n        hardcode_direct=unsupported\n      fi\n      ;;\n    aix[4-9]*)\n      if test \"$host_cpu\" = ia64; then\n        # On IA64, the linker does run time linking by default, so we don't\n        # have to do anything special.\n        aix_use_runtimelinking=no\n      else\n        aix_use_runtimelinking=no\n        # Test if we are trying to use run time linking or normal\n        # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n        # need to do runtime linking.\n        case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)\n          for ld_flag in $LDFLAGS; do\n            if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n              aix_use_runtimelinking=yes\n              break\n            fi\n          done\n          ;;\n        esac\n      fi\n      hardcode_direct=yes\n      hardcode_libdir_separator=':'\n      if test \"$GCC\" = yes; then\n        case $host_os in aix4.[012]|aix4.[012].*)\n          collect2name=`${CC} -print-prog-name=collect2`\n          if test -f \"$collect2name\" && \\\n            strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n          then\n            # We have reworked collect2\n            :\n          else\n            # We have old collect2\n            hardcode_direct=unsupported\n            hardcode_minus_L=yes\n            hardcode_libdir_flag_spec='-L$libdir'\n            hardcode_libdir_separator=\n          fi\n          ;;\n        esac\n      fi\n      # Begin _LT_AC_SYS_LIBPATH_AIX.\n      echo 'int main () { return 0; }' > conftest.c\n      ${CC} ${LDFLAGS} conftest.c -o conftest\n      aix_libpath=`dump -H conftest 2>/dev/null | sed -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`\n      if test -z \"$aix_libpath\"; then\n        aix_libpath=`dump -HX64 conftest 2>/dev/null | sed -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`\n      fi\n      if test -z \"$aix_libpath\"; then\n        aix_libpath=\"/usr/lib:/lib\"\n      fi\n      rm -f conftest.c conftest\n      # End _LT_AC_SYS_LIBPATH_AIX.\n      if test \"$aix_use_runtimelinking\" = yes; then\n        hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n      else\n        if test \"$host_cpu\" = ia64; then\n          hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'\n        else\n          hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        fi\n      fi\n      ;;\n    amigaos*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      # see comment about different semantics on the GNU ld section\n      ld_shlibs=no\n      ;;\n    bsdi[45]*)\n      ;;\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      hardcode_libdir_flag_spec=' '\n      libext=lib\n      ;;\n    darwin* | rhapsody*)\n      hardcode_direct=no\n      if test \"$GCC\" = yes ; then\n        :\n      else\n        case $cc_basename in\n          xlc*)\n            ;;\n          *)\n            ld_shlibs=no\n            ;;\n        esac\n      fi\n      ;;\n    dgux*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      ;;\n    freebsd1*)\n      ld_shlibs=no\n      ;;\n    freebsd2.2*)\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      ;;\n    freebsd2*)\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      ;;\n    freebsd* | dragonfly*)\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      ;;\n    hpux9*)\n      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n      hardcode_libdir_separator=:\n      hardcode_direct=yes\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      hardcode_minus_L=yes\n      ;;\n    hpux10*)\n      if test \"$with_gnu_ld\" = no; then\n        hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n        hardcode_libdir_separator=:\n        hardcode_direct=yes\n        # hardcode_minus_L: Not really in the search PATH,\n        # but as the default location of the library.\n        hardcode_minus_L=yes\n      fi\n      ;;\n    hpux11*)\n      if test \"$with_gnu_ld\" = no; then\n        hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'\n        hardcode_libdir_separator=:\n        case $host_cpu in\n          hppa*64*|ia64*)\n            hardcode_direct=no\n            ;;\n          *)\n            hardcode_direct=yes\n            # hardcode_minus_L: Not really in the search PATH,\n            # but as the default location of the library.\n            hardcode_minus_L=yes\n            ;;\n        esac\n      fi\n      ;;\n    irix5* | irix6* | nonstopux*)\n      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n      hardcode_libdir_separator=:\n      ;;\n    netbsd*)\n      hardcode_libdir_flag_spec='-R$libdir'\n      hardcode_direct=yes\n      ;;\n    newsos6)\n      hardcode_direct=yes\n      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n      hardcode_libdir_separator=:\n      ;;\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n        hardcode_direct=yes\n        if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n          hardcode_libdir_flag_spec='${wl}-rpath,$libdir'\n        else\n          case \"$host_os\" in\n            openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)\n              hardcode_libdir_flag_spec='-R$libdir'\n              ;;\n            *)\n              hardcode_libdir_flag_spec='${wl}-rpath,$libdir'\n              ;;\n          esac\n        fi\n      else\n        ld_shlibs=no\n      fi\n      ;;\n    os2*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_minus_L=yes\n      ;;\n    osf3*)\n      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n      hardcode_libdir_separator=:\n      ;;\n    osf4* | osf5*)\n      if test \"$GCC\" = yes; then\n        hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'\n      else\n        # Both cc and cxx compiler support -rpath directly\n        hardcode_libdir_flag_spec='-rpath $libdir'\n      fi\n      hardcode_libdir_separator=:\n      ;;\n    solaris*)\n      hardcode_libdir_flag_spec='-R$libdir'\n      ;;\n    sunos4*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      hardcode_direct=yes\n      hardcode_minus_L=yes\n      ;;\n    sysv4)\n      case $host_vendor in\n        sni)\n          hardcode_direct=yes # is this really true???\n          ;;\n        siemens)\n          hardcode_direct=no\n          ;;\n        motorola)\n          hardcode_direct=no #Motorola manual says yes, but my tests say they lie\n          ;;\n      esac\n      ;;\n    sysv4.3*)\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n        ld_shlibs=yes\n      fi\n      ;;\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)\n      ;;\n    sysv5* | sco3.2v5* | sco5v6*)\n      hardcode_libdir_flag_spec='`test -z \"$SCOABSPATH\" && echo ${wl}-R,$libdir`'\n      hardcode_libdir_separator=':'\n      ;;\n    uts4*)\n      hardcode_libdir_flag_spec='-L$libdir'\n      ;;\n    *)\n      ld_shlibs=no\n      ;;\n  esac\nfi\n\n# Check dynamic linker characteristics\n# Code taken from libtool.m4's _LT_SYS_DYNAMIC_LINKER.\n# Unlike libtool.m4, here we don't care about _all_ names of the library, but\n# only about the one the linker finds when passed -lNAME. This is the last\n# element of library_names_spec in libtool.m4, or possibly two of them if the\n# linker has special search rules.\nlibrary_names_spec=      # the last element of library_names_spec in libtool.m4\nlibname_spec='lib$name'\ncase \"$host_os\" in\n  aix3*)\n    library_names_spec='$libname.a'\n    ;;\n  aix[4-9]*)\n    library_names_spec='$libname$shrext'\n    ;;\n  amigaos*)\n    library_names_spec='$libname.a'\n    ;;\n  beos*)\n    library_names_spec='$libname$shrext'\n    ;;\n  bsdi[45]*)\n    library_names_spec='$libname$shrext'\n    ;;\n  cygwin* | mingw* | pw32* | cegcc*)\n    shrext=.dll\n    library_names_spec='$libname.dll.a $libname.lib'\n    ;;\n  darwin* | rhapsody*)\n    shrext=.dylib\n    library_names_spec='$libname$shrext'\n    ;;\n  dgux*)\n    library_names_spec='$libname$shrext'\n    ;;\n  freebsd1*)\n    ;;\n  freebsd* | dragonfly*)\n    case \"$host_os\" in\n      freebsd[123]*)\n        library_names_spec='$libname$shrext$versuffix' ;;\n      *)\n        library_names_spec='$libname$shrext' ;;\n    esac\n    ;;\n  gnu*)\n    library_names_spec='$libname$shrext'\n    ;;\n  hpux9* | hpux10* | hpux11*)\n    case $host_cpu in\n      ia64*)\n        shrext=.so\n        ;;\n      hppa*64*)\n        shrext=.sl\n        ;;\n      *)\n        shrext=.sl\n        ;;\n    esac\n    library_names_spec='$libname$shrext'\n    ;;\n  interix[3-9]*)\n    library_names_spec='$libname$shrext'\n    ;;\n  irix5* | irix6* | nonstopux*)\n    library_names_spec='$libname$shrext'\n    case \"$host_os\" in\n      irix5* | nonstopux*)\n        libsuff= shlibsuff=\n        ;;\n      *)\n        case $LD in\n          *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \") libsuff= shlibsuff= ;;\n          *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \") libsuff=32 shlibsuff=N32 ;;\n          *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \") libsuff=64 shlibsuff=64 ;;\n          *) libsuff= shlibsuff= ;;\n        esac\n        ;;\n    esac\n    ;;\n  linux*oldld* | linux*aout* | linux*coff*)\n    ;;\n  linux* | k*bsd*-gnu)\n    library_names_spec='$libname$shrext'\n    ;;\n  knetbsd*-gnu)\n    library_names_spec='$libname$shrext'\n    ;;\n  netbsd*)\n    library_names_spec='$libname$shrext'\n    ;;\n  newsos6)\n    library_names_spec='$libname$shrext'\n    ;;\n  nto-qnx*)\n    library_names_spec='$libname$shrext'\n    ;;\n  openbsd*)\n    library_names_spec='$libname$shrext$versuffix'\n    ;;\n  os2*)\n    libname_spec='$name'\n    shrext=.dll\n    library_names_spec='$libname.a'\n    ;;\n  osf3* | osf4* | osf5*)\n    library_names_spec='$libname$shrext'\n    ;;\n  rdos*)\n    ;;\n  solaris*)\n    library_names_spec='$libname$shrext'\n    ;;\n  sunos4*)\n    library_names_spec='$libname$shrext$versuffix'\n    ;;\n  sysv4 | sysv4.3*)\n    library_names_spec='$libname$shrext'\n    ;;\n  sysv4*MP*)\n    library_names_spec='$libname$shrext'\n    ;;\n  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n    library_names_spec='$libname$shrext'\n    ;;\n  uts4*)\n    library_names_spec='$libname$shrext'\n    ;;\nesac\n\nsed_quote_subst='s/\\([\"`$\\\\]\\)/\\\\\\1/g'\nescaped_wl=`echo \"X$wl\" | sed -e 's/^X//' -e \"$sed_quote_subst\"`\nshlibext=`echo \"$shrext\" | sed -e 's,^\\.,,'`\nescaped_libname_spec=`echo \"X$libname_spec\" | sed -e 's/^X//' -e \"$sed_quote_subst\"`\nescaped_library_names_spec=`echo \"X$library_names_spec\" | sed -e 's/^X//' -e \"$sed_quote_subst\"`\nescaped_hardcode_libdir_flag_spec=`echo \"X$hardcode_libdir_flag_spec\" | sed -e 's/^X//' -e \"$sed_quote_subst\"`\n\nLC_ALL=C sed -e 's/^\\([a-zA-Z0-9_]*\\)=/acl_cv_\\1=/' <<EOF\n\n# How to pass a linker flag through the compiler.\nwl=\"$escaped_wl\"\n\n# Static library suffix (normally \"a\").\nlibext=\"$libext\"\n\n# Shared library suffix (normally \"so\").\nshlibext=\"$shlibext\"\n\n# Format of library name prefix.\nlibname_spec=\"$escaped_libname_spec\"\n\n# Library names that the linker finds when passed -lNAME.\nlibrary_names_spec=\"$escaped_library_names_spec\"\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist.\nhardcode_libdir_flag_spec=\"$escaped_hardcode_libdir_flag_spec\"\n\n# Whether we need a single -rpath flag with a separated argument.\nhardcode_libdir_separator=\"$hardcode_libdir_separator\"\n\n# Set to yes if using DIR/libNAME.so during linking hardcodes DIR into the\n# resulting binary.\nhardcode_direct=\"$hardcode_direct\"\n\n# Set to yes if using the -LDIR flag during linking hardcodes DIR into the\n# resulting binary.\nhardcode_minus_L=\"$hardcode_minus_L\"\n\nEOF\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 222.15234375,
          "content": "# Process this file with autoconf to produce a configure script.\n#AC_PREREQ([2.62])\n\n# This line is parsed by tools besides autoconf, such as msvc/mono.winconfig.targets.\n# It should remain in the format they expect.\n#\nAC_INIT(mono, [6.13.0],\n        [https://github.com/mono/mono/issues/new])\n\nAC_CONFIG_SRCDIR([Makefile.am])\nAC_CONFIG_MACRO_DIR([m4])\n\nAC_CANONICAL_SYSTEM\nAC_CANONICAL_HOST\n\n# Gross hack to enable 'make dist' on automake 1.9+tar 1.14.\n# The extra brackets are to foil regex-based scans.\nm4_ifdef([_A][M_PROG_TAR],[_A][M_SET_OPTION([tar-ustar])])\n\nAM_INIT_AUTOMAKE([1.9 dist-xz tar-ustar no-dist-gzip foreign subdir-objects]\n                 m4_esyscmd([case `automake --version | head -n 1` in    # parallel-tests is default in automake 1.13+, we need to explicitly enable it\n                             *1.11*|*1.12*) echo parallel-tests;;        # for 1.11 and 1.12 but not below as those versions don't recognize the flag\n                             esac]))                                     # TODO: remove this hack once we require automake 1.11+\n\nAC_CONFIG_HEADERS([config.h])\nAM_MAINTAINER_MODE\nm4_ifdef([AM_EXTRA_RECURSIVE_TARGETS], AM_EXTRA_RECURSIVE_TARGETS([test]))\nm4_ifdef([AM_EXTRA_RECURSIVE_TARGETS], AM_EXTRA_RECURSIVE_TARGETS([test-bundle]))\n\nAPI_VER=2.0\nAC_SUBST(API_VER)\n\nAC_PROG_LN_S\n\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nMONO_VERSION_MAJOR=`echo $VERSION | cut -d . -f 1`\nMONO_VERSION_MINOR=`echo $VERSION | cut -d . -f 2`\nMONO_VERSION_BUILD=`echo $VERSION | cut -d . -f 3`\n\n#\n# This is the version of the corlib-runtime interface. When\n# making changes to this interface (by changing the layout\n# of classes the runtime knows about, changing icall signature or\n# semantics etc), change this variable.\n#\n# This must be unique relative to corlib interface and semantics.\n#\n# If you change corlib such that a runtime change is required, or\n# vice versa, change this string. Examples include removing icalls,\n# adding icalls, changing icall signatures, and changing type layouts\n# that both sides know.\n#\n# It is an arbitrary string and should be parsed as such.\n# A guid works and is encouraged.\n#\n# Generate it with uuidgen. For example:\n# perl -pi.bak -e \"s/^MONO_CORLIB_VERSION=\\S+/MONO_CORLIB_VERSION=`uuidgen`/\" configure.ac\n#\n# There is no ordering of corlib versions, no old or new,\n# an exact match is required between corlib and runtime.\n#\n# This line is parsed by tools besides autoconf, such as msvc/mono.winconfig.targets.\n# It should remain in the format they expect.\n#\nMONO_CORLIB_VERSION=1A5E0066-58DC-428A-B21C-0AD6CDAE2789\n\n#\n# Put a quoted #define in config.h.\n# Substitute @MONO_CORLIB_VERSION@ unquoted.\n#\nAC_DEFINE_UNQUOTED(MONO_CORLIB_VERSION,\"$MONO_CORLIB_VERSION\",[Version of the corlib-runtime interface])\nAC_SUBST(MONO_CORLIB_VERSION)\n\ncase $host_os in\n*cygwin* )\n\t\t echo \"Run configure using ./configure --host=i686-w64-mingw32 or --host=x86_64-w64-mingw32\"\n\t\t exit 1\nesac\n\n# In case of cygwin, override LN_S, irrespective of what it determines.\n# The build uses cygwin, but the actual runtime doesn't.\ncase $host_os in\n*cygwin* ) LN_S='cp -p';;\nesac\n\n#\n# libgc defaults\n#\nlibgc_configure_args=\n\n# These variables are the CPPFLAGS/CFLAGS passed to libgc's configure\n# libgc should inherit the original CFLAGS/CPPFLAGS passed to configure, i.e. -O0\nCPPFLAGS_FOR_LIBGC=$CPPFLAGS\nCFLAGS_FOR_LIBGC=$CFLAGS\nCPPFLAGS_FOR_BTLS=$CPPFLAGS\nCFLAGS_FOR_BTLS=$CFLAGS\n\n# libgc uses some deprecated APIs\nCFLAGS_FOR_LIBGC=\"$CFLAGS -Wno-deprecated-declarations\"\n\n#\n# These are the flags that need to be stored in the mono.pc file for \n# compiling code that will embed Mono\n#\nlibmono_cflags=\"\"\nlibmono_ldflags=\"\"\nAC_SUBST(libmono_cflags)\nAC_SUBST(libmono_ldflags)\n\n# Variable to have relocatable .pc files (lib, or lib64)\n# realpath isn't always available, and requires that all but the tip of the provided\n# path exists. Fall back to the old behaviour, but realpath allows depth >1\n# e.g. Debian puts Mono in /usr/bin and libs in /usr/lib/x86_64-linux-gnu/ which is\n# too deep for the old method to work\nreloc_libdir=`realpath --relative-to=${prefix} ${libdir} 2> /dev/null || basename ${libdir}`\nAC_SUBST(reloc_libdir)\n\n# Set to yes if Unix sockets cannot be created in an anonymous namespace\nneed_link_unlink=no\n\n#Set to extra linker flags to be passed to the runtime binaries (mono /mono-sgen)\nextra_runtime_ldflags=\"\"\n\n# Thread configuration inspired by sleepycat's db\nAC_MSG_CHECKING([host platform characteristics])\n\nlibgc_threads=no\nhas_dtrace=no\nparallel_mark=yes\nikvm_native=yes\n\nhost_win32=no\ntarget_win32=no\ntarget_wasm=no\nplatform_android=no\nplatform_tizen=no\nplatform_ios=no\nhost_darwin=no\nhost_linux=no\nbuild_darwin=no\nhost_sunos=no\n\ncase \"$host\" in\n\twasm32*)\n\t\tCFLAGS=\"$CFLAGS -D_REENTRANT -D_GNU_SOURCE -s WASM=1\"\n\t\tCPPFLAGS=\"$CPPFLAGS -D_REENTRANT -DUSE_MMAP -s WASM=1\"\n\t\tlibgc_threads=pthreads\n\t\thost_wasm=yes\n\t\t# FIXME:\n\t\tRID=\"osx-x64\"\n\t\tCOREARCH=\"wasm32\"\n\t\tCORETARGETS=\"-p:TargetsUnix=true -p:TargetsOSX=true\"\n\t\tbuild_darwin=yes\n\t\t;;\n\t*-mingw*|*-*-cygwin*)\n\t\tAC_DEFINE(DISABLE_PORTABILITY,1,[Disable the io-portability layer])\n\t\tAC_DEFINE(HOST_NO_SYMLINKS,1,[This platform does not support symlinks])\n\t\thost_win32=yes\n\t\tmono_cv_clang=no\n\t\tif test \"x$cross_compiling\" = \"xno\"; then\n\t\t\tif test \"x$host\" = \"x$build\" -a \"x$host\" = \"x$target\"; then\n\t\t\t\ttarget_win32=yes\n\t\t\tfi\n\t\telse\n\t\t\tif test \"x$host\" = \"x$target\"; then\n\t\t\t\ttarget_win32=yes\n\t\t\tfi\n\t\tfi\n\t\tHOST_CC=\"gcc\"\n\t\tRID=\"win-x86\"\n\t\tCORETARGETS=\"-p:TargetsWindows=true\"\n\t\tCOREARCH=\"x86\"\n\t\t# Boehm not supported on 64-bit Windows.\n\t\tcase \"$host\" in\n\t\tx86_64-*-* | amd64-*-*)\n\t\t\twith_gc=sgen\n\t\t\tRID=\"win-x64\"\n\t\t\tCOREARCH=\"x64\"\n\t\t\t;;\n\t\tesac\n\n\t\t# Windows 7 or later is required\n\t\tWIN32_CPPFLAGS=\"-DWINVER=0x0601 -D_WIN32_WINNT=0x0601 -D_WIN32_IE=0x0501 -D_UNICODE -DUNICODE -DWIN32_THREADS -DFD_SETSIZE=1024\"\n\t\tCPPFLAGS=\"$CPPFLAGS $WIN32_CPPFLAGS\"\n\t\tWIN32_LDFLAGS=\"-lbcrypt -lmswsock -lws2_32 -lole32 -loleaut32 -lpsapi -lversion -ladvapi32 -lwinmm -lkernel32 -liphlpapi -static-libgcc\"\n\t\tLDFLAGS=\"$LDFLAGS $WIN32_LDFLAGS\"\n\t\tlibmono_cflags=\"-mms-bitfields -mwindows\"\n\t\tlibmono_ldflags=\"-mms-bitfields -mwindows\"\n\t\tlibgc_threads=win32\n\t\twith_sigaltstack=no\n\t\twith_tls=pthread\n\t\twith_sgen_default_concurrent=yes\n\t\tLN_S=cp\n\t\t;;\n\t*-*-*netbsd*)\n\t\tCPPFLAGS=\"$CPPFLAGS -D_REENTRANT -DGC_NETBSD_THREADS -D_GNU_SOURCE\"\n\t\tlibmono_cflags=\"-D_REENTRANT\"\n\t\tLDFLAGS=\"$LDFLAGS -pthread\"\n\t\tCPPFLAGS=\"$CPPFLAGS -DHOST_BSD\"\n\t\tlibmono_ldflags=\"-pthread\"\n\t\tneed_link_unlink=yes\n\t\tlibgc_threads=pthreads\n\t\twith_sigaltstack=no\n\t\tuse_sigposix=yes\n\t\twith_sgen_default_concurrent=yes\n\t\t;;\n\t*-*-kfreebsd*-gnu)\n\t\tCPPFLAGS=\"$CPPFLAGS -DGC_FREEBSD_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP -DUSE_MUNMAP -DTHREAD_LOCAL_ALLOC -pthread\"\n\t\tlibmono_cflags=\"-D_REENTRANT -DTHREAD_LOCAL_ALLOC -pthread\"\n\t\tlibmono_ldflags=\"-lpthread -pthread\"\n\t\tlibgc_threads=pthreads\n\t\tneed_link_unlink=yes\n\t\twith_sigaltstack=no\n\t\tuse_sigposix=yes\n\t\twith_sgen_default_concurrent=yes\n\t\t;;\n\t*-*-*freebsd*)\n\t\tdnl For close_my_fds\n\t\tLDFLAGS=\"$LDFLAGS -lutil\"\n\t\tif test \"x$PTHREAD_CFLAGS\" = \"x\"; then\n\t\t\tCPPFLAGS=\"$CPPFLAGS -DGC_FREEBSD_THREADS\"\n\t\t\tlibmono_cflags=\n\t\telse\n\t\t\tCPPFLAGS=\"$CPPFLAGS $PTHREAD_CFLAGS -DGC_FREEBSD_THREADS\"\n\t\t\tlibmono_cflags=\"$PTHREAD_CFLAGS\"\n\t\tfi\n\t\tif test \"x$PTHREAD_LIBS\" = \"x\"; then\n\t\t\tLDFLAGS=\"$LDFLAGS -pthread -L/usr/local/lib\"\n\t\t\tlibmono_ldflags=\"-pthread\"\n\t\telse\n\t\t\tLDFLAGS=\"$LDFLAGS $PTHREAD_LIBS -L/usr/local/lib\"\n\t\t\tlibmono_ldflags=\"$PTHREAD_LIBS\"\n\t\tfi\n\t\tCPPFLAGS=\"$CPPFLAGS -DHOST_BSD -D_WITH_GETLINE\"\n\t\tneed_link_unlink=yes\n\t\tAC_DEFINE(PTHREAD_POINTER_ID, 1, [pthread is a pointer])\n\t\tlibgc_threads=pthreads\n\t\tuse_sigposix=yes\n\t\thas_dtrace=yes\n\t\tcase \"$host\" in\n\t\taarch64-*)\n\t\t\tsupport_boehm=no\n\t\t\twith_gc=sgen\n\t\t\t;;\n\t\triscv*)\n\t\t\tsupport_boehm=no\n\t\t\twith_gc=sgen\n\t\t\t;;\n\t\tesac\n\t\twith_sgen_default_concurrent=yes\n\t\t;;\n\t*-*-*openbsd*)\n\t\tCPPFLAGS=\"$CPPFLAGS -D_THREAD_SAFE -DGC_OPENBSD_THREADS -DHOST_BSD -D_REENTRANT -DUSE_MMAP\"\n\t\tLDFLAGS=\"${LDFLAGS} -Wl,-zwxneeded\"\n\t\tif test \"x$disable_munmap\" != \"xyes\"; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DUSE_MUNMAP\"\n\t\tfi\n\t\tlibmono_cflags=\"-D_THREAD_SAFE -D_REENTRANT\"\n\t\tLDFLAGS=\"$LDFLAGS -pthread\"\n\t\tneed_link_unlink=yes\n\t\tAC_DEFINE(PTHREAD_POINTER_ID)\n\t\tlibgc_threads=pthreads\n\t\twith_tls=pthread\n\t\twith_sigaltstack=no\n\t\tuse_sigposix=yes\n\t\twith_sgen_default_concurrent=yes\n\t\t;;\n\t*-*-linux-android*)\n\t\tplatform_android=yes\n\t\tAC_DEFINE(HOST_ANDROID,1,[Targeting the Android platform])\n\t\tAC_DEFINE(TARGET_ANDROID,1,[Targeting the Android platform])\n\n\t\tCPPFLAGS=\"$CPPFLAGS -DGC_LINUX_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP\"\n\t\tif test \"x$disable_munmap\" != \"xyes\"; then\n\t\t\tCPPFLAGS=\"$CPPFLAGS -DUSE_MUNMAP\"\n\t\tfi\n\t\tlibmono_cflags=\"-D_REENTRANT\"\n\t\tlibgc_threads=pthreads\n\t\tuse_sigposix=yes\n\n\t\twith_tls=pthread\n\t\twith_sigaltstack=no\n\t\twith_static_mono=no\n\n\t\t# Android doesn't support boehm, as it's missing <link.h>\n\t\tsupport_boehm=no\n\t\twith_gc=sgen\n\n\t\t# isinf(3) requires -lm\n\t\tLDFLAGS=\"$LDFLAGS -lm\"\n\n\t\t# Bionic's <pthread.h> sets PTHREAD_STACK_MIN=2*PAGE_SIZE; doesn't define\n\t\t# PAGE_SIZE; breaks mono/io-layer/collection.c\n\t\t# Bionic doesn't provide S_IWRITE; breaks io-layer/io.c\n\t\tCFLAGS=\"$CFLAGS -DPAGE_SIZE=4096 -DS_IWRITE=S_IWUSR\"\n\t\tCXXFLAGS=\"$CXXFLAGS -DPAGE_SIZE=4096 -DS_IWRITE=S_IWUSR\"\n\n\t\t# FIXME? Only if __ANDROID_API__ < 24?\n\t\t# FILE32API means \"long\", which is stuck at 32bits for 32bit ABI (64bits for 64bit ABI).\n\t\t# ABI 24 introduces the \"o\" for \"file offset\" variations, which can be widened to 64bits for 32bit ABI (and still 64bits for 64bit).\n\t\t# Android itself uses FILE32API, and mono should use system zlib on Android anyway.\n\t\tZLIB_CFLAGS=\"$ZLIB_CFLAGS -DUSE_FILE32API\"\n\n\t\t# to bypass the underscore linker check, can't work when cross-compiling\n\t\tmono_cv_uscore=yes\n\t\tmono_cv_clang=no\n\t\t;;\n\t*-*-linux*)\n\t\thost_linux=yes\n\t\tCPPFLAGS=\"$CPPFLAGS -DGC_LINUX_THREADS -D_GNU_SOURCE -D_REENTRANT -DUSE_MMAP\"\n\t\tif test \"x$disable_munmap\" != \"xyes\"; then\n\t\t\tCPPFLAGS=\"$CPPFLAGS -DUSE_MUNMAP\"\n\t\tfi\n\t\tlibmono_cflags=\"-D_REENTRANT\"\n\t\tlibgc_threads=pthreads\n\t\tCORETARGETS=\"-p:TargetsUnix=true\"\n\t\tuse_sigposix=yes\n\t\tif test \"x$cross_compiling\" != \"xno\"; then\n                \t# to bypass the underscore linker check, not\n                \t# available during cross-compilation\n                \tmono_cv_uscore=no\n                fi\n                case \"$host\" in\n                *-musl)\n                        AC_DEFINE(MUSL, 1, [musl libc])\n                        ;;\n                esac\n\t\tcase \"$host\" in\n\t\t*-tizen-linux-*)\n\t\t\tplatform_tizen=yes\n\t\t\t;;\n\t\tesac\n\t\tcase \"$host\" in\n\t\tppc64-*)\n\t\t\tRID=\"linux-ppc64\"\n\t\t\t;;\n\t\tppc64le-*)\n\t\t\tRID=\"linux-ppc64el\"\n\t\t\t;;\n\t\tmipsel-*)\n\t\t\tRID=\"linux-mipsel\"\n\t\t\t;;\n\t\tx86-*)\n\t\t\tRID=\"linux-x86\"\n\t\t\tCOREARCH=\"x86\"\n\t\t\t;;\n\t\tx86_64-*)\n\t\t\tRID=\"linux-x64\"\n\t\t\tCOREARCH=\"x64\"\n\t\t\t;;\n\t\tarm-*)\n\t\t\t# deal with this in the FPU detection section, since\n\t\t\t# we cannot determine FPU from triplet and don't want\n\t\t\t# to duplicate the logic\n\t\t\t;;\n\t\taarch64-*)\n\t\t\tsupport_boehm=no\n\t\t\twith_gc=sgen\n\t\t\tRID=\"linux-arm64\"\n\t\t\tCOREARCH=\"arm64\"\n\t\t\t;;\n\t\tpowerpc*-*-linux*)\n\t\t\t# https://bugzilla.novell.com/show_bug.cgi?id=504411\n\t\t\tdisable_munmap=yes\n\t\t\t;;\n\t\tpowerpc*-*-freebsd*)\n\t\t\t# https://bugzilla.novell.com/show_bug.cgi?id=504411\n\t\t\tdisable_munmap=yes\n\t\t\t;;\n\t\triscv*)\n\t\t\tsupport_boehm=no\n\t\t\twith_gc=sgen\n\t\t\t;;\n\t\tesac\n\t\twith_sgen_default_concurrent=yes\n\t\t;;\n\t*-*-nacl*)\n\t\techo \"nacl no longer supported.\"\n\t\texit 1\n\t\t;;\n\t*-*-hpux*)\n\t\tCPPFLAGS=\"$CPPFLAGS -DGC_HPUX_THREADS -D_HPUX_SOURCE -D_XOPEN_SOURCE_EXTENDED -D_REENTRANT\"\n\t\t# +ESdbgasm only valid on bundled cc on RISC\n\t\t# silently ignored for ia64\n\t\tif test $GCC != \"yes\"; then\n\t\t\tCFLAGS=\"$CFLAGS +ESdbgasm\"\n\t\t\t# Arrange for run-time dereferencing of null\n\t\t\t# pointers to produce a SIGSEGV signal.\n\t\t\tLDFLAGS=\"$LDFLAGS -z\"\n\t\tfi\n\t\tCFLAGS=\"$CFLAGS +ESdbgasm\"\n\t\tLDFLAGS=\"$LDFLAGS -z\"\n\t\tlibmono_cflags=\"-D_REENTRANT\"\n\t\tlibmono_ldflags=\"-lpthread\"\n\t\tlibgc_threads=pthreads\n\t\tneed_link_unlink=yes\n\t\tuse_sigposix=yes\n\t\t;;\n\t*-*-solaris*)\n\t\tCPPFLAGS=\"$CPPFLAGS -DGC_SOLARIS_THREADS -DGC_SOLARIS_PTHREADS -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS -DUSE_MMAP -DUSE_MUNMAP -DHOST_SOLARIS -D__EXTENSIONS__ -D_XPG4_2\"\n\t\tneed_link_unlink=yes\n\t\tlibmono_cflags=\"-D_REENTRANT\"\n\t\tlibgc_threads=pthreads\n\t\thas_dtrace=yes\n\t\tuse_sigposix=yes\n\t\tenable_solaris_tar_check=yes\n\t\thost_sunos=yes\n\t\t;;\n\t*-*-darwin*)\n\t\tparallel_mark=\"Disabled_Currently_Hangs_On_MacOSX\"\n\t\thost_darwin=yes\n\t\ttarget_mach=yes\n\t\tCPPFLAGS=\"$CPPFLAGS -D_THREAD_SAFE -DGC_MACOSX_THREADS -DUSE_MMAP -DUSE_MUNMAP\"\n\t\tlibmono_cflags=\"-D_THREAD_SAFE\"\n\t\tneed_link_unlink=yes\n\t\tAC_DEFINE(PTHREAD_POINTER_ID)\n\t\tAC_DEFINE(USE_MACH_SEMA, 1, [...])\n\t\tCORETARGETS=\"-p:TargetsUnix=true -p:TargetsOSX=true\"\n\t\tlibgc_threads=pthreads\n\t\thas_dtrace=yes\n\t\tif test \"x$cross_compiling\" = \"xyes\"; then\n\t\t\thas_broken_apple_cpp=yes\n\t\tfi\n\t\tdnl Snow Leopard is horribly broken -- it reports itself as i386-apple-darwin*, but\n\t\tdnl its gcc defaults to 64-bit mode.  They have also deprecated the usage of ucontext\n\t\tdnl we need to set some flags to build our 32-bit binaries on 10.6 properly\n\t\tcase \"$host\" in\n\t\t\tdnl Snow Leopard and newer config.guess reports as this\n\t\t\ti*86-*-darwin*)\n\t\t\t\tBROKEN_DARWIN_FLAGS=\"-arch i386\"\n\t\t\t\tBROKEN_DARWIN_CPPFLAGS=\"\"\n\t\t\t\tCPPFLAGS=\"$CPPFLAGS $BROKEN_DARWIN_CPPFLAGS\"\n\t\t\t\tCFLAGS=\"$CFLAGS $BROKEN_DARWIN_FLAGS\"\n\t\t\t\tCXXFLAGS=\"$CXXFLAGS $BROKEN_DARWIN_FLAGS\"\n\t\t\t\tCCASFLAGS=\"$CCASFLAGS $BROKEN_DARWIN_FLAGS\"\n\t\t\t\tCPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC $BROKEN_DARWIN_CPPFLAGS\"\n\t\t\t\tCFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC $BROKEN_DARWIN_FLAGS\"\n\t\t\t\twith_sgen_default_concurrent=yes\n\t\t\t\tRID=\"osx-x86\"\n\t\t\t\tCOREARCH=\"x86\"\n\t\t\t\t;;\n\t\t\tx*64-*-darwin*)\n\t\t\t\twith_sgen_default_concurrent=yes\n\t\t\t\tRID=\"osx-x64\"\n\t\t\t\tCOREARCH=\"x64\"\n\t\t\t\t;;\n\t\t\tarm*-darwin*)\n\t\t\t\tplatform_ios=yes\n\t\t\t\thas_dtrace=no\n\t\t\t\t;;\n\t\t\taarch64*-darwin20*)\n\t\t\t\t# OSX/arm64\n\t\t\t\tsupport_boehm=no\n\t\t\t\t;;\n\t\t\taarch64*-darwin*)\n\t\t\t\tplatform_ios=yes\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\t*-*-haiku*)\n\t\tdnl BSD_SOURCE is for getifaddrs\n\t\tCPPFLAGS=\"$CPPFLAGS -D_BSD_SOURCE -D_REENTRANT -D_THREAD_SAFE\"\n\t\tlibmono_cflags=\"-D_REENTRANT -D_THREAD_SAFE\"\n\t\tLIBS=\"$LIBS -lnetwork -ltextencoding\"\n\t\tneed_link_unlink=yes\n\t\tAC_DEFINE(PTHREAD_POINTER_ID)\n\t\tdnl Haiku does not support static TLS with __thread\n\t\twith_tls=pthread\n\t\tlibgc_threads=pthreads\n\t\tuse_sigposix=yes\n\t\twith_sigaltstack=no\n\t\t;;\n\t*-*-fuchsia*)\n\t\tAC_DEFINE(DISABLE_PORTABILITY,1,[Disable the io-portability layer])\n\t\tAC_DEFINE(HOST_FUCHSIA,1,[Targeting the Fuchsia platform])\n\t\tfuchsia=true\n\t\twith_tls=pthread\n\t\twith_sigaltstack=yes\n\t\twith_static_mono=no\n\t\tsupport_boehm=no\n\t\twith_gc=sgen\n\t\tmono_cv_uscore=yes\n\t\tmono_cv_clang=no\n\t\t;;\n\t*-*-aix*|*-*-os400*)\n\t\tAC_DEFINE(HOST_AIX,1,[Targeting the AIX and PASE platforms])\n\t\thost_aix=yes\n\t\tdnl IMPORTANT: For svr4 sonames on AIX, you should set\n\t\tdnl `OBJECT_MODE=64` when configuring.\n\t\tdnl libtool cannot generate functioning svr4 sonames on\n\t\tdnl 64-bit without it.\n\t\tdnl Unfortunately, everything is complicated by the fact that\n\t\tdnl gcc doesn't respect this variable. (otherwise we could set\n\t\tdnl it for build time for configure and make)\n\t\tdnl On IBM i PASE using IBM's packages, GCC *does* respect this\n\t\tdnl variable, and builds are 64-bit by default. svr4 sonames\n\t\tdnl must still be specified when configuring on i, however.\n\t\tdnl As such, because Mono doesn't support 32-bit AIX or PASE,\n\t\tdnl set up a 64-bit build (assming GCC; XLC not supported)\n\t\tdnl regardless of what variable is used.\n\t\tcase $host_os in\n\t\t\taix*)\n\t\t\tif test \"x$OBJECT_MODE\" = \"x64\" && test \"x$CC\" = \"x\" && test \"x$CXX\" = \"x\"; then\n\t\t\t\tdnl HACK: Set -maix64 at the GCC invocation\n\t\t\t\tdnl level explicitly to work around the fact\n\t\t\t\tdnl GCC in default maix32 mode explodes when\n\t\t\t\tdnl binutils respects OBJECT_MODE.\n\t\t\t\tdnl When that check occurs, flags are not\n\t\t\t\tdnl passed to to the compiler, so GCC has no\n\t\t\t\tdnl chance to change its mode.\n\t\t\t\tdnl Otherwise, it may enter a state where it\n\t\t\t\tdnl runs, but uses the libtool \"compile\"\n\t\t\t\tdnl wrapper, which subtly breaks other things.\n\t\t\t\tdnl This should propagate to all uses of CC.\n\t\t\t\tdnl This is only set if not manually set.\n\t\t\t\tCC=\"gcc -maix64\"\n\t\t\t\tCXX=\"g++ -maix64\"\n\t\t\t\techo\n\t\t\tfi\n\t\t\t;;\n\t\t\tdnl Not needed on i because it defaults to 64-bit and\n\t\t\tdnl has a GCC smart enough to respect OBJECT_MODE.\n\t\tesac\n\t\tdnl We still set this for *FLAGS, however, because we may not\n\t\tdnl be setting OBJECT_MODE.\n\t\tLDFLAGS=\"$LDFLAGS -maix64\"\n\t\tCPPFLAGS=\"$CPPFLAGS -maix64 -DGC_AIX_THREADS -D_ALL_SOURCE -pthread -D_THREAD_SAFE -D_LARGE_FILES -D_REENTRANT\"\n\t\tlibmono_cflags=\"-pthread -D_THREAD_SAFE -D_REENTRANT\"\n\t\tdnl Would you believe GNU nm doesn't know how to process AIX libraries?\n\t\tdnl Hardcode IBM binutils in case GNU ones end up on our path. Also\n\t\tdnl specifiy 64-bit mode for tools. (OBJECT_MODE is finicky with cmake.)\n\t\tdnl XXX: We should stop the hardcoding madness\n\t\tAR=\"/usr/bin/ar -X64\"\n\t\tNM=\"/usr/bin/nm -X64\"\n\t\tSTRIP=\"/usr/bin/strip -X64\"\n\t\tRANLIB=\"/usr/bin/ranlib -X64\"\n\t\tdnl SGen is the future (changes to Boehm support code would be\n\t\tdnl required if you wish to re-enable Boehm)\n\t\tsupport_boehm=no\n\t\twith_gc=sgen\n\t\tneed_link_unlink=yes\n\t\tuse_sigposix=yes\n\t\tdnl Similar limitation to macOS about the first thread and the\n\t\tdnl guard page, except sometimes the runtime hangs. Disable for\n\t\tdnl now until cause can be determined or it seems OK enough.\n\t\twith_sigaltstack=no\n\t\tdnl use pthread TLS, __thread has issues with the compiler flags we use\n\t\twith_tls=pthread\n\t\tdnl ppc Linux is the same? test further\n\t\tdisable_munmap=yes\n\t\tRID=\"aix-ppc64\"\n\t\tCORETARGETS=\"-p:TargetsUnix=true\"\n\t\t;;\n\t*)\n\t\tAC_MSG_WARN([*** Please add $host to configure.ac checks!])\n\t\t;;\nesac\n\nAC_MSG_RESULT(ok)\n\nif test x$need_link_unlink = xyes; then\n   AC_DEFINE(NEED_LINK_UNLINK, 1, [Define if Unix sockets cannot be created in an anonymous namespace])\nfi\n\nif test x$host_win32 = xyes; then\n   AC_DEFINE(HOST_WIN32, 1, [Host Platform is Win32])\nfi\n\nif test x$target_win32 = xyes; then\n   AC_DEFINE(TARGET_WIN32, 1, [Target Platform is Win32])\nfi\n\nif test x$host_darwin = xyes; then\n   AC_DEFINE(HOST_DARWIN, 1, [Host Platform is Darwin])\nfi\n\n# Defined for all targets/platforms using classic Windows API support.\nAC_DEFINE(HAVE_CLASSIC_WINAPI_SUPPORT, 1, [Use classic Windows API support])\nAC_DEFINE(HAVE_UWP_WINAPI_SUPPORT, 0, [Don't use UWP Windows API support])\n\nAC_SUBST(extra_runtime_ldflags)\nAM_CONDITIONAL(HOST_WIN32, test x$host_win32 = xyes)\nAM_CONDITIONAL(TARGET_WIN32, test x$target_win32 = xyes)\nAM_CONDITIONAL(HOST_LINUX, echo x$target_os | grep -q linux)\nAM_CONDITIONAL(HOST_DARWIN, test x$host_darwin = xyes)\nAM_CONDITIONAL(HOST_SIGPOSIX, test x$use_sigposix = xyes)\nAM_CONDITIONAL(HOST_ANDROID, test x$platform_android = xyes)\nAM_CONDITIONAL(HOST_TIZEN, test x$platform_tizen = xyes)\nAM_CONDITIONAL(HOST_IOS, test x$platform_ios = xyes)\nAM_CONDITIONAL(HOST_WASM, test x$host_wasm = xyes)\nAM_CONDITIONAL(HOST_AIX, test x$host_aix = xyes)\n\nif test -z \"$HOST_DARWIN_TRUE\"; then :\nPLATFORM_AOT_SUFFIX=.dylib\nPLATFORM_AOT_PREFIX=lib\nfi\n\nif test -z \"$HOST_LINUX_TRUE\"; then :\nPLATFORM_AOT_SUFFIX=.so\nPLATFORM_AOT_PREFIX=lib\nfi\n\nif test -z \"$HOST_WIN32_TRUE\"; then :\nPLATFORM_AOT_SUFFIX=.dll\nPLATFORM_AOT_PREFIX=\nfi\n\nAC_SUBST(PLATFORM_AOT_SUFFIX)\nAC_SUBST(PLATFORM_AOT_PREFIX)\n\nif test -z \"$HOST_WASM_TRUE\"; then :\nAC_DEFINE(HAVE_UTIME)\nAC_DEFINE(HAVE_UTIMES)\nfi\n\n## PLATFORM_AOT_SUFFIX not so simple for windows :-)\n\nAC_CHECK_TOOL(CC, gcc, gcc)\nAC_PROG_CC\nAC_CHECK_TOOL(CXX, g++, g++)\nAC_PROG_CXX\nAM_PATH_PYTHON([3.2])\nAM_PROG_AS\nAC_PROG_INSTALL\nAC_PROG_AWK\nAM_PROG_CC_C_O\ndnl We should use AM_PROG_AS, but it's not available on automake/aclocal 1.4\n: ${CCAS='$(CC)'}\n# Set ASFLAGS if not already set.\n: ${CCASFLAGS='$(CFLAGS)'}\nAC_SUBST(CCAS)\nAC_SUBST(CCASFLAGS)\n\nif test \"x$CXX\" = \"xno\"; then\n\tAC_MSG_ERROR([No c++ compiler found. You need to install a c++ compiler])\nfi\n\n# AC_PROG_CXX helpfully sets CXX to g++ even if no c++ compiler is found so check\n# GXX instead. See http://lists.gnu.org/archive/html/bug-autoconf/2002-04/msg00056.html\nif test \"x$CXX\" = \"xg++\"; then\n\tif test \"x$GXX\" != \"xyes\"; then\n\t\t# automake/libtool is so broken, it requires g++ even if the c++ sources\n\t\t# are inside automake conditionals\n\t\tAC_MSG_ERROR([You need to install g++])\n\tfi\nfi\n\ndnl may require a specific autoconf version\ndnl AC_PROG_CC_FOR_BUILD\ndnl CC_FOR_BUILD not automatically detected\nCC_FOR_BUILD=$CC\nCFLAGS_FOR_BUILD=$CFLAGS\nBUILD_EXEEXT=\nif test \"x$cross_compiling\" = \"xyes\"; then\n\tCC_FOR_BUILD=cc\n\tCFLAGS_FOR_BUILD=\n\tBUILD_EXEEXT=\"\"\nfi\nAC_SUBST(CC_FOR_BUILD)\nAC_SUBST(CFLAGS_FOR_BUILD)\nAC_SUBST(HOST_CC)\nAC_SUBST(BUILD_EXEEXT)\n\nAM_CONDITIONAL(CROSS_COMPILING, [test x$cross_compiling = xyes])\nAM_CONDITIONAL(USE_BATCH_FILES, [test x$host_win32 = xyes -a x$cross_compiling = xyes])\n\n# Set STDC_HEADERS\nAC_HEADER_STDC\nAC_LIBTOOL_WIN32_DLL\n# This causes monodis to not link correctly\n#AC_DISABLE_FAST_INSTALL\n\n#lookup makedev() header\nAC_HEADER_MAJOR\n\nAM_PROG_LIBTOOL\n# Use dolt (http://dolt.freedesktop.org/) instead of libtool for building.\nDOLT\n\nexport_ldflags=`(./libtool --config; echo eval echo \\\\$export_dynamic_flag_spec) | sh`\nAC_SUBST(export_ldflags)\n\n# Test whenever ld supports -version-script\nAC_PROG_LD\nAC_PROG_LD_GNU\n\nAC_CHECK_HEADERS(sys/filio.h sys/sockio.h netdb.h utime.h sys/utime.h semaphore.h sys/un.h linux/rtc.h sys/syscall.h sys/mkdev.h sys/uio.h sys/param.h sys/sysctl.h libproc.h sys/prctl.h copyfile.h gnu/lib-names.h)\nAC_CHECK_HEADERS(sys/param.h sys/socket.h sys/ipc.h sys/utsname.h alloca.h ucontext.h pwd.h sys/select.h netinet/tcp.h netinet/in.h unistd.h sys/types.h link.h asm/sigcontext.h sys/inotify.h arpa/inet.h complex.h unwind.h)\n\n# zlib/configure checks for unistd.h existence and defines HAVE_UNISTD_H on the compiler\n# command line (not config.h) if it is present.\nAC_CHECK_HEADER(unistd.h,\n    [HAVE_UNISTD_H=1\n     ZLIB_CFLAGS=\"$ZLIB_CFLAGS -DHAVE_UNISTD_H\"],\n    [HAVE_UNISTD_H=0])\n\nAC_SUBST(HAVE_UNISTD_H)\n\nAC_CHECK_HEADERS([linux/netlink.h linux/rtnetlink.h],\n                  [], [], [#include <stddef.h>\n\t\t  #include <sys/socket.h>\n\t\t  #include <linux/socket.h>])\n\nAC_CHECK_HEADERS(sys/user.h, [], [],\n[\n#ifdef HAVE_SYS_PARAM_H\n# include <sys/param.h>\n#endif\n])\n\nAC_CHECK_HEADERS(linux/serial.h)\n\ncase \"$host\" in\n\t# Use bundled zlib on Windows to be sure it is static.\n\t*-mingw*|*-cygwin*)\n\t\thave_sys_zlib=no\n\t\tzlib_msg=\"bundled zlib\"\n\t\t;;\n\t# Use bundled zlib on RISC-V for now to make cross-compiling easier.\n\triscv*)\n\t\thave_sys_zlib=no\n\t\tzlib_msg=\"bundled zlib\"\n\t\t;;\n\t*)\n\t\tAC_CHECK_HEADER(zlib.h, [have_sys_zlib=yes], [have_sys_zlib=no])\n\t\tif test x$have_sys_zlib = xyes; then\n\t\t\tAC_TRY_COMPILE([#include <zlib.h>], [\n\t\t\t\t#if defined(ZLIB_VERNUM) && (ZLIB_VERNUM >= 0x1230)\n\t\t\t\t#else\n\t\t\t\t#error No good zlib found\n\t\t\t\t#endif\n\t\t\t],[\n\t\t\t\tAC_MSG_RESULT(Using system zlib)\n\t\t\t\tzlib_msg=\"system zlib\"\n\t\t\t\thave_sys_zlib=yes\n\t\t\t],[\n\t\t\t\tAC_MSG_RESULT(zlib too old, using embedded zlib)\n\t\t\t\thave_sys_zlib=no\n\t\t\t\tzlib_msg=\"bundled zlib\"\n\t\t\t])\n\t\telse\n\t\t\tAC_MSG_RESULT(zlib not found, using embedded zlib)\n\t\t\thave_sys_zlib=no\n\t\t\tzlib_msg=\"bundled zlib\"\n\t\tfi\n\t\t;;\nesac\n\nAC_ARG_WITH(static-zlib, [  --with-static-zlib=PATH    use the specified static zlib instead of -lz],[STATIC_ZLIB_PATH=$with_static_zlib],[STATIC_ZLIB_PATH=])\nif test \"x$STATIC_ZLIB_PATH\" != \"x\"; then\n\thave_static_zlib=yes\n\thave_sys_zlib=no\n\tzlib_msg=\"static zlib from $STATIC_ZLIB_PATH\"\n\tAC_SUBST(STATIC_ZLIB_PATH)\nfi\n\nAM_CONDITIONAL(HAVE_STATIC_ZLIB, test x$have_static_zlib = xyes)\nAM_CONDITIONAL(HAVE_SYS_ZLIB, test x$have_sys_zlib = xyes)\nif test x$have_static_zlib = xyes; then\n\tAC_DEFINE(HAVE_STATIC_ZLIB, 1, [Use static zlib])\nfi\nif test x$have_sys_zlib = xyes; then\n\tAC_DEFINE(HAVE_SYS_ZLIB, 1, [Use OS-provided zlib])\nfi\n# for mono/metadata/debug-symfile.c\nAC_CHECK_HEADERS(elf.h)\n\n# for perf jit dump support\nAC_CHECK_HEADERS(sys/mman.h)\nif test \"x$host_linux\" = \"xyes\" -a x$ac_cv_header_sys_mman_h = xyes -a  x$ac_cv_header_elf_h = xyes -a x$ac_cv_header_sys_syscall_h = xyes; then\n\tAC_DEFINE(ENABLE_JIT_DUMP, 1, [Enable jit dump support on Linux])\nfi\n\n# for support\nAC_CHECK_HEADERS(poll.h)\nAC_CHECK_HEADERS(sys/poll.h)\nAC_CHECK_HEADERS(sys/wait.h)\nAC_CHECK_HEADERS(grp.h)\nAC_CHECK_HEADERS(syslog.h)\nAC_CHECK_FUNCS(vsyslog)\n\n# for mono/dis\nAC_CHECK_HEADERS(wchar.h)\n\n# for Linux statfs support\nAC_CHECK_HEADERS(linux/magic.h)\n\n# For Android NDK unified headers\nif test x$platform_android = xyes; then\n\tAC_CHECK_HEADERS(machine/endian.h sys/endian.h)\n\tAC_CHECK_HEADERS(android/legacy_signal_inlines.h, [have_android_signal_inlines=yes], [have_android_signal_inlines=no])\n\tAC_CHECK_HEADERS(android/ndk-version.h)\n\n\t# Make sure SIGRT{MIN,MAX} work - they will fail to work with unified headers if building for\n\t# API level < 21 *and* android/legacy_signal_inlines.h doesn't declare (and define) the required\n\t# libc APIs to obtain values for SIGRT{MIN,MAX}. We perform the check only if android/legacy_signal_inlines.h\n\t# is found because in other cases the macros will either work (for NDK < 14) or fail if the legacy header\n\t# doesn't contain the required definitions (NDK 14)\n\tif test x$have_android_signal_inlines = xyes; then\n\t\tAC_MSG_CHECKING([Whether Android SIGRTMIN/SGRTMAX macros are valid])\n\t\tAC_COMPILE_IFELSE([\n\t\t\tAC_LANG_PROGRAM([#include <signal.h>\n\t\t\t\t#include <android/legacy_signal_inlines.h>],[\n\t\t\t\tint i;\n\t\t\t\tfor (i = SIGRTMIN + 1; i < SIGRTMAX; ++i) {\n\t\t\t\t}\n\t\t\t])],[\n\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\tandroid_sigrtminmax_work=yes\n\t\t\t],[\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\tandroid_sigrtminmax_work=no\n\t\t\t]\n\t\t)\n\n\t\tif test x$android_sigrtminmax_work = xno; then\n\t\t\tAC_MSG_ERROR([Android SIGRTMIN/SIGRTMAX macros don't work in this NDK])\n\t\tfi\n\tfi\n\n\t# Attempt to detect whether we're using Android NDK unified headers\n\tAC_CHECK_HEADERS(android/api-level.h, [have_android_api_level=yes], [have_android_api_level=no])\n\tAC_CHECK_HEADERS(android/versioning.h, [have_android_versioning=yes], [have_android_versioning=no])\n\n\tandroid_unified_headers=no\n\tif test x$have_android_api_level = xyes; then\n\t\tif test x$have_android_versioning = xyes; then\n\t\t\tAC_MSG_CHECKING([whether using Android NDK unified headers])\n\n\t\t\t# Both macros are defined only in the NDK unified headers\n\t\t\tAC_COMPILE_IFELSE([\n\t\t\t\tAC_LANG_PROGRAM([\n\t\t\t\t\t#include <android/api-level.h>\n\t\t\t\t\t#include <android/versioning.h>\n\t\t\t\t],[\n\t\t\t\t\t#if __ANDROID_API_O__ == 26 && defined(__INTRODUCED_IN)\n\t\t\t\t\t#else\n\t\t\t\t\t\t#error __ANDROID_API_O__ != 26 or the __INTRODUCED_IN macro not defined\n\t\t\t\t\t#endif\n\t\t\t\t])],[\n\t\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\t\tandroid_unified_headers=yes\n\t\t\t\t],[\n\t\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\t\tandroid_unified_headers=no\n\t\t\t\t]\n\t\t\t)\n\t\tfi\n\tfi\n\n\tif test x$android_unified_headers = xyes; then\n\t\tAC_DEFINE(ANDROID_UNIFIED_HEADERS, 1, [Whether Android NDK unified headers are used])\n\tfi\nelse\n\tAC_CHECK_HEADER(linux/cgroupstats.h, [AC_DEFINE(HAVE_CGROUP_SUPPORT, 1, Define to 1 if you have the <linux/cgroupstats.h> header file.)])\nfi # Android\n\n# not 64 bit clean in cross-compile\nAC_CHECK_SIZEOF(void *)\nAC_CHECK_SIZEOF(long)\n\nAC_CHECK_SIZEOF(int)\nAC_CHECK_SIZEOF(long long)\n\nAC_CACHE_CHECK([for clang],\n\tmono_cv_clang,[\n\tAC_TRY_COMPILE([], [\n\t\t#ifdef __clang__\n\t\t#else\n\t\t#error \"FAILED\"\n\t\t#endif\n\t],\n\t[mono_cv_clang=yes],\n\t[mono_cv_clang=no],\n\t[])\n])\n\nAC_ARG_ENABLE(visibility-hidden,\n[  --disable-visibility-hidden    disable usage of -fvisiblity=hidden],\n   disable_visibility_hidden=yes, disable_visibility_hidden=no)\n\nWARN=''\nif test x\"$GCC\" = xyes; then\n\t\tWARN='-Wall -Wunused -Wmissing-declarations -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes'\n\t\tCFLAGS=\"$CFLAGS -Wmissing-prototypes -Wstrict-prototypes -Wnested-externs -Wno-format-zero-length -Wc++-compat\"\n\n\t\t# We require C99 with some GNU extensions, e.g. `linux` macro\n\t\tCFLAGS=\"$CFLAGS -std=gnu99\"\n\n\t\t# The runtime code does not respect ANSI C strict aliasing rules\n\t\tCFLAGS=\"$CFLAGS -fno-strict-aliasing\"\n\n\t\t# We rely on signed overflow to behave\n\t\tCFLAGS=\"$CFLAGS -fwrapv\"\n\n\t\tCFLAGS=\"$CFLAGS -DMONO_DLL_EXPORT\"\n\t\tif test x\"$disable_visibility_hidden\" = xno; then\n\t\t   # Don't export any symbols by default\n\t\t   SHARED_CFLAGS=\"-fvisibility=hidden\"\n\t\t   CXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"\n\t\tfi\n\n\t\tORIG_CFLAGS=$CFLAGS\n\t\t# Check for the normal version, since gcc ignores unknown -Wno options\n\t\tCFLAGS=\"$CFLAGS -Wunused-but-set-variable -Werror\"\n\t\tAC_MSG_CHECKING(for -Wno-unused-but-set-variable option to gcc)\n\t\tAC_TRY_COMPILE([],[\n\t\t], [\n\t\t   AC_MSG_RESULT(yes)\n\t\t   CFLAGS=\"$ORIG_CFLAGS -Wno-unused-but-set-variable\"\n\t\t], [\n\t\t   AC_MSG_RESULT(no)\n\t\t   CFLAGS=$ORIG_CFLAGS\n\t\t])\n\n\t\tif test \"x$mono_cv_clang\" = \"xyes\"; then\n\t   \t   # https://bugzilla.samba.org/show_bug.cgi?id=8118\n\t   \t   WARN=\"$WARN -Qunused-arguments\"\n\t\t   WARN=\"$WARN -Wno-unused-function -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand\"\n\t\t   # We rely on zero length arrays in structs\n\t\t   WARN=\"$WARN -Wno-zero-length-array\"\n\t\tfi\nelse\n\t# The Sun Forte compiler complains about inline functions that access static variables\n\t# so disable all inlining.\n\tcase \"$host\" in\n\t*-*-solaris*)\n\t\tCFLAGS=\"$CFLAGS -Dinline=\"\n\t\t;;\n\tesac\nfi\nCFLAGS=\"$WARN $CFLAGS -g\"\nCFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -g\"\nCPPFLAGS=\"$WARN $CPPFLAGS -g\"\n\n# Where's the 'mcs' source tree?\nif test -d $srcdir/mcs; then\n  mcsdir=mcs\nelse\n  mcsdir=../mcs\nfi\n\nAC_ARG_WITH(mcs-path, [  --with-mcs-path=/path/to/mcs      Specify an alternate mcs source tree],\n\tif test x$with_mcs_path != \"x\" -a -d $with_mcs_path ; then\n\t\tmcsdir=$with_mcs_path\n\tfi\n)\n\nAC_ARG_WITH(jumptables, [  --with-jumptables=yes,no      enable/disable support for jumptables (ARM-only for now) (defaults to no)],[],[with_jumptables=no])\n\n#\n# A sanity check to catch cases where the package was unpacked\n# with an ancient tar program (Solaris)\n#\nAC_ARG_ENABLE(solaris-tar-check,\n[  --disable-solaris-tar-check    disable solaris tar check],\n   do_solaris_tar_check=no, do_solaris_tar_check=yes)\n\nif test x\"$do_solaris_tar_check\" = xyes -a x\"$enable_solaris_tar_check\" = xyes; then\n   \tAC_MSG_CHECKING(integrity of package)\n\tif test -f $mcsdir/class/System.Runtime.Serialization.Formatters.Soap/System.Runtime.Serialization.Formatters.Soap/SoapTypeMapper.cs\n   \tthen\n\t\tAC_MSG_RESULT(ok)\n   \telse\n\t\terrorm=\"Your mono distribution is incomplete;  if unpacking from a tar file, make sure you use GNU tar;  see http://www.mono-project.com/IncompletePackage for more details\"\n\t\tAC_MSG_ERROR([$errorm])\n\tfi\nfi\n\nif test \"x$with_mcs_path\" != \"x\"; then\nmcs_topdir=$(cd \"$mcsdir\" && pwd)\nmcs_topdir_from_srcdir=$mcs_topdir\nelse\nmcs_topdir=$(cd \"$srcdir/$mcsdir\" && pwd)\nmcs_topdir_from_srcdir='$(top_builddir)'/$mcsdir\nfi\n\n# Convert mcs_topdir* paths to Windows syntax.\nif test x$cross_compiling$host_win32 = xnoyes; then\n  mcs_topdir=$(cygpath -m $mcs_topdir)\n  case $mcs_topdir_from_srcdir in\n    /cygdrive/*)\n\tmcs_topdir_from_srcdir=$(cygpath -m $mcs_topdir_from_srcdir)\n\t;;\n  esac\nfi\n\nAC_SUBST([mcs_topdir])\nAC_SUBST([mcs_topdir_from_srcdir])\n\n# gettext: prepare the translation directories. \n# we do not configure the full gettext, as we consume it dynamically from C#\nAM_PO_SUBDIRS\n\nif test \"x$USE_NLS\" = \"xyes\"; then\n   AC_CHECK_PROG(HAVE_MSGFMT, msgfmt,yes,no)\n\n   if test \"x$HAVE_MSGFMT\" = \"xno\"; then\n\t  AC_MSG_ERROR([msgfmt not found. You need to install the 'gettext' package, or pass --enable-nls=no to configure.])\n   fi\nfi\n\nAC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n\npkg_config_path=\nAC_ARG_WITH(crosspkgdir, [  --with-crosspkgdir=/path/to/pkg-config/dir      Change pkg-config dir to custom dir],\n\tif test x$with_crosspkgdir = \"x\"; then\n\t\tif test -s $PKG_CONFIG_PATH; then\n\t\t\tpkg_config_path=$PKG_CONFIG_PATH\n\t\tfi\n\telse\n\t\tpkg_config_path=$with_crosspkgdir\n\t\tPKG_CONFIG_PATH=$pkg_config_path\n\t\texport PKG_CONFIG_PATH\n\tfi\n)\n\nAC_ARG_ENABLE(ninja,[  --enable-ninja    Enable using ninja where available], enable_ninja=$enableval)\nAC_CHECK_PROG(HAVE_NINJA, ninja, yes, no)\nAM_CONDITIONAL(NINJA, test x$enable_ninja = xyes -a x$HAVE_NINJA != xno)\n\nAC_ARG_ENABLE(werror, [  --enable-werror Pass -Werror to the C compiler], werror_flag=$enableval, werror_flag=no)\nif test x$werror_flag = xyes; then\n\tSHARED_CFLAGS=\"$SHARED_CFLAGS -Werror\"\nfi\nAC_SUBST([SHARED_CFLAGS])\n\nGLIB_CFLAGS='-I$(top_srcdir)/mono/eglib -I$(top_builddir)/mono/eglib'\n  \nAC_SUBST(GLIB_CFLAGS)\n\n# Enable support for fast thread-local storage\n# Some systems have broken support, so we allow to disable it.\nAC_ARG_WITH(tls, [  --with-tls=__thread,pthread    select Thread Local Storage implementation (defaults to __thread)],[],[with_tls=__thread])\n\n# Enable support for using sigaltstack for SIGSEGV and stack overflow handling\n# This does not work on some platforms (bug #55253)\nAC_ARG_WITH(sigaltstack, [  --with-sigaltstack=yes,no      enable/disable support for sigaltstack (defaults to yes)],[],[with_sigaltstack=yes])\n\nAC_ARG_WITH(static_mono, [  --with-static_mono=yes,no      link mono statically to libmono (faster) (defaults to yes)],[],[with_static_mono=yes])\nAC_ARG_WITH(shared_mono, [  --with-shared_mono=yes,no      build a shared libmono library (defaults to yes)],[],[with_shared_mono=yes])\n# Same as --with-shared_mono=no\nAC_ARG_ENABLE(libraries, [  --disable-libraries disable the build of libmono], enable_libraries=$enableval, enable_libraries=yes)\n\nif test \"x$enable_static\" = \"xno\"; then\n   with_static_mono=no\nfi\n\nif test \"x$enable_shared\" = \"xno\"; then\n   with_shared_mono=no\nfi\n\nif test \"x$enable_libraries\" = \"xno\"; then\n   with_shared_mono=no\nfi\n\nAM_CONDITIONAL(DISABLE_LIBRARIES, test x$enable_libraries = xno)\n\nif test \"x$host_win32\" = \"xyes\"; then\n   # Boehm GC requires the runtime to be in its own dll\n   with_static_mono=no\nfi\n\nAM_CONDITIONAL(STATIC_MONO, test x$with_static_mono != xno)\nAM_CONDITIONAL(SHARED_MONO, test x$with_shared_mono != xno)\nAC_ARG_ENABLE(mcs-build, [  --disable-mcs-build disable the build of the mcs directory], try_mcs_build=$enableval, enable_mcs_build=yes)\nAC_ARG_ENABLE(support-build, [  --disable-support-build disable the build of the support directory], try_support_build=$enableval, enable_support_build=yes)\n\nAC_ARG_WITH(xen_opt,   [  --with-xen_opt=yes,no          Enable Xen-specific behaviour (defaults to yes)],[],[with_xen_opt=yes])\nif test \"x$with_xen_opt\" = \"xyes\" -a \"x$mono_cv_clang\" = \"xno\"; then\n\tAC_DEFINE(MONO_XEN_OPT, 1, [Xen-specific behaviour])\n\tORIG_CFLAGS=$CFLAGS\n\tCFLAGS=\"$CFLAGS -mno-tls-direct-seg-refs\"\n\tAC_MSG_CHECKING(for -mno-tls-direct-seg-refs option to gcc)\n\tAC_TRY_COMPILE([], [\n\t], [\n\t   AC_MSG_RESULT(yes)\n\t   # Pass it to libgc as well\n\t   CFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -mno-tls-direct-seg-refs\"\n\t], [\n\t   AC_MSG_RESULT(no)\n\t   CFLAGS=$ORIG_CFLAGS\n\t])\nfi\n\nAC_ARG_ENABLE(small-config, [  --enable-small-config Enable tweaks to reduce requirements (and capabilities)], enable_small_config=$enableval, enable_small_config=no)\n\nif test x$enable_small_config = xyes; then\n\tAC_DEFINE(MONO_SMALL_CONFIG,1,[Reduce runtime requirements (and capabilities)])\n\tCFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DSMALL_CONFIG\"\nfi\n\nAC_ARG_ENABLE(system-aot, [  --enable-system-aot  Enable the Ahead-Of-Time compilation of system assemblies during the build (on by default on some platforms)], enable_system_aot=$enableval, enable_system_aot=default)\n\nDISABLED_FEATURES=none\ncsc_compiler=default\nendian=unknown\nAC_C_BIGENDIAN([endian=big],[endian=little],[endian=unknown])\nAC_MSG_CHECKING([CSharp compiler to use])\nAC_ARG_WITH(csc, [  --with-csc=mcs,roslyn,default      Configures the CSharp compiler to use],[\n   if test x$withval = xmcs; then\n       csc_compiler=mcs\n   elif test x$withval = xroslyn; then\n       csc_compiler=roslyn\n   elif test x$withval = xdefault; then\n       :\n   else\n       AC_MSG_ERROR([You must supply one of \"mcs\", \"roslyn\" or \"default\" to the --with-csc option])\n   fi\n],[csc_compiler=default])\n\nif test $csc_compiler = default; then\n   if test $endian = big; then\n      case \"$host\" in\n        s390x*) csc_compiler=roslyn ;;\n        *) csc_compiler=mcs\n      esac\n   elif test $endian = little; then\n      case \"$host\" in\n        powerpc*) csc_compiler=mcs ;;\n        *) csc_compiler=roslyn ;;\n      esac\n   else\n      csc_compiler=mcs\n   fi\nfi\nAC_MSG_RESULT($csc_compiler)\n\nAC_ARG_WITH(jemalloc,             [  --with-jemalloc=yes,no               If jemalloc is enabled (defaults to no)],                                     [], [with_jemalloc=no])\nAC_ARG_WITH(jemalloc-always,      [  --with-jemalloc_always=yes,no        If jemalloc is enabled and always used (defaults to yes)],                    [], [with_jemalloc_always=no])\nAC_ARG_WITH(jemalloc-assert,      [  --with-jemalloc_assert=yes,no        If jemalloc performs runtime checks for memory correctness (defaults to no)], [], [with_jemalloc_assert=no])\n\n\nif test x$target_win32 = xyes; then\nwith_jemalloc=no\nwith_jemalloc_assert=no\nwith_jemalloc_always=no\nfi\n\nAM_CONDITIONAL(MONO_JEMALLOC_ASSERT, [test \"x$with_jemalloc_assert\" = \"xyes\"])\nif test \"x$with_jemalloc_assert\" = \"xyes\"; then\nJEMALLOC_CFLAGS+=\" -DMONO_JEMALLOC_ASSERT\"\nAC_DEFINE(MONO_JEMALLOC_ASSERT, 1, [Make jemalloc assert for mono])\nAC_SUBST(MONO_JEMALLOC_ASSERT, 1)\nfi\n\nAM_CONDITIONAL(MONO_JEMALLOC_DEFAULT, [test \"x$with_jemalloc_always\" = \"xyes\"])\nif test \"x$with_jemalloc_always\" = \"xyes\"; then\nwith_jemalloc=yes\nJEMALLOC_CFLAGS+=\" -DMONO_JEMALLOC_DEFAULT\"\nAC_DEFINE(MONO_JEMALLOC_DEFAULT, 1, [Make jemalloc default for mono])\nAC_SUBST(MONO_JEMALLOC_DEFAULT, 1)\nfi\n\nAM_CONDITIONAL(MONO_JEMALLOC_ENABLED, [test \"x$with_jemalloc\" = \"xyes\"])\nif test \"x$with_jemalloc\" = \"xyes\"; then\nJEMALLOC_LDFLAGS=\"-L`pwd`/mono/utils/jemalloc/jemalloc/lib -ljemalloc_pic\"\nJEMALLOC_CFLAGS+=\" -DMONO_JEMALLOC_ENABLED -I `pwd`/mono/utils/jemalloc/jemalloc/include\"\nJEMALLOC_AUTOCONF_FLAGS=\" --build=$target --host=$host\"\n\nif test \"x$target_mach\" = \"xyes\"; then\n\tJEMALLOC_CPPFLAGS=\" -stdlib=libc++ \"\nfi\n\nAC_DEFINE(MONO_JEMALLOC_ENABLED, 1, [Enable jemalloc usage for mono])\nAC_SUBST(MONO_JEMALLOC_ENABLED, 1)\n\nAC_SUBST(JEMALLOC_CFLAGS)\nAC_SUBST(JEMALLOC_CPPFLAGS)\nAC_SUBST(JEMALLOC_LDFLAGS)\nAC_SUBST(JEMALLOC_AUTOCONF_FLAGS)\nfi\n\n# Terminology:\n# Crash privacy - Attempts to not send identifying information in the crash dump / to protect the obscurity of the program control flow\n# MERP - The MS telemetry profile. Not for general use.\n# Structured crashes - crashes at runtime that trigger a stack walk by mono that happens cooperatively\n\n# Structured crashes are not merp crashes. Structured crashes are json dumps made by mono during crashes. Merp upload is going to use the dumping code is a very specific way, and is enabled at runtime with an icall.\n\n#--with-crash_privacy=yes --with-structured_crashes=no means we don't wanna dump in non-merp-enabled builds, and we want to not send symbol strings. This is going to be the default pair of settings for VS4Mac.\n#--with-crash_privacy=yes --with-structured_crashes=yes means you want to see crashes on your console, and you want to not see unmanaged symbol names. This is an option for proprietary apps that have manual bugs filed.\n#--with-crash_privacy=no --with-structured_crashes=no means you want to see no crash dumps on failure and you don't care about privacy. This is how you'd set a \"don't want it, don't care\" configuration.\n#--with-crash_privacy=no --with-structured_crashes=yes means you want full crashes and you want to see them in the terminal, not on telemetry. This is going to be how we build for CI.\n\nAC_ARG_WITH(crash-privacy,       [  --with-crash_privacy=yes,no         If you want your crashes to not include names of symbols present in the binary. ], [], [with_crash_privacy=yes])\nAC_ARG_WITH(structured-crashes,  [  --with-structured_crashes=yes,no    If you want your unmanaged crashes to result in a small crash dump file. ],        [], [with_structured_crashes=yes])\nAC_ARG_ENABLE(crash-reporting,  [  --disable-crash-reporting            Enable or Disable crash reporting subsystem],        [crash_reporting=$enableval], [crash_reporting=yes])\n\nif test \"x$with_crash_privacy\" = \"xyes\"; then\nAC_DEFINE(MONO_PRIVATE_CRASHES,1,[Do not include names of unmanaged functions in the crash dump])\nfi\n\nif test \"x$with_structured_crashes\" = \"xno\"; then\nAC_DEFINE(DISABLE_STRUCTURED_CRASH,1,[Do not create structured crash files during unmanaged crashes])\nfi\n\ncase \"$host\" in\n\t*-mingw*|*-*-cygwin*)\n\t\tcrash_reporting=no\n\t\t;;\nesac\n\nif test \"x$crash_reporting\" != \"xyes\"; then\nCFLAGS=\"$CFLAGS -DDISABLE_CRASH_REPORTING=1\"\nCXXFLAGS=\"$CXXFLAGS -DDISABLE_CRASH_REPORTING=1\"\nfi\nAM_CONDITIONAL(DISABLE_CRASH_REPORTING, test x$crash_reporting != xyes)\n\nAC_ARG_ENABLE(monodroid, [ --enable-monodroid Enable runtime support for Monodroid (Xamarin.Android)], enable_monodroid=$enableval, enable_monodroid=no)\nAM_CONDITIONAL(ENABLE_MONODROID, test x$enable_monodroid = xyes)\n\nAC_ARG_ENABLE(monotouch, [ --enable-monotouch Enable runtime support for Monotouch (Xamarin.iOS and Xamarin.Mac)], enable_monotouch=$enableval, enable_monotouch=no)\nAM_CONDITIONAL(ENABLE_MONOTOUCH, test x$enable_monotouch = xyes)\n\nif test x$enable_monodroid = xyes; then\n\tAC_DEFINE(ENABLE_MONODROID, 1, [Enable runtime support for Monodroid (Xamarin.Android)])\nfi\n\nif test x$enable_monotouch = xyes; then\n\tAC_DEFINE(ENABLE_MONOTOUCH, 1, [Enable runtime support for Monotouch (Xamarin.iOS and Xamarin.Mac)])\nfi\n\nAC_ARG_ENABLE(cxx, [  --enable-cxx   compile some code as C++])\nAM_CONDITIONAL(ENABLE_CXX, test x$enable_cxx = xyes)\n\n# mono/corefx/native has a lot of invalid C++98 in its headers\n# dotnet/corefx/native looks a lot better, i.e. 44e5bdafb8d989a220c9cf1b94f31a64a6e4f052\n# use these C99 print macros in the command line, since glib may not win first inttypes include\n#CXXFLAGS_COMMON=' -std=gnu++98 -fno-exceptions -fno-rtti '\nCXXFLAGS_COMMON=' -std=gnu++0x -fno-exceptions -fno-rtti '\nCXXFLAGS_COMMON=\"$CXXFLAGS_COMMON -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS\"\n# \"c++0x\" instead of C++11, for compat with Centos6/gcc4.4\n\n# -stdlib=libc++ is needed by clang for iOS 6.0 (-miphoneos-version-min=6.0)\n# to support C++11 headers but it does not seem to harm elsewhere, so over-approximate\n# and add it whenever we're running clang on Darwin.\nif test \"x$mono_cv_clang\" = xyes -a x$host_darwin = xyes; then\n\tCXXFLAGS_COMMON=\"$CXXFLAGS_COMMON -stdlib=libc++\"\nfi\n\nAC_SUBST(CXXFLAGS_COMMON)\n\nif test \"x$enable_cxx\" = \"xyes\"; then\n\n\tCXX_ADD_CFLAGS=\" -xc++ $CXXFLAGS_COMMON \"\n\n\t# -std=gnu99 -xc++ is not allowed and errors.\n\tCXX_REMOVE_CFLAGS=-std=gnu99\n\t# These give warnings and should be removed. They are C-only.\n\t# i.e. C++ never allows these, they are always errors and their warningness is not controllable.\n\tCXX_REMOVE_CFLAGS=\"$CXX_REMOVE_CFLAGS -Wmissing-prototypes -Wstrict-prototypes -Wnested-externs -Wc++-compat\"\n\t# Likewise with CentOS 6 gcc 4.4.\n\tCXX_REMOVE_CFLAGS=\"$CXX_REMOVE_CFLAGS -Werror-implicit-function-declaration\"\n\n\t# The C-only-ness of -Wno-format-zero-length varies with gcc version.\n\t# It is C-only prior to 4.7. Using it with C++ prior to 4.7\n\t# generates a warning every time we run gcc which is very unsightly.\n\t# The warning is for e.g. sprintf(foo, \"\") which can just be\n\t# foo[0] = 0 but Mono's use is more elaborate, not as easy to \"fix\",\n\t# and completely legal and valid.\n\t# We have to switch to C++ and not just use -xc++ because of -std=gnu99 (error when combined with -xc++).\n\t# Alternatively, just run $CXX -xc++ -c /dev/null.\n\tAC_LANG_PUSH(C++)\n\tORIG_CXXFLAGS=$CXXFLAGS\n\tCXXFLAGS=\"$CXXFLAGS -Werror -Wno-format-zero-length -xc++ \"\n\tAC_MSG_CHECKING(or C-only-ness of -Wno-format-zero-length)\n\tAC_TRY_COMPILE([ ], [ ], [ AC_MSG_RESULT(yes) ],\n\t\t\t\t [ AC_MSG_RESULT(no)\n\t\t\t\t   CXX_REMOVE_CFLAGS=\"$CXX_REMOVE_CFLAGS -Wno-format-zero-length\" ])\n\tCXXFLAGS=$ORIG_CXXFLAGS\n\tAC_LANG_POP(C++)\nfi\nAC_SUBST(CXX_ADD_CFLAGS)\nAC_SUBST(CXX_REMOVE_CFLAGS)\n\n#\n# Set the build profiles and options before things which use them\n#\n\nAC_ARG_WITH(profile4_x,          [  --with-profile4_x=yes,no            If you want to install the 4.x FX (defaults to yes)],                       [], [with_profile4_x=default])\nAC_ARG_WITH(monodroid,           [  --with-monodroid=yes,no             If you want to build the MonoDroid assemblies (defaults to no)],            [], [with_monodroid=default])\nAC_ARG_WITH(monotouch,           [  --with-monotouch=yes,no             If you want to build the Xamarin.iOS assemblies (defaults to no)],          [], [with_monotouch=default])\nAC_ARG_WITH(monotouch_watch,     [  --with-monotouch_watch=yes,no       If you want to build the Xamarin.WatchOS assemblies (defaults to no)],      [], [with_monotouch_watch=default])\nAC_ARG_WITH(monotouch_tv,        [  --with-monotouch_tv=yes,no          If you want to build the Xamarin.TVOS assemblies (defaults to no)],         [], [with_monotouch_tv=default])\nAC_ARG_WITH(bitcode,             [  --with-bitcode=yes,no               If bitcode is enabled (defaults to no)],                                    [], [with_bitcode=default])\nAC_ARG_WITH(xammac,              [  --with-xammac=yes,no                If you want to build the Xamarin.Mac assemblies (defaults to no)],          [], [with_xammac=default])\nAC_ARG_WITH(testing_aot_full_interp,  [  --with-testing_aot_full_interp=yes,no    If you want to build the testing_aot_full_interp assemblies (defaults to no)],   [], [with_testing_aot_full_interp=default])\nAC_ARG_WITH(testing_aot_hybrid,  [  --with-testing_aot_hybrid=yes,no    If you want to build the testing_aot_hybrid assemblies (defaults to no)],   [], [with_testing_aot_hybrid=default])\nAC_ARG_WITH(testing_aot_full,    [  --with-testing_aot_full=yes,no      If you want to build the testing_aot_full assemblies (defaults to no)],     [], [with_testing_aot_full=default])\nAC_ARG_WITH(winaot,              [  --with-winaot=yes,no                If you want to build the Windows friendly AOT assemblies (defaults to no)], [], [with_winaot=default])\nAC_ARG_WITH(testing_winaot_interp,    [  --with-testing_winaot_interp=yes,no      If you want to build the Windows friendly AOT + Interpreter testing assemblies (defaults to no)], [], [with_testing_winaot_interp=default])\nAC_ARG_WITH(orbis,               [  --with-orbis=yes,no                 If you want to build the Orbis assemblies (defaults to no)], [], [with_orbis=default])\nAC_ARG_WITH(unreal,              [  --with-unreal=yes,no                If you want to build the Unreal assemblies (defaults to no)], [], [with_unreal=default])\nAC_ARG_WITH(wasm,                [  --with-wasm=yes,no                  If you want to build the WebAssembly (defaults to no)], [], [with_wasm=default])\n\n\nAC_ARG_WITH(runtime-preset, [  --with-runtime-preset=net_4_x,all,aot,aot_llvm,hybridaot,hybridaot_llvm,fullaot,fullaot_llvm,winaot,winaotinterp,winaot_llvm,winaotinterp_llvm,bitcode,bitcodeinterp,unreal,fullaotinterp,fullaotinterp_llvm  Which default profile to build (defaults to net_4_x)],  [], [with_runtime_preset=net_4_x])\nAC_ARG_WITH(spectre-mitigation,             [  --with-spectre-mitigation=yes,no   If you want to build the runtime with compiler flags that enable Spectre mitigation (defaults to no)], [], [with_spectre_mitigation=default])\nAC_ARG_WITH(spectre-indirect-branch-choice,   [  --with-spectre-indirect-branch-choice=keep,thunk,inline,extern   Convert indirect branches to the specified kind of thunk (defaults to inline)], [], [with_spectre_indirect_branch_choice=inline])\nAC_ARG_WITH(spectre-function-return-choice, [  --with-spectre-function-return-choice=keep,thunk,inline,extern   Convert function return instructions to the specified kind of thunk (defaults to inline)], [], [with_spectre_function_return_choice=inline])\n\nAC_ARG_WITH(static_icu, [  --with-static-icu=yes|no      Integrate ICU statically into the runtime (defaults to no)],[\n\tif test x$with_static_icu = xyes ; then\n\t\tAC_DEFINE(STATIC_ICU,1,[Integrate ICU statically into the runtime.])\n\tfi\n], [with_static_icu=no])\n\ndnl\ndnl Spectre compiler mitigation flag checks\ndnl\nif test \"x$with_spectre_mitigation\" = \"xyes\"; then\n   AC_MSG_NOTICE([Compiler Spectre mitigation support checks])\n   SPECTRE_CFLAGS=\n   SPECTRE_INDIRECT_BRANCH_KIND=\n   case \"x$with_spectre_indirect_branch_choice\" in\n       xkeep) SPECTRE_INDIRECT_BRANCH_KIND=keep ;;\n       xthunk) SPECTRE_INDIRECT_BRANCH_KIND=thunk ;;\n       xinline) SPECTRE_INDIRECT_BRANCH_KIND=thunk-inline ;;\n       xextern) SPECTRE_INDIRECT_BRANCH_KIND=thunk-extern ;;\n       *) AC_MSG_ERROR([Invalid indirect jump thunk kind ($with_spectre_indirect_branch_choice)]) ;;\n   esac\n\n   SPECTRE_FUNCTION_RETURN_KIND=\"\"\n   case \"x$with_spectre_function_return_choice\" in\n       xkeep) SPECTRE_FUNCTION_RETURN_KIND=keep ;;\n       xthunk) SPECTRE_FUNCTION_RETURN_KIND=thunk ;;\n       xinline) SPECTRE_FUNCTION_RETURN_KIND=thunk-inline ;;\n       xextern) SPECTRE_FUNCTION_RETURN_KIND=thunk-extern ;;\n       *) AC_MSG_ERROR([Invalid function return thunk kind ($with_spectre_function_return_choice)]) ;;\n   esac\n\n   AX_CHECK_COMPILE_FLAG(\n\t[ -mindirect-branch=$SPECTRE_INDIRECT_BRANCH_KIND ],\n\t[ SPECTRE_CFLAGS=\"$SPECTRE_CFLAGS -mindirect-branch=$SPECTRE_INDIRECT_BRANCH_KIND\" ]\n   )\n\n   AX_CHECK_COMPILE_FLAG(\n\t[ -mfunction-return=$SPECTRE_FUNCTION_RETURN_KIND ],\n\t[ SPECTRE_CFLAGS=\"$SPECTRE_CFLAGS -mfunction-return=$SPECTRE_FUNCTION_RETURN_KIND\" ]\n   )\n\n   if test \"x$SPECTRE_CFLAGS\" != \"x\" ; then\n        CFLAGS=\"$CFLAGS $SPECTRE_CFLAGS\"\n\tCXXFLAGS=\"$CXXFLAGS $SPECTRE_CFLAGS\"\n\tspectre_mitigation_status=\"mitigation enabled\"\n   fi\nelse\n\tspectre_mitigation_status=\"no mitigation\"\nfi\n\ndnl\ndnl Profile defaults\ndnl\nTEST_PROFILE=default\nenable_llvm_default=no\n\nwith_profile4_x_default=no\nwith_monodroid_default=no\nwith_monotouch_default=no\nwith_monotouch_watch_default=no\nwith_monotouch_tv_default=no\nwith_xammac_default=no\nwith_testing_aot_full_interp_default=no\nwith_testing_aot_hybrid_default=no\nwith_testing_aot_full_default=no\nwith_winaot_default=no\nwith_testing_winaot_interp_default=no\nwith_orbis_default=no\nwith_unreal_default=no\nwith_wasm_default=no\n\nwith_bitcode_default=no\nenable_cooperative_suspend_default=no\nenable_hybrid_suspend_default=no\n\n# For the sake of clearer error messages, these numbers should all be different from each other.\nINVARIANT_AOT_OPTIONS=nimt-trampolines=2000,ntrampolines=10000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4400,nftnptr-arg-trampolines=4000,nrgctx-trampolines=21000\n\nAOT_BUILD_ATTRS=$INVARIANT_AOT_OPTIONS\n\nMONO_LLVM_PATH_OPTION=llvm-path=\"`pwd`/llvm/usr/bin\"\n\nif test x$cross_compiling = xyes -o x$enable_mcs_build = xno; then\n   DISABLE_MCS_DOCS_default=yes\nfi\n\nif test x$with_runtime_preset = xnet_4_x; then\n   with_profile4_x_default=yes\n   TEST_PROFILE=net_4_x\nelif test x$with_runtime_preset = xall; then\n   with_profile4_x_default=yes\n   with_monodroid_default=yes\n   with_monotouch_default=yes\n   with_monotouch_watch_default=yes\n   with_monotouch_tv_default=yes\n   with_xammac_default=yes\n   with_winaot_default=yes\n   with_testing_winaot_interp_default=yes\n   with_orbis_default=yes\n   with_unreal_default=yes\n   with_wasm_default=yes\n   with_testing_aot_full_interp_default=yes\n   with_testing_aot_hybrid_default=yes\n   with_testing_aot_full_default=yes\n   TEST_PROFILE=net_4_x\nelif test x$with_runtime_preset = xbitcode; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_aot_full_default=yes\n   with_bitcode_default=yes\n   enable_cooperative_suspend_default=yes\n   # FIXME: use TEST_PROFILE=testing_aot_full\n   TEST_PROFILE=testing_aot_bitcode\n   PLATFORM_TEST_HARNESS_EXCLUDES=BitcodeNotSupported\n   enable_llvm_default=yes\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   # We need at least clang++-6.0 to read the LLVM IR produced by the runtime\n   AOT_BUILD_FLAGS=\"--runtime=mobile --aot=llvmonly,clangxx=clang++-6.0,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --llvmonly\"\n   AOT_MODE=\"llvmonly\"\nelif test x$with_runtime_preset = xbitcodeinterp; then\n   with_testing_aot_full_interp_default=yes\n   with_bitcode_default=yes\n   enable_cooperative_suspend_default=yes\n   # FIXME: use TEST_PROFILE=testing_aot_full_interp\n   TEST_PROFILE=testing_aot_bitcode_interp\n   PLATFORM_TEST_HARNESS_EXCLUDES=BitcodeNotSupported\n   enable_llvm_default=yes\n\n   # mscorlib.dll aot compilation crashes\n   mono_feature_disable_com='yes'\n\n   # We need at least clang++-6.0 to read the LLVM IR produced by the runtime\n   AOT_BUILD_FLAGS=\"--aot=llvmonly,interp,clangxx=clang++-6.0,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--llvmonly-interp\"\nelif test x$with_runtime_preset = xfullaot; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_aot_full_default=yes\n   TEST_PROFILE=testing_aot_full\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile -O=gsharedvt --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\n   AOT_MODE=\"full\"\nelif test x$with_runtime_preset = xfullaot_llvm; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_aot_full_default=yes\n   TEST_PROFILE=testing_aot_full\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile -O=gsharedvt --llvm --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\n   AOT_MODE=\"full\"\nelif test x$with_runtime_preset = xhybridaot; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_aot_hybrid_default=yes\n   TEST_PROFILE=testing_aot_hybrid \n\n   AOT_BUILD_FLAGS=\"--runtime=mobile --aot=hybrid,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --hybrid-aot\"\nelif test x$with_runtime_preset = xhybridaot_llvm; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_aot_hybrid_default=yes\n   TEST_PROFILE=testing_aot_hybrid\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile --llvm --aot=hybrid,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --hybrid-aot\"\nelif test x$with_runtime_preset = xfullaotinterp; then\n   with_testing_aot_full_interp_default=yes\n   TEST_PROFILE=testing_aot_full_interp\n\n   # mscorlib.dll aot compilation crashes\n   mono_feature_disable_com='yes'\n\n   AOT_BUILD_FLAGS=\"--aot=full,interp,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--full-aot-interp\"\nelif test x$with_runtime_preset = xfullaotinterp_llvm; then\n   with_testing_aot_full_interp_default=yes\n   TEST_PROFILE=testing_aot_full_interp\n\n   # mscorlib.dll aot compilation crashes\n   mono_feature_disable_com='yes'\n\n   AOT_BUILD_FLAGS=\"-O=gsharedvt --llvm --aot=full,interp,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--full-aot-interp\"\nelif test x$with_runtime_preset = xaot; then\n   with_profile4_x_default=yes\n\n   AOT_BUILD_FLAGS=\"--aot=$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"\"\n\n   DISABLE_MCS_DOCS_default=yes\nelif test x$with_runtime_preset = xaot_llvm; then\n   with_profile4_x_default=yes\n\n   AOT_BUILD_FLAGS=\"--llvm --aot=$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"\"\n\n   DISABLE_MCS_DOCS_default=yes\nelif test x$with_runtime_preset = xwinaot; then\n   DISABLE_MCS_DOCS_default=yes\n   with_winaot_default=yes\n   TEST_PROFILE=winaot\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile -O=gsharedvt --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\n   AOT_MODE=\"full\"\nelif test x$with_runtime_preset = xwinaotinterp; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_winaot_interp_default=yes\n   TEST_PROFILE=testing_winaot_interp\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--aot=full,interp,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--full-aot-interp\"\nelif test x$with_runtime_preset = xwinaotinterp_llvm; then\n   DISABLE_MCS_DOCS_default=yes\n   with_testing_winaot_interp_default=yes\n   TEST_PROFILE=testing_winaot_interp\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_appdomains='yes'\n\n   INVARIANT_AOT_OPTIONS=\"llvmllc=-mattr=sse4.1,$INVARIANT_AOT_OPTIONS\"\n   AOT_BUILD_FLAGS=\"-O=gsharedvt --llvm --aot=full,interp,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--full-aot-interp\"\nelif test x$with_runtime_preset = xwinaot_llvm; then\n   DISABLE_MCS_DOCS_default=yes\n   with_winaot_default=yes\n   TEST_PROFILE=winaot\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   INVARIANT_AOT_OPTIONS=\"llvmllc=-mattr=sse4.1,$INVARIANT_AOT_OPTIONS\"\n   AOT_BUILD_FLAGS=\"--runtime=mobile -O=gsharedvt --llvm --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\n   AOT_MODE=\"full\"\nelif test x$with_runtime_preset = xorbis; then\n   DISABLE_MCS_DOCS_default=yes\n   with_orbis_default=yes\n   TEST_PROFILE=orbis\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\n   AOT_MODE=\"full\"\nelif test x$with_runtime_preset = xunreal; then\n   DISABLE_MCS_DOCS_default=yes\n   with_unreal_default=yes\n   TEST_PROFILE=unreal\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_appdomains='no'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile --aot=hybrid,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --hybrid-aot\"\nelif test x$with_runtime_preset = xwasm; then\n   DISABLE_MCS_DOCS_default=yes\n   with_wasm_default=yes\n   TEST_PROFILE=wasm\n\n   mono_feature_disable_com='yes'\n   mono_feature_disable_remoting='yes'\n   mono_feature_disable_reflection_emit_save='yes'\n   mono_feature_disable_reflection_emit='yes'\n   mono_feature_disable_appdomains='yes'\n\n   AOT_BUILD_FLAGS=\"--runtime=mobile --aot=full,$INVARIANT_AOT_OPTIONS\"\n   AOT_RUN_FLAGS=\"--runtime=mobile --full-aot\"\nelse\n   TEST_PROFILE=net_4_x\n   with_profile4_x_default=yes\nfi\n\nif test \"x$AOT_BUILD_FLAGS\" != \"x\"; then :\n   AC_SUBST(AOT_BUILD_FLAGS)\n   AC_SUBST(AOT_RUN_FLAGS)\n   # For llvmonlycheck + fullaotcheck\n   AC_SUBST(INVARIANT_AOT_OPTIONS)\nfi\n\nAC_SUBST(TEST_PROFILE)\n\nif test \"x$with_profile4_x\" = \"xdefault\"; then\n   with_profile4_x=$with_profile4_x_default\nfi\nif test \"x$with_monodroid\" = \"xdefault\"; then\n   with_monodroid=$with_monodroid_default\nfi\nif test \"x$with_monotouch\" = \"xdefault\"; then\n   with_monotouch=$with_monotouch_default\nfi\nif test \"x$with_monotouch_watch\" = \"xdefault\"; then\n   with_monotouch_watch=$with_monotouch_watch_default\nfi\nif test \"x$with_monotouch_tv\" = \"xdefault\"; then\n   with_monotouch_tv=$with_monotouch_tv_default\nfi\nif test \"x$with_bitcode\" = \"xdefault\"; then\n   with_bitcode=$with_bitcode_default\nfi\nif test \"x$with_xammac\" = \"xdefault\"; then\n   with_xammac=$with_xammac_default\nfi\nif test \"x$with_testing_aot_full_interp\" = \"xdefault\"; then\n   with_testing_aot_full_interp=$with_testing_aot_full_interp_default\nfi\nif test \"x$with_testing_aot_hybrid\" = \"xdefault\"; then\n   with_testing_aot_hybrid=$with_testing_aot_hybrid_default\nfi\nif test \"x$with_testing_aot_full\" = \"xdefault\"; then\n   with_testing_aot_full=$with_testing_aot_full_default\nfi\nif test \"x$with_winaot\" = \"xdefault\"; then\n   with_winaot=$with_winaot_default\nfi\nif test \"x$with_testing_winaot_interp\" = \"xdefault\"; then\n   with_testing_winaot_interp=$with_testing_winaot_interp_default\nfi\nif test \"x$with_orbis\" = \"xdefault\"; then\n   with_orbis=$with_orbis_default\nfi\nif test \"x$with_unreal\" = \"xdefault\"; then\n   with_unreal=$with_unreal_default\nfi\nif test \"x$with_wasm\" = \"xdefault\"; then\n   with_wasm=$with_wasm_default\nfi\n\n\nAM_CONDITIONAL(INSTALL_4_x, [test \"x$with_profile4_x\" = \"xyes\"])\nAM_CONDITIONAL(INSTALL_MONODROID, [test \"x$with_monodroid\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_MONOTOUCH, [test \"x$with_monotouch\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_MONOTOUCH_WATCH, [test \"x$with_monotouch_watch\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_MONOTOUCH_TV, [test \"x$with_monotouch_tv\" != \"xno\"])\nAM_CONDITIONAL(BITCODE, test \"x$with_bitcode\" = \"xyes\")\nAM_CONDITIONAL(STATIC_ICU, test \"x$with_static_icu\" = \"xyes\")\nAM_CONDITIONAL(INSTALL_XAMMAC, [test \"x$with_xammac\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_TESTING_AOT_FULL_INTERP, [test \"x$with_testing_aot_full_interp\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_TESTING_AOT_HYBRID, [test \"x$with_testing_aot_hybrid\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_TESTING_AOT_FULL, [test \"x$with_testing_aot_full\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_WINAOT, [test \"x$with_winaot\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_TESTING_WINAOT_INTERP, [test \"x$with_testing_winaot_interp\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_ORBIS, [test \"x$with_orbis\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_UNREAL, [test \"x$with_unreal\" != \"xno\"])\nAM_CONDITIONAL(INSTALL_WASM, [test \"x$with_wasm\" != \"xno\"])\n\nAM_CONDITIONAL(HYBRID_AOT_TESTS, [test \"x$TEST_PROFILE\" = \"xtesting_aot_hybrid\"] || [test \"x$TEST_PROFILE\" = \"xunreal\"])\nAM_CONDITIONAL(FULL_AOT_TESTS, [test \"x$TEST_PROFILE\" = \"xtesting_aot_full\"] || [test \"x$TEST_PROFILE\" = \"xtesting_aot_bitcode\"] || [test \"x$TEST_PROFILE\" = \"xwinaot\"] || [test \"x$TEST_PROFILE\" = \"xorbis\"] || [test \"x$TEST_PROFILE\" = \"xwasm\"])\nAM_CONDITIONAL(FULL_AOT_INTERP_TESTS, [test \"x$TEST_PROFILE\" = \"xtesting_aot_full_interp\"] || [test \"x$TEST_PROFILE\" = \"xtesting_aot_bitcode_interp\"] || [test \"x$TEST_PROFILE\" = \"xtesting_winaot_interp\"])\nAM_CONDITIONAL(DEFAULT_TESTS, [test \"x$TEST_PROFILE\" = \"xnet_4_x\"])\n\ndefault_profile=net_4_x\nif test -z \"$INSTALL_MONODROID_TRUE\"; then :\n   default_profile=monodroid\nfi\nif test -z \"$INSTALL_MONOTOUCH_TRUE\"; then :\n   default_profile=monotouch\nfi\nif test -z \"$INSTALL_XAMMAC_TRUE\"; then :\n   default_profile=xammac\nfi\nif test -z \"$INSTALL_TESTING_AOT_FULL_INTERP_TRUE\"; then :\n   default_profile=testing_aot_full_interp\nfi\nif test -z \"$INSTALL_TESTING_AOT_HYBRID_TRUE\"; then :\n   default_profile=testing_aot_hybrid\nfi\nif test -z \"$INSTALL_TESTING_AOT_FULL_TRUE\"; then :\n   default_profile=testing_aot_full\nfi\nif test -z \"$INSTALL_WINAOT_TRUE\"; then :\n   default_profile=winaot\nfi\nif test -z \"$INSTALL_TESTING_WINAOT_INTERP_TRUE\"; then :\n   default_profile=testing_winaot_interp\nfi\nif test -z \"$INSTALL_ORBIS_TRUE\"; then :\n   default_profile=orbis\nfi\nif test -z \"$INSTALL_UNREAL_TRUE\"; then :\n   default_profile=unreal\nfi\nif test -z \"$INSTALL_WASM_TRUE\"; then :\n   default_profile=wasm\nfi\nif test -z \"$INSTALL_4_x_TRUE\"; then :\n   default_profile=net_4_x\nfi\nDEFAULT_PROFILE=$default_profile\nAC_SUBST(DEFAULT_PROFILE)\n\n#\n# End build profile configuration\n#\n\nif test x$USE_NLS = xprofile_default; then\n\n\tAC_MSG_CHECKING([NLS used])\n\n\t# We make the default value for USE_NLS\n\t# \"no\" on OSX because it isn't available on most\n\t# default OSX installs. The most common configurations will\n\t# all disable it, so this saves us typing.\n\tif test x$host_darwin = xyes; then\n\t\tUSE_NLS=no;\n\telse\n\t\tUSE_NLS=yes;\n\tfi\n\n\tAC_SUBST([USE_NLS])\n\tAC_MSG_RESULT([$USE_NLS])\nfi\n\nAC_ARG_ENABLE(static-gcc-libs, [  --enable-static-gcc-libs      Statically link GCC support libs (for MinGW32)])\nif test \"x$enable_static_gcc_libs\" = \"xyes\"; then\n\t# llvm/build.mk doesn't use automake, so make a regular make variable for it.\n\tAC_SUBST(STATIC_GCC_LIBS,1)\nfi\nAM_CONDITIONAL(ENABLE_STATIC_GCC_LIBS, test \"x$enable_static_gcc_libs\" = \"xyes\")\n\nAC_ARG_ENABLE(minimal, [  --enable-minimal=LIST      drop support for LIST subsystems.\n     LIST is a comma-separated list from: aot, profiler, decimal, pinvoke, debug, appdomains, verifier, dllmap, reflection_emit, reflection_emit_save, large_code, logging, com, ssa, generics, attach, jit, interpreter, simd, soft_debug, perfcounters, normalization, desktop_loader, shared_perfcounters, remoting, security, lldb, mdb, assert_messages, config, cfgdir_config, cleanup, sgen_marksweep_conc, sgen_split_nursery, sgen_gc_bridge, sgen_toggleref, sgen_debug_helpers, sgen_binary_protocol, sockets, gac, threads, processes.],\n[\n\tfor feature in `echo \"$enable_minimal\" | sed -e \"s/,/ /g\"`; do\n\t\teval \"mono_feature_disable_$feature='yes'\"\n\tdone\n\tDISABLED_FEATURES=$enable_minimal\n\tdisabled=\"Disabled:      $enable_minimal\"\n],[])\n\nAC_DEFINE_UNQUOTED(DISABLED_FEATURES, \"$DISABLED_FEATURES\", [String of disabled features])\n\nif test \"x$mono_feature_disable_aot\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_AOT, 1, [Disable AOT Compiler])\n\tenable_system_aot=no\n\tAC_MSG_NOTICE([Disabled AOT compiler])\nfi\n\nif test \"x$mono_feature_disable_profiler\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_PROFILER, 1, [Disable default profiler support])\n\tAC_MSG_NOTICE([Disabled support for the profiler])\nfi\nAM_CONDITIONAL(DISABLE_PROFILER, test x$mono_feature_disable_profiler = xyes)\n\nif test \"x$mono_feature_disable_decimal\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_DECIMAL, 1, [Disable System.Decimal support])\n\tAC_MSG_NOTICE([Disabled support for decimal])\nfi\n\nif test \"x$mono_feature_disable_pinvoke\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_PINVOKE, 1, [Disable P/Invoke support])\n\tAC_MSG_NOTICE([Disabled support for P/Invoke])\nfi\n\nif test \"x$mono_feature_disable_debug\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_DEBUG, 1, [Disable runtime debugging support])\n\tAC_MSG_NOTICE([Disabled support for runtime debugging])\nfi\n\nif test \"x$mono_feature_disable_reflection_emit\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_REFLECTION_EMIT, 1, [Disable reflection emit support])\n\tmono_feature_disable_reflection_emit_save=yes\n\tAC_MSG_NOTICE([Disabled support for Reflection.Emit])\nfi\n\nif test \"x$mono_feature_disable_reflection_emit_save\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_REFLECTION_EMIT_SAVE, 1, [Disable assembly saving support in reflection emit])\n\tAC_MSG_NOTICE([Disabled support for Reflection.Emit.Save])\nfi\n\nif test \"x$mono_feature_disable_large_code\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_LARGE_CODE, 1, [Disable support for huge assemblies])\n\tAC_MSG_NOTICE([Disabled support for large assemblies])\nfi\n\nif test \"x$mono_feature_disable_logging\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_LOGGING, 1, [Disable support debug logging])\n\tAC_MSG_NOTICE([Disabled support for logging])\nfi\n\nif test \"x$mono_feature_disable_com\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_COM, 1, [Disable COM support])\n\tAC_MSG_NOTICE([Disabled COM support])\nfi\n\nif test \"x$mono_feature_disable_ssa\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SSA, 1, [Disable advanced SSA JIT optimizations])\n\tAC_MSG_NOTICE([Disabled SSA JIT optimizations])\nfi\n\nif test \"x$mono_feature_disable_generics\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_GENERICS, 1, [Disable generics support])\n\tAC_MSG_NOTICE([Disabled Generics Support])\nfi\n\nif test \"x$mono_feature_disable_shadowcopy\" = \"xyes\"; then\n   \tAC_DEFINE(DISABLE_SHADOW_COPY, 1, [Disable Shadow Copy for AppDomains])\n\tAC_MSG_NOTICE([Disabled Shadow copy for AppDomains])\nfi\n\nif test \"x$mono_feature_disable_portability\" = \"xyes\"; then\n   \tAC_DEFINE(DISABLE_PORTABILITY, 1, [Disables the IO portability layer])\n\tAC_MSG_NOTICE([Disabled IO Portability layer])\nfi\n\nif test \"x$mono_feature_disable_attach\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_ATTACH, 1, [Disable agent attach support])\n\tAC_MSG_NOTICE([Disabled agent attach])\nfi\n\nif test \"x$mono_feature_disable_verifier\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_VERIFIER, 1, [Disables the verifier])\n\tAC_MSG_NOTICE([Disabled the metadata and IL verifiers])\nfi\n\nif test \"x$mono_feature_disable_jit\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_JIT, 1, [Disable the JIT, only full-aot mode or interpreter will be supported by the runtime.])\n\tAC_MSG_NOTICE([Disabled the JIT engine, only full AOT or interpreter will be supported])\nfi\n\nAM_CONDITIONAL(DISABLE_JIT, test x$mono_feature_disable_jit = xyes)\n\nif test \"x$mono_feature_disable_interpreter\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_INTERPRETER, 1, [Disable the interpreter.])\n\tAC_MSG_NOTICE([Disabled the interpreter])\nfi\n\nAM_CONDITIONAL(DISABLE_INTERPRETER, test x$mono_feature_disable_interpreter = xyes)\n\nif test \"x$mono_feature_disable_interpreter\" != \"xyes\" -o \"x$mono_feature_disable_jit\" != \"xyes\"; then\n\tAC_DEFINE(ENABLE_ILGEN, 1, [Some VES is available at runtime])\nfi\n\nAM_CONDITIONAL(ENABLE_ILGEN, test x$mono_feature_disable_interpreter != xyes -o x$mono_feature_disable_jit != xyes)\n\nif test \"x$mono_feature_disable_simd\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SIMD, 1, [Disable SIMD intrinsics related optimizations.])\n\tAC_MSG_NOTICE([Disabled SIMD support])\nfi\n\nif test \"x$mono_feature_disable_soft_debug\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_DEBUGGER_AGENT, 1, [Disable Soft Debugger Agent.])\n\tAC_MSG_NOTICE([Disabled Soft Debugger.])\nfi\n\nAM_CONDITIONAL(DISABLE_DEBUGGER_AGENT, test x$mono_feature_disable_debugger_agent = xyes)\n\nif test \"x$mono_feature_disable_perfcounters\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_PERFCOUNTERS, 1, [Disable Performance Counters.])\n\tAC_MSG_NOTICE([Disabled Performance Counters.])\nfi\nif test \"x$mono_feature_disable_normalization\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_NORMALIZATION, 1, [Disable String normalization support.])\n\tAC_MSG_NOTICE([Disabled String normalization support.])\nfi\n\n#TODO: remove assembly_remapping feature name once everyone is using desktop_loader\nif test \"x$mono_feature_disable_assembly_remapping\" = \"xyes\" || test \"x$mono_feature_disable_desktop_loader\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_DESKTOP_LOADER, 1, [Disable desktop assembly loader semantics.])\n\tAC_MSG_NOTICE([Disabled desktop assembly loader semantics.])\nfi\n\nif test \"x$mono_feature_disable_shared_perfcounters\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SHARED_PERFCOUNTERS, 1, [Disable shared perfcounters.])\n\tAC_MSG_NOTICE([Disabled Shared perfcounters.])\nfi\n\nif test \"x$mono_feature_disable_appdomains\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_APPDOMAINS, 1, [Disable support for multiple appdomains.])\n\tAC_MSG_NOTICE([Disabled support for multiple appdomains.])\nfi\n\nif test \"x$mono_feature_disable_remoting\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_REMOTING, 1, [Disable remoting support (This disables type proxies and make com non-functional)])\n\tAC_MSG_NOTICE([Disabled remoting])\nfi\n\nif test \"x$mono_feature_disable_security\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SECURITY, 1, [Disable CAS/CoreCLR security])\n\tAC_MSG_NOTICE([Disabled CAS/CoreCLR security manager (used e.g. for Moonlight)])\nfi\n\nif test \"x$mono_feature_disable_lldb\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_LLDB, 1, [Disable support code for the LLDB plugin.])\n\tAC_MSG_NOTICE([Disabled LLDB plugin support code.])\nfi\n\nif test \"x$mono_feature_disable_mdb\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_MDB, 1, [Disable support for .mdb symbol files.])\n\tAC_MSG_NOTICE([Disabled support for .mdb symbol files.])\nfi\n\nif test \"x$mono_feature_disable_assert_messages\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_ASSERT_MESSAGES, 1, [Disable assertion messages.])\n\tAC_MSG_NOTICE([Disabled assertion messages.])\nfi\n\nif test \"x$mono_feature_disable_cfgdir_config\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_CFGDIR_CONFIG, 1, [Disable config directories.])\n\tAC_MSG_NOTICE([Disabled config directories.])\nfi\n\nif test \"x$mono_feature_disable_config\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_CONFIG, 1, [Disable .config file support.])\n\tAC_MSG_NOTICE([Disabled .config file support.])\nfi\n\nif test \"x$mono_feature_disable_cleanup\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_CLEANUP, 1, [Disable runtime cleanup.])\n\tAC_MSG_NOTICE([Disabled runtime cleanup.])\nfi\n\nif test \"x$mono_feature_disable_sgen_marksweep_conc\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_MAJOR_MARKSWEEP_CONC, 1, [Disable concurrent gc support in SGEN.])\n\tAC_MSG_NOTICE([Disabled concurrent gc support in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sgen_split_nursery\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_SPLIT_NURSERY, 1, [Disable minor=split support in SGEN.])\n\tAC_MSG_NOTICE([Disabled minor=split support in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sgen_gc_bridge\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_GC_BRIDGE, 1, [Disable gc bridge support in SGEN.])\n\tAC_MSG_NOTICE([Disabled gc bridge support in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sgen_toggleref\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_TOGGLEREF, 1, [Disable toggleref support in SGEN.])\n\tAC_MSG_NOTICE([Disabled toggleref support in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sgen_debug_helpers\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_DEBUG_HELPERS, 1, [Disable debug helpers in SGEN.])\n\tAC_MSG_NOTICE([Disabled debug helpers in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sgen_binary_protocol\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SGEN_BINARY_PROTOCOL, 1, [Disable binary protocol logging in SGEN.])\n\tAC_MSG_NOTICE([Disabled binary protocol logging in SGEN.])\nfi\n\nif test \"x$mono_feature_disable_sockets\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_SOCKETS, 1, [Disable sockets])\n\tAC_MSG_NOTICE([Disabled sockets])\nfi\n\nif test \"x$mono_feature_disable_gac\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_GAC, 1, [Disable GAC])\n\tAC_MSG_NOTICE([Disabled GAC support])\nfi\n\nif test \"x$mono_feature_disable_dllmap\" = \"xyes\"; then\n    AC_DEFINE(DISABLE_DLLMAP,1,[Disables use of DllMaps in MonoVM])\n    AC_MSG_NOTICE([Disabled DllMap in the loader.])\nfi\n\nif test \"x$mono_feature_disable_threads\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_THREADS, 1, [Disable Threads])\n\tAC_MSG_NOTICE([Disabled threading support])\nfi\n\nif test \"x$mono_feature_disable_processes\" = \"xyes\"; then\n\tAC_DEFINE(DISABLE_PROCESSES, 1, [Disable process support])\n\tAC_MSG_NOTICE([Disabled process support])\nfi\n\nAC_ARG_ENABLE(executables, [  --disable-executables disable the build of the runtime executables], enable_executables=$enableval, enable_executables=yes)\nAM_CONDITIONAL(DISABLE_EXECUTABLES, test x$enable_executables = xno)\n\nhas_extension_module=no\nAC_ARG_ENABLE(extension-module, [  --enable-extension-module=LIST enable the core-extensions from LIST],\n[\n\tfor extension in `echo \"$enable_extension_module\" | sed -e \"s/,/ /g\"`; do\n\t\tif test x$extension = xdefault ; then\n\t\t\thas_extension_module=yes;\n\t\tfi\n\tdone\n\tif test x$enable_extension_module = xyes; then\n\t\thas_extension_module=yes;\n\tfi\n], [])\n\nAM_CONDITIONAL([HAS_EXTENSION_MODULE], [test x$has_extension_module != xno])\n\nif test x$has_extension_module != xno ; then\n\tAC_DEFINE([ENABLE_EXTENSION_MODULE], 1, [Extension module enabled])\n\tAC_MSG_NOTICE([Enabling mono extension module.])\nfi\n\n# Deprecated\nAC_ARG_ENABLE(gsharedvt, [  --enable-gsharedvt Enable generic valuetype sharing (Deprecated)], enable_gsharedvt=$enableval, enable_gsharedvt=no)\n\nAC_MSG_CHECKING(for visibility __attribute__)\nAC_COMPILE_IFELSE([\n\tAC_LANG_SOURCE([[\n\t\tvoid __attribute__ ((visibility (\"hidden\"))) doit (void) {}\n   \t\tint main () { doit (); return 0; }\n   \t]])\n], [\n   have_visibility_hidden=yes\n   AC_MSG_RESULT(yes)\n], [\n   have_visibility_hidden=no\n   AC_MSG_RESULT(no)\n])\n\ndnl\ndnl Boehm GC configuration\ndnl\n\nAC_ARG_WITH(libgc,   [  --with-libgc=included,none  Controls the Boehm GC config, default=included],[libgc=$with_libgc],[libgc=included])\n\nAC_ARG_ENABLE(boehm, [  --disable-boehm            Disable the Boehm GC.], support_boehm=$enableval,support_boehm=${support_boehm:-yes})\nAM_CONDITIONAL(SUPPORT_BOEHM, test x$support_boehm = xyes)\n\nif test \"x$support_boehm\" = \"xyes\"; then\n\n\tAC_ARG_ENABLE(parallel-mark, [  --enable-parallel-mark     Enables Boehm GC Parallel Marking], enable_parallel_mark=$enableval, enable_parallel_mark=$parallel_mark)\n\tif test x$enable_parallel_mark = xyes; then\n\t\tlibgc_configure_args=\"$libgc_configure_args --enable-parallel-mark\"\n\tfi\n\n\tgc_msg=\"\"\n\tLIBGC_CPPFLAGS=\n\tLIBGC_LIBS=\n\tLIBGC_STATIC_LIBS=\n\tcase \"x$libgc\" in\n\t\txincluded)\n\t\t\tLIBGC_CPPFLAGS='-I$(top_srcdir)/external/bdwgc/include -I$(top_srcdir)/external/bdwgc/libatomic_ops/src'\n\t\t\tLIBGC_LIBS='$(top_builddir)/external/bdwgc/libgc.la'\n\t\t\tLIBGC_STATIC_LIBS='$(top_builddir)/external/bdwgc/libgc-static.la'\n\n\t\t\tBOEHM_DEFINES=\"-DHAVE_BOEHM_GC -DGC_THREADS\"\n\n\t\t\tif test x$target_win32 = xyes; then\n\t\t\t\tBOEHM_DEFINES=\"$BOEHM_DEFINES -DGC_NOT_DLL\"\n\t\t\t\tCFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DGC_BUILD -DGC_NOT_DLL\"\n\t\t\tfi\n\n\t\t\tgc_msg=\"Included Boehm GC with typed GC\"\n\t\t\tif test x$enable_parallel_mark = xyes; then\n\t\t\t\tAC_DEFINE_UNQUOTED(DEFAULT_GC_NAME, \"Included Boehm (with typed GC and Parallel Mark)\", [GC description])\n\t\t\t\tgc_msg=\"$gc_msg and parallel mark\"\n\t\t\telse\n\t\t\t\tAC_DEFINE_UNQUOTED(DEFAULT_GC_NAME, \"Included Boehm (with typed GC)\", [GC description])\n\t\t\tfi\n\t\t\t;;\n\n\t\txboehm|xbohem|xyes)\n\t\t\tAC_MSG_WARN(\"External Boehm is no longer supported\")\n\t\t\t;;\n\n\t\txsgen)\n\t\t\tAC_MSG_WARN(\"Use --with-sgen instead, --with-libgc= controls Boehm configuration\")\n\t\t\t;;\n\n\t\txnone)\n\t\t\tAC_MSG_WARN(\"Compiling mono without GC.\")\n\t\t\tAC_DEFINE_UNQUOTED(DEFAULT_GC_NAME, \"none\", [GC description])\n\t\t\tAC_DEFINE(HAVE_NULL_GC,1,[No GC support.])\n\t\t\tgc_msg=\"none\"\n\t\t\t;;\n\t\t*)\n\t\t\tAC_MSG_ERROR([Invalid argument $libgc to --with-libgc.])\n\t\t\t;;\n\tesac\n\n\tAC_ARG_WITH(large-heap, [  --with-large-heap=yes,no       Enable support for GC heaps larger than 3GB (defaults to no)], [large_heap=$withval], [large_heap=no])\n\tif test \"x$large_heap\" = \"xyes\"; then\n\t   CPPFLAGS=\"$CPPFLAGS -DLARGE_CONFIG\"\n\tfi\n\n\tAC_SUBST(LIBGC_CPPFLAGS)\n\tAC_SUBST(LIBGC_LIBS)\n\tAC_SUBST(LIBGC_STATIC_LIBS)\n\tAC_SUBST(BOEHM_DEFINES)\n\nfi\nAM_CONDITIONAL(SUPPORT_NULLGC, test \"x$libgc\" = \"xnone\")\n\ndnl\ndnl End of Boehm GC Configuration\ndnl\n\ndnl *************************************\ndnl *** Checks for zero length arrays ***\ndnl *************************************\nAC_MSG_CHECKING(whether $CC supports zero length arrays)\nAC_TRY_COMPILE([\n\tstruct s {\n\t\tint  length;\n\t\tchar data [0];\n\t};\n], [], [\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(MONO_ZERO_LEN_ARRAY, 0, [Length of zero length arrays])\n], [\n\tAC_MSG_RESULT(no)\n\tAC_DEFINE_UNQUOTED(MONO_ZERO_LEN_ARRAY, 1, [Length of zero length arrays])\n])\n\ndnl ***********************************\ndnl *** Checks for signals\ndnl ***********************************\nAC_CHECK_HEADERS(signal.h)\nAC_CHECK_FUNCS(sigaction)\nAC_CHECK_FUNCS(kill)\nAC_CHECK_FUNCS(signal)\n\n# signal() is declared inline in Android headers\n# so we need to workaround it by overriding the check.\nif test x$platform_android = xyes; then\n\tAC_DEFINE(HAVE_SIGNAL,1)\nfi\n\n# `target_ios=yes` does not detect watch devices and fails when cross-compiling\nAC_MONO_APPLE_TARGET(TARGET_OS_IPHONE, [mono_native_platform_ios=yes])\n\nif test x$host_win32 = xno; then\n\tdnl *************************************\n\tdnl *** Checks for time capabilities ***\n\tdnl *************************************\n\n\tAC_MSG_CHECKING(for CLOCK_MONOTONIC)\n\tAC_TRY_COMPILE([#include <time.h>], [\n\t\tconst int foo = CLOCK_MONOTONIC;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_CLOCK_MONOTONIC, 1, [CLOCK_MONOTONIC])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for CLOCK_MONOTONIC_COARSE)\n\tAC_TRY_COMPILE([#include <time.h>], [\n\t\tconst int foo = CLOCK_MONOTONIC_COARSE;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_CLOCK_MONOTONIC_COARSE, 1, [CLOCK_MONOTONIC_COARSE])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for CLOCK_REALTIME)\n\tAC_TRY_COMPILE([#include <time.h>], [\n\t\tconst int foo = CLOCK_REALTIME;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_CLOCK_REALTIME, 1, [CLOCK_REALTIME])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_FUNC(mach_absolute_time, [AC_DEFINE(HAVE_MACH_ABSOLUTE_TIME, 1, [mach_absolute_time])])\n\tAC_CHECK_FUNC(gethrtime, [AC_DEFINE(HAVE_GETHRTIME, 1, [gethrtime])])\n\tAC_CHECK_FUNC(read_real_time, [AC_DEFINE(HAVE_READ_REAL_TIME, 1, [read_real_time])])\n\tAC_CHECK_FUNC(mach_timebase_info, [AC_DEFINE(HAVE_MACH_TIMEBASE_INFO, 1, [mach_timebase_info])])\n\tAC_CHECK_FUNC(futimes,            [AC_DEFINE(HAVE_FUTIMES, 1, [futimes])])\n\tAC_CHECK_FUNC(futimens,           [AC_DEFINE(HAVE_FUTIMENS, 1, [futimens])])\n\n\tAC_CHECK_TYPES([clockid_t], [AC_DEFINE(HAVE_CLOCKID_T)], [],\n\t\t[#include <sys/types.h>])\n\n\tdnl hires monotonic clock support\n\n\t# Check for clock_gettime\n\tif test x$target_osx = xyes; then\n\t\t# On OSX, clock_gettime is only really available on 10.12 or later\n\t\t# However, it exists as a weak symbol on earlier versions, so hard-code a version check\n\t\tAC_MONO_APPLE_AVAILABLE(clock_gettime_available, [whether clock_gettime is available on OSX],\n\t\t[(MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_12)])\n\t\tif test x$clock_gettime_available = xyes; then\n\t\t\tAC_DEFINE(HAVE_CLOCK_GETTIME, 1, [clock_gettime])\n\t\tfi\n\telse\n\t\tAC_CHECK_FUNC(clock_gettime, [\n\t\t\tAC_DEFINE(HAVE_CLOCK_GETTIME, 1, [clock_gettime])\n\t\t], [\n\t\t\t# Old glibc (< 2.17) has clock_gettime in librt, so check there too\n\t\t\tAC_CHECK_LIB(rt, clock_gettime, [\n\t\t\t\tAC_DEFINE(HAVE_CLOCK_GETTIME, 1, [clock_gettime])\n\t\t\t\tLIBS=\"$LIBS -lrt\"\n\t\t\t])\n\t\t])\n\tfi\n\n\tAC_CHECK_FUNCS(clock_nanosleep)\n\n\tdnl dynamic loader support\n\tAC_CHECK_FUNC(dlopen, DL_LIB=\"\",\n\t\tAC_CHECK_LIB(dl, dlopen, DL_LIB=\"-ldl\", dl_support=no)\n\t)\n\tif test x$dl_support = xno; then\n\t\tAC_MSG_WARN([No dynamic loading support available])\n\telse\n\t\tLIBS=\"$LIBS $DL_LIB\"\n\t\tdnl from glib's configure.ac\n\t\tif test \"x$cross_compiling\" = \"xyes\"; then\n\t\t   AC_MSG_RESULT(cross compiling, assuming no)\n\t\t   mono_cv_uscore=no\n\t\telse\n\t\t\tAC_CACHE_CHECK([for preceeding underscore in symbols],\n\t\t\t  mono_cv_uscore,[\n\t\t\t  AC_TRY_RUN([#include <dlfcn.h>\n\t\t\t  int mono_underscore_test (void) { return 42; }\n\t\t\t  int main() {\n\t\t\t    void *f1 = (void*)0, *f2 = (void*)0, *handle;\n\t\t\t    handle = dlopen ((void*)0, 0);\n\t\t\t    if (handle) {\n\t\t\t      f1 = dlsym (handle, \"mono_underscore_test\");\n\t\t\t      f2 = dlsym (handle, \"_mono_underscore_test\");\n\t\t\t    } return (!f2 || f1);\n\t\t\t  }],\n\t\t\t\t[mono_cv_uscore=yes],\n\t\t\t\t[mono_cv_uscore=no],\n\t\t\t  [])\n\t\t  ])\n\t\tfi\n\t\tif test \"x$mono_cv_uscore\" = \"xyes\"; then\n\t\t\tAC_DEFINE(MONO_DL_NEED_USCORE, 1, [Does dlsym require leading underscore.])\n\t\tfi\n\t\tAC_CHECK_FUNC(dlerror)\n\tfi\n\n\tdnl ******************************************************************\n\tdnl *** Checks for the IKVM JNI interface library                  ***\n\tdnl ******************************************************************\n\tAC_ARG_WITH(ikvm-native, [  --with-ikvm-native=yes,no      build the IKVM JNI interface library (defaults to yes)],[with_ikvm_native=$withval],[with_ikvm_native=$ikvm_native])\n\n\tif test x$with_ikvm_native = xyes; then\n\t\tjdk_headers_found=\"IKVM Native\"\n\tfi\n\n\tAC_CHECK_HEADERS(execinfo.h)\n\n\tAC_CHECK_HEADERS(sys/auxv.h sys/resource.h)\n\n\tAC_CHECK_FUNCS(getgrgid_r)\n\tAC_CHECK_FUNCS(getgrnam_r)\n\tAC_CHECK_FUNCS(getresuid)\n\tAC_CHECK_FUNCS(setresuid)\n\tAC_CHECK_FUNCS(kqueue)\n\t# IBM provides a compatibility library for offering this function.\n\t# BSDs and others, have execinfo in base or packages.\n\tAC_SEARCH_LIBS(backtrace_symbols, execinfo util)\n\t# Two-step so it sets it in config.h\n\tAC_CHECK_FUNCS(backtrace_symbols)\n\tAC_CHECK_FUNCS(mkstemp)\n\tAC_CHECK_FUNCS(mmap)\n\tAC_CHECK_FUNCS(getrusage)\n\tAC_CHECK_FUNCS(getpriority)\n\tAC_CHECK_FUNCS(setpriority)\n\tAC_CHECK_FUNCS(dl_iterate_phdr)\n\tAC_CHECK_FUNCS(dladdr)\n\tAC_CHECK_FUNCS(sysconf)\n\tAC_CHECK_FUNCS(getrlimit)\n\tAC_CHECK_FUNCS(prctl)\n\tAC_CHECK_FUNCS(arc4random)\n\tAC_CHECK_FUNCS(nl_langinfo)\n\n\tAC_CHECK_FUNCS(sched_getaffinity)\n\tAC_CHECK_FUNCS(sched_setaffinity)\n\tAC_CHECK_FUNCS(sched_getcpu)\n\n\tif test x$platform_android != xyes; then\n\t\tAC_CHECK_FUNCS(getpwnam_r)\n\t\tAC_CHECK_FUNCS(getpwuid_r)\n\tfi\n\n\tAC_CHECK_FUNCS(readlink)\n\tAC_CHECK_FUNCS(chmod)\n\tAC_CHECK_FUNCS(lstat)\n\tAC_CHECK_FUNCS(getdtablesize)\n\n\tAC_CHECK_FUNCS(ftruncate)\n\tAC_CHECK_FUNCS(msync)\n\n\tAC_CHECK_FUNCS(gethostname getpeername)\n\tAC_CHECK_FUNCS(utime utimes)\n\n\tAC_CHECK_FUNCS(openlog closelog)\n\tAC_CHECK_FUNCS(atexit)\n\tAC_CHECK_FUNCS(popen)\n\n\tAC_FUNC_STRERROR_R()\n\n\tdnl ****************************************************************\n\tdnl *** Check for sched_setaffinity from glibc versions before   ***\n\tdnl *** 2.3.4. The older versions of the function only take 2    ***\n\tdnl *** parameters, not 3.                                       ***\n\tdnl ***                                                          ***\n\tdnl *** Because the interface change was not made in a minor     ***\n\tdnl *** version rev, the __GLIBC__ and __GLIBC_MINOR__ macros    ***\n\tdnl *** won't always indicate the interface sched_affinity has.  ***\n\tdnl ****************************************************************\n\tAC_MSG_CHECKING(for sched_setaffinity from glibc < 2.3.4)\n\tAC_TRY_COMPILE([#include <sched.h>], [\n            int mask = 1; \n            sched_setaffinity(0, &mask);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(GLIBC_BEFORE_2_3_4_SCHED_SETAFFINITY, 1, [Have GLIBC_BEFORE_2_3_4_SCHED_SETAFFINITY])\n\t], [\n\t\t# We have the new, three-parameter version\n\t\tAC_MSG_RESULT(no)\n\t])\n\tAC_TRY_COMPILE([#include <sched.h>], [\n\t     CPU_COUNT((void *) 0);\n\t], [\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(GLIBC_HAS_CPU_COUNT, 1, [GLIBC has CPU_COUNT macro in sched.h])\n\t], [\n\t\t# We have the new, three-parameter version\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl ******************************************************************\n\tdnl *** Check for large file support                               ***\n\tdnl *** (If we were using autoconf 2.50 we'd use AC_SYS_LARGEFILE) ***\n\tdnl ******************************************************************\n\t\n\t# Check that off_t can represent 2**63 - 1 correctly, working around\n\t# potential compiler bugs.  Defines LARGE_FILE_SUPPORT, adds $1 to\n\t# CPPFLAGS and sets $large_offt to yes if the test succeeds\n\tlarge_offt=no\n\tAC_DEFUN([LARGE_FILES], [\n\t\tlarge_CPPFLAGS=$CPPFLAGS\n\t\tCPPFLAGS=\"$CPPFLAGS $1\"\n\t\tAC_TRY_COMPILE([\n\t\t\t#include <sys/types.h>\n\t\t\t#include <limits.h>\n\t\t], [\n\t\t\t/* Lifted this compile time assert method from: http://www.jaggersoft.com/pubs/CVu11_3.html */\n\t\t\t#define COMPILE_TIME_ASSERT(pred) \\\n\t\t\t\tswitch(0){case 0:case pred:;}\n\t\t\tCOMPILE_TIME_ASSERT(sizeof(off_t) * CHAR_BIT == 64);\n\t\t], [\n\t\t\tAC_MSG_RESULT(ok)\n\t\t\tAC_DEFINE(HAVE_LARGE_FILE_SUPPORT, 1, [Have large file support])\n\t\t\tlarge_CPPFLAGS=\"$large_CPPFLAGS $1\"\n\t\t\tlarge_offt=yes\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\t\tCPPFLAGS=$large_CPPFLAGS\n\t])\n\n\tAC_MSG_CHECKING(if off_t is 64 bits wide)\n\tLARGE_FILES(\"\")\n\tif test $large_offt = no; then\n\t\tAC_MSG_CHECKING(if _FILE_OFFSET_BITS=64 gives 64 bit off_t)\n\t\tLARGE_FILES(\"-D_FILE_OFFSET_BITS=64\")\n\tfi\n\tif test $large_offt = no; then\n\t\tAC_MSG_WARN([No 64 bit file size support available])\n\tfi\n\t\n\tdnl *****************************\n\tdnl *** Checks for libsocket  ***\n\tdnl *****************************\n\tAC_CHECK_LIB(socket, socket, LIBS=\"$LIBS -lsocket\")\n\n\tdnl *****************************\n\tdnl *** Checks for IPPROTO_IP ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for IPPROTO_IP)\n\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\tint level = IPPROTO_IP;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IPPROTO_IP, 1, [Have IPPROTO_IP])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *******************************\n\tdnl *** Checks for IPPROTO_IPV6 ***\n\tdnl *******************************\n\tAC_MSG_CHECKING(for IPPROTO_IPV6)\n\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\tint level = IPPROTO_IPV6;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IPPROTO_IPV6, 1, [Have IPPROTO_IPV6])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl ******************************\n\tdnl *** Checks for IPPROTO_TCP ***\n\tdnl ******************************\n\tAC_MSG_CHECKING(for IPPROTO_TCP)\n\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\tint level = IPPROTO_TCP;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IPPROTO_TCP, 1, [Have IPPROTO_TCP])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for SOL_IP     ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for SOL_IP)\n\tAC_TRY_COMPILE([#include <netdb.h>], [\n\t\tint level = SOL_IP;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SOL_IP, 1, [Have SOL_IP])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for SOL_IPV6     ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for SOL_IPV6)\n\tAC_TRY_COMPILE([#include <netdb.h>], [\n\t\tint level = SOL_IPV6;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SOL_IPV6, 1, [Have SOL_IPV6])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for SOL_TCP    ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for SOL_TCP)\n\tAC_TRY_COMPILE([#include <netdb.h>], [\n\t\tint level = SOL_TCP;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SOL_TCP, 1, [Have SOL_TCP])\n\t], [\n\t\t# We'll have to use getprotobyname\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for IP_PKTINFO ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for IP_PKTINFO)\n\tAC_TRY_COMPILE([#include <linux/in.h>], [\n\t\tint level = IP_PKTINFO;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_PKTINFO, 1, [Have IP_PKTINFO])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for IPV6_PKTINFO ***\n\tdnl *****************************\n\tAC_MSG_CHECKING(for IPV6_PKTINFO)\n\tAC_TRY_COMPILE([#include <netdb.h>], [\n\t\tint level = IPV6_PKTINFO;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IPV6_PKTINFO, 1, [Have IPV6_PKTINFO])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Checks for IP_DONTFRAG     ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for IP_DONTFRAG)\n\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\tint level = IP_DONTFRAG;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_DONTFRAG, 1, [Have IP_DONTFRAG])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Checks for IP_DONTFRAGMENT ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for IP_DONTFRAGMENT)\n\tAC_TRY_COMPILE([#include <Ws2ipdef.h>], [\n\t\tint level = IP_DONTFRAGMENT;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_DONTFRAGMENT, 1, [Have IP_DONTFRAGMENT])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Checks for IP_MTU_DISCOVER ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for IP_MTU_DISCOVER)\n\tAC_TRY_COMPILE([#include <linux/in.h>], [\n\t\tint level = IP_MTU_DISCOVER;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_MTU_DISCOVER, 1, [Have IP_MTU_DISCOVER])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Checks for  IP_PMTUDISC_DO ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for IP_PMTUDISC_DO)\n\tAC_TRY_COMPILE([#include <linux/in.h>], [\n\t\tint level = IP_PMTUDISC_DO;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_PMTUDISC_DO, 1, [Have IP_PMTUDISC_DO])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n \tdnl *********************************\n\tdnl *** Check for struct ip_mreqn ***\n\tdnl *********************************\n\tAC_MSG_CHECKING(for struct ip_mreqn)\n\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\tstruct ip_mreqn mreq;\n\t\tmreq.imr_address.s_addr = 0;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_STRUCT_IP_MREQN, 1, [Have struct ip_mreqn])\n\t], [\n\t\t# We'll just have to try and use struct ip_mreq\n\t\tAC_MSG_RESULT(no)\n\t\tAC_MSG_CHECKING(for struct ip_mreq)\n\t\tAC_TRY_COMPILE([#include <netinet/in.h>], [\n\t\t\tstruct ip_mreq mreq;\n\t\t\tmreq.imr_interface.s_addr = 0;\n\t\t], [\n\t\t\t# Yes, we have it...\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_STRUCT_IP_MREQ, 1, [Have struct ip_mreq])\n\t\t], [\n\t\t\t# No multicast support\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\t])\n\t\n\tdnl **********************************\n\tdnl *** Check for getaddrinfo ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getaddrinfo)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgetaddrinfo(NULL,NULL,NULL,NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETADDRINFO, 1, [Have getaddrinfo])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for gethostbyname2_r ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for gethostbyname2_r)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\n\t\tgethostbyname2_r(NULL,0,NULL,NULL,0,NULL,NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETHOSTBYNAME2_R, 1, [Have gethostbyname2_r])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for gethostbyname2 ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for gethostbyname2)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgethostbyname2(NULL,0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETHOSTBYNAME2, 1, [Have gethostbyname2])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for gethostbyname ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for gethostbyname)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgethostbyname(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETHOSTBYNAME, 1, [Have gethostbyname])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getprotobyname ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getprotobyname)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgetprotobyname(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETPROTOBYNAME, 1, [Have getprotobyname])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getprotobyname_r ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getprotobyname_r)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgetprotobyname_r(NULL, NULL, NULL, 0, NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETPROTOBYNAME_R, 1, [Have getprotobyname_r])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getnameinfo ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getnameinfo)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tgetnameinfo (NULL, 0, NULL, 0, NULL, 0, 0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETNAMEINFO, 1, [Have getnameinfo])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\n\tdnl **********************************\n\tdnl *** Check for inet_ntop ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for inet_ntop)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <arpa/inet.h>\n\t], [\n\t\tinet_ntop (0, NULL, NULL, 0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_INET_NTOP, 1, [Have inet_ntop])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl *****************************\n\tdnl *** Checks for libnsl     ***\n\tdnl *****************************\n\tAC_CHECK_FUNC(gethostbyaddr, , AC_CHECK_LIB(nsl, gethostbyaddr, LIBS=\"$LIBS -lnsl\"))\n\n\tAC_CHECK_FUNCS(inet_pton inet_aton)\n\n\tdnl *****************************\n\tdnl *** Checks for libxnet    ***\n\tdnl *****************************\n\tcase \"${host}\" in\n\t\t*solaris*)\n\t\t\tAC_MSG_CHECKING(for Solaris XPG4 support)\n\t\t\tif test -f /usr/lib/libxnet.so; then\n\t\t\t\tCPPFLAGS=\"$CPPFLAGS -D_XOPEN_SOURCE=500\"\n\t    \t\t\tCPPFLAGS=\"$CPPFLAGS -D__EXTENSIONS__\"\n\t\t\t\tCPPFLAGS=\"$CPPFLAGS -D_XOPEN_SOURCE_EXTENDED=1\"\n           \t\t\tLIBS=\"$LIBS -lxnet\"\n  \t    \t\t\tAC_MSG_RESULT(yes)\n\t\t\telse\n  \t    \t\t\tAC_MSG_RESULT(no)\n\t\t\tfi\n\n\t\t\tif test \"$GCC\" = \"yes\"; then\n\t\t    \t\tCFLAGS=\"$CFLAGS -Wno-char-subscripts\"\n\t\t\tfi\n    \t\t;;\n\tesac\n\n\tdnl *****************************\n\tdnl *** Checks for libpthread ***\n\tdnl *****************************\n# on FreeBSD -STABLE, the pthreads functions all reside in libc_r\n# and libpthread does not exist\n#\n\tcase \"${host}\" in\n\t\t*-*-*haiku*)\n\t\t\tdnl Haiku has pthread in libroot (libc equiv)\n\t\t\tAC_CHECK_LIB(pthread, main, LIBS=\"$LIBS\")\n\t\t;;\n\t\t*-*-*freebsd*)\n\t\t\tAC_CHECK_LIB(pthread, main, LIBS=\"$LIBS -pthread\")\n\t\t;;\n\t\t*-*-*openbsd*)\n\t\t\tAC_CHECK_LIB(pthread, main, LIBS=\"$LIBS -pthread\")\n\t\t;;\n\t\t*)\n\t\t\tAC_CHECK_LIB(pthread, main, LIBS=\"$LIBS -lpthread\")\n\t\t;;\n\tesac\n\tAC_CHECK_HEADERS(pthread.h)\n\tAC_CHECK_HEADERS(pthread_np.h)\n\tAC_CHECK_FUNCS(pthread_mutex_timedlock)\n\tAC_CHECK_FUNCS(pthread_getattr_np pthread_attr_get_np pthread_getname_np pthread_setname_np pthread_cond_timedwait_relative_np)\n\tAC_CHECK_FUNCS(pthread_kill pthread_jit_write_protect_np)\n\tAC_MSG_CHECKING(for PTHREAD_MUTEX_RECURSIVE)\n\tAC_TRY_COMPILE([ #include <pthread.h>], [\n\t\tpthread_mutexattr_t attr;\n\t\tpthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);\n\t], [\n\t\tAC_MSG_RESULT(ok)\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t\tAC_ERROR(Posix system lacks support for recursive mutexes)\n\t])\n\tAC_CHECK_FUNCS(pthread_attr_setstacksize)\n\tAC_CHECK_FUNCS(pthread_attr_getstack pthread_attr_getstacksize)\n\tAC_CHECK_FUNCS(pthread_get_stacksize_np pthread_get_stackaddr_np)\n\tdnl check that pthread_mutexattr_setprotocol is declared\n\tAC_CHECK_DECLS([pthread_mutexattr_setprotocol], [], [], [[#include <pthread.h>]])\n\tAC_CHECK_FUNCS(mincore mlock munlock)\n\n\tdnl ***********************************\n\tdnl *** Checks for working __thread ***\n\tdnl ***********************************\n\tAC_MSG_CHECKING(for working __thread)\n\tif test \"x$with_tls\" != \"x__thread\"; then\n\t\tAC_MSG_RESULT(disabled)\n\telif test \"x$cross_compiling\" = \"xyes\"; then\n\t\tAC_MSG_RESULT(cross compiling, assuming yes)\n\telse\n\t\tAC_TRY_RUN([\n\t\t\t#if defined(__APPLE__) && defined(__clang__)\n\t\t\t#error \"__thread does not currently work with clang on Mac OS X\"\n\t\t\t#endif\n\t\t\t\n\t\t\t#include <unistd.h>\n\t\t\t#include <pthread.h>\n\t\t\t__thread int i;\n\t\t\tstatic int res1, res2;\n\n\t\t\tvoid thread_main (void *arg)\n\t\t\t{\n\t\t\t\ti = arg;\n\t\t\t\tsleep (1);\n\t\t\t\tif (arg == 1)\n\t\t\t\t\tres1 = (i == arg);\n\t\t\t\telse\n\t\t\t\t\tres2 = (i == arg);\n\t\t\t}\n\n\t\t\tint main () {\n\t\t\t\tpthread_t t1, t2;\n\n\t\t\t\ti = 5;\n\n\t\t\t\tpthread_create (&t1, NULL, thread_main, 1);\n\t\t\t\tpthread_create (&t2, NULL, thread_main, 2);\n\n\t\t\t\tpthread_join (t1, NULL);\n\t\t\t\tpthread_join (t2, NULL);\n\n\t\t\t\treturn !(res1 + res2 == 2);\n\t\t\t}\n\t\t], [\n\t\t\t\tAC_MSG_RESULT(yes)\n\t\t], [\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\twith_tls=pthread\n\t\t])\n\tfi\n\n\tdnl **************************************\n\tdnl *** Checks for working sigaltstack ***\n\tdnl **************************************\n\tAC_MSG_CHECKING(for working sigaltstack)\n\tif test \"x$with_sigaltstack\" != \"xyes\"; then\n\t\tAC_MSG_RESULT(disabled)\n\telif test \"x$cross_compiling\" = \"xyes\"; then\n\t\tAC_MSG_RESULT(cross compiling, assuming no)\n\t\twith_sigaltstack=no\n\telse\n\t\tAC_TRY_RUN([\n\t\t\t#include <stdio.h>\n\t\t\t#include <stdlib.h>\n\t\t\t#include <unistd.h>\n\t\t\t#include <signal.h>\n\t\t\t#include <pthread.h>\n\t\t\t#include <sys/wait.h>\n\t\t\t#if defined(__FreeBSD__) || defined(__NetBSD__)\n\t\t\t#define SA_STACK SA_ONSTACK\n\t\t\t#endif\n\t\t\tstatic void\n\t\t\tsigsegv_signal_handler (int _dummy, siginfo_t *info, void *context)\n\t\t\t{\n\t\t\t\texit (0);\n\t\t\t}\n\n\t\t\tvolatile char*__ptr = NULL;\n\t\t\tstatic void *\n\t\t\tloop (void *ignored)\n\t\t\t{\n\t\t\t\t*__ptr = 0;\n\t\t\t\treturn NULL;\n\t\t\t}\n\n\t\t\tstatic void\n\t\t\tchild ()\n\t\t\t{\n\t\t\t\tstruct sigaction sa;\n\t\t\t\tstack_t sas;\n\t\t\t\tpthread_t id;\n\t\t\t\tpthread_attr_t attr;\n\n\t\t\t\tsa.sa_sigaction = sigsegv_signal_handler;\n\t\t\t\tsigemptyset (&sa.sa_mask);\n\t\t\t\tsa.sa_flags = SA_SIGINFO | SA_ONSTACK;\n\t\t\t\tif (sigaction (SIGSEGV, &sa, NULL) == -1) {\n\t\t\t\t\tperror (\"sigaction\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/* x86 darwin deliver segfaults using SIGBUS */\n\t\t\t\tif (sigaction (SIGBUS, &sa, NULL) == -1) {\n\t\t\t\t\tperror (\"sigaction\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsas.ss_sp = malloc (SIGSTKSZ);\n\t\t\t\tsas.ss_size = SIGSTKSZ;\n\t\t\t\tsas.ss_flags = 0;\n\t\t\t\tif (sigaltstack (&sas, NULL) == -1) {\n\t\t\t\t\tperror (\"sigaltstack\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpthread_attr_init (&attr);\n\t\t\t\tif (pthread_create(&id, &attr, loop, &attr) != 0) {\n\t\t\t\t\tprintf (\"pthread_create\\n\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsleep (100);\n\t\t\t}\n\n\t\t\tint\n\t\t\tmain ()\n\t\t\t{\n\t\t\t\tpid_t son;\n\t\t\t\tint status;\n\t\t\t\tint i;\n\n\t\t\t\tson = fork ();\n\t\t\t\tif (son == -1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (son == 0) {\n\t\t\t\t\tchild ();\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < 300; ++i) {\n\t\t\t\t\twaitpid (son, &status, WNOHANG);\n\t\t\t\t\tif (WIFEXITED (status) && WEXITSTATUS (status) == 0)\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\tusleep (10000);\n\t\t\t\t}\n\n\t\t\t\tkill (son, SIGKILL);\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t], [\n\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\tAC_DEFINE(HAVE_WORKING_SIGALTSTACK, 1, [Have a working sigaltstack])\n\t\t], [\n\t\t\t\twith_sigaltstack=no\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\tfi\n\n\tdnl ********************************\n\tdnl *** Checks for sys_signame ***\n\tdnl ********************************\n\tAC_MSG_CHECKING(for sys_signame)\n\t\tAC_TRY_LINK([\n\t\t#include <signal.h>\n\t], [\n\t\tconst char *signame = sys_signame[0];\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SYSSIGNAME, 1, [Have sys_signame])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\n\tdnl ********************************\n\tdnl *** Checks for semaphore lib ***\n\tdnl ********************************\n\t# 'Real Time' functions on Solaris\n\t# posix4 on Solaris 2.6\n\t# pthread (first!) on Linux\n\tAC_SEARCH_LIBS(sem_init, pthread rt posix4) \n\n\tAC_SEARCH_LIBS(shm_open, pthread rt posix4) \n\tAC_CHECK_FUNCS(shm_open)\n\n\tdnl ********************************\n\tdnl *** Checks for timezone stuff **\n\tdnl ********************************\n\tAC_CACHE_CHECK(for tm_gmtoff in struct tm, ac_cv_struct_tm_gmtoff,\n\t\tAC_TRY_COMPILE([\n\t\t\t#include <time.h>\n\t\t\t], [\n\t\t\tstruct tm tm;\n\t\t\ttm.tm_gmtoff = 1;\n\t\t\t], ac_cv_struct_tm_gmtoff=yes, ac_cv_struct_tm_gmtoff=no))\n\tif test $ac_cv_struct_tm_gmtoff = yes; then\n\t\tAC_DEFINE(HAVE_TM_GMTOFF, 1, [Have tm_gmtoff])\n\telse\n\t\tAC_CACHE_CHECK(for timezone variable, ac_cv_var_timezone,\n\t\t\tAC_TRY_COMPILE([\n\t\t\t\t#include <time.h>\n\t\t\t], [\n\t\t\t\ttimezone = 1;\n\t\t\t], ac_cv_var_timezone=yes, ac_cv_var_timezone=no))\n\t\tif test $ac_cv_var_timezone = yes; then\n\t\t\tAC_DEFINE(HAVE_TIMEZONE, 1, [Have timezone variable])\n\t\telse\n\t\t\tAC_ERROR(unable to find a way to determine timezone)\n\t\tfi\n\tfi\n\n\tdnl *********************************\n\tdnl *** Checks for math functions ***\n\tdnl *********************************\n\tAC_SEARCH_LIBS(sqrtf, m)\n\n\tdnl ****************************************************************\n\tdnl *** Checks for working poll() (macosx defines it but doesn't ***\n\tdnl *** have it in the library (duh))                            ***\n\tdnl ****************************************************************\n\tAC_CHECK_FUNCS(poll)\n\n\tdnl **********************************\n\tdnl *** epoll\t\t\t   ***\n\tdnl **********************************\n\tAC_CHECK_HEADERS(sys/epoll.h)\n\thaveepoll=no\n\tAC_CHECK_FUNCS(epoll_ctl, [haveepoll=yes], )\n\tif test \"x$haveepoll\" = \"xyes\" -a \"x$ac_cv_header_sys_epoll_h\" = \"xyes\"; then\n\t\tAC_DEFINE(HAVE_EPOLL, 1, [epoll supported])\n\tfi\n\n\thavekqueue=no\n\n\tAC_CHECK_HEADERS(sys/event.h)\n\tAC_CHECK_FUNCS(kqueue, [havekqueue=yes], )\n\n\tdnl **************************************\n\tdnl * Darwin has a race that prevents us from using reliably:\n\tdnl * http://lists.apple.com/archives/darwin-dev/2011/Jun/msg00016.html\n\tdnl * Since kqueue is mostly used for scaling large web servers, \n\tdnl * and very few folks run Mono on large web servers on OSX, falling\n\tdnl * back \n\tdnl **************************************\n\tif test \"x$havekqueue\" = \"xyes\" -a \"x$ac_cv_header_sys_event_h\" = \"xyes\"; then\n\t\tif test \"x$host_darwin\" = \"xno\"; then\n\t\t\tAC_DEFINE(USE_KQUEUE_FOR_THREADPOOL, 1, [Use kqueue for the threadpool])\n\t\tfi\n\tfi\n\n\tdnl ******************************\n\tdnl *** Checks for SIOCGIFCONF ***\n\tdnl ******************************\n\tAC_CHECK_HEADERS(sys/ioctl.h)\n\tAC_CHECK_HEADERS(net/if.h, [], [],\n\t   [\n\t   #ifdef HAVE_SYS_TYPES_H\n\t   # include <sys/types.h>\n\t   #endif\n\t   #ifdef HAVE_SYS_SOCKET_H\n\t   # include <sys/socket.h>\n\t   #endif\n\t   ])\n\tAC_MSG_CHECKING(for ifreq)\n\tAC_TRY_COMPILE([\n\t\t#include <stdio.h>\n\t\t#include <sys/ioctl.h>\n\t\t#include <net/if.h>\n\t\t], [\n\t\tstruct ifconf ifc;\n\t\tstruct ifreq *ifr;\n\t\tvoid *x;\n\t\tifc.ifc_len = 0;\n\t\tifc.ifc_buf = NULL;\n\t\tx = (void *) &ifr->ifr_addr;\n\t\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_SIOCGIFCONF, 1, [Can get interface list])\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\tdnl **********************************\n\tdnl ***     Checks for sin_len     ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for sockaddr_in.sin_len)\n\tAC_TRY_COMPILE([\n\t\t#include <netinet/in.h>\n\t\t], [\n\t\tstruct sockaddr_in saddr;\n\t\tsaddr.sin_len = sizeof (saddr);\n\t\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_SOCKADDR_IN_SIN_LEN, 1, [sockaddr_in has sin_len])\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\t\n\tdnl **********************************\n\tdnl ***    Checks for sin6_len     ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for sockaddr_in6.sin6_len)\n\tAC_TRY_COMPILE([\n\t\t#include <netinet/in.h>\n\t\t], [\n\t\tstruct sockaddr_in6 saddr6;\n\t\tsaddr6.sin6_len = sizeof (saddr6);\n\t\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_SOCKADDR_IN6_SIN_LEN, 1, [sockaddr_in6 has sin6_len])\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\tdnl **********************************\n\tdnl *** Check for getifaddrs       ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getifaddrs)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <sys/types.h>\n\t\t#include <sys/socket.h>\n\t\t#ifdef HAVE_NET_IF_H\n\t\t#include <net/if.h>\n\t\t#endif\n\t\t#include <ifaddrs.h>\n\t], [\n\t\tgetifaddrs(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETIFADDRS, 1, [Have getifaddrs])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\tdnl **********************************\n\tdnl *** Check for if_nametoindex   ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for if_nametoindex)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <sys/types.h>\n\t\t#include <sys/socket.h>\n\t\t#include <net/if.h>\n\t], [\n\t\tif_nametoindex(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IF_NAMETOINDEX, 1, [Have if_nametoindex])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\tdnl **********************************\n\tdnl *** Check for access ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for access)\n\t\tAC_TRY_LINK([\n\t\t#include <unistd.h>\n\t], [\n\t\taccess(NULL,0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_ACCESS, 1, [Have access])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\t\t\t\n\tdnl **********************************\n\tdnl *** Checks for proclib         ***\n\tdnl **********************************\n\tAC_CHECK_HEADER(sys/errno.h, [AC_DEFINE(HAVE_SYS_ERRNO_H, 1, Define to 1 if you have the <sys/errno.h> header file.)])\n\tdnl **********************************\n\tdnl *** Checks for MonoPosixHelper ***\n\tdnl **********************************\n\tAC_CHECK_HEADERS(checklist.h)\n\tAC_CHECK_HEADERS(pathconf.h)\n\tAC_CHECK_HEADERS(fstab.h)\n\tAC_CHECK_HEADERS(attr/xattr.h)\n\tAC_CHECK_HEADERS(sys/extattr.h)\n\tAC_CHECK_HEADERS(sys/sendfile.h)\n\tAC_CHECK_HEADERS(sys/statvfs.h)\n\tAC_CHECK_HEADERS(sys/statfs.h)\n\tAC_CHECK_HEADERS(sys/vfstab.h)\n\tAC_CHECK_HEADERS(sys/xattr.h)\n\tAC_CHECK_HEADERS(sys/mman.h)\n\tAC_CHECK_HEADERS(sys/param.h)\n\tAC_CHECK_HEADERS(sys/mount.h, [], [],\n\t\t[\n\t\t#ifdef HAVE_SYS_PARAM_H\n\t\t# include <sys/param.h>\n\t\t#endif\n\t\t])\n\tAC_CHECK_HEADERS(sys/mount.h)\n\tAC_CHECK_FUNCS(confstr)\n\tAC_CHECK_FUNCS(seekdir telldir)\n\tAC_CHECK_FUNCS(getdomainname)\n\tAC_CHECK_FUNCS(setdomainname)\n\tAC_CHECK_FUNCS(endgrent getgrent fgetgrent setgrent)\n\tAC_CHECK_FUNCS(setgroups)\n\tAC_CHECK_FUNCS(endpwent getpwent fgetpwent setpwent)\n\tAC_CHECK_FUNCS(getfsstat)\n\tAC_CHECK_FUNCS(lutimes futimes)\n\tAC_CHECK_FUNCS(mremap)\n\tAC_CHECK_FUNCS(remap_file_pages)\n\tAC_CHECK_FUNCS(posix_fadvise)\n\tAC_CHECK_FUNCS(posix_fallocate)\n\tAC_CHECK_FUNCS(vsnprintf)\n\tAC_CHECK_FUNCS(sendfile)\n\tAC_CHECK_FUNCS(gethostid sethostid)\n\tAC_CHECK_FUNCS(sethostname)\n\tAC_CHECK_FUNCS(statfs)\n\tAC_CHECK_FUNCS(fstatfs)\n\tAC_CHECK_FUNCS(statvfs)\n\tAC_CHECK_FUNCS(fstatvfs)\n\tAC_CHECK_FUNCS(stime)\n\tAC_CHECK_FUNCS(ttyname_r)\n\tAC_CHECK_FUNCS(psignal)\n\tAC_CHECK_FUNCS(getlogin_r)\n\tAC_CHECK_FUNCS(lockf)\n\tAC_CHECK_FUNCS(swab)\n\tAC_CHECK_FUNCS(setusershell endusershell)\n\tAC_CHECK_FUNCS(futimens utimensat)\n\tAC_CHECK_FUNCS(fstatat mknodat readlinkat)\n\tAC_CHECK_FUNCS(readv writev preadv pwritev)\n\tAC_CHECK_FUNCS(setpgid)\n\tAC_CHECK_FUNCS(system)\n\tAC_CHECK_FUNCS(fork execv execve)\n\tAC_CHECK_FUNCS(waitpid)\n\tAC_CHECK_FUNCS(accept4)\n\tAC_CHECK_FUNCS(localtime_r)\n\tAC_CHECK_FUNCS(mkdtemp)\n\tAC_CHECK_SIZEOF(size_t)\n\tAC_CHECK_TYPES([blksize_t], [AC_DEFINE(HAVE_BLKSIZE_T)], , \n\t\t[#include <sys/types.h>\n\t\t #include <sys/stat.h>\n\t\t #include <unistd.h>])\n\tAC_CHECK_TYPES([blkcnt_t], [AC_DEFINE(HAVE_BLKCNT_T)], ,\n\t\t[#include <sys/types.h>\n\t\t #include <sys/stat.h>\n\t\t #include <unistd.h>])\n\tAC_CHECK_TYPES([suseconds_t], [AC_DEFINE(HAVE_SUSECONDS_T)], ,\n\t\t[#include <sys/time.h>])\n\tAC_CHECK_TYPES([struct cmsghdr], [AC_DEFINE(HAVE_STRUCT_CMSGHDR)], ,\n\t\t[#include <sys/socket.h>])\n\tAC_CHECK_TYPES([struct flock], [AC_DEFINE(HAVE_STRUCT_FLOCK)], ,\n\t\t[#include <unistd.h>\n\t\t #include <fcntl.h>])\n\tAC_CHECK_TYPES([struct iovec], [AC_DEFINE(HAVE_STRUCT_IOVEC)], ,\n\t\t[#include <sys/uio.h>])\n\tAC_CHECK_TYPES([struct linger], [AC_DEFINE(HAVE_STRUCT_LINGER)], ,\n\t\t[#include <sys/socket.h>])\n\tAC_CHECK_TYPES([struct pollfd], [AC_DEFINE(HAVE_STRUCT_POLLFD)], ,\n\t\t[#include <sys/poll.h>])\n\tAC_CHECK_TYPES([struct sockaddr], [AC_DEFINE(HAVE_STRUCT_SOCKADDR)], ,\n\t\t[#include <sys/socket.h>])\n\tAC_CHECK_TYPES([struct sockaddr_storage], [AC_DEFINE(HAVE_STRUCT_SOCKADDR_STORAGE)], ,\n\t\t[#include <sys/socket.h>])\n\tAC_CHECK_TYPES([struct sockaddr_in], [AC_DEFINE(HAVE_STRUCT_SOCKADDR_IN)], ,\n\t\t[#include <netinet/in.h>])\n\tAC_CHECK_TYPES([struct sockaddr_in6], [AC_DEFINE(HAVE_STRUCT_SOCKADDR_IN6)], ,\n\t\t[#include <netinet/in.h>])\n\tAC_CHECK_TYPES([struct sockaddr_un], [AC_DEFINE(HAVE_STRUCT_SOCKADDR_UN)], ,\n\t\t[#include <sys/un.h>])\n\tAC_CHECK_TYPES([struct stat], [AC_DEFINE(HAVE_STRUCT_STAT)], ,\n\t\t[#include <sys/types.h>\n\t\t #include <sys/stat.h>\n\t\t #include <unistd.h>])\n\tAC_CHECK_TYPES([struct timespec], [AC_DEFINE(HAVE_STRUCT_TIMESPEC)], ,\n\t\t[#include <time.h>])\n\tAC_CHECK_TYPES([struct timeval], [AC_DEFINE(HAVE_STRUCT_TIMEVAL)], ,\n\t\t[#include <sys/time.h>\n\t\t #include <sys/types.h>\n\t\t #include <utime.h>])\n\tAC_CHECK_TYPES([struct timezone], [AC_DEFINE(HAVE_STRUCT_TIMEZONE)], ,\n\t\t[#include <sys/time.h>])\n\tAC_CHECK_TYPES([struct utimbuf], [AC_DEFINE(HAVE_STRUCT_UTIMBUF)], ,\n\t\t[#include <sys/types.h>\n\t\t #include <utime.h>])\n\tAC_CHECK_MEMBERS(\n\t\t[struct dirent.d_off, struct dirent.d_reclen, struct dirent.d_type],,, \n\t\t[#include <sys/types.h>\n\t\t #include <dirent.h>])\n\tAC_CHECK_MEMBERS(\n\t\t[struct passwd.pw_gecos],,, \n\t\t[#include <sys/types.h>\n\t\t #include <pwd.h>])\n\tAC_CHECK_MEMBERS(\n\t\t[struct statfs.f_flags],,, \n\t\t[#include <sys/types.h>\n\t\t #include <sys/vfs.h>])\n\tAC_CHECK_MEMBERS(\n\t\t[struct stat.st_atim, struct stat.st_mtim, struct stat.st_atimespec, struct stat.st_ctim],,, \n\t\t[#include <sys/types.h>\n\t\t #include <sys/stat.h>\n\t\t #include <unistd.h>])\n\n\tdnl Favour xattr through glibc, but use libattr if we have to\n\tAC_CHECK_FUNC(lsetxattr, ,\n\t\tAC_CHECK_LIB(attr, lsetxattr, XATTR_LIB=\"-lattr\",)\n\t)\n\tAC_SUBST(XATTR_LIB)\n\n\tdnl kinfo_proc.kp_proc works on darwin but fails on other simil-bsds\n\tAC_CHECK_MEMBERS(\n\t\t[struct kinfo_proc.kp_proc],,, \n\t\t[#include <sys/types.h>\n\t\t #include <sys/param.h>\n\t\t #include <sys/sysctl.h>\n\t\t #include <sys/proc.h>\n\t\t ])\n\n\tdnl *********************************\n\tdnl *** Checks for Windows compilation ***\n\tdnl *********************************\n\tAC_CHECK_HEADERS(sys/time.h)\n\tAC_CHECK_HEADERS(sys/param.h)\n\tAC_CHECK_HEADERS(dirent.h)\n\n\tdnl ******************************************\n\tdnl *** Checks for OSX and iOS compilation ***\n\tdnl ******************************************\n\tAC_CHECK_HEADERS(CommonCrypto/CommonDigest.h)\n\n\tAC_CHECK_MEMBER(struct objc_super.super_class,\n\t\t[AC_DEFINE(HAVE_OBJC_SUPER_SUPER_CLASS, 1, [struct objc_super.super_class])],\n\t\t[],\n\t\t[#include <objc/runtime.h>\n\t\t#include <objc/message.h>])\n\n\tdnl *********************************\n\tdnl *** Check for Console 2.0 I/O ***\n\tdnl *********************************\n\tAC_CHECK_HEADERS([curses.h])\n\tAC_CHECK_HEADERS([term.h], [], [],\n\t[#if HAVE_CURSES_H\n\t #include <curses.h>\n\t #endif\n\t])\n\tAC_CHECK_HEADERS([termios.h])\n\n\tdnl *********************************\n\tdnl *** Checks for random         ***\n\tdnl *********************************\n\tif test x$host_darwin = xno; then\n\t\tAC_CHECK_HEADERS(sys/random.h)\n\t\tAC_CHECK_FUNCS(getrandom getentropy)\n\tfi\n\n\tdnl *********************************\n\tdnl *** Checks for Mono.Native    ***\n\tdnl *********************************\n\n\t# Translated from CMake in external/corefx/src/Native/Unix/configure.cmake, keep in sync!\n\t# Note: check_c_source_compiles in CMake is AC_TRY_LINK in autoconf\n\n\tAC_MSG_CHECKING(for linux/in.h)\n\tAC_TRY_COMPILE([\n\t\t#include <sys/socket.h>\n\t\t#include <linux/in.h>\n\t], [\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_LINUX_IN_H, 1, [linux/in.h])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_HEADERS([linux/if_packet.h])\n\n\tAC_MSG_CHECKING(for struct in_pktinfo)\n\tAC_TRY_COMPILE([\n\t\t#ifdef HAVE_LINUX_IN_H\n\t\t#include <sys/socket.h>\n\t\t#include <linux/in.h>\n\t\t#else\n\t\t#include <netinet/in.h>\n\t\t#endif\n\t], [\n\t\tstruct in_pktinfo pktinfo;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IN_PKTINFO, 1, [struct in_pktinfo])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for struct ip_mreqn)\n\tAC_TRY_COMPILE([\n\t\t#if HAVE_LINUX_IN_H\n\t\t#include <sys/socket.h>\n\t\t#include <linux/in.h>\n\t\t#else\n\t\t#include <netinet/in.h>\n\t\t#endif\n\t], [\n\t\tstruct ip_mreqn mreqn;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_IP_MREQN, 1, struct ip_mreqn)\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tif test x$host_darwin = xno; then\n\t\tAC_CHECK_TYPES([struct flock64], [AC_DEFINE(HAVE_FLOCK64, 1, struct flock64)], , [#include <fcntl.h>])\n\tfi\n\n\tAC_CHECK_DECL(O_CLOEXEC,         [AC_DEFINE(HAVE_O_CLOEXEC, 1, [O_CLOEXEC])], [], [[#include <fcntl.h>]])\n\tAC_CHECK_DECL(F_DUPFD_CLOEXEC,   [AC_DEFINE(HAVE_F_DUPFD_CLOEXEC, 1, [F_DUPFD_CLOEXEC])], [], [[#include <fcntl.h>]])\n\n\t# AC_CHECK_FUNC(getifaddrs,           [AC_DEFINE(HAVE_GETIFADDRS, 1, [getifaddrs])]) # already done above\n\tAC_CHECK_FUNC(Qp2getifaddrs,     [AC_DEFINE(HAVE_QP2GETIFADDRS, 1, [Qp2getifaddrs])])\n\n\tAC_CHECK_FUNC(lseek64,           [AC_DEFINE(HAVE_LSEEK64, 1, [lseek64])])\n\tAC_CHECK_FUNC(mmap64,            [AC_DEFINE(HAVE_MMAP64, 1, [mmap64])])\n\tAC_CHECK_FUNC(ftruncate64,       [AC_DEFINE(HAVE_FTRUNCATE64, 1, [ftruncate64])])\n\tAC_CHECK_FUNC(posix_fadvise64,   [AC_DEFINE(HAVE_POSIX_FADVISE64, 1, [posix_fadvise64])])\n\n\tif test \"x$mono_native_platform_ios\" = \"xno\"; then\n\t\t# On iOS, `stat64()` is deprecated and there is no `struct stat64` and `stat()`\n\t\t# is either 32-bit or 64-bit based on the device / simulator that you're running on.\n\t\tAC_CHECK_FUNC(stat64,            [AC_DEFINE(HAVE_STAT64, 1, [stat64])])\n\tfi\n\n\tAC_CHECK_DECL(pipe2,             [AC_DEFINE(HAVE_PIPE2, 1, [pipe2])])\n\tAC_CHECK_FUNC(getmntinfo,        [AC_DEFINE(HAVE_GETMNTINFO, 1, [getmntinfo])], [], [[#include <unistd.h>]])\n\tAC_CHECK_FUNC(strcpy_s,          [AC_DEFINE(HAVE_STRCPY_S, 1, [strcpy_s])])\n\tAC_CHECK_FUNC(strlcpy,           [AC_DEFINE(HAVE_STRLCPY, 1, [strlcpy])])\n\tAC_CHECK_FUNC(posix_fadvise,     [AC_DEFINE(HAVE_POSIX_ADVISE, 1, [posix_fadvise])]) # the define is called HAVE_POSIX_ADVISE in corefx, not a typo\n\tAC_CHECK_FUNC(ioctl,             [AC_DEFINE(HAVE_IOCTL, 1, [ioctl])])\n\tAC_CHECK_FUNC(sched_getaffinity, [AC_DEFINE(HAVE_SCHED_GETAFFINITY, 1, [sched_getaffinity])])\n\tAC_CHECK_FUNC(sched_setaffinity, [AC_DEFINE(HAVE_SCHED_SETAFFINITY, 1, [sched_setaffinity])])\n\n\tif test \"x$platform_android\" != \"xyes\"; then\n\t\tAC_CHECK_FUNC(arc4random_buf,    [AC_DEFINE(HAVE_ARC4RANDOM_BUF, 1, [arc4random_buf])])\n\tfi\n\n\tAC_CHECK_DECL(TIOCGWINSZ,        [AC_DEFINE(HAVE_TIOCGWINSZ, 1, [TIOCGWINSZ])], [], [[#include <sys/ioctl.h>]])\n\tAC_CHECK_FUNC(tcgetattr,         [AC_DEFINE(HAVE_TCGETATTR, 1, [tcgetattr])])\n\tAC_CHECK_FUNC(tcsetattr,         [AC_DEFINE(HAVE_TCSETATTR, 1, [tcsetattr])])\n\tAC_CHECK_DECL(ECHO,              [AC_DEFINE(HAVE_ECHO, 1, [ECHO])], [], [[#include <termios.h>]])\n\tAC_CHECK_DECL(ICANON,            [AC_DEFINE(HAVE_ICANON, 1, [ICANON])], [], [[#include <termios.h>]])\n\tAC_CHECK_DECL(TCSANOW,           [AC_DEFINE(HAVE_TCSANOW, 1, [TCSANOW])], [], [[#include <termios.h>]])\n\n\tAC_CHECK_DECL(lchflags,          [AC_DEFINE(HAVE_LCHFLAGS, 1, [lchflags])], [], \n\t\t[[#include <sys/types.h> \n\t\t#include <sys/stat.h>]])\n\tAC_CHECK_MEMBER(struct stat.st_flags,\n\t\t[AC_DEFINE(HAVE_STAT_FLAGS, 1, [struct stat.st_flags])],\n\t\t[],\n\t\t[#include <sys/types.h>\n\t\t#include <sys/stat.h>])\n\n\tAC_CHECK_MEMBER(struct stat.st_birthtimespec,\n\t\t[AC_DEFINE(HAVE_STAT_BIRTHTIME, 1, [struct stat.st_birthtimespec])],\n\t\t[],\n\t\t[#include <sys/types.h>\n\t\t#include <sys/stat.h>])\n\tAC_CHECK_MEMBER(struct stat.st_atimespec,\n\t\t[AC_DEFINE(HAVE_STAT_TIMESPEC, 1, [struct stat.st_atimespec])],\n\t\t[],\n\t\t[#include <sys/types.h>\n\t\t#include <sys/stat.h>])\n\tAC_CHECK_MEMBER(struct stat.st_atim,\n\t\t[AC_DEFINE(HAVE_STAT_TIM, 1, [struct stat.st_atim])],\n\t\t[],\n\t\t[#include <sys/types.h>\n\t\t#include <sys/stat.h>])\n\tAC_CHECK_MEMBER(struct stat.st_atimensec,\n\t\t[AC_DEFINE(HAVE_STAT_NSEC, 1, [struct stat.st_atimensec])],\n\t\t[],\n\t\t[#include <sys/types.h>\n\t\t#include <sys/stat.h>])\n\tAC_CHECK_MEMBER(struct dirent.d_namlen,       [AC_DEFINE(HAVE_DIRENT_NAME_LEN, 1, [struct dirent.d_namlen])], [], [#include <dirent.h>])\n\tAC_CHECK_MEMBER(struct statfs.f_fstypename,   [AC_DEFINE(HAVE_STATFS_FSTYPENAME, 1, [struct statfs.f_fstypename])], [], [#include <sys/mount.h>])\n\tAC_CHECK_MEMBER(struct statvfs.f_fstypename,  [AC_DEFINE(HAVE_STATVFS_FSTYPENAME, 1, [struct statvfs.f_fstypename])], [], [#include <sys/mount.h>])\n\n\tAC_MSG_CHECKING(for struct statfs)\n\tAC_TRY_COMPILE([\n\t\t#if defined(HAVE_STATFS_FSTYPENAME) || defined(HAVE_STATVFS_FSTYPENAME)\n\t\t#include <sys/mount.h>\n\t\t#else\n\t\t#include <sys/statfs.h>\n\t\t#endif\n\t], [\n\t\tstruct statfs;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_STATFS, 1, [struct statfs])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tif test \"x$ac_cv_func_strerror_r_char_p\" = \"xyes\" ; then\n\t\tAC_DEFINE(HAVE_GNU_STRERROR_R, 1, [char* strerror(int errnum, char *buf, size_t buflen)])\n\tfi\n\n\tAC_MSG_CHECKING(for readdir_r)\n\tAC_TRY_LINK([\n\t\t#include <dirent.h>\n\t], [\n\t\tDIR* dir;\n\t\tstruct dirent* entry;\n\t\tstruct dirent* result;\n\t\treaddir_r(dir, entry, &result);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_READDIR_R, 1, [readdir_r])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for kevent with void *data)\n\tAC_TRY_LINK([\n\t\t#include <sys/types.h>\n\t\t#include <sys/event.h>\n\t], [\n\t\tstruct kevent event;\n\t\tvoid* data;\n\t\tEV_SET(&event, 0, EVFILT_READ, 0, 0, 0, data);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(KEVENT_HAS_VOID_UDATA, 1, [kevent with void *data])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_MEMBER(struct fd_set.fds_bits,   [AC_DEFINE(HAVE_FDS_BITS, 1, [struct fd_set.fds_bits])], [], [[#include <sys/select.h>]])\n\tAC_CHECK_MEMBER(struct fd_set.__fds_bits, [AC_DEFINE(HAVE_PRIVATE_FDS_BITS, 1, [struct fd_set.__fds_bits])], [], [[#include <sys/select.h>]])\n\n\tAC_MSG_CHECKING(for sendfile with 4 arguments)\n\tAC_TRY_LINK([\n\t\t#include <sys/sendfile.h>\n\t], [\n\t\t#if defined(TARGET_ANDROID)\n\t\t#if !defined(__ANDROID_API__)\n\t\t#error No definition for __ANDROID_API__ even though we're targeting TARGET_ANDROID\n\t\t#elif __ANDROID_API__ < 21\n\t\t#error sendfile is not supported on this Android API level\n\t\t#endif\n\t\t#endif\n\n\t\tint result = sendfile(0, 0, 0, 0);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SENDFILE_4, 1, [sendfile with 4 arguments])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tORIG_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -Werror-implicit-function-declaration\"\n\n\tAC_MSG_CHECKING(for sendfile with 6 arguments)\n\tAC_TRY_LINK([\n\t\t#include <stdlib.h>\n\t\t#include <sys/types.h>\n\t\t#include <sys/socket.h>\n\t\t#include <sys/uio.h>\n\t], [\n\t\tint result = sendfile(0, 0, 0, NULL, NULL, 0);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_SENDFILE_6, 1, [sendfile with 6 arguments])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tCFLAGS=\"$ORIG_CFLAGS\"\n\n\tAC_CHECK_FUNC(fcopyfile,     [AC_DEFINE(HAVE_FCOPYFILE, 1, [fcopyfile])])\n\tAC_CHECK_FUNC(epoll_create1, [AC_DEFINE(HAVE_EPOLL, 1, [epoll_create1])])\n\tAC_CHECK_FUNC(accept4,       [AC_DEFINE(HAVE_ACCEPT4, 1, [accept4])])\n\tAC_CHECK_FUNC(kqueue,        [AC_DEFINE(HAVE_KQUEUE, 1, [kqueue])])\n\n\tORIG_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -Werror=sign-conversion\"\n\n\tAC_MSG_CHECKING(for getnameinfo with signed flags)\n\tAC_TRY_LINK([\n\t\t#include <sys/types.h>\n\t\t#include <netdb.h>\n\t], [\n\t\tconst struct sockaddr *addr;\n\t\tsocklen_t addrlen;\n\t\tchar *host;\n\t\tsocklen_t hostlen;\n\t\tchar *serv;\n\t\tsocklen_t servlen;\n\t\tint flags;\n\t\tint result = getnameinfo(addr, addrlen, host, hostlen, serv, servlen, flags);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETNAMEINFO_SIGNED_FLAGS, 1, [getnameinfo with signed flags])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tCFLAGS=\"$ORIG_CFLAGS\"\n\n\tif test \"x$host_linux\" = \"xyes\"; then\n\t\tAC_DEFINE(HAVE_SUPPORT_FOR_DUAL_MODE_IPV4_PACKET_INFO, 1, [HAVE_SUPPORT_FOR_DUAL_MODE_IPV4_PACKET_INFO])\n\telse\n\t\tAC_DEFINE(HAVE_SUPPORT_FOR_DUAL_MODE_IPV4_PACKET_INFO, 0, [HAVE_SUPPORT_FOR_DUAL_MODE_IPV4_PACKET_INFO])\n\tfi\n\n\t# HAVE_CLOCK_MONOTONIC check already done above\n\t# HAVE_CLOCK_REALTIME check already done above\n\t# HAVE_MACH_ABSOLUTE_TIME check already done above\n\t# HAVE_MACH_TIMEBASE_INFO check already done above\n\t# HAVE_FUTIMES check already done above\n\t# HAVE_FUTIMENS check already done above\n\n\tORIG_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -Werror=sign-conversion\"\n\n\tAC_MSG_CHECKING(for bind with unsigned addrlen)\n\tAC_TRY_LINK([\n\t\t#include <sys/socket.h>\n\t], [\n\t\tint fd;\n\t\tstruct sockaddr* addr;\n\t\tsocklen_t addrLen;\n\t\tbind(fd, addr, addrLen);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(BIND_ADDRLEN_UNSIGNED, 1, [bind with unsigned addrlen])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for struct ipv6_mreq with unsigned ipv6mr_interface)\n\tAC_TRY_LINK([\n\t\t#include <netinet/in.h>\n\t\t#include <netinet/tcp.h>\n\t], [\n\t\tstruct ipv6_mreq opt;\n\t\tunsigned int index = 0;\n\t\topt.ipv6mr_interface = index;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(IPV6MR_INTERFACE_UNSIGNED, 1, [struct ipv6_mreq with unsigned ipv6mr_interface])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for inotify_rm_watch with unsigned wd)\n\tAC_TRY_LINK([\n\t\t#include <sys/inotify.h>\n\t], [\n\t\tintptr_t fd;\n\t\tuint32_t wd;\n\t\tint result = inotify_rm_watch(fd, wd);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(INOTIFY_RM_WATCH_WD_UNSIGNED, 1, [inotify_rm_watch with unsigned wd])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tcase \"$host\" in\n\t\t*-*-*freebsd*)\n\t\t\tdnl *****************************\n\t\t\tdnl *** Checks for libinotify ***\n\t\t\tdnl *****************************\n\t\t\tAC_CHECK_LIB(inotify, inotify_init, LIBS=\"$LIBS -linotify\")\n\t\t\tif test \"x$ac_cv_lib_inotify_inotify_init\" = \"xyes\" ; then\n\t\t\t\tAC_DEFINE(HAVE_LIBINOTIFY, 1, [FreeBSD libinotify kqueue shim])\n\t\t\t\tdnl Needs to be done this way to avoid collision with various \n\t\t\t\tdnl ports including glib and llvm*\n\t\t\t\tMETADATA_CFLAGS=\"-I/usr/local/include\"\n\t\t\t\tAC_SUBST(METADATA_CFLAGS)\n\t\t\tfi\n\t\t\tdnl Workaround due to inotify_rm_watch check failing without -I\n\t\t\tAC_MSG_CHECKING(for inotify_rm_watch with unsigned wd in libinotify)\n\t\t\tAC_TRY_LINK([\n\t\t\t\t#include </usr/local/include/sys/inotify.h>\n\t\t\t], [\n\t\t\t\tintptr_t fd;\n\t\t\t\tuint32_t wd;\n\t\t\t\tint result = inotify_rm_watch(fd, wd);\n\t\t\t],[\n\t\t\t   AC_MSG_RESULT(yes)\n\t\t\t   AC_DEFINE(INOTIFY_RM_WATCH_WD_UNSIGNED, 1, [inotify_rm_watch with unsigned wd])\n\t\t\t], [\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t])\n\tesac\n\n\tCFLAGS=\"$ORIG_CFLAGS\"\n\n\tAC_MSG_CHECKING(for shm_open that works well enough with mmap)\n\tif test \"x$ac_cv_func_shm_open\" = \"xno\" -o \"x$ac_cv_func_shm_open_working_with_mmap\" = \"xno\" ; then\n\t\tAC_MSG_RESULT(no)\n\telif test \"x$cross_compiling\" = \"xyes\"; then\n\t\tAC_MSG_RESULT(cross compiling, assuming yes)\n\t\tAC_DEFINE(HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP, 1, [shm_open that works well enough with mmap])\n\telse\n\t\tAC_TRY_RUN([\n\t\t\t#include <sys/mman.h>\n\t\t\t#include <fcntl.h>\n\t\t\t#include <unistd.h>\n\n\t\t\tint main ()\n\t\t\t{\n\t\t\t#ifdef __PASE__\n\t\t\t\t/* IBM i doesn't implement this and returns SIGILL */\n\t\t\t\treturn -1;\n\t\t\t#endif\n\t\t\t\tint fd = shm_open(\"/mono_configure_shm_open\", O_CREAT | O_RDWR, 0777);\n\t\t\t\tif (fd == -1)\n\t\t\t\t\treturn -1;\n\n\t\t\t\tshm_unlink(\"/mono_configure_shm_open\");\n\n\t\t\t\t// NOTE: PROT_EXEC and MAP_PRIVATE don't work well with shm_open\n\t\t\t\t//       on at least the current version of Mac OS X\n\n\t\t\t\tif (mmap(NULL, 1, PROT_EXEC, MAP_PRIVATE, fd, 0) == MAP_FAILED)\n\t\t\t\t\treturn -1;\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP, 1, [shm_open that works well enough with mmap])\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\tfi\n\n\tAC_MSG_CHECKING(for getpriority with int who)\n\tAC_TRY_LINK([\n\t\t#include <sys/resource.h>\n\t], [\n\t\tint which;\n\t\tint who;\n\t\tint result = getpriority(which, who);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(PRIORITY_REQUIRES_INT_WHO, 1, [getpriority with int who])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for kevent with int parameters)\n\tAC_TRY_LINK([\n\t\t#include <sys/types.h>\n\t\t#include <sys/event.h>\n\t], [\n\t\tint kg;\n\t\tconst struct kevent* chagelist;\n\t\tint nchanges;\n\t\tstruct kevent* eventlist;\n\t\tint nevents;\n\t\tconst struct timespec* timeout;\n\t\tint result = kevent(kg, chagelist, nchanges, eventlist, nevents, timeout);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(KEVENT_REQUIRES_INT_PARAMS, 1, [kevent with int parameters])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_FUNCS(mkstemps)\n\t# AC_CHECK_FUNCS(mkstemp) # already done above\n\n\tif test \"x$ac_cv_func_mkstemps\" != \"xyes\" -a \"x$ac_cv_func_mkstemp\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Cannot find mkstemps or mkstemp on this platform])\n\tfi\n\n\tAC_MSG_CHECKING(for tcp/var.h)\n\tAC_TRY_LINK([\n\t\t#include <sys/types.h>\n\t\t#include <sys/socketvar.h>\n\t\t#include <netinet/ip.h>\n\t\t#include <netinet/tcp.h>\n\t\t#include <netinet/tcp_var.h>\n\t], [\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_TCP_VAR_H, 1, [tcp/var.h])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_HEADERS([sys/cdefs.h])\n\n\tAC_MSG_CHECKING(for TCPSTATE enum in netinet/tcp.h)\n\tAC_TRY_LINK([\n\t\t#ifdef HAVE_SYS_CDEFS_H\n\t\t#include <sys/cdefs.h>\n\t\t#endif\n\t\t#include <netinet/tcp.h>\n\t], [\n\t\tint result = TCP_ESTABLISHED;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_TCP_H_TCPSTATE_ENUM, 1, [TCPSTATE enum in netinet/tcp.h])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_DECL(TCPS_ESTABLISHED, [AC_DEFINE(HAVE_TCP_FSM_H, 1, [HAVE_TCP_FSM_H])], [], [[#include <netinet/tcp_fsm.h>]])\n\n\tAC_MSG_CHECKING(for struct rt_msghdr)\n\tAC_TRY_COMPILE([\n\t\t#include <sys/types.h>\n\t\t#include <net/route.h>\n\t], [\n\t\tstruct rt_msghdr;\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_RT_MSGHDR, 1, [struct rt_msghdr])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_HEADERS([sys/sysctl.h])\n\tAC_CHECK_HEADERS([linux/rtnetlink.h])\n\n\tAC_CHECK_FUNC(getpeereid,    [AC_DEFINE(HAVE_GETPEEREID, 1, [getpeereid])])\n\t#AC_CHECK_FUNC(getdomainname, [AC_DEFINE(HAVE_GETDOMAINNAME, 1, [getdomainname])]) # already done above\n\tAC_CHECK_FUNC(uname,         [AC_DEFINE(HAVE_UNAME, 1, [uname])])\n\n\tORIG_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -Werror=shorten-64-to-32\"\n\n\tAC_MSG_CHECKING(for getdomainname with size_t namelen)\n\tAC_TRY_LINK([\n\t\t#include <unistd.h>\n\t], [\n\t\tsize_t namelen = 20;\n\t\tchar name[20];\n\t\tint result = getdomainname(name, namelen);\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETDOMAINNAME_SIZET, 1, [getdomainname with size_t namelen])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tCFLAGS=\"$ORIG_CFLAGS\"\n\n\tAC_CHECK_FUNC(inotify_init, [AC_DEFINE(HAVE_INOTIFY_INIT, 1, [inotify_init])])\n\tAC_CHECK_FUNC(inotify_add_watch, [AC_DEFINE(HAVE_INOTIFY_ADD_WATCH, 1, [inotify_add_watch])])\n\tAC_CHECK_FUNC(inotify_rm_watch, [AC_DEFINE(HAVE_INOTIFY_RM_WATCH, 1, [inotify_rm_watch])])\n\n\tif test \"x$ac_cv_func_inotify_init\" = \"xyes\" -a \"x$ac_cv_func_inotify_add_watch\" = \"xyes\" -a \"x$ac_cv_func_inotify_rm_watch\" = \"xyes\"; then\n\t\tAC_DEFINE(HAVE_INOTIFY, 1, [HAVE_INOTIFY])\n\telif test \"x$host_linux\" = \"xyes\"; then\n\t\tAC_MSG_ERROR([Cannot find inotify functions on a Linux platform.])\n\tfi\n\n\t# HAVE_CURLM_ADDED_ALREADY check skipped because we don't use libcurl in mono\n\t# HAVE_CURL_HTTP_VERSION_2TLS check skipped because we don't use libcurl in mono\n\t# HAVE_CURLPIPE_MULTIPLEX check skipped because we don't use libcurl in mono\n\t# HAVE_CURL_SSLVERSION_TLSv1_012 check skipped because we don't use libcurl in mono\n\n\tenable_gss=no;\n\tAC_MSG_CHECKING(for GSS/GSS.h)\n\tAC_TRY_COMPILE([\n\t\t\t#include <GSS/GSS.h>\n\t], [\n\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_GSSFW_HEADERS, 1, [GSS/GSS.h])\n\t\t\tAC_DEFINE(HAVE_GSS_SPNEGO_MECHANISM, 1, [GSS_SPNEGO_MECHANISM])\n\t\t\tenable_gss=yes\n\t\t\tAC_DEFINE(ENABLE_GSS, 1, [ENABLE_GSS])\n\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for gssapi/gssapi_ext.h)\n\tAC_TRY_COMPILE([\n\t\t\t#include <gssapi/gssapi_ext.h>\n\t], [\n\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tenable_gss=yes\n\t\t\tAC_DEFINE(ENABLE_GSS, 1, [ENABLE_GSS])\n\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_MSG_CHECKING(for GSS_SPNEGO_MECHANISM)\n\tAC_TRY_COMPILE([\n\t\t\t#include <gssapi/gssapi_ext.h>\n\t\t\t#include <gssapi/gssapi_krb5.h>\n\t\t\tgss_OID_set_desc gss_mech_spnego_OID_set_desc = {.count = 1, .elements = GSS_SPNEGO_MECHANISM};\n\t], [\n\t],[\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_GSS_SPNEGO_MECHANISM, 1, [GSS_SPNEGO_MECHANISM])\n\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAM_CONDITIONAL(ENABLE_GSS, test x$enable_gss = xyes)\n\n\tAC_CHECK_HEADERS([crt_externs.h])\n\n\tAC_MSG_CHECKING(for _NSGetEnviron)\n\tAC_TRY_LINK([\n\t\t#include <crt_externs.h>\n\t], [\n\t\tchar **result = *(_NSGetEnviron());\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_NSGETENVIRON, 1, [_NSGetEnviron])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tAC_CHECK_DECL(IN_EXCL_UNLINK, [AC_DEFINE(HAVE_IN_EXCL_UNLINK, 1, [IN_EXCL_UNLINK])], [], [[#include <sys/inotify.h>]])\n\n\tif test x$host_sunos = xyes; then\n\t\t# set -Werror=strict-prototypes, to match the flags used during the compilation.\n\t\tORIG_CFLAGS=\"$CFLAGS\"\n\t\tCFLAGS=\"$CFLAGS -Werror=strict-prototypes\"\n\tfi\n\n\tAC_CHECK_FUNCS(madvise)\n\tAC_CHECK_FUNCS(posix_madvise)\n\n\tif test x$host_sunos = xyes; then\n\t\tCFLAGS=\"$ORIG_CFLAGS\"\n\tfi\n\n\t# *** End of Mono.Native checks ***\nelse\n\tAM_CONDITIONAL(ENABLE_GSS, false)\n\n\tdnl *********************************\n\tdnl *** Checks for Windows compilation ***\n\tdnl *********************************\n\tAC_CHECK_HEADERS(winternl.h)\n\n\tjdk_headers_found=no\n\tAC_CHECK_LIB(ws2_32, main, LIBS=\"$LIBS -lws2_32\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(psapi, main, LIBS=\"$LIBS -lpsapi\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(ole32, main, LIBS=\"$LIBS -lole32\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(winmm, main, LIBS=\"$LIBS -lwinmm\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(oleaut32, main, LIBS=\"$LIBS -loleaut32\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(advapi32, main, LIBS=\"$LIBS -ladvapi32\", AC_ERROR(bad mingw install?))\n\tAC_CHECK_LIB(version, main, LIBS=\"$LIBS -lversion\", AC_ERROR(bad mingw install?))\n\n\tAC_CHECK_TYPES([struct sockaddr_in6], [AC_DEFINE(HAVE_STRUCT_SOCKADDR_IN6)], , [#include <ws2tcpip.h>])\n\n\tdnl *********************************\n\tdnl *** Check for struct ip_mreqn ***\n\tdnl *********************************\n\tAC_MSG_CHECKING(for struct ip_mreqn)\n\tAC_TRY_COMPILE([#include <ws2tcpip.h>], [\n\t\tstruct ip_mreqn mreq;\n\t\tmreq.imr_address.s_addr = 0;\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_STRUCT_IP_MREQN)\n\t], [\n\t\t# We'll just have to try and use struct ip_mreq\n\t\tAC_MSG_RESULT(no)\n\t\tAC_MSG_CHECKING(for struct ip_mreq)\n\t\tAC_TRY_COMPILE([#include <ws2tcpip.h>], [\n\t\t\tstruct ip_mreq mreq;\n\t\t\tmreq.imr_interface.s_addr = 0;\n\t\t], [\n\t\t\t# Yes, we have it...\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_STRUCT_IP_MREQ)\n\t\t], [\n\t\t\t# No multicast support\n\t\t\tAC_MSG_RESULT(no)\n\t\t])\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getaddrinfo ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getaddrinfo)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\tgetaddrinfo(NULL,NULL,NULL,NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETADDRINFO, 1, [Have getaddrinfo])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for gethostbyname ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for gethostbyname)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\tgethostbyname(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETHOSTBYNAME, 1, [Have gethostbyname])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getprotobyname ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getprotobyname)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\tgetprotobyname(NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETPROTOBYNAME, 1, [Have getprotobyname])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for getnameinfo ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for getnameinfo)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\tgetnameinfo (NULL, 0, NULL, 0, NULL, 0, 0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_GETNAMEINFO, 1, [Have getnameinfo])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for inet_ntop ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for inet_ntop)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\tinet_ntop (0, NULL, NULL, 0);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_INET_NTOP, 1, [Have inet_ntop])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\n\tdnl **********************************\n\tdnl *** Check for inet_pton ***\n\tdnl **********************************\n\tAC_MSG_CHECKING(for inet_pton)\n\t\tAC_TRY_LINK([\n\t\t#include <stdio.h>\n\t\t#include <winsock2.h>\n\t\t#include <ws2tcpip.h>\n\t], [\n\t\t#ifndef inet_pton\n\t\t(void) inet_pton;\n\t\t#endif\n\t\tinet_pton (0, NULL, NULL);\n\t], [\n\t\t# Yes, we have it...\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE(HAVE_INET_PTON, 1, [Have inet_pton])\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\nfi\n\ndnl socklen_t check\nAC_MSG_CHECKING(for socklen_t)\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <sys/socket.h>\n],[\n  socklen_t foo;\n],[\nac_cv_c_socklen_t=yes\n\tAC_DEFINE(HAVE_SOCKLEN_T, 1, [Have socklen_t])\n\tAC_MSG_RESULT(yes)\n],[\n\tAC_MSG_RESULT(no)\n])\n\nAC_CHECK_FUNCS(execvp)\n\ndnl ****************************\ndnl *** Look for /dev/random ***\ndnl ****************************\n\nAC_MSG_CHECKING([if usage of random device is requested])\nAC_ARG_ENABLE(dev-random,\n[  --disable-dev-random    disable the use of the random device (enabled by default)],\ntry_dev_random=$enableval, try_dev_random=yes)\n\nAC_MSG_RESULT($try_dev_random)\n\ncase \"{$build}\" in\n\ndnl IBM i does not have /dev/random, use unblocking only\n\n    *-*-os400*)\n    NAME_DEV_RANDOM=\"/dev/urandom\"\n    ;;\n\ndnl Win32 does not have /dev/random, they have their own method...\n\n    *-mingw*|*-*-cygwin*)\n    ac_cv_have_dev_random=no\n    ;;\n\ndnl Everywhere else, it's /dev/random\n\n    *)\n    NAME_DEV_RANDOM=\"/dev/random\"\n    ;;\nesac\n\nAC_DEFINE_UNQUOTED(NAME_DEV_RANDOM, \"$NAME_DEV_RANDOM\", [Name of /dev/random])\n\ndnl Now check if the device actually exists\n\nif test \"x$try_dev_random\" = \"xyes\"; then\n    AC_CACHE_CHECK(for random device, ac_cv_have_dev_random,\n    [if test -r \"$NAME_DEV_RANDOM\" ; then\n        ac_cv_have_dev_random=yes; else ac_cv_have_dev_random=no; fi])\n    if test \"x$ac_cv_have_dev_random\" = \"xyes\"; then\n        AC_DEFINE(HAVE_CRYPT_RNG, 1, [Have /dev/random])\n    fi\nelse\n    AC_MSG_CHECKING(for random device)\n    ac_cv_have_dev_random=no\n    AC_MSG_RESULT(has been disabled)\nfi\n\nif test \"x$host_win32\" = \"xyes\"; then\n    AC_DEFINE(HAVE_CRYPT_RNG)\nfi\n\nif test \"x$ac_cv_have_dev_random\" = \"xno\" \\\n    && test \"x$host_win32\" = \"xno\"; then\n    AC_MSG_WARN([[\n***\n*** A system-provided entropy source was not found on this system.\n*** Because of this, the System.Security.Cryptography random number generator\n*** will throw a NotImplemented exception.\n***\n*** If you are seeing this message, and you know your system DOES have an\n*** entropy collection in place, please report an issue on GitHub and\n*** provide information about the system and how to access the random device.\n***\n*** Otherwise you can install either egd or prngd and set the environment\n*** variable MONO_EGD_SOCKET to point to the daemon's socket to use that.\n***]])\nfi\n\nAC_ARG_ENABLE(bcl-opt, [  --disable-bcl-opt\tBCL is compiled with no optimizations (allows accurate BCL debugging)], test_bcl_opt=$enableval, test_bcl_opt=yes)\n\nAC_MSG_CHECKING([if big-arrays are to be enabled])\nAC_ARG_ENABLE(big-arrays,  [  --enable-big-arrays\tEnable the allocation and indexing of arrays greater than Int32.MaxValue], enable_big_arrays=$enableval, enable_big_arrays=no)\nif test \"x$enable_big_arrays\" = \"xyes\" ; then\n    if  test \"x$ac_cv_sizeof_void_p\" = \"x8\"; then\n\tAC_DEFINE(MONO_BIG_ARRAYS,1,[Enable the allocation and indexing of arrays greater than Int32.MaxValue])\n    else\n        AC_MSG_ERROR([The allocation and indexing of arrays greater than Int32.MaxValue is not supported on this platform.])\n    fi\nfi\nAC_MSG_RESULT($enable_big_arrays)\n\ndnl **************\ndnl *** DTRACE ***\ndnl **************\n\nAC_ARG_ENABLE(dtrace,[  --enable-dtrace\tEnable DTrace probes], enable_dtrace=$enableval, enable_dtrace=$has_dtrace)\n\nif test \"x$enable_dtrace\" = \"xyes\"; then\n   if test \"x$has_dtrace\" = \"xno\"; then\n   \t  AC_MSG_ERROR([DTrace probes are not supported on this platform.])\n   fi\n   AC_PATH_PROG(DTRACE, [dtrace], [no], [$PATH:/usr/sbin])\n   if test \"x$DTRACE\" = \"xno\"; then\n   \t  AC_MSG_RESULT([dtrace utility not found, dtrace support disabled.])\n\t  enable_dtrace=no\n   elif ! $DTRACE -h -s $srcdir/data/mono.d > /dev/null 2>&1; then\n\t  AC_MSG_RESULT([dtrace doesn't support -h option, dtrace support disabled.])\n\t  enable_dtrace=no\n   fi\nfi\n\ndtrace_g=no\nif test \"x$enable_dtrace\" = \"xyes\"; then\n\tAC_DEFINE(ENABLE_DTRACE, 1, [Enable DTrace probes])\n\tDTRACEFLAGS=\n\tif test \"x$ac_cv_sizeof_void_p\" = \"x8\"; then\n\t\tcase \"$host\" in\n\t\t\tpowerpc-*-darwin*)\n\t\t\tDTRACEFLAGS=\"-arch ppc64\"\n\t\t\t;;\n\t\t\ti*86-*-darwin*)\n\t\t\tDTRACEFLAGS=\"-arch x86_64\"\n\t\t\t;;\n\t\t\t*)\n\t\t\tDTRACEFLAGS=-64\n\t\t\t;;\n\t\tesac\n\telse\n\t\tcase \"$host\" in\n\t\t\tpowerpc-*-darwin*)\n\t\t\tDTRACEFLAGS=\"-arch ppc\"\n\t\t\t;;\n\t\t\ti*86-*-darwin*)\n\t\t\tDTRACEFLAGS=\"-arch i386\"\n\t\t\t;;\n\t\t\t*)\n\t\t\tDTRACEFLAGS=-32\n\t\t\t;;\n\t\tesac\n\tfi\n\tAC_SUBST(DTRACEFLAGS)\n\tcase \"$host\" in\n\t\t*-*-solaris*)\n\t\tdtrace_g=yes\n\t\t;;\n\tesac\n\tAC_CHECK_HEADERS([sys/sdt.h])\nfi\nAM_CONDITIONAL(ENABLE_DTRACE, [test x$enable_dtrace = xyes])\nAM_CONDITIONAL(DTRACE_G_REQUIRED, [test x$dtrace_g = xyes])\n\ndnl **************************\ndnl *** AOT cross offsets  ***\ndnl **************************\n\nAC_ARG_WITH(cross-offsets, [  --with-cross-offsets=<offsets file path>    Explicit AOT cross offsets file],\n    AC_DEFINE_UNQUOTED(MONO_OFFSETS_FILE, \"$withval\", [AOT cross offsets file]))\n\ndnl **************\ndnl ***  LLVM  ***\ndnl **************\n\nAC_ARG_ENABLE(llvm,[  --enable-llvm\tEnable the LLVM back-end], enable_llvm=$enableval, enable_llvm=default)\nAC_ARG_ENABLE(loadedllvm,[  --enable-loadedllvm\tLoad the LLVM back-end dynamically], enable_llvm=$enableval && enable_loadedllvm=$enableval, enable_loadedllvm=no)\nAC_ARG_ENABLE(llvm-version-check,[  --enable-llvm-version-check Check that the LLVM matches the version expected by mono], enable_llvm_version_check=$enableval, enable_llvm_version_check=no)\nAC_ARG_ENABLE(llvm-runtime,[  --enable-llvm-runtime\tEnable runtime support for llvmonly code], enable_llvm_runtime=$enableval, enable_llvm_runtime=no)\nAC_ARG_ENABLE(llvm-asserts,[  --enable-llvm-asserts Enable llvm asserts (option to LLVM in CMake)], enable_llvm_asserts=$enableval, enable_llvm_asserts=no)\n\nAC_ARG_WITH(llvm, [  --with-llvm=<llvm prefix>    Enable the LLVM back-end], enable_llvm=yes,)\n\nif test \"x$enable_llvm\" = \"xdefault\"; then\n   enable_llvm=$enable_llvm_default\nfi\n\nif test \"x$enable_loadedllvm\" = \"xyes\"; then\n   AC_MSG_WARN(\"Loadable LLVM is no longer supported. Enabling default LLVM support instead.\")\n   enable_llvm=yes\nfi\n\nenable_llvm_msvc_only=\"no\"\nif test \"x$enable_llvm\" = \"xyes\"; then\n\tif test \"x$host_win32\" = \"xyes\"; then\n\t\tif test \"x$cross_compiling\" = \"xno\"; then\n\t\t\tcase \"$target\" in\n\t\t\tx86_64*)\n\t\t\t\tAC_MSG_WARN(\"LLVM for host=Windows and target=Windows is only supported on x64 MSVC builds. Disabling LLVM for GCC build.\")\n\t\t\t\tenable_llvm_msvc_only=\"yes\"\n\t\t\t\t;;\n\t\t\ti686*)\n\t\t\t\tAC_MSG_ERROR(\"LLVM for host=Windows and target=Windows is only supported for x64 builds.\")\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\tfi\nfi\n\ninternal_llvm=\"no\"\nif test \"x$enable_llvm\" = \"xyes\"; then\n\tif test \"x$with_llvm\" != \"x\"; then\n\t\tEXTERNAL_LLVM_CONFIG=$with_llvm/bin/llvm-config\n\t\tif test x$host_win32 = xyes; then\n\t\t\tEXTERNAL_LLVM_CONFIG=$EXTERNAL_LLVM_CONFIG.exe\n\t\tfi\n\t\tif test ! -x $EXTERNAL_LLVM_CONFIG; then\n\t\t\tAC_MSG_ERROR([LLVM executable $EXTERNAL_LLVM_CONFIG not found.])\n\t\tfi\n\telse\n\t\tinternal_llvm=yes\n\tfi\n\n\tLLVM_CODEGEN_LIBS=\"x86codegen\"\n\tcase \"$target\" in\n\tarm*)\n\t\tLLVM_CODEGEN_LIBS=\"armcodegen\"\n\t\t;;\n\taarch64*)\n\t\tLLVM_CODEGEN_LIBS=\"aarch64codegen\"\n\t\t;;\n\tpowerpc*)\n\t\tLLVM_CODEGEN_LIBS=\"powerpccodegen\"\n\t\t;;\n\tesac\n\tif test \"x$host\" != \"x$target\"; then\n\t\t# No need for jit libs\n\t\tLLVM_CODEGEN_LIBS=\n\tfi\n\n\tAC_SUBST(LLVM_CODEGEN_LIBS)\n\tAC_SUBST(EXTERNAL_LLVM_CONFIG)\n\n\tif test \"x$host_win32\" = \"xyes\" && test \"x$cross_compiling\" = \"xno\" &&  test \"x$internal_llvm\" = \"xno\"; then\n\t\tEXTERNAL_LLVM_CONFIG_WIN32=$(cygpath -m $EXTERNAL_LLVM_CONFIG)\n\t\tAC_SUBST(EXTERNAL_LLVM_CONFIG_WIN32)\n\tfi\n\tif test \"x$enable_llvm_msvc_only\" != \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_LLVM, 1, [Enable the LLVM back end])\n\telse\n\t\tAC_DEFINE(ENABLE_LLVM_MSVC_ONLY, 1, [Enable the LLVM back end])\n\tfi\nfi # ENABLE_LLVM\n\n# AC_DEFINE necessary for correct restore behavior on Linux\nAM_CONDITIONAL(INTERNAL_LLVM, [test \"x$internal_llvm\" != \"xno\" && test \"x$enable_llvm_msvc_only\" != \"xyes\"])\nif test \"x$internal_llvm\" != \"xno\"; then\n\tif test \"x$enable_llvm_msvc_only\" != \"xyes\"; then\n\t\tAC_DEFINE(INTERNAL_LLVM, 1, [LLVM used is being build during mono build])\n\telse\n\t\tAC_DEFINE(INTERNAL_LLVM_MSVC_ONLY, 1, [LLVM used is being build during mono build])\n\tfi\nfi\n\nAM_CONDITIONAL(INTERNAL_LLVM_ASSERTS, [test \"x$enable_llvm_asserts\" != \"xno\" && test \"x$enable_llvm_msvc_only\" != \"xyes\"])\nif test \"x$enable_llvm_asserts\" != \"xno\"; then\n\tif test \"x$enable_llvm_msvc_only\" != \"xyes\"; then\n\t\tAC_DEFINE(INTERNAL_LLVM_ASSERTS, 1, [Build LLVM with assertions])\n\telse\n\t\tAC_DEFINE(INTERNAL_LLVM_ASSERTS_MSVC_ONLY, 1, [Build LLVM with assertions])\n\tfi\nfi\n\nAM_CONDITIONAL(ENABLE_LLVM, [test x$enable_llvm = xyes && test x$enable_llvm_msvc_only != xyes])\n\nif test \"x$enable_llvm\" = \"xyes\"; then\n\tenable_llvm_runtime=yes\nfi\n\nAM_CONDITIONAL(ENABLE_LLVM_RUNTIME, [test x$enable_llvm_runtime = xyes && test x$enable_llvm_msvc_only != xyes])\nif test \"x$enable_llvm_runtime\" = \"xyes\"; then\n\tif test \"x$enable_llvm_msvc_only\" != \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_LLVM_RUNTIME, 1, [Runtime support code for llvm enabled])\n\telse\n\t\tAC_DEFINE(ENABLE_LLVM_RUNTIME_MSVC_ONLY, 1, [Runtime support code for llvm enabled])\n\tfi\nfi\n\nTARGET=\"unknown\"\nACCESS_UNALIGNED=\"yes\"\n\nLIBC=\"libc.so.6\"\nINTL=\"libc.so.6\"\nSQLITE=\"libsqlite.so.0\"\nSQLITE3=\"libsqlite3.so.0\"\nODBC=\"libodbc.so.2\"\nX11=\"libX11.so\"\nGDKX11=\"libgdk-x11-2.0.so.0\"\nGTKX11=\"libgtk-x11-2.0.so.0\"\nXINERAMA=\"libXinerama.so.1\"\n\nsizeof_register=\"SIZEOF_VOID_P\"\n\njit_wanted=true\nboehm_supported=true\nBTLS_SUPPORTED=no\nBTLS_PLATFORM=\nINTERP_CFLAGS=\"\"\n\ncase \"$host\" in\n\twasm32*)\n\t\tTARGET=WASM\n\t\tarch_target=wasm\n\t\tBTLS_SUPPORTED=no\n\t\tACCESS_UNALIGNED=\"no\"\n\t\twith_tls=pthread\n\t\ttarget_wasm=yes\n\t\tif test \"x$mono_cv_clang\" = \"xyes\"; then\n\t\t   INTERP_CFLAGS=\"-mllvm -join-liveintervals=false\"\n\t\t   AC_SUBST(INTERP_CFLAGS)\n\t\tfi\n\t\t;;\n\tmips*)\n\t\tTARGET=MIPS;\n\t\tarch_target=mips;\n\t\twith_tls=pthread;\n\t\tACCESS_UNALIGNED=\"no\"\n\n\t\tAC_MSG_CHECKING(for mips n32)\n\t\tAC_TRY_COMPILE([],[\n\t\t#if _MIPS_SIM != _ABIN32\n\t\t#error Not mips n32\n\t\t#endif\n\t\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tsizeof_register=8\n\t\t],[\n\t\tAC_MSG_RESULT(no)\n\t\t])\n\t\t;;\n\ti*86-*-*)\n\t\tTARGET=X86;\n\t\tarch_target=x86;\n\t\tcase $host_os in\n\t\t  solaris*)\n\t\t\tLIBC=\"libc.so\"\n\t\t\tINTL=\"libintl.so\"\n\t\t\tif test \"x$ac_cv_sizeof_void_p\" = \"x8\"; then\n\t\t\t\tTARGET=AMD64\n\t\t\t\tarch_target=amd64\n\t\t\tfi\n\n\t\t\t# On solaris 10 x86, gcc prints a warning saying 'visibility attribute not supported on this configuration; ignored', but linking fails. A test case:\n\t\t\t# int astruct __attribute__ ((visibility (\"hidden\")));\n\t\t\t# void foo ()\n\t\t\t# {\n\t\t\t#\tvoid *p = &astruct;\n\t\t\t# }\n\t\t\t# gcc -fPIC --shared -o libfoo.so foo.c\n\t\t\t# yields:\n\t\t\t# foo.c:6: warning: visibility attribute not supported in this configuration; ignored\n\t\t\t# ld: fatal: relocation error: R_386_GOTOFF: file /var/tmp//ccxYR96k.o: symbol astruct: relocation must bind locally\n\t\t\thave_visibility_hidden=no\n\t\t\t;;\n\t\t  mingw*|cygwin*)\n\t\t\thave_visibility_hidden=no\n\t\t\tBTLS_SUPPORTED=no\n\t\t\tBTLS_PLATFORM=i386\n\t\t\t;;\n\t\t  haiku*)\n\t\t\tLIBC=libroot.so\n\t\t\t;;\n\t\t  linux*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=i386\n\t\t\tAC_CHECK_HEADER(stdalign.h,[],[BTLS_SUPPORTED=no])\n\t\t\t;;\n\t\t  darwin*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=i386\n\t\t\t;;\n\t\t  openbsd*|freebsd*|kfreebsd-gnu*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=i386\n\t\t        ;;\n\t\tesac\n\t\t;;\n\tx86_64-*-* | amd64-*-*)\n\t\tTARGET=AMD64;\n\t\tarch_target=amd64;\n\t\tif test \"x$ac_cv_sizeof_void_p\" = \"x4\"; then\n\t\t\tAC_DEFINE(MONO_ARCH_ILP32, 1, [64 bit mode with 4 byte longs and pointers])\n\t\t\tsizeof_register=8\n\t\tfi\n\t\tcase $host_os in\n\t\t  linux*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=x86_64\n\t\t\tAC_CHECK_HEADER(stdalign.h,[],[BTLS_SUPPORTED=no])\n\t\t\t;;\n\t\t  darwin*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=x86_64\n\t\t\tboehm_supported=false\n\t\t\t;;\n\t\t  openbsd*|freebsd*|kfreebsd-gnu*)\n\t\t\tAOT_SUPPORTED=\"yes\"\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=x86_64\n\t\t\t;;\n\t\t  mingw*|cygwin*)\n\t\t\tBTLS_SUPPORTED=no\n\t\t\tBTLS_PLATFORM=x86_64\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tsparc*-*-*)\n\t\tif test \"x$ac_cv_sizeof_void_p\" = \"x8\"; then\n\t\t   TARGET=SPARC64\n\t\telse\n\t\t\tTARGET=SPARC\n\t\tfi\n\t\tarch_target=sparc;\n\t\tACCESS_UNALIGNED=\"no\"\n\t\tcase $host_os in\n\t\t  linux*) ;;\n\t\t  *)\n\t\t\tLIBC=\"libc.so\"\n\t\t\tINTL=\"libintl.so\"\n\t\tesac\n\t\tif test x\"$GCC\" = xyes; then\n\t\t\t# We don't support v8 cpus\n\t\t\tCFLAGS=\"$CFLAGS -Wno-cast-align -mcpu=v9\"\n\t\tfi\n\t\tif test x\"$AR\" = xfalse; then\n\t\t\tAC_MSG_ERROR([The required utility 'ar' is not found in your PATH. Usually it can be found in /usr/ccs/bin.])\n\t\tfi\n\t\t;;\n\t*-mingw*|*-*-cygwin*)\n\t\t# When this is enabled, it leads to very strange crashes at runtime (gcc-3.4.4)\n\t\thave_visibility_hidden=no\n\t\tINTL=\"intl\"\n\t\tcase \"$host\" in\n\t\t\tx86_64*mingw*)\n\t\t\t\t# Old Boehm fails to compile for x86_64-mingw.\n\t\t\t\t# It is trivial to fix, but just silently drop it.\n\t\t\t\tboehm_supported=false\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\tmacppc-*-openbsd* | powerpc*-*-linux* | powerpc-*-openbsd* | \\\n        powerpc-*-sysv* | powerpc-*-darwin* | powerpc-*-netbsd* | \\\n        powerpc*-*-freebsd* | powerpc*-*-aix* | powerpc*-*-os400* )\n\t\tif test \"x$ac_cv_sizeof_void_p\" = \"x8\"; then\n\t\t\tTARGET=POWERPC64;\n\t\t\tCPPFLAGS=\"$CPPFLAGS -D__mono_ppc__ -D__mono_ppc64__\"\n\t\t\t# mono#18554 - be more robust in testing for -mminimal-toc\n\t\t\tAC_MSG_NOTICE([Checking for PowerPC ISA -mminimal-toc support])\n\t\t\tAX_CHECK_COMPILE_FLAG(\n\t\t\t\t[-mminimal-toc],\n\t\t\t\t[CFLAGS=\"$CFLAGS -mminimal-toc\"],\n\t\t\t\t[CFLAGS=\"$CFLAGS\"]\n\t\t\t)\n\t\t\tcase \"$host\" in\n\t\t\t\tpowerpc*-*-freebsd*)\n\t\t\t\t\t# We need to be aware if we are ELFv1 or v2 here\n\t\t\t\t\tAC_MSG_NOTICE([Checking FreeBSD ELF version])\n\t\t\t\t\tif ! ( echo | cc -dM -E - | awk '/_CALL_ELF/ {print $NF}'); then\n\t\t\t\t\t\tAC_DEFINE([POWERPC_ELF], 1, [PowerPC ELFv1])\n\t\t\t\t\telse\n\t\t\t\t\t\tAC_DEFINE([POWERPC_ELFV2], 1, [PowerPC ELFv2])\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\telse\n\t\t\tTARGET=POWERPC;\n\t\t\tCPPFLAGS=\"$CPPFLAGS -D__mono_ppc__\"\n\t\tfi\n\t\tarch_target=ppc;\n\t\tcase $host_os in\n\t\t  aix*|os400*)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=powerpc\n\t\t\t;;\n\t\t  linux*)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=powerpc\n\t\t\t;;\n\t\t  freebsd*)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=powerpc\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tarmv7k-*-darwin*)\n\t\tTARGET=ARM;\n\t\tTARGET_SYS=WATCHOS\n\t\tarch_target=arm;\n\t\tarm_fpu=VFP_HARD\n\t\tACCESS_UNALIGNED=\"no\"\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\t;;\n\n\tarm*-darwin*)\n\t\tTARGET=ARM;\n\t\tarch_target=arm;\n\t\tACCESS_UNALIGNED=\"no\"\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\t;;\n\tarm*-linux*)\n\t\tTARGET=ARM;\n\t\tarch_target=arm;\n\t\tACCESS_UNALIGNED=\"no\"\n\t\tAOT_SUPPORTED=\"yes\"\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=arm\n\t\tAC_CHECK_HEADER(stdalign.h,[],[BTLS_SUPPORTED=no])\n\t\tcase \"$target\" in\n\t\tarm*-linux*-gnueabi)\n\t\t\tBTLS_PLATFORM=armsoft\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tarm*-netbsd*-eabi*)\n\t\tTARGET=ARM;\n\t\tarch_target=arm;\n\t\tACCESS_UNALIGNED=\"no\"\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\t;;\n\taarch64-*darwin*ilp32)\n\t\tTARGET=ARM6432\n\t\tarch_target=arm64\n\t\tAC_DEFINE(MONO_ARCH_ILP32, 1, [64 bit mode with 4 byte longs and pointers])\n\t\tsizeof_register=8\n\t\t# assuming no other target other than watchOS is using aarch64*darwin triple\n\t\tTARGET_SYS=WATCHOS\n\t\t;;\n\taarch64-*)\n\t\t# https://lkml.org/lkml/2012/7/15/133\n\t\tTARGET=ARM64\n\t\tarch_target=arm64\n\t\tboehm_supported=false\n\t\tAOT_SUPPORTED=\"yes\"\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=aarch64\n\t\tAC_CHECK_HEADER(stdalign.h,[],[BTLS_SUPPORTED=no])\n\t\t;;\n\ts390x-*-linux*)\n\t\tTARGET=S390X;\n\t\tarch_target=s390x;\n\t\tACCESS_UNALIGNED=\"yes\"\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=s390x\n\t\tCFLAGS=\"$CFLAGS -mbackchain\"\n\t\t;;\n\triscv32-*)\n\t\tTARGET=RISCV32\n\t\tACCESS_UNALIGNED=no\n\t\tAOT_SUPPORTED=no\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=riscv32\n\t\tarch_target=riscv32\n\t\tboehm_supported=false\n\t\t;;\n\triscv64*)\n\t\tTARGET=RISCV64\n\t\tACCESS_UNALIGNED=no\n\t\tAOT_SUPPORTED=no\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=riscv64\n\t\tarch_target=riscv64\n\t\tboehm_supported=false\n\t\t;;\n\tloongarch64-*)\n\t\tTARGET=LOONGARCH64\n\t\tAOT_SUPPORTED=\"yes\"\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=loongarch64\n\t\tarch_target=loongarch64\n\t\tboehm_supported=false\n\t\tAC_CHECK_HEADER(stdalign.h,[],[BTLS_SUPPORTED=no])\n\t\t;;\nesac\n\nHOST=$TARGET\n\nif test \"x$host\" != \"x$target\"; then\n   AC_DEFINE(MONO_CROSS_COMPILE,1,[The runtime is compiled for cross-compiling mode])\n   enable_mcs_build=no\n   enable_support_build=no\n   BTLS_SUPPORTED=no\n   # Can't use tls, since it depends on the runtime detection of tls offsets\n   # in mono-compiler.h\n   with_tls=pthread\n   target_mach=no\n   case \"$target\" in\n   wasm32*)\n\t\tTARGET=WASM\n\t\tarch_target=wasm\n\t\tAC_DEFINE(TARGET_WASM, 1, [Target wasm])\n\t\t;;\n   arm*-darwin*)\n\t\tTARGET=ARM;\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\tcase \"$target\" in\n\t\tarmv7k-*)\n\t\t\tarm_fpu=VFP_HARD\n\t\t\tAC_DEFINE(TARGET_WATCHOS, 1, [...])\n\t\t\t;;\n\t\tesac\t\t\n\t\t;;\n   powerpc64-ps3-linux-gnu)\n\t\tTARGET=POWERPC64\n\t\tarch_target=powerpc64\n\t\tAC_DEFINE(TARGET_PS3, 1, [...])\n\t\t# It would be better to just use TARGET_POWERPC64, but lots of code already\n\t\t# uses this define\n\t\tAC_DEFINE(__mono_ppc64__, 1, [...])\n\t\tAC_DEFINE(MONO_ARCH_ILP32, 1, [64 bit mode with 4 byte longs and pointers])\n\t\tsizeof_register=8\n\t\ttarget_byte_order=G_BIG_ENDIAN\n\t\t;;\n   powerpc64-xbox360-linux-gnu)\n\t\tTARGET=POWERPC64\n\t\tarch_target=powerpc64\n\t\tAC_DEFINE(TARGET_XBOX360, 1, [...])\n\t\t# It would be better to just use TARGET_POWERPC64, but lots of code already\n\t\t# uses this define\n\t\tsizeof_register=8\n\t\ttarget_byte_order=G_BIG_ENDIAN\n\t\t;;\n   arm*-linux-*)\n\t\tTARGET=ARM;\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\t;;\n   arm*-netbsd*-eabi*)\n\t\tTARGET=ARM;\n\t\tCPPFLAGS=\"$CPPFLAGS -D__ARM_EABI__\"\n\t\t;;\n   i686*-linux-*)\n\t\tTARGET=X86;\n\t\t;;\n   i*86-apple-*)\n\t\tTARGET=X86;\n\t\t;;\n   x86_64*-linux-*)\n\t\tTARGET=AMD64;\n\t\t;;\n   x86_64-ps4-freebsd)\n\t\tTARGET=AMD64;\n\t\tAC_DEFINE(TARGET_PS4, 1, [...])\n\t\tAC_DEFINE(DISABLE_HW_TRAPS, 1, [...])\n\t\tCPPFLAGS=\"$CPPFLAGS\"\n\t\ttarget_win32=no\n\t\t;;\n\taarch64*darwin*_ilp32)\n\t\tTARGET=ARM6432;\n\t\tAC_DEFINE(MONO_ARCH_ILP32, 1, [64 bit mode with 4 byte longs and pointers])\n\t\tsizeof_register=8\n\t\tAC_DEFINE(TARGET_WATCHOS, 1, [...])\n\t\t;;\n\taarch64*darwin20*)\n\t\tTARGET=ARM64\n\t\tTARGET_SYS=OSX\n\t\t;;\n\taarch64*darwin*)\n\t\tTARGET=ARM64\n\t\tTARGET_SYS=IOS\n\t\t;;\n\taarch64-*)\n\t\tTARGET=ARM64\n\t\t;;\n\triscv32*)\n\t\tTARGET=RISCV32\n\t\tAC_DEFINE([TARGET_RISCV], [1], [Target is RISC-V])\n\t\tAC_DEFINE([TARGET_RISCV32], [1], [Target is 32-bit RISC-V])\n\t\tarch_target=riscv32\n\t\ttarget_mach=no\n\t\twith_tls=pthread\n\t\t;;\n\triscv64*)\n\t\tTARGET=RISCV64\n\t\tAC_DEFINE([TARGET_RISCV], [1], [Target is RISC-V])\n\t\tAC_DEFINE([TARGET_RISCV64], [1], [Target is 64-bit RISC-V])\n\t\tarch_target=riscv64\n\t\ttarget_mach=no\n\t\twith_tls=pthread\n\t\t;;\n\tx86_64-google-fuchsia)\n\t\tTARGET=AMD64\n\t\ttarget_win32=nop\n\t\tAC_DEFINE(HOST_FUCHSIA,1,[Targeting the Fuchsia platform])\n\t\t;;\n\t*)\n\t\tAC_MSG_ERROR([Cross compiling is not supported for target $target])\n\tesac\n\n\tcase \"$target\" in\n\t*-darwin*)\n\t\ttarget_mach=yes\n\t\t;;\n\t*-linux-android*)\n\t\tAC_DEFINE(TARGET_ANDROID, 1, [...])\n\t\t;;\n\tesac\nfi\n\ncase \"$TARGET\" in\nWASM)\n\tAC_DEFINE(TARGET_WASM, 1, [...])\n\tarch_target=wasm\n\t;;\nX86)\n\tAC_DEFINE(TARGET_X86, 1, [...])\n\tarch_target=x86\n\t;;\nAMD64)\n\tAC_DEFINE(TARGET_AMD64, 1, [...])\n\tarch_target=amd64\n\t;;\nARM)\n\tAC_DEFINE(TARGET_ARM, 1, [...])\n\tarch_target=arm\n\tACCESS_UNALIGNED=\"no\"\n\t;;\nARM64|ARM6432)\n\tAC_DEFINE(TARGET_ARM64, 1, [...])\n\tarch_target=arm64\n\t;;\nPOWERPC)\n\tAC_DEFINE(TARGET_POWERPC, 1, [...])\n\t;;\nPOWERPC64)\n\tAC_DEFINE(TARGET_POWERPC, 1, [...])\n\tAC_DEFINE(TARGET_POWERPC64, 1, [...])\n\t;;\nS390X)\n\tAC_DEFINE(TARGET_S390X, 1, [...])\n\t;;\nMIPS)\n\tAC_DEFINE(TARGET_MIPS, 1, [...])\n\t;;\nSPARC)\n\tAC_DEFINE(TARGET_SPARC, 1, [...])\n\t;;\nSPARC64)\n\tAC_DEFINE(TARGET_SPARC64, 1, [...])\n\t;;\nRISCV32)\n\tAC_DEFINE([TARGET_RISCV], [1], [Target is RISC-V])\n\tAC_DEFINE([TARGET_RISCV32], [1], [Target is 32-bit RISC-V])\n\t;;\nRISCV64)\n\tAC_DEFINE([TARGET_RISCV], [1], [Target is RISC-V])\n\tAC_DEFINE([TARGET_RISCV64], [1], [Target is 64-bit RISC-V])\n\t;;\nLOONGARCH64)\n\tAC_DEFINE(TARGET_LOONGARCH64, 1, [...])\n\tarch_target=loongarch64\n\t;;\nesac\n\ncase \"$TARGET\" in\n*32* | ARM | X86 | POWERPC | MIPS | SPARC | WASM | ARM6432)\n    target_sizeof_void_p=4\n    ;;\n*64* | S390X)\n    target_sizeof_void_p=8\n    ;;\n*)\n    AC_MSG_ERROR([unknown target])\n    ;;\nesac\n\ncase \"$HOST\" in\nWASM)\n\tAC_DEFINE(HOST_WASM, 1, [...])\n\t;;\nX86)\n\tAC_DEFINE(HOST_X86, 1, [...])\n\t;;\nAMD64)\n\tAC_DEFINE(HOST_AMD64, 1, [...])\n\t;;\nARM)\n\tAC_DEFINE(HOST_ARM, 1, [...])\n\t;;\nARM64)\n\tAC_DEFINE(HOST_ARM64, 1, [...])\n\t;;\nPOWERPC)\n\tAC_DEFINE(HOST_POWERPC, 1, [...])\n\t;;\nPOWERPC64)\n\tAC_DEFINE(HOST_POWERPC, 1, [...])\n\tAC_DEFINE(HOST_POWERPC64, 1, [...])\n\t;;\nS390X)\n\tAC_DEFINE(HOST_S390X, 1, [...])\n\t;;\nMIPS)\n\tAC_DEFINE(HOST_MIPS, 1, [...])\n\t;;\nSPARC)\n\tAC_DEFINE(HOST_SPARC, 1, [...])\n\t;;\nSPARC64)\n\tAC_DEFINE(HOST_SPARC64, 1, [...])\n\t;;\nRISCV32)\n\tAC_DEFINE([HOST_RISCV], [1], [Host is RISC-V])\n\tAC_DEFINE([HOST_RISCV32], [1], [Host is 32-bit RISC-V])\n\t;;\nRISCV64)\n\tAC_DEFINE([HOST_RISCV], [1], [Host is RISC-V])\n\tAC_DEFINE([HOST_RISCV64], [1], [Host is 64-bit RISC-V])\n\t;;\nLOONGARCH64)\n\tAC_DEFINE(HOST_LOONGARCH64, 1, [...])\n\t;;\nesac\n\nMONO_ARCH_GSHAREDVT_SUPPORTED=0\ncase \"$HOST\" in\nX86 | AMD64 | ARM | ARM64 | LOONGARCH64)\n\tMONO_ARCH_GSHAREDVT_SUPPORTED=1 # keep in sync with mini-{x86,amd64,arm,arm64}.h\n\t;;\nesac\n\nAM_CONDITIONAL(MONO_ARCH_GSHAREDVT_SUPPORTED, test $MONO_ARCH_GSHAREDVT_SUPPORTED = 1)\nAM_CONDITIONAL(TARGET_WASM, test $arch_target = wasm)\n\ndnl *************\ndnl *** VTUNE ***\ndnl *************\n\nAC_ARG_ENABLE(vtune,[  --enable-vtune\tEnable the VTUNE back-end], enable_vtune=$enableval, enable_vtune=no)\nAC_ARG_WITH(vtune, [  --with-vtune=<vtune prefix>\tEnable jit vtune profiling], enable_vtune=yes,)\n\nAM_CONDITIONAL(HAVE_VTUNE, test x$enable_vtune = xyes)\n\nif test \"x$enable_vtune\" = \"xyes\"; then\n\tif test \"x$with_vtune\" = \"x\"; then\n\t\tVTUNE_PATH=/opt/intel/vtune_amplifier_xe\n\telse\n\t\tVTUNE_PATH=$with_vtune\n\tfi\n\tVTUNE_INCLUDE=$VTUNE_PATH/include\n\tcase \"$TARGET\" in\n\tX86)\n\t\tVTUNE_LIB=$VTUNE_PATH/lib32\n\t\t;;\n\tAMD64)\n\t\tVTUNE_LIB=$VTUNE_PATH/lib64\n\t\t;;\n\t*)\n\t\tAC_MSG_ERROR([Unsupported target $TARGET for VTUNE.])\n\t\t;;\n\tesac\n\tif test ! -f $VTUNE_INCLUDE/jitprofiling.h; then\n\t\tAC_MSG_ERROR([VTUNE $VTUNE_INCLUDE/jitprofiling.h not found.])\n\tfi\n\tif test ! -f $VTUNE_LIB/libjitprofiling.a; then\n\t\tAC_MSG_ERROR([VTUNE $VTUNE_LIB/libjitprofiling.a not found.])\n\tfi\n\n\tVTUNE_CFLAGS=-I$VTUNE_INCLUDE\n\tVTUNE_LIBS=\"-L/$VTUNE_LIB/ -ljitprofiling\"\n\n\tAC_SUBST(VTUNE_LIBS)\n\tAC_SUBST(VTUNE_CFLAGS)\nfi\ndnl Use GCC atomic ops if they work on the target.\nif test x$GCC = \"xyes\"; then\n\tcase $TARGET in\n\tX86 | AMD64 | ARM | ARM64 | ARM6432 | POWERPC | POWERPC64 | MIPS | S390X | SPARC | SPARC64 | RISCV32 | RISCV64 | LOONGARCH64)\n\t\tAC_DEFINE(USE_GCC_ATOMIC_OPS, 1, [...])\n\t\t;;\n\tesac\nfi\n\nif test \"x$target_mach\" = \"xyes\"; then\n\n   if test \"x$TARGET_SYS\" = \"xWATCHOS\"; then\n\t  AC_DEFINE(TARGET_WATCHOS,1,[The JIT/AOT targets WatchOS])\n\t  CPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DTARGET_WATCHOS\"\n\t  CFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DTARGET_WATCHOS\"\n\t  BTLS_SUPPORTED=no\n   elif test \"x$TARGET_SYS\" = \"xIOS\" -o \"x$TARGET\" = \"xARM\" -o \"x$TARGET\" = \"xARM6432\"; then\n   \t  AC_DEFINE(TARGET_IOS,1,[The JIT/AOT targets iOS])\n\t  CPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DTARGET_IOS\"\n\t  CFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DTARGET_IOS\"\n\t  BTLS_SUPPORTED=no\n\t  target_ios=yes\n   else\n       AC_TRY_COMPILE([#include \"TargetConditionals.h\"],[\n       #if TARGET_IPHONE_SIMULATOR == 1 || TARGET_OS_IPHONE == 1\n       #error fail this for ios\n       #endif\n       ], [\n\t   \t  AC_DEFINE(TARGET_OSX,1,[The JIT/AOT targets OSX])\n          CPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DTARGET_OSX\"\n          CFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DTARGET_OSX\"\n          target_osx=yes\n          if test \"x$TARGET\" = \"xARM64\"; then\n             BTLS_SUPPORTED=no\n          fi\n       ], [\n          AC_DEFINE(TARGET_IOS,1,[The JIT/AOT targets iOS])\n          CPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DTARGET_IOS\"\n          CFLAGS_FOR_LIBGC=\"$CFLAGS_FOR_LIBGC -DTARGET_IOS\"\n          BTLS_SUPPORTED=no\n\t\t  target_ios=yes\n       ])\n\tfi\n   AC_DEFINE(TARGET_MACH,1,[The JIT/AOT targets Apple platforms])\nfi\n\nAM_CONDITIONAL(TARGET_OSX, test x$target_osx = xyes)\n\nAC_SUBST(SIZEOF_VOID_P,[$ac_cv_sizeof_void_p])\n\nif test \"x$target_byte_order\" = \"xG_BIG_ENDIAN\"; then\n   AC_DEFINE(TARGET_BYTE_ORDER,G_BIG_ENDIAN,[byte order of target])\nelif test \"x$target_byte_order\" = \"xG_LITTLE_ENDIAN\"; then\n   AC_DEFINE(TARGET_BYTE_ORDER,G_LITTLE_ENDIAN,[byte order of target])\nelse\n   AC_DEFINE(TARGET_BYTE_ORDER,G_BYTE_ORDER,[byte order of target])\nfi\n\nAC_DEFINE_UNQUOTED(TARGET_SIZEOF_VOID_P,${target_sizeof_void_p},[wordsize of target])\n\nif test \"x$sizeof_register\" = \"x4\"; then\n  AC_DEFINE(SIZEOF_REGISTER,4,[size of target machine integer registers])\nelif test \"x$sizeof_register\" = \"x8\"; then\n  AC_DEFINE(SIZEOF_REGISTER,8,[size of target machine integer registers])\nelse\n  AC_DEFINE_UNQUOTED(SIZEOF_REGISTER,${target_sizeof_void_p},[size of target machine integer registers])\nfi\n\n# zlib/configure detects visibility support similarly and defines HAVE_HIDDEN\n# on the compiler command line (not config.h).\nif test \"x$have_visibility_hidden\" = \"xyes\"; then\n   AC_DEFINE(HAVE_VISIBILITY_HIDDEN, 1, [Support for the visibility (\"hidden\") attribute])\n   ZLIB_CFLAGS=\"$ZLIB_CFLAGS -DHAVE_HIDDEN\"\nfi\n\nif test \"x$have_deprecated\" = \"xyes\"; then\n   AC_DEFINE(HAVE_DEPRECATED, 1, [Support for the deprecated attribute])\nfi\n\ndnl \ndnl Simple Generational checks (sgen)\ndnl\nSGEN_DEFINES=\nAC_ARG_WITH(sgen,                    [  --with-sgen=yes,no             Extra Generational GC, default=yes],[buildsgen=$with_sgen],[buildsgen=yes])\nAC_ARG_WITH(sgen-default-concurrent, [  --with-sgen-default-concurrent=yes,no             Use Concurrent GC, default=no],[],[with_sgen_default_concurrent=no])\nif test x$buildsgen = xyes; then\n   AC_DEFINE(HAVE_MOVING_COLLECTOR, 1, [Moving collector])\n   SGEN_DEFINES=\"-DHAVE_SGEN_GC\"\n\n\tconc_gc_msg=\"\"\n   if test x$with_sgen_default_concurrent != xno; then\n       AC_DEFINE(HAVE_CONC_GC_AS_DEFAULT, 1, [Defaults to concurrent GC])\n\t   conc_gc_msg=\" (concurrent by default)\"\n   fi\n\n   if test \"x$gc_msg\" = \"x\"; then\n      gc_msg=\"sgen$conc_gc_msg\"\n   else\n      gc_msg=\"sgen$conc_gc_msg and $gc_msg\"\n   fi\nfi\nAC_SUBST(SGEN_DEFINES)\nAM_CONDITIONAL(SUPPORT_SGEN, test x$buildsgen = xyes)\n\njit_status=\"Building and using the JIT\"\n\nlibsuffix=\".so\"\n\ncase \"$host\" in\n     *-*-aix*)\n\tdnl on AIX/PASE, shared libraries can be and usually are inside archives\n\tdnl so, we specify them by libfoo.a(libfoo.so.0) for libtool's conventions,\n\tdnl or libfoo.a(shr[_64].o) for the AIX system convention,\n\tdnl or lib.so[.0](shr[_64].o) for libtool's hybrid convention\n\tdnl we may hardcode 64-bit names at times, but we don't do 32-bit AIX\n\tLIBC=\"libc.a(shr_64.o)\"\n\t# Thanks, I hate it! This is crumbly, especially the one-liner.\n\tAC_MSG_CHECKING([how to dlopen libintl])\n\tAC_LINK_IFELSE([AC_LANG_SOURCE([\n\t\t/* XXX: Check for libintl header/gettext func better? */\n\t\t#include <libintl.h>\n\n\t\tint main (void) {\n\t\t\tgettext(\"Dummy for autoconf\");\n\t\t\treturn 1;\n\t\t}\n\t])],\n\t[\n\tINTL=\"$(dump -X64 -Hp conftest$EXEEXT | grep libintl | cut -c 38- | tr -s \" \" | awk '{print $1\"(\"$2\")\"}')\"\n\tAC_MSG_RESULT([yes, $INTL])\n\t],\n\t[\n\tINTL=\"libintl.a(libintl.so.8)\"\n\tAC_MSG_RESULT([no, falling back to $INTL])\n\t])\n\tSQLITE3=\"libsqlite3.a(libsqlite3.so.0)\"\n\t# it's very tempting to set a libsuffix, but it depends on the soname value\n\t;;\n     *-*-os400*)\n\tdnl However, IBM's packages for i try to be more \"normal\" than the AIX world, naming wise.\n\tdnl The library archives has \"normal\" .so names, but they're members with predictable \"shr\" names for fat libraries.\n\tLIBC=\"libc.a(shr_64.o)\"\n\tINTL=\"libintl.so(shr_64.o)\"\n\tSQLITE3=\"libsqlite3.so(shr_64.o)\"\n\t# likewise, it's safer to assume \".so(shr_64.o)\" due to official IBM packages being built this way, but as with AIX, others may not be guaranteed\n\t# it may be worth revisiting this in the future\n\t;;\n     *-*-darwin*)\n\tlibsuffix=\".dylib\"\n\tLIBC=\"libc.dylib\"\n\tINTL=\"libintl.dylib\"\n\tSQLITE=\"libsqlite.0.dylib\"\n\tSQLITE3=\"libsqlite3.0.dylib\"\n\tX11=\"libX11.dylib\"\n\tGDKX11=\"libgdk-x11-2.0.dylib\"\n\tGTKX11=\"libgtk-x11-2.0.dylib\"\n\t;;\n     *-*-*netbsd*)\n\tLIBC=\"libc.so\"\n\tINTL=\"libintl.so\"\n\tSQLITE=\"libsqlite.so\"\n\tSQLITE3=\"libsqlite3.so\"\n\t;;\n     *-*-kfreebsd*-gnu)\n\tLIBC=\"libc.so.0.1\"\n\tINTL=\"libc.so.0.1\"\n\tX11=\"libX11.so.6\"\n\t;;\n    *-*-*freebsd*)\n    \tLIBC=\"libc.so.7\"\n\tINTL=\"libintl.so\"\n\tSQLITE=\"libsqlite.so\"\n\tSQLITE3=\"libsqlite3.so\"\n\t;;\n    *-*-*openbsd*)\n    \tLIBC=\"libc.so\"\n\tINTL=\"libintl.so\"\n        SQLITE=\"libsqlite.so\"\n        SQLITE3=\"libsqlite3.so\"\n\t;;\n    *-*-*linux*)\n\t\tAC_PATH_X\n\t\tdlsearch_path=`(libtool --config ; echo eval echo \\\\$sys_lib_dlsearch_path_spec) | sh`\n\t\tAC_MSG_CHECKING(for the soname of libX11.so)\n\t\tfor i in $x_libraries $dlsearch_path; do\n\t\t\tfor r in 4 5 6; do\n\t\t\t\tif test -f $i/libX11.so.$r; then\n\t\t\t\t\tX11=libX11.so.$r\n\t\t\t\t\tAC_MSG_RESULT($X11)\n\t\t\t\tfi\n\t\t\tdone\n\t\tdone\n\t\t\n\t\tif test \"x$X11\" = \"xlibX11.so\"; then\n\t\t\tAC_MSG_WARN([Could not find libX11.so. Do you have X.org or XFree86 installed? Assuming libX11.so.6...]);\n\t\t\tX11=libX11.so.6\n\t\tfi\n\t;;\nesac\n\nAC_SUBST(libsuffix)\n\n######################################\n# EGLIB CHECKS\n######################################\n\nGNUC_PRETTY=\nGNUC_UNUSED=\nBREAKPOINT=\"G_STMT_START { raise (SIGTRAP); } G_STMT_END\"\nif test x$GCC = xyes; then\n   GNUC_UNUSED='__attribute__((__unused__))'\n   GNUC_NORETURN='__attribute__((__noreturn__))'\n   case $host_cpu in\n     i*86|x86_64) BREAKPOINT=\"G_STMT_START { __asm__ (\\\"int \\$03\\\"); } G_STMT_END\" ;;\n   esac\nfi\nAC_SUBST(GNUC_PRETTY)\nAC_SUBST(GNUC_UNUSED)\nAC_SUBST(GNUC_NORETURN)\nAC_SUBST(BREAKPOINT)\n\nAC_C_BIGENDIAN([ORDER=G_BIG_ENDIAN],[ORDER=G_LITTLE_ENDIAN])\n\ncase $host in\n*-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-cygwin* | *-*-windows*)\n    PATHSEP='\\\\'\n    SEARCHSEP=';'\n    OS=\"WIN32\"\n    PIDTYPE='void *'\n    ;;\n*)\n    PATHSEP='/'\n    SEARCHSEP=':'\n    OS=\"UNIX\"\n    PIDTYPE='int'\n    ;;\nesac\n\ncase $host in\n\t*-*-solaris*)\n\tCFLAGS=\"$CFLAGS -D_POSIX_PTHREAD_SEMANTICS\"\n\t;;\nesac\n\ncase $target in\narm*-darwin*|aarch64*-*|riscv*)\n    CFLAGS=\"$CFLAGS -U_FORTIFY_SOURCE\"\n    ;;\ni*86-*-darwin*)\n    ORDER=G_LITTLE_ENDIAN\n    ;;\n*-*-haiku*)\n    LDFLAGS=\"$LDFLAGS -ltextencoding\"\n    ;;\n*-*-openbsd*)\n    CFLAGS=\"$CFLAGS -pthread\"\n    LDFLAGS=\"$LDFLAGS -pthread\"\n    ;;\nesac\n\nAC_SUBST(ORDER)\nAC_SUBST(PATHSEP)\nAC_SUBST(SEARCHSEP)\nAC_SUBST(OS)\nAC_SUBST(PIDTYPE)\n\n# Defined for all targets/platforms using classic Windows API support.\nAC_DEFINE(HAVE_CLASSIC_WINAPI_SUPPORT, 1, [Use classic Windows API support])\nAC_DEFINE(HAVE_UWP_WINAPI_SUPPORT, 0, [Don't use UWP Windows API support])\n\nAC_CHECK_FUNCS(strlcpy stpcpy strtok_r rewinddir vasprintf)\nAC_CHECK_FUNCS(getrlimit)\nAC_CHECK_FUNCS(fork execv execve)\nAC_CHECK_FUNCS(waitpid)\n\nAC_ARG_WITH([overridable-allocators], [  --with-overridable-allocators\tallow g_*alloc/g_free to call custom allocators set via g_mem_set_vtable])\n\nif test x$with_overridable_allocators = xyes; then\n\tAC_DEFINE(ENABLE_OVERRIDABLE_ALLOCATORS,1,[Overridable allocator support enabled])\n  AC_MSG_NOTICE([Overridable allocator support enabled])\nelse\n  AC_MSG_NOTICE([Overridable allocator support disabled])\nfi\n\n#\n# Mono currently supports 10.6, but strndup is not available prior to 10.7; avoiding\n# the detection of strndup on OS X so Mono built on 10.7+ still runs on 10.6. This can be\n# removed once support for 10.6 is dropped.\n#\n# iOS detection of strndup and getpwuid_r is faulty for some reason so let's simply avoid it\n#\nif test x$target_osx = xyes; then\nAC_CHECK_FUNCS(getpwuid_r)\nelif test x$target_ios = xno; then\nAC_CHECK_FUNCS(strndup getpwuid_r)\nfi\n\nAC_SEARCH_LIBS(sqrtf, m)\n\n# nanosleep may not be part of libc, also search it in other libraries\nAC_SEARCH_LIBS(nanosleep, rt)\n\nAC_SEARCH_LIBS(dlopen, dl)\n\n# AIX/OS400 -bsymbolic\n# Apple -bind_at_load\n# The rest GNU.\n#\nexport_link_flags=--export-dynamic\ncase $host_os in\nmingw*|cygwin*)\n\texport_link_flags=--export-all-symbols\n\t;;\n*-*-darwin*)\n\texport_link_flags=--export_dynamic\n\t;;\nesac\nAX_APPEND_LINK_FLAGS([-Wl,$export_link_flags -Wl,-Bsymbolic -bsymbolic -Wl,-z,now -Wl,-bind_at_load])\n\nAC_CHECK_HEADERS(getopt.h sys/select.h sys/time.h sys/wait.h pwd.h iconv.h sys/types.h sys/resource.h)\ndnl giconv.c will check on HAVE_ICONV_H but we need this for link time\nAC_CHECK_LIB(iconv, iconv_open)\nAC_CHECK_HEADER(alloca.h, [HAVE_ALLOCA_H=1], [HAVE_ALLOCA_H=0])\nAC_SUBST(HAVE_ALLOCA_H)\n\n# Get the exact type of size_t, not just its size.\n# This is so we can find an exact printf format among u, lu, llu, I64u.\n# To avoid warnings about slight mismatches.\n# C99 runtime \"zu\" dependency is being avoided here.\n#\n# We have to compile as C++ because C is too lenient\n# and lets the wrong thing compile, with warnings.\n#\n# Note: \"zu\" or ifdef <something> have the advantage\n# of producing installable \"biarch\" headers. i.e. one Mac header\n# for Mac/x86 and Mac/amd64.\n\nAC_LANG_PUSH(C++)\n\n# Check long before int because it is the overwhelming Unix answer,\n# across 32bit and 64bit systems -- fewer compiler invocations in autoconf.\n#\n# long ahead of int also tends to produce biarch-compatible headers except Windows.\n#\nAC_MSG_CHECKING(if size_t is unsigned long)\nAC_COMPILE_IFELSE([AC_LANG_SOURCE([\n\t#include <stddef.h>\n\tunsigned long *a = (size_t*)0;\n])], [\n\tAC_MSG_RESULT(yes)\n\tAC_SUBST(GSIZE_FORMAT, '\"lu\"')\n], [\n\tAC_MSG_RESULT(no)\n\tAC_MSG_CHECKING(if size_t is unsigned int)\n\tAC_COMPILE_IFELSE([AC_LANG_SOURCE([\n\t\t#include <stddef.h>\n\t\tunsigned *a = (size_t*)0;\n\t])], [\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_SUBST(GSIZE_FORMAT, '\"u\"')\n\t], [\n# At this point the majority of systems have their answer,\n# and we descend into non-standard or new-standard territory.\n#\n# Check __int64 first because I64 on some systems predates ll, enabling\n# new compiler/old runtime interop, and the types always have the same size.\n\t\tAC_MSG_RESULT(no)\n\t\tAC_MSG_CHECKING(if size_t is unsigned __int64)\n\t\tAC_COMPILE_IFELSE([AC_LANG_SOURCE([\n\t\t\t#include <stddef.h>\n\t\t\tunsigned __int64 *a = (size_t*)0;\n\t\t])], [\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_SUBST(GSIZE_FORMAT, '\"I64u\"')\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t\tAC_MSG_CHECKING(if size_t is unsigned long long)\n\t\t\tAC_COMPILE_IFELSE([AC_LANG_SOURCE([\n\t\t\t\t#include <stddef.h>\n\t\t\t\tunsigned long long *a = (size_t*)0;\n\t\t\t])], [\n\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\tAC_SUBST(GSIZE_FORMAT, '\"llu\"')\n\t\t\t], [\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\tAC_MSG_ERROR(Unable to determine size_t among unsigned long, int, __int64, long long)\n\t\t\t] )\n\t\t] )\n\t] )\n] )\n\nAC_LANG_POP\n\n# If size_t/ptrdiff_t is correct, use it. Otherwise C99 [u]intptr_t.\n# This provides for an exact match with functions that\n# take size_t like malloc and pthread_attr_getstacksize, avoiding warnings.\n# uintptr_t is not necessarily the same.\n#\n# ptrdiff_t is preferred over ssize_t as it is C89 vs. new Posix.\n# ssize_t looks nicer but ptrdiff_t is wrapped up as gssize anyway.\n\nif test $ac_cv_sizeof_void_p = $ac_cv_sizeof_size_t; then\n   GSIZE=\"size_t\"\n   GSSIZE=\"ptrdiff_t\"\nelse\n   GSIZE=\"uintptr_t\"\n   GSSIZE=\"intptr_t\"\nfi\n\nAC_SUBST(GSIZE)\nAC_SUBST(GSSIZE)\nAC_SUBST(GSIZE_FORMAT)\n\n#\n# END OF EGLIB CHECKS\n#\n\nAC_ARG_WITH([libgdiplus],\n\t[  --with-libgdiplus=installed|sibling|<path>\tOverride the libgdiplus used for System.Drawing tests (defaults to installed)],\n\t[], [with_libgdiplus=installed])\n\n# default install location\nlibgdiplus_install_loc=libgdiplus${libsuffix}\ncase \"$host\" in\n    *-*-*linux*)\n    libgdiplus_install_loc=libgdiplus${libsuffix}.0\n    ;;\nesac\n\ncase $with_libgdiplus in\n    no)\n    libgdiplus_loc=\n    ;;\n\n    installed)\n    libgdiplus_loc=\n    if test x$cross_compiling = xno; then\n        if test x$host_darwin = xyes; then\n\t    a=/Library/Frameworks/Mono.framework/Versions/Current/lib/$libgdiplus_install_loc\n\t    if test -x $a; then\n\t      libgdiplus_install_loc=$a\n\t      libgdiplus_loc=$a\n\t    fi\n\tfi\n    fi\n    ;;\n\n    yes|sibling)\n    libgdiplus_loc=`cd ../libgdiplus && pwd`/src/libgdiplus.la\n    ;;\n\n    /*) # absolute path, assume it is an install location\n    libgdiplus_loc=$with_libgdiplus\n    libgdiplus_install_loc=$with_libgdiplus\n    ;;\n\n    *)\n    libgdiplus_loc=`pwd`/$with_libgdiplus\n    ;;\nesac\nAC_SUBST(libgdiplus_loc)\nAC_SUBST(libgdiplus_install_loc)\n\nAC_ARG_ENABLE(icall-symbol-map,[  --enable-icall-symbol-map Generate tables which map icall functions to their C symbols], icall_symbol_map=$enableval, icall_symbol_map=no)\nif test \"x$icall_symbol_map\" = \"xyes\"; then\n   AC_DEFINE(ENABLE_ICALL_SYMBOL_MAP, 1, [Icall symbol map enabled])\nfi\n\nAC_ARG_ENABLE(icall-export,[  --enable-icall-export Export icall functions], icall_export=$enableval, icall_export=no)\nif test \"x$icall_export\" = \"xyes\"; then\n   AC_DEFINE(ENABLE_ICALL_EXPORT, 1, [Icall export enabled])\nfi\n\nAC_ARG_ENABLE(icall-tables,[  --disable-icall-tables Disable the runtime lookup of icalls], icall_tables=$enableval, icall_tables=yes)\nif test \"x$icall_tables\" = \"xno\"; then\n   AC_DEFINE(DISABLE_ICALL_TABLES, 1, [Icall tables disabled])\nfi\n\nAM_CONDITIONAL(DISABLE_ICALL_TABLES, test x$icall_tables = xno)\n\nif test \"x$with_tls\" = \"x__thread\"; then\n\tAC_DEFINE(MONO_KEYWORD_THREAD, __thread, [Have __thread keyword])\n\t# Pass the information to libgc\n\tCPPFLAGS=\"$CPPFLAGS -DUSE_COMPILER_TLS\"\n\tAC_MSG_CHECKING(if the tls_model attribute is supported)\n\tAC_TRY_COMPILE([static __thread int foo __attribute__((tls_model(\"initial-exec\")));], [\n\t\t], [\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE(HAVE_TLS_MODEL_ATTR, 1, [tls_model available])\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t])\nfi\n\nif test ${TARGET} = ARM; then\n\tdnl ******************************************\n\tdnl *** Check to see what FPU is available ***\n\tdnl ******************************************\n\tAC_MSG_CHECKING(which FPU to use)\n\n\t#\n\t# This is a bit tricky:\n\t#\n\t# if (__ARM_PCS_VFP) {\n\t# \t/* mfloat-abi=hard == VFP with hard ABI */\n\t# } elif (!__SOFTFP__) {\n\t# \t/* mfloat-abi=softfp == VFP with soft ABI */\n\t# } else {\n\t# \t/* mfloat-abi=soft == no VFP */\n\t# }\n\t#\n\t# The exception is iOS (w/ GCC) where none of the above\n\t# are defined (but iOS always uses the 'softfp' ABI).\n\t#\n\t# No support for FPA.\n\t#\n\n\tfpu=NONE\n\n\t# iOS GCC always uses the 'softfp' ABI.\n\tif test x\"$GCC\" = xyes && test x$host_darwin = xyes; then\n\t\tfpu=VFP\n\tfi\n\n\t# Are we using the 'hard' ABI?\n\tif test x$fpu = xNONE; then\n\t\tAC_TRY_COMPILE([], [\n\t\t\t#ifndef __ARM_PCS_VFP\n\t\t\t#error \"Float ABI is not 'hard'\"\n\t\t\t#endif\n\t\t], [\n\t\t\tfpu=VFP_HARD\n\t\t], [\n\t\t\tfpu=NONE\n\t\t])\n\tfi\n\n\t# No 'hard' ABI. 'soft' or 'softfp'?\n\tif test x$fpu = xNONE; then\n\t\tAC_TRY_COMPILE([], [\n\t\t\t#ifdef __SOFTFP__\n\t\t\t#error \"Float ABI is not 'softfp'\"\n\t\t\t#endif\n\t\t], [\n\t\t\tfpu=VFP\n\t\t], [\n\t\t\tfpu=NONE\n\t\t])\n\tfi\n\n\tif test x$arm_fpu != x; then\n\t   fpu=$arm_fpu\n\tfi\n\n\tAC_MSG_RESULT($fpu)\n\tCPPFLAGS=\"$CPPFLAGS -DARM_FPU_$fpu=1\"\n\tunset fpu\n\n\tdnl *********************************************\n\tdnl *** Check which ARM version(s) we can use ***\n\tdnl *********************************************\n\tAC_MSG_CHECKING(which ARM version to use)\n\n\tAC_TRY_COMPILE([], [\n\t\t#if !defined(__ARM_ARCH_5T__) && !defined(__ARM_ARCH_5TE__) && !defined(__ARM_ARCH_5TEJ__)\n\t\t#error Not on ARM v5.\n\t\t#endif\n\t], [\n\t\tarm_v5=yes\n\n\t\tarm_ver=ARMv5\n\t], [])\n\n\tAC_TRY_COMPILE([], [\n\t\t#if !defined(__ARM_ARCH_6J__) && !defined(__ARM_ARCH_6ZK__) && !defined(__ARM_ARCH_6K__) && !defined(__ARM_ARCH_6T2__) && !defined(__ARM_ARCH_6M__)\n\t\t#error Not on ARM v6.\n\t\t#endif\n\t], [\n\t\tarm_v5=yes\n\t\tarm_v6=yes\n\n\t\tarm_ver=ARMv6\n\t], [])\n\n\tAC_TRY_COMPILE([], [\n\t\t#if !defined(__ARM_ARCH_7A__) && !defined(__ARM_ARCH_7R__) && !defined(__ARM_ARCH_7EM__) && !defined(__ARM_ARCH_7M__) && !defined(__ARM_ARCH_7S__)\n\t\t#error Not on ARM v7.\n\t\t#endif\n\t], [\n\t\tarm_v5=yes\n\t\tarm_v6=yes\n\t\tarm_v7=yes\n\n\t\tarm_ver=ARMv7\n\t], [])\n\n\tAC_MSG_RESULT($arm_ver)\n\n\tif test x$arm_v5 = xyes; then\n\t\tAC_DEFINE(HAVE_ARMV5, 1, [ARM v5])\n\t\tCPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DHAVE_ARMV5=1\"\n\tfi\n\n\tif test x$arm_v6 = xyes; then\n\t\tAC_DEFINE(HAVE_ARMV6, 1, [ARM v6])\n\t\tCPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DHAVE_ARMV6=1\"\n\tfi\n\n\tif test x$arm_v7 = xyes; then\n\t\tAC_DEFINE(HAVE_ARMV7, 1, [ARM v7])\n\t\tCPPFLAGS_FOR_LIBGC=\"$CPPFLAGS_FOR_LIBGC -DHAVE_ARMV7=1\"\n\tfi\n\n\tif test x$host_linux = xyes; then\n\t\tRID=\"linux-arm\"\n\t\tCOREARCH=\"arm\"\n\t\tif test x$fpu = xNONE; then\n\t\t\tRID=\"linux-armel\"\n\t\t\tCOREARCH=\"armel\"\n\t\tfi\n\tfi\nfi\n\nAC_SUBST(RID)\nAC_SUBST(COREARCH)\nAC_SUBST(CORETARGETS)\n\nif test ${TARGET} = RISCV32 -o ${TARGET} = RISCV64; then\n\tAC_ARG_WITH([riscv-fpabi], [  --with-riscv-fpabi=auto,double,soft   Select RISC-V floating point ABI (auto)], [fpabi=$withval], [fpabi=double])\n\n\tAC_MSG_CHECKING([which RISC-V floating point ABI to use])\n\n\tif test x$fpabi = xauto; then\n\t\tAC_TRY_COMPILE([], [\n\t\t\t#ifdef __riscv_float_abi_double\n\t\t\t#error \"double\"\n\t\t\t#endif\n\t\t], [\n\t\t\tfpabi=auto\n\t\t], [\n\t\t\tfpabi=double\n\t\t])\n\tfi\n\n\tif test x$fpabi = xauto; then\n\t\tAC_TRY_COMPILE([], [\n\t\t\t#ifdef __riscv_float_abi_single\n\t\t\t#error \"single\"\n\t\t\t#endif\n\t\t], [\n\t\t\tfpabi=auto\n\t\t], [\n\t\t\tfpabi=single\n\t\t])\n\tfi\n\n\tif test x$fpabi = xauto; then\n\t\tAC_TRY_COMPILE([], [\n\t\t\t#ifdef __riscv_float_abi_soft\n\t\t\t#error \"soft\"\n\t\t\t#endif\n\t\t], [\n\t\t\tfpabi=auto\n\t\t], [\n\t\t\tfpabi=soft\n\t\t])\n\tfi\n\n\tcase $fpabi in\n\tdouble)\n\t\tAC_DEFINE([RISCV_FPABI_DOUBLE], [1], [RISC-V FPABI is double-precision])\n\t\tAC_MSG_RESULT([double-precision])\n\t\t;;\n\tsingle)\n\t\tAC_DEFINE([RISCV_FPABI_SINGLE], [1], [RISC-V FPABI is single-precision])\n\t\tAC_MSG_ERROR([single-precision, not supported])\n\t\t;;\n\tsoft)\n\t\tAC_DEFINE([RISCV_FPABI_SOFT], [1], [RISC-V FPABI is soft float])\n\t\tAC_MSG_RESULT([soft float])\n\t\t;;\n\tauto)\n\t\tAC_MSG_ERROR([unknown])\n\t\t;;\n\t*)\n\t\tAC_MSG_ERROR([invalid option: $fpabi])\n\t\t;;\n\tesac\nfi\n\nif test ${TARGET} = unknown; then\n\tCPPFLAGS=\"$CPPFLAGS -DNO_PORT\"\n\tAC_MSG_WARN(\"mono has not been ported to $host: some things may not work.\")\nfi\n\nif test \"x$platform_android\" = \"xyes\"; then\n\tcase \"x${TARGET}\" in\n\txARM)\n\t\tcase \"x$arm_ver\" in\n\t\txARMv5)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=android-armv5\n\t\t\t;;\n\t\txARMv6)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=android-armv6\n\t\t\t;;\n\t\txARMv7)\n\t\t\tBTLS_SUPPORTED=yes\n\t\t\tBTLS_PLATFORM=android-armv7\n\t\t\t;;\n\t\t*)\n\t\t\tBTLS_SUPPORTED=no\n\t\t\t;;\n\t\tesac\n\t\t;;\n\txARM64)\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=android-v8a\n\t\t;;\n\txX86)\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=android-x86\n\t\t;;\n\txAMD64)\n\t\tBTLS_SUPPORTED=yes\n\t\tBTLS_PLATFORM=android-x64\n\t\t;;\n\t*)\n\t\tBTLS_SUPPORTED=no\n\t\t;;\n\tesac\nfi\n\nif test ${ACCESS_UNALIGNED} = no; then\n\tCPPFLAGS=\"$CPPFLAGS -DNO_UNALIGNED_ACCESS\"\nfi\n\nif test x$host_darwin = xyes; then\n\tAC_MSG_CHECKING([for ranlib that supports -no_warning_for_no_symbols option])\n\tAS_IF(\n\t\t[$RANLIB -no_warning_for_no_symbols 2>&1 | grep -q \"unknown option\"],\n\t\t[AC_MSG_RESULT([no])],\n\t\t[\n\t\t\t# avoid AR calling ranlib, libtool calls it anyway. suppress no symbols warning.\n\t\t\tAR_FLAGS=\"Scru\"\n\t\t\tRANLIB=\"$RANLIB -no_warning_for_no_symbols\"\n\t\t\tAC_MSG_RESULT([yes])\n\t\t]\n\t)\nfi\n\ncase \"x$libgc\" in\n\txincluded)\n\t\t# Pass CPPFLAGS to libgc configure\n\t\t# We should use a separate variable for this to avoid passing useless and\n\t\t# potentially problematic defines to libgc (like -D_FILE_OFFSET_BITS=64)\n\t\t# This should be executed late so we pick up the final version of CPPFLAGS\n\t\t# The problem with this approach, is that during a reconfigure, the main\n\t\t# configure scripts gets invoked with these arguments, so we use separate\n\t\t# variables understood by libgc's configure to pass CPPFLAGS and CFLAGS.\n\t\tTMP_CPPFLAGS=\"$CPPFLAGS $CPPFLAGS_FOR_LIBGC\"\n\t\tif test x$TARGET = xSPARC -o x$TARGET = xSPARC64; then\n\t\t\tTMP_CPPFLAGS=`echo $TMP_CPPFLAGS | sed -e 's/-D_FILE_OFFSET_BITS=64//g'`\n\t\tfi\n\t\t# Don't pass -finstrument-for-thread-suspension in, \n\t\t# if these are instrumented it will be very bad news \n\t\t# (infinite recursion, undefined parking behavior, etc)\n\t\tTMP_CPPFLAGS=`echo $TMP_CPPFLAGS | sed -e 's/-finstrument-for-thread-suspension//g'`\n\t\tac_configure_args=\"$ac_configure_args --enable-single-obj-compilation --disable-embed-check --with-libgc-threads=$libgc_threads $libgc_configure_args \\\"CPPFLAGS_FOR_LIBGC=$TMP_CPPFLAGS\\\" \\\"CFLAGS_FOR_LIBGC=$CFLAGS_FOR_LIBGC\\\"\"\n\t\tif test \"x$support_boehm\" = \"xyes\"; then\n\t\t\tAC_CONFIG_SUBDIRS(external/bdwgc)\n\t\tfi\n\t\t;;\nesac\n\nMALLOC_MEMPOOLS=no\nAC_ARG_WITH(malloc_mempools,[  --with-malloc-mempools=yes,no  Use malloc for each single mempool allocation (only for runtime debugging, defaults to no)],[\n\tif test x$with_malloc_mempools = xyes; then\n\t\tMALLOC_MEMPOOLS=yes\n\t\tAC_DEFINE(USE_MALLOC_FOR_MEMPOOLS,1,[Use malloc for each single mempool allocation])\n\tfi\n])\n\n\nDISABLE_MCS_DOCS=default\nAC_ARG_WITH(mcs_docs,[  --with-mcs-docs=yes,no         If you want to build the documentation under mcs (defaults to yes)],[\n\tif test x$with_mcs_docs != xyes; then\n\t\tDISABLE_MCS_DOCS=yes\n\tfi\n])\nif test -n \"$INSTALL_4_x_TRUE\"; then :\n\tDISABLE_MCS_DOCS=yes\nfi\nif test \"x$DISABLE_MCS_DOCS\" = \"xdefault\"; then\n   DISABLE_MCS_DOCS=$DISABLE_MCS_DOCS_default\nfi\n\nAC_ARG_WITH(lazy_gc_thread_creation, [  --with-lazy-gc-thread-creation=yes|no      Enable lazy runtime thread creation, embedding host must do it explicitly (defaults to no)],[\n\tif test x$with_lazy_gc_thread_creation != xno ; then\n\t\tAC_DEFINE(LAZY_GC_THREAD_CREATION,1,[Enable lazy gc thread creation by the embedding host.])\n\tfi\n], [with_lazy_gc_thread_creation=no])\n\ndnl *****************************\ndnl *** Thread suspend policy ***\ndnl *****************************\n\ndnl Set a default hybrid or cooperative suspend on some platforms\n\ndnl Coop default is set by the bitcode preset.\n\ndnl If coop isn't on by default, maybe hybrid should be?\nif test x$enable_cooperative_suspend_default != xyes; then\n\tcase $HOST in\n\tX86 | AMD64)\n\t\tdnl Some host/target confusion, there's no host_osx (and\n\t\tdnl host_darwin would be true on iOS not just macOS).\n\t\tif test x$target_osx = xyes; then\n\t\t\tenable_hybrid_suspend_default=yes\n\t\telif test x$host_linux = xyes -o x$host_win32 = xyes; then\n\t\t\tenable_hybrid_suspend_default=yes\n\t\tfi\n\t\t;;\n\tesac\nfi\n\ndnl Now check if there were flags overriding the defaults\n\nAC_ARG_WITH(cooperative_gc,        [  --with-cooperative-gc=yes|no        Enable cooperative stop-the-world garbage collection (sgen only) (defaults to no)], [AC_MSG_WARN([--with-cooperative-gc is deprecated, use --enable-cooperative-suspend instead])], [with_cooperative_gc=default])\nAC_ARG_ENABLE(cooperative_suspend, [  --enable-cooperative-suspend      Enable cooperative stop-the-world garbage collection (sgen only) (defaults to no)], [], [enable_cooperative_suspend=default])\n\nif test x$enable_cooperative_suspend = xdefault -a x$with_cooperative_gc != xdefault; then\n\tenable_cooperative_suspend=$with_cooperative_gc\nfi\n\nif test x$enable_cooperative_suspend = xdefault; then\n\tenable_cooperative_suspend=$enable_cooperative_suspend_default\nfi\n\nif test x$enable_cooperative_suspend != xno; then\n\tAC_DEFINE(ENABLE_COOP_SUSPEND,1,[Enable cooperative stop-the-world garbage collection.])\n\tenable_hybrid_suspend_default=no\nfi\n\nAM_CONDITIONAL([ENABLE_COOP_SUSPEND], [test x$enable_cooperative_suspend != xno])\n\nAC_ARG_ENABLE(hybrid_suspend, [ --enable-hybrid-suspend     Enable hybrid stop-the-world garbage collection (sgen only) - cooperative suspend for threads running managed and runtime code, and preemptive suspend for threads running native and P/Invoke code (defaults to no)], [], [enable_hybrid_suspend=default])\n\nif test x$enable_hybrid_suspend = xdefault; then\n   enable_hybrid_suspend=$enable_hybrid_suspend_default\nfi\n\nif test x$enable_hybrid_suspend != xno -a x$enable_cooperative_suspend != xno ; then\n\tAC_MSG_ERROR([Hybrid suspend and Cooperative suspend cannot be both enabled.])\nfi\n\nif test x$enable_hybrid_suspend != xno ; then\n\tAC_DEFINE(ENABLE_HYBRID_SUSPEND,1,[Enable hybrid suspend for GC stop-the-world])\nfi\n\nAM_CONDITIONAL([ENABLE_HYBRID_SUSPEND], [test x$enable_hybrid_suspend != xno])\n\ndnl End of thread suspend policy\n\ndnl ***************************\ndnl *** feature experiments ***\ndnl ***************************\n\ndnl When adding experiments, also add to mono/utils/mono-experiments.def\nAC_ARG_ENABLE(experiment, [ --enable-experiment=LIST       Enable experimental fatures from the comma-separate LIST.  Available experiments: null,tiered],[\n\n\tif test x$enable_experiment != x ; then\n\t\tAC_DEFINE(ENABLE_EXPERIMENTS,1,[Enable feature experiments])\n\tfi\n\tfor feature in `echo \"$enable_experiment\" | sed -e \"s/,/ /g\"`; do\n\t\teval \"mono_experiment_test_enable_$feature='yes'\"\n\tdone\n\n\tif test \"x$mono_experiment_test_enable_all\" = \"xyes\"; then\n\t\teval \"mono_experiment_test_enable_null='yes'\"\n\t\teval \"mono_experiment_test_enable_tiered='yes'\"\n\t\ttrue\n\tfi\n\n\tif test \"x$mono_experiment_test_enable_null\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_EXPERIMENT_null, 1, [Enable experiment 'null'])\n\tfi\n\tif test \"x$mono_experiment_test_enable_tiered\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_EXPERIMENT_TIERED, 1, [Enable experiment 'Tiered Compilation'])\n\tfi\n],[])\n\nAM_CONDITIONAL(ENABLE_EXPERIMENT_TIERED, test x$mono_experiment_test_enable_tiered = xyes)\n\ndnl **********************\ndnl *** checked builds ***\ndnl **********************\n\nAC_ARG_ENABLE(checked_build, [  --enable-checked-build=LIST      To enable checked build (expensive asserts), configure with a comma-separated LIST of checked build modules and then include that same list in the environment variable MONO_CHECK_MODE at runtime. Recognized checked build modules: all, gc, metadata, thread, private_types, crash_reporting],[\n\n\tif test x$enable_checked_build != x ; then\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD,1,[Enable checked build])\n\tfi\n\tfor feature in `echo \"$enable_checked_build\" | sed -e \"s/,/ /g\"`; do\n\t\teval \"mono_checked_build_test_enable_$feature='yes'\"\n\tdone\n\n\tif test \"x$mono_checked_build_test_enable_all\" = \"xyes\"; then\n\t\teval \"mono_checked_build_test_enable_gc='yes'\"\n\t\teval \"mono_checked_build_test_enable_metadata='yes'\"\n\t\teval \"mono_checked_build_test_enable_thread='yes'\"\n\t\teval \"mono_checked_build_test_enable_private_types='yes'\"\n\t\teval \"mono_checked_build_test_enable_crash_reporting='yes'\"\n\tfi\n\n\tif test \"x$mono_checked_build_test_enable_gc\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD_GC, 1, [Enable GC checked build])\n\tfi\n\n\tif test \"x$mono_checked_build_test_enable_metadata\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD_METADATA, 1, [Enable metadata checked build])\n\tfi\n\n\tif test \"x$mono_checked_build_test_enable_thread\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD_THREAD, 1, [Enable thread checked build])\n\tfi\n\n\tif test \"x$mono_checked_build_test_enable_private_types\" = \"xyes\"; then\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD_PRIVATE_TYPES, 1, [Enable private types checked build])\n\tfi\n\n\tif test \"x$mono_checked_build_test_enable_crash_reporting\" = \"xyes\"; then\n\t\t# Required\n\t\twith_overridable_allocators=yes\n\t\tAC_DEFINE(ENABLE_OVERRIDABLE_ALLOCATORS,1,[Overridable allocator support enabled])\n\n\t\tAC_DEFINE(ENABLE_CHECKED_BUILD_CRASH_REPORTING, 1, [Enable private types checked build])\n\tfi\n], [])\n\ndnl End of checked builds\n\nAM_CONDITIONAL(NEED_VASPRINTF, test x$ac_cv_func_vasprintf = xno || test x$with_overridable_allocators = xyes)\n\nAC_CHECK_HEADER([malloc.h], \n\t\t[AC_DEFINE([HAVE_USR_INCLUDE_MALLOC_H], [1], \n\t\t\t[Define to 1 if you have /usr/include/malloc.h.])],,)\n\n# When --disable-shared is used, libtool transforms libmono-2.0.la into libmono-2.0.so\n# instead of libmono-static.a\nif test \"x$enable_shared\" = \"xno\" -a \"x$enable_executables\" = \"xyes\"; then\n   LIBMONO_LA=libmini-static.la\nelse\n   if test x$buildsgen = xyes; then\n      LIBMONO_LA=libmonosgen-$API_VER.la\n   else\n      LIBMONO_LA=libmonoboehm-$API_VER.la\n   fi\nfi\nAC_SUBST(LIBMONO_LA)\n\ndnl **************\ndnl ***  Btls  ***\ndnl **************\n\nAC_ARG_ENABLE(btls, [  --disable-btls             Disable the BoringTls provider], enable_btls=$enableval, enable_btls=$BTLS_SUPPORTED)\nAC_ARG_ENABLE(btls-lib, [  --disable-btls-lib             Disable building the BTLS native library], enable_btls_lib=$enableval, enable_btls_lib=$BTLS_SUPPORTED)\nAC_ARG_WITH(btls_android_ndk, [  --with-btls-android-ndk        Android NDK for BoringTls])\nAC_ARG_WITH(btls_android_api, [  --with-btls-android-api        Android NDK API level for BTLS build])\nAC_ARG_WITH(btls_android_cmake_toolchain, [  --with-btls-android-cmake-toolchain        Path to the cmake toolchain file for Android])\nAC_ARG_WITH(btls_android_ndk_asm_workaround, [  --with-btls-android-ndk-asm-workaround        Work around a problem with NDK r18+ clang compiler when compiling some AES assembly for ARM])\n\nif test \"x$with_btls_android_api\" = \"x\" ; then\n\tcase \"$BTLS_PLATFORM\" in\n\t\tandroid-armv5)\n\t\t\twith_btls_android_api=16\" ;;\n\t\tandroid-armv6)\n\t\t\twith_btls_android_api=16\" ;;\n\t\tandroid-armv7)\n\t\t\twith_btls_android_api=16 ;;\n\t\tandroid-v8a)\n\t\t\twith_btls_android_api=21 ;;\n\t\tandroid-x86)\n\t\t\twith_btls_android_api=16 ;;\n\t\tandroid-x64)\n\t\t\twith_btls_android_api=21 ;;\n\tesac\nfi\n\nif test \"x$enable_btls\" = \"xno\"; then\n   enable_btls_lib=no\nfi\n\nAM_CONDITIONAL(BTLS, test x$enable_btls_lib = xyes)\n\nbtls_android=no\nif test \"x$enable_btls\" = \"xyes\"; then\n\tAC_PATH_PROG(CMAKE, [cmake], [no], [$PATH:/Applications/CMake.app/Contents/bin:/usr/local/bin])\n\tif test \"x$CMAKE\" = \"xno\"; then\n\t\tAC_MSG_ERROR(\"cmake not found\")\n\tfi\n\n\tBTLS_ROOT=`cd $srcdir && pwd`/external/boringssl\n\tAC_SUBST(BTLS_ROOT)\n\n\tbtls_arch=\n\tbtls_cflags=\n\tBTLS_CMAKE_ARGS=\n\n\tif test \"x$host_win32\" = \"xyes\"; then\n\t\tAC_CHECK_PROG(HAVE_YASM, yasm, yes, no)\n\tfi\n\n\tcase \"$BTLS_PLATFORM\" in\n\ti386)\n\t\tbtls_arch=i386\n\t\tbtls_cflags=\"-m32\"\n\t\tcase $host_os in\n\t\t\tdarwin*)\n\t\t\t\tbtls_cflags=\"$btls_cflags -arch i386\"\n\t\t\t\t;;\n\t\t\tmingw*|cygwin*)\n\t\t\t\tbtls_cflags=\"-DNOCRYPT $WIN32_CPPFLAGS\"\n\t\t\t\tif test \"x$HAVE_YASM\" != \"xyes\"; then\n\t\t\t\t\tBTLS_CMAKE_ARGS=\"-DOPENSSL_NO_ASM=1\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\tx86_64)\n\t\tbtls_arch=x86_64\n\t\tcase $host_os in\n\t\t\tmingw*|cygwin*)\n\t\t\t\tbtls_cflags=\"-DNOCRYPT $WIN32_CPPFLAGS\"\n\t\t\t\tif test \"x$HAVE_YASM\" != \"xyes\"; then\n\t\t\t\t\tBTLS_CMAKE_ARGS=\"-DOPENSSL_NO_ASM=1\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\tarm)\n\t\tbtls_arch=arm\n\t\tbtls_cflags=\"-DOPENSSL_NO_ASM=1\"\n\t\t;;\n\tarmsoft)\n\t\tbtls_arch=arm\n\t\tbtls_cflags=\"-DOPENSSL_NO_ASM=1\"\n\t\t;;\n\taarch64)\n\t\tbtls_arch=aarch64\n\t\tbtls_cflags=\"-march=armv8-a+crypto\"\n\t\t;;\n\ts390x)\n\t\tbtls_arch=s390x\n\t\t;;\n\tpowerpc)\n\t\tbtls_arch=powerpc\n\t\tcase $host_os in\n\t\t\taix*|os400*)\n\t\t\t\tbtls_cflags=\"$btls_cflags -maix64 -mminimal-toc -pthread -D_ALL_SOURCE -D_THREAD_SAFE -D_REENTRANT\"\n\t\t\t\tBTLS_CMAKE_ARGS=\"$BTLS_CMAKE_ARGS -DCMAKE_AR=/usr/bin/ar -DCMAKE_C_ARCHIVE_CREATE=\\\"<CMAKE_AR> -X64 cr <TARGET> <LINK_FLAGS> <OBJECTS>\\\"\"\n\t\tesac\n\t\t;;\n\tandroid-armv5)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"armeabi\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\tandroid-armv6)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"armeabi\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\tandroid-armv7)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"armeabi-v7a\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\tandroid-v8a)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"arm64-v8a\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\tandroid-x86)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"x86\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\tandroid-x64)\n\t\tBTLS_CMAKE_ARGS=\"-DANDROID_ABI=\\\"x86_64\\\" -DANDROID_NATIVE_API_LEVEL=$with_btls_android_api\"\n\t\t;;\n\triscv32)\n\t\tbtls_arch=riscv32\n\t\t;;\n\triscv64)\n\t\tbtls_arch=riscv64\n\t\t;;\n\tloongarch64)\n\t\tbtls_arch=loongarch64\n\t\t;;\n\t*)\n\t\tAC_MSG_ERROR(Invalid BTLS platform)\n\tesac\n\n\tif test \"x$platform_android\" = \"xyes\"; then\n\t   \tif test \"x$with_btls_android_cmake_toolchain\" = \"x\"; then\n\t\t   with_btls_android_cmake_toolchain=\"$BTLS_ROOT/util/android-cmake/android.toolchain.cmake\"\n\t\tfi\n\n\t\tif test \"x$with_btls_android_ndk_asm_workaround\" != \"x\"; then\n\t\t   BTLS_CMAKE_ARGS=\"$BTLS_CMAKE_ARGS -DENABLE_NDK_ARM_WORKAROUND=ON\"\n\t\tfi\n\n\t\tbtls_android=yes\n\t\tBTLS_CMAKE_ARGS=\"$BTLS_CMAKE_ARGS -DCMAKE_TOOLCHAIN_FILE=$with_btls_android_cmake_toolchain\"\n\t\tif test \"x$with_btls_android_ndk\" != \"x\"; then\n\t\t\tBTLS_CMAKE_ARGS=\"$BTLS_CMAKE_ARGS -DANDROID_NDK=\\\"$with_btls_android_ndk\\\"\"\n\t\telse\n\t\t\tAC_MSG_ERROR([Need to pass the --with-btls-android-ndk argument when building with BTLS support on Android.])\n\t\tfi\n\tfi\n\n\tif test \"x$btls_arch\" != \"x\"; then\n\t\tBTLS_CMAKE_ARGS=\"$BTLS_CMAKE_ARGS -DBTLS_ARCH=\\\"$btls_arch\\\"\"\n\tfi\n\n\tBTLS_CFLAGS=\"$CPPFLAGS_FOR_BTLS $btls_cflags\"\n\tAC_SUBST(BTLS_ARCH)\n\tAC_SUBST(BTLS_CFLAGS)\n\tAC_SUBST(BTLS_PLATFORM)\n\tAC_SUBST(BTLS_CMAKE_ARGS)\n\n\tAC_DEFINE(HAVE_BTLS, 1, [BoringTls is supported])\nelse\n\tenable_btls=no\nfi\n\nAM_CONDITIONAL(BTLS_ANDROID, test x$btls_android = xyes)\n\n## Maybe should also disable if mcsdir is invalid.  Let's punt the issue for now.\nAM_CONDITIONAL(BUILD_MCS, [test x$cross_compiling = xno && test x$enable_mcs_build != xno])\nAM_CONDITIONAL(BUILD_SUPPORT, [test x$enable_support_build != xno])\n\nlibmono_ldflags=\"$libmono_ldflags $LIBS\"\n\nAM_CONDITIONAL(MIPS_GCC, test ${TARGET}${ac_cv_prog_gcc} = MIPSyes)\nAM_CONDITIONAL(MIPS_SGI, test ${TARGET}${ac_cv_prog_gcc} = MIPSno)\nAM_CONDITIONAL(SPARC, test x$TARGET = xSPARC)\nAM_CONDITIONAL(SPARC64, test x$TARGET = xSPARC64)\nAM_CONDITIONAL(X86, test x$TARGET = xX86)\nAM_CONDITIONAL(AMD64, test x$TARGET = xAMD64)\nAM_CONDITIONAL(MIPS, test x$TARGET = xMIPS)\nAM_CONDITIONAL(POWERPC, test x$TARGET = xPOWERPC)\nAM_CONDITIONAL(POWERPC64, test x$TARGET = xPOWERPC64)\nAM_CONDITIONAL(ARM, test x$TARGET = xARM)\nAM_CONDITIONAL(ARM64, test x$TARGET = xARM64 -o x$TARGET = xARM6432)\nAM_CONDITIONAL(S390X, test x$TARGET = xS390X)\nAM_CONDITIONAL([RISCV], [test x$TARGET = xRISCV32 -o x$TARGET = xRISCV64])\nAM_CONDITIONAL([RISCV32], [test x$TARGET = xRISCV32])\nAM_CONDITIONAL([RISCV64], [test x$TARGET = xRISCV64])\nAM_CONDITIONAL(WASM, test x$TARGET = xWASM)\nAM_CONDITIONAL(HOST_X86, test x$HOST = xX86)\nAM_CONDITIONAL(HOST_AMD64, test x$HOST = xAMD64)\nAM_CONDITIONAL(HOST_ARM, test x$HOST = xARM)\nAM_CONDITIONAL(HOST_ARM64, test x$HOST = xARM64)\nAM_CONDITIONAL([HOST_RISCV], [test x$HOST = xRISCV32 -o x$HOST = xRISCV64])\nAM_CONDITIONAL([HOST_RISCV32], [test x$HOST = xRISCV32])\nAM_CONDITIONAL([HOST_RISCV64], [test x$HOST = xRISCV64])\nAM_CONDITIONAL(HOST_WASM, test x$HOST = xWASM)\nAM_CONDITIONAL(LOONGARCH64, test x$TARGET = xLOONGARCH64)\n\nAM_CONDITIONAL(CROSS_COMPILE, test \"x$host\" != \"x$target\")\n\nAC_SUBST(LIBC)\nAC_SUBST(INTL)\nAC_SUBST(SQLITE)\nAC_SUBST(SQLITE3)\nAC_SUBST(ODBC)\nAC_SUBST(X11)\nAC_SUBST(GDKX11)\nAC_SUBST(GTKX11)\nAC_SUBST(XINERAMA)\nAC_DEFINE_UNQUOTED(MONO_ARCHITECTURE,\"$arch_target\",[The architecture this is running on])\nAC_SUBST(arch_target)\n\n#This must always be defined when building the runtime\nAC_DEFINE(MONO_INSIDE_RUNTIME,1, [Disable banned functions from being used by the runtime])\n\nmono_build_root=`pwd`\nAC_SUBST(mono_build_root)\n\nAC_ARG_ENABLE(msvc_only,[  --enable-msvc-only    Build only with Visual Studio (msvc) (defaults to no). Disable gcc build.], enable_msvc_only=$enableval, enable_msvc_only=no)\nif test x$host_win32 = xno; then\n\tif test x$enable_msvc_only = xyes; then\n\t\techo \"Error, --enable-msvc-only only supported for Windows builds.\"\n\t\texit 1\n\tfi\nfi\nAM_CONDITIONAL(ENABLE_MSVC_ONLY, test x$enable_msvc_only = xyes)\n\nAC_ARG_ENABLE(msvc,[  --enable-msvc    Build with Visual Studio (msvc) (defaults to no)], enable_msvc=$enableval, enable_msvc=no)\nif test x$host_win32 = xno; then\n\tif test x$enable_msvc = xyes; then\n\t\techo \"Error, --enable-msvc only supported for Windows builds.\"\n\t\texit 1\n\tfi\nfi\nif test x$enable_msvc_only = xyes; then\n\tenable_msvc=yes\nfi\nAM_CONDITIONAL(ENABLE_MSVC, test x$enable_msvc = xyes)\n\nif test \"x$enable_msvc\" = \"xyes\"; then\n\tmono_msvc_build_dir='$(top_srcdir)'/msvc/build/sgen\n\tif test \"x$host_cpu\" = \"xi686\"; then\n\t\tmono_msvc_build_lib_dir='$(mono_msvc_build_dir)'/Win32/lib/Release\n\t\tmono_msvc_build_bin_dir='$(mono_msvc_build_dir)'/Win32/bin/Release\n\t\tmono_runtime=msvc/build/sgen/Win32/bin/Release/mono-sgen.exe\n\t\tmono_runtime_wrapper=$mono_runtime\n\telse\n\t\tmono_msvc_build_lib_dir='$(mono_msvc_build_dir)'/x64/lib/Release\n\t\tmono_msvc_build_bin_dir='$(mono_msvc_build_dir)'/x64/bin/Release\n\t\tmono_runtime=msvc/build/sgen/x64/bin/Release/mono-sgen.exe\n\t\tmono_runtime_wrapper=msvc/build/sgen/x64/bin/Release/mono-sgen-msvc.sh\n\tfi\n\tAC_SUBST(mono_msvc_build_dir)\n\tAC_SUBST(mono_msvc_build_lib_dir)\n\tAC_SUBST(mono_msvc_build_bin_dir)\nelse\n\tmono_runtime=mono/mini/mono\n\tmono_runtime_wrapper=$mono_runtime\nfi\n\nAC_SUBST(mono_runtime)\nAC_SUBST(mono_runtime_wrapper)\n\nCSC_LOCATION=`cd $srcdir && pwd`/external/roslyn-binaries/Microsoft.Net.Compilers/3.9.0/csc.exe\nVBCS_LOCATION=`cd $srcdir && pwd`/external/roslyn-binaries/Microsoft.Net.Compilers/3.9.0/VBCSCompiler.exe\n\nif test $csc_compiler = mcs; then\n  CSC=$mcs_topdir/class/lib/build/mcs.exe\nelse\n  CSC=$CSC_LOCATION\nfi\n\nAM_CONDITIONAL([CSC_IS_ROSLYN], [test x$csc_compiler != xmcs])\n\nmono_cfg_root=$mono_build_root/runtime\nif test x$host_win32 = xyes; then\n  if test \"x$cross_compiling\" = \"xno\"; then\n    mono_cfg_dir=`cygpath -w -a $mono_cfg_root`\\\\etc\n    CSC=`cygpath -m -a $CSC`\n    CSC_LOCATION=`cygpath -m -a $CSC_LOCATION`\n    VBCS_LOCATION=`cygpath -m -a $VBCS_LOCATION`\n  else\n    mono_cfg_dir=`echo $mono_cfg_root | tr '/' '\\\\'`\\\\etc\n  fi\nelse\n  mono_cfg_dir=$mono_cfg_root/etc\nfi\n\nif test \"x$platform_android\" = \"xyes\"; then\n  mono_cfg_dir=\nfi\n\nAC_SUBST(mono_cfg_dir)\n\nAC_SUBST(CSC)\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/1.0/machine.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/1.0\n\tcd runtime/etc/mono/1.0\n\trm -f machine.config\n\t$LN_S $reldir/data/net_1_1/machine.config machine.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/2.0/machine.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/2.0\n\tcd runtime/etc/mono/2.0\n\trm -f machine.config\n\t$LN_S $reldir/data/net_2_0/machine.config machine.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/2.0/web.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/2.0\n\tcd runtime/etc/mono/2.0\n\trm -f web.config\n\t$LN_S $reldir/data/net_2_0/web.config web.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/browscap.ini],\n[   depth=../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/\n\tcd runtime/etc/mono/\n\trm -f browscap.ini\n\t$LN_S $reldir/data/browscap.ini browscap.ini\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/2.0/Browsers/Compat.browser],\n[   depth=../../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/2.0/Browsers/\n\tcd runtime/etc/mono/2.0/Browsers\n\trm -f Compat.browser\n\t$LN_S $reldir/data/Browsers/Compat.browser Compat.browser\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.0/Browsers/Compat.browser],\n[   depth=../../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.0/Browsers/\n\tcd runtime/etc/mono/4.0/Browsers\n\trm -f Compat.browser\n\t$LN_S $reldir/data/Browsers/Compat.browser Compat.browser\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.5/Browsers/Compat.browser],\n[   depth=../../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.5/Browsers/\n\tcd runtime/etc/mono/4.5/Browsers\n\trm -f Compat.browser\n\t$LN_S $reldir/data/Browsers/Compat.browser Compat.browser\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.0/machine.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.0\n\tcd runtime/etc/mono/4.0\n\trm -f machine.config\n\t$LN_S $reldir/data/net_4_0/machine.config machine.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.0/web.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.0\n\tcd runtime/etc/mono/4.0\n\trm -f web.config\n\t$LN_S $reldir/data/net_4_0/web.config web.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.5/machine.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.5\n\tcd runtime/etc/mono/4.5\n\trm -f machine.config\n\t$LN_S $reldir/data/net_4_5/machine.config machine.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\nAC_CONFIG_COMMANDS([runtime/etc/mono/4.5/web.config],\n[   depth=../../../..\n\tcase $srcdir in\n\t[[\\\\/$]]* | ?:[[\\\\/]]* ) reldir=$srcdir ;;\n\t.) reldir=$depth ;;\n\t*) reldir=$depth/$srcdir ;;\n\tesac\n\t$ac_aux_dir/install-sh -d runtime/etc/mono/4.5\n\tcd runtime/etc/mono/4.5\n\trm -f web.config\n\t$LN_S $reldir/data/net_4_5/web.config web.config\n\tcd $depth\n],[LN_S='$LN_S'])\n\n# Top level Makefile.am subdirs\nif test \"x$support_boehm\" = \"xyes\" -a \"x$libgc\" = \"xincluded\"; then\n\tmono_subdirs_libgc=external/bdwgc\nfi\n\nif test x$enable_support_build != xno; then\n\tmono_subdirs_support=support\nfi\n\nif test x$cross_compiling = xno; then\n\t# Some tools might not build when cross-compiling\n\tmono_subdirs_tools=tools\nfi\n\nif test x$DISABLE_MCS_DOCS != xyes; then\n\tmono_subdirs_docs=docs\nfi\n\nif test x$with_ikvm_native = xyes; then\n\tmono_subdirs_ikvm_native=ikvm-native\nfi\n\nMONO_SUBDIRS=\"po $mono_subdirs_libgc llvm mono $mono_subdirs_ikvm_native $mono_subdirs_support data runtime scripts man samples $mono_subdirs_tools $mono_subdirs_docs msvc acceptance-tests\"\nMONO_NOINST_SUBDIRS=\"$mono_subdirs_libgc\"\n\nAC_SUBST(MONO_SUBDIRS)\nAC_SUBST(MONO_NOINST_SUBDIRS)\n\nAC_CONFIG_COMMANDS([quiet-libtool], [sed -e 's/echo \"copying selected/# \"copying selected/g' < libtool > libtool.tmp && mv libtool.tmp libtool && chmod a+x libtool; sed -e 's/$ECHO \"copying selected/# \"copying selected/g' < libtool > libtool.tmp && mv libtool.tmp libtool && chmod a+x libtool])\nAC_CONFIG_COMMANDS([nolock-libtool], [sed -e 's/lock_old_archive_extraction=yes/lock_old_archive_extraction=no/g' < libtool > libtool.tmp && mv libtool.tmp libtool && chmod a+x libtool])\nAC_CONFIG_COMMANDS([clean-llvm], [rm -f llvm/llvm_config.mk])\n\n#\n# Mono.Native Support\n# -------------------\n# Mono.Native is the new name for both System.Native and System.Security.Cryptography.Apple.\n# It is built as a stand-alone shared library and not bundled with the runtime because we\n# may need to build two different versions of it.\n#\n# Starting with macOS 10.12+ and iOS 10+, Apple introduced a new Unified API for some of the\n# crypto primitives that we're using as part of System.Security.Cryptography.Apple.\n#\n# On Desktop, we can check at runtime whether the OS version is recent enough and switch\n# implementation accordingly.  We build a single `libmono-native` shared library.\n#\n# However, on Mobile we cannot have any undefined symbols as this would break Bitcode.\n#\n# During the mobile build, we are called with `CFLAGS` containing an explicit minium version flag,\n# which is eiter `-mmacosx-version-min=`, `-mios-simulator-version-min=` or `-miphoneos-version-min=`\n# depending on platform.\n#\n# We build two versions of the shared library:\n# - `libmono-native-compat` is built with whichever minimum version is passed to us via `CFLAGS`.\n# - `libmono-native-unifed` is built with the minimum version set to macOS 10.12+ / iOS 10+.\n#\n# For testing purpuses, there is a function called `mono_native_get_platform_type ()`\n# (see mono/native/mono-native-platform.c), which returns a `MonoNativePlatformType` enum value.\n# There is also `Mono.MonoNativePlatform.GetPlatformType ()` (see mcs/class/corlib/Test/Mono/MonoNativePlatform.cs).\n#\n# This can be called by automated tests both to ensure that the library has been correctly installed and also\n# to verify that it's the correct version of it.\n#\n\nAC_MSG_CHECKING([Mono.Native support])\nsed_version_pattern='[[0-9]]\\{1,2\\}\\(\\.[[0-9]]\\{1,2\\}\\)'\nif test x$disable_mono_native = xyes; then\n\tmono_native=no\nelif test x$target_osx = xyes; then\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CCASFLAGS=$CCASFLAGS\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\n\tmono_native=yes\n\tMONO_NATIVE_PLATFORM=macos\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_MACOS\"\n\n\tif test x$enable_gss = xyes; then\n\t\tMONO_NATIVE_LDFLAGS=\"$MONO_NATIVE_LDFLAGS -framework GSS\"\n\tfi\n\n\tAC_MONO_APPLE_AVAILABLE(mono_native_compat, [whether we need the compatibility layer],\n\t\t[!(MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_12)])\n\n\tif test x$mono_native_compat = xyes; then\n\t\tmono_native_compat=yes\n\t\tmono_native_text=\"Mac OSX (compat + unified v10.12)\"\n\t\tMONO_NATIVE_COMPAT_CCASFLAGS=$MONO_NATIVE_CCASFLAGS\n\t\tMONO_NATIVE_COMPAT_CPPFLAGS=$MONO_NATIVE_CPPFLAGS\n\t\tMONO_NATIVE_COMPAT_CXXFLAGS=$MONO_NATIVE_CXXFLAGS\n\t\tMONO_NATIVE_COMPAT_CFLAGS=$MONO_NATIVE_CFLAGS\n\t\tMONO_NATIVE_COMPAT_LDFLAGS=$MONO_NATIVE_LDFLAGS\n\n\t\tsed_remove_mac_version_pattern=\"s/-mmacosx-version-min=$sed_version_pattern//g\"\n\t\tMONO_NATIVE_UNIFIED_CCASFLAGS=\"`echo $CCASFLAGS | sed -e $sed_remove_mac_version_pattern` -mmacosx-version-min=10.12\"\n\t\tMONO_NATIVE_UNIFIED_CPPFLAGS=\"`echo $CPPFLAGS | sed -e $sed_remove_mac_version_pattern` -mmacosx-version-min=10.12\"\n\t\tMONO_NATIVE_UNIFIED_CXXFLAGS=\"`echo $CXXFLAGS | sed -e $sed_remove_mac_version_pattern` -mmacosx-version-min=10.12\"\n\t\tMONO_NATIVE_UNIFIED_CFLAGS=\"`echo $CFLAGS | sed -e $sed_remove_mac_version_pattern` -mmacosx-version-min=10.12\"\n\t\tMONO_NATIVE_UNIFIED_LDFLAGS=\"`echo $LDFLAGS | sed -e $sed_remove_mac_version_pattern` -mmacosx-version-min=10.12\"\n\telse\n\t\tmono_native_compat=no\n\t\tmono_native_text=\"Mac OSX\"\n\tfi\nelif test x$mono_native_platform_ios = xyes; then\n\tAC_MONO_APPLE_TARGET(TARGET_OS_SIMULATOR, [mono_native_ios_sim=yes], [mono_native_ios_sim=no])\n\n\tAC_MONO_APPLE_TARGET(TARGET_OS_IOS, [\n\t\tif test x$mono_native_ios_sim = xyes; then\n\t\t\tmono_native_ios_target=ios-simulator\n\t\t\tmono_native_text=\"iOS Simulator\"\n\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_IPHONE | MONO_NATIVE_PLATFORM_TYPE_SIMULATOR\"\n\t\telse\n\t\t\tmono_native_ios_target=iphoneos\n\t\t\tmono_native_text=\"iOS Device\"\n\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_IPHONE | MONO_NATIVE_PLATFORM_TYPE_DEVICE\"\n\t\tfi\n\t\tmono_native_unified_version=\"10.0\"\n\t\tmono_native_compat_check=\"__IPHONE_OS_VERSION_MIN_REQUIRED >= __IPHONE_10_0\"\n\t], [\n\t\tAC_MONO_APPLE_TARGET(TARGET_OS_TV, [\n\t\t\tif test x$mono_native_ios_sim = xyes; then\n\t\t\t\tmono_native_ios_target=tvos-simulator\n\t\t\t\tmono_native_text=\"AppleTV Simulator\"\n\t\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_TV | MONO_NATIVE_PLATFORM_TYPE_SIMULATOR\"\n\t\t\telse\n\t\t\t\tmono_native_ios_target=tvos\n\t\t\t\tmono_native_text=\"AppleTV Device\"\n\t\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_TV | MONO_NATIVE_PLATFORM_TYPE_DEVICE\"\n\t\t\tfi\n\t\t\tmono_native_unified_version=\"10.0\"\n\t\t\tmono_native_compat_check=\"__TV_OS_VERSION_MIN_REQUIRED >= __TVOS_10_0\"\n\t\t], [\n\t\t\tAC_MONO_APPLE_TARGET(TARGET_OS_WATCH, [\n\t\t\t\tif test x$mono_native_ios_sim = xyes; then\n\t\t\t\t\tmono_native_ios_target=watchos-simulator\n\t\t\t\t\tmono_native_text=\"Apple Watch Simulator\"\n\t\t\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_WATCH | MONO_NATIVE_PLATFORM_TYPE_SIMULATOR\"\n\t\t\t\telse\n\t\t\t\t\tmono_native_ios_target=watchos\n\t\t\t\t\tmono_native_text=\"Apple Watch Device\"\n\t\t\t\t\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_IOS | MONO_NATIVE_PLATFORM_TYPE_WATCH | MONO_NATIVE_PLATFORM_TYPE_DEVICE\"\n\t\t\t\tfi\n\t\t\t\tmono_native_unified_version=\"5.0\"\n\t\t\t\tmono_native_compat_check=\"__WATCH_OS_VERSION_MIN_REQUIRED >= __WATCHOS_5_0\"\n\t\t\t], [\n\t\t\t\tAC_MSG_ERROR([Unknown iOS Target])\n\t\t\t])\n\t\t])\n\t])\n\n\tAC_MONO_APPLE_AVAILABLE(mono_native_compat, [whether we need the compatibility layer], [!($mono_native_compat_check)])\n\n\tif test x$with_bitcode = xyes; then\n\t\tmono_native_ldflags=\"-framework CoreFoundation -framework Foundation -no-undefined -fatal_warnings\"\n\t\tMONO_NATIVE_LIBADD=\"../mini/$LIBMONO_LA\"\n\telse\n\t\tmono_native_ldflags=\"-framework CoreFoundation -framework Foundation -fatal_warnings\"\n\tfi\n\n\tif test x$enable_gss = xyes; then\n\t\tmono_native_ldflags=\"$mono_native_ldflags -framework GSS\"\n\tfi\n\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CCASFLAGS=$CCASFLAGS\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=\"$LDFLAGS $mono_native_ldflags\"\n\n\tif test x$mono_native_compat = xyes; then\n\t\tmono_native_text=\"$mono_native_text (compat + unified v$mono_native_unified_version)\"\n\t\tMONO_NATIVE_COMPAT_CCASFLAGS=$MONO_NATIVE_CCASFLAGS\n\t\tMONO_NATIVE_COMPAT_CPPFLAGS=$MONO_NATIVE_CPPFLAGS\n\t\tMONO_NATIVE_COMPAT_CXXFLAGS=$MONO_NATIVE_CXXFLAGS\n\t\tMONO_NATIVE_COMPAT_CFLAGS=$MONO_NATIVE_CFLAGS\n\t\tMONO_NATIVE_COMPAT_LDFLAGS=$MONO_NATIVE_LDFLAGS\n\n\t\tsed_remove_ios_version_pattern=\"s/-m\\(.*\\)-version-min=$sed_version_pattern//g\"\n\t\tMONO_NATIVE_UNIFIED_CCASFLAGS=\"`echo $CCASFLAGS | sed -e $sed_remove_ios_version_pattern` -m$mono_native_ios_target-version-min=$mono_native_unified_version\"\n\t\tMONO_NATIVE_UNIFIED_CPPFLAGS=\"`echo $CPPFLAGS | sed -e $sed_remove_ios_version_pattern` -m$mono_native_ios_target-version-min=$mono_native_unified_version\"\n\t\tMONO_NATIVE_UNIFIED_CXXFLAGS=\"`echo $CXXFLAGS | sed -e $sed_remove_ios_version_pattern` -m$mono_native_ios_target-version-min=$mono_native_unified_version\"\n\t\tMONO_NATIVE_UNIFIED_CFLAGS=\"`echo $CFLAGS | sed -e $sed_remove_ios_version_pattern` -m$mono_native_ios_target-version-min=$mono_native_unified_version\"\n\t\tMONO_NATIVE_UNIFIED_LDFLAGS=\"`echo $LDFLAGS $mono_native_ldflags | sed -e $sed_remove_ios_version_pattern` -m$mono_native_ios_target-version-min=$mono_native_unified_version\"\n\tfi\n\n\tmono_native=yes\n\tMONO_NATIVE_PLATFORM=ios\nelif test x$host_linux = xyes; then\n\tmono_native_text=\"Linux\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CCASFLAGS=$CCASFLAGS\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\tif test x$enable_gss = xyes; then\n\t\tMONO_NATIVE_LDFLAGS=\"$MONO_NATIVE_LDFLAGS -lgssapi_krb5\"\n\telse\n\t\tAC_MSG_WARN([GSS is not enabled, it requires libkrb5-dev package])\n\tfi\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=linux\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_LINUX\"\nelif test x$target_wasm = xyes; then\n\tmono_native_text=\"wasm\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CCASFLAGS=$CCASFLAGS\n\t# The system.native code uses _WASM_ to check for wasm\n\tMONO_NATIVE_CPPFLAGS=\"$CPPFLAGS -D_WASM_\"\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=linux\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_LINUX\"\nelif case $host_os in aix*|os400*) true;; *) false;; esac; then\n\tmono_native_text=\"AIX\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CCASFLAGS=$CCASFLAGS\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tdnl nosymbolic- is a hack in case -G for linking is used, as -G seems\n\tdnl to change the way unresolved symbols work on library load in an\n\tdnl incompatible manner. (as references to runtime functions are\n\tdnl resolved later) Default params otherwise are that, so seems OK.\n\tdnl Likewise, we don't seem to need to cover the entire runtime with\n\tdnl it either, on both AIX and PASE. -brtl from -G does seem to spew\n\tdnl Big Scary TOC Warnings (tm) from the linker, but it doesn't seem\n\tdnl problematic with gcc's -mminimal-toc.\n\tdnl ----\n\tdnl flock in AIX exists in libbsd (not the same as freedesktop.org\n\tdnl libbsd) which Mono.Native needs.\n\tdnl Because of the way that the library is built by default, unresolved\n\tdnl references are kept and resolved at runtime. Often, the dependency\n\tdnl chain means libbsd is loaded anyways, but not necessarily. It's\n\tdnl better to explicitly link it, even though it has it shadows libc's\n\tdnl ioctl with its own. (As for the other unresolved imports, those\n\tdnl should be provided by the Mono runtime loaded.)\n\tMONO_NATIVE_LDFLAGS=\"$LDFLAGS -lbsd -Wl,-bnosymbolic-\"\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=aix\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_AIX\"\nelif case $host_os in freebsd*) true;; *) false;; esac; then\n\tmono_native_text=\"FreeBSD\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=\"$CFLAGS -I/usr/local/include\"\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=freebsd\n\tAC_MSG_CHECKING([Mono.Native support])\n\tAC_MSG_RESULT(freebsd)\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_FREEBSD\"\nelif case $host_os in netbsd*) true;; *) false;; esac; then\n\tmono_native_text=\"NetBSD\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=netbsd\n\tAC_MSG_CHECKING([Mono.Native support])\n\tAC_MSG_RESULT(netbsd)\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_NETBSD\"\nelif case $host_os in haiku*) true;; *) false;; esac; then\n\tmono_native_text=\"Haiku\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=haiku\n\tAC_MSG_CHECKING([Mono.Native support])\n\tAC_MSG_RESULT(haiku)\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_HAIKU\"\nelif test x$platform_android = xyes; then\n\tmono_native_text=\"Android\"\n\tMONO_NATIVE_CC=$CC\n\tMONO_NATIVE_CXX=$CXX\n\tMONO_NATIVE_CPPFLAGS=$CPPFLAGS\n\tMONO_NATIVE_CXXFLAGS=$CXXFLAGS\n\tMONO_NATIVE_CFLAGS=$CFLAGS\n\tMONO_NATIVE_LDFLAGS=$LDFLAGS\n\tMONO_NATIVE_LIBADD=\"../mini/$LIBMONO_LA\"\n\n\tmono_native=yes\n\tmono_native_compat=no\n\tMONO_NATIVE_PLATFORM=android\n\n\tMONO_NATIVE_PLATFORM_TYPE=\"MONO_NATIVE_PLATFORM_TYPE_ANDROID\"\nelse\n\tmono_native=no\n\tmono_native_text=\"no\"\nfi\n\nAC_MSG_RESULT($mono_native_text)\n\nif test x$mono_native_compat = xyes; then\n\tMONO_NATIVE_LIBRARY_NAME=libmono-native-compat\nelse\n\tMONO_NATIVE_LIBRARY_NAME=libmono-native\nfi\n\nAC_SUBST(MONO_NATIVE_PLATFORM)\nAC_SUBST(MONO_NATIVE_CC)\nAC_SUBST(MONO_NATIVE_CXX)\nAC_SUBST(MONO_NATIVE_CCASFLAGS)\nAC_SUBST(MONO_NATIVE_COMPAT_CCASFLAGS)\nAC_SUBST(MONO_NATIVE_UNIFIED_CCASFLAGS)\nAC_SUBST(MONO_NATIVE_CPPFLAGS)\nAC_SUBST(MONO_NATIVE_COMPAT_CPPFLAGS)\nAC_SUBST(MONO_NATIVE_UNIFIED_CPPFLAGS)\nAC_SUBST(MONO_NATIVE_CXXFLAGS)\nAC_SUBST(MONO_NATIVE_COMPAT_CXXFLAGS)\nAC_SUBST(MONO_NATIVE_UNIFIED_CXXFLAGS)\nAC_SUBST(MONO_NATIVE_CFLAGS)\nAC_SUBST(MONO_NATIVE_COMPAT_CFLAGS)\nAC_SUBST(MONO_NATIVE_UNIFIED_CFLAGS)\nAC_SUBST(MONO_NATIVE_LDFLAGS)\nAC_SUBST(MONO_NATIVE_COMPAT_LDFLAGS)\nAC_SUBST(MONO_NATIVE_UNIFIED_LDFLAGS)\nAC_SUBST(MONO_NATIVE_LIBRARY_NAME)\nAC_SUBST(MONO_NATIVE_LIBADD)\n\nAM_CONDITIONAL(MONO_NATIVE, test x$mono_native = xyes)\nAM_CONDITIONAL(MONO_NATIVE_COMPAT, test x$mono_native_compat = xyes)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_MACOS, test x$MONO_NATIVE_PLATFORM = xmacos)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_IOS, test x$MONO_NATIVE_PLATFORM = xios)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_LINUX, test x$MONO_NATIVE_PLATFORM = xlinux)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_AIX, test x$MONO_NATIVE_PLATFORM = xaix)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_ANDROID, test x$MONO_NATIVE_PLATFORM = xandroid)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_FREEBSD, test x$MONO_NATIVE_PLATFORM = xfreebsd)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_NETBSD, test x$MONO_NATIVE_PLATFORM = xnetbsd)\nAM_CONDITIONAL(MONO_NATIVE_PLATFORM_HAIKU, test x$MONO_NATIVE_PLATFORM = xhaiku)\n\nMONO_NATIVE_PLATFORM_TYPE_COMPAT=\"$MONO_NATIVE_PLATFORM_TYPE | MONO_NATIVE_PLATFORM_TYPE_COMPAT\"\nMONO_NATIVE_PLATFORM_TYPE_UNIFIED=\"$MONO_NATIVE_PLATFORM_TYPE | MONO_NATIVE_PLATFORM_TYPE_UNIFIED\"\nAC_SUBST(MONO_NATIVE_PLATFORM_TYPE)\nAC_SUBST(MONO_NATIVE_PLATFORM_TYPE_COMPAT)\nAC_SUBST(MONO_NATIVE_PLATFORM_TYPE_UNIFIED)\n\n### C++ Linker selection\n#\n# We have to lie to autotools, sometimes.\n#\n# If we're building with llvm compiled into Mono, set MONO_CXXLD to CXX,\n# otherwise to CC.  We want C linking even if we're compiling with C++ enabled\n# because we do not want to link inthe C++ runtime library (-lstdc++ or -lc++),\n# except if we're linking with LLVM which relies on it.\n#\n# Explanation of the hack:\n#\n# According to\n# https://www.gnu.org/software/automake/manual/html_node/How-the-Linker-is-Chosen.html,\n# automake chooses the linker that it used to compile a target based on the\n# _SOURCES for that target.  If the target is comprised of only C code, it\n# chooses the C linker (on Linux and OSX this is just gcc or clang called with\n# linker arguments and a -o).  If the target _SOURCES include at least one C++ file, \n# then automake chooses the C++ linker (usually g++ or clang++ called with linker arguments and -o).\n#\n# The problem for Mono is that we don't want the C++ runtime library (libstdc++\n# or libc++) linked in - even when Mono is written in C++, we take care not to\n# require the runtime library.  As a result, we don't want g++ or clang++ to do\n# the linking.  On the other hand if LLVM is enabled, then we _must_ use the\n# C++ linker - LLVM doesn't have the same restrictions.\n#\n# So the trick is we set MONO_CXXLD here to $CXX or $CC and in\n#  mono/mini/Makefile.am.in we have CCLD=$MONO_CXXLD and CXXLD=$MONO_CXXLD which bypasses\n#  automake's autodetection and lets us use the linker that we want.\n#\nif test \"x$enable_llvm_runtime\" = \"xyes\"; then\n\tAC_SUBST(MONO_CXXLD, [$CXX])\n\tAC_SUBST(MONO_LIBTOOL_TAG, '--tag=CXX')\nelse\n\tAC_SUBST(MONO_CXXLD, [$CC])\n\tAC_SUBST(MONO_LIBTOOL_TAG, '')\nfi\n\n### Set -Werror options\n#\n# Anything involving -Werror must be done late because autoconf depends on compiling with warnings to be success.\n#\nif test x\"$GCC\" = xyes; then\n\n\tif test \"x$with_jemalloc\" != \"xyes\"; then\n\n\t\t# incompatible-pointer-types requires gcc circa 5.x\n\n\t\tORIG_CFLAGS=$CFLAGS\n\t\tCFLAGS=\"$CFLAGS -Wincompatible-pointer-types -Werror\"\n\t\tAC_MSG_CHECKING(for -Wincompatible-pointer-types option to gcc)\n\t\tAC_TRY_COMPILE([],[\n\t\t], [\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tCFLAGS=\"$ORIG_CFLAGS -Werror=incompatible-pointer-types\"\n\t\t], [\n\t\t\tAC_MSG_RESULT(no)\n\t\t\tCFLAGS=$ORIG_CFLAGS\n\t\t])\n\n\t\tCFLAGS=\"$CFLAGS -Werror=return-type\"\n\tfi\n\n\t# Implicit function declarations are not 64 bit safe\n\t# Do this late, since this causes lots of configure tests to fail\n\tCFLAGS=\"$CFLAGS -Werror-implicit-function-declaration\"\n\t# jay has a lot of implicit declarations\n\tJAY_CFLAGS=\"-Wno-implicit-function-declaration\"\n\n\tORIG_CFLAGS=$CFLAGS\n\tCFLAGS=\"$CFLAGS -Wsometimes-uninitialized -Werror\"\n\tAC_MSG_CHECKING(for -Wsometimes-uninitialized option to gcc)\n\tAC_TRY_COMPILE([],[\n\t], [\n\t\tAC_MSG_RESULT(yes)\n\t\tCFLAGS=\"$ORIG_CFLAGS -Werror=sometimes-uninitialized\"\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t\tCFLAGS=$ORIG_CFLAGS\n\t])\nfi\n\n# zlib/configure checks if this program compiles and if so\n# defines _LARGEFILE64_SOURCE on the compiler command line (not config.h).\n#\nAC_MSG_CHECKING([for large file support])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_SOURCE([\n\t\t#include <sys/types.h>\n\t\toff64_t dummy = 0;\n\t])], [\n\t\tAC_MSG_RESULT(yes)\n\t\t# FIXME The ramifications of _LARGEFILE64_SOURCE are not understood.\n\t\t# ZLIB_CFLAGS=\"$ZLIB_CFLAGS -D_LARGEFILE64_SOURCE=1\"\n\t], [\n\t\tAC_MSG_RESULT(no)\n\t])\n\nAC_SUBST(CFLAGS)\nAC_SUBST(CPPFLAGS)\nAC_SUBST(LDFLAGS)\nAC_SUBST(CCLDFLAGS)\nAC_SUBST(ZLIB_CFLAGS)\n\n# Update all submodules recursively to ensure everything is checked out\n(cd $srcdir && scripts/update_submodules.sh)\n\nAC_MONO_OUTPUT()\n\nif test x$host_win32 = xyes; then\n   # Get rid of 'cyg' prefixes in library names\n   sed -e \"s/\\/cyg\\//\\/\\//\" libtool > libtool.new; mv libtool.new libtool; chmod 755 libtool\n   # libtool seems to inherit -mno-cygwin from our CFLAGS, and uses it to compile its executable\n   # wrapper scripts which use exec(). gcc has no problem compiling+linking this, but the resulting\n   # executable doesn't work...\n   sed -e \"s,-mno-cygwin,,g\" libtool > libtool.new; mv libtool.new libtool; chmod 755 libtool\nfi\n\nif test x$host_darwin = xyes; then\n   # This doesn't seem to be required and it slows down parallel builds\n   sed -e 's,lock_old_archive_extraction=yes,lock_old_archive_extraction=no,g' < libtool > libtool.new && mv libtool.new libtool && chmod +x libtool\nfi\n\n(\n  case $prefix in\n  NONE) prefix=$ac_default_prefix ;;\n  esac\n  case $exec_prefix in\n  NONE) exec_prefix='${prefix}' ;;\n  esac\n\n  #\n  # If we are cross compiling, we don't build in the mcs/ tree.  Let us not clobber\n  # any existing config.make.  This allows people to share the same source tree\n  # with different build directories, one native and one cross\n  #\n  if test x$cross_compiling = xno && test x$enable_mcs_build != xno; then\n\n    test -w $mcs_topdir/build || chmod +w $mcs_topdir/build\n\n    echo \"prefix=$prefix\" > $mcs_topdir/build/config.make\n    echo \"exec_prefix=$exec_prefix\" >> $mcs_topdir/build/config.make\n    echo \"sysconfdir=$sysconfdir\" >> $mcs_topdir/build/config.make\n    echo 'mono_libdir=${exec_prefix}/lib' >> $mcs_topdir/build/config.make\n    echo \"mono_build_root=$mono_build_root\" >> $mcs_topdir/build/config.make\n    echo \"RUNTIME = $mono_build_root/runtime/mono-wrapper\" >> $mcs_topdir/build/config.make\n    echo \"JAY_CFLAGS = $JAY_CFLAGS\" >> $mcs_topdir/build/config.make\n    echo \"VERSION = $VERSION\" >> $mcs_topdir/build/config.make\n\n    case $INSTALL in\n    [[\\\\/$]]* | ?:[[\\\\/]]* ) mcs_INSTALL=$INSTALL ;;\n    *) mcs_INSTALL=$mono_build_root/$INSTALL ;;\n    esac\n\n    echo \"INSTALL = $mcs_INSTALL\" >> $mcs_topdir/build/config.make\n\n    export VERSION\n    [myver=$($AWK 'BEGIN {\n      split (ENVIRON[\"VERSION\"] \".0.0.0\", vsplit, \".\")\n      if(length(vsplit [1]) > 4) {\n        split (substr(ENVIRON[\"VERSION\"], 0, 4) \".\" substr(ENVIRON[\"VERSION\"], 5) \".0.0\", vsplit, \".\")\n      }\n      print vsplit [1] \".\" vsplit [2] \".\" vsplit [3] \".\" vsplit [4]\n    }')]\n\n    echo \"MONO_VERSION = $myver\" >> $mcs_topdir/build/config.make\n    echo \"MONO_CORLIB_VERSION = $MONO_CORLIB_VERSION\" >> $mcs_topdir/build/config.make\n\n    if test x$host_darwin = xyes; then\n      echo \"BUILD_PLATFORM = macos\" >> $mcs_topdir/build/config.make\n      echo \"HOST_PLATFORM ?= macos\" >> $mcs_topdir/build/config.make\n      echo \"XTEST_PLATFORM ?= osx\" >> $mcs_topdir/build/config.make\n    elif test x$host_win32 = xyes; then\n      echo \"BUILD_PLATFORM = win32\" >> $mcs_topdir/build/config.make\n      echo \"HOST_PLATFORM ?= win32\" >> $mcs_topdir/build/config.make\n      echo \"XTEST_PLATFORM ?= windows\" >> $mcs_topdir/build/config.make\n    elif test x$host_linux = xyes; then\n      echo \"BUILD_PLATFORM = linux\" >> $mcs_topdir/build/config.make\n      echo \"HOST_PLATFORM ?= linux\" >> $mcs_topdir/build/config.make\n      echo \"XTEST_PLATFORM ?= linux\" >> $mcs_topdir/build/config.make\n    else\n      echo \"BUILD_PLATFORM = unix\" >> $mcs_topdir/build/config.make\n      echo \"HOST_PLATFORM ?= unix\" >> $mcs_topdir/build/config.make\n      echo \"XTEST_PLATFORM ?= unix\" >> $mcs_topdir/build/config.make\n    fi\n\n    echo \"PLATFORM_AOT_PREFIX = $PLATFORM_AOT_PREFIX\" >> $mcs_topdir/build/config.make\n    if test \"x$PLATFORM_AOT_SUFFIX\" != \"x\"; then\n      echo \"PLATFORM_AOT_SUFFIX = $PLATFORM_AOT_SUFFIX\" >> $mcs_topdir/build/config.make\n    fi\n\n\tif test x$AOT_SUPPORTED = xyes -a x$enable_system_aot = xdefault; then\n\t   enable_system_aot=yes\n\tfi\n\n    if test x$host_win32 = xno -a x$enable_system_aot = xyes; then\n      echo \"ENABLE_AOT = 1\" >> $mcs_topdir/build/config.make\n    fi\n\n    if test x$DISABLE_MCS_DOCS = xyes; then\n      echo \"DISABLE_MCS_DOCS = yes\" >> $mcs_topdir/build/config.make\n    fi\n\n    if test x$has_extension_module != xno; then\n        echo \"EXTENSION_MODULE = 1\" >> $srcdir/$mcsdir/build/config.make\n    fi\n    \n    echo \"DEFAULT_PROFILE = $default_profile\" >> $srcdir/$mcsdir/build/config.make\n    \n    if test \"x$test_bcl_opt\" = \"xyes\"; then    \n      echo \"BCL_OPTIMIZE = 1\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    echo \"STANDALONE_CSC_LOCATION=$CSC_LOCATION\" >> $srcdir/$mcsdir/build/config.make\n    echo \"SERVER_CSC_LOCATION?=$CSC_LOCATION\" >> $srcdir/$mcsdir/build/config.make\n    echo \"VBCS_LOCATION?=$VBCS_LOCATION\" >> $srcdir/$mcsdir/build/config.make\n\n    if test $csc_compiler = mcs; then\n      echo \"MCS_MODE = 1\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    if test \"x$AOT_BUILD_FLAGS\" != \"x\" ; then\n      echo \"AOT_RUN_FLAGS=$AOT_RUN_FLAGS\" >> $srcdir/$mcsdir/build/config.make\n      echo \"AOT_BUILD_ATTRS=$AOT_BUILD_ATTRS\" >> $srcdir/$mcsdir/build/config.make\n\n      if test \"x$internal_llvm\" != \"xno\" && test \"x$enable_llvm_msvc_only\" = \"xno\"; then\n        echo \"AOT_BUILD_FLAGS=$AOT_BUILD_FLAGS,$MONO_LLVM_PATH_OPTION\" >> $srcdir/$mcsdir/build/config.make\n      else\n        echo \"AOT_BUILD_FLAGS=$AOT_BUILD_FLAGS\" >> $srcdir/$mcsdir/build/config.make\n      fi\n    fi\n\n    if test \"x$AOT_MODE\" != \"x\" ; then\n      echo \"AOT_MODE=$AOT_MODE\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    if test \"x$enable_btls\" = \"xyes\"; then\n      echo \"HAVE_BTLS=1\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    if test \"x$mono_native\" = \"xyes\"; then\n      echo \"MONO_NATIVE_SUPPORTED=true\" >> $srcdir/$mcsdir/build/config.make\n    else\n      echo \"MONO_NATIVE_SUPPORTED=false\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    if test x$mono_native_compat = xyes; then\n      echo \"MONO_NATIVE_USING_COMPAT=true\" >> $srcdir/$mcsdir/build/config.make\n    else\n      echo \"MONO_NATIVE_USING_COMPAT=false\" >> $srcdir/$mcsdir/build/config.make\n    fi\n\n    force_enable_compiler_server=no;\n\n    AC_MSG_CHECKING([compiler server])\n    AC_ARG_WITH(compiler-server, [  --with-compiler-server=yes,no,default,force      Enables or disables compiler server],[\n       if test x$withval = xyes; then\n           enable_compiler_server=yes;\n       # force will bypass any automatic disables to allow you to test the compiler server\n       #  in scenarios where it is disabled\n       elif test x$withval = xforce; then\n           enable_compiler_server=yes;\n           force_enable_compiler_server=yes;\n       elif test x$withval = xno; then\n           enable_compiler_server=no;\n       elif test x$withval = xdefault; then\n           enable_compiler_server=yes;\n       else\n           AC_MSG_ERROR([You must supply one of \"yes\", \"no\", \"default\" or \"force\" to the --with-compiler-server option])\n       fi\n    ],[enable_compiler_server=yes])\n\n    AC_MSG_RESULT($enable_compiler_server)\n\n    if test x$enable_compiler_server = xyes; then\n       if test x$force_enable_compiler_server = xyes; then\n           AC_MSG_WARN([forcing compiler server to stay enabled])\n       elif test x$host_darwin = xyes || test x$host_win32 = xyes; then\n           AC_MSG_WARN([compiler server temporarily disabled on darwin and win32])\n           enable_compiler_server=no;\n       elif test x$csc_compiler = xmcs; then\n           AC_MSG_WARN([mcs does not support the compiler server])\n           enable_compiler_server=no;\n       fi\n    fi\n\n    echo \"MONO_NATIVE_PLATFORM_TYPE=$MONO_NATIVE_PLATFORM_TYPE\" >> $srcdir/$mcsdir/build/config.make\n    echo \"MONO_NATIVE_PLATFORM=$MONO_NATIVE_PLATFORM\" >> $srcdir/$mcsdir/build/config.make\n    if test x$enable_compiler_server = xyes; then\n      echo \"ENABLE_COMPILER_SERVER?=1\" >> $srcdir/$mcsdir/build/config.make\n    else\n      echo \"ENABLE_COMPILER_SERVER?=0\" >> $srcdir/$mcsdir/build/config.make\n    fi\n    echo \"COMPILER_SERVER_PIPENAME?=monomake\" >> $srcdir/$mcsdir/build/config.make\n\n\tif test x$enable_msvc_only = xyes; then\n\t\techo \"ENABLE_MSVC_ONLY=1\" >> $srcdir/$mcsdir/build/config.make\n\tfi\n\n  fi\n\n)\n\nlibgdiplus_msg=${libgdiplus_loc:-assumed to be installed}\n\nbtls_platform_string=\nif test x$enable_btls = xyes; then\n\tif test x$btls_android = xyes; then\n\t\tbtls_platform_string=\" (android:$BTLS_PLATFORM)\"\n\telse\n\t\tbtls_platform_string=\" ($BTLS_PLATFORM)\"\n\tfi\nfi\n\nthread_suspend_msg=\nif test x$buildsgen = xyes; then\n\tif test x$enable_cooperative_suspend != xno; then\n\t\tthread_suspend_msg=\"Suspend:       Cooperative\"\n\telif test x$enable_hybrid_suspend != xno; then\n\t\tthread_suspend_msg=\"Suspend:       Hybrid\"\n\telse\n\t\tthread_suspend_msg=\"Suspend:       Preemptive\"\n\tfi\nfi\n\necho \"\n\tmcs source:    $mcsdir\n\tC# Compiler:   $csc_compiler\n\tCompilerServer:$enable_compiler_server\n\n   Engine:\n\tHost:\t       $host\n\tTarget:\t       $target\n\tGC:\t       $gc_msg \n\t$thread_suspend_msg\n\tTLS:           $with_tls\n\tSIGALTSTACK:   $with_sigaltstack\n\tEngine:        $jit_status\n\tBigArrays:     $enable_big_arrays\n\tDTrace:        $enable_dtrace\n\tLLVM Back End: $enable_llvm (built in-tree: $internal_llvm, assertions: $enable_llvm_asserts, msvc only: $enable_llvm_msvc_only)\n\tSpectre:       $spectre_mitigation_status\n\tMono.Native:   $mono_native_text\n\n   Libraries:\n\t.NET 4.x:        $with_profile4_x\n\tXamarin.Android: $with_monodroid\n\tXamarin.iOS:     $with_monotouch\n\tXamarin.WatchOS: $with_monotouch_watch\n\tXamarin.TVOS:    $with_monotouch_tv\n\tXamarin.Mac:     $with_xammac\n\tWindows AOT:     $with_winaot\n\tOrbis:           $with_orbis\n\tUnreal:          $with_unreal\n\tWebAssembly:     $with_wasm\n\tTest profiles:   AOT Full ($with_testing_aot_full), AOT Hybrid ($with_testing_aot_hybrid), AOT Full Interp ($with_testing_aot_full_interp), Windows Full AOT Interp ($with_testing_winaot_interp)\n\tJNI support:     $jdk_headers_found\n\tlibgdiplus:      $libgdiplus_msg\n\tzlib:            $zlib_msg\n\tBTLS:            $enable_btls$btls_platform_string\n\tCGROUP:\t\t $ac_cv_header_linux_cgroupstats_h\n\tjemalloc:        $with_jemalloc (always use: $with_jemalloc_always)\n\tcrash reporting: $crash_reporting (private crashes: $with_crash_privacy)\n\t$disabled\n\"\nif test x$with_static_mono = xno -a \"x$host_win32\" != \"xyes\"; then\n   AC_MSG_WARN([Turning off static Mono is a risk, you might run into unexpected bugs])\nfi\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "ikvm-native",
          "type": "tree",
          "content": null
        },
        {
          "name": "llvm",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "mcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkinstalldirs",
          "type": "blob",
          "size": 1.8134765625,
          "content": "#! /bin/sh\n# mkinstalldirs --- make directory hierarchy\n# Author: Noah Friedman <friedman@prep.ai.mit.edu>\n# Created: 1993-05-16\n# Public domain\n\n# $Id: mkinstalldirs 36980 2004-12-03 01:08:33Z benm $\n\nerrstatus=0\ndirmode=\"\"\n\nusage=\"\\\nUsage: mkinstalldirs [-h] [--help] [-m mode] dir ...\"\n\n# process command line arguments\nwhile test $# -gt 0 ; do\n   case \"${1}\" in\n     -h | --help | --h* )\t\t\t# -h for help\n\techo \"${usage}\" 1>&2; exit 0 ;;\n     -m )\t\t\t\t\t# -m PERM arg\n\tshift\n\ttest $# -eq 0 && { echo \"${usage}\" 1>&2; exit 1; }\n\tdirmode=\"${1}\"\n\tshift ;;\n     -- ) shift; break ;;\t\t\t# stop option processing\n     -* ) echo \"${usage}\" 1>&2; exit 1 ;;\t# unknown option\n     * )  break ;;\t\t\t\t# first non-opt arg\n   esac\ndone\n\nfor file\ndo\n  if test -d \"$file\"; then\n    shift\n  else\n    break\n  fi\ndone\n\ncase $# in\n0) exit 0 ;;\nesac\n\ncase $dirmode in\n'')\n  if mkdir -p -- . 2>/dev/null; then\n    echo \"mkdir -p -- $*\"\n    exec mkdir -p -- \"$@\"\n  fi ;;\n*)\n  if mkdir -m \"$dirmode\" -p -- . 2>/dev/null; then\n    echo \"mkdir -m $dirmode -p -- $*\"\n    exec mkdir -m \"$dirmode\" -p -- \"$@\"\n  fi ;;\nesac\n\nfor file\ndo\n   set fnord `echo \":$file\" | sed -ne 's/^:\\//#/;s/^://;s/\\// /g;s/^#/\\//;p'`\n   shift\n\n   pathcomp=\n   for d\n   do\n     pathcomp=\"$pathcomp$d\"\n     case \"$pathcomp\" in\n       -* ) pathcomp=./$pathcomp ;;\n     esac\n\n     if test ! -d \"$pathcomp\"; then\n\techo \"mkdir $pathcomp\"\n\n\tmkdir \"$pathcomp\" || lasterr=$?\n\n\tif test ! -d \"$pathcomp\"; then\n\t  errstatus=$lasterr\n\telse\n\t  if test ! -z \"$dirmode\"; then\n\t     echo \"chmod $dirmode $pathcomp\"\n\n\t     lasterr=\"\"\n\t     chmod \"$dirmode\" \"$pathcomp\" || lasterr=$?\n\n\t     if test ! -z \"$lasterr\"; then\n\t       errstatus=$lasterr\n\t     fi\n\t  fi\n\tfi\n     fi\n\n     pathcomp=\"$pathcomp/\"\n   done\ndone\n\nexit $errstatus\n\n# Local Variables:\n# mode: shell-script\n# sh-indentation: 3\n# End:\n# mkinstalldirs ends here\n"
        },
        {
          "name": "mono-uninstalled.pc.in",
          "type": "blob",
          "size": 0.2333984375,
          "content": "Name: Mono\nDescription: Mono Runtime\nVersion: @VERSION@\nRequires: glib-2.0 gthread-2.0\nLibs: -L@mono_build_root@/mono/mini/.libs @export_ldflags@ -lmono @libmono_ldflags@\nCflags: -I@abs_top_srcdir@ -I@abs_top_srcdir@/mono @libmono_cflags@\n"
        },
        {
          "name": "mono",
          "type": "tree",
          "content": null
        },
        {
          "name": "msvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "nuget.config",
          "type": "blob",
          "size": 0.380859375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <fallbackPackageFolders>\n    <clear />\n  </fallbackPackageFolders>\n  <packageSources>\n    <clear />\n    <add key=\"dotnet-public\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\" />\n  </packageSources>\n  <disabledPackageSources>\n    <clear />\n  </disabledPackageSources>\n</configuration>\n\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "winconfig.h",
          "type": "blob",
          "size": 6.5322265625,
          "content": "#pragma once\n\n#ifdef _MSC_VER\n\n/* Building Mono runtime under MSVC uses this template for it's config.h since autogen.sh can't */\n/* generate a config.h that is suitable for MSVC builds. The below template will still get */\n/* some dynamic configuration from autogen.sh config.h, if one exists. */\n#include <msvc/msvc-win32-support.h>\n#include <msvc/msvc-disabled-warnings.h>\n\n#ifdef HAVE_BOEHM_GC\n/* Only used when building using Boehm GC and only supported on x86 builds */\n#define DEFAULT_GC_NAME \"Included Boehm (with typed GC)\"\n#endif\n\n/* Some VES is available at runtime */\n#define ENABLE_ILGEN 1\n\n/* Start configure ENABLE_DEFINES picked up from cygconfig.h or other external source, if available */\n/* @ENABLE_DEFINES@ */\n/* End configure ENABLE_DEFINES picked up from cygconfig.h or other external source, if available */\n\n/* Windows MSVC builds defaults to preemptive suspend. Disable ENABLE_HYBRID_SUSPEND defines. */\n#undef ENABLE_HYBRID_SUSPEND\n\n/* No ENABLE_DEFINES below this point */\n\n\n/* Disable runtime state dumping */\n#define DISABLE_CRASH_REPORTING 1\n\n/* String of disabled features */\n#define DISABLED_FEATURES \"none\"\n\n/* Disables the IO portability layer */\n#define DISABLE_PORTABILITY 1\n\n/* Start configure DISABLE_DEFINES picked up from cygconfig.h or other external source, if available */\n/* @DISABLE_DEFINES@ */\n/* End configure DISABLE_DEFINES picked up from cygconfig.h or other external source, if available */\n\n/* No DISABLE_DEFINES below this point */\n\n/* Have access */\n#define HAVE_ACCESS 1\n\n/* Define to 1 if you have the `system' function. */\n#if HAVE_WINAPI_FAMILY_SUPPORT(HAVE_CLASSIC_WINAPI_SUPPORT)\n#define HAVE_SYSTEM 1\n#endif\n\n/* Define to 1 if you have the <complex.h> header file. */\n#define HAVE_COMPLEX_H 1\n\n#if defined(HAVE_SGEN_GC) && !defined(HAVE_CONC_GC_AS_DEFAULT)\n/* Defaults to concurrent GC */\n#define HAVE_CONC_GC_AS_DEFAULT 1\n#endif\n\n/* Have /dev/random */\n#define HAVE_CRYPT_RNG 1\n\n/* Define to 1 if you have the `getaddrinfo' function. */\n#define HAVE_GETADDRINFO 1\n\n/* Define to 1 if you have the `getnameinfo' function. */\n#define HAVE_GETNAMEINFO 1\n\n/* Define to 1 if you have the `getprotobyname' function. */\n#define HAVE_GETPROTOBYNAME 1\n\n/* Have inet_ntop */\n#define HAVE_INET_NTOP 1\n\n/* Define to 1 if you have the `inet_pton' function. */\n#define HAVE_INET_PTON 1\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#define HAVE_INTTYPES_H 1\n\n/* Define to 1 if you have the <memory.h> header file. */\n#define HAVE_MEMORY_H 1\n\n#if defined(HAVE_SGEN_GC) && !defined(HAVE_MOVING_COLLECTOR)\n/* Moving collector */\n#define HAVE_MOVING_COLLECTOR 1\n#endif\n\n/* Define to 1 if you have the `signal' function. */\n#define HAVE_SIGNAL 1\n\n /* Define to 1 if you have the <signal.h> header file. */\n#define HAVE_SIGNAL_H 1\n\n /* Define to 1 if you have the <stdint.h> header file. */\n#define HAVE_STDINT_H 1\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#define HAVE_STDLIB_H 1\n\n/* Define to 1 if you have the <strings.h> header file. */\n#define HAVE_STRINGS_H 1\n\n/* Define to 1 if you have the <string.h> header file. */\n#define HAVE_STRING_H 1\n\n/* Define to 1 if you have the `strtok_r' function. */\n#define HAVE_STRTOK_R 1\n\n/* Have struct ip_mreq */\n#define HAVE_STRUCT_IP_MREQ 1\n\n/* Define to 1 if the system has the type `struct sockaddr_in6'. */\n#define HAVE_STRUCT_SOCKADDR_IN6 1\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#define HAVE_SYS_STAT_H 1\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#define HAVE_SYS_TYPES_H 1\n\n/* Define to 1 if you have the <sys/utime.h> header file. */\n#define HAVE_SYS_UTIME_H 1\n\n/* Define to 1 if you have the <wchar.h> header file. */\n#define HAVE_WCHAR_H 1\n\n/* Define to 1 if you have the <winternl.h> header file. */\n#define HAVE_WINTERNL_H 1\n\n#if defined(HAVE_SGEN_GC) && !defined(HAVE_WRITE_BARRIERS)\n#define HAVE_WRITE_BARRIERS\n#endif\n\n/* Start configure HAVE_DEFINES picked up from cygconfig.h or other external source, if available */\n/* @HAVE_DEFINES@ */\n/* End configure HAVE_DEFINES picked up from cygconfig.h or other external source, if available */\n\n/* No HAVE_DEFINES below this point */\n\n/* This platform does not support symlinks */\n#define HOST_NO_SYMLINKS 1\n\n/* Host Platform is Win32 */\n#define HOST_WIN32 1\n\n/* The architecture this is running on */\n#if defined(_M_IA64)\n#define MONO_ARCHITECTURE \"ia64\"\n#elif defined(_M_AMD64)\n#define MONO_ARCHITECTURE \"amd64\"\n#elif defined(_M_IX86)\n#define MONO_ARCHITECTURE \"x86\"\n#else\n#error Unknown architecture\n#endif\n\n/* Version of the corlib-runtime interface */\n#define MONO_CORLIB_VERSION \"#MONO_CORLIB_VERSION#\"\n\n/* Have __thread keyword */\n#define MONO_KEYWORD_THREAD __declspec (thread)\n\n/* Length of zero length arrays */\n#define MONO_ZERO_LEN_ARRAY 1\n\n/* Name of /dev/random */\n#define NAME_DEV_RANDOM \"\"\n\n/* Name of package */\n#define PACKAGE \"mono\"\n\n/* Define to the address where bug reports for this package should be sent. */\n#define PACKAGE_BUGREPORT \"https://github.com/mono/mono/issues/new\"\n\n/* Define to the full name of this package. */\n#define PACKAGE_NAME \"mono\"\n\n/* Define to the full name and version of this package. */\n#define PACKAGE_STRING \"mono #MONO_VERSION#\"\n\n/* Define to the one symbol short name of this package. */\n#define PACKAGE_TARNAME \"mono\"\n\n/* Define to the home page for this package. */\n#define PACKAGE_URL \"\"\n\n/* Define to the version of this package. */\n#define PACKAGE_VERSION \"#MONO_VERSION#\"\n\n/* The size of `int', as computed by sizeof. */\n#define SIZEOF_INT 4\n\n/* The size of `long', as computed by sizeof. */\n#define SIZEOF_LONG 4\n\n/* The size of `long long', as computed by sizeof. */\n#define SIZEOF_LONG_LONG 8\n\n/* size of target machine integer registers */\n#ifdef _WIN64\n#define SIZEOF_REGISTER 8\n#else\n#define SIZEOF_REGISTER 4\n#endif\n\n/* The size of `void *', as computed by sizeof. */\n#ifdef _WIN64\n#define SIZEOF_VOID_P 8\n#else\n#define SIZEOF_VOID_P 4\n#endif\n\n/* Define to 1 if you have the ANSI C header files. */\n#define STDC_HEADERS 1\n\n#ifdef _WIN64\n#define TARGET_AMD64 1\n#define HOST_AMD64 1\n#else\n#define TARGET_X86 1\n#define HOST_X86 1\n#endif\n\n/* byte order of target */\n#define TARGET_BYTE_ORDER G_BYTE_ORDER\n\n/* wordsize of target */\n#define TARGET_SIZEOF_VOID_P SIZEOF_VOID_P\n\n/* Platform is Win32 */\n#define TARGET_WIN32 1\n\n/* Version number of package */\n#define VERSION \"#MONO_VERSION#\"\n\n#else\n\n/* Not building under MSVC, use autogen.sh generated config.h */\n#include \"cygconfig.h\"\n\n#endif\n\n#if defined(ENABLE_LLVM) && defined(HOST_WIN32) && defined(TARGET_WIN32) && (!defined(TARGET_AMD64) || !defined(_MSC_VER))\n#error LLVM for host=Windows and target=Windows is only supported on x64 MSVC build.\n#endif\n"
        }
      ]
    }
  ]
}