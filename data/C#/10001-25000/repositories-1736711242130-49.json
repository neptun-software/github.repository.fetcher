{
  "metadata": {
    "timestamp": 1736711242130,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JamesNK/Newtonsoft.Json",
      "stars": 10899,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.3759765625,
          "content": "version: '{build}'\nbranches:\n  only:\n  - master\n  - /^v\\d+(?:\\.\\d+)?$/\n  - /[\\b_]validate\\b/\nskip_tags: true\nnuget:\n  disable_publish_on_pr: true\nimage: Visual Studio 2017\nconfiguration: Release\nenvironment:\n  VisualStudioVersion: 15.0\ninit:\n  git config --global core.autocrlf true\nbuild_script:\n- ps: Build\\runbuild.ps1\nartifacts:\n- path: Working\\NuGet\\*.nupkg\n  name: NuGet Package\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7529296875,
          "content": "*.doc  diff=astextplain\n*.DOC\tdiff=astextplain\n*.docx\tdiff=astextplain\n*.DOCX\tdiff=astextplain\n*.dot\tdiff=astextplain\n*.DOT\tdiff=astextplain\n*.pdf\tdiff=astextplain\n*.PDF\tdiff=astextplain\n*.rtf\tdiff=astextplain\n*.RTF\tdiff=astextplain\n\n*.jpg  \tbinary\n*.png \tbinary\n*.gif \tbinary\n*.bson\tbinary\n\n*.cs text diff=csharp \n*.vb text\n*.c text\n*.cpp text\n*.cxx text\n*.h text\n*.hxx text\n*.py text\n*.rb text\n*.java text\n*.html text\n*.htm text\n*.css text\n*.scss text\n*.sass text\n*.less text\n*.js text\n*.lisp text\n*.clj text\n*.sql text\n*.php text\n*.lua text\n*.m text\n*.asm text\n*.erl text\n*.fs text\n*.fsx text\n*.hs text\n*.ps1 text\n*.psm1 text\n\n*.csproj text merge=union \n*.vbproj text merge=union \n*.fsproj text merge=union \n*.dbproj text merge=union \n*.sln text eol=crlf merge=union \n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2509765625,
          "content": "[Bb]in/\n[Oo]bj/\n[Ww]orking*/\nBuild/Temp/\nDoc/doc.shfbproj_*\nTestResults/\nAppPackages/\nBenchmarkDotNet.Artifacts/\n*.suo\n*.user\n*.userprefs\n_ReSharper.*\n*.ReSharper.user\n*.resharper.user\n.vs/\n.vscode/\n*.lock.json\n*.nuget.props\n*.nuget.targets\n*.orig\n.DS_Store"
        },
        {
          "name": "Build",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.474609375,
          "content": "# How to contribute\n\nPlease read these guidelines before contributing to Json.NET:\n\n - [Question or Problem?](#question)\n - [Issues and Bugs](#issue)\n - [Feature Requests](#feature)\n - [Submitting a Pull Request](#pullrequest)\n - [Contributor License Agreement](#cla)\n\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\nIf you have questions about how to use Json.NET, please read the\n[Json.NET documentation][documentation] or ask on [Stack Overflow][stackoverflow]. There are\nthousands of Json.NET questions on Stack Overflow with the [json.net][stackoverflow] tag.\n\nGitHub issues are only for [reporting bugs](#issue) and [feature requests](#feature), not\nquestions or help.\n\n\n## <a name=\"issue\"></a> Found an Issue?\n\nIf you find a bug in the source code or a mistake in the documentation, you can help by\nsubmitting an issue to the [GitHub Repository][github]. Even better you can submit a Pull Request\nwith a fix.\n\nWhen submitting an issue please include the following information:\n\n- A description of the issue\n- The JSON, classes, and Json.NET code related to the issue\n- The exception message and stacktrace if an error was thrown\n- If possible, please include code that reproduces the issue. [DropBox][dropbox] or GitHub's\n[Gist][gist] can be used to share large code samples, or you could\n[submit a pull request](#pullrequest) with the issue reproduced in a new test.\n\nThe more information you include about the issue, the more likely it is to be fixed!\n\n\n## <a name=\"feature\"></a> Want a Feature?\n\nYou can request a new feature by submitting an issue to the [GitHub Repository][github]. Before\nrequesting a feature consider the following:\n\n- Json.NET has many extensibility points, it is possible you can implement your feature today without\nmodifying Json.NET\n- Stability is important. Json.NET is used by thousands of other libraries and features that require\nlarge breaking changes are unlikely to be accepted\n\n\n## <a name=\"pullrequest\"></a> Submitting a Pull Request\n\nWhen submitting a pull request to the [GitHub Repository][github] make sure to do the following:\n\n- Check that new and updated code follows Json.NET's existing code formatting and naming standard\n- Run Json.NET's unit tests to ensure no existing functionality has been affected\n- Write new unit tests to test your changes. All features and fixed bugs must have tests to verify\nthey work\n\nRead [GitHub Help][pullrequesthelp] for more details about creating pull requests.\n\n\n## <a name=\"cla\"></a> Contributor License Agreement\n\nBy contributing your code to Json.NET you grant James Newton-King a non-exclusive, irrevocable, worldwide,\nroyalty-free, sublicenseable, transferable license under all of Your relevant intellectual property rights\n(including copyright, patent, and any other rights), to use, copy, prepare derivative works of, distribute and\npublicly perform and display the Contributions on any licensing terms, including without limitation:\n(a) open source licenses like the MIT license; and (b) binary, proprietary, or commercial licenses. Except for the\nlicenses granted herein, You reserve all right, title, and interest in and to the Contribution.\n\nYou confirm that you are able to grant us these rights. You represent that You are legally entitled to grant the\nabove license. If Your employer has rights to intellectual property that You create, You represent that You have\nreceived permission to make the Contributions on behalf of that employer, or that Your employer has waived such\nrights for the Contributions.\n\nYou represent that the Contributions are Your original works of authorship, and to Your knowledge, no other person\nclaims, or has the right to claim, any right in any invention or patent related to the Contributions. You also\nrepresent that You are not legally obligated, whether by entering into an agreement or otherwise, in any way that\nconflicts with the terms of this license.\n\nJames Newton-King acknowledges that, except as explicitly described in this Agreement, any Contribution which\nyou provide is on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED,\nINCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS\nFOR A PARTICULAR PURPOSE.\n\n\n[github]: https://github.com/JamesNK/Newtonsoft.Json\n[documentation]: https://www.newtonsoft.com/json/help\n[stackoverflow]: https://stackoverflow.com/questions/tagged/json.net\n[dropbox]: https://www.dropbox.com\n[gist]: https://gist.github.com\n[pullrequesthelp]: https://help.github.com/articles/using-pull-requests\n"
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.7568359375,
          "content": "<!--\n\nIf you have questions about how to use Json.NET, please read the Json.NET documentation or ask on Stack Overflow.\n\nhttps://www.newtonsoft.com/json/help\nhttps://stackoverflow.com/questions/tagged/json.net\n\nThere are thousands of Json.NET questions on Stack Overflow with the json.net tag.\n\nGitHub issues are only for reporting bugs, not questions or help.\n\n-->\n\n### Source/destination types\n\n```csharp\n// Put the types you are serializing or deserializing here\n```\n\n### Source/destination JSON\n\n```javascript\n{\"message\":\"Place your serialized or deserialized JSON here\"}\n```\n\n### Expected behavior\n\n<!-- What did you expect to happen? -->\n\n### Actual behavior\n\n<!-- What happened instead? -->\n\n### Steps to reproduce\n\n```csharp\n// Your calls to Newtonsoft.Json here\n```\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.05859375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2007 James Newton-King\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.7431640625,
          "content": "# ![Logo](Doc/icons/logo.jpg) Json.NET\n\n[![NuGet version (Newtonsoft.Json)](https://img.shields.io/nuget/v/Newtonsoft.Json.svg?style=flat-square)](https://www.nuget.org/packages/Newtonsoft.Json/)\n[![Build status](https://dev.azure.com/jamesnk/Public/_apis/build/status/JamesNK.Newtonsoft.Json?branchName=master)](https://dev.azure.com/jamesnk/Public/_build/latest?definitionId=8)\n\n- [Homepage](https://www.newtonsoft.com/json)\n- [Documentation](https://www.newtonsoft.com/json/help)\n- [NuGet Package](https://www.nuget.org/packages/Newtonsoft.Json)\n- [Release Notes](https://github.com/JamesNK/Newtonsoft.Json/releases)\n- [Contributing Guidelines](CONTRIBUTING.md)\n- [License](LICENSE.md)\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/json.net)\n"
        },
        {
          "name": "Src",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 3.0634765625,
          "content": "trigger:\n- master\n- release/*\n\npool:\n  vmImage: 'windows-2022'\n\nsteps:\n- task: UseDotNet@2\n  inputs:\n    version: '8.0.x'\n\n- task: UseDotNet@2\n  inputs:\n    version: '6.0.x'\n    packageType: runtime\n\n- task: UseDotNet@2\n  inputs:\n    version: '2.1.x'\n    packageType: runtime\n\n- task: UseDotNet@2\n  inputs:\n    version: '3.1.x'\n    packageType: runtime\n\n- task: UseDotNet@2\n  inputs:\n    version: '5.0.x'\n    packageType: runtime\n\n- powershell: |\n    dotnet --info\n  displayName: 'Dotnet installs'\n\n- powershell: |\n    $basePath = resolve-path .\n    $keyPath = \"$basePath\\key.snk\"\n    $keyData = [System.Convert]::FromBase64String($Env:KeyData)\n    [System.IO.File]::WriteAllBytes($keyPath, $keyData)\n  env:\n    KeyData: $(newtonsoft.keyData)\n  displayName: 'Prepare signing key'\n  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))\n\n- powershell: |\n    $basePath = resolve-path .\n    $keyPath = \"$basePath\\key.snk\"\n    $sign = test-path $keyPath\n    write-host \"Sign assemblies $sign\" -fore white\n    $version = Get-Content .\\Build\\version.json | Out-String | ConvertFrom-Json\n    $buildNumber = [int]$Env:BuildId\n    write-host \"Build number $buildNumber\" -fore white\n    $nugetPrerelease = if ($Env:SourceBranch.StartsWith(\"refs/heads/release/\")) { $version.Prerelease } else { \"build$($buildNumber.ToString(\"D6\"))\" }\n    write-host \"Prerelease $nugetPrerelease\" -fore white\n    $assemblyVersion = if ($version.Assembly) { $version.Assembly } else { \"$($version.Major).0.0.0\" }\n    write-host \"Assembly $assemblyVersion\" -fore white\n    .\\Build\\runbuild.ps1 -properties @{\"majorVersion\"=\"$($version.Major).0\"; \"majorWithReleaseVersion\"=\"$($version.Major).0.$($version.Release)\"; \"nugetPrerelease\"=$nugetPrerelease; \"assemblyVersion\"=$assemblyVersion; \"zipFileName\"=\"Json$($version.Major)0r$($version.Release).zip\"; \"signAssemblies\"=$sign; \"signKeyPath\"=$keyPath; \"treatWarningsAsErrors\"=$true; \"buildNuGet\"=$true; \"ensureNetCliSdk\"=$false}\n  env:\n    BuildId: $(Build.BuildId)\n    SourceBranch: $(Build.SourceBranch)\n  displayName: 'Run build'\n\n- task: PowerShell@2\n  inputs:\n    filePath: .\\Build\\Sign-Package.ps1\n  env:\n    SignClientUser: $(newtonsoft.signClientUser)\n    SignClientSecret: $(newtonsoft.signClientSecret)\n    ArtifactDirectory: .\\Working\n  displayName: 'Authenticode sign packages'\n  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['newtonsoft.signClientUser'], '')), not(eq(variables['newtonsoft.signClientSecret'], '')))\n\n- task: PublishTestResults@2\n  inputs:\n    testRunner: 'NUnit'\n    testResultsFiles: '**/Working/*.xml'\n  displayName: 'Publish NUnit results'\n  condition: succeededOrFailed()\n\n- task: PublishTestResults@2\n  inputs:\n    testRunner: 'VSTest'\n    testResultsFiles: '**/Working/*.trx'\n  displayName: 'Publish dotnet test results'\n  condition: succeededOrFailed()\n\n- task: PublishBuildArtifacts@1\n  inputs:\n    pathtoPublish: .\\Working\n    artifactName: artifacts\n    parallel: true\n    parallelCount: 8\n  displayName: 'Publish artifacts'\n  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))"
        }
      ]
    }
  ]
}