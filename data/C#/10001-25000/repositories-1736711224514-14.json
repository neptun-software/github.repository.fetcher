{
  "metadata": {
    "timestamp": 1736711224514,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Unity-Technologies/ml-agents",
      "stars": 17442,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.93359375,
          "content": "; see http://editorconfig.org/ for docs on this file\n\nroot = true\n\n[*]\nignore_if_in_header = This code was generated by a tool|<auto-generated>\nindent_style = space\nindent_size = 4\n; uncomment to help with sharing files across os's (i.e. network share or through local vm)\n#end_of_line = lf\n; avoid a bom, which causes endless problems with naive text tooling\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n; keeping auto-format enabled helps avoid merge hell for projects without CI-based format validation\n#disable_auto_format = true\n\n[*.cs]\n; uncomment to enable full formatting of c# files\nformatters = generic, uncrustify\n\n[*.asmdef]\nscrape_api = true\n\n[**/Tests/**.asmdef]\nscrape_api = false\n\n[*.Tests.asmdef]\nscrape_api = false\n\n[*.md]\nindent_size = 2\n; trailing whitespace is unfortunately significant in markdown\ntrim_trailing_whitespace = false\n; uncomment to enable basic formatting of markdown files\n#formatters = generic\n\n[{Makefile,makefile}]\n; tab characters are part of the Makefile format\nindent_style = tab\n\n[*.asmdef]\nindent_size = 4\n\n[*.json]\nindent_size = 2\n\n[*.{vcproj,bat,cmd,xaml,tt,t4,ttinclude}]\nend_of_line = crlf\n\n; this VS-specific stuff is based on experiments to see how VS will modify a file after it has been manually edited.\n; the settings are meant to closely match what VS does to minimize unnecessary diffs.\n[*.{vcxproj,vcxproj.filters}]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n; must be broken out because of 51-char bug (https://github.com/editorconfig/editorconfig-visualstudio/issues/21)\n[*.{csproj,pyproj,props,targets}]\nindent_style = space\nindent_size = 2\nend_of_line = crlf\ncharset = utf-8-bom\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n[*.{sln,sln.template}]\nindent_style = tab\nindent_size = 4\nend_of_line = crlf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1298828125,
          "content": "*.asset binary\n*.unity binary\n*.prefab binary\n*.meta binary\n*/CommunicatorObjects/* binary\n*/communicator_objects/* binary\n*.md text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.244140625,
          "content": "# Output Artifacts (Legacy)\n/models\n/summaries\n# Output Artifacts\n/results\n# Output Builds\n/Builds\n\n# Training environments\n/envs\n\n# Environemnt logfile\n*Project.log\n\n# Custom settings asset\n*.settings.asset*\n\n# Visual Studio 2015 cache directory\n/Project/.vs/\n\n# Autogenerated VS/MD/Consulo solution and project files\n/com.unity.ml-agentsExportedObj/\n/com.unity.ml-agents.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n\n# Unity3D generated meta files\n*.pidb.meta\n\n# Unity3D Generated File On Crash Reports\n/com.unity.ml-agents/sysinfo.txt\n\n# Builds\n*.apk\n*.unitypackage\n*.app\n*.exe\n*.x86_64\n*.x86\n\n# Plugins\n/com.unity.ml-agents/VideoRecorder*\n\n# Generated doc folders\n/docs/html\n\n# Mac hidden files\n*.DS_Store\n*/.ipynb_checkpoints\n*/.idea\n*.pyc\n*.idea/misc.xml\n*.idea/modules.xml\n*.idea/\n*.iml\n*.cache\n*/build/\n*/dist/\n*.egg-info*\n*.eggs*\n*.gitignore.swp\n\n# VSCode hidden files\n*.vscode/\n\n.DS_Store\n.ipynb_checkpoints\n\n# pytest cache\n*.pytest_cache/\n\n# Ignore compiled protobuf files.\n*Grpc.Tools*\n\n# Ignore PyPi build files.\ndist/\nbuild/\n\n# Python virtual environment\nvenv/\n.mypy_cache/\n\n# Code coverage report\n.coverage\ncoverage.xml\n/htmlcov/\n\n**/UserSettings/*\n\n# yamato-parser temporary output files:\n.yamato/unfolded/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 4.3857421875,
          "content": "repos:\n-   repo: https://github.com/python/black\n    rev: 22.3.0\n    hooks:\n    -   id: black\n        exclude: >\n            (?x)^(\n                .*_pb2.py|\n                .*_pb2.pyi|\n                .*_pb2_grpc.py\n            )$\n\n-   repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v0.991\n    hooks:\n    -   id: mypy\n        name: mypy-ml-agents\n        files: \"ml-agents/.*\"\n        args: [--ignore-missing-imports, --disallow-incomplete-defs, --no-strict-optional]\n        additional_dependencies: [types-PyYAML, types-attrs, types-protobuf, types-setuptools, types-filelock]\n    -   id: mypy\n        name: mypy-ml-agents-envs\n        files: \"ml-agents-envs/.*\"\n        # Exclude protobuf files and don't follow them when imported\n        exclude: \".*_pb2.py\"\n        args: [--ignore-missing-imports, --disallow-incomplete-defs, --no-strict-optional]\n        additional_dependencies: [types-PyYAML, types-attrs, types-protobuf, types-setuptools, types-filelock]\n-   repo: https://github.com/PyCQA/flake8\n    rev: 3.9.2\n    hooks:\n    -   id: flake8\n        exclude: >\n            (?x)^(\n                .*_pb2.py|\n                .*_pb2_grpc.py\n            )$\n        # flake8-tidy-imports is used for banned-modules, not actually tidying\n        additional_dependencies: [flake8-comprehensions==3.2.2, flake8-tidy-imports==4.1.0, flake8-bugbear==20.1.4]\n\n-   repo: https://github.com/asottile/pyupgrade\n    rev: v2.31.0\n    hooks:\n    -   id: pyupgrade\n        args: [--py3-plus, --py36-plus]\n        exclude: >\n            (?x)^(\n                .*_pb2.py|\n                .*_pb2_grpc.py\n            )$\n\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.1.0\n    hooks:\n    -   id: mixed-line-ending\n        exclude: >\n            (?x)^(\n                .*cs.meta|\n                .*.css|\n                .*.meta\n            )$\n        args: [--fix=lf]\n\n    -   id: trailing-whitespace\n        name: trailing-whitespace-markdown\n        types: [markdown]\n    -   id: check-merge-conflict\n        args: [--assume-in-merge]\n    -   id: check-yaml\n        # Won't handle the templating in yamato\n        exclude: \\.yamato/.*\n\n-   repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.9.0\n    hooks:\n    -   id: python-check-mock-methods\n\n- repo: https://github.com/mattlqx/pre-commit-search-and-replace\n  rev: v1.0.5\n  hooks:\n  - id: search-and-replace\n    types: [markdown]\n    exclude: \".*localized.*\"\n\n#- repo: https://github.com/dotnet/format\n#  rev: v5.1.225507\n#  hooks:\n#  - id: dotnet-format\n#    entry: dotnet-format whitespace\n#    args: [--folder, --include]\n\n# \"Local\" hooks, see https://pre-commit.com/#repository-local-hooks\n-   repo: local\n    hooks:\n    -   id: dotnet-format\n        name: dotnet-format\n        language: system\n        entry: dotnet format whitespace --folder --include\n        types_or: [\"c#\"]\n    -   id: markdown-link-check\n        name: markdown-link-check\n        entry: utils/run_markdown_link_check.py\n        language: script\n        types: [markdown]\n        # Don't check localized files since their target might not be localized.\n        exclude: \".*localized.*\"\n        # Only run manually, e.g. pre-commit run --hook-stage manual markdown-link-check\n        stages: [manual]\n    -   id: markdown-link-check-full\n        name: markdown-link-check-full\n        entry: utils/run_markdown_link_check.py\n        language: script\n        types: [markdown]\n        # Don't check localized files since their target might not be localized.\n        exclude: \".*localized.*\"\n        # Only run manually, e.g. pre-commit run --hook-stage manual markdown-link-check-full\n        stages: [manual]\n        args: [--check-remote]\n    -   id: validate-versions\n        name: validate library versions\n        language: script\n        entry: utils/validate_versions.py\n        files: \".*/__init__.py\"\n    -   id: validate-init-py\n        name: validate __init__.py files\n        language: script\n        entry: utils/validate_inits.py\n        types: [python]\n    -   id: validate-release-links-py\n        name: validate release links\n        language: script\n        entry: utils/validate_release_links.py\n        require_serial: true\n    -   id: generate-markdown-docs\n        name: generate markdown docs\n        language: python\n        entry: ./utils/generate_markdown_docs.py --package_dirs ml-agents-envs ml-agents\n        pass_filenames: false\n        additional_dependencies: [pyyaml==5.3, pydoc-markdown==3.10.1]\n"
        },
        {
          "name": ".pre-commit-search-and-replace.yaml",
          "type": "blob",
          "size": 0.240234375,
          "content": "- description: Replace \"ML agents toolkit\", \"ML-Agents toolkit\" etc\n  search: /ML[ -]Agents toolkit/\n  replacement: ML-Agents Toolkit\n  insensitive: true\n- description: Replace \"the the\"\n  search: /the the/\n  replacement: the\n  insensitive: true\n"
        },
        {
          "name": ".yamato",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# see https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners for more information\n* @unity/behavior-authoring\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1162109375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at ml-agents@unity3d.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct/\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "DevProject",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.2412109375,
          "content": "# From https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md\nFROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\n\nRUN yes | unminimize\n\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-xenial main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN wget https://packages.cloud.google.com/apt/doc/apt-key.gpg && apt-key add apt-key.gpg\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends wget curl tmux vim git gdebi-core \\\n  build-essential python3-pip unzip google-cloud-sdk htop mesa-utils xorg-dev xorg \\\n  libglvnd-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev xvfb && \\\n  wget http://security.ubuntu.com/ubuntu/pool/main/libx/libxfont/libxfont1_1.5.1-1ubuntu0.16.04.4_amd64.deb && \\\n  yes | gdebi libxfont1_1.5.1-1ubuntu0.16.04.4_amd64.deb\nRUN python3 -m pip install --upgrade pip\nRUN pip install setuptools==41.0.0\n\nENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\n\n#checkout ml-agents for SHA\nRUN mkdir /ml-agents\nWORKDIR /ml-agents\nARG SHA\nRUN git init\nRUN git remote add origin https://github.com/Unity-Technologies/ml-agents.git\nRUN git fetch --depth 1 origin $SHA\nRUN git checkout FETCH_HEAD\nRUN pip install -e /ml-agents/ml-agents-envs\nRUN pip install -e /ml-agents/ml-agents\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.55859375,
          "content": "ML Agents copyright © 2017 Unity Technologies\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "PerformanceProject",
          "type": "tree",
          "content": null
        },
        {
          "name": "Project",
          "type": "tree",
          "content": null
        },
        {
          "name": "SURVEY.md",
          "type": "blob",
          "size": 0.361328125,
          "content": "# Unity ML-Agents Toolkit Survey\n\nYour opinion matters a great deal to us. Only by hearing your thoughts on the\nUnity ML-Agents Toolkit can we continue to improve and grow. Please take a few\nminutes to let us know about it. Please email us at [ml-agents@unity3d.com](mailto:ml-agents@unity3d.com).\n\n<!-- [Fill out the survey](https://goo.gl/forms/qFMYSYr5TlINvG6f1) -->\n"
        },
        {
          "name": "Third Party Notices.md",
          "type": "blob",
          "size": 7.5419921875,
          "content": "This package contains third-party software components governed by the license(s) indicated below:\n ---------\n\n Component Name: System.Buffers.dll\n\n License Type: MIT\n\nhttps://www.nuget.org/packages/System.Buffers/\n\n The MIT License (MIT)\n\n Copyright (c) .NET Foundation and Contributors\n\n All rights reserved.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n\n ---------\n\nComponent Name: System.Numerics.Vectors.dll\n\nLicense Type: MIT\n\nhttps://www.nuget.org/packages/System.Numerics.Vectors/\n\nThe MIT License (MIT)\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n ---------\n\nComponent Name: System.Runtime.CompilerServices.Unsafe\n\nLicense Type: MIT\n\nhttps://www.nuget.org/packages/System.Runtime.CompilerServices.Unsafe\n\nThe MIT License (MIT)\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n ---------\n\nComponent Name: System.Memory.dll\n\nLicense Type: MIT\n\nhttps://www.nuget.org/packages/System.Memory/\n\nThe MIT License (MIT)\n\nCopyright (c) .NET Foundation and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n ---------\n\nComponent Name: System.IO.Abstractions\n\nLicense Type: MIT\n\nhttps://github.com/TestableIO/System.IO.Abstractions\n\nThe MIT License (MIT)\n\nCopyright (c) Tatham Oddie and Contributors\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n ---------\n\nComponent Name: System.Interactive.Async.dll\n\nLicense Type: Apache-2.0\n\nhttps://www.nuget.org/packages/System.Interactive.Async/\n\nCopyright (c) .NET Foundation and Contributors\nAll Rights Reserved\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions\nand limitations under the License.\n\n ---------\n\nComponent Name: Grpc\n\nLicense Type: Apache-2.0\n\nhttps://github.com/grpc/grpc\n\nCopyright 2015-2024 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "catalog-info.yaml",
          "type": "blob",
          "size": 0.5625,
          "content": "# For more information about the available options please visit: http://go/backstage (VPN required)\napiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  annotations:\n    github.com/project-slug: unity/com.unity.ml-agents\n  name: com.unity.ml-agents\n  description: \"Unity ML-Agents Package\"\n  labels:\n    costcenter: \"5160\"\n  tags:\n    - planned-public\n    - enterprise\n  links:\n    - url: https://unity.slack.com/messages/C8FECS6L9/\n      title: \"#devs-ml-agents\"\n      icon: chat\nspec:\n  type: unity-package\n  lifecycle: production\n  owner: unity/behavior-authoring\n"
        },
        {
          "name": "colab",
          "type": "tree",
          "content": null
        },
        {
          "name": "colab_requirements.txt",
          "type": "blob",
          "size": 0.0185546875,
          "content": "matplotlib\njupyter\n"
        },
        {
          "name": "com.unity.ml-agents.extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "com.unity.ml-agents",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 2.8046875,
          "content": "\"\"\"\nThis module provides the 'base_port' pytest fixture for mlagents tests.\n\nThis is useful because each mlagents environment requires a unique port to communicate over and will fail on collisions.\nNormally this would prevent tests from being run in parallel but with the help of this fixture we can guarantee every\ntest gets the ports it needs.\n\nSee the base_port function for usage details.\n\"\"\"\nimport tempfile\nfrom pathlib import Path\n\nimport pytest\nfrom filelock import FileLock\n\n# TODO: Use this in all ml-agents tests so they can all run in parallel.\nimport mlagents.plugins.trainer_type\n\n_BASE_PORT = 6005\n\n\n# Hook for xdist\n# https://github.com/ohmu/pytest-xdist/blob/master/xdist/newhooks.py\ndef pytest_testnodeready():\n    PortAllocator().setup_once_per_node()\n\n\nclass PortAllocator:\n    \"\"\"\n    WARNING: Should only be used within this file.\n    Handles handing out unique ports to tests that need ports to test.\n    Shares state between parallel tests on the same node via a text file and lockfile.\n    Should only be used through the base_port test fixture.\n    \"\"\"\n\n    def __init__(self):\n        self._port_alloc_file_path: Path = (\n            Path(tempfile.gettempdir()) / \"next_mla_test_port.txt\"\n        )\n        self._port_alloc_lock_path: Path = self._port_alloc_file_path.with_suffix(\n            \".lock\"\n        )\n        self.lock = FileLock(str(self._port_alloc_lock_path))\n\n    def reserve_n_ports(self, n: int) -> int:\n        with self.lock:\n            if self._port_alloc_file_path.is_file():\n                base_port = int(self._port_alloc_file_path.read_text())\n            else:\n                base_port = 6005\n            self._port_alloc_file_path.write_text(str(base_port + n))\n        return base_port\n\n    def setup_once_per_node(self) -> None:\n        \"\"\"\n        Clean up state files from previous runs, should only be called once per node.\n        Intended to only be called via xdist hooks.\n        \"\"\"\n        if self._port_alloc_lock_path.exists():\n            self._port_alloc_lock_path.unlink(missing_ok=True)\n        if self._port_alloc_file_path.exists():\n            self._port_alloc_file_path.unlink(missing_ok=True)\n\n\n@pytest.fixture\ndef base_port(n_ports: int) -> int:\n    \"\"\"\n    Reserve a range of ports for testing (allows parallel testing even with envs).\n    Usage:\n        @pytest.mark.parametrize(\"n_ports\", [2])\n        def test_something(base_port: int) -> None:\n            do_something(base_port)\n            do_something(base_port + 1)\n    :param _port_allocator: The global port allocator (custom pytest fixture).\n    :param n_ports: The number of ports needed.\n    :return: The base port number.\n    \"\"\"\n    return PortAllocator().reserve_n_ports(n_ports)\n\n\n@pytest.fixture(scope=\"session\", autouse=True)\ndef setup_plugin_trainers():\n    _, _ = mlagents.plugins.trainer_type.register_trainer_plugins()\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "localized_docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "markdown-link-check.fast.json",
          "type": "blob",
          "size": 0.517578125,
          "content": "{\n    \"ignorePatterns\": [\n        {\n            \"pattern\": \"^http://localhost\",\n            \"comment\": \"Ignore local tensorboard links\"\n        },\n        {\n            \"pattern\": \"^https://developer.nvidia.com/compute/machine-learning/cudnn/secure\",\n            \"comment\": \"Requires login\"\n        },\n        {\n            \"pattern\": \"^https?://\",\n            \"comment\": \"Skip external links for fast runs.\"\n        },\n        {\n            \"pattern\": \"mailto:\",\n            \"comment\": \"mailto checking broken\"\n        }\n    ]\n}\n"
        },
        {
          "name": "markdown-link-check.full.json",
          "type": "blob",
          "size": 1.1162109375,
          "content": "{\n    \"ignorePatterns\": [\n        {\n            \"pattern\": \"^http://localhost\",\n            \"comment\": \"Ignore local tensorboard links\"\n        },\n        {\n            \"pattern\": \"^https://developer.nvidia.com/compute/machine-learning/cudnn/secure\",\n            \"comment\": \"Requires login\"\n        },\n        {\n            \"pattern\": \"https://github.com/Unity-Technologies/ml-agents/(tree|archive)/release_[0-9]+.*\",\n            \"comment\": \"Allow future release tags\"\n        },\n        {\n            \"pattern\": \"https://forum.unity.com/\",\n            \"comment\": \"Returns 307 (temporary redirect) which causes link check to fail.\"\n        },\n        {\n            \"pattern\": \"mailto:\",\n            \"comment\": \"mailto checking broken\"\n        },\n        {\n            \"pattern\": \"https://www.researchgate.net/\",\n            \"comment\": \"Issue with GHE certs / firewall\"\n        },\n        {\n            \"pattern\": \"https://www.tensorflow.org/\",\n            \"comment\": \"Valid links failing with errors like 'https://www.tensorflow.org/tensorboard → Status: 0 Error: Exceeded maxRedirects. Probably stuck in a redirect loop'\"\n        }\n    ]\n}\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 2.111328125,
          "content": "site_name: Unity ML-Agents Toolkit\nsite_url: https://unity-technologies.github.io/ml-agents/\nrepo_url: https://github.com/Unity-Technologies/ml-agents\nedit_uri: edit/main/docs/\nsite_description: The Unity Machine Learning Agents Toolkit (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents.\nsite_author: Unity Technologies\ncopyright: com.unity.ml-agents copyright © 2017 - 2022 Unity Technologies\nnav:\n- Home: index.md\n- ML-Agents Overview: ML-Agents-Overview.md\n- Installation: Installation.md\n- Toolkit Documentation: ML-Agents-Toolkit-Documentation.md\n- Background:\n    - Machine Learning: Background-Machine-Learning.md\n    - PyTorch: Background-PyTorch.md\n    - Unity: Background-Unity.md\n    - ELO: ELO-Rating-System.md\n- Interfacing with Unity Builds:\n    - Getting started with the Gym API: Python-Gym-API.md\n    - Getting started with the PettingZoo API: Python-PettingZoo-API.md\n    - Getting started with the LLAPI: Python-LLAPI.md\n- Python API Docs:\n    - Gym API Documentation: Python-Gym-API-Documentation.md\n    - Petting Zoo Documentation: Python-PettingZoo-API-Documentation.md\n    - LLAPI Documentation: Python-LLAPI-Documentation.md\n    - On/Off Policy Trainer: Python-On-Off-Policy-Trainer-Documentation.md\n- Tutorials:\n    - Customizing Training via Plugins: Training-Plugins.md\n    - Custom Trainer Plugin: Tutorial-Custom-Trainer-Plugin.md\n    - HuggingFace: Hugging-Face-Integration.md\n- About:\n    - FAQs: FAQ.md\n    - Limitations: Limitations.md\n    - Migrating: Migrating.md\n    - Versioning: Versioning.md\ntheme:\n  name: material\n  logo: images/unity-logo.png\n  favicon: images/unity-logo-black.png\n  palette:\n    - primary: blue\n    - accent: light blue\n    # Palette toggle for light mode\n    - scheme: default\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n    # Palette toggle for dark mode\n    - scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n\nextra_css:\n  - extra.css\nmarkdown_extensions:\n    - markdown_include.include:\n        base_path: docs\n    - attr_list\n"
        },
        {
          "name": "ml-agents-envs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ml-agents-plugin-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ml-agents-trainer-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "ml-agents",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf-definitions",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.087890625,
          "content": "[pytest]\naddopts = --strict-markers\nmarkers =\n    slow: Slow tests (likely from training)\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.00390625,
          "content": "[coverage:run]\nomit = */tests/*\n\n[coverage:report]\n# Run \"pytest --cov=ml-agents --cov=ml-agents-envs --cov=gym-unity\" to see the current coverage percentage.\n# Run the above plus \"--cov-report html\" to get a nice visualization of what is/isn't covered in html format.\nfail_under = 60\n\n\n[flake8]\n# black will apply a line length of 88 to code but not docstrings/comments\n# This seems like a decent compromise between readability and redoing all the docstrings.\nmax-line-length=120\n\nignore =\n    # Black tends to introduce things flake8 doesn't like, such as \"line break before binary operator\"\n    # or whitespace before ':'. Rather than fight with black, just ignore these for now.\n    W503, E203,\n    # flake-tidy-import adds this warning, which we don't really care about for now\n    I200,\n\nbanned-modules = tensorflow = use mlagents.tf_utils instead (it handles tf2 compat).\n                 logging = use mlagents_envs.logging_util instead\n                 torch = use mlagents.torch_utils instead (handles GPU detection).\n"
        },
        {
          "name": "test_constraints_version.txt",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# pip constraints to use the *highest* versions allowed in ml-agents/setup.py\n# For projects with upper bounds, we should periodically update this list to the latest\ntorch==2.1.1\n"
        },
        {
          "name": "test_requirements.txt",
          "type": "blob",
          "size": 0.123046875,
          "content": "# Test-only dependencies should go here, not in setup.py\npytest>=6.2.5\npytest-cov>=2.12.1\npytest-xdist>=2.5.0\nfilelock>=3.4.2\n"
        },
        {
          "name": "unity-volume",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}