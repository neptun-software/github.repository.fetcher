{
  "metadata": {
    "timestamp": 1736568111790,
    "page": 2,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wagoodman/dive",
      "stars": 48925,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bouncer.yaml",
          "type": "blob",
          "size": 0.2158203125,
          "content": "permit:\n  - BSD.*\n  - MIT.*\n  - Apache.*\n  - MPL.*\n  - ISC\n  - WTFPL\n\nignore-packages:\n  # crypto/internal/boring is released under the openSSL license as a part of the Golang Standard Library\n  - crypto/internal/boring\n\n"
        },
        {
          "name": ".data",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.091796875,
          "content": "/.git\n/.data\n/.cover\n/dist\n!/dist/dive_linux_amd64\n/ui\n/utils\n/image\n/cmd\n/build\ncoverage.txt\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.375,
          "content": "# misc\n/.image\n*.log\nCHANGELOG.md\nVERSION\n\n# IDEs\n/.idea\n/.vscode\n\n# tooling\n/bin\n/.tool-versions\n/.tmp\n\n# builds\n/dist\n/snapshot\n\n# testing\n.cover\ncoverage.txt\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n/tmp\n/build\n/_vendor*\n/vendor\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 2.5166015625,
          "content": "# TODO: enable this when we have coverage on docstring comments\n#issues:\n#  # The list of ids of default excludes to include or disable.\n#  include:\n#    - EXC0002 # disable excluding of issues about comments from golint\n\nlinters-settings:\n  funlen:\n    # Checks the number of lines in a function.\n    # If lower than 0, disable the check.\n    # Default: 60\n    # TODO: drop this down over time...\n    lines: 110\n    # Checks the number of statements in a function.\n    # If lower than 0, disable the check.\n    # Default: 40\n    statements: 60\n\n# TODO: use the default linters for now, but include these over time\n#linters:\n#  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint\n#  disable-all: true\n#  enable:\n#    - asciicheck\n#    - bodyclose\n#    - depguard\n#    - dogsled\n#    - dupl\n#    - errcheck\n#    - exportloopref\n#    - funlen\n#    - gocognit\n#    - goconst\n#    - gocritic\n#    - gocyclo\n#    - gofmt\n#    - goimports\n#    - goprintffuncname\n#    - gosec\n#    - gosimple\n#    - govet\n#    - ineffassign\n#    - misspell\n#    - nakedret\n#    - nolintlint\n#    - revive\n#    - staticcheck\n#    - stylecheck\n#    - typecheck\n#    - unconvert\n#    - unparam\n#    - unused\n#    - whitespace\n\n# do not enable...\n#    - gochecknoglobals\n#    - gochecknoinits    # this is too aggressive\n#    - godot\n#    - godox\n#    - goerr113\n#    - golint       # deprecated\n#    - gomnd        # this is too aggressive\n#    - interfacer   # this is a good idea, but is no longer supported and is prone to false positives\n#    - lll          # without a way to specify per-line exception cases, this is not usable\n#    - maligned     # this is an excellent linter, but tricky to optimize and we are not sensitive to memory layout optimizations\n#    - nestif\n#    - prealloc     # following this rule isn't consistently a good idea, as it sometimes forces unnecessary allocations that result in less idiomatic code\n#    - scopelint    # deprecated\n#    - testpackage\n#    - wsl          # this doens't have an auto-fixer yet and is pretty noisy (https://github.com/bombsimon/wsl/issues/90)\n#    - varcheck     # deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced by unused.\n#    - deadcode     # deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced by unused.\n#    - structcheck  # deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter.  Replaced by unused.\n#    - rowserrcheck # we're not using sql.Rows at all in the codebase"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 1.5,
          "content": "release:\n  # If set to auto, will mark the release as not ready for production in case there is an indicator for this in the\n  # tag e.g. v1.0.0-rc1 .If set to true, will mark the release as not ready for production.\n  prerelease: auto\n\n  # If set to true, will not auto-publish the release. This is done to allow us to review the changelog before publishing.\n  draft: false\n\nbuilds:\n  - binary: dive\n    env:\n      - CGO_ENABLED=0\n    goos:\n      - windows\n      - darwin\n      - linux\n    goarch:\n      - amd64\n      - arm64\n    ldflags: -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.buildTime={{.Date}}`.\n\nbrews:\n  - repository:\n      owner: wagoodman\n      name: homebrew-dive\n      token: \"{{.Env.TAP_GITHUB_TOKEN}}\"\n    homepage: \"https://github.com/wagoodman/dive/\"\n    description: \"A tool for exploring layers in a docker image\"\n\narchives:\n  - format: tar.gz\n    format_overrides:\n      - goos: windows\n        format: zip\n\nnfpms:\n  - license: MIT\n    maintainer: Alex Goodman\n    homepage: https://github.com/wagoodman/dive/\n    description: \"A tool for exploring layers in a docker image\"\n    formats:\n      - rpm\n      - deb\n\ndockers:\n  -\n    ids:\n      - dive\n    dockerfile: Dockerfile\n    # todo: on 1.0 remove 'v' prefix\n    image_templates:\n      - \"wagoodman/dive:latest\"\n      - \"wagoodman/dive:{{ .Tag }}\"\n      - \"wagoodman/dive:v{{ .Major }}\"\n      - \"wagoodman/dive:v{{ .Major }}.{{ .Minor }}\"\n    build_flag_templates:\n      - \"--build-arg=DOCKER_CLI_VERSION={{.Env.DOCKER_CLI_VERSION}}\"\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.3115234375,
          "content": "FROM alpine:3.18\n\nARG DOCKER_CLI_VERSION=${DOCKER_CLI_VERSION}\nRUN wget -O- https://download.docker.com/linux/static/stable/$(uname -m)/docker-${DOCKER_CLI_VERSION}.tgz | \\\n    tar -xzf - docker/docker --strip-component=1 && \\\n    mv docker /usr/local/bin\n\nCOPY dive /usr/local/bin/\n\nENTRYPOINT [\"/usr/local/bin/dive\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Alex Goodman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 10.1337890625,
          "content": "BIN = dive\nTEMP_DIR = ./.tmp\nPWD := ${CURDIR}\nPRODUCTION_REGISTRY = docker.io\nSHELL = /bin/bash -o pipefail\nTEST_IMAGE = busybox:latest\n\n# Tool versions #################################\nGOLANG_CI_VERSION = v1.52.2\nGOBOUNCER_VERSION = v0.4.0\nGORELEASER_VERSION = v1.19.1\nGOSIMPORTS_VERSION = v0.3.8\nCHRONICLE_VERSION = v0.6.0\nGLOW_VERSION = v1.5.0\nDOCKER_CLI_VERSION = 23.0.6\n\n# Command templates #################################\nLINT_CMD = $(TEMP_DIR)/golangci-lint run --tests=false --timeout=2m --config .golangci.yaml\nGOIMPORTS_CMD = $(TEMP_DIR)/gosimports -local github.com/wagoodman\nRELEASE_CMD = DOCKER_CLI_VERSION=$(DOCKER_CLI_VERSION) $(TEMP_DIR)/goreleaser release --clean\nSNAPSHOT_CMD = $(RELEASE_CMD) --skip-publish --snapshot --skip-sign\nCHRONICLE_CMD = $(TEMP_DIR)/chronicle\nGLOW_CMD = $(TEMP_DIR)/glow\n\n# Formatting variables #################################\nBOLD := $(shell tput -T linux bold)\nPURPLE := $(shell tput -T linux setaf 5)\nGREEN := $(shell tput -T linux setaf 2)\nCYAN := $(shell tput -T linux setaf 6)\nRED := $(shell tput -T linux setaf 1)\nRESET := $(shell tput -T linux sgr0)\nTITLE := $(BOLD)$(PURPLE)\nSUCCESS := $(BOLD)$(GREEN)\n\n# Test variables #################################\n# the quality gate lower threshold for unit test total % coverage (by function statements)\nCOVERAGE_THRESHOLD := 55\n\n## Build variables #################################\nDIST_DIR = dist\nSNAPSHOT_DIR = snapshot\nOS=$(shell uname | tr '[:upper:]' '[:lower:]')\nSNAPSHOT_BIN=$(realpath $(shell pwd)/$(SNAPSHOT_DIR)/$(OS)-build_$(OS)_amd64_v1/$(BIN))\nCHANGELOG := CHANGELOG.md\nVERSION=$(shell git describe --dirty --always --tags)\n\nifeq \"$(strip $(VERSION))\" \"\"\n override VERSION = $(shell git describe --always --tags --dirty)\nendif\n\n## Variable assertions\n\nifndef TEMP_DIR\n\t$(error TEMP_DIR is not set)\nendif\n\nifndef DIST_DIR\n\t$(error DIST_DIR is not set)\nendif\n\nifndef SNAPSHOT_DIR\n\t$(error SNAPSHOT_DIR is not set)\nendif\n\ndefine title\n    @printf '$(TITLE)$(1)$(RESET)\\n'\nendef\n\n\n.PHONY: all\nall: clean static-analysis test ## Run all static analysis and tests\n\t@printf '$(SUCCESS)All checks pass!$(RESET)\\n'\n\n.PHONY: test\ntest: unit ## Run all tests (currently unit and cli tests)\n\n$(TEMP_DIR):\n\tmkdir -p $(TEMP_DIR)\n\n\n## Bootstrapping targets #################################\n\n.PHONY: bootstrap-tools\nbootstrap-tools: $(TEMP_DIR)\n\t$(call title,Bootstrapping tools)\n\tcurl -sSfL https://raw.githubusercontent.com/anchore/chronicle/main/install.sh | sh -s -- -b $(TEMP_DIR)/ $(CHRONICLE_VERSION)\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(TEMP_DIR)/ $(GOLANG_CI_VERSION)\n\tcurl -sSfL https://raw.githubusercontent.com/wagoodman/go-bouncer/master/bouncer.sh | sh -s -- -b $(TEMP_DIR)/ $(GOBOUNCER_VERSION)\n\tGOBIN=\"$(realpath $(TEMP_DIR))\" go install github.com/goreleaser/goreleaser@$(GORELEASER_VERSION)\n\tGOBIN=\"$(realpath $(TEMP_DIR))\" go install github.com/rinchsan/gosimports/cmd/gosimports@$(GOSIMPORTS_VERSION)\n\tGOBIN=\"$(realpath $(TEMP_DIR))\" go install github.com/charmbracelet/glow@$(GLOW_VERSION)\n\n.PHONY: bootstrap-go\nbootstrap-go:\n\t$(call title,Bootstrapping go dependencies)\n\tgo mod download\n\n.PHONY: bootstrap\nbootstrap: bootstrap-go bootstrap-tools ## Download and install all go dependencies (+ prep tooling in the ./tmp dir)\n\n\n## Development targets ###################################\n\n#run: build\n#\t$(BUILD_PATH) build -t dive-example:latest -f .data/Dockerfile.example .\n#\n#run-large: build\n#\t$(BUILD_PATH) amir20/clashleaders:latest\n#\n#run-podman: build\n#\tpodman build -t dive-example:latest -f .data/Dockerfile.example .\n#\t$(BUILD_PATH) localhost/dive-example:latest --engine podman\n#\n#run-podman-large: build\n#\t$(BUILD_PATH) docker.io/amir20/clashleaders:latest --engine podman\n#\n#run-ci: build\n#\tCI=true $(BUILD_PATH) dive-example:latest --ci-config .data/.dive-ci\n#\n#dev:\n#\tdocker run -ti --rm -v $(PWD):/app -w /app -v dive-pkg:/go/pkg/ golang:1.13 bash\n#\n#build: gofmt\n#\tgo build -o $(BUILD_PATH)\n\n.PHONY: generate-test-data\ngenerate-test-data:\n\tdocker build -t dive-test:latest -f .data/Dockerfile.test-image . && docker image save -o .data/test-docker-image.tar dive-test:latest && echo 'Exported test data!'\n\n\n## Static analysis targets #################################\n\n.PHONY: static-analysis\nstatic-analysis: lint check-go-mod-tidy check-licenses\n\n.PHONY: lint\nlint: ## Run gofmt + golangci lint checks\n\t$(call title,Running linters)\n\t# ensure there are no go fmt differences\n\t@printf \"files with gofmt issues: [$(shell gofmt -l -s .)]\\n\"\n\t@test -z \"$(shell gofmt -l -s .)\"\n\n\t# run all golangci-lint rules\n\t$(LINT_CMD)\n\t@[ -z \"$(shell $(GOIMPORTS_CMD) -d .)\" ] || (echo \"goimports needs to be fixed\" && false)\n\n\t# go tooling does not play well with certain filename characters, ensure the common cases don't result in future \"go get\" failures\n\t$(eval MALFORMED_FILENAMES := $(shell find . | grep -e ':'))\n\t@bash -c \"[[ '$(MALFORMED_FILENAMES)' == '' ]] || (printf '\\nfound unsupported filename characters:\\n$(MALFORMED_FILENAMES)\\n\\n' && false)\"\n\n.PHONY: format\nformat: ## Auto-format all source code\n\t$(call title,Running formatters)\n\tgofmt -w -s .\n\t$(GOIMPORTS_CMD) -w .\n\tgo mod tidy\n\n.PHONY: lint-fix\nlint-fix: format  ## Auto-format all source code + run golangci lint fixers\n\t$(call title,Running lint fixers)\n\t$(LINT_CMD) --fix\n\n.PHONY: check-licenses\ncheck-licenses:\n\t$(TEMP_DIR)/bouncer check ./...\n\ncheck-go-mod-tidy:\n\t@ .github/scripts/go-mod-tidy-check.sh && echo \"go.mod and go.sum are tidy!\"\n\n\n## Testing targets #################################\n\n.PHONY: unit\nunit: $(TEMP_DIR)  ## Run unit tests (with coverage)\n\t$(call title,Running unit tests)\n\tgo test -race -coverprofile $(TEMP_DIR)/unit-coverage-details.txt ./...\n\t@.github/scripts/coverage.py $(COVERAGE_THRESHOLD) $(TEMP_DIR)/unit-coverage-details.txt\n\n\n## Acceptance testing targets (CI only) #################################\n\n# todo: add --pull=never when supported by host box\n.PHONY: ci-test-docker-image\nci-test-docker-image:\n\tdocker run \\\n\t\t--rm \\\n\t\t-t \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t'${PRODUCTION_REGISTRY}/wagoodman/dive:latest' \\\n\t\t\t'${TEST_IMAGE}' \\\n\t\t\t--ci\n\n.PHONY: ci-test-deb-package-install\nci-test-deb-package-install:\n\tdocker run \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t-v /${PWD}:/src \\\n\t\t-w /src \\\n\t\tubuntu:latest \\\n\t\t\t/bin/bash -x -c \"\\\n\t\t\t\tapt update && \\\n\t\t\t\tapt install -y curl && \\\n\t\t\t\tcurl -L 'https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_CLI_VERSION}.tgz' | \\\n\t\t\t\t\ttar -vxzf - docker/docker --strip-component=1 && \\\n\t\t\t\t\tmv docker /usr/local/bin/ &&\\\n\t\t\t\tdocker version && \\\n\t\t\t\tapt install ./snapshot/dive_*_linux_amd64.deb -y && \\\n\t\t\t\tdive --version && \\\n\t\t\t\tdive '${TEST_IMAGE}' --ci \\\n\t\t\t\"\n\n.PHONY: ci-test-deb-package-install\nci-test-rpm-package-install:\n\tdocker run \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t-v /${PWD}:/src \\\n\t\t-w /src \\\n\t\tfedora:latest \\\n\t\t\t/bin/bash -x -c \"\\\n\t\t\t\tcurl -L 'https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_CLI_VERSION}.tgz' | \\\n\t\t\t\t\ttar -vxzf - docker/docker --strip-component=1 && \\\n\t\t\t\t\tmv docker /usr/local/bin/ &&\\\n\t\t\t\tdocker version && \\\n\t\t\t\tdnf install ./snapshot/dive_*_linux_amd64.rpm -y && \\\n\t\t\t\tdive --version && \\\n\t\t\t\tdive '${TEST_IMAGE}' --ci \\\n\t\t\t\"\n\n.PHONY: ci-test-linux-run\nci-test-linux-run:\n\tls -la $(SNAPSHOT_DIR)\n\tls -la $(SNAPSHOT_DIR)/dive_linux_amd64_v1\n\tchmod 755 $(SNAPSHOT_DIR)/dive_linux_amd64_v1/dive && \\\n\t$(SNAPSHOT_DIR)/dive_linux_amd64_v1/dive '${TEST_IMAGE}'  --ci && \\\n    $(SNAPSHOT_DIR)/dive_linux_amd64_v1/dive --source docker-archive .data/test-kaniko-image.tar  --ci --ci-config .data/.dive-ci\n\n# we're not attempting to test docker, just our ability to run on these systems. This avoids setting up docker in CI.\n.PHONY: ci-test-mac-run\nci-test-mac-run:\n\tchmod 755 $(SNAPSHOT_DIR)/dive_darwin_amd64_v1/dive && \\\n\t$(SNAPSHOT_DIR)/dive_darwin_amd64_v1/dive --source docker-archive .data/test-docker-image.tar  --ci --ci-config .data/.dive-ci\n\n# we're not attempting to test docker, just our ability to run on these systems. This avoids setting up docker in CI.\n.PHONY: ci-test-windows-run\nci-test-windows-run:\n\tdive.exe --source docker-archive .data/test-docker-image.tar  --ci --ci-config .data/.dive-ci\n\n\n## Build-related targets #################################\n\n.PHONY: build\nbuild: $(SNAPSHOT_DIR) ## Build release snapshot binaries and packages\n\n$(SNAPSHOT_DIR): ## Build snapshot release binaries and packages\n\t$(call title,Building snapshot artifacts)\n\n\t@# create a config with the dist dir overridden\n\t@echo \"dist: $(SNAPSHOT_DIR)\" > $(TEMP_DIR)/goreleaser.yaml\n\t@cat .goreleaser.yaml >> $(TEMP_DIR)/goreleaser.yaml\n\n\t@# build release snapshots\n\t@bash -c \"\\\n\t\tVERSION=$(VERSION:v%=%) \\\n\t\t$(SNAPSHOT_CMD) --config $(TEMP_DIR)/goreleaser.yaml \\\n\t  \"\n\n.PHONY: cli\ncli: $(SNAPSHOT_DIR) ## Run CLI tests\n\tchmod 755 \"$(SNAPSHOT_BIN)\"\n\t$(SNAPSHOT_BIN) version\n\tgo test -count=1 -timeout=15m -v ./test/cli\n\n.PHONY: changelog\nchangelog: clean-changelog  ## Generate and show the changelog for the current unreleased version\n\t$(CHRONICLE_CMD) -vvv -n --version-file VERSION > $(CHANGELOG)\n\t@$(GLOW_CMD) $(CHANGELOG)\n\n$(CHANGELOG):\n\t$(CHRONICLE_CMD) -vvv > $(CHANGELOG)\n\n.PHONY: release\nrelease:  ## Cut a new release\n\t@.github/scripts/trigger-release.sh\n\n.PHONY: release\nci-release: ci-check clean-dist $(CHANGELOG)\n\t$(call title,Publishing release artifacts)\n\n\t# create a config with the dist dir overridden\n\techo \"dist: $(DIST_DIR)\" > $(TEMP_DIR)/goreleaser.yaml\n\tcat .goreleaser.yaml >> $(TEMP_DIR)/goreleaser.yaml\n\n\tbash -c \"$(RELEASE_CMD) --release-notes <(cat CHANGELOG.md) --config $(TEMP_DIR)/goreleaser.yaml\"\n\n.PHONY: ci-check\nci-check:\n\t@.github/scripts/ci-check.sh\n\n\n## Cleanup targets #################################\n\n.PHONY: clean\nclean: clean-dist clean-snapshot  ## Remove previous builds, result reports, and test cache\n\n.PHONY: clean-snapshot\nclean-snapshot:\n\trm -rf $(SNAPSHOT_DIR) $(TEMP_DIR)/goreleaser.yaml\n\n.PHONY: clean-dist\nclean-dist: clean-changelog\n\trm -rf $(DIST_DIR) $(TEMP_DIR)/goreleaser.yaml\n\n.PHONY: clean-changelog\nclean-changelog:\n\trm -f $(CHANGELOG) VERSION\n\n\n## Halp! #################################\n\n.PHONY: help\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"$(BOLD)$(CYAN)%-25s$(RESET)%s\\n\", $$1, $$2}'\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.1240234375,
          "content": "# dive\n[![GitHub release](https://img.shields.io/github/release/wagoodman/dive.svg)](https://github.com/wagoodman/dive/releases/latest)\n[![Validations](https://github.com/wagoodman/dive/actions/workflows/validations.yaml/badge.svg)](https://github.com/wagoodman/dive/actions/workflows/validations.yaml)\n[![Go Report Card](https://goreportcard.com/badge/github.com/wagoodman/dive)](https://goreportcard.com/report/github.com/wagoodman/dive)\n[![License: MIT](https://img.shields.io/badge/License-MIT%202.0-blue.svg)](https://github.com/wagoodman/dive/blob/main/LICENSE)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?style=flat)](https://www.paypal.me/wagoodman)\n\n**A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image.**\n\n\n![Image](.data/demo.gif)\n\nTo analyze a Docker image simply run dive with an image tag/id/digest:\n```bash\ndive <your-image-tag>\n```\n\nor you can dive with docker command directly\n```\nalias dive=\"docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive\"\ndive <your-image-tag>\n\n# for example\ndive nginx:latest\n```\n\nor if you want to build your image then jump straight into analyzing it:\n```bash\ndive build -t <some-tag> .\n```\n\nBuilding on Macbook (supporting only the Docker container engine)\n\n```bash\ndocker run --rm -it \\\n      -v /var/run/docker.sock:/var/run/docker.sock \\\n      -v  \"$(pwd)\":\"$(pwd)\" \\\n      -w \"$(pwd)\" \\\n      -v \"$HOME/.dive.yaml\":\"$HOME/.dive.yaml\" \\\n      wagoodman/dive:latest build -t <some-tag> .\n```\n\nAdditionally you can run this in your CI pipeline to ensure you're keeping wasted space to a minimum (this skips the UI):\n```\nCI=true dive <your-image>\n```\n\n![Image](.data/demo-ci.png)\n\n**This is beta quality!** *Feel free to submit an issue if you want a new feature or find a bug :)*\n\n## Basic Features\n\n**Show Docker image contents broken down by layer**\n\nAs you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys.\n\n**Indicate what's changed in each layer**\n\nFiles that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer.\n\n**Estimate \"image efficiency\"**\n\nThe lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage \"score\" and total wasted file space is provided.\n\n**Quick build/analysis cycles**\n\nYou can build a Docker image and do an immediate analysis with one command:\n`dive build -t some-tag .`\n\nYou only need to replace your `docker build` command with the same `dive build`\ncommand.\n\n**CI Integration**\n\nAnalyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set `CI=true` in the environment when invoking any valid dive command.\n\n**Multiple Image Sources and Container Engines Supported**\n\nWith the `--source` option, you can select where to fetch the container image from:\n```bash\ndive <your-image> --source <source>\n```\nor\n```bash\ndive <source>://<your-image>\n```\n\nWith valid `source` options as such:\n- `docker`: Docker engine (the default option)\n- `docker-archive`: A Docker Tar Archive from disk\n- `podman`: Podman engine (linux only)\n\n## Installation\n\n**Ubuntu/Debian**\n\nUsing debs:\n```bash\nDIVE_VERSION=$(curl -sL \"https://api.github.com/repos/wagoodman/dive/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\ncurl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb\nsudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb\n```\n\nUsing snap:\n```bash\nsudo snap install docker\nsudo snap install dive\nsudo snap connect dive:docker-executables docker:docker-executables\nsudo snap connect dive:docker-daemon docker:docker-daemon\n```\n\n**RHEL/Centos**\n```bash\nDIVE_VERSION=$(curl -sL \"https://api.github.com/repos/wagoodman/dive/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\ncurl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.rpm\nrpm -i dive_${DIVE_VERSION}_linux_amd64.rpm\n```\n\n**Arch Linux**\n\nAvailable in the [extra repository](https://archlinux.org/packages/extra/x86_64/dive/) and can be installed via [pacman](https://wiki.archlinux.org/title/Pacman):\n\n```bash\npacman -S dive\n```\n\n**Mac**\n\nIf you use [Homebrew](https://brew.sh):\n\n```bash\nbrew install dive\n```\n\nIf you use [MacPorts](https://www.macports.org):\n\n```bash\nsudo port install dive\n```\n\nOr download the latest Darwin build from the [releases page](https://github.com/wagoodman/dive/releases/latest).\n\n**Windows**\n\nDownload the [latest release](https://github.com/wagoodman/dive/releases/latest).\n\n**Go tools**\nRequires Go version 1.10 or higher.\n\n```bash\ngo get github.com/wagoodman/dive\n```\n*Note*: installing in this way you will not see a proper version when running `dive -v`.\n\n**Nix/NixOS**\n\nOn NixOS:\n```bash\nnix-env -iA nixos.dive\n```\nOn non-NixOS (Linux, Mac)\n```bash\nnix-env -iA nixpkgs.dive\n```\n\n**Docker**\n```bash\ndocker pull wagoodman/dive\n```\n\nor\n\n```bash\ndocker pull quay.io/wagoodman/dive\n```\n\nWhen running you'll need to include the docker socket file:\n```bash\ndocker run --rm -it \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    wagoodman/dive:latest <dive arguments...>\n```\n\nDocker for Windows (showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility)\n```bash\ndocker run --rm -it `\n    -v /var/run/docker.sock:/var/run/docker.sock `\n    wagoodman/dive:latest <dive arguments...>\n```\n\n**Note:** depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable:\n```bash\n   DOCKER_API_VERSION=1.37 dive ...\n```\nor if you are running with a docker image:\n```bash\ndocker run --rm -it \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -e DOCKER_API_VERSION=1.37 \\\n    wagoodman/dive:latest <dive arguments...>\n```\n\n## CI Integration\n\nWhen running dive with the environment variable `CI=true` then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a `.dive-ci` file that you can put at the root of your repo:\n```\nrules:\n  # If the efficiency is measured below X%, mark as failed.\n  # Expressed as a ratio between 0-1.\n  lowestEfficiency: 0.95\n\n  # If the amount of wasted space is at least X or larger than X, mark as failed.\n  # Expressed in B, KB, MB, and GB.\n  highestWastedBytes: 20MB\n\n  # If the amount of wasted space makes up for X% or more of the image, mark as failed.\n  # Note: the base image layer is NOT included in the total image size.\n  # Expressed as a ratio between 0-1; fails if the threshold is met or crossed.\n  highestUserWastedPercent: 0.20\n```\nYou can override the CI config path with the `--ci-config` option.\n\n## KeyBindings\n\nKey Binding                                | Description\n-------------------------------------------|---------------------------------------------------------\n<kbd>Ctrl + C</kbd> or <kbd>Q</kbd>        | Exit\n<kbd>Tab</kbd>                             | Switch between the layer and filetree views\n<kbd>Ctrl + F</kbd>                        | Filter files\n<kbd>PageUp</kbd>                          | Scroll up a page\n<kbd>PageDown</kbd>                        | Scroll down a page\n<kbd>Ctrl + A</kbd>                        | Layer view: see aggregated image modifications\n<kbd>Ctrl + L</kbd>                        | Layer view: see current layer modifications\n<kbd>Space</kbd>                           | Filetree view: collapse/uncollapse a directory\n<kbd>Ctrl + Space</kbd>                    | Filetree view: collapse/uncollapse all directories\n<kbd>Ctrl + A</kbd>                        | Filetree view: show/hide added files\n<kbd>Ctrl + R</kbd>                        | Filetree view: show/hide removed files\n<kbd>Ctrl + M</kbd>                        | Filetree view: show/hide modified files\n<kbd>Ctrl + U</kbd>                        | Filetree view: show/hide unmodified files\n<kbd>Ctrl + B</kbd>                        | Filetree view: show/hide file attributes\n<kbd>PageUp</kbd>                          | Filetree view: scroll up a page\n<kbd>PageDown</kbd>                        | Filetree view: scroll down a page\n\n## UI Configuration\n\nNo configuration is necessary, however, you can create a config file and override values:\n```yaml\n# supported options are \"docker\" and \"podman\"\ncontainer-engine: docker\n# continue with analysis even if there are errors parsing the image archive\nignore-errors: false\nlog:\n  enabled: true\n  path: ./dive.log\n  level: info\n\n# Note: you can specify multiple bindings by separating values with a comma.\n# Note: UI hinting is derived from the first binding\nkeybinding:\n  # Global bindings\n  quit: ctrl+c\n  toggle-view: tab\n  filter-files: ctrl+f, ctrl+slash\n\n  # Layer view specific bindings\n  compare-all: ctrl+a\n  compare-layer: ctrl+l\n\n  # File view specific bindings\n  toggle-collapse-dir: space\n  toggle-collapse-all-dir: ctrl+space\n  toggle-added-files: ctrl+a\n  toggle-removed-files: ctrl+r\n  toggle-modified-files: ctrl+m\n  toggle-unmodified-files: ctrl+u\n  toggle-filetree-attributes: ctrl+b\n  page-up: pgup\n  page-down: pgdn\n\ndiff:\n  # You can change the default files shown in the filetree (right pane). All diff types are shown by default.\n  hide:\n    - added\n    - removed\n    - modified\n    - unmodified\n\nfiletree:\n  # The default directory-collapse state\n  collapse-dir: false\n\n  # The percentage of screen width the filetree should take on the screen (must be >0 and <1)\n  pane-width: 0.5\n\n  # Show the file attributes next to the filetree\n  show-attributes: true\n\nlayer:\n  # Enable showing all changes from this layer and every previous layer\n  show-aggregated-changes: false\n\n```\n\ndive will search for configs in the following locations:\n- `$XDG_CONFIG_HOME/dive/*.yaml`\n- `$XDG_CONFIG_DIRS/dive/*.yaml`\n- `~/.config/dive/*.yaml`\n- `~/.dive.yaml`\n\n`.yml` can be used instead of `.yaml` if desired.\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 1.0205078125,
          "content": "# Release process\n\n\n## Creating a release\n\n**Trigger a new release with `make release`**. \n\nAt this point you'll see a preview changelog in the terminal. If you're happy with the \nchangelog, press `y` to continue, otherwise you can abort and adjust the labels on the \nPRs and issues to be included in the release and re-run the release trigger command.\n\n\n## Retracting a release\n\nIf a release is found to be problematic, it can be retracted with the following steps:\n\n- Deleting the GitHub Release\n- Untag the docker images in the `docker.io` registry\n- Revert the brew formula in [`wagoodman/homebrew-dive`](https://github.com/wagoodman/homebrew-dive) to point to the previous release\n- Add a new `retract` entry in the go.mod for the versioned release\n\n**Note**: do not delete release tags from the git repository since there may already be references to the release\nin the go proxy, which will cause confusion when trying to reuse the tag later (the H1 hash will not match and there\nwill be a warning when users try to pull the new release).\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "dive",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.4033203125,
          "content": "module github.com/wagoodman/dive\n\ngo 1.19\n\nrequire (\n\tgithub.com/awesome-gocui/gocui v1.1.0\n\tgithub.com/awesome-gocui/keybinding v1.0.1-0.20190805183143-864552bd36b7\n\tgithub.com/cespare/xxhash v1.1.0\n\tgithub.com/docker/cli v0.0.0-20190906153656-016a3232168d\n\tgithub.com/docker/docker v24.0.7+incompatible\n\tgithub.com/dustin/go-humanize v1.0.0\n\tgithub.com/fatih/color v1.7.0\n\tgithub.com/google/uuid v1.1.1\n\tgithub.com/logrusorgru/aurora v0.0.0-20190803045625-94edacc10f9b\n\tgithub.com/lunixbochs/vtclean v1.0.0\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee\n\tgithub.com/sergi/go-diff v1.0.0\n\tgithub.com/sirupsen/logrus v1.4.2\n\tgithub.com/spf13/afero v1.2.2\n\tgithub.com/spf13/cobra v0.0.5\n\tgithub.com/spf13/viper v1.4.0\n\tgolang.org/x/net v0.17.0\n)\n\nrequire (\n\tgithub.com/Microsoft/go-winio v0.4.14 // indirect\n\tgithub.com/docker/distribution v2.8.2+incompatible // indirect\n\tgithub.com/docker/go-connections v0.4.0 // indirect\n\tgithub.com/docker/go-units v0.4.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.4.7 // indirect\n\tgithub.com/gdamore/encoding v1.0.0 // indirect\n\tgithub.com/gdamore/tcell/v2 v2.4.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.0 // indirect\n\tgithub.com/konsorten/go-windows-terminal-sequences v1.0.2 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.0.3 // indirect\n\tgithub.com/magiconair/properties v1.8.1 // indirect\n\tgithub.com/mattn/go-colorable v0.1.2 // indirect\n\tgithub.com/mattn/go-isatty v0.0.9 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.10 // indirect\n\tgithub.com/mitchellh/mapstructure v1.1.2 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0-rc1 // indirect\n\tgithub.com/opencontainers/image-spec v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml v1.4.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/rivo/uniseg v0.1.0 // indirect\n\tgithub.com/spf13/cast v1.3.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stretchr/testify v1.4.0 // indirect\n\tgolang.org/x/sys v0.13.0 // indirect\n\tgolang.org/x/term v0.13.0 // indirect\n\tgolang.org/x/text v0.13.0 // indirect\n\tgopkg.in/yaml.v2 v2.2.8 // indirect\n\tgotest.tools v2.2.0+incompatible // indirect\n\tgotest.tools/v3 v3.5.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 25.4921875,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/BurntSushi/toml v0.3.1 h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Microsoft/go-winio v0.4.14 h1:+hMXMk01us9KgxGb7ftKQt2Xpf5hH/yky+TDA+qxleU=\ngithub.com/Microsoft/go-winio v0.4.14/go.mod h1:qXqCSQ3Xa7+6tgxaGTIe4Kpcdsi+P8jBhyzoq1bpyYA=\ngithub.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=\ngithub.com/awesome-gocui/gocui v0.5.0/go.mod h1:1QikxFaPhe2frKeKvEwZEIGia3haiOxOUXKinrv17mA=\ngithub.com/awesome-gocui/gocui v1.1.0 h1:db2j7yFEoHZjpQFeE2xqiatS8bm1lO3THeLwE6MzOII=\ngithub.com/awesome-gocui/gocui v1.1.0/go.mod h1:M2BXkrp7PR97CKnPRT7Rk0+rtswChPtksw/vRAESGpg=\ngithub.com/awesome-gocui/keybinding v1.0.1-0.20190805183143-864552bd36b7 h1:DDdWoFOtXWySkgCiGGn80TM/E2FS2T1qJBJJxup9+Vo=\ngithub.com/awesome-gocui/keybinding v1.0.1-0.20190805183143-864552bd36b7/go.mod h1:z0TyCwIhaT97yU+becTse8Dqh2CvYT0FLw0R0uTk0ag=\ngithub.com/awesome-gocui/termbox-go v0.0.0-20190427202837-c0aef3d18bcc/go.mod h1:tOy3o5Nf1bA17mnK4W41gD7PS3u4Cv0P0pqFcoWMy8s=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/coreos/bbolt v1.3.2/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\ngithub.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-etcd v2.0.0+incompatible/go.mod h1:Jez6KQU2B/sWsbdaef3ED8NzMklzPG4d5KIOhIy30Tk=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=\ngithub.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/dgryski/go-sip13 v0.0.0-20181026042036-e10d5fee7954/go.mod h1:vAd38F8PWV+bWy6jNmig1y/TA+kYO4g3RSRF0IAv0no=\ngithub.com/docker/cli v0.0.0-20190906153656-016a3232168d h1:gwX/88xJZfxZV1yjhhuQpWTmEgJis7/XGCVu3iDIZYU=\ngithub.com/docker/cli v0.0.0-20190906153656-016a3232168d/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=\ngithub.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v24.0.7+incompatible h1:Wo6l37AuwP3JaMnZa226lzVXGA3F9Ig1seQen0cKYlM=\ngithub.com/docker/docker v24.0.7+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-units v0.4.0 h1:3uh0PgVws3nIA0Q+MwDC8yjEPf9zjRfZZWXZYDct3Tw=\ngithub.com/docker/go-units v0.4.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/fatih/color v1.7.0 h1:DkWD4oS2D8LGGgTQ6IvwJJXSL5Vp2ffcQg58nFV38Ys=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fsnotify/fsnotify v1.4.7 h1:IXs+QLmnXW2CcXuY+8Mzv/fWEsPGWxqefPtCP5CnV9I=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/gdamore/encoding v1.0.0 h1:+7OoQ1Bc6eTm5niUzBa0Ctsh6JbMW6Ra+YNuAtDBdko=\ngithub.com/gdamore/encoding v1.0.0/go.mod h1:alR0ol34c49FCSBLjhosxzcPHQbf2trDkoo5dl+VrEg=\ngithub.com/gdamore/tcell/v2 v2.4.0 h1:W6dxJEmaxYvhICFoTY3WrLLEXsQ11SaFnKGVEXW57KM=\ngithub.com/gdamore/tcell/v2 v2.4.0/go.mod h1:cTTuF84Dlj/RqmaCIV5p4w8uG1zWdk0SF6oBpwHp4fU=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190129154638-5b532d6fd5ef/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/uuid v1.1.1 h1:Gkbcsh/GbpXz7lPftLA3P6TYMwjCLYm83jiFQZF/3gY=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.0.0/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.9.0/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2 h1:DB17ag19krx9CFsz4o3enTrPXyIXCl+2iCXH/aMAp9s=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/logrusorgru/aurora v0.0.0-20190803045625-94edacc10f9b h1:PMbSa9CgaiQR9NLlUTwKi+7aeLl3GG5JX5ERJxfQ3IE=\ngithub.com/logrusorgru/aurora v0.0.0-20190803045625-94edacc10f9b/go.mod h1:7rIyQOR62GCctdiQpZ/zOJlFyk6y+94wXzv6RNZgaR4=\ngithub.com/lucasb-eyer/go-colorful v1.0.3 h1:QIbQXiugsb+q10B+MI+7DI1oQLdmnep86tWFlaaUAac=\ngithub.com/lucasb-eyer/go-colorful v1.0.3/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/lunixbochs/vtclean v1.0.0 h1:xu2sLAri4lGiovBDQKxl5mrXyESr3gUr5m5SM5+LVb8=\ngithub.com/lunixbochs/vtclean v1.0.0/go.mod h1:pHhQNgMf3btfWnGBVipUOjRYhoOsdGqdm/+2c2E2WMI=\ngithub.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/magiconair/properties v1.8.1 h1:ZC2Vc7/ZFkGmsVC9KvOjumD+G5lXy2RtTKyzRKO2BQ4=\ngithub.com/magiconair/properties v1.8.1/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/mattn/go-colorable v0.1.2 h1:/bC9yWikZXAL9uJdulbSfyVNIR3n3trXl+v8+1sx8mU=\ngithub.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.9 h1:d5US/mDsogSGW37IV293h//ZFaeajb69h+EHFsv2xGg=\ngithub.com/mattn/go-isatty v0.0.9/go.mod h1:YNRxwqDuOph6SZLI9vUUz6OYw3QyUt7WiY2yME+cCiQ=\ngithub.com/mattn/go-runewidth v0.0.4/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mattn/go-runewidth v0.0.10 h1:CoZ3S2P7pvtP45xOtBw+/mDL2z0RKI576gSkzRRpdGg=\ngithub.com/mattn/go-runewidth v0.0.10/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/mapstructure v1.1.2 h1:fmNYVwqnSfB9mZU6OS2O6GsXM+wcskZDuKQzvN1EDeE=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=\ngithub.com/opencontainers/go-digest v1.0.0-rc1 h1:WzifXhOVOEOuFYOJAW6aQqW0TooG2iki3E3Ii+WN7gQ=\ngithub.com/opencontainers/go-digest v1.0.0-rc1/go.mod h1:cMLVZDEM3+U2I4VmLI6N8jQYUd2OVphdqWwCJHrFt2s=\ngithub.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=\ngithub.com/opencontainers/image-spec v1.0.2/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/pelletier/go-toml v1.4.0 h1:u3Z1r+oOXJIkxqw34zVhyPgjBsm6X2wn21NWs/HfSeg=\ngithub.com/pelletier/go-toml v1.4.0/go.mod h1:PN7xzY2wHTK0K9p34ErDQMlFxa51Fk0OUruD3k1mMwo=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee h1:P6U24L02WMfj9ymZTxl7CxS73JC99x3ukk+DBkgQGQs=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee/go.mod h1:3uODdxMgOaPYeWU7RzZLxVtJHZ/x1f/iHkBZuKJDzuY=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.3/go.mod h1:/TN21ttK/J9q6uSwhBd54HahCDft0ttaMvbicHlPoso=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.0.0-20181113130724-41aa239b4cce/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/common v0.4.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/tsdb v0.7.1/go.mod h1:qhTCs0VvXwvX/y3TZrWD7rabWM+ijKTux40TwIPHuXU=\ngithub.com/rivo/uniseg v0.1.0 h1:+2KBaVoUmb9XzDsrx/Ct0W/EYOSFf/nWTauy++DprtY=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2 h1:SPIRibHv4MatM3XXNO2BJeFLZwZ2LvZgfQ5+UNI2im4=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72 h1:qLC7fQah7D6K1B0ujays3HV9gkFtllcxhzImRR7ArPQ=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/afero v1.2.2 h1:5jhuqJyZCZf2JRofRvN/nIFgIWNzPa3/Vz8mYylgbWc=\ngithub.com/spf13/afero v1.2.2/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=\ngithub.com/spf13/cast v1.3.0 h1:oget//CVOEoFewqQxwr0Ej5yjygnqGkvggSE/gB35Q8=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v0.0.5 h1:f0B+LkLX6DtmRH1isoNA9VTtNUK9K8xYd28JNNfOv/s=\ngithub.com/spf13/cobra v0.0.5/go.mod h1:3K3wKZymM7VvHMDS9+Akkh4K60UwM26emMESw8tLCHU=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.3.2/go.mod h1:ZiWeW+zYFKm7srdB9IoDzzZXaJaI5eL9QjNiN/DMA2s=\ngithub.com/spf13/viper v1.4.0 h1:yXHLWeravcrgGyFSyCgdYpXQ9dR9c/WED3pg1RhxqEU=\ngithub.com/spf13/viper v1.4.0/go.mod h1:PTJ7Z/lr49W6bUbkmS1V3by4uWynFiR9p7+dSq/yZzE=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.4.0 h1:2E4SXV/wtOkTonXsotYi4li6zVWxYlZuYNCXe9XRJyk=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20190109142713-0ad062ec5ee5/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=\ngithub.com/ugorji/go v1.1.4/go.mod h1:uQMGLiO92mf5W77hV/PUCpI3pbzQx3CRekS0kk+RGrc=\ngithub.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.etcd.io/bbolt v1.3.2/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190522155817-f3200d17e092/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=\ngolang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181205085412-a5c9d58dba9a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=\ngolang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201210144234-2321bbc49cbf/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.13.0 h1:bb+I9cTfFazGW51MZqBVmZy7+JEJMouUHTUSKVQLBek=\ngolang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4 h1:SvFZT6jyqRaOeXpc5h/JSfZenJ2O330aBsf7JfSUXmQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=\ngopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8 h1:obN1ZagJSUGI0Ek/LBmuj4SNLPfIny3KsKFopxRdj10=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngotest.tools v2.2.0+incompatible h1:VsBPFP1AI068pPrMxtb/S8Zkgf9xEmTLJjfM+P5UIEo=\ngotest.tools v2.2.0+incompatible/go.mod h1:DsYFclhRJ6vuDpmuTbkuFWG+y2sxOXAzmJt81HFBacw=\ngotest.tools/v3 v3.5.0 h1:Ljk6PdHdOhAb5aDMWXjDLMMhph+BpztA4v1QdqEW2eY=\ngotest.tools/v3 v3.5.0/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.3896484375,
          "content": "// Copyright © 2018 Alex Goodman\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\npackage main\n\nimport (\n\t\"github.com/wagoodman/dive/cmd\"\n)\n\nvar (\n\tversion   = \"No version provided\"\n\tcommit    = \"No commit provided\"\n\tbuildTime = \"No build timestamp provided\"\n)\n\nfunc main() {\n\tcmd.SetVersion(&cmd.Version{\n\t\tVersion:   version,\n\t\tCommit:    commit,\n\t\tBuildTime: buildTime,\n\t})\n\n\tcmd.Execute()\n}\n"
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}