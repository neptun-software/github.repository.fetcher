{
  "metadata": {
    "timestamp": 1736568162928,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yeasy/docker_practice",
      "stars": 25061,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 0.2587890625,
          "content": "kind: pipeline\ntype: docker\nname: build\nsteps:\n  - name: build\n    image: yeasy/docker_practice:latest\n    pull: if-not-exists # always never\n    environment:\n      TZ: Asia/Shanghai\n    commands:\n      - docker-entrypoint.sh build\n\ntrigger:\n  branch:\n    - master\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2978515625,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\nroot = true\n\n[*]\n\nindent_style = space\n\nindent_size = 2\n\nend_of_line = lf\n\ncharset = utf-8\n\ntrim_trailing_whitespace = true\n\ninsert_final_newline = true\n\n[*.md]\n\ntrim_trailing_whitespace = false\n\n[*.py]\n\nindent_size = 4\n\n[Makefile]\n\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0791015625,
          "content": "*           text=auto\n\n*.sh        text eol=lf\n\n*           linguist-language=go\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.154296875,
          "content": "# Created by .gitignore support plugin (hsz.mobi)\n*.~\n*.tmp\n.idea/\n_book/\n*.swp\n*.edx\n.DS_Store\n\nnode_modules/\npackage-lock.json\n\ndocker-compose.override.yml\n"
        },
        {
          "name": ".travis",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vuepress",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.3232421875,
          "content": "# 修订记录\n\n* 1.3.0 2021-YY-DD\n  * 全面支持 Docker v20.10 新版本\n  * 新增 Docker Compose v2\n  * Docker Hub 自动构建转为付费功能\n\n* 1.2.0 2020-12-20\n  * 错误修复\n\n* 1.1.0 2019-12-31\n  * 全面支持 Docker v19.03 新版本\n  * 增加 `BuildKit`\n  * 增加 `docker buildx` 命令使用说明\n  * 增加 `docker manifest` 命令使用说明\n  * 移除 `Ubuntu 14.04` `Debian 8` `Debian 7`\n\n* 1.0.0: 2018-12-31\n  * 全面支持 Docker v18.x 新版本\n  * 添加如何调试 Docker\n  * 错误修正\n\n* 0.9.0: 2017-12-31\n  * 对 v1.13.x 旧版本的最后支持\n\n* 0.9.0-rc2: 2017-12-10\n\n  * 增加 Docker 中文资源链接\n  * 增加介绍基于 Docker 的 CI/CD 工具 `Drone`\n  * 增加 `docker secret` 相关内容\n  * 增加 `docker config` 相关内容\n  * 增加 `LinuxKit` 相关内容\n\n  * 更新 `CoreOS` 章节\n  * 更新 `etcd` 章节，基于 3.x 版本\n\n  * 删除 `Docker Compose` 中的 `links`指令\n\n  * 替换 `docker daemon` 命令为 `dockerd`\n  * 替换 `docker ps` 命令为 `docker container ls`\n  * 替换 `docker images` 命令为 `docker image ls`\n\n  * 修改 `安装 Docker` 一节中部分文字表述\n\n  * 移除历史遗留文件和错误的文件\n  * 优化文字排版\n  * 调整目录结构\n  * 修复内容逻辑错误\n  * 修复`404` 链接\n\n* 0.9.0-rc1: 2017-11-29\n\n  * 根据最新版本（v17.09）修订内容\n\n  * 增加 `Dockerfile` 多阶段构建( `multistage builds` ) `Docker 17.05` 新增特性\n  * 增加 `docker exec` 子命令介绍\n  * 增加 `docker` 管理子命令 `container` `image` `network` `volume` 介绍\n  * 增加 `树莓派单片电脑` 安装 Docker\n  * 增加 Docker 存储驱动 `OverlayFS` 相关内容\n\n  * 更新 `Docker CE` `v17.x` 安装说明\n  * 更新 `Docker 网络` 一节\n  * 更新 `Docker Machine` 基于 0.13.0 版本\n  * 更新 `Docker Compose` 基于 3 文件格式\n\n  * 删除 `Docker Swarm` 相关内容，替换为 `Swarm mode` `Docker 1.12.0` 新增特性\n  * 删除 `docker run` `--link` 参数\n\n  * 精简 `Docker Registry` 一节\n\n  * 替换 `docker run` `-v` 参数为 `--mount`\n\n  * 修复 `404` 链接\n  * 优化文字排版\n  * 增加离线阅读功能\n\n* 0.8.0: 2017-01-08\n\n  * 修正文字内容\n  * 根据最新版本（1.12）修订安装使用\n  * 补充附录章节\n\n* 0.7.0: 2016-06-12\n\n  * 根据最新版本进行命令调整\n  * 修正若干文字描述\n\n* 0.6.0: 2015-12-24\n\n  * 补充 Machine 项目\n  * 修正若干 bug\n\n* 0.5.0: 2015-06-29\n\n  * 添加 Compose 项目\n  * 添加 Machine 项目\n  * 添加 Swarm 项目\n  * 完善 Kubernetes 项目内容\n  * 添加 Mesos 项目内容\n\n* 0.4.0: 2015-05-08\n\n  * 添加 Etcd 项目\n  * 添加 Fig 项目\n  * 添加 CoreOS 项目\n  * 添加 Kubernetes 项目\n\n* 0.3.0: 2014-11-25\n\n  * 完成仓库章节\n  * 重写安全章节\n  * 修正底层实现章节的架构、命名空间、控制组、文件系统、容器格式等内容\n  * 添加对常见仓库和镜像的介绍\n  * 添加 Dockerfile 的介绍\n  * 重新校订中英文混排格式\n  * 修订文字表达\n  * 发布繁体版本分支：zh-Hant\n\n* 0.2.0: 2014-09-18\n\n  * 对照官方文档重写介绍、基本概念、安装、镜像、容器、仓库、数据管理、网络等章节\n  * 添加底层实现章节\n  * 添加命令查询和资源链接章节\n  * 其它修正\n\n* 0.1.0: 2014-09-05\n\n  * 添加基本内容\n  * 修正错别字和表达不通顺的地方\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.19140625,
          "content": "# 如何贡献\n\n领取或创建新的 [Issue](https://github.com/yeasy/docker_practice/issues)，如 [issue 235](https://github.com/yeasy/docker_practice/issues/235)，添加自己为 `Assignee`。\n\n在 [GitHub](https://github.com/yeasy/docker_practice/fork) 上 `fork` 到自己的仓库，如 `docker_user/docker_practice`，然后 `clone` 到本地，并设置用户信息。\n\n```bash\n$ git clone git@github.com:docker_user/docker_practice.git\n\n$ cd docker_practice\n```\n\n修改代码后提交，并推送到自己的仓库，注意修改提交消息为对应 Issue 号和描述。\n\n```bash\n# Update the content\n\n$ git commit -a -s\n\n# In commit msg dialog, add content like \"Fix issue #235: describe ur change\"\n\n$ git push\n```\n\n在 [GitHub](https://github.com/yeasy/docker_practice/pulls) 上提交 `Pull Request`，添加标签，并邀请维护者进行 `Review`。\n\n定期使用项目仓库内容更新自己仓库内容。\n\n```bash\n$ git remote add upstream https://github.com/yeasy/docker_practice\n\n$ git fetch upstream\n\n$ git rebase upstream/master\n\n$ git push -f origin master\n```\n\n## 排版规范\n\n本开源书籍遵循 [中文排版指南](https://github.com/mzlogin/chinese-copywriting-guidelines) 规范。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.39453125,
          "content": "# Docker — 从入门到实践\n\n[![](https://img.shields.io/github/stars/yeasy/docker_practice.svg?style=social&label=Stars)](https://github.com/yeasy/docker_practice) [![](https://img.shields.io/github/release/yeasy/docker_practice/all.svg)](https://github.com/yeasy/docker_practice/releases) [![](https://img.shields.io/badge/Based-Docker%20CE%20v20.10-blue.svg)](https://github.com/docker/docker-ce) [![](https://img.shields.io/badge/Docker%20%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E6%88%98-jd.com-red.svg)][1]\n\n**v1.3.0**\n\n| 语言           | - |\n| :------------- | :--- |\n| [简体中文](https://github.com/yeasy/docker_practice)              | [阅读](https://vuepress.mirror.docker-practice.com/) |\n\n[Docker](https://www.docker.com) 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！\n\n无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。\n\n本书既适用于具备基础 Linux 知识的 Docker 初学者，也希望可供理解原理和实现的高级用户参考。同时，书中给出的实践案例，可供在进行实际部署时借鉴。前六章为基础内容，供用户理解 Docker 的基本概念和操作；7 ~ 9 章介绍包括数据管理、网络等高级操作；第 10 ~ 12 章介绍了容器生态中的几个核心项目；13、14 章讨论了关于 Docker 安全和实现技术等高级话题。后续章节则分别介绍包括 Etcd、Fedora CoreOS、Kubernetes、容器云等相关热门开源项目。最后，还展示了使用容器技术的典型的应用场景和实践案例。\n\n* 在线阅读：[docker-practice.com](https://vuepress.mirror.docker-practice.com/)，[GitBook](https://yeasy.gitbook.io/docker_practice/)，[Github](https://github.com/yeasy/docker_practice/blob/master/SUMMARY.md)\n* 离线阅读：[`$ docker run -it --rm -p 4000:80 ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice:vuepress`](https://github.com/yeasy/docker_practice/wiki/%E7%A6%BB%E7%BA%BF%E9%98%85%E8%AF%BB%E5%8A%9F%E8%83%BD%E8%AF%A6%E8%A7%A3)\n\nDocker 自身仍在快速发展中，生态环境也在蓬勃成长。建议初学者使用最新稳定版本的 Docker 进行学习实践。欢迎 [参与项目维护](CONTRIBUTING.md)。\n\n* [修订记录](CHANGELOG.md)\n* [贡献者名单](https://github.com/yeasy/docker_practice/graphs/contributors)\n\n## 微信小程序\n\n<p align=\"center\">\n<img width=\"200\" src=\"https://docker_practice.gitee.io/pic/dp-wechat-miniprogram.jpg\">\n</p>\n\n<p align=\"center\"><strong>微信扫码 随时随地阅读~</strong></p>\n\n## 技术交流\n\n<p align=\"center\">\n<img width=\"200\" src=\"https://docker_practice.gitee.io/pic/dpsig-wechat.jpg\">\n</p>\n\n<p align=\"center\"><strong>微信扫码 加入群聊~ 或者微信添加 <code>dpsigs</code> 邀请入群</strong></p>\n\n欢迎加入 Docker 技术交流 QQ 群，分享 Docker 资源，交流 Docker 技术。\n\n* QQ 群 I   （已满）：341410255\n* QQ 群 II  （已满）：419042067\n* QQ 群 III （已满）：210028779\n* QQ 群 IV  （已满）：483702734\n* QQ 群 V   （已满）：460598761\n* QQ 群 VI  （已满）：581983671\n* QQ 群 VII （已满）：252403484\n* QQ 群 VIII（已满）：544818750\n* QQ 群 IX  （已满）：571502246\n* QQ 群 X   （可加）：145983035\n\n>如果有容器技术相关的疑问，请通过 [Issues](https://github.com/yeasy/docker_practice/issues/new/choose) 来提出。\n\n## 进阶学习\n\n[![](https://github.com/yeasy/docker_practice/raw/master/_images/docker_primer3.png)][1]\n\n《[Docker 技术入门与实战][1]》第三版已经面世，介绍最新的容器技术栈，欢迎大家阅读使用并反馈建议。\n\n* [京东图书][1]\n* [China-Pub](http://product.china-pub.com/8052127)\n\n## 鼓励项目\n\n<p align=\"center\">\n<img width=\"200\" src=\"https://github.com/yeasy/docker_practice/raw/master/_images/donate.jpeg\">\n</p>\n\n<p align=\"center\"><strong>欢迎鼓励项目一杯 coffee~</strong></p>\n\n[1]: https://union-click.jd.com/jdc?e=&p=JF8AANADIgZlGF0VAxUDVBJdHDISBFAfWRcCGzcRRANLXSJeEF4aVwkMGQ1eD0kdSVJKSQVJHBIEUB9ZFwIbGAxeB0gyS34PbFlHVHNkI0MQEAoIcSxyBWFLRAtZK1olABYHXR9eHAoQN2UbXCVQfN_jrYOwsw7T_5SOnZUiBmUbXBYBFwBVG14UBBAAZRxbHDJJUjscCEEHEQ4FSA4VBhBQZStrFjIiN1UrWCVAfARQT1gQA0cFAEwOEAcRDlMTDEALQAFTEwwRUhMAUR1cJQATBlES\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 7.693359375,
          "content": "# [Docker — 从入门到实践](https://github.com/yeasy/docker_practice/blob/master/SUMMARY.md)\n\n* [前言](README.md)\n* [修订记录](CHANGELOG.md)\n* [如何贡献](CONTRIBUTING.md)\n* [Docker 简介](introduction/README.md)\n  * [什么是 Docker](introduction/what.md)\n  * [为什么要用 Docker](introduction/why.md)\n* [基本概念](basic_concept/README.md)\n  * [镜像](basic_concept/image.md)\n  * [容器](basic_concept/container.md)\n  * [仓库](basic_concept/repository.md)\n* [安装 Docker](install/README.md)\n  * [Ubuntu](install/ubuntu.md)\n  * [Debian](install/debian.md)\n  * [Fedora](install/fedora.md)\n  * [CentOS](install/centos.md)\n  * [Raspberry Pi](install/raspberry-pi.md)\n  * [Linux 离线安装](install/offline.md)\n  * [macOS](install/mac.md)\n  * [Windows 10](install/windows.md)\n  * [镜像加速器](install/mirror.md)\n  * [开启实验特性](install/experimental.md)\n* [使用镜像](image/README.md)\n  * [获取镜像](image/pull.md)\n  * [列出镜像](image/list.md)\n  * [删除本地镜像](image/rm.md)\n  * [利用 commit 理解镜像构成](image/commit.md)\n  * [使用 Dockerfile 定制镜像](image/build.md)\n  * [Dockerfile 指令详解](image/dockerfile/README.md)\n    * [COPY 复制文件](image/dockerfile/copy.md)\n    * [ADD 更高级的复制文件](image/dockerfile/add.md)\n    * [CMD 容器启动命令](image/dockerfile/cmd.md)\n    * [ENTRYPOINT 入口点](image/dockerfile/entrypoint.md)\n    * [ENV 设置环境变量](image/dockerfile/env.md)\n    * [ARG 构建参数](image/dockerfile/arg.md)\n    * [VOLUME 定义匿名卷](image/dockerfile/volume.md)\n    * [EXPOSE 暴露端口](image/dockerfile/expose.md)\n    * [WORKDIR 指定工作目录](image/dockerfile/workdir.md)\n    * [USER 指定当前用户](image/dockerfile/user.md)\n    * [HEALTHCHECK 健康检查](image/dockerfile/healthcheck.md)\n    * [ONBUILD 为他人作嫁衣裳](image/dockerfile/onbuild.md)\n    * [LABEL 为镜像添加元数据](image/dockerfile/label.md)\n    * [SHELL 指令](image/dockerfile/shell.md)\n    * [参考文档](image/dockerfile/references.md)\n  * [Dockerfile 多阶段构建](image/multistage-builds/README.md)\n    * [实战多阶段构建 Laravel 镜像](image/multistage-builds/laravel.md)\n  * [构建多种系统架构支持的 Docker 镜像](image/manifest.md)\n  * [其它制作镜像的方式](image/other.md)\n  * [实现原理](image/internal.md)\n* [操作容器](container/README.md)\n  * [启动](container/run.md)\n  * [守护态运行](container/daemon.md)\n  * [终止](container/stop.md)\n  * [进入容器](container/attach_exec.md)\n  * [导出和导入](container/import_export.md)\n  * [删除](container/rm.md)\n* [访问仓库](repository/README.md)\n  * [Docker Hub](repository/dockerhub.md)\n  * [私有仓库](repository/registry.md)\n  * [私有仓库高级配置](repository/registry_auth.md)\n  * [Nexus 3](repository/nexus3_registry.md)\n* [数据管理](data_management/README.md)\n  * [数据卷](data_management/volume.md)\n  * [挂载主机目录](data_management/bind-mounts.md)\n* [使用网络](network/README.md)\n  * [外部访问容器](network/port_mapping.md)\n  * [容器互联](network/linking.md)\n  * [配置 DNS](network/dns.md)\n* [高级网络配置](advanced_network/README.md)\n  * [快速配置指南](advanced_network/quick_guide.md)\n  * [容器访问控制](advanced_network/access_control.md)\n  * [端口映射实现](advanced_network/port_mapping.md)\n  * [配置 docker0 网桥](advanced_network/docker0.md)\n  * [自定义网桥](advanced_network/bridge.md)\n  * [工具和示例](advanced_network/example.md)\n  * [编辑网络配置文件](advanced_network/config_file.md)\n  * [配置 HTTP/HTTPS 网络代理](advanced_network/http_https_proxy.md)\n  * [实例：创建一个点到点连接](advanced_network/ptp.md)\n* [Docker Buildx](buildx/README.md)\n  * [BuildKit](buildx/buildkit.md)\n  * [使用 buildx 构建镜像](buildx/buildx.md)\n  * [使用 buildx 构建多种系统架构支持的 Docker 镜像](buildx/multi-arch-images.md)\n* [Docker Compose](compose/README.md)\n  * [简介](compose/introduction.md)\n  * [Compose v2](compose/v2.md)\n  * [安装与卸载](compose/install.md)\n  * [使用](compose/usage.md)\n  * [命令说明](compose/commands.md)\n  * [Compose 模板文件](compose/compose_file.md)\n  * [实战 Django](compose/django.md)\n  * [实战 Rails](compose/rails.md)\n  * [实战 WordPress](compose/wordpress.md)\n  * [实战 LNMP](compose/lnmp.md)\n* [Swarm mode](swarm_mode/README.md)\n  * [基本概念](swarm_mode/overview.md)\n  * [创建 Swarm 集群](swarm_mode/create.md)\n  * [部署服务](swarm_mode/deploy.md)\n  * [使用 compose 文件](swarm_mode/stack.md)\n  * [管理密钥](swarm_mode/secret.md)\n  * [管理配置信息](swarm_mode/config.md)\n  * [滚动升级](swarm_mode/rolling_update.md)\n* [安全](security/README.md)\n  * [内核命名空间](security/kernel_ns.md)\n  * [控制组](security/control_group.md)\n  * [服务端防护](security/daemon_sec.md)\n  * [内核能力机制](security/kernel_capability.md)\n  * [其它安全特性](security/other_feature.md)\n  * [总结](security/summary.md)\n* [底层实现](underly/README.md)\n  * [基本架构](underly/arch.md)\n  * [命名空间](underly/namespace.md)\n  * [控制组](underly/cgroups.md)\n  * [联合文件系统](underly/ufs.md)\n  * [容器格式](underly/container_format.md)\n  * [网络](underly/network.md)\n* [Etcd 项目](etcd/README.md)\n  * [简介](etcd/intro.md)\n  * [安装](etcd/install.md)\n  * [集群](etcd/cluster.md)\n  * [使用 etcdctl](etcd/etcdctl.md)\n* [Fedora CoreOS](coreos/README.md)\n  * [简介](coreos/intro.md)\n  * [安装](coreos/install.md)\n* [Kubernetes - 开源容器编排引擎](kubernetes/README.md)\n  * [简介](kubernetes/intro.md)\n  * [基本概念](kubernetes/concepts.md)\n  * [架构设计](kubernetes/design.md)\n* [部署 Kubernetes](kubernetes/setup/README.md)\n  * [使用 kubeadm 部署 kubernetes(CRI 使用 containerd)](kubernetes/setup/kubeadm.md)\n  * [在 Docker Desktop 使用](kubernetes/setup/docker-desktop.md)\n  * [一步步部署 kubernetes 集群](kubernetes/setup/systemd.md)\n  * [部署 Dashboard](kubernetes/setup/dashboard.md)\n* [Kubernetes 命令行 kubectl](kubernetes/kubectl/README.md)\n* [容器与云计算](cloud/README.md)\n  * [简介](cloud/intro.md)\n  * [腾讯云](cloud/tencentCloud.md)\n  * [阿里云](cloud/alicloud.md)\n  * [亚马逊云](cloud/aws.md)\n  * [小结](cloud/summary.md)\n* [实战案例 - 操作系统](cases/os/README.md)\n  * [Busybox](cases/os/busybox.md)\n  * [Alpine](cases/os/alpine.md)\n  * [Debian Ubuntu](cases/os/debian.md)\n  * [CentOS Fedora](cases/os/centos.md)\n  * [本章小结](cases/os/summary.md)\n* [实战案例 - CI/CD](cases/ci/README.md)\n  * [GitHub Actions](cases/ci/actions/README.md)\n  * [Drone](cases/ci/drone/README.md)\n    * [部署 Drone](cases/ci/drone/install.md)\n* [在 IDE 中使用 Docker](ide/README.md)\n  * [VS Code](ide/vsCode.md)\n* [podman - 下一代 Linux 容器工具](podman/README.md)\n* [附录](appendix/README.md)\n  * [附录一：常见问题总结](appendix/faq/README.md)\n  * [附录二：热门镜像介绍](appendix/repo/README.md)\n    * [Ubuntu](appendix/repo/ubuntu.md)\n    * [CentOS](appendix/repo/centos.md)\n    * [Nginx](appendix/repo/nginx.md)\n    * [PHP](appendix/repo/php.md)\n    * [Node.js](appendix/repo/nodejs.md)\n    * [MySQL](appendix/repo/mysql.md)\n    * [WordPress](appendix/repo/wordpress.md)\n    * [MongoDB](appendix/repo/mongodb.md)\n    * [Redis](appendix/repo/redis.md)\n    * [Minio](appendix/repo/minio.md)\n  * [附录三：Docker 命令查询](appendix/command/README.md)\n    * [客户端命令 - docker](appendix/command/docker.md)\n    * [服务端命令 - dockerd](appendix/command/dockerd.md)\n  * [附录四：Dockerfile 最佳实践](appendix/best_practices.md)\n  * [附录五：如何调试 Docker](appendix/debug.md)\n  * [附录六：资源链接](appendix/resources.md)\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0439453125,
          "content": "theme: jekyll-theme-slate\ninclude: [_images]\n"
        },
        {
          "name": "_images",
          "type": "tree",
          "content": null
        },
        {
          "name": "advanced_network",
          "type": "tree",
          "content": null
        },
        {
          "name": "appendix",
          "type": "tree",
          "content": null
        },
        {
          "name": "archive",
          "type": "tree",
          "content": null
        },
        {
          "name": "basic_concept",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.8037109375,
          "content": "{\n  \"title\": \"Docker -- 从入门到实践\",\n  \"author\": \"yeasy\",\n  \"language\": \"zh-hans\",\n  \"links\": {\n    \"sidebar\": {\n      \"GitHub\": \"https://github.com/yeasy/docker_practice\"\n    }\n  },\n  \"plugins\": [\n    \"-livereload\",\n    \"image-captions\",\n    \"github\",\n    \"page-treeview@2.9.8\",\n    \"editlink\"\n  ],\n  \"pluginsConfig\": {\n    \"image-captions\": {\n      \"attributes\": {\n        \"width\": \"600\"\n      },\n      \"caption\": \"图 _PAGE_LEVEL_._PAGE_IMAGE_NUMBER_ - _CAPTION_\"\n    },\n    \"github\": {\n      \"url\": \"https://github.com/yeasy/docker_practice\"\n    },\n    \"editlink\": {\n      \"base\": \"https://github.com/yeasy/docker_practice/blob/master/\",\n      \"label\": \"编辑本页\"\n    },\n    \"page-treeview\": {\n      \"copyright\": \"Copyright &#169; yeasy\",\n      \"minHeaderCount\": \"2\",\n      \"minHeaderDeep\": \"2\"\n    }\n  }\n}\n"
        },
        {
          "name": "buildx",
          "type": "tree",
          "content": null
        },
        {
          "name": "cases",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "coreos",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover.jpg",
          "type": "blob",
          "size": 213.482421875,
          "content": null
        },
        {
          "name": "data_management",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.7861328125,
          "content": "version: \"3\"\n\nservices:\n\n  gitbook-build:\n    &gitbook-build\n    image: yeasy/docker_practice:latest\n    volumes:\n      - ./:/srv/gitbook-src\n    command: build\n\n  gitbook-server:\n    << : *gitbook-build\n    ports:\n      - 4000:4000\n    command: server\n\n  # docker run -it --rm -p 4000:80 dockerpracticesig/docker_practice\n  gitbook-offline:\n    &gitbook-offline\n    # this image build by GitHub Action\n    image: dockerpracticesig/docker_practice:gitbook\n    ports:\n      - 4000:80\n\n  vuepress-offline:\n    << : *gitbook-offline\n    image: dockerpracticesig/docker_practice:vuepress\n\n  # developer test docker image\n\n  development:\n    build: ./.travis\n    image: yeasy/docker_practice:latest\n    ports:\n      - 4000:4000\n    volumes:\n      - ./:/srv/gitbook-src\n    command: server\n    # command: build\n"
        },
        {
          "name": "etcd",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "introduction",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest",
          "type": "blob",
          "size": 0.21484375,
          "content": "DOCKER_VERSION=20.10.0\nDOCKER_COMPOSE_VERSION=1.27.4\nETCD_VERSION=3.4.0\nKUBERNETES_VERSION=1.14.3\nKUBERNETES_DASHBOARD=2.0.0\nUBUNTU=18.04\nDEBIAN=9\nNGINX_VERSION=1.18.x\nNODE_VERSION=14.x\nPHP_VERSION=7.x\nREDIS_VERSION=6.x\n"
        },
        {
          "name": "network",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.84375,
          "content": "{\n  \"name\": \"docker_practice\",\n  \"version\": \"1.0.0\",\n  \"description\": \"docker_practice\",\n  \"main\": \"index.js\",\n  \"devDependencies\": {\n    \"chalk\": \"^4.1.1\",\n    \"commander\": \"^7.2.0\",\n    \"esm\": \"^3.0.0\",\n    \"vuepress\": \"1.8.2\",\n    \"vuepress-plugin-container\": \"^2.1.5\",\n    \"vuepress-theme-hope\": \"^1.0.0\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"gitbook:help\": \"gitbook help\",\n    \"gitbook:build\": \"gitbook build\",\n    \"gitbook:serve\": \"gitbook serve\",\n    \"vuepress:build\": \"npx vuepress build\",\n    \"vuepress\": \"npx vuepress\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/yeasy/docker_practice.git\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/yeasy/docker_practice/issues\"\n  },\n  \"homepage\": \"https://github.com/yeasy/docker_practice#readme\"\n}\n"
        },
        {
          "name": "podman",
          "type": "tree",
          "content": null
        },
        {
          "name": "repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "swarm_mode",
          "type": "tree",
          "content": null
        },
        {
          "name": "underly",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}