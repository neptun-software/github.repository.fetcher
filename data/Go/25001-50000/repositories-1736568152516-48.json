{
  "metadata": {
    "timestamp": 1736568152516,
    "page": 48,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "restic/restic",
      "stars": 27208,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0859375,
          "content": "# Workaround for https://github.com/golang/go/issues/52268.\n**/testdata/fuzz/*/* eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "/.idea\n/restic\n/restic.exe\n/.vagrant\n/.vscode\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.00390625,
          "content": "# This is the configuration for golangci-lint for the restic project.\n#\n# A sample config with all settings is here:\n# https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml\n\nlinters:\n  # only enable the linters listed below\n  disable-all: true\n  enable:\n    # make sure all errors returned by functions are handled\n    - errcheck\n\n    # show how code can be simplified\n    - gosimple\n\n    # make sure code is formatted\n    - gofmt\n\n    # examine code and report suspicious constructs, such as Printf calls whose\n    # arguments do not align with the format string\n    - govet\n\n    # make sure names and comments are used according to the conventions\n    - revive\n\n    # detect when assignments to existing variables are not used\n    - ineffassign\n\n    # run static analysis and find errors\n    - staticcheck\n\n    # find unused variables, functions, structs, types, etc.\n    - unused\n\n    # parse and typecheck code\n    - typecheck\n\n    # ensure that http response bodies are closed\n    - bodyclose\n\n    - importas\n\nissues:\n  # don't use the default exclude rules, this hides (among others) ignored\n  # errors from Close() calls\n  exclude-use-default: false\n\n  # list of things to not warn about\n  exclude:\n    # revive: do not warn about missing comments for exported stuff\n    - exported (function|method|var|type|const) .* should have comment or be unexported\n    # revive: ignore constants in all caps\n    - don't use ALL_CAPS in Go names; use CamelCase\n    # revive: lots of packages don't have such a comment\n    - \"package-comments: should have a package comment\"\n    # staticcheck: there's no easy way to replace these packages\n    - \"SA1019: \\\"golang.org/x/crypto/poly1305\\\" is deprecated\"\n    - \"SA1019: \\\"golang.org/x/crypto/openpgp\\\" is deprecated\"\n\n  exclude-rules:\n    # revive: ignore unused parameters in tests\n    - path: (_test\\.go|testing\\.go|backend/.*/tests\\.go)\n      text: \"unused-parameter:\"\n\nlinters-settings:\n  importas:\n    alias:\n      - pkg: github.com/restic/restic/internal/test\n        alias: rtest\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.431640625,
          "content": "# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build HTMLZip\nformats:\n  - htmlzip\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: doc/conf.py\n\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n  - requirements: doc/requirements.txt\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 283.69140625,
          "content": "# Table of Contents\n\n* [Changelog for 0.17.3](#changelog-for-restic-0173-2024-11-08)\n* [Changelog for 0.17.2](#changelog-for-restic-0172-2024-10-27)\n* [Changelog for 0.17.1](#changelog-for-restic-0171-2024-09-05)\n* [Changelog for 0.17.0](#changelog-for-restic-0170-2024-07-26)\n* [Changelog for 0.16.5](#changelog-for-restic-0165-2024-07-01)\n* [Changelog for 0.16.4](#changelog-for-restic-0164-2024-02-04)\n* [Changelog for 0.16.3](#changelog-for-restic-0163-2024-01-14)\n* [Changelog for 0.16.2](#changelog-for-restic-0162-2023-10-29)\n* [Changelog for 0.16.1](#changelog-for-restic-0161-2023-10-24)\n* [Changelog for 0.16.0](#changelog-for-restic-0160-2023-07-31)\n* [Changelog for 0.15.2](#changelog-for-restic-0152-2023-04-24)\n* [Changelog for 0.15.1](#changelog-for-restic-0151-2023-01-30)\n* [Changelog for 0.15.0](#changelog-for-restic-0150-2023-01-12)\n* [Changelog for 0.14.0](#changelog-for-restic-0140-2022-08-25)\n* [Changelog for 0.13.0](#changelog-for-restic-0130-2022-03-26)\n* [Changelog for 0.12.1](#changelog-for-restic-0121-2021-08-03)\n* [Changelog for 0.12.0](#changelog-for-restic-0120-2021-02-14)\n* [Changelog for 0.11.0](#changelog-for-restic-0110-2020-11-05)\n* [Changelog for 0.10.0](#changelog-for-restic-0100-2020-09-19)\n* [Changelog for 0.9.6](#changelog-for-restic-096-2019-11-22)\n* [Changelog for 0.9.5](#changelog-for-restic-095-2019-04-23)\n* [Changelog for 0.9.4](#changelog-for-restic-094-2019-01-06)\n* [Changelog for 0.9.3](#changelog-for-restic-093-2018-10-13)\n* [Changelog for 0.9.2](#changelog-for-restic-092-2018-08-06)\n* [Changelog for 0.9.1](#changelog-for-restic-091-2018-06-10)\n* [Changelog for 0.9.0](#changelog-for-restic-090-2018-05-21)\n* [Changelog for 0.8.3](#changelog-for-restic-083-2018-02-26)\n* [Changelog for 0.8.2](#changelog-for-restic-082-2018-02-17)\n* [Changelog for 0.8.1](#changelog-for-restic-081-2017-12-27)\n* [Changelog for 0.8.0](#changelog-for-restic-080-2017-11-26)\n* [Changelog for 0.7.3](#changelog-for-restic-073-2017-09-20)\n* [Changelog for 0.7.2](#changelog-for-restic-072-2017-09-13)\n* [Changelog for 0.7.1](#changelog-for-restic-071-2017-07-22)\n* [Changelog for 0.7.0](#changelog-for-restic-070-2017-07-01)\n* [Changelog for 0.6.1](#changelog-for-restic-061-2017-06-01)\n* [Changelog for 0.6.0](#changelog-for-restic-060-2017-05-29)\n\n\n# Changelog for restic 0.17.3 (2024-11-08)\nThe following sections list the changes in restic 0.17.3 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4971: Fix unusable `mount` on macOS Sonoma\n * Fix #5003: Fix metadata errors during backup of removable disks on Windows\n * Fix #5101: Do not retry load/list operation if SFTP connection is broken\n * Fix #5107: Fix metadata error on Windows for backups using VSS\n * Enh #5096: Allow `prune --dry-run` without lock\n\n## Details\n\n * Bugfix #4971: Fix unusable `mount` on macOS Sonoma\n\n   On macOS Sonoma when using FUSE-T, it was not possible to access files in a\n   mounted repository. This issue is now resolved.\n\n   https://github.com/restic/restic/issues/4971\n   https://github.com/restic/restic/pull/5048\n\n * Bugfix #5003: Fix metadata errors during backup of removable disks on Windows\n\n   Since restic 0.17.0, backing up removable disks on Windows could report errors\n   with retrieving metadata like shown below.\n\n   ```\n   error: incomplete metadata for d:\\filename: get named security info failed with: Access is denied.\n   ```\n\n   This has now been fixed.\n\n   https://github.com/restic/restic/issues/5003\n   https://github.com/restic/restic/pull/5123\n   https://forum.restic.net/t/backing-up-a-folder-from-a-veracrypt-volume-brings-up-errors-since-restic-v17-0/8444\n\n * Bugfix #5101: Do not retry load/list operation if SFTP connection is broken\n\n   When using restic with the SFTP backend, backend operations that load a file or\n   list files were retried even if the SFTP connection was broken. This has now\n   been fixed.\n\n   https://github.com/restic/restic/pull/5101\n   https://forum.restic.net/t/restic-hanging-on-backup/8559\n\n * Bugfix #5107: Fix metadata error on Windows for backups using VSS\n\n   Since restic 0.17.2, when creating a backup on Windows using\n   `--use-fs-snapshot`, restic would report an error like the following:\n\n   ```\n   error: incomplete metadata for C:\\: get EA failed while opening file handle for path \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopyXX\\, with: The process cannot access the file because it is being used by another process.\n   ```\n\n   This has now been fixed by correctly handling paths that refer to volume shadow\n   copy snapshots.\n\n   https://github.com/restic/restic/issues/5107\n   https://github.com/restic/restic/pull/5110\n   https://github.com/restic/restic/pull/5112\n\n * Enhancement #5096: Allow `prune --dry-run` without lock\n\n   The `prune --dry-run --no-lock` now allows performing a dry-run without locking\n   the repository. Note that if the repository is modified concurrently, `prune`\n   may return inaccurate statistics or errors.\n\n   https://github.com/restic/restic/pull/5096\n\n\n# Changelog for restic 0.17.2 (2024-10-27)\nThe following sections list the changes in restic 0.17.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4004: Support container-level SAS/SAT tokens for Azure backend\n * Fix #5047: Resolve potential error during concurrent cache cleanup\n * Fix #5050: Return error if `tag` fails to lock repository\n * Fix #5057: Exclude irregular files from backups\n * Fix #5063: Correctly `backup` extended metadata when using VSS on Windows\n\n## Details\n\n * Bugfix #4004: Support container-level SAS/SAT tokens for Azure backend\n\n   Restic previously expected SAS/SAT tokens to be generated at the account level,\n   which prevented tokens created at the container level from being used to\n   initialize a repository. This caused an error when attempting to initialize a\n   repository with container-level tokens.\n\n   Restic now supports both account-level and container-level SAS/SAT tokens for\n   initializing a repository.\n\n   https://github.com/restic/restic/issues/4004\n   https://github.com/restic/restic/pull/5093\n\n * Bugfix #5047: Resolve potential error during concurrent cache cleanup\n\n   When multiple restic processes ran concurrently, they could compete to remove\n   obsolete snapshots from the local backend cache, sometimes leading to a \"no such\n   file or directory\" error. Restic now suppresses this error to prevent issues\n   during cache cleanup.\n\n   https://github.com/restic/restic/pull/5047\n\n * Bugfix #5050: Return error if `tag` fails to lock repository\n\n   Since restic 0.17.0, the `tag` command did not return an error when it failed to\n   open or lock the repository. This issue has now been fixed.\n\n   https://github.com/restic/restic/issues/5050\n   https://github.com/restic/restic/pull/5056\n\n * Bugfix #5057: Exclude irregular files from backups\n\n   Since restic 0.17.1, files with the type `irregular` could mistakenly be\n   included in snapshots, especially when backing up special file types on Windows\n   that restic cannot process. This issue has now been fixed.\n\n   Previously, this bug caused the `check` command to report errors like the\n   following one:\n\n   ```\n     tree 12345678[...]: node \"example.zip\" with invalid type \"irregular\"\n   ```\n\n   To repair affected snapshots, upgrade to restic 0.17.2 and run:\n\n   ```\n   restic repair snapshots --forget\n   ```\n\n   This will remove the `irregular` files from the snapshots (creating a new\n   snapshot ID for each of the affected snapshots).\n\n   https://github.com/restic/restic/pull/5057\n   https://forum.restic.net/t/errors-found-by-check-1-invalid-type-irregular-2-ciphertext-verification-failed/8447/2\n\n * Bugfix #5063: Correctly `backup` extended metadata when using VSS on Windows\n\n   On Windows, when creating a backup with the `--use-fs-snapshot` option, restic\n   read extended metadata from the original filesystem path instead of from the\n   snapshot. This could result in errors if files were removed during the backup\n   process.\n\n   This issue has now been resolved.\n\n   https://github.com/restic/restic/issues/5063\n   https://github.com/restic/restic/pull/5097\n   https://github.com/restic/restic/pull/5099\n\n\n# Changelog for restic 0.17.1 (2024-09-05)\nThe following sections list the changes in restic 0.17.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2004: Correctly handle volume names in `backup` command on Windows\n * Fix #4945: Include missing backup error text with `--json`\n * Fix #4953: Correctly handle long paths on older Windows versions\n * Fix #4957: Fix delayed cancellation of certain commands\n * Fix #4958: Don't ignore metadata-setting errors during restore\n * Fix #4969: Correctly restore timestamp for files with resource forks on macOS\n * Fix #4975: Prevent `backup --stdin-from-command` from panicking\n * Fix #4980: Skip extended attribute processing on unsupported Windows volumes\n * Fix #5004: Fix spurious \"A Required Privilege Is Not Held by the Client\" error\n * Fix #5005: Fix rare failures to retry locking a repository\n * Fix #5018: Improve HTTP/2 support for REST backend\n * Chg #4953: Also back up files with incomplete metadata\n * Enh #4795: Display progress bar for `restore --verify`\n * Enh #4934: Automatically clear removed snapshots from cache\n * Enh #4944: Print JSON-formatted errors during `restore --json`\n * Enh #4959: Return exit code 12 for \"bad password\" errors\n * Enh #4970: Make timeout for stuck requests customizable\n\n## Details\n\n * Bugfix #2004: Correctly handle volume names in `backup` command on Windows\n\n   On Windows, when the specified backup target only included the volume name\n   without a trailing slash, for example, `C:`, then restoring the resulting\n   snapshot would result in an error. Note that using `C:\\` as backup target worked\n   correctly.\n\n   Specifying volume names is now handled correctly. To restore snapshots created\n   before this bugfix, use the <snapshot>:<subpath> syntax. For example, to restore\n   a snapshot with ID `12345678` that backed up `C:`, use the following command:\n\n   ```\n   restic restore 12345678:/C/C:./ --target output/folder\n   ```\n\n   https://github.com/restic/restic/issues/2004\n   https://github.com/restic/restic/pull/5028\n\n * Bugfix #4945: Include missing backup error text with `--json`\n\n   Previously, when running a backup with the `--json` option, restic failed to\n   include the actual error message in the output, resulting in `\"error\": {}` being\n   displayed.\n\n   This has now been fixed, and restic now includes the error text in JSON output.\n\n   https://github.com/restic/restic/issues/4945\n   https://github.com/restic/restic/pull/4946\n\n * Bugfix #4953: Correctly handle long paths on older Windows versions\n\n   On older Windows versions, like Windows Server 2012, restic 0.17.0 failed to\n   back up files with long paths. This problem has now been resolved.\n\n   https://github.com/restic/restic/issues/4953\n   https://github.com/restic/restic/pull/4954\n\n * Bugfix #4957: Fix delayed cancellation of certain commands\n\n   Since restic 0.17.0, some commands did not immediately respond to cancellation\n   via Ctrl-C (SIGINT) and continued running for a short period. The most affected\n   commands were `diff`,`find`, `ls`, `stats` and `rewrite`. This is now resolved.\n\n   https://github.com/restic/restic/issues/4957\n   https://github.com/restic/restic/pull/4960\n\n * Bugfix #4958: Don't ignore metadata-setting errors during restore\n\n   Previously, restic used to ignore errors when setting timestamps, attributes, or\n   file modes during a restore. It now reports those errors, except for permission\n   related errors when running without root privileges.\n\n   https://github.com/restic/restic/pull/4958\n\n * Bugfix #4969: Correctly restore timestamp for files with resource forks on macOS\n\n   On macOS, timestamps were not restored for files with resource forks. This has\n   now been fixed.\n\n   https://github.com/restic/restic/issues/4969\n   https://github.com/restic/restic/pull/5006\n\n * Bugfix #4975: Prevent `backup --stdin-from-command` from panicking\n\n   Restic would previously crash if `--stdin-from-command` was specified without\n   providing a command. This issue has now been fixed.\n\n   https://github.com/restic/restic/issues/4975\n   https://github.com/restic/restic/pull/4976\n\n * Bugfix #4980: Skip extended attribute processing on unsupported Windows volumes\n\n   With restic 0.17.0, backups of certain Windows paths, such as network drives,\n   failed due to errors while fetching extended attributes.\n\n   Restic now skips extended attribute processing for volumes where they are not\n   supported.\n\n   https://github.com/restic/restic/issues/4955\n   https://github.com/restic/restic/issues/4950\n   https://github.com/restic/restic/pull/4980\n   https://github.com/restic/restic/pull/4998\n\n * Bugfix #5004: Fix spurious \"A Required Privilege Is Not Held by the Client\" error\n\n   On Windows, creating a backup could sometimes trigger the following error:\n\n   ```\n   error: nodeFromFileInfo [...]: get named security info failed with: a required privilege is not held by the client.\n   ```\n\n   This has now been fixed.\n\n   https://github.com/restic/restic/issues/5004\n   https://github.com/restic/restic/pull/5019\n\n * Bugfix #5005: Fix rare failures to retry locking a repository\n\n   Restic 0.17.0 could in rare cases fail to retry locking a repository if one of\n   the lock files failed to load, resulting in the error:\n\n   ```\n   unable to create lock in backend: circuit breaker open for file <lock/1234567890>\n   ```\n\n   This issue has now been addressed. The error handling now properly retries the\n   locking operation. In addition, restic waits a few seconds between locking\n   retries to increase chances of successful locking.\n\n   https://github.com/restic/restic/issues/5005\n   https://github.com/restic/restic/pull/5011\n   https://github.com/restic/restic/pull/5012\n\n * Bugfix #5018: Improve HTTP/2 support for REST backend\n\n   If `rest-server` tried to gracefully shut down an HTTP/2 connection still in use\n   by the client, it could result in the following error:\n\n   ```\n   http2: Transport: cannot retry err [http2: Transport received Server's graceful shutdown GOAWAY] after Request.Body was written; define Request.GetBody to avoid this error\n   ```\n\n   This issue has now been resolved.\n\n   https://github.com/restic/restic/pull/5018\n   https://forum.restic.net/t/receiving-http2-goaway-messages-with-windows-restic-v0-17-0/8367\n\n * Change #4953: Also back up files with incomplete metadata\n\n   If restic failed to read extended metadata for a file or folder during a backup,\n   then the file or folder was not included in the resulting snapshot. Instead, a\n   warning message was printed along with returning exit code 3 once the backup was\n   finished.\n\n   Now, restic also includes items for which the extended metadata could not be\n   read in a snapshot. The warning message has been updated to:\n\n   ```\n   incomplete metadata for /path/to/file: <details about error>\n   ```\n\n   https://github.com/restic/restic/issues/4953\n   https://github.com/restic/restic/pull/4977\n\n * Enhancement #4795: Display progress bar for `restore --verify`\n\n   When the `restore` command is run with `--verify`, it now displays a progress\n   bar while the verification step is running. The progress bar is not shown when\n   the `--json` flag is specified.\n\n   https://github.com/restic/restic/issues/4795\n   https://github.com/restic/restic/pull/4989\n\n * Enhancement #4934: Automatically clear removed snapshots from cache\n\n   Previously, restic only removed snapshots from the cache on the host where the\n   `forget` command was executed. On other hosts that use the same repository, the\n   old snapshots remained in the cache.\n\n   Restic now automatically clears old snapshots from the local cache of the\n   current host.\n\n   https://github.com/restic/restic/issues/4934\n   https://github.com/restic/restic/pull/4981\n\n * Enhancement #4944: Print JSON-formatted errors during `restore --json`\n\n   Restic used to print any `restore` errors directly to the console as freeform\n   text messages, even when using the `--json` option.\n\n   Now, when `--json` is specified, restic prints them as JSON formatted messages.\n\n   https://github.com/restic/restic/issues/4944\n   https://github.com/restic/restic/pull/4946\n\n * Enhancement #4959: Return exit code 12 for \"bad password\" errors\n\n   Restic now returns exit code 12 when it cannot open the repository due to an\n   incorrect password.\n\n   https://github.com/restic/restic/pull/4959\n\n * Enhancement #4970: Make timeout for stuck requests customizable\n\n   Restic monitors connections to the backend to detect stuck requests. If a\n   request does not return any data within five minutes, restic assumes the request\n   is stuck and retries it. However, for large repositories this timeout might be\n   insufficient to collect a list of all files, causing the following error:\n\n   `List(data) returned error, retrying after 1s: [...]: request timeout`\n\n   It is now possible to increase the timeout using the `--stuck-request-timeout`\n   option.\n\n   https://github.com/restic/restic/issues/4970\n   https://github.com/restic/restic/pull/5014\n\n\n# Changelog for restic 0.17.0 (2024-07-26)\nThe following sections list the changes in restic 0.17.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #3600: Handle unreadable xattrs in folders above `backup` source\n * Fix #4209: Fix slow SFTP upload performance\n * Fix #4503: Correct hardlink handling in `stats` command\n * Fix #4568: Prevent `forget --keep-tags <invalid>` from deleting all snapshots\n * Fix #4615: Make `find` not sometimes ignore directories\n * Fix #4656: Properly report ID of newly added keys\n * Fix #4703: Shutdown cleanly when receiving SIGTERM\n * Fix #4709: Correct `--no-lock` handling of `ls` and `tag` commands\n * Fix #4760: Fix possible error on concurrent cache cleanup\n * Fix #4850: Handle UTF-16 password files in `key` command correctly\n * Fix #4902: Update snapshot summary on `rewrite`\n * Chg #956: Return exit code 10 and 11 for non-existing and locked repository\n * Chg #4540: Require at least ARMv6 for ARM binaries\n * Chg #4602: Deprecate legacy index format and `s3legacy` repository layout\n * Chg #4627: Redesign backend error handling to improve reliability\n * Chg #4707: Disable S3 anonymous authentication by default\n * Chg #4744: Include full key ID in JSON output of `key list`\n * Enh #662: Optionally skip snapshot creation if nothing changed\n * Enh #693: Include snapshot size in `snapshots` output\n * Enh #805: Add bitrot detection to `diff` command\n * Enh #828: Improve features of the `repair packs` command\n * Enh #1786: Support repositories with empty password\n * Enh #2348: Add `--delete` option to `restore` command\n * Enh #3067: Add extended options to configure Windows Shadow Copy Service\n * Enh #3406: Improve `dump` performance for large files\n * Enh #3806: Optimize and make `prune` command resumable\n * Enh #4006: (alpha) Store deviceID only for hardlinks\n * Enh #4048: Add support for FUSE-T with `mount` on macOS\n * Enh #4251: Support reading backup from a command's standard output\n * Enh #4287: Support connection to rest-server using unix socket\n * Enh #4354: Significantly reduce `prune` memory usage\n * Enh #4437: Make `check` command create non-existent cache directory\n * Enh #4472: Support AWS Assume Role for S3 backend\n * Enh #4547: Add `--json` option to `version` command\n * Enh #4549: Add `--ncdu` option to `ls` command\n * Enh #4573: Support rewriting host and time metadata in snapshots\n * Enh #4583: Ignore `s3.storage-class` archive tiers for metadata\n * Enh #4590: Speed up `mount` command's error detection\n * Enh #4601: Add support for feature flags\n * Enh #4611: Back up more file metadata on Windows\n * Enh #4664: Make `ls` use `message_type` field in JSON output\n * Enh #4676: Make `key` command's actions separate sub-commands\n * Enh #4678: Add `--target` option to the `dump` command\n * Enh #4708: Back up and restore SecurityDescriptors on Windows\n * Enh #4733: Allow specifying `--host` via environment variable\n * Enh #4737: Include snapshot ID in `reason` field of `forget` JSON output\n * Enh #4764: Support forgetting all snapshots\n * Enh #4768: Allow specifying custom User-Agent for outgoing requests\n * Enh #4781: Add `restore` options to read include/exclude patterns from files\n * Enh #4807: Support Extended Attributes on Windows NTFS\n * Enh #4817: Make overwrite behavior of `restore` customizable\n * Enh #4839: Add dry-run support to `restore` command\n\n## Details\n\n * Bugfix #3600: Handle unreadable xattrs in folders above `backup` source\n\n   When backup sources are specified using absolute paths, `backup` also includes\n   information about the parent folders of the backup sources in the snapshot.\n\n   If the extended attributes for some of these folders could not be read due to\n   missing permissions, this caused the backup to fail. This has now been fixed.\n\n   https://github.com/restic/restic/issues/3600\n   https://github.com/restic/restic/pull/4668\n   https://forum.restic.net/t/parent-directories-above-the-snapshot-source-path-fatal-error-permission-denied/7216\n\n * Bugfix #4209: Fix slow SFTP upload performance\n\n   Since restic 0.12.1, the upload speed of the sftp backend to a remote server has\n   regressed significantly. This has now been fixed.\n\n   https://github.com/restic/restic/issues/4209\n   https://github.com/restic/restic/pull/4782\n\n * Bugfix #4503: Correct hardlink handling in `stats` command\n\n   If files on different devices had the same inode ID, the `stats` command did not\n   correctly calculate the snapshot size. This has now been fixed.\n\n   https://github.com/restic/restic/pull/4503\n   https://github.com/restic/restic/pull/4006\n   https://forum.restic.net/t/possible-bug-in-stats/6461/8\n\n * Bugfix #4568: Prevent `forget --keep-tags <invalid>` from deleting all snapshots\n\n   Running `forget --keep-tags <invalid>`, where `<invalid>` is a tag that does not\n   exist in the repository, would remove all snapshots. This is especially\n   problematic if the tag name contains a typo.\n\n   The `forget` command now fails with an error if all snapshots in a snapshot\n   group would be deleted. This prevents the above example from deleting all\n   snapshots.\n\n   It is possible to temporarily disable the new check by setting the environment\n   variable `RESTIC_FEATURES=safe-forget-keep-tags=false`. Note that this feature\n   flag will be removed in the next minor restic version.\n\n   https://github.com/restic/restic/pull/4568\n   https://github.com/restic/restic/pull/4764\n\n * Bugfix #4615: Make `find` not sometimes ignore directories\n\n   In some cases, the `find` command ignored empty or moved directories. This has\n   now been fixed.\n\n   https://github.com/restic/restic/pull/4615\n\n * Bugfix #4656: Properly report ID of newly added keys\n\n   `restic key add` now reports the ID of the newly added key. This simplifies\n   selecting a specific key using the `--key-hint key` option.\n\n   https://github.com/restic/restic/issues/4656\n   https://github.com/restic/restic/pull/4657\n\n * Bugfix #4703: Shutdown cleanly when receiving SIGTERM\n\n   Previously, when restic received the SIGTERM signal it would terminate\n   immediately, skipping cleanup and potentially causing issues like stale locks\n   being left behind. This primarily effected containerized restic invocations that\n   use SIGTERM, but could also be triggered via a simple `killall restic`.\n\n   This has now been fixed, such that restic shuts down cleanly when receiving the\n   SIGTERM signal.\n\n   https://github.com/restic/restic/pull/4703\n\n * Bugfix #4709: Correct `--no-lock` handling of `ls` and `tag` commands\n\n   The `ls` command never locked the repository. This has now been fixed, with the\n   old behavior still being supported using `ls --no-lock`. The latter invocation\n   also works with older restic versions.\n\n   The `tag` command erroneously accepted the `--no-lock` command. This command now\n   always requires an exclusive lock.\n\n   https://github.com/restic/restic/pull/4709\n\n * Bugfix #4760: Fix possible error on concurrent cache cleanup\n\n   If multiple restic processes concurrently cleaned up no longer existing files\n   from the cache, this could cause some of the processes to fail with an `no such\n   file or directory` error. This has now been fixed.\n\n   https://github.com/restic/restic/issues/4760\n   https://github.com/restic/restic/pull/4761\n\n * Bugfix #4850: Handle UTF-16 password files in `key` command correctly\n\n   Previously, `key add` and `key passwd` did not properly decode UTF-16 encoded\n   passwords read from a password file. This has now been fixed to correctly match\n   the encoding when opening a repository.\n\n   https://github.com/restic/restic/issues/4850\n   https://github.com/restic/restic/pull/4851\n\n * Bugfix #4902: Update snapshot summary on `rewrite`\n\n   Restic previously did not recalculate the total number of files and bytes\n   processed when files were excluded from a snapshot by the `rewrite` command.\n   This has now been fixed.\n\n   https://github.com/restic/restic/issues/4902\n   https://github.com/restic/restic/pull/4905\n\n * Change #956: Return exit code 10 and 11 for non-existing and locked repository\n\n   If a repository does not exist or cannot be locked, restic previously always\n   returned exit code 1. This made it difficult to distinguish these cases from\n   other errors.\n\n   Restic now returns exit code 10 if the repository does not exist, and exit code\n   11 if the repository could be not locked due to a conflicting lock.\n\n   https://github.com/restic/restic/issues/956\n   https://github.com/restic/restic/pull/4884\n\n * Change #4540: Require at least ARMv6 for ARM binaries\n\n   The official release binaries of restic now require at least ARMv6 support for\n   ARM platforms.\n\n   https://github.com/restic/restic/issues/4540\n   https://github.com/restic/restic/pull/4542\n\n * Change #4602: Deprecate legacy index format and `s3legacy` repository layout\n\n   Support for the legacy index format used by restic before version 0.2.0 has been\n   deprecated and will be removed in the next minor restic version. You can use\n   `restic repair index` to update the index to the current format.\n\n   It is possible to temporarily reenable support for the legacy index format by\n   setting the environment variable `RESTIC_FEATURES=deprecate-legacy-index=false`.\n   Note that this feature flag will be removed in the next minor restic version.\n\n   Support for the `s3legacy` repository layout used for the S3 backend before\n   restic 0.7.0 has been deprecated and will be removed in the next minor restic\n   version. You can migrate your S3 repository to the current layout using\n   `RESTIC_FEATURES=deprecate-s3-legacy-layout=false restic migrate s3_layout`.\n\n   It is possible to temporarily reenable support for the `s3legacy` layout by\n   setting the environment variable\n   `RESTIC_FEATURES=deprecate-s3-legacy-layout=false`. Note that this feature flag\n   will be removed in the next minor restic version.\n\n   https://github.com/restic/restic/issues/4602\n   https://github.com/restic/restic/pull/4724\n   https://github.com/restic/restic/pull/4743\n\n * Change #4627: Redesign backend error handling to improve reliability\n\n   Restic now downloads pack files in large chunks instead of using a streaming\n   download. This prevents failures due to interrupted streams. The `restore`\n   command now also retries downloading individual blobs that could not be\n   retrieved.\n\n   HTTP requests that are stuck for more than two minutes while uploading or\n   downloading are now forcibly interrupted. This ensures that stuck requests are\n   retried after a short timeout.\n\n   Attempts to access a missing or truncated file will no longer be retried. This\n   avoids unnecessary retries in those cases. All other backend requests are\n   retried for up to 15 minutes. This ensures that temporarily interrupted network\n   connections can be tolerated.\n\n   If a download yields a corrupt file or blob, then the download will be retried\n   once.\n\n   Most parts of the new backend error handling can temporarily be disabled by\n   setting the environment variable `RESTIC_FEATURES=backend-error-redesign=false`.\n   Note that this feature flag will be removed in the next minor restic version.\n\n   https://github.com/restic/restic/issues/4627\n   https://github.com/restic/restic/issues/4193\n   https://github.com/restic/restic/issues/4515\n   https://github.com/restic/restic/issues/1523\n   https://github.com/restic/restic/pull/4605\n   https://github.com/restic/restic/pull/4792\n   https://github.com/restic/restic/pull/4520\n   https://github.com/restic/restic/pull/4800\n   https://github.com/restic/restic/pull/4784\n   https://github.com/restic/restic/pull/4844\n\n * Change #4707: Disable S3 anonymous authentication by default\n\n   When using the S3 backend with anonymous authentication, it continuously tried\n   to retrieve new authentication credentials, causing bad performance.\n\n   Now, to use anonymous authentication, it is necessary to pass the extended\n   option `-o s3.unsafe-anonymous-auth=true` to restic.\n\n   It is possible to temporarily revert to the old behavior by setting the\n   environment variable `RESTIC_FEATURES=explicit-s3-anonymous-auth=false`. Note\n   that this feature flag will be removed in the next minor restic version.\n\n   https://github.com/restic/restic/issues/4707\n   https://github.com/restic/restic/pull/4908\n\n * Change #4744: Include full key ID in JSON output of `key list`\n\n   The JSON output of the `key list` command has changed to include the full key ID\n   instead of just a shortened version of the ID, as the latter can be ambiguous in\n   some rare cases. To derive the short ID, please truncate the full ID down to\n   eight characters.\n\n   https://github.com/restic/restic/issues/4744\n   https://github.com/restic/restic/pull/4745\n\n * Enhancement #662: Optionally skip snapshot creation if nothing changed\n\n   The `backup` command always created a snapshot even if nothing in the backup set\n   changed compared to the parent snapshot.\n\n   Restic now supports the `--skip-if-unchanged` option for the `backup` command,\n   which omits creating a snapshot if the new snapshot's content would be identical\n   to that of the parent snapshot.\n\n   https://github.com/restic/restic/issues/662\n   https://github.com/restic/restic/pull/4816\n\n * Enhancement #693: Include snapshot size in `snapshots` output\n\n   The `snapshots` command now prints the size for snapshots created using this or\n   a future restic version. To achieve this, the `backup` command now stores the\n   backup summary statistics in the snapshot.\n\n   The text output of the `snapshots` command only shows the snapshot size. The\n   other statistics are only included in the JSON output. To inspect these\n   statistics use `restic snapshots --json` or `restic cat snapshot <snapshotID>`.\n\n   https://github.com/restic/restic/issues/693\n   https://github.com/restic/restic/pull/4705\n   https://github.com/restic/restic/pull/4913\n\n * Enhancement #805: Add bitrot detection to `diff` command\n\n   The output of the `diff` command now includes the modifier `?` for files to\n   indicate bitrot in backed up files. The `?` will appear whenever there is a\n   difference in content while the metadata is exactly the same.\n\n   Since files with unchanged metadata are normally not read again when creating a\n   backup, the detection is only effective when the right-hand side of the diff has\n   been created with `backup --force`.\n\n   https://github.com/restic/restic/issues/805\n   https://github.com/restic/restic/pull/4526\n\n * Enhancement #828: Improve features of the `repair packs` command\n\n   The `repair packs` command has been improved to also be able to process\n   truncated pack files. The `check` and `check --read-data` command will provide\n   instructions on using the command if necessary to repair a repository. See the\n   guide at https://restic.readthedocs.io/en/stable/077_troubleshooting.html for\n   further instructions.\n\n   https://github.com/restic/restic/issues/828\n   https://github.com/restic/restic/pull/4644\n   https://github.com/restic/restic/pull/4882\n\n * Enhancement #1786: Support repositories with empty password\n\n   Restic previously required a password to create or operate on repositories.\n   Using the new option `--insecure-no-password` it is now possible to disable this\n   requirement. Restic will not prompt for a password when using this option.\n\n   For security reasons, the option must always be specified when operating on\n   repositories with an empty password, and specifying `--insecure-no-password`\n   while also passing a password to restic via a CLI option or environment variable\n   results in an error.\n\n   The `init` and `copy` commands add the related `--from-insecure-no-password`\n   option, which applies to the source repository. The `key add` and `key passwd`\n   commands add the `--new-insecure-no-password` option to add or set an empty\n   password.\n\n   https://github.com/restic/restic/issues/1786\n   https://github.com/restic/restic/issues/4326\n   https://github.com/restic/restic/pull/4698\n   https://github.com/restic/restic/pull/4808\n\n * Enhancement #2348: Add `--delete` option to `restore` command\n\n   The `restore` command now supports a `--delete` option that allows removing\n   files and directories from the target directory that do not exist in the\n   snapshot. This option also allows files in the snapshot to replace non-empty\n   directories having the same name.\n\n   To check that only expected files are deleted, add the `--dry-run --verbose=2`\n   options.\n\n   https://github.com/restic/restic/issues/2348\n   https://github.com/restic/restic/pull/4881\n\n * Enhancement #3067: Add extended options to configure Windows Shadow Copy Service\n\n   Previous, restic always used a 120 seconds timeout and unconditionally created\n   VSS snapshots for all volume mount points on disk. This behavior can now be\n   fine-tuned by the following new extended options (available only on Windows):\n\n   - `-o vss.timeout`: Time that VSS can spend creating snapshot before timing out\n   (default: 120s) - `-o vss.exclude-all-mount-points`: Exclude mountpoints from\n   snapshotting on all volumes (default: false) - `-o vss.exclude-volumes`:\n   Semicolon separated list of volumes to exclude from snapshotting - `-o\n   vss.provider`: VSS provider identifier which will be used for snapshotting\n\n   For example, change VSS timeout to five minutes and disable snapshotting of\n   mount points on all volumes:\n\n   Restic backup --use-fs-snapshot -o vss.timeout=5m -o\n   vss.exclude-all-mount-points=true\n\n   Exclude drive `d:`, mount point `c:\\mnt` and a specific volume from\n   snapshotting:\n\n   Restic backup --use-fs-snapshot -o\n   vss.exclude-volumes=\"d:\\;c:\\mnt\\;\\\\?\\Volume{e2e0315d-9066-4f97-8343-eb5659b35762}\"\n\n   Uses 'Microsoft Software Shadow Copy provider 1.0' instead of the default\n   provider:\n\n   Restic backup --use-fs-snapshot -o\n   vss.provider={b5946137-7b9f-4925-af80-51abd60b20d5}\n\n   https://github.com/restic/restic/pull/3067\n\n * Enhancement #3406: Improve `dump` performance for large files\n\n   The `dump` command now retrieves the data chunks for a file in parallel. This\n   improves the download performance by up to as many times as the configured\n   number of parallel backend connections.\n\n   https://github.com/restic/restic/issues/3406\n   https://github.com/restic/restic/pull/4796\n\n * Enhancement #3806: Optimize and make `prune` command resumable\n\n   Previously, if the `prune` command was interrupted, a later `prune` run would\n   start repacking pack files from the start, as `prune` did not update the index\n   while repacking.\n\n   The `prune` command now supports resuming interrupted prune runs. The update of\n   the repository index has also been optimized to use less memory and only rewrite\n   parts of the index that have changed.\n\n   https://github.com/restic/restic/issues/3806\n   https://github.com/restic/restic/pull/4812\n\n * Enhancement #4006: (alpha) Store deviceID only for hardlinks\n\n   Set `RESTIC_FEATURES=device-id-for-hardlinks` to enable this alpha feature. The\n   feature flag will be removed after repository format version 3 becomes available\n   or be replaced with a different solution.\n\n   When creating backups from a filesystem snapshot, for example created using\n   BTRFS subvolumes, the deviceID of the filesystem changes compared to previous\n   snapshots. This prevented restic from deduplicating the directory metadata of a\n   snapshot.\n\n   When this alpha feature is enabled, the deviceID is only stored for hardlinks,\n   which significantly reduces the metadata duplication for most backups.\n\n   https://github.com/restic/restic/pull/4006\n\n * Enhancement #4048: Add support for FUSE-T with `mount` on macOS\n\n   The restic `mount` command now supports creating FUSE mounts using FUSE-T on\n   macOS.\n\n   https://github.com/restic/restic/issues/4048\n   https://github.com/restic/restic/pull/4825\n\n * Enhancement #4251: Support reading backup from a command's standard output\n\n   The `backup` command now supports the `--stdin-from-command` option. When using\n   this option, the arguments to `backup` are interpreted as a command instead of\n   paths to back up. `backup` then executes the given command and stores the\n   standard output from it in the backup, similar to the what the `--stdin` option\n   does. This also enables restic to verify that the command completes with exit\n   code zero. A non-zero exit code causes the backup to fail.\n\n   Note that the `--stdin` option does not have to be specified at the same time,\n   and that the `--stdin-filename` option also applies to `--stdin-from-command`.\n\n   Example: `restic backup --stdin-from-command --stdin-filename dump.sql mysqldump\n   [...]`\n\n   https://github.com/restic/restic/issues/4251\n   https://github.com/restic/restic/pull/4410\n\n * Enhancement #4287: Support connection to rest-server using unix socket\n\n   Restic now supports using a unix socket to connect to a rest-server version\n   0.13.0 or later. This allows running restic as follows:\n\n   ```\n   rest-server --listen unix:/tmp/rest.socket --data /path/to/data &\n   restic -r rest:http+unix:///tmp/rest.socket:/my_backup_repo/ [...]\n   ```\n\n   https://github.com/restic/restic/issues/4287\n   https://github.com/restic/restic/pull/4655\n\n * Enhancement #4354: Significantly reduce `prune` memory usage\n\n   The `prune` command has been optimized to use up to 60% less memory. The memory\n   usage should now be roughly similar to creating a backup.\n\n   https://github.com/restic/restic/pull/4354\n   https://github.com/restic/restic/pull/4812\n\n * Enhancement #4437: Make `check` command create non-existent cache directory\n\n   Previously, if a custom cache directory was specified for the `check` command,\n   but the directory did not exist, `check` continued with the cache disabled.\n\n   The `check` command now attempts to create the cache directory before\n   initializing the cache.\n\n   https://github.com/restic/restic/issues/4437\n   https://github.com/restic/restic/pull/4805\n   https://github.com/restic/restic/pull/4883\n\n * Enhancement #4472: Support AWS Assume Role for S3 backend\n\n   Previously only credentials discovered via the Minio discovery methods were used\n   to authenticate.\n\n   However, there are many circumstances where the discovered credentials have\n   lower permissions and need to assume a specific role. This is now possible using\n   the following new environment variables:\n\n   - RESTIC_AWS_ASSUME_ROLE_ARN - RESTIC_AWS_ASSUME_ROLE_SESSION_NAME -\n   RESTIC_AWS_ASSUME_ROLE_EXTERNAL_ID - RESTIC_AWS_ASSUME_ROLE_REGION (defaults to\n   us-east-1) - RESTIC_AWS_ASSUME_ROLE_POLICY - RESTIC_AWS_ASSUME_ROLE_STS_ENDPOINT\n\n   https://github.com/restic/restic/issues/4472\n   https://github.com/restic/restic/pull/4474\n\n * Enhancement #4547: Add `--json` option to `version` command\n\n   Restic now supports outputting restic version along with the Go version, OS and\n   architecture used to build restic in JSON format using `version --json`.\n\n   https://github.com/restic/restic/issues/4547\n   https://github.com/restic/restic/pull/4553\n\n * Enhancement #4549: Add `--ncdu` option to `ls` command\n\n   NCDU (NCurses Disk Usage) is a tool to analyse disk usage of directories. It has\n   an option to save a directory tree and analyse it later.\n\n   The `ls` command now supports outputting snapshot information in the NCDU format\n   using the `--ncdu` option. Example usage: `restic ls latest --ncdu | ncdu -f -`\n\n   https://github.com/restic/restic/issues/4549\n   https://github.com/restic/restic/pull/4550\n   https://github.com/restic/restic/pull/4911\n\n * Enhancement #4573: Support rewriting host and time metadata in snapshots\n\n   The `rewrite` command now supports rewriting the host and/or time metadata of a\n   snapshot using the new `--new-host` and `--new-time` options.\n\n   https://github.com/restic/restic/pull/4573\n\n * Enhancement #4583: Ignore `s3.storage-class` archive tiers for metadata\n\n   Restic used to store all files on S3 using the specified `s3.storage-class`.\n\n   Now, restic will only use non-archive storage tiers for metadata, to avoid\n   problems when accessing a repository. To restore any data, it is still necessary\n   to manually warm up the required data beforehand.\n\n   NOTE: There is no official cold storage support in restic, use this option at\n   your own risk.\n\n   https://github.com/restic/restic/issues/4583\n   https://github.com/restic/restic/pull/4584\n\n * Enhancement #4590: Speed up `mount` command's error detection\n\n   The `mount` command now checks for the existence of the mountpoint before\n   opening the repository, leading to quicker error detection.\n\n   https://github.com/restic/restic/pull/4590\n\n * Enhancement #4601: Add support for feature flags\n\n   Restic now supports feature flags that can be used to enable and disable\n   experimental features. The flags can be set using the environment variable\n   `RESTIC_FEATURES`. To get a list of currently supported feature flags, use the\n   `features` command.\n\n   https://github.com/restic/restic/issues/4601\n   https://github.com/restic/restic/pull/4666\n\n * Enhancement #4611: Back up more file metadata on Windows\n\n   Previously, restic did not back up all common Windows-specific metadata.\n\n   Restic now stores file creation time and file attributes like the hidden,\n   read-only and encrypted flags when backing up files and folders on Windows.\n\n   https://github.com/restic/restic/pull/4611\n\n * Enhancement #4664: Make `ls` use `message_type` field in JSON output\n\n   The `ls` command was the only restic command that used the `struct_type` field\n   in its JSON output format to specify the message type.\n\n   The JSON output of the `ls` command now also includes the `message_type` field,\n   which is consistent with other commands. The `struct_type` field is still\n   included, but now deprecated.\n\n   https://github.com/restic/restic/pull/4664\n\n * Enhancement #4676: Make `key` command's actions separate sub-commands\n\n   Each of the `add`, `list`, `remove` and `passwd` actions provided by the `key`\n   command is now a separate sub-command and have its own documentation which can\n   be invoked using `restic key <add|list|remove|passwd> --help`.\n\n   https://github.com/restic/restic/issues/4676\n   https://github.com/restic/restic/pull/4685\n\n * Enhancement #4678: Add `--target` option to the `dump` command\n\n   Restic `dump` always printed to the standard output. It now supports specifying\n   a `--target` file to write its output to.\n\n   https://github.com/restic/restic/issues/4678\n   https://github.com/restic/restic/pull/4682\n   https://github.com/restic/restic/pull/4692\n\n * Enhancement #4708: Back up and restore SecurityDescriptors on Windows\n\n   Restic now backs up and restores SecurityDescriptors for files and folders on\n   Windows which includes owner, group, discretionary access control list (DACL)\n   and system access control list (SACL).\n\n   This requires the user to be a member of backup operators or the application\n   must be run as admin. If that is not the case, only the current user's owner,\n   group and DACL will be backed up, and during restore only the DACL of the backed\n   up file will be restored, with the current user's owner and group being set on\n   the restored file.\n\n   https://github.com/restic/restic/pull/4708\n\n * Enhancement #4733: Allow specifying `--host` via environment variable\n\n   Restic commands that operate on snapshots, such as `restic backup` and `restic\n   snapshots`, support the `--host` option to specify the hostname for grouping\n   snapshots.\n\n   Such commands now also support specifying the hostname via the environment\n   variable `RESTIC_HOST`. Note that `--host` still takes precedence over the\n   environment variable.\n\n   https://github.com/restic/restic/issues/4733\n   https://github.com/restic/restic/pull/4734\n\n * Enhancement #4737: Include snapshot ID in `reason` field of `forget` JSON output\n\n   The JSON output of the `forget` command now includes `id` and `short_id` of\n   snapshots in the `reason` field.\n\n   https://github.com/restic/restic/pull/4737\n\n * Enhancement #4764: Support forgetting all snapshots\n\n   The `forget` command now supports the `--unsafe-allow-remove-all` option, which\n   removes all snapshots in the repository.\n\n   This option must always be combined with a snapshot filter (by host, path or\n   tag). For example, the command `forget --tag example --unsafe-allow-remove-all`\n   removes all snapshots with the tag \"example\".\n\n   https://github.com/restic/restic/pull/4764\n\n * Enhancement #4768: Allow specifying custom User-Agent for outgoing requests\n\n   Restic now supports setting a custom `User-Agent` for outgoing HTTP requests\n   using the global option `--http-user-agent` or the `RESTIC_HTTP_USER_AGENT`\n   environment variable.\n\n   https://github.com/restic/restic/issues/4768\n   https://github.com/restic/restic/pull/4810\n\n * Enhancement #4781: Add `restore` options to read include/exclude patterns from files\n\n   Restic now supports reading include and exclude patterns from files using the\n   `--include-file`, `--exclude-file`, `--iinclude-file` and `--iexclude-file`\n   options of the `restore` command.\n\n   https://github.com/restic/restic/issues/4781\n   https://github.com/restic/restic/pull/4811\n\n * Enhancement #4807: Support Extended Attributes on Windows NTFS\n\n   Restic now backs up and restores Extended Attributes for files and folders on\n   Windows NTFS.\n\n   https://github.com/restic/restic/pull/4807\n\n * Enhancement #4817: Make overwrite behavior of `restore` customizable\n\n   The `restore` command now supports an `--overwrite` option to configure whether\n   already existing files are overwritten. The overwrite behavior can be configured\n   using the following option values:\n\n   - `--overwrite always` (default): Always overwrites already existing files. The\n   `restore` command will verify the existing file content and only restore\n   mismatching parts to minimize downloads. Updates the metadata of all files. -\n   `--overwrite if-changed`: Like `always`, but speeds up the file content check by\n   assuming that files with matching size and modification time (mtime) are already\n   up to date. In case of a mismatch, the full file content is verified like with\n   `always`. Updates the metadata of all files. - `--overwrite if-newer`: Like\n   `always`, but only overwrites existing files when the file in the snapshot has a\n   newer modification time (mtime) than the existing file. - `--overwrite never`:\n   Never overwrites existing files.\n\n   https://github.com/restic/restic/issues/4817\n   https://github.com/restic/restic/issues/200\n   https://github.com/restic/restic/issues/407\n   https://github.com/restic/restic/issues/2662\n   https://github.com/restic/restic/pull/4837\n   https://github.com/restic/restic/pull/4838\n   https://github.com/restic/restic/pull/4864\n   https://github.com/restic/restic/pull/4921\n\n * Enhancement #4839: Add dry-run support to `restore` command\n\n   The `restore` command now supports the `--dry-run` option to perform a dry run.\n   Pass the `--verbose=2` option to see which files would remain unchanged, and\n   which would be updated or freshly restored.\n\n   https://github.com/restic/restic/pull/4839\n\n\n# Changelog for restic 0.16.5 (2024-07-01)\nThe following sections list the changes in restic 0.16.5 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Enh #4799: Add option to force use of Azure CLI credential\n * Enh #4873: Update dependencies\n\n## Details\n\n * Enhancement #4799: Add option to force use of Azure CLI credential\n\n   A new environment variable `AZURE_FORCE_CLI_CREDENTIAL=true` allows forcing the\n   use of Azure CLI credential, ignoring other credentials like managed identity.\n\n   https://github.com/restic/restic/pull/4799\n\n * Enhancement #4873: Update dependencies\n\n   A few potentially vulnerable dependencies were updated.\n\n   https://github.com/restic/restic/issues/4873\n   https://github.com/restic/restic/pull/4878\n\n\n# Changelog for restic 0.16.4 (2024-02-04)\nThe following sections list the changes in restic 0.16.4 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4677: Downgrade zstd library to fix rare data corruption at max. compression\n * Enh #4529: Add extra verification of data integrity before upload\n\n## Details\n\n * Bugfix #4677: Downgrade zstd library to fix rare data corruption at max. compression\n\n   In restic 0.16.3, backups where the compression level was set to `max` (using\n   `--compression max`) could in rare and very specific circumstances result in\n   data corruption due to a bug in the library used for compressing data. Restic\n   0.16.1 and 0.16.2 were not affected.\n\n   Restic now uses the previous version of the library used to compress data, the\n   same version used by restic 0.16.2. Please note that the `auto` compression\n   level (which restic uses by default) was never affected, and even if you used\n   `max` compression, chances of being affected by this issue are small.\n\n   To check a repository for any corruption, run `restic check --read-data`. This\n   will download and verify the whole repository and can be used at any time to\n   completely verify the integrity of a repository. If the `check` command detects\n   anomalies, follow the suggested steps.\n\n   https://github.com/restic/restic/issues/4677\n   https://github.com/restic/restic/pull/4679\n\n * Enhancement #4529: Add extra verification of data integrity before upload\n\n   Hardware issues, or a bug in restic or its dependencies, could previously cause\n   corruption in the files restic created and stored in the repository. Detecting\n   such corruption previously required explicitly running the `check --read-data`\n   or `check --read-data-subset` commands.\n\n   To further ensure data integrity, even in the case of hardware issues or\n   software bugs, restic now performs additional verification of the files about to\n   be uploaded to the repository.\n\n   These extra checks will increase CPU usage during backups. They can therefore,\n   if absolutely necessary, be disabled using the `--no-extra-verify` global\n   option. Please note that this should be combined with more active checking using\n   the previously mentioned check commands.\n\n   https://github.com/restic/restic/issues/4529\n   https://github.com/restic/restic/pull/4681\n\n\n# Changelog for restic 0.16.3 (2024-01-14)\nThe following sections list the changes in restic 0.16.3 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4560: Improve errors for irregular files on Windows\n * Fix #4574: Support backup of deduplicated files on Windows again\n * Fix #4612: Improve error handling for `rclone` backend\n * Fix #4624: Correct `restore` progress information if an error occurs\n * Fix #4626: Improve reliability of restoring large files\n\n## Details\n\n * Bugfix #4560: Improve errors for irregular files on Windows\n\n   Since Go 1.21, most filesystem reparse points on Windows are considered to be\n   irregular files. This caused restic to show an `error: invalid node type \"\"`\n   error message for those files.\n\n   This error message has now been improved and includes the relevant file path:\n   `error: nodeFromFileInfo path/to/file: unsupported file type \"irregular\"`. As\n   irregular files are not required to behave like regular files, it is not\n   possible to provide a generic way to back up those files.\n\n   https://github.com/restic/restic/issues/4560\n   https://github.com/restic/restic/pull/4620\n   https://forum.restic.net/t/windows-backup-error-invalid-node-type/6875\n\n * Bugfix #4574: Support backup of deduplicated files on Windows again\n\n   With the official release builds of restic 0.16.1 and 0.16.2, it was not\n   possible to back up files that were deduplicated by the corresponding Windows\n   Server feature. This also applied to restic versions built using Go\n   1.21.0-1.21.4.\n\n   The Go version used to build restic has now been updated to fix this.\n\n   https://github.com/restic/restic/issues/4574\n   https://github.com/restic/restic/pull/4621\n\n * Bugfix #4612: Improve error handling for `rclone` backend\n\n   Since restic 0.16.0, if rclone encountered an error while listing files, this\n   could in rare circumstances cause restic to assume that there are no files.\n   Although unlikely, this situation could result in data loss if it were to happen\n   right when the `prune` command is listing existing snapshots.\n\n   Error handling has now been improved to detect and work around this case.\n\n   https://github.com/restic/restic/issues/4612\n   https://github.com/restic/restic/pull/4618\n\n * Bugfix #4624: Correct `restore` progress information if an error occurs\n\n   If an error occurred while restoring a snapshot, this could cause the `restore`\n   progress bar to show incorrect information. In addition, if a data file could\n   not be loaded completely, then errors would also be reported for some already\n   restored files.\n\n   Error reporting of the `restore` command has now been made more accurate.\n\n   https://github.com/restic/restic/pull/4624\n   https://forum.restic.net/t/errors-restoring-with-restic-on-windows-server-s3/6943\n\n * Bugfix #4626: Improve reliability of restoring large files\n\n   In some cases restic failed to restore large files that frequently contain the\n   same file chunk. In combination with certain backends, this could result in\n   network connection timeouts that caused incomplete restores.\n\n   Restic now includes special handling for such file chunks to ensure reliable\n   restores.\n\n   https://github.com/restic/restic/pull/4626\n   https://forum.restic.net/t/errors-restoring-with-restic-on-windows-server-s3/6943\n\n\n# Changelog for restic 0.16.2 (2023-10-29)\nThe following sections list the changes in restic 0.16.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4540: Restore ARMv5 support for ARM binaries\n * Fix #4545: Repair documentation build on Read the Docs\n\n## Details\n\n * Bugfix #4540: Restore ARMv5 support for ARM binaries\n\n   The official release binaries for restic 0.16.1 were accidentally built to\n   require ARMv7. The build process is now updated to restore support for ARMv5.\n\n   Please note that restic 0.17.0 will drop support for ARMv5 and require at least\n   ARMv6.\n\n   https://github.com/restic/restic/issues/4540\n\n * Bugfix #4545: Repair documentation build on Read the Docs\n\n   For restic 0.16.1, no documentation was available at\n   https://restic.readthedocs.io/ .\n\n   The documentation build process is now updated to work again.\n\n   https://github.com/restic/restic/pull/4545\n\n\n# Changelog for restic 0.16.1 (2023-10-24)\nThe following sections list the changes in restic 0.16.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #4513: Make `key list` command honor `--no-lock`\n * Fix #4516: Do not try to load password on command line autocomplete\n * Fix #4523: Update zstd library to fix possible data corruption at max. compression\n * Chg #4532: Update dependencies and require Go 1.19 or newer\n * Enh #229: Show progress bar while loading the index\n * Enh #4128: Automatically set `GOMAXPROCS` in resource-constrained containers\n * Enh #4480: Allow setting REST password and username via environment variables\n * Enh #4511: Include inode numbers in JSON output for `find` and `ls` commands\n * Enh #4519: Add config option to set SFTP command arguments\n\n## Details\n\n * Bugfix #4513: Make `key list` command honor `--no-lock`\n\n   The `key list` command now supports the `--no-lock` options. This allows\n   determining which keys a repo can be accessed by without the need for having\n   write access (e.g., read-only sftp access, filesystem snapshot).\n\n   https://github.com/restic/restic/issues/4513\n   https://github.com/restic/restic/pull/4514\n\n * Bugfix #4516: Do not try to load password on command line autocomplete\n\n   The command line autocompletion previously tried to load the repository\n   password. This could cause the autocompletion not to work. Now, this step gets\n   skipped.\n\n   https://github.com/restic/restic/issues/4516\n   https://github.com/restic/restic/pull/4526\n\n * Bugfix #4523: Update zstd library to fix possible data corruption at max. compression\n\n   In restic 0.16.0, backups where the compression level was set to `max` (using\n   `--compression max`) could in rare and very specific circumstances result in\n   data corruption due to a bug in the library used for compressing data.\n\n   Restic now uses the latest version of the library used to compress data, which\n   includes a fix for this issue. Please note that the `auto` compression level\n   (which restic uses by default) was never affected, and even if you used `max`\n   compression, chances of being affected by this issue were very small.\n\n   To check a repository for any corruption, run `restic check --read-data`. This\n   will download and verify the whole repository and can be used at any time to\n   completely verify the integrity of a repository. If the `check` command detects\n   anomalies, follow the suggested steps.\n\n   To simplify any needed repository repair and minimize data loss, there is also a\n   new and experimental `repair packs` command that salvages all valid data from\n   the affected pack files (see `restic help repair packs` for more information).\n\n   https://github.com/restic/restic/issues/4523\n   https://github.com/restic/restic/pull/4530\n\n * Change #4532: Update dependencies and require Go 1.19 or newer\n\n   We have updated all dependencies. Since some libraries require newer Go standard\n   library features, support for Go 1.18 has been dropped, which means that restic\n   now requires at least Go 1.19 to build.\n\n   https://github.com/restic/restic/pull/4532\n   https://github.com/restic/restic/pull/4533\n\n * Enhancement #229: Show progress bar while loading the index\n\n   Restic did not provide any feedback while loading index files. Now, there is a\n   progress bar that shows the index loading progress.\n\n   https://github.com/restic/restic/issues/229\n   https://github.com/restic/restic/pull/4419\n\n * Enhancement #4128: Automatically set `GOMAXPROCS` in resource-constrained containers\n\n   When running restic in a Linux container with CPU-usage limits, restic now\n   automatically adjusts `GOMAXPROCS`. This helps to reduce the memory consumption\n   on hosts with many CPU cores.\n\n   https://github.com/restic/restic/issues/4128\n   https://github.com/restic/restic/pull/4485\n   https://github.com/restic/restic/pull/4531\n\n * Enhancement #4480: Allow setting REST password and username via environment variables\n\n   Previously, it was only possible to specify the REST-server username and\n   password in the repository URL, or by using the `--repository-file` option. This\n   meant it was not possible to use authentication in contexts where the repository\n   URL is stored in publicly accessible way.\n\n   Restic now allows setting the username and password using the\n   `RESTIC_REST_USERNAME` and `RESTIC_REST_PASSWORD` variables.\n\n   https://github.com/restic/restic/pull/4480\n\n * Enhancement #4511: Include inode numbers in JSON output for `find` and `ls` commands\n\n   Restic used to omit the inode numbers in the JSON messages emitted for nodes by\n   the `ls` command as well as for matches by the `find` command. It now includes\n   those values whenever they are available.\n\n   https://github.com/restic/restic/pull/4511\n\n * Enhancement #4519: Add config option to set SFTP command arguments\n\n   When using the `sftp` backend, scenarios where a custom identity file was needed\n   for the SSH connection, required the full command to be specified: `-o\n   sftp.command='ssh user@host:port -i /ssh/my_private_key -s sftp'`\n\n   Now, the `-o sftp.args=...` option can be passed to restic to specify custom\n   arguments for the SSH command executed by the SFTP backend. This simplifies the\n   above example to `-o sftp.args='-i /ssh/my_private_key'`.\n\n   https://github.com/restic/restic/issues/4241\n   https://github.com/restic/restic/pull/4519\n\n\n# Changelog for restic 0.16.0 (2023-07-31)\nThe following sections list the changes in restic 0.16.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2565: Support \"unlimited\" in `forget --keep-*` options\n * Fix #3311: Support non-UTF8 paths as symlink target\n * Fix #4199: Avoid lock refresh issues on slow network connections\n * Fix #4274: Improve lock refresh handling after standby\n * Fix #4319: Correctly clean up status bar output of the `backup` command\n * Fix #4333: `generate` and `init` no longer silently ignore unexpected arguments\n * Fix #4400: Ignore missing folders in `rest` backend\n * Chg #4176: Fix JSON message type of `scan_finished` for the `backup` command\n * Chg #4201: Require Go 1.20 for Solaris builds\n * Enh #426: Show progress bar during restore\n * Enh #719: Add `--retry-lock` option\n * Enh #1495: Sort snapshots by timestamp in `restic find`\n * Enh #1759: Add `repair index` and `repair snapshots` commands\n * Enh #1926: Allow certificate paths to be passed through environment variables\n * Enh #2359: Provide multi-platform Docker images\n * Enh #2468: Add support for non-global Azure clouds\n * Enh #2679: Reduce file fragmentation for local backend\n * Enh #3328: Reduce memory usage by up to 25%\n * Enh #3397: Improve accuracy of ETA displayed during backup\n * Enh #3624: Keep oldest snapshot when there are not enough snapshots\n * Enh #3698: Add support for Managed / Workload Identity to `azure` backend\n * Enh #3871: Support `<snapshot>:<subfolder>` syntax to select subfolders\n * Enh #3941: Support `--group-by` for backup parent selection\n * Enh #4130: Cancel current command if cache becomes unusable\n * Enh #4159: Add `--human-readable` option to `ls` and `find` commands\n * Enh #4188: Include restic version in snapshot metadata\n * Enh #4220: Add `jq` binary to Docker image\n * Enh #4226: Allow specifying region of new buckets in the `gs` backend\n * Enh #4375: Add support for extended attributes on symlinks\n\n## Details\n\n * Bugfix #2565: Support \"unlimited\" in `forget --keep-*` options\n\n   Restic would previously forget snapshots that should have been kept when a\n   negative value was passed to the `--keep-*` options. Negative values are now\n   forbidden. To keep all snapshots, the special value `unlimited` is now\n   supported. For example, `--keep-monthly unlimited` will keep all monthly\n   snapshots.\n\n   https://github.com/restic/restic/issues/2565\n   https://github.com/restic/restic/pull/4234\n\n * Bugfix #3311: Support non-UTF8 paths as symlink target\n\n   Earlier restic versions did not correctly `backup` and `restore` symlinks that\n   contain a non-UTF8 target. Note that this only affected systems that still use a\n   non-Unicode encoding for filesystem paths.\n\n   The repository format is now extended to add support for such symlinks. Please\n   note that snapshots must have been created with at least restic version 0.16.0\n   for `restore` to correctly handle non-UTF8 symlink targets when restoring them.\n\n   https://github.com/restic/restic/issues/3311\n   https://github.com/restic/restic/pull/3802\n\n * Bugfix #4199: Avoid lock refresh issues on slow network connections\n\n   On network connections with a low upload speed, backups and other operations\n   could fail with the error message `Fatal: failed to refresh lock in time`.\n\n   This has now been fixed by reworking the lock refresh handling.\n\n   https://github.com/restic/restic/issues/4199\n   https://github.com/restic/restic/pull/4304\n\n * Bugfix #4274: Improve lock refresh handling after standby\n\n   If the restic process was stopped or the host running restic entered standby\n   during a long running operation such as a backup, this previously resulted in\n   the operation failing with `Fatal: failed to refresh lock in time`.\n\n   This has now been fixed such that restic first checks whether it is safe to\n   continue the current operation and only throws an error if not.\n\n   https://github.com/restic/restic/issues/4274\n   https://github.com/restic/restic/pull/4374\n\n * Bugfix #4319: Correctly clean up status bar output of the `backup` command\n\n   Due to a regression in restic 0.15.2, the status bar of the `backup` command\n   could leave some output behind. This happened if filenames were printed that are\n   wider than the current terminal width. This has now been fixed.\n\n   https://github.com/restic/restic/issues/4319\n   https://github.com/restic/restic/pull/4318\n\n * Bugfix #4333: `generate` and `init` no longer silently ignore unexpected arguments\n\n   https://github.com/restic/restic/pull/4333\n\n * Bugfix #4400: Ignore missing folders in `rest` backend\n\n   If a repository accessed via the REST backend was missing folders, then restic\n   would fail with an error while trying to list the data in the repository. This\n   has been now fixed.\n\n   https://github.com/restic/rest-server/issues/235\n   https://github.com/restic/restic/pull/4400\n\n * Change #4176: Fix JSON message type of `scan_finished` for the `backup` command\n\n   Restic incorrectly set the `message_type` of the `scan_finished` message to\n   `status` instead of `verbose_status`. This has now been corrected so that the\n   messages report the correct type.\n\n   https://github.com/restic/restic/pull/4176\n\n * Change #4201: Require Go 1.20 for Solaris builds\n\n   Building restic on Solaris now requires Go 1.20, as the library used to access\n   Azure uses the mmap syscall, which is only available on Solaris starting from Go\n   1.20. All other platforms however continue to build with Go 1.18.\n\n   https://github.com/restic/restic/pull/4201\n\n * Enhancement #426: Show progress bar during restore\n\n   The `restore` command now shows a progress report while restoring files.\n\n   Example: `[0:42] 5.76% 23 files 12.98 MiB, total 3456 files 23.54 GiB`\n\n   JSON output is now also supported.\n\n   https://github.com/restic/restic/issues/426\n   https://github.com/restic/restic/issues/3413\n   https://github.com/restic/restic/issues/3627\n   https://github.com/restic/restic/pull/3991\n   https://github.com/restic/restic/pull/4314\n   https://forum.restic.net/t/progress-bar-for-restore/5210\n\n * Enhancement #719: Add `--retry-lock` option\n\n   This option allows specifying a duration for which restic will wait if the\n   repository is already locked.\n\n   https://github.com/restic/restic/issues/719\n   https://github.com/restic/restic/pull/2214\n   https://github.com/restic/restic/pull/4107\n\n * Enhancement #1495: Sort snapshots by timestamp in `restic find`\n\n   The `find` command used to print snapshots in an arbitrary order. Restic now\n   prints snapshots sorted by timestamp.\n\n   https://github.com/restic/restic/issues/1495\n   https://github.com/restic/restic/pull/4409\n\n * Enhancement #1759: Add `repair index` and `repair snapshots` commands\n\n   The `rebuild-index` command has been renamed to `repair index`. The old name\n   will still work, but is deprecated.\n\n   When a snapshot was damaged, the only option up to now was to completely forget\n   the snapshot, even if only some unimportant files in it were damaged and other\n   files were still fine.\n\n   Restic now has a `repair snapshots` command, which can salvage any non-damaged\n   files and parts of files in the snapshots by removing damaged directories and\n   missing file contents. Please note that the damaged data may still be lost and\n   see the \"Troubleshooting\" section in the documentation for more details.\n\n   https://github.com/restic/restic/issues/1759\n   https://github.com/restic/restic/issues/1714\n   https://github.com/restic/restic/issues/1798\n   https://github.com/restic/restic/issues/2334\n   https://github.com/restic/restic/pull/2876\n   https://forum.restic.net/t/corrupted-repo-how-to-repair/799\n   https://forum.restic.net/t/recovery-options-for-damaged-repositories/1571\n\n * Enhancement #1926: Allow certificate paths to be passed through environment variables\n\n   Restic will now read paths to certificates from the environment variables\n   `RESTIC_CACERT` or `RESTIC_TLS_CLIENT_CERT` if `--cacert` or `--tls-client-cert`\n   are not specified.\n\n   https://github.com/restic/restic/issues/1926\n   https://github.com/restic/restic/pull/4384\n\n * Enhancement #2359: Provide multi-platform Docker images\n\n   The official Docker images are now built for the architectures linux/386,\n   linux/amd64, linux/arm and linux/arm64.\n\n   As an alternative to the Docker Hub, the Docker images are also available on\n   ghcr.io, the GitHub Container Registry.\n\n   https://github.com/restic/restic/issues/2359\n   https://github.com/restic/restic/issues/4269\n   https://github.com/restic/restic/pull/4364\n\n * Enhancement #2468: Add support for non-global Azure clouds\n\n   The `azure` backend previously only supported storages using the global domain\n   `core.windows.net`. This meant that backups to other domains such as Azure China\n   (`core.chinacloudapi.cn`) or Azure Germany (`core.cloudapi.de`) were not\n   supported. Restic now allows overriding the global domain using the environment\n   variable `AZURE_ENDPOINT_SUFFIX`.\n\n   https://github.com/restic/restic/issues/2468\n   https://github.com/restic/restic/pull/4387\n\n * Enhancement #2679: Reduce file fragmentation for local backend\n\n   Before this change, local backend files could become fragmented. Now restic will\n   try to preallocate space for pack files to avoid their fragmentation.\n\n   https://github.com/restic/restic/issues/2679\n   https://github.com/restic/restic/pull/3261\n\n * Enhancement #3328: Reduce memory usage by up to 25%\n\n   The in-memory index has been optimized to be more garbage collection friendly.\n   Restic now defaults to `GOGC=50` to run the Go garbage collector more\n   frequently.\n\n   https://github.com/restic/restic/issues/3328\n   https://github.com/restic/restic/pull/4352\n   https://github.com/restic/restic/pull/4353\n\n * Enhancement #3397: Improve accuracy of ETA displayed during backup\n\n   Restic's `backup` command displayed an ETA that did not adapt when the rate of\n   progress made during the backup changed during the course of the backup.\n\n   Restic now uses recent progress when computing the ETA. It is important to\n   realize that the estimate may still be wrong, because restic cannot predict the\n   future, but the hope is that the ETA will be more accurate in most cases.\n\n   https://github.com/restic/restic/issues/3397\n   https://github.com/restic/restic/pull/3563\n\n * Enhancement #3624: Keep oldest snapshot when there are not enough snapshots\n\n   The `forget` command now additionally preserves the oldest snapshot if fewer\n   snapshots than allowed by the `--keep-*` parameters would otherwise be kept.\n   This maximizes the amount of history kept within the specified limits.\n\n   https://github.com/restic/restic/issues/3624\n   https://github.com/restic/restic/pull/4366\n   https://forum.restic.net/t/keeping-yearly-snapshots-policy-when-backup-began-during-the-year/4670/2\n\n * Enhancement #3698: Add support for Managed / Workload Identity to `azure` backend\n\n   Restic now additionally supports authenticating to Azure using Workload Identity\n   or Managed Identity credentials, which are automatically injected in several\n   environments such as a managed Kubernetes cluster.\n\n   https://github.com/restic/restic/issues/3698\n   https://github.com/restic/restic/pull/4029\n\n * Enhancement #3871: Support `<snapshot>:<subfolder>` syntax to select subfolders\n\n   Commands like `diff` or `restore` always worked with the full snapshot. This did\n   not allow comparing only a specific subfolder or only restoring that folder\n   (`restore --include subfolder` filters the restored files, but still creates the\n   directories included in `subfolder`).\n\n   The commands `diff`, `dump`, `ls` and `restore` now support the\n   `<snapshot>:<subfolder>` syntax, where `snapshot` is the ID of a snapshot (or\n   the string `latest`) and `subfolder` is a path within the snapshot. The commands\n   will then only work with the specified path of the snapshot. The `subfolder`\n   must be a path to a folder as returned by `ls`. Two examples:\n\n   `restic restore -t target latest:/some/path` `restic diff 12345678:/some/path\n   90abcef:/some/path`\n\n   For debugging purposes, the `cat` command now supports `cat tree\n   <snapshot>:<subfolder>` to return the directory metadata for the given\n   subfolder.\n\n   https://github.com/restic/restic/issues/3871\n   https://github.com/restic/restic/pull/4334\n\n * Enhancement #3941: Support `--group-by` for backup parent selection\n\n   Previously, the `backup` command by default selected the parent snapshot based\n   on the hostname and the backup paths. When the backup path list changed, the\n   `backup` command was unable to determine a suitable parent snapshot and had to\n   read all files again.\n\n   The new `--group-by` option for the `backup` command allows filtering snapshots\n   for the parent selection by `host`, `paths` and `tags`. It defaults to\n   `host,paths` which selects the latest snapshot with hostname and paths matching\n   those of the backup run. This matches the behavior of prior restic versions.\n\n   The new `--group-by` option should be set to the same value as passed to `forget\n   --group-by`.\n\n   https://github.com/restic/restic/issues/3941\n   https://github.com/restic/restic/pull/4081\n\n * Enhancement #4130: Cancel current command if cache becomes unusable\n\n   If the cache directory was removed or ran out of space while restic was running,\n   this would previously cause further caching attempts to fail and thereby\n   drastically slow down the command execution. Now, the currently running command\n   is instead canceled.\n\n   https://github.com/restic/restic/issues/4130\n   https://github.com/restic/restic/pull/4166\n\n * Enhancement #4159: Add `--human-readable` option to `ls` and `find` commands\n\n   Previously, when using the `-l` option with the `ls` and `find` commands, the\n   displayed size was always in bytes, without an option for a more human readable\n   format such as MiB or GiB.\n\n   The new `--human-readable` option will convert longer size values into more\n   human friendly values with an appropriate suffix depending on the output size.\n   For example, a size of `14680064` will be shown as `14.000 MiB`.\n\n   https://github.com/restic/restic/issues/4159\n   https://github.com/restic/restic/pull/4351\n\n * Enhancement #4188: Include restic version in snapshot metadata\n\n   The restic version used to backup a snapshot is now included in its metadata and\n   shown when inspecting a snapshot using `restic cat snapshot <snapshotID>` or\n   `restic snapshots --json`.\n\n   https://github.com/restic/restic/issues/4188\n   https://github.com/restic/restic/pull/4378\n\n * Enhancement #4220: Add `jq` binary to Docker image\n\n   The Docker image now contains `jq`, which can be useful to process JSON data\n   output by restic.\n\n   https://github.com/restic/restic/pull/4220\n\n * Enhancement #4226: Allow specifying region of new buckets in the `gs` backend\n\n   Previously, buckets used by the Google Cloud Storage backend would always get\n   created in the \"us\" region. It is now possible to specify the region where a\n   bucket should be created by using the `-o gs.region=us` option.\n\n   https://github.com/restic/restic/pull/4226\n\n * Enhancement #4375: Add support for extended attributes on symlinks\n\n   Restic now supports extended attributes on symlinks when backing up, restoring,\n   or FUSE-mounting snapshots. This includes, for example, the `security.selinux`\n   xattr on Linux distributions that use SELinux.\n\n   https://github.com/restic/restic/issues/4375\n   https://github.com/restic/restic/pull/4379\n\n\n# Changelog for restic 0.15.2 (2023-04-24)\nThe following sections list the changes in restic 0.15.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Sec #4275: Update golang.org/x/net to address CVE-2022-41723\n * Fix #2260: Sanitize filenames printed by `backup` during processing\n * Fix #4211: Make `dump` interpret `--host` and `--path` correctly\n * Fix #4239: Correct number of blocks reported in mount point\n * Fix #4253: Minimize risk of spurious filesystem loops with `mount`\n * Enh #4180: Add release binaries for riscv64 architecture on Linux\n * Enh #4219: Upgrade Minio to version 7.0.49\n\n## Details\n\n * Security #4275: Update golang.org/x/net to address CVE-2022-41723\n\n   https://github.com/restic/restic/issues/4275\n   https://github.com/restic/restic/pull/4213\n\n * Bugfix #2260: Sanitize filenames printed by `backup` during processing\n\n   The `backup` command would previously not sanitize the filenames it printed\n   during processing, potentially causing newlines or terminal control characters\n   to mangle the status output or even change the state of a terminal.\n\n   Filenames are now checked and quoted if they contain non-printable or\n   non-Unicode characters.\n\n   https://github.com/restic/restic/issues/2260\n   https://github.com/restic/restic/issues/4191\n   https://github.com/restic/restic/pull/4192\n\n * Bugfix #4211: Make `dump` interpret `--host` and `--path` correctly\n\n   A regression in restic 0.15.0 caused `dump` to confuse its `--host=<host>` and\n   `--path=<path>` options: it looked for snapshots with paths called `<host>` from\n   hosts called `<path>`. It now treats the options as intended.\n\n   https://github.com/restic/restic/issues/4211\n   https://github.com/restic/restic/pull/4212\n\n * Bugfix #4239: Correct number of blocks reported in mount point\n\n   Restic mount points reported an incorrect number of 512-byte (POSIX standard)\n   blocks for files and links due to a rounding bug. In particular, empty files\n   were reported as taking one block instead of zero.\n\n   The rounding is now fixed: the number of blocks reported is the file size (or\n   link target size) divided by 512 and rounded up to a whole number.\n\n   https://github.com/restic/restic/issues/4239\n   https://github.com/restic/restic/pull/4240\n\n * Bugfix #4253: Minimize risk of spurious filesystem loops with `mount`\n\n   When a backup contains a directory that has the same name as its parent, say\n   `a/b/b`, and the GNU `find` command was run on this backup in a restic mount,\n   `find` would refuse to traverse the lowest `b` directory, instead printing `File\n   system loop detected`. This was due to the way the restic mount command\n   generates inode numbers for directories in the mount point.\n\n   The rule for generating these inode numbers was changed in 0.15.0. It has now\n   been changed again to avoid this issue. A perfect rule does not exist, but the\n   probability of this behavior occurring is now extremely small.\n\n   When it does occur, the mount point is not broken, and scripts that traverse the\n   mount point should work as long as they don't rely on inode numbers for\n   detecting filesystem loops.\n\n   https://github.com/restic/restic/issues/4253\n   https://github.com/restic/restic/pull/4255\n\n * Enhancement #4180: Add release binaries for riscv64 architecture on Linux\n\n   Builds for the `riscv64` architecture on Linux are now included in the release\n   binaries.\n\n   https://github.com/restic/restic/pull/4180\n\n * Enhancement #4219: Upgrade Minio to version 7.0.49\n\n   The upgraded version now allows use of the `ap-southeast-4` region (Melbourne).\n\n   https://github.com/restic/restic/pull/4219\n\n\n# Changelog for restic 0.15.1 (2023-01-30)\nThe following sections list the changes in restic 0.15.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #3750: Remove `b2_download_file_by_name: 404` warning from B2 backend\n * Fix #4147: Make `prune --quiet` not print progress bar\n * Fix #4163: Make `self-update --output` work with new filename on Windows\n * Fix #4167: Add missing ETA in `backup` progress bar\n * Enh #4143: Ignore empty lock files\n\n## Details\n\n * Bugfix #3750: Remove `b2_download_file_by_name: 404` warning from B2 backend\n\n   In some cases the B2 backend could print `b2_download_file_by_name: 404: :\n   b2.b2err` warnings. These are only debug messages and can be safely ignored.\n\n   Restic now uses an updated library for accessing B2, which removes the warning.\n\n   https://github.com/restic/restic/issues/3750\n   https://github.com/restic/restic/issues/4144\n   https://github.com/restic/restic/pull/4146\n\n * Bugfix #4147: Make `prune --quiet` not print progress bar\n\n   A regression in restic 0.15.0 caused `prune --quiet` to show a progress bar\n   while deciding how to process each pack files. This has now been fixed.\n\n   https://github.com/restic/restic/issues/4147\n   https://github.com/restic/restic/pull/4153\n\n * Bugfix #4163: Make `self-update --output` work with new filename on Windows\n\n   Since restic 0.14.0 the `self-update` command did not work when a custom output\n   filename was specified via the `--output` option. This has now been fixed.\n\n   As a workaround, either use an older restic version to run the self-update or\n   create an empty file with the output filename before updating e.g. using CMD:\n\n   `type nul > new-file.exe` `restic self-update --output new-file.exe`\n\n   https://github.com/restic/restic/pull/4163\n   https://forum.restic.net/t/self-update-windows-started-failing-after-release-of-0-15/5836\n\n * Bugfix #4167: Add missing ETA in `backup` progress bar\n\n   A regression in restic 0.15.0 caused the ETA to be missing from the progress bar\n   displayed by the `backup` command. This has now been fixed.\n\n   https://github.com/restic/restic/pull/4167\n\n * Enhancement #4143: Ignore empty lock files\n\n   With restic 0.15.0 the checks for stale locks became much stricter than before.\n   In particular, empty or unreadable locks were no longer silently ignored. This\n   made restic to complain with `Load(<lock/1234567812>, 0, 0) returned error,\n   retrying after 552.330144ms: load(<lock/1234567812>): invalid data returned` and\n   fail in the end.\n\n   The error message is now clarified and the implementation changed to ignore\n   empty lock files which are sometimes created as the result of a failed uploads\n   on some backends.\n\n   Please note that unreadable lock files still have to cleaned up manually. To do\n   so, you can run `restic unlock --remove-all` which removes all existing lock\n   files. But first make sure that no other restic process is currently using the\n   repository.\n\n   https://github.com/restic/restic/issues/4143\n   https://github.com/restic/restic/pull/4152\n\n\n# Changelog for restic 0.15.0 (2023-01-12)\nThe following sections list the changes in restic 0.15.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2015: Make `mount` return exit code 0 after receiving Ctrl-C / SIGINT\n * Fix #2578: Make `restore` replace existing symlinks\n * Fix #2591: Don't read password from stdin for `backup --stdin`\n * Fix #3161: Delete files on Backblaze B2 more reliably\n * Fix #3336: Make SFTP backend report no space left on device\n * Fix #3567: Improve handling of interrupted syscalls in `mount` command\n * Fix #3897: Fix stuck `copy` command when `-o <backend>.connections=1`\n * Fix #3918: Correct prune statistics for partially compressed repositories\n * Fix #3951: Make `ls` return exit code 1 if snapshot cannot be loaded\n * Fix #4003: Make `backup` no longer hang on Solaris when seeing a FIFO file\n * Fix #4016: Support ExFAT-formatted local backends on macOS Ventura\n * Fix #4085: Make `init` ignore \"Access Denied\" errors when creating S3 buckets\n * Fix #4100: Make `self-update` enabled by default only in release builds\n * Fix #4103: Don't generate negative UIDs and GIDs in tar files from `dump`\n * Chg #2724: Include full snapshot ID in JSON output of `backup`\n * Chg #3929: Make `unlock` display message only when locks were actually removed\n * Chg #4033: Don't print skipped snapshots by default in `copy` command\n * Chg #4041: Update dependencies and require Go 1.18 or newer\n * Enh #14: Implement `rewrite` command\n * Enh #79: Restore files with long runs of zeros as sparse files\n * Enh #1078: Support restoring symbolic links on Windows\n * Enh #1734: Inform about successful retries after errors\n * Enh #1866: Improve handling of directories with duplicate entries\n * Enh #2134: Support B2 API keys restricted to hiding but not deleting files\n * Enh #2152: Make `init` open only one connection for the SFTP backend\n * Enh #2533: Handle cache corruption on disk and in downloads\n * Enh #2715: Stricter repository lock handling\n * Enh #2750: Make backup file read concurrency configurable\n * Enh #3029: Add support for `credential_process` to S3 backend\n * Enh #3096: Make `mount` command support macOS using macFUSE 4.x\n * Enh #3124: Support JSON output for the `init` command\n * Enh #3899: Optimize prune memory usage\n * Enh #3905: Improve speed of parent snapshot detection in `backup` command\n * Enh #3915: Add compression statistics to the `stats` command\n * Enh #3925: Provide command completion for PowerShell\n * Enh #3931: Allow `backup` file tree scanner to be disabled\n * Enh #3932: Improve handling of ErrDot errors in rclone and sftp backends\n * Enh #3943: Ignore additional/unknown files in repository\n * Enh #3955: Improve `backup` performance for small files\n\n## Details\n\n * Bugfix #2015: Make `mount` return exit code 0 after receiving Ctrl-C / SIGINT\n\n   To stop the `mount` command, a user has to press Ctrl-C or send a SIGINT signal\n   to restic. This used to cause restic to exit with a non-zero exit code.\n\n   The exit code has now been changed to zero as the above is the expected way to\n   stop the `mount` command and should therefore be considered successful.\n\n   https://github.com/restic/restic/issues/2015\n   https://github.com/restic/restic/pull/3894\n\n * Bugfix #2578: Make `restore` replace existing symlinks\n\n   When restoring a symlink, restic used to report an error if the target path\n   already existed. This has now been fixed such that the potentially existing\n   target path is first removed before the symlink is restored.\n\n   https://github.com/restic/restic/issues/2578\n   https://github.com/restic/restic/pull/3780\n\n * Bugfix #2591: Don't read password from stdin for `backup --stdin`\n\n   The `backup` command when used with `--stdin` previously tried to read first the\n   password, then the data to be backed up from standard input. This meant it would\n   often confuse part of the data for the password.\n\n   From now on, it will instead exit with the message `Fatal: cannot read both\n   password and data from stdin` unless the password is passed in some other way\n   (such as `--restic-password-file`, `RESTIC_PASSWORD`, etc).\n\n   To enter the password interactively a password command has to be used. For\n   example on Linux, `mysqldump somedatabase | restic backup --stdin\n   --password-command='sh -c \"systemd-ask-password < /dev/tty\"'` securely reads the\n   password from the terminal.\n\n   https://github.com/restic/restic/issues/2591\n   https://github.com/restic/restic/pull/4011\n\n * Bugfix #3161: Delete files on Backblaze B2 more reliably\n\n   Restic used to only delete the latest version of files stored in B2. In most\n   cases this worked well as there was only a single version of the file. However,\n   due to retries while uploading it is possible for multiple file versions to be\n   stored at B2. This could lead to various problems for files that should have\n   been deleted but still existed.\n\n   The implementation has now been changed to delete all versions of files, which\n   doubles the amount of Class B transactions necessary to delete files, but\n   assures that no file versions are left behind.\n\n   https://github.com/restic/restic/issues/3161\n   https://github.com/restic/restic/pull/3885\n\n * Bugfix #3336: Make SFTP backend report no space left on device\n\n   Backing up to an SFTP backend would spew repeated SSH_FX_FAILURE messages when\n   the remote disk was full. Restic now reports \"sftp: no space left on device\" and\n   exits immediately when it detects this condition.\n\n   A fix for this issue was implemented in restic 0.12.1, but unfortunately the fix\n   itself contained a bug that prevented it from taking effect.\n\n   https://github.com/restic/restic/issues/3336\n   https://github.com/restic/restic/pull/3345\n   https://github.com/restic/restic/pull/4075\n\n * Bugfix #3567: Improve handling of interrupted syscalls in `mount` command\n\n   Accessing restic's FUSE mount could result in \"input/output\" errors when using\n   programs in which syscalls can be interrupted. This is for example the case for\n   Go programs. This has now been fixed by improved error handling of interrupted\n   syscalls.\n\n   https://github.com/restic/restic/issues/3567\n   https://github.com/restic/restic/issues/3694\n   https://github.com/restic/restic/pull/3875\n\n * Bugfix #3897: Fix stuck `copy` command when `-o <backend>.connections=1`\n\n   When running the `copy` command with `-o <backend>.connections=1` the command\n   would be infinitely stuck. This has now been fixed.\n\n   https://github.com/restic/restic/issues/3897\n   https://github.com/restic/restic/pull/3898\n\n * Bugfix #3918: Correct prune statistics for partially compressed repositories\n\n   In a partially compressed repository, one data blob can exist both in an\n   uncompressed and a compressed version. This caused the `prune` statistics to\n   become inaccurate and e.g. report a too high value for the unused size, such as\n   \"unused size after prune: 16777215.991 TiB\". This has now been fixed.\n\n   https://github.com/restic/restic/issues/3918\n   https://github.com/restic/restic/pull/3980\n\n * Bugfix #3951: Make `ls` return exit code 1 if snapshot cannot be loaded\n\n   The `ls` command used to show a warning and return exit code 0 when failing to\n   load a snapshot. This has now been fixed such that it instead returns exit code\n   1 (still showing a warning).\n\n   https://github.com/restic/restic/pull/3951\n\n * Bugfix #4003: Make `backup` no longer hang on Solaris when seeing a FIFO file\n\n   The `backup` command used to hang on Solaris whenever it encountered a FIFO file\n   (named pipe), due to a bug in the handling of extended attributes. This bug has\n   now been fixed.\n\n   https://github.com/restic/restic/issues/4003\n   https://github.com/restic/restic/pull/4053\n\n * Bugfix #4016: Support ExFAT-formatted local backends on macOS Ventura\n\n   ExFAT-formatted disks could not be used as local backends starting from macOS\n   Ventura. Restic commands would fail with an \"inappropriate ioctl for device\"\n   error. This has now been fixed.\n\n   https://github.com/restic/restic/issues/4016\n   https://github.com/restic/restic/pull/4021\n\n * Bugfix #4085: Make `init` ignore \"Access Denied\" errors when creating S3 buckets\n\n   In restic 0.9.0 through 0.13.0, the `init` command ignored some permission\n   errors from S3 backends when trying to check for bucket existence, so that\n   manually created buckets with custom permissions could be used for backups.\n\n   This feature became broken in 0.14.0, but has now been restored again.\n\n   https://github.com/restic/restic/issues/4085\n   https://github.com/restic/restic/pull/4086\n\n * Bugfix #4100: Make `self-update` enabled by default only in release builds\n\n   The `self-update` command was previously included by default in all builds of\n   restic as opposed to only in official release builds, even if the `selfupdate`\n   tag was not explicitly enabled when building.\n\n   This has now been corrected, and the `self-update` command is only available if\n   restic was built with `-tags selfupdate` (as done for official release builds by\n   `build.go`).\n\n   https://github.com/restic/restic/pull/4100\n\n * Bugfix #4103: Don't generate negative UIDs and GIDs in tar files from `dump`\n\n   When using a 32-bit build of restic, the `dump` command could in some cases\n   create tar files containing negative UIDs and GIDs, which cannot be read by GNU\n   tar. This corner case especially applies to backups from stdin on Windows.\n\n   This is now fixed such that `dump` creates valid tar files in these cases too.\n\n   https://github.com/restic/restic/issues/4103\n   https://github.com/restic/restic/pull/4104\n\n * Change #2724: Include full snapshot ID in JSON output of `backup`\n\n   We have changed the JSON output of the backup command to include the full\n   snapshot ID instead of just a shortened version, as the latter can be ambiguous\n   in some rare cases. To derive the short ID, please truncate the full ID down to\n   eight characters.\n\n   https://github.com/restic/restic/issues/2724\n   https://github.com/restic/restic/pull/3993\n\n * Change #3929: Make `unlock` display message only when locks were actually removed\n\n   The `unlock` command used to print the \"successfully removed locks\" message\n   whenever it was run, regardless of lock files having being removed or not.\n\n   This has now been changed such that it only prints the message if any lock files\n   were actually removed. In addition, it also reports the number of removed lock\n   files.\n\n   https://github.com/restic/restic/issues/3929\n   https://github.com/restic/restic/pull/3935\n\n * Change #4033: Don't print skipped snapshots by default in `copy` command\n\n   The `copy` command used to print each snapshot that was skipped because it\n   already existed in the target repository. The amount of this output could\n   practically bury the list of snapshots that were actually copied.\n\n   From now on, the skipped snapshots are by default not printed at all, but this\n   can be re-enabled by increasing the verbosity level of the command.\n\n   https://github.com/restic/restic/issues/4033\n   https://github.com/restic/restic/pull/4066\n\n * Change #4041: Update dependencies and require Go 1.18 or newer\n\n   Most dependencies have been updated. Since some libraries require newer language\n   features, support for Go 1.15-1.17 has been dropped, which means that restic now\n   requires at least Go 1.18 to build.\n\n   https://github.com/restic/restic/pull/4041\n\n * Enhancement #14: Implement `rewrite` command\n\n   Restic now has a `rewrite` command which allows to rewrite existing snapshots to\n   remove unwanted files.\n\n   https://github.com/restic/restic/issues/14\n   https://github.com/restic/restic/pull/2731\n   https://github.com/restic/restic/pull/4079\n\n * Enhancement #79: Restore files with long runs of zeros as sparse files\n\n   When using `restore --sparse`, the restorer may now write files containing long\n   runs of zeros as sparse files (also called files with holes), where the zeros\n   are not actually written to disk.\n\n   How much space is saved by writing sparse files depends on the operating system,\n   file system and the distribution of zeros in the file.\n\n   During backup restic still reads the whole file including sparse regions, but\n   with optimized processing speed of sparse regions.\n\n   https://github.com/restic/restic/issues/79\n   https://github.com/restic/restic/issues/3903\n   https://github.com/restic/restic/pull/2601\n   https://github.com/restic/restic/pull/3854\n   https://forum.restic.net/t/sparse-file-support/1264\n\n * Enhancement #1078: Support restoring symbolic links on Windows\n\n   The `restore` command now supports restoring symbolic links on Windows. Because\n   of Windows specific restrictions this is only possible when running restic with\n   the `SeCreateSymbolicLinkPrivilege` privilege or as an administrator.\n\n   https://github.com/restic/restic/issues/1078\n   https://github.com/restic/restic/issues/2699\n   https://github.com/restic/restic/pull/2875\n\n * Enhancement #1734: Inform about successful retries after errors\n\n   When a recoverable error is encountered, restic shows a warning message saying\n   that it's retrying, e.g.:\n\n   `Save(<data/956b9ced99>) returned error, retrying after 357.131936ms: ...`\n\n   This message can be confusing in that it never clearly states whether the retry\n   is successful or not. This has now been fixed such that restic follows up with a\n   message confirming a successful retry, e.g.:\n\n   `Save(<data/956b9ced99>) operation successful after 1 retries`\n\n   https://github.com/restic/restic/issues/1734\n   https://github.com/restic/restic/pull/2661\n\n * Enhancement #1866: Improve handling of directories with duplicate entries\n\n   If for some reason a directory contains a duplicate entry, the `backup` command\n   would previously fail with a `node \"path/to/file\" already present` or `nodes are\n   not ordered got \"path/to/file\", last \"path/to/file\"` error.\n\n   The error handling has been improved to only report a warning in this case. Make\n   sure to check that the filesystem in question is not damaged if you see this!\n\n   https://github.com/restic/restic/issues/1866\n   https://github.com/restic/restic/issues/3937\n   https://github.com/restic/restic/pull/3880\n\n * Enhancement #2134: Support B2 API keys restricted to hiding but not deleting files\n\n   When the B2 backend does not have the necessary permissions to permanently\n   delete files, it now automatically falls back to hiding files. This allows using\n   restic with an application key which is not allowed to delete files. This can\n   prevent an attacker from deleting backups with such an API key.\n\n   To use this feature create an application key without the `deleteFiles`\n   capability. It is recommended to restrict the key to just one bucket. For\n   example using the `b2` command line tool:\n\n   `b2 create-key --bucket <bucketName> <keyName>\n   listBuckets,readFiles,writeFiles,listFiles`\n\n   Alternatively, you can use the S3 backend to access B2, as described in the\n   documentation. In this mode, files are also only hidden instead of being deleted\n   permanently.\n\n   https://github.com/restic/restic/issues/2134\n   https://github.com/restic/restic/pull/2398\n\n * Enhancement #2152: Make `init` open only one connection for the SFTP backend\n\n   The `init` command using the SFTP backend used to connect twice to the\n   repository. This could be inconvenient if the user must enter a password, or\n   cause `init` to fail if the server does not correctly close the first SFTP\n   connection.\n\n   This has now been fixed by reusing the first/initial SFTP connection opened.\n\n   https://github.com/restic/restic/issues/2152\n   https://github.com/restic/restic/pull/3882\n\n * Enhancement #2533: Handle cache corruption on disk and in downloads\n\n   In rare situations, like for example after a system crash, the data stored in\n   the cache might be corrupted. This could cause restic to fail and required\n   manually deleting the cache.\n\n   Restic now automatically removes broken data from the cache, allowing it to\n   recover from such a situation without user intervention. In addition, restic\n   retries downloads which return corrupt data in order to also handle temporary\n   download problems.\n\n   https://github.com/restic/restic/issues/2533\n   https://github.com/restic/restic/pull/3521\n\n * Enhancement #2715: Stricter repository lock handling\n\n   Previously, restic commands kept running even if they failed to refresh their\n   locks in time. This could be a problem e.g. in case the client system running a\n   backup entered the standby power mode while the backup was still in progress\n   (which would prevent the client from refreshing its lock), and after a short\n   delay another host successfully runs `unlock` and `prune` on the repository,\n   which would remove all data added by the in-progress backup. If the backup\n   client later continues its backup, even though its lock had expired in the\n   meantime, this would lead to an incomplete snapshot.\n\n   To address this, lock handling is now much stricter. Commands requiring a lock\n   are canceled if the lock is not refreshed successfully in time. In addition, if\n   a lock file is not readable restic will not allow starting a command. It may be\n   necessary to remove invalid lock files manually or use `unlock --remove-all`.\n   Please make sure that no other restic processes are running concurrently before\n   doing this, however.\n\n   https://github.com/restic/restic/issues/2715\n   https://github.com/restic/restic/pull/3569\n\n * Enhancement #2750: Make backup file read concurrency configurable\n\n   The `backup` command now supports a `--read-concurrency` option which allows\n   tuning restic for very fast storage like NVMe disks by controlling the number of\n   concurrent file reads during the backup process.\n\n   https://github.com/restic/restic/pull/2750\n\n * Enhancement #3029: Add support for `credential_process` to S3 backend\n\n   Restic now uses a newer library for the S3 backend, which adds support for the\n   `credential_process` option in the AWS credential configuration.\n\n   https://github.com/restic/restic/issues/3029\n   https://github.com/restic/restic/issues/4034\n   https://github.com/restic/restic/pull/4025\n\n * Enhancement #3096: Make `mount` command support macOS using macFUSE 4.x\n\n   Restic now uses a different FUSE library for mounting snapshots and making them\n   available as a FUSE filesystem using the `mount` command. This adds support for\n   macFUSE 4.x which can be used to make this work on recent macOS versions.\n\n   https://github.com/restic/restic/issues/3096\n   https://github.com/restic/restic/pull/4024\n\n * Enhancement #3124: Support JSON output for the `init` command\n\n   The `init` command used to ignore the `--json` option, but now outputs a JSON\n   message if the repository was created successfully.\n\n   https://github.com/restic/restic/issues/3124\n   https://github.com/restic/restic/pull/3132\n\n * Enhancement #3899: Optimize prune memory usage\n\n   The `prune` command needs large amounts of memory in order to determine what to\n   keep and what to remove. This is now optimized to use up to 30% less memory.\n\n   https://github.com/restic/restic/pull/3899\n\n * Enhancement #3905: Improve speed of parent snapshot detection in `backup` command\n\n   Backing up a large number of files using `--files-from-verbatim` or\n   `--files-from-raw` options could require a long time to find the parent\n   snapshot. This has been improved.\n\n   https://github.com/restic/restic/pull/3905\n\n * Enhancement #3915: Add compression statistics to the `stats` command\n\n   When executed with `--mode raw-data` on a repository that supports compression,\n   the `stats` command now calculates and displays, for the selected repository or\n   snapshots: the uncompressed size of the data; the compression progress\n   (percentage of data that has been compressed); the compression ratio of the\n   compressed data; the total space saving.\n\n   It also takes into account both the compressed and uncompressed data if the\n   repository is only partially compressed.\n\n   https://github.com/restic/restic/pull/3915\n\n * Enhancement #3925: Provide command completion for PowerShell\n\n   Restic already provided generation of completion files for bash, fish and zsh.\n   Now powershell is supported, too.\n\n   https://github.com/restic/restic/pull/3925/files\n\n * Enhancement #3931: Allow `backup` file tree scanner to be disabled\n\n   The `backup` command walks the file tree in a separate scanner process to find\n   the total size and file/directory count, and uses this to provide an ETA. This\n   can slow down backups, especially of network filesystems.\n\n   The command now has a new option `--no-scan` which can be used to disable this\n   scanning in order to speed up backups when needed.\n\n   https://github.com/restic/restic/pull/3931\n\n * Enhancement #3932: Improve handling of ErrDot errors in rclone and sftp backends\n\n   Since Go 1.19, restic can no longer implicitly run relative executables which\n   are found in the current directory (e.g. `rclone` if found in `.`). This is a\n   security feature of Go to prevent against running unintended and possibly\n   harmful executables.\n\n   The error message for this was just \"cannot run executable found relative to\n   current directory\". This has now been improved to yield a more specific error\n   message, informing the user how to explicitly allow running the executable using\n   the `-o rclone.program` and `-o sftp.command` extended options with `./`.\n\n   https://github.com/restic/restic/issues/3932\n   https://pkg.go.dev/os/exec#hdr-Executables_in_the_current_directory\n   https://go.dev/blog/path-security\n\n * Enhancement #3943: Ignore additional/unknown files in repository\n\n   If a restic repository had additional files in it (not created by restic),\n   commands like `find` and `restore` could become confused and fail with an\n   `multiple IDs with prefix \"12345678\" found` error. These commands now ignore\n   such additional files.\n\n   https://github.com/restic/restic/pull/3943\n   https://forum.restic.net/t/which-protocol-should-i-choose-for-remote-linux-backups/5446/17\n\n * Enhancement #3955: Improve `backup` performance for small files\n\n   When backing up small files restic was slower than it could be. In particular\n   this affected backups using maximum compression.\n\n   This has been fixed by reworking the internal parallelism of the backup command,\n   making it back up small files around two times faster.\n\n   https://github.com/restic/restic/pull/3955\n\n\n# Changelog for restic 0.14.0 (2022-08-25)\nThe following sections list the changes in restic 0.14.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2248: Support `self-update` on Windows\n * Fix #3428: List snapshots in backend at most once to resolve snapshot IDs\n * Fix #3432: Fix rare 'not found in repository' error for `copy` command\n * Fix #3681: Fix rclone (shimmed by Scoop) and sftp not working on Windows\n * Fix #3685: The `diff` command incorrectly listed some files as added\n * Fix #3716: Print \"wrong password\" to stderr instead of stdout\n * Fix #3720: Directory sync errors for repositories accessed via SMB\n * Fix #3736: The `stats` command miscalculated restore size for multiple snapshots\n * Fix #3772: Correctly rebuild index for legacy repositories\n * Fix #3776: Limit number of key files tested while opening a repository\n * Fix #3861: Yield error on invalid policy to `forget`\n * Chg #1842: Support debug log creation in release builds\n * Chg #3295: Deprecate `check --check-unused` and add further checks\n * Chg #3680: Update dependencies and require Go 1.15 or newer\n * Chg #3742: Replace `--repo2` option used by `init`/`copy` with `--from-repo`\n * Enh #21: Add compression support\n * Enh #1153: Support pruning even when the disk is full\n * Enh #2162: Adaptive IO concurrency based on backend connections\n * Enh #2291: Allow pack size customization\n * Enh #2295: Allow use of SAS token to authenticate to Azure\n * Enh #2351: Use config file permissions to control file group access\n * Enh #2696: Improve backup speed with many small files\n * Enh #2907: Make snapshot directory structure of `mount` command customizable\n * Enh #2923: Improve speed of `copy` command\n * Enh #3114: Optimize handling of duplicate blobs in `prune`\n * Enh #3465: Improve handling of temporary files on Windows\n * Enh #3475: Allow limiting IO concurrency for local and SFTP backend\n * Enh #3484: Stream data in `check` and `prune` commands\n * Enh #3709: Validate exclude patterns before backing up\n * Enh #3729: Display full IDs in `check` warnings\n * Enh #3773: Optimize memory usage for directories with many files\n * Enh #3819: Validate include/exclude patterns before restoring\n * Enh #3837: Improve SFTP repository initialization over slow links\n\n## Details\n\n * Bugfix #2248: Support `self-update` on Windows\n\n   Restic `self-update` would fail in situations where the operating system locks\n   running binaries, including Windows. The new behavior works around this by\n   renaming the running file and swapping the updated file in place.\n\n   https://github.com/restic/restic/issues/2248\n   https://github.com/restic/restic/pull/3675\n\n * Bugfix #3428: List snapshots in backend at most once to resolve snapshot IDs\n\n   Many commands support specifying a list of snapshot IDs which are then used to\n   determine the snapshots to be processed by the command. To resolve snapshot IDs\n   or `latest`, and check that these exist, restic previously listed all snapshots\n   stored in the repository. Depending on the backend this could be a slow and/or\n   expensive operation.\n\n   Restic now lists the snapshots only once and remembers the result in order to\n   resolve all further snapshot IDs swiftly.\n\n   https://github.com/restic/restic/issues/3428\n   https://github.com/restic/restic/pull/3570\n   https://github.com/restic/restic/pull/3395\n\n * Bugfix #3432: Fix rare 'not found in repository' error for `copy` command\n\n   In rare cases `copy` (and other commands) would report that `LoadTree(...)`\n   returned an `id [...] not found in repository` error. This could be caused by a\n   backup or copy command running concurrently. The error was only temporary;\n   running the failed restic command a second time as a workaround did resolve the\n   error.\n\n   This issue has now been fixed by correcting the order in which restic reads data\n   from the repository. It is now guaranteed that restic only loads snapshots for\n   which all necessary data is already available.\n\n   https://github.com/restic/restic/issues/3432\n   https://github.com/restic/restic/pull/3570\n\n * Bugfix #3681: Fix rclone (shimmed by Scoop) and sftp not working on Windows\n\n   In #3602 a fix was introduced to address the problem of `rclone` prematurely\n   exiting when Ctrl+C is pressed on Windows. The solution was to create the\n   subprocess with its console detached from the restic console.\n\n   However, this solution failed when using `rclone` installed by Scoop or using\n   `sftp` with a passphrase-protected private key. We've now fixed this by using a\n   different approach to prevent Ctrl-C from passing down too early.\n\n   https://github.com/restic/restic/issues/3681\n   https://github.com/restic/restic/issues/3692\n   https://github.com/restic/restic/pull/3696\n\n * Bugfix #3685: The `diff` command incorrectly listed some files as added\n\n   There was a bug in the `diff` command, causing it to always show files in a\n   removed directory as added. This has now been fixed.\n\n   https://github.com/restic/restic/issues/3685\n   https://github.com/restic/restic/pull/3686\n\n * Bugfix #3716: Print \"wrong password\" to stderr instead of stdout\n\n   If an invalid password was entered, the error message was printed on stdout and\n   not on stderr as intended. This has now been fixed.\n\n   https://github.com/restic/restic/pull/3716\n   https://forum.restic.net/t/4965\n\n * Bugfix #3720: Directory sync errors for repositories accessed via SMB\n\n   On Linux and macOS, accessing a repository via a SMB/CIFS mount resulted in\n   restic failing to save the lock file, yielding the following errors:\n\n   Save(<lock/071fe833f0>) returned error, retrying after 552.330144ms: sync\n   /repo/locks: no such file or directory Save(<lock/bf789d7343>) returned error,\n   retrying after 552.330144ms: sync /repo/locks: invalid argument\n\n   This has now been fixed by ignoring the relevant error codes.\n\n   https://github.com/restic/restic/issues/3720\n   https://github.com/restic/restic/issues/3751\n   https://github.com/restic/restic/pull/3752\n\n * Bugfix #3736: The `stats` command miscalculated restore size for multiple snapshots\n\n   Since restic 0.10.0 the restore size calculated by the `stats` command for\n   multiple snapshots was too low. The hardlink detection was accidentally applied\n   across multiple snapshots and thus ignored many files. This has now been fixed.\n\n   https://github.com/restic/restic/issues/3736\n   https://github.com/restic/restic/pull/3740\n\n * Bugfix #3772: Correctly rebuild index for legacy repositories\n\n   After running `rebuild-index` on a legacy repository containing mixed pack files\n   (that is, pack files which store both metadata and file data), `check` printed\n   warnings like `pack 12345678 contained in several indexes: ...`. This warning\n   was not critical, but has now nonetheless been fixed by properly handling mixed\n   pack files while rebuilding the index.\n\n   Running `prune` for such legacy repositories will also fix the warning by\n   reorganizing the pack files which caused it.\n\n   https://github.com/restic/restic/pull/3772\n   https://github.com/restic/restic/pull/3884\n   https://forum.restic.net/t/5044/13\n\n * Bugfix #3776: Limit number of key files tested while opening a repository\n\n   Previously, restic tested the password against every key in the repository when\n   opening a repository. The more keys there were in the repository, the slower\n   this operation became.\n\n   Restic now tests the password against up to 20 key files in the repository.\n   Alternatively, you can use the `--key-hint=<key ID>` option to specify a\n   specific key file to use instead.\n\n   https://github.com/restic/restic/pull/3776\n\n * Bugfix #3861: Yield error on invalid policy to `forget`\n\n   The `forget` command previously silently ignored invalid/unsupported units in\n   the duration options, such as e.g. `--keep-within-daily 2w`.\n\n   Specifying an invalid/unsupported duration unit now results in an error.\n\n   https://github.com/restic/restic/issues/3861\n   https://github.com/restic/restic/pull/3862\n\n * Change #1842: Support debug log creation in release builds\n\n   Creating a debug log was only possible in debug builds which required users to\n   manually build restic. We changed the release builds to allow creating debug\n   logs by simply setting the environment variable `DEBUG_LOG=logname.log`.\n\n   https://github.com/restic/restic/issues/1842\n   https://github.com/restic/restic/pull/3826\n\n * Change #3295: Deprecate `check --check-unused` and add further checks\n\n   Since restic 0.12.0, it is expected to still have unused blobs after running\n   `prune`. This made the `--check-unused` option of the `check` command rather\n   useless and tended to confuse users. This option has been deprecated and is now\n   ignored.\n\n   The `check` command now also warns if a repository is using either the legacy S3\n   layout or mixed pack files with both tree and data blobs. The latter is known to\n   cause performance problems.\n\n   https://github.com/restic/restic/issues/3295\n   https://github.com/restic/restic/pull/3730\n\n * Change #3680: Update dependencies and require Go 1.15 or newer\n\n   We've updated most dependencies. Since some libraries require newer language\n   features we're dropping support for Go 1.14, which means that restic now\n   requires at least Go 1.15 to build.\n\n   https://github.com/restic/restic/issues/3680\n   https://github.com/restic/restic/issues/3883\n\n * Change #3742: Replace `--repo2` option used by `init`/`copy` with `--from-repo`\n\n   The `init` and `copy` commands can read data from another repository. However,\n   confusingly `--repo2` referred to the repository *from* which the `init` command\n   copies parameters, but for the `copy` command `--repo2` referred to the copy\n   *destination*.\n\n   We've introduced a new option, `--from-repo`, which always refers to the source\n   repository for both commands. The old parameter names have been deprecated but\n   still work. To create a new repository and copy all snapshots to it, the\n   commands are now as follows:\n\n   ```\n   restic -r /srv/restic-repo-copy init --from-repo /srv/restic-repo --copy-chunker-params\n   restic -r /srv/restic-repo-copy copy --from-repo /srv/restic-repo\n   ```\n\n   https://github.com/restic/restic/pull/3742\n   https://forum.restic.net/t/5017\n\n * Enhancement #21: Add compression support\n\n   We've added compression support to the restic repository format. To create a\n   repository using the new format run `init --repository-version 2`. Please note\n   that the repository cannot be read by restic versions prior to 0.14.0.\n\n   You can configure whether data is compressed with the option `--compression`. It\n   can be set to `auto` (the default, which will compress very fast), `max` (which\n   will trade backup speed and CPU usage for better compression), or `off` (which\n   disables compression). Each setting is only applied for the current run of\n   restic and does *not* apply to future runs. The option can also be set via the\n   environment variable `RESTIC_COMPRESSION`.\n\n   To upgrade in place run `migrate upgrade_repo_v2` followed by `prune`. See the\n   documentation for more details. The migration checks the repository integrity\n   and upgrades the repository format, but will not change any data. Afterwards,\n   prune will rewrite the metadata to make use of compression.\n\n   As an alternative you can use the `copy` command to migrate snapshots; First\n   create a new repository using `init --repository-version 2 --copy-chunker-params\n   --repo2 path/to/old/repo`, and then use the `copy` command to copy all snapshots\n   to the new repository.\n\n   https://github.com/restic/restic/issues/21\n   https://github.com/restic/restic/issues/3779\n   https://github.com/restic/restic/pull/3666\n   https://github.com/restic/restic/pull/3704\n   https://github.com/restic/restic/pull/3733\n\n * Enhancement #1153: Support pruning even when the disk is full\n\n   When running out of disk space it was no longer possible to add or remove data\n   from a repository. To help with recovering from such a deadlock, the prune\n   command now supports an `--unsafe-recover-no-free-space` option to recover from\n   these situations. Make sure to read the documentation first!\n\n   https://github.com/restic/restic/issues/1153\n   https://github.com/restic/restic/pull/3481\n\n * Enhancement #2162: Adaptive IO concurrency based on backend connections\n\n   Many commands used hard-coded limits for the number of concurrent operations.\n   This prevented speed improvements by increasing the number of connections used\n   by a backend.\n\n   These limits have now been replaced by using the configured number of backend\n   connections instead, which can be controlled using the `-o\n   <backend-name>.connections=5` option. Commands will then automatically scale\n   their parallelism accordingly.\n\n   To limit the number of CPU cores used by restic, you can set the environment\n   variable `GOMAXPROCS` accordingly. For example to use a single CPU core, use\n   `GOMAXPROCS=1`.\n\n   https://github.com/restic/restic/issues/2162\n   https://github.com/restic/restic/issues/1467\n   https://github.com/restic/restic/pull/3611\n\n * Enhancement #2291: Allow pack size customization\n\n   Restic now uses a target pack size of 16 MiB by default. This can be customized\n   using the `--pack-size size` option. Supported pack sizes range between 4 and\n   128 MiB.\n\n   It is possible to migrate an existing repository to _larger_ pack files using\n   `prune --repack-small`. This will rewrite every pack file which is significantly\n   smaller than the target size.\n\n   https://github.com/restic/restic/issues/2291\n   https://github.com/restic/restic/pull/3731\n\n * Enhancement #2295: Allow use of SAS token to authenticate to Azure\n\n   Previously restic only supported AccountKeys to authenticate to Azure storage\n   accounts, which necessitates giving a significant amount of access.\n\n   We added support for Azure SAS tokens which are a more fine-grained and\n   time-limited manner of granting access. Set the `AZURE_ACCOUNT_NAME` and\n   `AZURE_ACCOUNT_SAS` environment variables to use a SAS token for authentication.\n   Note that if `AZURE_ACCOUNT_KEY` is set, it will take precedence.\n\n   https://github.com/restic/restic/issues/2295\n   https://github.com/restic/restic/pull/3661\n\n * Enhancement #2351: Use config file permissions to control file group access\n\n   Previously files in a local/SFTP repository would always end up with very\n   restrictive access permissions, allowing access only to the owner. This\n   prevented a number of valid use-cases involving groups and ACLs.\n\n   We now use the permissions of the config file in the repository to decide\n   whether group access should be given to newly created repository files or not.\n   We arrange for repository files to be created group readable exactly when the\n   repository config file is group readable.\n\n   To opt-in to group readable repositories, a simple `chmod -R g+r` or equivalent\n   on the config file can be used. For repositories that should be writable by\n   group members a tad more setup is required, see the docs.\n\n   Posix ACLs can also be used now that the group permissions being forced to zero\n   no longer masks the effect of ACL entries.\n\n   https://github.com/restic/restic/issues/2351\n   https://github.com/restic/restic/pull/3419\n   https://forum.restic.net/t/1391\n\n * Enhancement #2696: Improve backup speed with many small files\n\n   We have restructured the backup pipeline to continue reading files while all\n   upload connections are busy. This allows the backup to already prepare the next\n   data file such that the upload can continue as soon as a connection becomes\n   available. This can especially improve the backup performance for high latency\n   backends.\n\n   The upload concurrency is now controlled using the `-o\n   <backend-name>.connections=5` option.\n\n   https://github.com/restic/restic/issues/2696\n   https://github.com/restic/restic/pull/3489\n\n * Enhancement #2907: Make snapshot directory structure of `mount` command customizable\n\n   We've added the possibility to customize the snapshot directory structure of the\n   `mount` command using templates passed to the `--snapshot-template` option. The\n   formatting of snapshots' timestamps is now controlled using `--time-template`\n   and supports subdirectories to for example group snapshots by year. Please see\n   `restic help mount` for further details.\n\n   Characters in tag names which are not allowed in a filename are replaced by\n   underscores `_`. For example a tag `foo/bar` will result in a directory name of\n   `foo_bar`.\n\n   https://github.com/restic/restic/issues/2907\n   https://github.com/restic/restic/pull/2913\n   https://github.com/restic/restic/pull/3691\n\n * Enhancement #2923: Improve speed of `copy` command\n\n   The `copy` command could require a long time to copy snapshots for non-local\n   backends. This has been improved to provide a throughput comparable to the\n   `restore` command.\n\n   Additionally, `copy` now displays a progress bar.\n\n   https://github.com/restic/restic/issues/2923\n   https://github.com/restic/restic/pull/3513\n\n * Enhancement #3114: Optimize handling of duplicate blobs in `prune`\n\n   Restic `prune` always used to repack all data files containing duplicate blobs.\n   This effectively removed all duplicates during prune. However, as a consequence\n   all these data files were repacked even if the unused repository space threshold\n   could be reached with less work.\n\n   This is now changed and `prune` works nice and fast even when there are lots of\n   duplicate blobs.\n\n   https://github.com/restic/restic/issues/3114\n   https://github.com/restic/restic/pull/3290\n\n * Enhancement #3465: Improve handling of temporary files on Windows\n\n   In some cases restic failed to delete temporary files, causing the current\n   command to fail. This has now been fixed by ensuring that Windows automatically\n   deletes the file. In addition, temporary files are only written to disk when\n   necessary, reducing disk writes.\n\n   https://github.com/restic/restic/issues/3465\n   https://github.com/restic/restic/issues/1551\n   https://github.com/restic/restic/pull/3610\n\n * Enhancement #3475: Allow limiting IO concurrency for local and SFTP backend\n\n   Restic did not support limiting the IO concurrency / number of connections for\n   accessing repositories stored using the local or SFTP backends. The number of\n   connections is now limited as for other backends, and can be configured via the\n   `-o local.connections=2` and `-o sftp.connections=5` options. This ensures that\n   restic does not overwhelm the backend with concurrent IO operations.\n\n   https://github.com/restic/restic/pull/3475\n\n * Enhancement #3484: Stream data in `check` and `prune` commands\n\n   The commands `check --read-data` and `prune` previously downloaded data files\n   into temporary files which could end up being written to disk. This could cause\n   a large amount of data being written to disk.\n\n   The pack files are now instead streamed, which removes the need for temporary\n   files. Please note that *uploads* during `backup` and `prune` still require\n   temporary files.\n\n   https://github.com/restic/restic/issues/3710\n   https://github.com/restic/restic/pull/3484\n   https://github.com/restic/restic/pull/3717\n\n * Enhancement #3709: Validate exclude patterns before backing up\n\n   Exclude patterns provided via `--exclude`, `--iexclude`, `--exclude-file` or\n   `--iexclude-file` previously weren't validated. As a consequence, invalid\n   patterns resulted in files that were meant to be excluded being backed up.\n\n   Restic now validates all patterns before running the backup and aborts with a\n   fatal error if an invalid pattern is detected.\n\n   https://github.com/restic/restic/issues/3709\n   https://github.com/restic/restic/pull/3734\n\n * Enhancement #3729: Display full IDs in `check` warnings\n\n   When running commands to inspect or repair a damaged repository, it is often\n   necessary to supply the full IDs of objects stored in the repository.\n\n   The output of `check` now includes full IDs instead of their shortened variant.\n\n   https://github.com/restic/restic/pull/3729\n\n * Enhancement #3773: Optimize memory usage for directories with many files\n\n   Backing up a directory with hundreds of thousands or more files caused restic to\n   require large amounts of memory. We've now optimized the `backup` command such\n   that it requires up to 30% less memory.\n\n   https://github.com/restic/restic/pull/3773\n\n * Enhancement #3819: Validate include/exclude patterns before restoring\n\n   Patterns provided to `restore` via `--exclude`, `--iexclude`, `--include` and\n   `--iinclude` weren't validated before running the restore. Invalid patterns\n   would result in error messages being printed repeatedly, and possibly unwanted\n   files being restored.\n\n   Restic now validates all patterns before running the restore, and aborts with a\n   fatal error if an invalid pattern is detected.\n\n   https://github.com/restic/restic/pull/3819\n\n * Enhancement #3837: Improve SFTP repository initialization over slow links\n\n   The `init` command, when used on an SFTP backend, now sends multiple `mkdir`\n   commands to the backend concurrently. This reduces the waiting times when\n   creating a repository over a very slow connection.\n\n   https://github.com/restic/restic/issues/3837\n   https://github.com/restic/restic/pull/3840\n\n\n# Changelog for restic 0.13.0 (2022-03-26)\nThe following sections list the changes in restic 0.13.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1106: Never lock repository for `list locks`\n * Fix #2345: Make cache crash-resistant and usable by multiple concurrent processes\n * Fix #2452: Improve error handling of repository locking\n * Fix #2738: Don't print progress for `backup --json --quiet`\n * Fix #3382: Make `check` command honor `RESTIC_CACHE_DIR` environment variable\n * Fix #3488: `rebuild-index` failed if an index file was damaged\n * Fix #3518: Make `copy` command honor `--no-lock` for source repository\n * Fix #3556: Fix hang with Backblaze B2 on SSL certificate authority error\n * Fix #3591: Fix handling of `prune --max-repack-size=0`\n * Fix #3601: Fix rclone backend prematurely exiting when receiving SIGINT on Windows\n * Fix #3619: Avoid choosing parent snapshots newer than time of new snapshot\n * Fix #3667: The `mount` command now reports symlinks sizes\n * Chg #3519: Require Go 1.14 or newer\n * Chg #3641: Ignore parent snapshot for `backup --stdin`\n * Enh #233: Support negative include/exclude patterns\n * Enh #1542: Add `--dry-run`/`-n` option to `backup` command\n * Enh #2202: Add upload checksum for Azure, GS, S3 and Swift backends\n * Enh #2388: Add warning for S3 if partial credentials are provided\n * Enh #2508: Support JSON output and quiet mode for the `diff` command\n * Enh #2594: Speed up the `restore --verify` command\n * Enh #2656: Add flag to disable TLS verification for self-signed certificates\n * Enh #2816: The `backup` command no longer updates file access times on Linux\n * Enh #2880: Make `recover` collect only unreferenced trees\n * Enh #3003: Atomic uploads for the SFTP backend\n * Enh #3127: Add xattr (extended attributes) support for Solaris\n * Enh #3429: Verify that new or modified keys are stored correctly\n * Enh #3436: Improve local backend's resilience to (system) crashes\n * Enh #3464: Skip lock creation on `forget` if `--no-lock` and `--dry-run`\n * Enh #3490: Support random subset by size in `check --read-data-subset`\n * Enh #3508: Cache blobs read by the `dump` command\n * Enh #3511: Support configurable timeout for the rclone backend\n * Enh #3541: Improve handling of temporary B2 delete errors\n * Enh #3542: Add file mode in symbolic notation to `ls --json`\n * Enh #3593: Improve `copy` performance by parallelizing IO\n\n## Details\n\n * Bugfix #1106: Never lock repository for `list locks`\n\n   The `list locks` command previously locked to the repository by default. This\n   had the problem that it wouldn't work for an exclusively locked repository and\n   that the command would also display its own lock file which can be confusing.\n\n   Now, the `list locks` command never locks the repository.\n\n   https://github.com/restic/restic/issues/1106\n   https://github.com/restic/restic/pull/3665\n\n * Bugfix #2345: Make cache crash-resistant and usable by multiple concurrent processes\n\n   The restic cache directory (`RESTIC_CACHE_DIR`) could end up in a broken state\n   in the event of restic (or the OS) crashing. This is now less likely to occur as\n   files are downloaded to a temporary location before being moved to their proper\n   location.\n\n   This also allows multiple concurrent restic processes to operate on a single\n   repository without conflicts. Previously, concurrent operations could cause\n   segfaults because the processes saw each other's partially downloaded files.\n\n   https://github.com/restic/restic/issues/2345\n   https://github.com/restic/restic/pull/2838\n\n * Bugfix #2452: Improve error handling of repository locking\n\n   Previously, when the lock refresh failed to delete the old lock file, it forgot\n   about the newly created one. Instead it continued trying to delete the old\n   (usually no longer existing) lock file and thus over time lots of lock files\n   accumulated. This has now been fixed.\n\n   https://github.com/restic/restic/issues/2452\n   https://github.com/restic/restic/issues/2473\n   https://github.com/restic/restic/issues/2562\n   https://github.com/restic/restic/pull/3512\n\n * Bugfix #2738: Don't print progress for `backup --json --quiet`\n\n   Unlike the text output, the `--json` output format still printed progress\n   information even in `--quiet` mode. This has now been fixed by always disabling\n   the progress output in quiet mode.\n\n   https://github.com/restic/restic/issues/2738\n   https://github.com/restic/restic/pull/3264\n\n * Bugfix #3382: Make `check` command honor `RESTIC_CACHE_DIR` environment variable\n\n   Previously, the `check` command didn't honor the `RESTIC_CACHE_DIR` environment\n   variable, which caused problems in certain system/usage configurations. This has\n   now been fixed.\n\n   https://github.com/restic/restic/issues/3382\n   https://github.com/restic/restic/pull/3474\n\n * Bugfix #3488: `rebuild-index` failed if an index file was damaged\n\n   Previously, the `rebuild-index` command would fail with an error if an index\n   file was damaged or truncated. This has now been fixed.\n\n   On older restic versions, a (slow) workaround is to use `rebuild-index\n   --read-all-packs` or to manually delete the damaged index.\n\n   https://github.com/restic/restic/pull/3488\n\n * Bugfix #3518: Make `copy` command honor `--no-lock` for source repository\n\n   The `copy` command previously did not respect the `--no-lock` option for the\n   source repository, causing failures with read-only storage backends. This has\n   now been fixed such that the option is now respected.\n\n   https://github.com/restic/restic/issues/3518\n   https://github.com/restic/restic/pull/3589\n\n * Bugfix #3556: Fix hang with Backblaze B2 on SSL certificate authority error\n\n   Previously, if a request failed with an SSL unknown certificate authority error,\n   the B2 backend retried indefinitely and restic would appear to hang.\n\n   This has now been fixed and restic instead fails with an error message.\n\n   https://github.com/restic/restic/issues/3556\n   https://github.com/restic/restic/issues/2355\n   https://github.com/restic/restic/pull/3571\n\n * Bugfix #3591: Fix handling of `prune --max-repack-size=0`\n\n   Restic ignored the `--max-repack-size` option when passing a value of 0. This\n   has now been fixed.\n\n   As a workaround, `--max-repack-size=1` can be used with older versions of\n   restic.\n\n   https://github.com/restic/restic/pull/3591\n\n * Bugfix #3601: Fix rclone backend prematurely exiting when receiving SIGINT on Windows\n\n   Previously, pressing Ctrl+C in a Windows console where restic was running with\n   rclone as the backend would cause rclone to exit prematurely due to getting a\n   `SIGINT` signal at the same time as restic. Restic would then wait for a long\n   time for time with \"unexpected EOF\" and \"rclone stdio connection already closed\"\n   errors.\n\n   This has now been fixed by restic starting the rclone process detached from the\n   console restic runs in (similar to starting processes in a new process group on\n   Linux), which enables restic to gracefully clean up rclone (which now never gets\n   the `SIGINT`).\n\n   https://github.com/restic/restic/issues/3601\n   https://github.com/restic/restic/pull/3602\n\n * Bugfix #3619: Avoid choosing parent snapshots newer than time of new snapshot\n\n   The `backup` command, when a `--parent` was not provided, previously chose the\n   most recent matching snapshot as the parent snapshot. However, this didn't make\n   sense when the user passed `--time` to create a new snapshot older than the most\n   recent snapshot.\n\n   Instead, `backup` now chooses the most recent snapshot which is not newer than\n   the snapshot-being-created's timestamp, to avoid any time travel.\n\n   https://github.com/restic/restic/pull/3619\n\n * Bugfix #3667: The `mount` command now reports symlinks sizes\n\n   Symlinks used to have size zero in restic mountpoints, confusing some\n   third-party tools. They now have a size equal to the byte length of their target\n   path, as required by POSIX.\n\n   https://github.com/restic/restic/issues/3667\n   https://github.com/restic/restic/pull/3668\n\n * Change #3519: Require Go 1.14 or newer\n\n   Restic now requires Go 1.14 to build. This allows it to use new standard library\n   features instead of an external dependency.\n\n   https://github.com/restic/restic/issues/3519\n\n * Change #3641: Ignore parent snapshot for `backup --stdin`\n\n   Restic uses a parent snapshot to speed up directory scanning when performing\n   backups, but this only wasted time and memory when the backup source is stdin\n   (using the `--stdin` option of the `backup` command), since no directory\n   scanning is performed in this case.\n\n   Snapshots made with `backup --stdin` no longer have a parent snapshot, which\n   allows restic to skip some startup operations and saves a bit of resources.\n\n   The `--parent` option is still available for `backup --stdin`, but is now\n   ignored.\n\n   https://github.com/restic/restic/issues/3641\n   https://github.com/restic/restic/pull/3645\n\n * Enhancement #233: Support negative include/exclude patterns\n\n   If a pattern starts with an exclamation mark and it matches a file that was\n   previously matched by a regular pattern, the match is cancelled. Notably, this\n   can be used with `--exclude-file` to cancel the exclusion of some files.\n\n   It works similarly to `.gitignore`, with the same limitation; Once a directory\n   is excluded, it is not possible to include files inside the directory.\n\n   Example of use as an exclude pattern for the `backup` command:\n\n   $HOME/**/* !$HOME/Documents !$HOME/code !$HOME/.emacs.d !$HOME/games # [...]\n   node_modules *~ *.o *.lo *.pyc # [...] $HOME/code/linux/* !$HOME/code/linux/.git\n   # [...]\n\n   https://github.com/restic/restic/issues/233\n   https://github.com/restic/restic/pull/2311\n\n * Enhancement #1542: Add `--dry-run`/`-n` option to `backup` command\n\n   Testing exclude filters and other configuration options was error prone as wrong\n   filters could cause files to be uploaded unintentionally. It was also not\n   possible to estimate beforehand how much data would be uploaded.\n\n   The `backup` command now has a `--dry-run`/`-n` option, which performs all the\n   normal steps of a backup without actually writing anything to the repository.\n\n   Passing -vv will log information about files that would be added, allowing for\n   verification of source and exclusion options before running the real backup.\n\n   https://github.com/restic/restic/issues/1542\n   https://github.com/restic/restic/pull/2308\n   https://github.com/restic/restic/pull/3210\n   https://github.com/restic/restic/pull/3300\n\n * Enhancement #2202: Add upload checksum for Azure, GS, S3 and Swift backends\n\n   Previously only the B2 and partially the Swift backends verified the integrity\n   of uploaded (encrypted) files. The verification works by informing the backend\n   about the expected hash of the uploaded file. The backend then verifies the\n   upload and thereby rules out any data corruption during upload.\n\n   We have now added upload checksums for the Azure, GS, S3 and Swift backends,\n   which besides integrity checking for uploads also means that restic can now be\n   used to store backups in S3 buckets which have Object Lock enabled.\n\n   https://github.com/restic/restic/issues/2202\n   https://github.com/restic/restic/issues/2700\n   https://github.com/restic/restic/issues/3023\n   https://github.com/restic/restic/pull/3246\n\n * Enhancement #2388: Add warning for S3 if partial credentials are provided\n\n   Previously restic did not notify about incomplete credentials when using the S3\n   backend, instead just reporting access denied.\n\n   Restic now checks that both the AWS key ID and secret environment variables are\n   set before connecting to the remote server, and reports an error if not.\n\n   https://github.com/restic/restic/issues/2388\n   https://github.com/restic/restic/pull/3532\n\n * Enhancement #2508: Support JSON output and quiet mode for the `diff` command\n\n   The `diff` command now supports outputting machine-readable output in JSON\n   format. To enable this, pass the `--json` option to the command. To only print\n   the summary and suppress detailed output, pass the `--quiet` option.\n\n   https://github.com/restic/restic/issues/2508\n   https://github.com/restic/restic/pull/3592\n\n * Enhancement #2594: Speed up the `restore --verify` command\n\n   The `--verify` option lets the `restore` command verify the file content after\n   it has restored a snapshot. The performance of this operation has now been\n   improved by up to a factor of two.\n\n   https://github.com/restic/restic/pull/2594\n\n * Enhancement #2656: Add flag to disable TLS verification for self-signed certificates\n\n   There is now an `--insecure-tls` global option in restic, which disables TLS\n   verification for self-signed certificates in order to support some development\n   workflows.\n\n   https://github.com/restic/restic/issues/2656\n   https://github.com/restic/restic/pull/2657\n\n * Enhancement #2816: The `backup` command no longer updates file access times on Linux\n\n   When reading files during backup, restic used to cause the operating system to\n   update the files' access times. Note that this did not apply to filesystems with\n   disabled file access times.\n\n   Restic now instructs the operating system not to update the file access time, if\n   the user running restic is the file owner or has root permissions.\n\n   https://github.com/restic/restic/pull/2816\n\n * Enhancement #2880: Make `recover` collect only unreferenced trees\n\n   Previously, the `recover` command used to generate a snapshot containing *all*\n   root trees, even those which were already referenced by a snapshot.\n\n   This has been improved such that it now only processes trees not already\n   referenced by any snapshot.\n\n   https://github.com/restic/restic/pull/2880\n\n * Enhancement #3003: Atomic uploads for the SFTP backend\n\n   The SFTP backend did not upload files atomically. An interrupted upload could\n   leave an incomplete file behind which could prevent restic from accessing the\n   repository. This has now been fixed and uploads in the SFTP backend are done\n   atomically.\n\n   https://github.com/restic/restic/issues/3003\n   https://github.com/restic/restic/pull/3524\n\n * Enhancement #3127: Add xattr (extended attributes) support for Solaris\n\n   Restic now supports xattr for the Solaris operating system.\n\n   https://github.com/restic/restic/issues/3127\n   https://github.com/restic/restic/pull/3628\n\n * Enhancement #3429: Verify that new or modified keys are stored correctly\n\n   When adding a new key or changing the password of a key, restic used to just\n   create the new key (and remove the old one, when changing the password). There\n   was no verification that the new key was stored correctly and works properly. As\n   the repository cannot be decrypted without a valid key file, this could in rare\n   cases cause the repository to become inaccessible.\n\n   Restic now checks that new key files actually work before continuing. This can\n   protect against some (rare) cases of hardware or storage problems.\n\n   https://github.com/restic/restic/pull/3429\n\n * Enhancement #3436: Improve local backend's resilience to (system) crashes\n\n   Restic now ensures that files stored using the `local` backend are created\n   atomically (that is, files are either stored completely or not at all). This\n   ensures that no incomplete files are left behind even if restic is terminated\n   while writing a file.\n\n   In addition, restic now tries to ensure that the directory in the repository\n   which contains a newly uploaded file is also written to disk. This can prevent\n   missing files if the system crashes or the disk is not properly unmounted.\n\n   https://github.com/restic/restic/pull/3436\n\n * Enhancement #3464: Skip lock creation on `forget` if `--no-lock` and `--dry-run`\n\n   Restic used to silently ignore the `--no-lock` option of the `forget` command.\n\n   It now skips creation of lock file in case both `--dry-run` and `--no-lock` are\n   specified. If `--no-lock` option is specified without `--dry-run`, restic prints\n   a warning message to stderr.\n\n   https://github.com/restic/restic/issues/3464\n   https://github.com/restic/restic/pull/3623\n\n * Enhancement #3490: Support random subset by size in `check --read-data-subset`\n\n   The `--read-data-subset` option of the `check` command now supports a third way\n   of specifying the subset to check, namely `nS` where `n` is a size in bytes with\n   suffix `S` as k/K, m/M, g/G or t/T.\n\n   https://github.com/restic/restic/issues/3490\n   https://github.com/restic/restic/pull/3548\n\n * Enhancement #3508: Cache blobs read by the `dump` command\n\n   When dumping a file using the `dump` command, restic did not cache blobs in any\n   way, so even consecutive runs of the same blob were loaded from the repository\n   again and again, slowing down the dump.\n\n   Now, the caching mechanism already used by the `fuse` command is also used by\n   the `dump` command. This makes dumping much faster, especially for sparse files.\n\n   https://github.com/restic/restic/pull/3508\n\n * Enhancement #3511: Support configurable timeout for the rclone backend\n\n   A slow rclone backend could cause restic to time out while waiting for the\n   repository to open. Restic now offers an `-o rclone.timeout` option to make this\n   timeout configurable.\n\n   https://github.com/restic/restic/issues/3511\n   https://github.com/restic/restic/pull/3514\n\n * Enhancement #3541: Improve handling of temporary B2 delete errors\n\n   Deleting files on B2 could sometimes fail temporarily, which required restic to\n   retry the delete operation. In some cases the file was deleted nevertheless,\n   causing the retries and ultimately the restic command to fail. This has now been\n   fixed.\n\n   https://github.com/restic/restic/issues/3541\n   https://github.com/restic/restic/pull/3544\n\n * Enhancement #3542: Add file mode in symbolic notation to `ls --json`\n\n   The `ls --json` command now provides the file mode in symbolic notation (using\n   the `permissions` key), aligned with `find --json`.\n\n   https://github.com/restic/restic/issues/3542\n   https://github.com/restic/restic/pull/3573\n   https://forum.restic.net/t/restic-ls-understanding-file-mode-with-json/4371\n\n * Enhancement #3593: Improve `copy` performance by parallelizing IO\n\n   Restic copy previously only used a single thread for copying blobs between\n   repositories, which resulted in limited performance when copying small blobs\n   to/from a high latency backend (i.e. any remote backend, especially b2).\n\n   Copying will now use 8 parallel threads to increase the throughput of the copy\n   operation.\n\n   https://github.com/restic/restic/pull/3593\n\n\n# Changelog for restic 0.12.1 (2021-08-03)\nThe following sections list the changes in restic 0.12.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2742: Improve error handling for rclone and REST backend over HTTP2\n * Fix #3111: Fix terminal output redirection for PowerShell\n * Fix #3184: `backup --quiet` no longer prints status information\n * Fix #3214: Treat an empty password as a fatal error for repository init\n * Fix #3267: `copy` failed to copy snapshots in rare cases\n * Fix #3296: Fix crash of `check --read-data-subset=x%` run for an empty repository\n * Fix #3302: Fix `fdopendir: not a directory` error for local backend\n * Fix #3305: Fix possibly missing backup summary of JSON output in case of error\n * Fix #3334: Print `created new cache` message only on a terminal\n * Fix #3380: Fix crash of `backup --exclude='**'`\n * Fix #3439: Correctly handle download errors during `restore`\n * Chg #3247: Empty files now have size of 0 in `ls --json` output\n * Enh #2780: Add release binaries for s390x architecture on Linux\n * Enh #3167: Allow specifying limit of `snapshots` list\n * Enh #3293: Add `--repository-file2` option to `init` and `copy` command\n * Enh #3312: Add auto-completion support for fish\n * Enh #3336: SFTP backend now checks for disk space\n * Enh #3377: Add release binaries for Apple Silicon\n * Enh #3414: Add `--keep-within-hourly` option to restic forget\n * Enh #3426: Optimize read performance of mount command\n * Enh #3427: `find --pack` fallback to index if data file is missing\n * Enh #3456: Support filtering and specifying untagged snapshots\n\n## Details\n\n * Bugfix #2742: Improve error handling for rclone and REST backend over HTTP2\n\n   When retrieving data from the rclone / REST backend while also using HTTP2\n   restic did not detect when no data was returned at all. This could cause for\n   example the `check` command to report the following error:\n\n   Pack ID does not match, want [...], got e3b0c442\n\n   This has been fixed by correctly detecting and retrying the incomplete download.\n\n   https://github.com/restic/restic/issues/2742\n   https://github.com/restic/restic/pull/3453\n   https://forum.restic.net/t/http2-stream-closed-connection-reset-context-canceled/3743/10\n\n * Bugfix #3111: Fix terminal output redirection for PowerShell\n\n   When redirecting the output of restic using PowerShell on Windows, the output\n   contained terminal escape characters. This has been fixed by properly detecting\n   the terminal type.\n\n   In addition, the mintty terminal now shows progress output for the backup\n   command.\n\n   https://github.com/restic/restic/issues/3111\n   https://github.com/restic/restic/pull/3325\n\n * Bugfix #3184: `backup --quiet` no longer prints status information\n\n   A regression in the latest restic version caused the output of `backup --quiet`\n   to contain large amounts of backup progress information when run using an\n   interactive terminal. This is fixed now.\n\n   A workaround for this bug is to run restic as follows: `restic backup --quiet\n   [..] | cat -`.\n\n   https://github.com/restic/restic/issues/3184\n   https://github.com/restic/restic/pull/3186\n\n * Bugfix #3214: Treat an empty password as a fatal error for repository init\n\n   When attempting to initialize a new repository, if an empty password was\n   supplied, the repository would be created but the init command would return an\n   error with a stack trace. Now, if an empty password is provided, it is treated\n   as a fatal error, and no repository is created.\n\n   https://github.com/restic/restic/issues/3214\n   https://github.com/restic/restic/pull/3283\n\n * Bugfix #3267: `copy` failed to copy snapshots in rare cases\n\n   The `copy` command could in rare cases fail with the error message\n   `SaveTree(...) returned unexpected id ...`. This has been fixed.\n\n   On Linux/BSDs, the error could be caused by backing up symlinks with non-UTF-8\n   target paths. Note that, due to limitations in the repository format, these are\n   not stored properly and should be avoided if possible.\n\n   https://github.com/restic/restic/issues/3267\n   https://github.com/restic/restic/pull/3310\n\n * Bugfix #3296: Fix crash of `check --read-data-subset=x%` run for an empty repository\n\n   The command `restic check --read-data-subset=x%` crashed when run for an empty\n   repository. This has been fixed.\n\n   https://github.com/restic/restic/issues/3296\n   https://github.com/restic/restic/pull/3309\n\n * Bugfix #3302: Fix `fdopendir: not a directory` error for local backend\n\n   The `check`, `list packs`, `prune` and `rebuild-index` commands failed for the\n   local backend when the `data` folder in the repository contained files. This has\n   been fixed.\n\n   https://github.com/restic/restic/issues/3302\n   https://github.com/restic/restic/pull/3308\n\n * Bugfix #3305: Fix possibly missing backup summary of JSON output in case of error\n\n   When using `--json` output it happened from time to time that the summary output\n   was missing in case an error occurred. This has been fixed.\n\n   https://github.com/restic/restic/pull/3305\n\n * Bugfix #3334: Print `created new cache` message only on a terminal\n\n   The message `created new cache` was printed even when the output wasn't a\n   terminal. That broke piping `restic dump` output to tar or zip if cache\n   directory didn't exist. The message is now only printed on a terminal.\n\n   https://github.com/restic/restic/issues/3334\n   https://github.com/restic/restic/pull/3343\n\n * Bugfix #3380: Fix crash of `backup --exclude='**'`\n\n   The exclude filter `**`, which excludes all files, caused restic to crash. This\n   has been corrected.\n\n   https://github.com/restic/restic/issues/3380\n   https://github.com/restic/restic/pull/3393\n\n * Bugfix #3439: Correctly handle download errors during `restore`\n\n   Due to a regression in restic 0.12.0, the `restore` command in some cases did\n   not retry download errors and only printed a warning. This has been fixed by\n   retrying incomplete data downloads.\n\n   https://github.com/restic/restic/issues/3439\n   https://github.com/restic/restic/pull/3449\n\n * Change #3247: Empty files now have size of 0 in `ls --json` output\n\n   The `ls --json` command used to omit the sizes of empty files in its output. It\n   now reports a size of zero explicitly for regular files, while omitting the size\n   field for all other types.\n\n   https://github.com/restic/restic/issues/3247\n   https://github.com/restic/restic/pull/3257\n\n * Enhancement #2780: Add release binaries for s390x architecture on Linux\n\n   We've added release binaries for Linux using the s390x architecture.\n\n   https://github.com/restic/restic/issues/2780\n   https://github.com/restic/restic/pull/3452\n\n * Enhancement #3167: Allow specifying limit of `snapshots` list\n\n   The `--last` option allowed limiting the output of the `snapshots` command to\n   the latest snapshot for each host. The new `--latest n` option allows limiting\n   the output to the latest `n` snapshots.\n\n   This change deprecates the option `--last` in favour of `--latest 1`.\n\n   https://github.com/restic/restic/pull/3167\n\n * Enhancement #3293: Add `--repository-file2` option to `init` and `copy` command\n\n   The `init` and `copy` command can now be used with the `--repository-file2`\n   option or the `$RESTIC_REPOSITORY_FILE2` environment variable. These to options\n   are in addition to the `--repo2` flag and allow you to read the destination\n   repository from a file.\n\n   Using both `--repository-file` and `--repo2` options resulted in an error for\n   the `copy` or `init` command. The handling of this combination of options has\n   been fixed. A workaround for this issue is to only use `--repo` or `-r` and\n   `--repo2` for `init` or `copy`.\n\n   https://github.com/restic/restic/issues/3293\n   https://github.com/restic/restic/pull/3294\n\n * Enhancement #3312: Add auto-completion support for fish\n\n   The `generate` command now supports fish auto completion.\n\n   https://github.com/restic/restic/pull/3312\n\n * Enhancement #3336: SFTP backend now checks for disk space\n\n   Backing up over SFTP previously spewed multiple generic \"failure\" messages when\n   the remote disk was full. It now checks for disk space before writing a file and\n   fails immediately with a \"no space left on device\" message.\n\n   https://github.com/restic/restic/issues/3336\n   https://github.com/restic/restic/pull/3345\n\n * Enhancement #3377: Add release binaries for Apple Silicon\n\n   We've added release binaries for macOS on Apple Silicon (M1).\n\n   https://github.com/restic/restic/issues/3377\n   https://github.com/restic/restic/pull/3394\n\n * Enhancement #3414: Add `--keep-within-hourly` option to restic forget\n\n   The `forget` command allowed keeping a given number of hourly backups or to keep\n   all backups within a given interval, but it was not possible to specify keeping\n   hourly backups within a given interval.\n\n   The new `--keep-within-hourly` option now offers this functionality. Similar\n   options for daily/weekly/monthly/yearly are also implemented, the new options\n   are:\n\n   --keep-within-hourly <1y2m3d4h> --keep-within-daily <1y2m3d4h>\n   --keep-within-weekly <1y2m3d4h> --keep-within-monthly <1y2m3d4h>\n   --keep-within-yearly <1y2m3d4h>\n\n   https://github.com/restic/restic/issues/3414\n   https://github.com/restic/restic/pull/3416\n   https://forum.restic.net/t/forget-policy/4014/11\n\n * Enhancement #3426: Optimize read performance of mount command\n\n   Reading large files in a mounted repository may be up to five times faster. This\n   improvement primarily applies to repositories stored at a backend that can be\n   accessed with low latency, like e.g. the local backend.\n\n   https://github.com/restic/restic/pull/3426\n\n * Enhancement #3427: `find --pack` fallback to index if data file is missing\n\n   When investigating a repository with missing data files, it might be useful to\n   determine affected snapshots before running `rebuild-index`. Previously, `find\n   --pack pack-id` returned no data as it required accessing the data file. Now, if\n   the necessary data is still available in the repository index, it gets retrieved\n   from there.\n\n   The command now also supports looking up multiple pack files in a single `find`\n   run.\n\n   https://github.com/restic/restic/pull/3427\n   https://forum.restic.net/t/missing-packs-not-found/2600\n\n * Enhancement #3456: Support filtering and specifying untagged snapshots\n\n   It was previously not possible to specify an empty tag with the `--tag` and\n   `--keep-tag` options. This has now been fixed, such that `--tag ''` and\n   `--keep-tag ''` now matches snapshots without tags. This allows e.g. the\n   `snapshots` and `forget` commands to only operate on untagged snapshots.\n\n   https://github.com/restic/restic/issues/3456\n   https://github.com/restic/restic/pull/3457\n\n\n# Changelog for restic 0.12.0 (2021-02-14)\nThe following sections list the changes in restic 0.12.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1681: Make `mount` not create missing mount point directory\n * Fix #1800: Ignore `no data available` filesystem error during backup\n * Fix #2563: Report the correct owner of directories in FUSE mounts\n * Fix #2688: Make `backup` and `tag` commands separate tags by comma\n * Fix #2739: Make the `cat` command respect the `--no-lock` option\n * Fix #3014: Fix sporadic stream reset between rclone and restic\n * Fix #3087: The `--use-fs-snapshot` option now works on windows/386\n * Fix #3100: Do not require gs bucket permissions when running `init`\n * Fix #3111: Correctly detect output redirection for `backup` command on Windows\n * Fix #3151: Don't create invalid snapshots when `backup` is interrupted\n * Fix #3152: Do not hang until foregrounded when completed in background\n * Fix #3166: Improve error handling in the `restore` command\n * Fix #3232: Correct statistics for overlapping backup sources\n * Fix #3249: Improve error handling in `gs` backend\n * Chg #3095: Deleting files on Google Drive now moves them to the trash\n * Enh #909: Back up mountpoints as empty directories\n * Enh #2186: Allow specifying percentage in `check --read-data-subset`\n * Enh #2433: Make the `dump` command support `zip` format\n * Enh #2453: Report permanent/fatal backend errors earlier\n * Enh #2495: Add option to let `backup` trust mtime without checking ctime\n * Enh #2528: Add Alibaba/Aliyun OSS support in the `s3` backend\n * Enh #2706: Configurable progress reports for non-interactive terminals\n * Enh #2718: Improve `prune` performance and make it more customizable\n * Enh #2941: Speed up the repacking step of the `prune` command\n * Enh #2944: Add `backup` options `--files-from-{verbatim,raw}`\n * Enh #3006: Speed up the `rebuild-index` command\n * Enh #3048: Add more checks for index and pack files in the `check` command\n * Enh #3083: Allow usage of deprecated S3 `ListObjects` API\n * Enh #3099: Reduce memory usage of `check` command\n * Enh #3106: Parallelize scan of snapshot content in `copy` and `prune`\n * Enh #3130: Parallelize reading of locks and snapshots\n * Enh #3147: Support additional environment variables for Swift authentication\n * Enh #3191: Add release binaries for MIPS architectures\n * Enh #3250: Add several more error checks\n * Enh #3254: Enable HTTP/2 for backend connections\n\n## Details\n\n * Bugfix #1681: Make `mount` not create missing mount point directory\n\n   When specifying a non-existent directory as mount point for the `mount` command,\n   restic used to create the specified directory automatically.\n\n   This has now changed such that restic instead gives an error when the specified\n   directory for the mount point does not exist.\n\n   https://github.com/restic/restic/issues/1681\n   https://github.com/restic/restic/pull/3008\n\n * Bugfix #1800: Ignore `no data available` filesystem error during backup\n\n   Restic was unable to backup files on some filesystems, for example certain\n   configurations of CIFS on Linux which return a `no data available` error when\n   reading extended attributes. These errors are now ignored.\n\n   https://github.com/restic/restic/issues/1800\n   https://github.com/restic/restic/pull/3034\n\n * Bugfix #2563: Report the correct owner of directories in FUSE mounts\n\n   Restic 0.10.0 changed the FUSE mount to always report the current user as the\n   owner of directories within the FUSE mount, which is incorrect.\n\n   This is now changed back to reporting the correct owner of a directory.\n\n   https://github.com/restic/restic/issues/2563\n   https://github.com/restic/restic/pull/3141\n\n * Bugfix #2688: Make `backup` and `tag` commands separate tags by comma\n\n   Running `restic backup --tag foo,bar` previously created snapshots with one\n   single tag containing a comma (`foo,bar`) instead of two tags (`foo`, `bar`).\n\n   Similarly, the `tag` command's `--set`, `--add` and `--remove` options would\n   treat `foo,bar` as one tag instead of two tags. This was inconsistent with other\n   commands and often unexpected when one intended `foo,bar` to mean two tags.\n\n   To be consistent in all commands, restic now interprets `foo,bar` to mean two\n   separate tags (`foo` and `bar`) instead of one tag (`foo,bar`) everywhere,\n   including in the `backup` and `tag` commands.\n\n   NOTE: This change might result in unexpected behavior in cases where you use the\n   `forget` command and filter on tags like `foo,bar`. Snapshots previously backed\n   up with `--tag foo,bar` will still not match that filter, but snapshots saved\n   from now on will match that filter.\n\n   To replace `foo,bar` tags with `foo` and `bar` tags in old snapshots, you can\n   first generate a list of the relevant snapshots using a command like:\n\n   Restic snapshots --json --quiet | jq '.[] | select(contains({tags:\n   [\"foo,bar\"]})) | .id'\n\n   And then use `restic tag --set foo --set bar snapshotID [...]` to set the new\n   tags. Please adjust the commands to include real tag names and any additional\n   tags, as well as the list of snapshots to process.\n\n   https://github.com/restic/restic/issues/2688\n   https://github.com/restic/restic/pull/2690\n   https://github.com/restic/restic/pull/3197\n\n * Bugfix #2739: Make the `cat` command respect the `--no-lock` option\n\n   The `cat` command would not respect the `--no-lock` flag. This is now fixed.\n\n   https://github.com/restic/restic/issues/2739\n\n * Bugfix #3014: Fix sporadic stream reset between rclone and restic\n\n   Sometimes when using restic with the `rclone` backend, an error message similar\n   to the following would be printed:\n\n   Didn't finish writing GET request (wrote 0/xxx): http2: stream closed\n\n   It was found that this was caused by restic closing the connection to rclone to\n   soon when downloading data. A workaround has been added which waits for the end\n   of the download before closing the connection.\n\n   https://github.com/rclone/rclone/issues/2598\n   https://github.com/restic/restic/pull/3014\n\n * Bugfix #3087: The `--use-fs-snapshot` option now works on windows/386\n\n   Restic failed to create VSS snapshots on windows/386 with the following error:\n\n   GetSnapshotProperties() failed: E_INVALIDARG (0x80070057)\n\n   This is now fixed.\n\n   https://github.com/restic/restic/issues/3087\n   https://github.com/restic/restic/pull/3090\n\n * Bugfix #3100: Do not require gs bucket permissions when running `init`\n\n   Restic used to require bucket level permissions for the `gs` backend in order to\n   initialize a restic repository.\n\n   It now allows a `gs` service account to initialize a repository if the bucket\n   does exist and the service account has permissions to write/read to that bucket.\n\n   https://github.com/restic/restic/issues/3100\n\n * Bugfix #3111: Correctly detect output redirection for `backup` command on Windows\n\n   On Windows, since restic 0.10.0 the `backup` command did not properly detect\n   when the output was redirected to a file. This caused restic to output terminal\n   control characters. This has been fixed by correcting the terminal detection.\n\n   https://github.com/restic/restic/issues/3111\n   https://github.com/restic/restic/pull/3150\n\n * Bugfix #3151: Don't create invalid snapshots when `backup` is interrupted\n\n   When canceling a backup run at a certain moment it was possible that restic\n   created a snapshot with an invalid \"null\" tree. This caused `check` and other\n   operations to fail. The `backup` command now properly handles interruptions and\n   never saves a snapshot when interrupted.\n\n   https://github.com/restic/restic/issues/3151\n   https://github.com/restic/restic/pull/3164\n\n * Bugfix #3152: Do not hang until foregrounded when completed in background\n\n   On Linux, when running in the background restic failed to stop the terminal\n   output of the `backup` command after it had completed. This caused restic to\n   hang until moved to the foreground. This has now been fixed.\n\n   https://github.com/restic/restic/pull/3152\n   https://forum.restic.net/t/restic-alpine-container-cron-hangs-epoll-pwait/3334\n\n * Bugfix #3166: Improve error handling in the `restore` command\n\n   The `restore` command used to not print errors while downloading file contents\n   from the repository. It also incorrectly exited with a zero error code even when\n   there were errors during the restore process. This has all been fixed and\n   `restore` now returns with a non-zero exit code when there's an error.\n\n   https://github.com/restic/restic/issues/3166\n   https://github.com/restic/restic/pull/3207\n\n * Bugfix #3232: Correct statistics for overlapping backup sources\n\n   A user reported that restic's statistics and progress information during backup\n   was not correctly calculated when the backup sources (files/dirs to save)\n   overlap. For example, consider a directory `foo` which contains (among others) a\n   file `foo/bar`. When `restic backup foo foo/bar` was run, restic counted the\n   size of the file `foo/bar` twice, so the completeness percentage as well as the\n   number of files was wrong. This is now corrected.\n\n   https://github.com/restic/restic/issues/3232\n   https://github.com/restic/restic/pull/3243\n\n * Bugfix #3249: Improve error handling in `gs` backend\n\n   The `gs` backend did not notice when the last step of completing a file upload\n   failed. Under rare circumstances, this could cause missing files in the backup\n   repository. This has now been fixed.\n\n   https://github.com/restic/restic/pull/3249\n\n * Change #3095: Deleting files on Google Drive now moves them to the trash\n\n   When deleting files on Google Drive via the `rclone` backend, restic used to\n   bypass the trash folder required that one used the `-o rclone.args` option to\n   enable usage of the trash folder. This ensured that deleted files in Google\n   Drive were not kept indefinitely in the trash folder. However, since Google\n   Drive's trash retention policy changed to deleting trashed files after 30 days,\n   this is no longer needed.\n\n   Restic now leaves it up to rclone and its configuration to use or not use the\n   trash folder when deleting files. The default is to use the trash folder, as of\n   rclone 1.53.2. To re-enable the restic 0.11 behavior, set the\n   `RCLONE_DRIVE_USE_TRASH` environment variable or change the rclone\n   configuration. See the rclone documentation for more details.\n\n   https://github.com/restic/restic/issues/3095\n   https://github.com/restic/restic/pull/3102\n\n * Enhancement #909: Back up mountpoints as empty directories\n\n   When the `--one-file-system` option is specified to `restic backup`, it ignores\n   all file systems mounted below one of the target directories. This means that\n   when a snapshot is restored, users needed to manually recreate the mountpoint\n   directories.\n\n   Restic now backs up mountpoints as empty directories and therefore implements\n   the same approach as `tar`.\n\n   https://github.com/restic/restic/issues/909\n   https://github.com/restic/restic/pull/3119\n\n * Enhancement #2186: Allow specifying percentage in `check --read-data-subset`\n\n   We've enhanced the `check` command's `--read-data-subset` option to also accept\n   a percentage (e.g. `2.5%` or `10%`). This will check the given percentage of\n   pack files (which are randomly selected on each run).\n\n   https://github.com/restic/restic/issues/2186\n   https://github.com/restic/restic/pull/3038\n\n * Enhancement #2433: Make the `dump` command support `zip` format\n\n   Previously, restic could dump the contents of a whole folder structure only in\n   the `tar` format. The `dump` command now has a new flag to change output format\n   to `zip`. Just pass `--archive zip` as an option to `restic dump`.\n\n   https://github.com/restic/restic/pull/2433\n   https://github.com/restic/restic/pull/3081\n\n * Enhancement #2453: Report permanent/fatal backend errors earlier\n\n   When encountering errors in reading from or writing to storage backends, restic\n   retries the failing operation up to nine times (for a total of ten attempts). It\n   used to retry all backend operations, but now detects some permanent error\n   conditions so that it can report fatal errors earlier.\n\n   Permanent failures include local disks being full, SSH connections dropping and\n   permission errors.\n\n   https://github.com/restic/restic/issues/2453\n   https://github.com/restic/restic/issues/3180\n   https://github.com/restic/restic/pull/3170\n   https://github.com/restic/restic/pull/3181\n\n * Enhancement #2495: Add option to let `backup` trust mtime without checking ctime\n\n   The `backup` command used to require that both `ctime` and `mtime` of a file\n   matched with a previously backed up version to determine that the file was\n   unchanged. In other words, if either `ctime` or `mtime` of the file had changed,\n   it would be considered changed and restic would read the file's content again to\n   back up the relevant (changed) parts of it.\n\n   The new option `--ignore-ctime` makes restic look at `mtime` only, such that\n   `ctime` changes for a file does not cause restic to read the file's contents\n   again.\n\n   The check for both `ctime` and `mtime` was introduced in restic 0.9.6 to make\n   backups more reliable in the face of programs that reset `mtime` (some Unix\n   archivers do that), but it turned out to often be expensive because it made\n   restic read file contents even if only the metadata (owner, permissions) of a\n   file had changed. The new `--ignore-ctime` option lets the user restore the\n   0.9.5 behavior when needed. The existing `--ignore-inode` option already turned\n   off this behavior, but also removed a different check.\n\n   Please note that changes in files' metadata are still recorded, regardless of\n   the command line options provided to the backup command.\n\n   https://github.com/restic/restic/issues/2495\n   https://github.com/restic/restic/issues/2558\n   https://github.com/restic/restic/issues/2819\n   https://github.com/restic/restic/pull/2823\n\n * Enhancement #2528: Add Alibaba/Aliyun OSS support in the `s3` backend\n\n   A new extended option `s3.bucket-lookup` has been added to support\n   Alibaba/Aliyun OSS in the `s3` backend. The option can be set to one of the\n   following values:\n\n   - `auto` - Existing behaviour - `dns` - Use DNS style bucket access - `path` -\n   Use path style bucket access\n\n   To make the `s3` backend work with Alibaba/Aliyun OSS you must set\n   `s3.bucket-lookup` to `dns` and set the `s3.region` parameter. For example:\n\n   Restic -o s3.bucket-lookup=dns -o s3.region=oss-eu-west-1 -r\n   s3:https://oss-eu-west-1.aliyuncs.com/bucketname init\n\n   Note that `s3.region` must be set, otherwise the MinIO SDK tries to look it up\n   and it seems that Alibaba doesn't support that properly.\n\n   https://github.com/restic/restic/issues/2528\n   https://github.com/restic/restic/pull/2535\n\n * Enhancement #2706: Configurable progress reports for non-interactive terminals\n\n   The `backup`, `check` and `prune` commands never printed any progress reports on\n   non-interactive terminals. This behavior is now configurable using the\n   `RESTIC_PROGRESS_FPS` environment variable. Use for example a value of `1` for\n   an update every second, or `0.01666` for an update every minute.\n\n   The `backup` command now also prints the current progress when restic receives a\n   `SIGUSR1` signal.\n\n   Setting the `RESTIC_PROGRESS_FPS` environment variable or sending a `SIGUSR1`\n   signal prints a status report even when `--quiet` was specified.\n\n   https://github.com/restic/restic/issues/2706\n   https://github.com/restic/restic/issues/3194\n   https://github.com/restic/restic/pull/3199\n\n * Enhancement #2718: Improve `prune` performance and make it more customizable\n\n   The `prune` command is now much faster. This is especially the case for remote\n   repositories or repositories with not much data to remove. Also the memory usage\n   of the `prune` command is now reduced.\n\n   Restic used to rebuild the index from scratch after pruning. This could lead to\n   missing packs in the index in some cases for eventually consistent backends such\n   as e.g. AWS S3. This behavior is now changed and the index rebuilding uses the\n   information already known by `prune`.\n\n   By default, the `prune` command no longer removes all unused data. This behavior\n   can be fine-tuned by new options, like the acceptable amount of unused space or\n   the maximum size of data to reorganize. For more details, please see\n   https://restic.readthedocs.io/en/stable/060_forget.html .\n\n   Moreover, `prune` now accepts the `--dry-run` option and also running `forget\n   --dry-run --prune` will show what `prune` would do.\n\n   This enhancement also fixes several open issues, e.g.: -\n   https://github.com/restic/restic/issues/1140 -\n   https://github.com/restic/restic/issues/1599 -\n   https://github.com/restic/restic/issues/1985 -\n   https://github.com/restic/restic/issues/2112 -\n   https://github.com/restic/restic/issues/2227 -\n   https://github.com/restic/restic/issues/2305\n\n   https://github.com/restic/restic/pull/2718\n   https://github.com/restic/restic/pull/2842\n\n * Enhancement #2941: Speed up the repacking step of the `prune` command\n\n   The repack step of the `prune` command, which moves still used file parts into\n   new pack files such that the old ones can be garbage collected later on, now\n   processes multiple pack files in parallel. This is especially beneficial for\n   high latency backends or when using a fast network connection.\n\n   https://github.com/restic/restic/pull/2941\n\n * Enhancement #2944: Add `backup` options `--files-from-{verbatim,raw}`\n\n   The new `backup` options `--files-from-verbatim` and `--files-from-raw` read a\n   list of files to back up from a file. Unlike the existing `--files-from` option,\n   these options do not interpret the listed filenames as glob patterns; instead,\n   whitespace in filenames is preserved as-is and no pattern expansion is done.\n   Please see the documentation for specifics.\n\n   These new options are highly recommended over `--files-from`, when using a\n   script to generate the list of files to back up.\n\n   https://github.com/restic/restic/issues/2944\n   https://github.com/restic/restic/issues/3013\n\n * Enhancement #3006: Speed up the `rebuild-index` command\n\n   We've optimized the `rebuild-index` command. Now, existing index entries are\n   used to minimize the number of pack files that must be read. This speeds up the\n   index rebuild a lot.\n\n   Additionally, the option `--read-all-packs` has been added, implementing the\n   previous behavior.\n\n   https://github.com/restic/restic/pull/3006\n   https://github.com/restic/restic/issue/2547\n\n * Enhancement #3048: Add more checks for index and pack files in the `check` command\n\n   The `check` command run with the `--read-data` or `--read-data-subset` options\n   used to only verify only the pack file content - it did not check if the blobs\n   within the pack are correctly contained in the index.\n\n   A check for the latter is now in place, which can print the following error:\n\n   Blob ID is not contained in index or position is incorrect\n\n   Another test is also added, which compares pack file sizes computed from the\n   index and the pack header with the actual file size. This test is able to detect\n   truncated pack files.\n\n   If the index is not correct, it can be rebuilt by using the `rebuild-index`\n   command.\n\n   Having added these tests, `restic check` is now able to detect non-existing\n   blobs which are wrongly referenced in the index. This situation could have lead\n   to missing data.\n\n   https://github.com/restic/restic/pull/3048\n   https://github.com/restic/restic/pull/3082\n\n * Enhancement #3083: Allow usage of deprecated S3 `ListObjects` API\n\n   Some S3 API implementations, e.g. Ceph before version 14.2.5, have a broken\n   `ListObjectsV2` implementation which causes problems for restic when using their\n   API endpoints. When a broken server implementation is used, restic prints errors\n   similar to the following:\n\n   List() returned error: Truncated response should have continuation token set\n\n   As a temporary workaround, restic now allows using the older `ListObjects`\n   endpoint by setting the `s3.list-objects-v1` extended option, for instance:\n\n   Restic -o s3.list-objects-v1=true snapshots\n\n   Please note that this option may be removed in future versions of restic.\n\n   https://github.com/restic/restic/issues/3083\n   https://github.com/restic/restic/pull/3085\n\n * Enhancement #3099: Reduce memory usage of `check` command\n\n   The `check` command now requires less memory if it is run without the\n   `--check-unused` option.\n\n   https://github.com/restic/restic/pull/3099\n\n * Enhancement #3106: Parallelize scan of snapshot content in `copy` and `prune`\n\n   The `copy` and `prune` commands used to traverse the directories of snapshots\n   one by one to find used data. This snapshot traversal is now parallelized which\n   can speed up this step several times.\n\n   In addition the `check` command now reports how many snapshots have already been\n   processed.\n\n   https://github.com/restic/restic/pull/3106\n\n * Enhancement #3130: Parallelize reading of locks and snapshots\n\n   Restic used to read snapshots sequentially. For repositories containing many\n   snapshots this slowed down commands which have to read all snapshots.\n\n   Now the reading of snapshots is parallelized. This speeds up for example\n   `prune`, `backup` and other commands that search for snapshots with certain\n   properties or which have to find the `latest` snapshot.\n\n   The speed up also applies to locks stored in the backup repository.\n\n   https://github.com/restic/restic/pull/3130\n   https://github.com/restic/restic/pull/3174\n\n * Enhancement #3147: Support additional environment variables for Swift authentication\n\n   The `swift` backend now supports the following additional environment variables\n   for passing authentication details to restic: `OS_USER_ID`, `OS_USER_DOMAIN_ID`,\n   `OS_PROJECT_DOMAIN_ID` and `OS_TRUST_ID`\n\n   Depending on the `openrc` configuration file these might be required when the\n   user and project domains differ from one another.\n\n   https://github.com/restic/restic/issues/3147\n   https://github.com/restic/restic/pull/3158\n\n * Enhancement #3191: Add release binaries for MIPS architectures\n\n   We've added a few new architectures for Linux to the release binaries: `mips`,\n   `mipsle`, `mips64`, and `mip64le`. MIPS is mostly used for low-end embedded\n   systems.\n\n   https://github.com/restic/restic/issues/3191\n   https://github.com/restic/restic/pull/3208\n\n * Enhancement #3250: Add several more error checks\n\n   We've added a lot more error checks in places where errors were previously\n   ignored (as hinted by the static analysis program `errcheck` via\n   `golangci-lint`).\n\n   https://github.com/restic/restic/pull/3250\n\n * Enhancement #3254: Enable HTTP/2 for backend connections\n\n   Go's HTTP library usually automatically chooses between HTTP/1.x and HTTP/2\n   depending on what the server supports. But for compatibility this mechanism is\n   disabled if DialContext is used (which is the case for restic). This change\n   allows restic's HTTP client to negotiate HTTP/2 if supported by the server.\n\n   https://github.com/restic/restic/pull/3254\n\n\n# Changelog for restic 0.11.0 (2020-11-05)\nThe following sections list the changes in restic 0.11.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1212: Restore timestamps and permissions on intermediate directories\n * Fix #1756: Mark repository files as read-only when using the local backend\n * Fix #2241: Hide password in REST backend repository URLs\n * Fix #2319: Correctly dump directories into tar files\n * Fix #2491: Don't require `self-update --output` placeholder file\n * Fix #2834: Fix rare cases of backup command hanging forever\n * Fix #2938: Fix manpage formatting\n * Fix #2942: Make --exclude-larger-than handle disappearing files\n * Fix #2951: Restic generate, help and self-update no longer check passwords\n * Fix #2979: Make snapshots --json output [] instead of null when no snapshots\n * Enh #340: Add support for Volume Shadow Copy Service (VSS) on Windows\n * Enh #1458: New option --repository-file\n * Enh #2849: Authenticate to Google Cloud Storage with access token\n * Enh #2969: Optimize check for unchanged files during backup\n * Enh #2978: Warn if parent snapshot cannot be loaded during backup\n\n## Details\n\n * Bugfix #1212: Restore timestamps and permissions on intermediate directories\n\n   When using the `--include` option of the restore command, restic restored\n   timestamps and permissions only on directories selected by the include pattern.\n   Intermediate directories, which are necessary to restore files located in sub-\n   directories, were created with default permissions. We've fixed the restore\n   command to restore timestamps and permissions for these directories as well.\n\n   https://github.com/restic/restic/issues/1212\n   https://github.com/restic/restic/issues/1402\n   https://github.com/restic/restic/pull/2906\n\n * Bugfix #1756: Mark repository files as read-only when using the local backend\n\n   Files stored in a local repository were marked as writable on the filesystem for\n   non-Windows systems, which did not prevent accidental file modifications outside\n   of restic. In addition, the local backend did not work with certain filesystems\n   and network mounts which do not permit modifications of file permissions.\n\n   Restic now marks files stored in a local repository as read-only on the\n   filesystem on non-Windows systems. The error handling is improved to support\n   more filesystems.\n\n   https://github.com/restic/restic/issues/1756\n   https://github.com/restic/restic/issues/2157\n   https://github.com/restic/restic/pull/2989\n\n * Bugfix #2241: Hide password in REST backend repository URLs\n\n   When using a password in the REST backend repository URL, the password could in\n   some cases be included in the output from restic, e.g. when initializing a repo\n   or during an error.\n\n   The password is now replaced with \"***\" where applicable.\n\n   https://github.com/restic/restic/issues/2241\n   https://github.com/restic/restic/pull/2658\n\n * Bugfix #2319: Correctly dump directories into tar files\n\n   The dump command previously wrote directories in a tar file in a way which can\n   cause compatibility problems. This caused, for example, 7zip on Windows to not\n   open tar files containing directories. In addition it was not possible to dump\n   directories with extended attributes. These compatibility problems are now\n   corrected.\n\n   In addition, a tar file now includes the name of the owner and group of a file.\n\n   https://github.com/restic/restic/issues/2319\n   https://github.com/restic/restic/pull/3039\n\n * Bugfix #2491: Don't require `self-update --output` placeholder file\n\n   `restic self-update --output /path/to/new-restic` used to require that\n   new-restic was an existing file, to be overwritten. Now it's possible to\n   download an updated restic binary to a new path, without first having to create\n   a placeholder file.\n\n   https://github.com/restic/restic/issues/2491\n   https://github.com/restic/restic/pull/2937\n\n * Bugfix #2834: Fix rare cases of backup command hanging forever\n\n   We've fixed an issue with the backup progress reporting which could cause restic\n   to hang forever right before finishing a backup.\n\n   https://github.com/restic/restic/issues/2834\n   https://github.com/restic/restic/pull/2963\n\n * Bugfix #2938: Fix manpage formatting\n\n   The manpage formatting in restic v0.10.0 was garbled, which is fixed now.\n\n   https://github.com/restic/restic/issues/2938\n   https://github.com/restic/restic/pull/2977\n\n * Bugfix #2942: Make --exclude-larger-than handle disappearing files\n\n   There was a small bug in the backup command's --exclude-larger-than option where\n   files that disappeared between scanning and actually backing them up to the\n   repository caused a panic. This is now fixed.\n\n   https://github.com/restic/restic/issues/2942\n\n * Bugfix #2951: Restic generate, help and self-update no longer check passwords\n\n   The commands `restic cache`, `generate`, `help` and `self-update` don't need\n   passwords, but they previously did run the RESTIC_PASSWORD_COMMAND (if set in\n   the environment), prompting users to authenticate for no reason. They now skip\n   running the password command.\n\n   https://github.com/restic/restic/issues/2951\n   https://github.com/restic/restic/pull/2987\n\n * Bugfix #2979: Make snapshots --json output [] instead of null when no snapshots\n\n   Restic previously output `null` instead of `[]` for the `--json snapshots`\n   command, when there were no snapshots in the repository. This caused some minor\n   problems when parsing the output, but is now fixed such that `[]` is output when\n   the list of snapshots is empty.\n\n   https://github.com/restic/restic/issues/2979\n   https://github.com/restic/restic/pull/2984\n\n * Enhancement #340: Add support for Volume Shadow Copy Service (VSS) on Windows\n\n   Volume Shadow Copy Service allows read access to files that are locked by\n   another process using an exclusive lock through a filesystem snapshot. Restic\n   was unable to backup those files before. This update enables backing up these\n   files.\n\n   This needs to be enabled explicitly using the --use-fs-snapshot option of the\n   backup command.\n\n   https://github.com/restic/restic/issues/340\n   https://github.com/restic/restic/pull/2274\n\n * Enhancement #1458: New option --repository-file\n\n   We've added a new command-line option --repository-file as an alternative to -r.\n   This allows to read the repository URL from a file in order to prevent certain\n   types of information leaks, especially for URLs containing credentials.\n\n   https://github.com/restic/restic/issues/1458\n   https://github.com/restic/restic/issues/2900\n   https://github.com/restic/restic/pull/2910\n\n * Enhancement #2849: Authenticate to Google Cloud Storage with access token\n\n   When using the GCS backend, it is now possible to authenticate with OAuth2\n   access tokens instead of a credentials file by setting the GOOGLE_ACCESS_TOKEN\n   environment variable.\n\n   https://github.com/restic/restic/pull/2849\n\n * Enhancement #2969: Optimize check for unchanged files during backup\n\n   During a backup restic skips processing files which have not changed since the\n   last backup run. Previously this required opening each file once which can be\n   slow on network filesystems. The backup command now checks for file changes\n   before opening a file. This considerably reduces the time to create a backup on\n   network filesystems.\n\n   https://github.com/restic/restic/issues/2969\n   https://github.com/restic/restic/pull/2970\n\n * Enhancement #2978: Warn if parent snapshot cannot be loaded during backup\n\n   During a backup restic uses the parent snapshot to check whether a file was\n   changed and has to be backed up again. For this check the backup has to read the\n   directories contained in the old snapshot. If a tree blob cannot be loaded,\n   restic now warns about this problem with the backup repository.\n\n   https://github.com/restic/restic/pull/2978\n\n\n# Changelog for restic 0.10.0 (2020-09-19)\nThe following sections list the changes in restic 0.10.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1863: Report correct number of directories processed by backup\n * Fix #2254: Fix tar issues when dumping `/`\n * Fix #2281: Handle format verbs like '%' properly in `find` output\n * Fix #2298: Do not hang when run as a background job\n * Fix #2389: Fix mangled json output of backup command\n * Fix #2390: Refresh lock timestamp\n * Fix #2429: Backup --json reports total_bytes_processed as 0\n * Fix #2469: Fix incorrect bytes stats in `diff` command\n * Fix #2518: Do not crash with Synology NAS sftp server\n * Fix #2531: Fix incorrect size calculation in `stats --mode restore-size`\n * Fix #2537: Fix incorrect file counts in `stats --mode restore-size`\n * Fix #2592: SFTP backend supports IPv6 addresses\n * Fix #2607: Honor RESTIC_CACHE_DIR environment variable on Mac and Windows\n * Fix #2668: Don't abort the stats command when data blobs are missing\n * Fix #2674: Add stricter prune error checks\n * Fix #2899: Fix possible crash in the progress bar of check --read-data\n * Chg #1597: Honor the --no-lock flag in the mount command\n * Chg #2482: Remove vendored dependencies\n * Chg #2546: Return exit code 3 when failing to backup all source data\n * Chg #2600: Update dependencies, require Go >= 1.13\n * Enh #323: Add command for copying snapshots between repositories\n * Enh #551: Use optimized library for hash calculation of file chunks\n * Enh #1570: Support specifying multiple host flags for various commands\n * Enh #1680: Optimize `restic mount`\n * Enh #2072: Display snapshot date when using `restic find`\n * Enh #2175: Allow specifying user and host when creating keys\n * Enh #2195: Simplify and improve restore performance\n * Enh #2277: Add support for ppc64le\n * Enh #2328: Improve speed of check command\n * Enh #2395: Ignore sync errors when operation not supported by local filesystem\n * Enh #2423: Support user@domain parsing as user\n * Enh #2427: Add flag `--iexclude-file` to backup command\n * Enh #2569: Support excluding files by their size\n * Enh #2571: Self-heal missing file parts during backup of unchanged files\n * Enh #2576: Improve the chunking algorithm\n * Enh #2598: Improve speed of diff command\n * Enh #2599: Slightly reduce memory usage of prune and stats commands\n * Enh #2733: S3 backend: Add support for WebIdentityTokenFile\n * Enh #2773: Optimize handling of new index entries\n * Enh #2781: Reduce memory consumption of in-memory index\n * Enh #2786: Optimize `list blobs` command\n * Enh #2790: Optimized file access in restic mount\n * Enh #2840: Speed-up file deletion in forget, prune and rebuild-index\n * Enh #2858: Support filtering snapshots by tag and path in the stats command\n\n## Details\n\n * Bugfix #1863: Report correct number of directories processed by backup\n\n   The directory statistics calculation was fixed to report the actual number of\n   processed directories instead of always zero.\n\n   https://github.com/restic/restic/issues/1863\n\n * Bugfix #2254: Fix tar issues when dumping `/`\n\n   We've fixed an issue with dumping either `/` or files on the first sublevel e.g.\n   `/foo` to tar. This also fixes tar dumping issues on Windows where this issue\n   could also happen.\n\n   https://github.com/restic/restic/issues/2254\n   https://github.com/restic/restic/issues/2357\n   https://github.com/restic/restic/pull/2255\n\n * Bugfix #2281: Handle format verbs like '%' properly in `find` output\n\n   The JSON or \"normal\" output of the `find` command can now deal with file names\n   that contain substrings which the Golang `fmt` package considers \"format verbs\"\n   like `%s`.\n\n   https://github.com/restic/restic/issues/2281\n\n * Bugfix #2298: Do not hang when run as a background job\n\n   Restic did hang on exit while restoring the terminal configuration when it was\n   started as a background job, for example using `restic ... &`. This has been\n   fixed by only restoring the terminal configuration when restic is interrupted\n   while reading a password from the terminal.\n\n   https://github.com/restic/restic/issues/2298\n\n * Bugfix #2389: Fix mangled json output of backup command\n\n   We've fixed a race condition in the json output of the backup command that could\n   cause multiple lines to get mixed up. We've also ensured that the backup summary\n   is printed last.\n\n   https://github.com/restic/restic/issues/2389\n   https://github.com/restic/restic/pull/2545\n\n * Bugfix #2390: Refresh lock timestamp\n\n   Long-running operations did not refresh lock timestamp, resulting in locks\n   becoming stale. This is now fixed.\n\n   https://github.com/restic/restic/issues/2390\n\n * Bugfix #2429: Backup --json reports total_bytes_processed as 0\n\n   We've fixed the json output of total_bytes_processed. The non-json output was\n   already fixed with pull request #2138 but left the json output untouched.\n\n   https://github.com/restic/restic/issues/2429\n\n * Bugfix #2469: Fix incorrect bytes stats in `diff` command\n\n   In some cases, the wrong number of bytes (e.g. 16777215.998 TiB) were reported\n   by the `diff` command. This is now fixed.\n\n   https://github.com/restic/restic/issues/2469\n\n * Bugfix #2518: Do not crash with Synology NAS sftp server\n\n   It was found that when restic is used to store data on an sftp server on a\n   Synology NAS with a relative path (one which does not start with a slash), it\n   may go into an endless loop trying to create directories on the server. We've\n   fixed this bug by using a function in the sftp library instead of our own\n   implementation.\n\n   The bug was discovered because the Synology sftp server behaves erratic with\n   non-absolute path (e.g. `home/restic-repo`). This can be resolved by just using\n   an absolute path instead (`/home/restic-repo`). We've also added a paragraph in\n   the FAQ.\n\n   https://github.com/restic/restic/issues/2518\n   https://github.com/restic/restic/issues/2363\n   https://github.com/restic/restic/pull/2530\n\n * Bugfix #2531: Fix incorrect size calculation in `stats --mode restore-size`\n\n   The restore-size mode of stats was counting hard-linked files as if they were\n   independent.\n\n   https://github.com/restic/restic/issues/2531\n\n * Bugfix #2537: Fix incorrect file counts in `stats --mode restore-size`\n\n   The restore-size mode of stats was failing to count empty directories and some\n   files with hard links.\n\n   https://github.com/restic/restic/issues/2537\n\n * Bugfix #2592: SFTP backend supports IPv6 addresses\n\n   The SFTP backend now supports IPv6 addresses natively, without relying on\n   aliases in the external SSH configuration.\n\n   https://github.com/restic/restic/pull/2592\n\n * Bugfix #2607: Honor RESTIC_CACHE_DIR environment variable on Mac and Windows\n\n   On Mac and Windows, the RESTIC_CACHE_DIR environment variable was ignored. This\n   variable can now be used on all platforms to set the directory where restic\n   stores caches.\n\n   https://github.com/restic/restic/pull/2607\n\n * Bugfix #2668: Don't abort the stats command when data blobs are missing\n\n   Running the stats command in the blobs-per-file mode on a repository with\n   missing data blobs previously resulted in a crash.\n\n   https://github.com/restic/restic/pull/2668\n\n * Bugfix #2674: Add stricter prune error checks\n\n   Additional checks were added to the prune command in order to improve resiliency\n   to backend, hardware and/or networking issues. The checks now detect a few more\n   cases where such outside factors could potentially cause data loss.\n\n   https://github.com/restic/restic/pull/2674\n\n * Bugfix #2899: Fix possible crash in the progress bar of check --read-data\n\n   We've fixed a possible crash while displaying the progress bar for the check\n   --read-data command. The crash occurred when the length of the progress bar\n   status exceeded the terminal width, which only happened for very narrow terminal\n   windows.\n\n   https://github.com/restic/restic/pull/2899\n   https://forum.restic.net/t/restic-rclone-pcloud-connection-issues/2963/15\n\n * Change #1597: Honor the --no-lock flag in the mount command\n\n   The mount command now does not lock the repository if given the --no-lock flag.\n   This allows to mount repositories which are archived on a read only\n   backend/filesystem.\n\n   https://github.com/restic/restic/issues/1597\n   https://github.com/restic/restic/pull/2821\n\n * Change #2482: Remove vendored dependencies\n\n   We've removed the vendored dependencies (in the subdir `vendor/`). When building\n   restic, the Go compiler automatically fetches the dependencies. It will also\n   cryptographically verify that the correct code has been fetched by using the\n   hashes in `go.sum` (see the link to the documentation below).\n\n   https://github.com/restic/restic/issues/2482\n   https://golang.org/cmd/go/#hdr-Module_downloading_and_verification\n\n * Change #2546: Return exit code 3 when failing to backup all source data\n\n   The backup command used to return a zero exit code as long as a snapshot could\n   be created successfully, even if some of the source files could not be read (in\n   which case the snapshot would contain the rest of the files).\n\n   This made it hard for automation/scripts to detect failures/incomplete backups\n   by looking at the exit code. Restic now returns the following exit codes for the\n   backup command:\n\n   - 0 when the command was successful - 1 when there was a fatal error (no\n   snapshot created) - 3 when some source data could not be read (incomplete\n   snapshot created)\n\n   https://github.com/restic/restic/issues/956\n   https://github.com/restic/restic/issues/2064\n   https://github.com/restic/restic/issues/2526\n   https://github.com/restic/restic/issues/2364\n   https://github.com/restic/restic/pull/2546\n\n * Change #2600: Update dependencies, require Go >= 1.13\n\n   Restic now requires Go to be at least 1.13. This allows simplifications in the\n   build process and removing workarounds.\n\n   This is also probably the last version of restic still supporting mounting\n   repositories via fuse on macOS. The library we're using for fuse does not\n   support macOS any more and osxfuse is not open source any more.\n\n   https://github.com/bazil/fuse/issues/224\n   https://github.com/osxfuse/osxfuse/issues/590\n   https://github.com/restic/restic/pull/2600\n   https://github.com/restic/restic/pull/2852\n   https://github.com/restic/restic/pull/2927\n\n * Enhancement #323: Add command for copying snapshots between repositories\n\n   We've added a copy command, allowing you to copy snapshots from one repository\n   to another.\n\n   Note that this process will have to read (download) and write (upload) the\n   entire snapshot(s) due to the different encryption keys used on the source and\n   destination repository. Also, the transferred files are not re-chunked, which\n   may break deduplication between files already stored in the destination repo and\n   files copied there using this command.\n\n   To fully support deduplication between repositories when the copy command is\n   used, the init command now supports the `--copy-chunker-params` option, which\n   initializes the new repository with identical parameters for splitting files\n   into chunks as an already existing repository. This allows copied snapshots to\n   be equally deduplicated in both repositories.\n\n   https://github.com/restic/restic/issues/323\n   https://github.com/restic/restic/pull/2606\n   https://github.com/restic/restic/pull/2928\n\n * Enhancement #551: Use optimized library for hash calculation of file chunks\n\n   We've switched the library used to calculate the hashes of file chunks, which\n   are used for deduplication, to the optimized Minio SHA-256 implementation.\n\n   Depending on the CPU it improves the hashing throughput by 10-30%. Modern x86\n   CPUs with the SHA Extension should be about two to three times faster.\n\n   https://github.com/restic/restic/issues/551\n   https://github.com/restic/restic/pull/2709\n\n * Enhancement #1570: Support specifying multiple host flags for various commands\n\n   Previously commands didn't take more than one `--host` or `-H` argument into\n   account, which could be limiting with e.g. the `forget` command.\n\n   The `dump`, `find`, `forget`, `ls`, `mount`, `restore`, `snapshots`, `stats` and\n   `tag` commands will now take into account multiple `--host` and `-H` flags.\n\n   https://github.com/restic/restic/issues/1570\n\n * Enhancement #1680: Optimize `restic mount`\n\n   We've optimized the FUSE implementation used within restic. `restic mount` is\n   now more responsive and uses less memory.\n\n   https://github.com/restic/restic/issues/1680\n   https://github.com/restic/restic/pull/2587\n   https://github.com/restic/restic/pull/2787\n\n * Enhancement #2072: Display snapshot date when using `restic find`\n\n   Added the respective snapshot date to the output of `restic find`.\n\n   https://github.com/restic/restic/issues/2072\n\n * Enhancement #2175: Allow specifying user and host when creating keys\n\n   When adding a new key to the repository, the username and hostname for the new\n   key can be specified on the command line. This allows overriding the defaults,\n   for example if you would prefer to use the FQDN to identify the host or if you\n   want to add keys for several different hosts without having to run the key add\n   command on those hosts.\n\n   https://github.com/restic/restic/issues/2175\n\n * Enhancement #2195: Simplify and improve restore performance\n\n   Significantly improves restore performance of large files (i.e. 50M+):\n   https://github.com/restic/restic/issues/2074\n   https://forum.restic.net/t/restore-using-rclone-gdrive-backend-is-slow/1112/8\n   https://forum.restic.net/t/degraded-restore-performance-s3-backend/1400\n\n   Fixes \"not enough cache capacity\" error during restore:\n   https://github.com/restic/restic/issues/2244\n\n   NOTE: This new implementation does not guarantee order in which blobs are\n   written to the target files and, for example, the last blob of a file can be\n   written to the file before any of the preceding file blobs. It is therefore\n   possible to have gaps in the data written to the target files if restore fails\n   or interrupted by the user.\n\n   The implementation will try to preallocate space for the restored files on the\n   filesystem to prevent file fragmentation. This ensures good read performance for\n   large files, like for example VM images. If preallocating space is not supported\n   by the filesystem, then this step is silently skipped.\n\n   https://github.com/restic/restic/pull/2195\n   https://github.com/restic/restic/pull/2893\n\n * Enhancement #2277: Add support for ppc64le\n\n   Adds support for ppc64le, the processor architecture from IBM.\n\n   https://github.com/restic/restic/issues/2277\n\n * Enhancement #2328: Improve speed of check command\n\n   We've improved the check command to traverse trees only once independent of\n   whether they are contained in multiple snapshots. The check command is now much\n   faster for repositories with a large number of snapshots.\n\n   https://github.com/restic/restic/issues/2284\n   https://github.com/restic/restic/pull/2328\n\n * Enhancement #2395: Ignore sync errors when operation not supported by local filesystem\n\n   The local backend has been modified to work with filesystems which doesn't\n   support the `sync` operation. This operation is normally used by restic to\n   ensure that data files are fully written to disk before continuing.\n\n   For these limited filesystems, saving a file in the backend would previously\n   fail with an \"operation not supported\" error. This error is now ignored, which\n   means that e.g. an SMB mount on macOS can now be used as storage location for a\n   repository.\n\n   https://github.com/restic/restic/issues/2395\n   https://forum.restic.net/t/sync-errors-on-mac-over-smb/1859\n\n * Enhancement #2423: Support user@domain parsing as user\n\n   Added the ability for user@domain-like users to be authenticated over SFTP\n   servers.\n\n   https://github.com/restic/restic/pull/2423\n\n * Enhancement #2427: Add flag `--iexclude-file` to backup command\n\n   The backup command now supports the flag `--iexclude-file` which is a\n   case-insensitive version of `--exclude-file`.\n\n   https://github.com/restic/restic/issues/2427\n   https://github.com/restic/restic/pull/2898\n\n * Enhancement #2569: Support excluding files by their size\n\n   The `backup` command now supports the `--exclude-larger-than` option to exclude\n   files which are larger than the specified maximum size. This can for example be\n   useful to exclude unimportant files with a large file size.\n\n   https://github.com/restic/restic/issues/2569\n   https://github.com/restic/restic/pull/2914\n\n * Enhancement #2571: Self-heal missing file parts during backup of unchanged files\n\n   We've improved the resilience of restic to certain types of repository\n   corruption.\n\n   For files that are unchanged since the parent snapshot, the backup command now\n   verifies that all parts of the files still exist in the repository. Parts that\n   are missing, e.g. from a damaged repository, are backed up again. This\n   verification was already run for files that were modified since the parent\n   snapshot, but is now also done for unchanged files.\n\n   Note that restic will not backup file parts that are referenced in the index but\n   where the actual data is not present on disk, as this situation can only be\n   detected by restic check. Please ensure that you run `restic check` regularly.\n\n   https://github.com/restic/restic/issues/2571\n   https://github.com/restic/restic/pull/2827\n\n * Enhancement #2576: Improve the chunking algorithm\n\n   We've updated the chunker library responsible for splitting files into smaller\n   blocks. It should improve the chunking throughput by 5-15% depending on the CPU.\n\n   https://github.com/restic/restic/issues/2820\n   https://github.com/restic/restic/pull/2576\n   https://github.com/restic/restic/pull/2845\n\n * Enhancement #2598: Improve speed of diff command\n\n   We've improved the performance of the diff command when comparing snapshots with\n   similar content. It should run up to twice as fast as before.\n\n   https://github.com/restic/restic/pull/2598\n\n * Enhancement #2599: Slightly reduce memory usage of prune and stats commands\n\n   The prune and the stats command kept directory identifiers in memory twice while\n   searching for used blobs.\n\n   https://github.com/restic/restic/pull/2599\n\n * Enhancement #2733: S3 backend: Add support for WebIdentityTokenFile\n\n   We've added support for EKS IAM roles for service accounts feature to the S3\n   backend.\n\n   https://github.com/restic/restic/issues/2703\n   https://github.com/restic/restic/pull/2733\n\n * Enhancement #2773: Optimize handling of new index entries\n\n   Restic now uses less memory for backups which add a lot of data, e.g. large\n   initial backups. In addition, we've improved the stability in some edge cases.\n\n   https://github.com/restic/restic/pull/2773\n\n * Enhancement #2781: Reduce memory consumption of in-memory index\n\n   We've improved how the index is stored in memory. This change can reduce memory\n   usage for large repositories by up to 50% (depending on the operation).\n\n   https://github.com/restic/restic/pull/2781\n   https://github.com/restic/restic/pull/2812\n\n * Enhancement #2786: Optimize `list blobs` command\n\n   We've changed the implementation of `list blobs` which should be now a bit\n   faster and consume almost no memory even for large repositories.\n\n   https://github.com/restic/restic/pull/2786\n\n * Enhancement #2790: Optimized file access in restic mount\n\n   Reading large (> 100GiB) files from restic mountpoints is now faster, and the\n   speedup is greater for larger files.\n\n   https://github.com/restic/restic/pull/2790\n\n * Enhancement #2840: Speed-up file deletion in forget, prune and rebuild-index\n\n   We've sped up the file deletion for the commands forget, prune and\n   rebuild-index, especially for remote repositories. Deletion was sequential\n   before and is now run in parallel.\n\n   https://github.com/restic/restic/pull/2840\n\n * Enhancement #2858: Support filtering snapshots by tag and path in the stats command\n\n   We've added filtering snapshots by `--tag tagList` and by `--path path` to the\n   `stats` command. This includes filtering of only 'latest' snapshots or all\n   snapshots in a repository.\n\n   https://github.com/restic/restic/issues/2858\n   https://github.com/restic/restic/pull/2859\n   https://forum.restic.net/t/stats-for-a-host-and-filtered-snapshots/3020\n\n\n# Changelog for restic 0.9.6 (2019-11-22)\nThe following sections list the changes in restic 0.9.6 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2063: Allow absolute path for filename when backing up from stdin\n * Fix #2174: Save files with invalid timestamps\n * Fix #2249: Read fresh metadata for unmodified files\n * Fix #2301: Add upper bound for t in --read-data-subset=n/t\n * Fix #2321: Check errors when loading index files\n * Enh #2179: Use ctime when checking for file changes\n * Enh #2306: Allow multiple retries for interactive password input\n * Enh #2330: Make `--group-by` accept both singular and plural\n * Enh #2350: Add option to configure S3 region\n\n## Details\n\n * Bugfix #2063: Allow absolute path for filename when backing up from stdin\n\n   When backing up from stdin, handle directory path for `--stdin-filename`. This\n   can be used to specify the full path for the backed-up file.\n\n   https://github.com/restic/restic/issues/2063\n\n * Bugfix #2174: Save files with invalid timestamps\n\n   When restic reads invalid timestamps (year is before 0000 or after 9999) it\n   refused to read and archive the file. We've changed the behavior and will now\n   save modified timestamps with the year set to either 0000 or 9999, the rest of\n   the timestamp stays the same, so the file will be saved (albeit with a bogus\n   timestamp).\n\n   https://github.com/restic/restic/issues/2174\n   https://github.com/restic/restic/issues/1173\n\n * Bugfix #2249: Read fresh metadata for unmodified files\n\n   Restic took all metadata for files which were detected as unmodified, not taking\n   into account changed metadata (ownership, mode). This is now corrected.\n\n   https://github.com/restic/restic/issues/2249\n   https://github.com/restic/restic/pull/2252\n\n * Bugfix #2301: Add upper bound for t in --read-data-subset=n/t\n\n   256 is the effective maximum for t, but restic would allow larger values,\n   leading to strange behavior.\n\n   https://github.com/restic/restic/issues/2301\n   https://github.com/restic/restic/pull/2304\n\n * Bugfix #2321: Check errors when loading index files\n\n   Restic now checks and handles errors which occur when loading index files, the\n   missing check leads to odd errors (and a stack trace printed to users) later.\n   This was reported in the forum.\n\n   https://github.com/restic/restic/pull/2321\n   https://forum.restic.net/t/check-rebuild-index-prune/1848/13\n\n * Enhancement #2179: Use ctime when checking for file changes\n\n   Previously, restic only checked a file's mtime (along with other non-timestamp\n   metadata) to decide if a file has changed. This could cause restic to not notice\n   that a file has changed (and therefore continue to store the old version, as\n   opposed to the modified version) if something edits the file and then resets the\n   timestamp. Restic now also checks the ctime of files, so any modifications to a\n   file should be noticed, and the modified file will be backed up. The ctime check\n   will be disabled if the --ignore-inode flag was given.\n\n   If this change causes problems for you, please open an issue, and we can look in\n   to adding a separate flag to disable just the ctime check.\n\n   https://github.com/restic/restic/issues/2179\n   https://github.com/restic/restic/pull/2212\n\n * Enhancement #2306: Allow multiple retries for interactive password input\n\n   Restic used to quit if the repository password was typed incorrectly once.\n   Restic will now ask the user again for the repository password if typed\n   incorrectly. The user will now get three tries to input the correct password\n   before restic quits.\n\n   https://github.com/restic/restic/issues/2306\n\n * Enhancement #2330: Make `--group-by` accept both singular and plural\n\n   One can now use the values `host`/`hosts`, `path`/`paths` and `tag` / `tags`\n   interchangeably in the `--group-by` argument.\n\n   https://github.com/restic/restic/issues/2330\n\n * Enhancement #2350: Add option to configure S3 region\n\n   We've added a new option for setting the region when accessing an S3-compatible\n   service. For some providers, it is required to set this to a valid value. You\n   can do that either by setting the environment variable `AWS_DEFAULT_REGION` or\n   using the option `s3.region`, e.g. like this: `-o s3.region=\"us-east-1\"`.\n\n   https://github.com/restic/restic/pull/2350\n\n\n# Changelog for restic 0.9.5 (2019-04-23)\nThe following sections list the changes in restic 0.9.5 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #2135: Return error when no bytes could be read from stdin\n * Fix #2181: Don't cancel timeout after 30 seconds for self-update\n * Fix #2203: Fix reading passwords from stdin\n * Fix #2224: Don't abort the find command when a tree can't be loaded\n * Enh #1895: Add case insensitive include & exclude options\n * Enh #1937: Support streaming JSON output for backup\n * Enh #2037: Add group-by option to snapshots command\n * Enh #2124: Ability to dump folders to tar via stdout\n * Enh #2139: Return error if no bytes could be read for `backup --stdin`\n * Enh #2155: Add Openstack application credential auth for Swift\n * Enh #2184: Add --json support to forget command\n * Enh #2205: Add --ignore-inode option to backup cmd\n * Enh #2220: Add config option to set S3 storage class\n\n## Details\n\n * Bugfix #2135: Return error when no bytes could be read from stdin\n\n   We assume that users reading backup data from stdin want to know when no data\n   could be read, so now restic returns an error when `backup --stdin` is called\n   but no bytes could be read. Usually, this means that an earlier command in a\n   pipe has failed. The documentation was amended and now recommends setting the\n   `pipefail` option (`set -o pipefail`).\n\n   https://github.com/restic/restic/pull/2135\n   https://github.com/restic/restic/pull/2139\n\n * Bugfix #2181: Don't cancel timeout after 30 seconds for self-update\n\n   https://github.com/restic/restic/issues/2181\n\n * Bugfix #2203: Fix reading passwords from stdin\n\n   Passwords for the `init`, `key add`, and `key passwd` commands can now be read\n   from non-terminal stdin.\n\n   https://github.com/restic/restic/issues/2203\n\n * Bugfix #2224: Don't abort the find command when a tree can't be loaded\n\n   Change the find command so that missing trees don't result in a crash. Instead,\n   the error is logged to the debug log, and the tree ID is displayed along with\n   the snapshot it belongs to. This makes it possible to recover repositories that\n   are missing trees by forgetting the snapshots they are used in.\n\n   https://github.com/restic/restic/issues/2224\n\n * Enhancement #1895: Add case insensitive include & exclude options\n\n   The backup and restore commands now have --iexclude and --iinclude flags as case\n   insensitive variants of --exclude and --include.\n\n   https://github.com/restic/restic/issues/1895\n   https://github.com/restic/restic/pull/2032\n\n * Enhancement #1937: Support streaming JSON output for backup\n\n   We've added support for getting machine-readable status output during backup,\n   just pass the flag `--json` for `restic backup` and restic will output a stream\n   of JSON objects which contain the current progress.\n\n   https://github.com/restic/restic/issues/1937\n   https://github.com/restic/restic/pull/1944\n\n * Enhancement #2037: Add group-by option to snapshots command\n\n   We have added an option to group the output of the snapshots command, similar to\n   the output of the forget command. The option has been called \"--group-by\" and\n   accepts any combination of the values \"host\", \"paths\" and \"tags\", separated by\n   commas. Default behavior (not specifying --group-by) has not been changed. We\n   have added support of the grouping to the JSON output.\n\n   https://github.com/restic/restic/issues/2037\n   https://github.com/restic/restic/pull/2087\n\n * Enhancement #2124: Ability to dump folders to tar via stdout\n\n   We've added the ability to dump whole folders to stdout via the `dump` command.\n   Restic now requires at least Go 1.10 due to a limitation of the standard library\n   for Go <= 1.9.\n\n   https://github.com/restic/restic/issues/2123\n   https://github.com/restic/restic/pull/2124\n\n * Enhancement #2139: Return error if no bytes could be read for `backup --stdin`\n\n   When restic is used to backup the output of a program, like `mysqldump | restic\n   backup --stdin`, it now returns an error if no bytes could be read at all. This\n   catches the failure case when `mysqldump` failed for some reason and did not\n   output any data to stdout.\n\n   https://github.com/restic/restic/pull/2139\n\n * Enhancement #2155: Add Openstack application credential auth for Swift\n\n   Since Openstack Queens Identity (auth V3) service supports an application\n   credential auth method. It allows to create a technical account with the limited\n   roles. This commit adds an application credential authentication method for the\n   Swift backend.\n\n   https://github.com/restic/restic/issues/2155\n\n * Enhancement #2184: Add --json support to forget command\n\n   The forget command now supports the --json argument, outputting the information\n   about what is (or would-be) kept and removed from the repository.\n\n   https://github.com/restic/restic/issues/2184\n   https://github.com/restic/restic/pull/2185\n\n * Enhancement #2205: Add --ignore-inode option to backup cmd\n\n   This option handles backup of virtual filesystems that do not keep fixed inodes\n   for files, like Fuse-based, pCloud, etc. Ignoring inode changes allows to\n   consider the file as unchanged if last modification date and size are unchanged.\n\n   https://github.com/restic/restic/issues/1631\n   https://github.com/restic/restic/pull/2205\n   https://github.com/restic/restic/pull/2047\n\n * Enhancement #2220: Add config option to set S3 storage class\n\n   The `s3.storage-class` option can be passed to restic (using `-o`) to specify\n   the storage class to be used for S3 objects created by restic.\n\n   The storage class is passed as-is to S3, so it needs to be understood by the\n   API. On AWS, it can be one of `STANDARD`, `STANDARD_IA`, `ONEZONE_IA`,\n   `INTELLIGENT_TIERING` and `REDUCED_REDUNDANCY`. If unspecified, the default\n   storage class is used (`STANDARD` on AWS).\n\n   You can mix storage classes in the same bucket, and the setting isn't stored in\n   the restic repository, so be sure to specify it with each command that writes to\n   S3.\n\n   https://github.com/restic/restic/issues/706\n   https://github.com/restic/restic/pull/2220\n\n\n# Changelog for restic 0.9.4 (2019-01-06)\nThe following sections list the changes in restic 0.9.4 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1989: Google Cloud Storage: Respect bandwidth limit\n * Fix #2040: Add host name filter shorthand flag for `stats` command\n * Fix #2068: Correctly return error loading data\n * Fix #2095: Consistently use local time for snapshots times\n * Enh #1605: Concurrent restore\n * Enh #2017: Mount: Enforce FUSE Unix permissions with allow-other\n * Enh #2070: Make all commands display timestamps in local time\n * Enh #2085: Allow --files-from to be specified multiple times\n * Enh #2089: Increase granularity of the \"keep within\" retention policy\n * Enh #2094: Run command to get password\n * Enh #2097: Add key hinting\n\n## Details\n\n * Bugfix #1989: Google Cloud Storage: Respect bandwidth limit\n\n   The GCS backend did not respect the bandwidth limit configured, a previous\n   commit accidentally removed support for it.\n\n   https://github.com/restic/restic/issues/1989\n   https://github.com/restic/restic/pull/2100\n\n * Bugfix #2040: Add host name filter shorthand flag for `stats` command\n\n   The default value for `--host` flag was set to 'H' (the shorthand version of the\n   flag), this caused the lookup for the latest snapshot to fail.\n\n   Add shorthand flag `-H` for `--host` (with empty default so if these flags are\n   not specified the latest snapshot will not filter by host name).\n\n   Also add shorthand `-H` for `backup` command.\n\n   https://github.com/restic/restic/issues/2040\n\n * Bugfix #2068: Correctly return error loading data\n\n   In one case during `prune` and `check`, an error loading data from the backend\n   is not returned properly. This is now corrected.\n\n   https://github.com/restic/restic/issues/1999#issuecomment-433737921\n   https://github.com/restic/restic/pull/2068\n\n * Bugfix #2095: Consistently use local time for snapshots times\n\n   By default snapshots created with restic backup were set to local time, but when\n   the --time flag was used the provided timestamp was parsed as UTC. With this\n   change all snapshots times are set to local time.\n\n   https://github.com/restic/restic/pull/2095\n\n * Enhancement #1605: Concurrent restore\n\n   This change significantly improves restore performance, especially when using\n   high-latency remote repositories like B2.\n\n   The implementation now uses several concurrent threads to download and process\n   multiple remote files concurrently. To further reduce restore time, each remote\n   file is downloaded using a single repository request.\n\n   https://github.com/restic/restic/issues/1605\n   https://github.com/restic/restic/pull/1719\n\n * Enhancement #2017: Mount: Enforce FUSE Unix permissions with allow-other\n\n   The fuse mount (`restic mount`) now lets the kernel check the permissions of the\n   files within snapshots (this is done through the `DefaultPermissions` FUSE\n   option) when the option `--allow-other` is specified.\n\n   To restore the old behavior, we've added the `--no-default-permissions` option.\n   This allows all users that have access to the mount point to access all files\n   within the snapshots.\n\n   https://github.com/restic/restic/pull/2017\n\n * Enhancement #2070: Make all commands display timestamps in local time\n\n   Restic used to drop the timezone information from displayed timestamps, it now\n   converts timestamps to local time before printing them so the times can be\n   easily compared to.\n\n   https://github.com/restic/restic/pull/2070\n\n * Enhancement #2085: Allow --files-from to be specified multiple times\n\n   Before, restic took only the last file specified with `--files-from` into\n   account, this is now corrected.\n\n   https://github.com/restic/restic/issues/2085\n   https://github.com/restic/restic/pull/2086\n\n * Enhancement #2089: Increase granularity of the \"keep within\" retention policy\n\n   The `keep-within` option of the `forget` command now accepts time ranges with an\n   hourly granularity. For example, running `restic forget --keep-within 3d12h`\n   will keep all the snapshots made within three days and twelve hours from the\n   time of the latest snapshot.\n\n   https://github.com/restic/restic/issues/2089\n   https://github.com/restic/restic/pull/2090\n\n * Enhancement #2094: Run command to get password\n\n   We've added the `--password-command` option which allows specifying a command\n   that restic runs every time the password for the repository is needed, so it can\n   be integrated with a password manager or keyring. The option can also be set via\n   the environment variable `$RESTIC_PASSWORD_COMMAND`.\n\n   https://github.com/restic/restic/pull/2094\n\n * Enhancement #2097: Add key hinting\n\n   Added a new option `--key-hint` and corresponding environment variable\n   `RESTIC_KEY_HINT`. The key hint is a key ID to try decrypting first, before\n   other keys in the repository.\n\n   This change will benefit repositories with many keys; if the correct key hint is\n   supplied then restic only needs to check one key. If the key hint is incorrect\n   (the key does not exist, or the password is incorrect) then restic will check\n   all keys, as usual.\n\n   https://github.com/restic/restic/issues/2097\n\n\n# Changelog for restic 0.9.3 (2018-10-13)\nThe following sections list the changes in restic 0.9.3 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1935: Remove truncated files from cache\n * Fix #1978: Do not return an error when the scanner is slower than backup\n * Enh #1766: Restore: suppress lchown errors when not running as root\n * Enh #1777: Improve the `find` command\n * Enh #1876: Display reason why forget keeps snapshots\n * Enh #1891: Accept glob in paths loaded via --files-from\n * Enh #1909: Reject files/dirs by name first\n * Enh #1920: Vendor dependencies with Go 1.11 Modules\n * Enh #1940: Add directory filter to ls command\n * Enh #1949: Add new command `self-update`\n * Enh #1953: Ls: Add JSON output support for restic ls cmd\n * Enh #1962: Stream JSON output for ls command\n * Enh #1967: Use `--host` everywhere\n * Enh #2028: Display size of cache directories\n\n## Details\n\n * Bugfix #1935: Remove truncated files from cache\n\n   When a file in the local cache is truncated, and restic tries to access data\n   beyond the end of the (cached) file, it used to return an error \"EOF\". This is\n   now fixed, such truncated files are removed and the data is fetched directly\n   from the backend.\n\n   https://github.com/restic/restic/issues/1935\n\n * Bugfix #1978: Do not return an error when the scanner is slower than backup\n\n   When restic makes a backup, there's a background task called \"scanner\" which\n   collects information on how many files and directories are to be saved, in order\n   to display progress information to the user. When the backup finishes faster\n   than the scanner, it is aborted because the result is not needed any more. This\n   logic contained a bug, where quitting the scanner process was treated as an\n   error, and caused restic to print an unhelpful error message (\"context\n   canceled\").\n\n   https://github.com/restic/restic/issues/1978\n   https://github.com/restic/restic/pull/1991\n\n * Enhancement #1766: Restore: suppress lchown errors when not running as root\n\n   Like \"cp\" and \"rsync\" do, restic now only reports errors for changing the\n   ownership of files during restore if it is run ￼as root, on non-Windows\n   operating systems. On Windows, the error is reported as usual.\n\n   https://github.com/restic/restic/issues/1766\n\n * Enhancement #1777: Improve the `find` command\n\n   We've updated the `find` command to support multiple patterns.\n\n   `restic find` is now able to list the snapshots containing a specific tree or\n   blob, or even the snapshots that contain blobs belonging to a given pack. A list\n   of IDs can be given, as long as they all have the same type.\n\n   The command `find` can also display the pack IDs the blobs belong to, if the\n   `--show-pack-id` flag is provided.\n\n   https://github.com/restic/restic/issues/1777\n   https://github.com/restic/restic/pull/1780\n\n * Enhancement #1876: Display reason why forget keeps snapshots\n\n   We've added a column to the list of snapshots `forget` keeps which details the\n   reasons to keep a particular snapshot. This makes debugging policies for forget\n   much easier. Please remember to always try things out with `--dry-run`!\n\n   https://github.com/restic/restic/pull/1876\n\n * Enhancement #1891: Accept glob in paths loaded via --files-from\n\n   Before that, behaviour was different if paths were appended to command line or\n   from a file, because wild card characters were expanded by shell if appended to\n   command line, but not expanded if loaded from file.\n\n   https://github.com/restic/restic/issues/1891\n\n * Enhancement #1909: Reject files/dirs by name first\n\n   The current scanner/archiver code had an architectural limitation: it always ran\n   the `lstat()` system call on all files and directories before a decision to\n   include/exclude the file/dir was made. This lead to a lot of unnecessary system\n   calls for items that could have been rejected by their name or path only.\n\n   We've changed the archiver/scanner implementation so that it now first rejects\n   by name/path, and only runs the system call on the remaining items. This reduces\n   the number of `lstat()` system calls a lot (depending on the exclude settings).\n\n   https://github.com/restic/restic/issues/1909\n   https://github.com/restic/restic/pull/1912\n\n * Enhancement #1920: Vendor dependencies with Go 1.11 Modules\n\n   Until now, we've used `dep` for managing dependencies, we've now switch to using\n   Go modules. For users this does not change much, only if you want to compile\n   restic without downloading anything with Go 1.11, then you need to run: `go\n   build -mod=vendor build.go`\n\n   https://github.com/restic/restic/pull/1920\n\n * Enhancement #1940: Add directory filter to ls command\n\n   The ls command can now be filtered by directories, so that only files in the\n   given directories will be shown. If the --recursive flag is specified, then ls\n   will traverse subfolders and list their files as well.\n\n   It used to be possible to specify multiple snapshots, but that has been replaced\n   by only one snapshot and the possibility of specifying multiple directories.\n\n   Specifying directories constrains the walk, which can significantly speed up the\n   listing.\n\n   https://github.com/restic/restic/issues/1940\n   https://github.com/restic/restic/pull/1941\n\n * Enhancement #1949: Add new command `self-update`\n\n   We have added a new command called `self-update` which downloads the latest\n   released version of restic from GitHub and replaces the current binary with it.\n   It does not rely on any external program (so it'll work everywhere), but still\n   verifies the GPG signature using the embedded GPG public key.\n\n   By default, the `self-update` command is hidden behind the `selfupdate` built\n   tag, which is only set when restic is built using `build.go` (including official\n   releases). The reason for this is that downstream distributions will then not\n   include the command by default, so users are encouraged to use the\n   platform-specific distribution mechanism.\n\n   https://github.com/restic/restic/pull/1949\n\n * Enhancement #1953: Ls: Add JSON output support for restic ls cmd\n\n   We've implemented listing files in the repository with JSON as output, just pass\n   `--json` as an option to `restic ls`. This makes the output of the command\n   machine readable.\n\n   https://github.com/restic/restic/pull/1953\n\n * Enhancement #1962: Stream JSON output for ls command\n\n   The `ls` command now supports JSON output with the global `--json` flag, and\n   this change streams out JSON messages one object at a time rather than en entire\n   array buffered in memory before encoding. The advantage is it allows large\n   listings to be handled efficiently.\n\n   Two message types are printed: snapshots and nodes. A snapshot object will\n   precede node objects which belong to that snapshot. The `struct_type` field can\n   be used to determine which kind of message an object is.\n\n   https://github.com/restic/restic/pull/1962\n\n * Enhancement #1967: Use `--host` everywhere\n\n   We now use the flag `--host` for all commands which need a host name, using\n   `--hostname` (e.g. for `restic backup`) still works, but will print a\n   deprecation warning. Also, add the short option `-H` where possible.\n\n   https://github.com/restic/restic/issues/1967\n\n * Enhancement #2028: Display size of cache directories\n\n   The `cache` command now by default shows the size of the individual cache\n   directories. It can be disabled with `--no-size`.\n\n   https://github.com/restic/restic/issues/2028\n   https://github.com/restic/restic/pull/2033\n\n\n# Changelog for restic 0.9.2 (2018-08-06)\nThe following sections list the changes in restic 0.9.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1854: Allow saving files/dirs on different fs with `--one-file-system`\n * Fix #1861: Fix case-insensitive search with restic find\n * Fix #1870: Fix restore with --include\n * Fix #1880: Use `--cache-dir` argument for `check` command\n * Fix #1893: Return error when exclude file cannot be read\n * Enh #874: Add stats command to get information about a repository\n * Enh #1477: S3 backend: accept AWS_SESSION_TOKEN\n * Enh #1772: Add restore --verify to verify restored file content\n * Enh #1853: Add JSON output support to `restic key list`\n * Enh #1901: Update the Backblaze B2 library\n * Enh #1906: Add support for B2 application keys\n\n## Details\n\n * Bugfix #1854: Allow saving files/dirs on different fs with `--one-file-system`\n\n   Restic now allows saving files/dirs on a different file system in a subdir\n   correctly even when `--one-file-system` is specified.\n\n   The first thing the restic archiver code does is to build a tree of the target\n   files/directories. If it detects that a parent directory is already included\n   (e.g. `restic backup /foo /foo/bar/baz`), it'll ignore the latter argument.\n\n   Without `--one-file-system`, that's perfectly valid: If `/foo` is to be\n   archived, it will include `/foo/bar/baz`. But with `--one-file-system`,\n   `/foo/bar/baz` may reside on a different file system, so it won't be included\n   with `/foo`.\n\n   https://github.com/restic/restic/issues/1854\n   https://github.com/restic/restic/pull/1855\n\n * Bugfix #1861: Fix case-insensitive search with restic find\n\n   We've fixed the behavior for `restic find -i PATTERN`, which was broken in\n   v0.9.1.\n\n   https://github.com/restic/restic/pull/1861\n\n * Bugfix #1870: Fix restore with --include\n\n   We fixed a bug which prevented restic to restore files with an include filter.\n\n   https://github.com/restic/restic/issues/1870\n   https://github.com/restic/restic/pull/1900\n\n * Bugfix #1880: Use `--cache-dir` argument for `check` command\n\n   `check` command now uses a temporary sub-directory of the specified directory if\n   set using the `--cache-dir` argument. If not set, the cache directory is created\n   in the default temporary directory as before. In either case a temporary cache\n   is used to ensure the actual repository is checked (rather than a local copy).\n\n   The `--cache-dir` argument was not used by the `check` command, instead a cache\n   directory was created in the temporary directory.\n\n   https://github.com/restic/restic/issues/1880\n\n * Bugfix #1893: Return error when exclude file cannot be read\n\n   A bug was found: when multiple exclude files were passed to restic and one of\n   them could not be read, an error was printed and restic continued, ignoring even\n   the existing exclude files. Now, an error message is printed and restic aborts\n   when an exclude file cannot be read.\n\n   https://github.com/restic/restic/issues/1893\n\n * Enhancement #874: Add stats command to get information about a repository\n\n   https://github.com/restic/restic/issues/874\n   https://github.com/restic/restic/pull/1729\n\n * Enhancement #1477: S3 backend: accept AWS_SESSION_TOKEN\n\n   Before, it was not possible to use s3 backend with AWS temporary security\n   credentials(with AWS_SESSION_TOKEN). This change gives higher priority to\n   credentials.EnvAWS credentials provider.\n\n   https://github.com/restic/restic/issues/1477\n   https://github.com/restic/restic/pull/1479\n   https://github.com/restic/restic/pull/1647\n\n * Enhancement #1772: Add restore --verify to verify restored file content\n\n   Restore will print error message if restored file content does not match\n   expected SHA256 checksum\n\n   https://github.com/restic/restic/pull/1772\n\n * Enhancement #1853: Add JSON output support to `restic key list`\n\n   This PR enables users to get the output of `restic key list` in JSON in addition\n   to the existing table format.\n\n   https://github.com/restic/restic/pull/1853\n\n * Enhancement #1901: Update the Backblaze B2 library\n\n   We've updated the library we're using for accessing the Backblaze B2 service to\n   0.5.0 to include support for upcoming so-called \"application keys\". With this\n   feature, you can create access credentials for B2 which are restricted to e.g. a\n   single bucket or even a sub-directory of a bucket.\n\n   https://github.com/restic/restic/pull/1901\n   https://github.com/kurin/blazer\n\n * Enhancement #1906: Add support for B2 application keys\n\n   Restic can now use so-called \"application keys\" which can be created in the B2\n   dashboard and were only introduced recently. In contrast to the \"master key\",\n   such keys can be restricted to a specific bucket and/or path.\n\n   https://github.com/restic/restic/issues/1906\n   https://github.com/restic/restic/pull/1914\n\n\n# Changelog for restic 0.9.1 (2018-06-10)\nThe following sections list the changes in restic 0.9.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1801: Add limiting bandwidth to the rclone backend\n * Fix #1822: Allow uploading large files to MS Azure\n * Fix #1825: Correct `find` to not skip snapshots\n * Fix #1833: Fix caching files on error\n * Fix #1834: Resolve deadlock\n\n## Details\n\n * Bugfix #1801: Add limiting bandwidth to the rclone backend\n\n   The rclone backend did not respect `--limit-upload` or `--limit-download`.\n   Oftentimes it's not necessary to use this, as the limiting in rclone itself\n   should be used because it gives much better results, but in case a remote\n   instance of rclone is used (e.g. called via ssh), it is still relevant to limit\n   the bandwidth from restic to rclone.\n\n   https://github.com/restic/restic/issues/1801\n\n * Bugfix #1822: Allow uploading large files to MS Azure\n\n   Sometimes, restic creates files to be uploaded to the repository which are quite\n   large, e.g. when saving directories with many entries or very large files. The\n   MS Azure API does not allow uploading files larger that 256MiB directly, rather\n   restic needs to upload them in blocks of 100MiB. This is now implemented.\n\n   https://github.com/restic/restic/issues/1822\n\n * Bugfix #1825: Correct `find` to not skip snapshots\n\n   Under certain circumstances, the `find` command was found to skip snapshots\n   containing directories with files to look for when the directories haven't been\n   modified at all, and were already printed as part of a different snapshot. This\n   is now corrected.\n\n   In addition, we've switched to our own matching/pattern implementation, so now\n   things like `restic find \"/home/user/foo/**/main.go\"` are possible.\n\n   https://github.com/restic/restic/issues/1825\n   https://github.com/restic/restic/issues/1823\n\n * Bugfix #1833: Fix caching files on error\n\n   During `check` it may happen that different threads access the same file in the\n   backend, which is then downloaded into the cache only once. When that fails,\n   only the thread which is responsible for downloading the file signals the\n   correct error. The other threads just assume that the file has been downloaded\n   successfully and then get an error when they try to access the cached file.\n\n   https://github.com/restic/restic/issues/1833\n\n * Bugfix #1834: Resolve deadlock\n\n   When the \"scanning\" process restic runs to find out how much data there is does\n   not finish before the backup itself is done, restic stops doing anything. This\n   is resolved now.\n\n   https://github.com/restic/restic/issues/1834\n   https://github.com/restic/restic/pull/1835\n\n\n# Changelog for restic 0.9.0 (2018-05-21)\nThe following sections list the changes in restic 0.9.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1608: Respect time stamp for new backup when reading from stdin\n * Fix #1652: Ignore/remove invalid lock files\n * Fix #1684: Fix backend tests for rest-server\n * Fix #1730: Ignore sockets for restore\n * Fix #1745: Correctly parse the argument to --tls-client-cert\n * Enh #549: Rework archiver code\n * Enh #827: Add --new-password-file flag for non-interactive password changes\n * Enh #1433: Support UTF-16 encoding and process Byte Order Mark\n * Enh #1477: Accept AWS_SESSION_TOKEN for the s3 backend\n * Enh #1552: Use Google Application Default credentials\n * Enh #1561: Allow using rclone to access other services\n * Enh #1648: Ignore AWS permission denied error when creating a repository\n * Enh #1649: Add illumos/Solaris support\n * Enh #1665: Improve cache handling for `restic check`\n * Enh #1709: Improve messages `restic check` prints\n * Enh #1721: Add `cache` command to list cache dirs\n * Enh #1735: Allow keeping a time range of snapshots\n * Enh #1758: Allow saving OneDrive folders in Windows\n * Enh #1782: Use default AWS credentials chain for S3 backend\n\n## Details\n\n * Bugfix #1608: Respect time stamp for new backup when reading from stdin\n\n   When reading backups from stdin (via `restic backup --stdin`), restic now uses\n   the time stamp for the new backup passed in `--time`.\n\n   https://github.com/restic/restic/issues/1608\n   https://github.com/restic/restic/pull/1703\n\n * Bugfix #1652: Ignore/remove invalid lock files\n\n   This corrects a bug introduced recently: When an invalid lock file in the repo\n   is encountered (e.g. if the file is empty), the code used to ignore that, but\n   now returns the error. Now, invalid files are ignored for the normal lock check,\n   and removed when `restic unlock --remove-all` is run.\n\n   https://github.com/restic/restic/issues/1652\n   https://github.com/restic/restic/pull/1653\n\n * Bugfix #1684: Fix backend tests for rest-server\n\n   The REST server for restic now requires an explicit parameter (`--no-auth`) if\n   no authentication should be allowed. This is fixed in the tests.\n\n   https://github.com/restic/restic/pull/1684\n\n * Bugfix #1730: Ignore sockets for restore\n\n   We've received a report and correct the behavior in which the restore code\n   aborted restoring a directory when a socket was encountered. Unix domain socket\n   files cannot be restored (they are created on the fly once a process starts\n   listening). The error handling was corrected, and in addition we're now ignoring\n   sockets during restore.\n\n   https://github.com/restic/restic/issues/1730\n   https://github.com/restic/restic/pull/1731\n\n * Bugfix #1745: Correctly parse the argument to --tls-client-cert\n\n   Previously, the --tls-client-cert method attempt to read ARGV[1] (hardcoded)\n   instead of the argument that was passed to it. This has been corrected.\n\n   https://github.com/restic/restic/issues/1745\n   https://github.com/restic/restic/pull/1746\n\n * Enhancement #549: Rework archiver code\n\n   The core archiver code and the complementary code for the `backup` command was\n   rewritten completely. This resolves very annoying issues such as 549. The first\n   backup with this release of restic will likely result in all files being re-read\n   locally, so it will take a lot longer. The next backup after that will be fast\n   again.\n\n   Basically, with the old code, restic took the last path component of each\n   to-be-saved file or directory as the top-level file/directory within the\n   snapshot. This meant that when called as `restic backup /home/user/foo`, the\n   snapshot would contain the files in the directory `/home/user/foo` as `/foo`.\n\n   This is not the case any more with the new archiver code. Now, restic works very\n   similar to what `tar` does: When restic is called with an absolute path to save,\n   then it'll preserve the directory structure within the snapshot. For the example\n   above, the snapshot would contain the files in the directory within\n   `/home/user/foo` in the snapshot. For relative directories, it only preserves\n   the relative path components. So `restic backup user/foo` will save the files as\n   `/user/foo` in the snapshot.\n\n   While we were at it, the status display and notification system was completely\n   rewritten. By default, restic now shows which files are currently read (unless\n   `--quiet` is specified) in a multi-line status display.\n\n   The `backup` command also gained a new option: `--verbose`. It can be specified\n   once (which prints a bit more detail what restic is doing) or twice (which\n   prints a line for each file/directory restic encountered, together with some\n   statistics).\n\n   Another issue that was resolved is the new code only reads two files at most.\n   The old code would read way too many files in parallel, thereby slowing down the\n   backup process on spinning discs a lot.\n\n   https://github.com/restic/restic/issues/549\n   https://github.com/restic/restic/issues/1286\n   https://github.com/restic/restic/issues/446\n   https://github.com/restic/restic/issues/1344\n   https://github.com/restic/restic/issues/1416\n   https://github.com/restic/restic/issues/1456\n   https://github.com/restic/restic/issues/1145\n   https://github.com/restic/restic/issues/1160\n   https://github.com/restic/restic/pull/1494\n\n * Enhancement #827: Add --new-password-file flag for non-interactive password changes\n\n   This makes it possible to change a repository password without being prompted.\n\n   https://github.com/restic/restic/issues/827\n   https://github.com/restic/restic/pull/1720\n   https://forum.restic.net/t/changing-repo-password-without-prompt/591\n\n * Enhancement #1433: Support UTF-16 encoding and process Byte Order Mark\n\n   On Windows, text editors commonly leave a Byte Order Mark at the beginning of\n   the file to define which encoding is used (oftentimes UTF-16). We've added code\n   to support processing the BOMs in text files, like the exclude files, the\n   password file and the file passed via `--files-from`. This does not apply to any\n   file being saved in a backup, those are not touched and archived as they are.\n\n   https://github.com/restic/restic/issues/1433\n   https://github.com/restic/restic/issues/1738\n   https://github.com/restic/restic/pull/1748\n\n * Enhancement #1477: Accept AWS_SESSION_TOKEN for the s3 backend\n\n   Before, it was not possible to use s3 backend with AWS temporary security\n   credentials(with AWS_SESSION_TOKEN). This change gives higher priority to\n   credentials.EnvAWS credentials provider.\n\n   https://github.com/restic/restic/issues/1477\n   https://github.com/restic/restic/pull/1479\n   https://github.com/restic/restic/pull/1647\n\n * Enhancement #1552: Use Google Application Default credentials\n\n   Google provide libraries to generate appropriate credentials with various\n   fallback sources. This change uses the library to generate our GCS client, which\n   allows us to make use of these extra methods.\n\n   This should be backward compatible with previous restic behaviour while adding\n   the additional capabilities to auth from Google's internal metadata endpoints.\n   For users running restic in GCP this can make authentication far easier than it\n   was before.\n\n   https://github.com/restic/restic/pull/1552\n   https://developers.google.com/identity/protocols/application-default-credentials\n\n * Enhancement #1561: Allow using rclone to access other services\n\n   We've added the ability to use rclone to store backup data on all backends that\n   it supports. This was done in collaboration with Nick, the author of rclone. You\n   can now use it to first configure a service, then restic manages the rest\n   (starting and stopping rclone). For details, please see the manual.\n\n   https://github.com/restic/restic/issues/1561\n   https://github.com/restic/restic/pull/1657\n   https://rclone.org\n\n * Enhancement #1648: Ignore AWS permission denied error when creating a repository\n\n   It's not possible to use s3 backend scoped to a subdirectory(with specific\n   permissions). Restic doesn't try to create repository in a subdirectory, when\n   'bucket exists' of parent directory check fails due to permission issues.\n\n   https://github.com/restic/restic/pull/1648\n\n * Enhancement #1649: Add illumos/Solaris support\n\n   https://github.com/restic/restic/pull/1649\n\n * Enhancement #1665: Improve cache handling for `restic check`\n\n   For safety reasons, restic does not use a local metadata cache for the `restic\n   check` command, so that data is loaded from the repository and restic can check\n   it's in good condition. When the cache is disabled, restic will fetch each tiny\n   blob needed for checking the integrity using a separate backend request. For\n   non-local backends, that will take a long time, and depending on the backend\n   (e.g. B2) may also be much more expensive.\n\n   This PR adds a few commits which will change the behavior as follows:\n\n   * When `restic check` is called without any additional parameters, it will build\n   a new cache in a temporary directory, which is removed at the end of the check.\n   This way, we'll get readahead for metadata files (so restic will fetch the whole\n   file when the first blob from the file is requested), but all data is freshly\n   fetched from the storage backend. This is the default behavior and will work for\n   almost all users.\n\n   * When `restic check` is called with `--with-cache`, the default on-disc cache\n   is used. This behavior hasn't changed since the cache was introduced.\n\n   * When `--no-cache` is specified, restic falls back to the old behavior, and\n   read all tiny blobs in separate requests.\n\n   https://github.com/restic/restic/issues/1665\n   https://github.com/restic/restic/issues/1694\n   https://github.com/restic/restic/pull/1696\n\n * Enhancement #1709: Improve messages `restic check` prints\n\n   Some messages `restic check` prints are not really errors, so from now on restic\n   does not treat them as errors any more and exits cleanly.\n\n   https://github.com/restic/restic/pull/1709\n   https://forum.restic.net/t/what-is-the-standard-procedure-to-follow-if-a-backup-or-restore-is-interrupted/571/2\n\n * Enhancement #1721: Add `cache` command to list cache dirs\n\n   The command `cache` was added, it allows listing restic's cache directoriers\n   together with the last usage. It also allows removing old cache dirs without\n   having to access a repo, via `restic cache --cleanup`\n\n   https://github.com/restic/restic/issues/1721\n   https://github.com/restic/restic/pull/1749\n\n * Enhancement #1735: Allow keeping a time range of snapshots\n\n   We've added the `--keep-within` option to the `forget` command. It instructs\n   restic to keep all snapshots within the given duration since the newest\n   snapshot. For example, running `restic forget --keep-within 5m7d` will keep all\n   snapshots which have been made in the five months and seven days since the\n   latest snapshot.\n\n   https://github.com/restic/restic/pull/1735\n\n * Enhancement #1758: Allow saving OneDrive folders in Windows\n\n   Restic now contains a bugfix to two libraries, which allows saving OneDrive\n   folders in Windows. In order to use the newer versions of the libraries, the\n   minimal version required to compile restic is now Go 1.9.\n\n   https://github.com/restic/restic/issues/1758\n   https://github.com/restic/restic/pull/1765\n\n * Enhancement #1782: Use default AWS credentials chain for S3 backend\n\n   Adds support for file credentials to the S3 backend (e.g. ~/.aws/credentials),\n   and reorders the credentials chain for the S3 backend to match AWS's standard,\n   which is static credentials, env vars, credentials file, and finally remote.\n\n   https://github.com/restic/restic/pull/1782\n\n\n# Changelog for restic 0.8.3 (2018-02-26)\nThe following sections list the changes in restic 0.8.3 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1633: Fixed unexpected 'pack file cannot be listed' error\n * Fix #1638: Handle errors listing files in the backend\n * Fix #1641: Ignore files with invalid names in the repo\n * Enh #1497: Add --read-data-subset flag to check command\n * Enh #1560: Retry all repository file download errors\n * Enh #1623: Don't check for presence of files in the backend before writing\n * Enh #1634: Upgrade B2 client library, reduce HTTP requests\n\n## Details\n\n * Bugfix #1633: Fixed unexpected 'pack file cannot be listed' error\n\n   Due to a regression introduced in 0.8.2, the `rebuild-index` and `prune`\n   commands failed to read pack files with size of 587, 588, 589 or 590 bytes.\n\n   https://github.com/restic/restic/issues/1633\n   https://github.com/restic/restic/pull/1635\n\n * Bugfix #1638: Handle errors listing files in the backend\n\n   A user reported in the forum that restic completes a backup although a\n   concurrent `prune` operation was running. A few error messages were printed, but\n   the backup was attempted and completed successfully. No error code was returned.\n\n   This should not happen: The repository is exclusively locked during `prune`, so\n   when `restic backup` is run in parallel, it should abort and return an error\n   code instead.\n\n   It was found that the bug was in the code introduced only recently, which\n   retries a List() operation on the backend should that fail. It is now corrected.\n\n   https://github.com/restic/restic/pull/1638\n   https://forum.restic.net/t/restic-backup-returns-0-exit-code-when-already-locked/484\n\n * Bugfix #1641: Ignore files with invalid names in the repo\n\n   The release 0.8.2 introduced a bug: when restic encounters files in the repo\n   which do not have a valid name, it tries to load a file with a name of lots of\n   zeroes instead of ignoring it. This is now resolved, invalid file names are just\n   ignored.\n\n   https://github.com/restic/restic/issues/1641\n   https://github.com/restic/restic/pull/1643\n   https://forum.restic.net/t/help-fixing-repo-no-such-file/485/3\n\n * Enhancement #1497: Add --read-data-subset flag to check command\n\n   This change introduces ability to check integrity of a subset of repository data\n   packs. This can be used to spread integrity check of larger repositories over a\n   period of time.\n\n   https://github.com/restic/restic/issues/1497\n   https://github.com/restic/restic/pull/1556\n\n * Enhancement #1560: Retry all repository file download errors\n\n   Restic will now retry failed downloads, similar to other operations.\n\n   https://github.com/restic/restic/pull/1560\n\n * Enhancement #1623: Don't check for presence of files in the backend before writing\n\n   Before, all backend implementations were required to return an error if the file\n   that is to be written already exists in the backend. For most backends, that\n   means making a request (e.g. via HTTP) and returning an error when the file\n   already exists.\n\n   This is not accurate, the file could have been created between the HTTP request\n   testing for it, and when writing starts, so we've relaxed this requirement,\n   which saves one additional HTTP request per newly added file.\n\n   https://github.com/restic/restic/pull/1623\n\n * Enhancement #1634: Upgrade B2 client library, reduce HTTP requests\n\n   We've upgraded the B2 client library restic uses to access BackBlaze B2. This\n   reduces the number of HTTP requests needed to upload a new file from two to one,\n   which should improve throughput to B2.\n\n   https://github.com/restic/restic/pull/1634\n\n\n# Changelog for restic 0.8.2 (2018-02-17)\nThe following sections list the changes in restic 0.8.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1506: Limit bandwidth at the http.RoundTripper for HTTP based backends\n * Fix #1512: Restore directory permissions as the last step\n * Fix #1528: Correctly create missing subdirs in data/\n * Fix #1589: Complete intermediate index upload\n * Fix #1590: Strip spaces for lines read via --files-from\n * Fix #1594: Google Cloud Storage: Use generic HTTP transport\n * Fix #1595: Backup: Remove bandwidth display\n * Enh #1507: Only reload snapshots once per minute for fuse mount\n * Enh #1522: Add support for TLS client certificate authentication\n * Enh #1538: Reduce memory allocations for querying the index\n * Enh #1541: Reduce number of remote requests during repository check\n * Enh #1549: Speed up querying across indices and scanning existing files\n * Enh #1554: Fuse/mount: Correctly handle EOF, add template option\n * Enh #1564: Don't terminate ssh on SIGINT\n * Enh #1567: Reduce number of backend requests for rebuild-index and prune\n * Enh #1579: Retry Backend.List() in case of errors\n * Enh #1584: Limit index file size\n\n## Details\n\n * Bugfix #1506: Limit bandwidth at the http.RoundTripper for HTTP based backends\n\n   https://github.com/restic/restic/issues/1506\n   https://github.com/restic/restic/pull/1511\n\n * Bugfix #1512: Restore directory permissions as the last step\n\n   This change allows restoring into directories that were not writable during\n   backup. Before, restic created the directory, set the read-only mode and then\n   failed to create files in the directory. This change now restores the directory\n   (with its permissions) as the very last step.\n\n   https://github.com/restic/restic/issues/1512\n   https://github.com/restic/restic/pull/1536\n\n * Bugfix #1528: Correctly create missing subdirs in data/\n\n   https://github.com/restic/restic/issues/1528\n   https://github.com/restic/restic/pull/1529\n\n * Bugfix #1589: Complete intermediate index upload\n\n   After a user posted a comprehensive report of what he observed, we were able to\n   find a bug and correct it: During backup, restic uploads so-called\n   \"intermediate\" index files. When the backup finishes during a transfer of such\n   an intermediate index, the upload is cancelled, but the backup is finished\n   without an error. This leads to an inconsistent state, where the snapshot\n   references data that is contained in the repo, but is not referenced in any\n   index.\n\n   The situation can be resolved by building a new index with `rebuild-index`, but\n   looks very confusing at first. Since all the data got uploaded to the repo\n   successfully, there was no risk of data loss, just minor inconvenience for our\n   users.\n\n   https://github.com/restic/restic/pull/1589\n   https://forum.restic.net/t/error-loading-tree-check-prune-and-forget-gives-error-b2-backend/406\n\n * Bugfix #1590: Strip spaces for lines read via --files-from\n\n   Leading and trailing spaces in lines read via `--files-from` are now stripped,\n   so it behaves the same as with lines read via `--exclude-file`.\n\n   https://github.com/restic/restic/issues/1590\n   https://github.com/restic/restic/pull/1613\n\n * Bugfix #1594: Google Cloud Storage: Use generic HTTP transport\n\n   It was discovered that the Google Cloud Storage backend did not use the generic\n   HTTP transport, so things such as bandwidth limiting with `--limit-upload` did\n   not work. This is resolved now.\n\n   https://github.com/restic/restic/pull/1594\n\n * Bugfix #1595: Backup: Remove bandwidth display\n\n   This commit removes the bandwidth displayed during backup process. It is\n   misleading and seldom correct, because it's neither the \"read bandwidth\" (only\n   for the very first backup) nor the \"upload bandwidth\". Many users are confused\n   about (and rightly so), c.f. #1581, #1033, #1591\n\n   We'll eventually replace this display with something more relevant when the new\n   archiver code is ready.\n\n   https://github.com/restic/restic/pull/1595\n\n * Enhancement #1507: Only reload snapshots once per minute for fuse mount\n\n   https://github.com/restic/restic/pull/1507\n\n * Enhancement #1522: Add support for TLS client certificate authentication\n\n   Support has been added for using a TLS client certificate for authentication to\n   HTTP based backend. A file containing the PEM encoded private key and\n   certificate can be set using the `--tls-client-cert` option.\n\n   https://github.com/restic/restic/issues/1522\n   https://github.com/restic/restic/pull/1524\n\n * Enhancement #1538: Reduce memory allocations for querying the index\n\n   This change reduces the internal memory allocations when the index data\n   structures in memory are queried if a blob (part of a file) already exists in\n   the repo. It should speed up backup a bit, and maybe even reduce RAM usage.\n\n   https://github.com/restic/restic/pull/1538\n\n * Enhancement #1541: Reduce number of remote requests during repository check\n\n   This change eliminates redundant remote repository calls and significantly\n   improves repository check time.\n\n   https://github.com/restic/restic/issues/1541\n   https://github.com/restic/restic/pull/1548\n\n * Enhancement #1549: Speed up querying across indices and scanning existing files\n\n   This change increases the whenever a blob (part of a file) is searched for in a\n   restic repository. This will reduce cpu usage some when backing up files already\n   backed up by restic. Cpu usage is further decreased when scanning files.\n\n   https://github.com/restic/restic/pull/1549\n\n * Enhancement #1554: Fuse/mount: Correctly handle EOF, add template option\n\n   We've added the `--snapshot-template` string, which can be used to specify a\n   template for a snapshot directory. In addition, accessing data after the end of\n   a file via the fuse mount is now handled correctly.\n\n   https://github.com/restic/restic/pull/1554\n\n * Enhancement #1564: Don't terminate ssh on SIGINT\n\n   We've reworked the code which runs the `ssh` login for the sftp backend so that\n   it can prompt for a password (if needed) but does not exit when the user presses\n   CTRL+C (SIGINT) e.g. during backup. This allows restic to properly shut down\n   when it receives SIGINT and remove the lock file from the repo, afterwards\n   exiting the `ssh` process.\n\n   https://github.com/restic/restic/pull/1564\n   https://github.com/restic/restic/pull/1588\n\n * Enhancement #1567: Reduce number of backend requests for rebuild-index and prune\n\n   We've found a way to reduce then number of backend requests for the\n   `rebuild-index` and `prune` operations. This significantly speeds up the\n   operations for high-latency backends.\n\n   https://github.com/restic/restic/issues/1567\n   https://github.com/restic/restic/pull/1574\n   https://github.com/restic/restic/pull/1575\n\n * Enhancement #1579: Retry Backend.List() in case of errors\n\n   https://github.com/restic/restic/pull/1579\n\n * Enhancement #1584: Limit index file size\n\n   Before, restic would create a single new index file on `prune` or\n   `rebuild-index`, this may lead to memory problems when this huge index is\n   created and loaded again. We're now limiting the size of the index file, and\n   split newly created index files into several smaller ones. This allows restic to\n   be more memory-efficient.\n\n   https://github.com/restic/restic/issues/1412\n   https://github.com/restic/restic/issues/979\n   https://github.com/restic/restic/issues/526\n   https://github.com/restic/restic/pull/1584\n\n\n# Changelog for restic 0.8.1 (2017-12-27)\nThe following sections list the changes in restic 0.8.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1454: Correct cache dir location for Windows and Darwin\n * Fix #1457: Improve s3 backend with DigitalOcean Spaces\n * Fix #1459: Disable handling SIGPIPE\n * Chg #1452: Do not save atime by default\n * Enh #11: Add the `diff` command\n * Enh #1436: Add code to detect old cache directories\n * Enh #1439: Improve cancellation logic\n\n## Details\n\n * Bugfix #1454: Correct cache dir location for Windows and Darwin\n\n   The cache directory on Windows and Darwin was not correct, instead the directory\n   `.cache` was used.\n\n   https://github.com/restic/restic/pull/1454\n\n * Bugfix #1457: Improve s3 backend with DigitalOcean Spaces\n\n   https://github.com/restic/restic/issues/1457\n   https://github.com/restic/restic/pull/1459\n\n * Bugfix #1459: Disable handling SIGPIPE\n\n   We've disabled handling SIGPIPE again. Turns out, writing to broken TCP\n   connections also raised SIGPIPE, so restic exits on the first write to a broken\n   connection. Instead, restic should retry the request.\n\n   https://github.com/restic/restic/issues/1457\n   https://github.com/restic/restic/issues/1466\n   https://github.com/restic/restic/pull/1459\n\n * Change #1452: Do not save atime by default\n\n   By default, the access time for files and dirs is not saved any more. It is not\n   possible to reliably disable updating the access time during a backup, so for\n   the next backup the access time is different again. This means a lot of metadata\n   is saved. If you want to save the access time anyway, pass `--with-atime` to the\n   `backup` command.\n\n   https://github.com/restic/restic/pull/1452\n\n * Enhancement #11: Add the `diff` command\n\n   The command `diff` was added, it allows comparing two snapshots and listing all\n   differences.\n\n   https://github.com/restic/restic/issues/11\n   https://github.com/restic/restic/issues/1460\n   https://github.com/restic/restic/pull/1462\n\n * Enhancement #1436: Add code to detect old cache directories\n\n   We've added code to detect old cache directories of repositories that haven't\n   been used in a long time, restic now prints a note when it detects that such\n   dirs exist. Also, the option `--cleanup-cache` was added to automatically remove\n   such directories. That's not a problem because the cache will be rebuild once a\n   repo is accessed again.\n\n   https://github.com/restic/restic/pull/1436\n\n * Enhancement #1439: Improve cancellation logic\n\n   The cancellation logic was improved, restic can now shut down cleanly when\n   requested to do so (e.g. via ctrl+c).\n\n   https://github.com/restic/restic/pull/1439\n\n\n# Changelog for restic 0.8.0 (2017-11-26)\nThe following sections list the changes in restic 0.8.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Sec #1445: Prevent writing outside the target directory during restore\n * Fix #1256: Re-enable workaround for S3 backend\n * Fix #1291: Reuse backend TCP connections to BackBlaze B2\n * Fix #1317: Run prune when `forget --prune` is called with just snapshot IDs\n * Fix #1437: Remove implicit path `/restic` for the s3 backend\n * Enh #448: Sftp backend prompts for password\n * Enh #510: Add `dump` command\n * Enh #1040: Add local metadata cache\n * Enh #1102: Add subdirectory `ids` to fuse mount\n * Enh #1114: Add `--cacert` to specify TLS certificates to check against\n * Enh #1216: Add upload/download limiting\n * Enh #1249: Add `latest` symlink in fuse mount\n * Enh #1269: Add `--compact` to `forget` command\n * Enh #1271: Cache results for excludes for `backup`\n * Enh #1274: Add `generate` command, replaces `manpage` and `autocomplete`\n * Enh #1281: Google Cloud Storage backend needs less permissions\n * Enh #1319: Make `check` print `no errors found` explicitly\n * Enh #1353: Retry failed backend requests\n * Enh #1367: Allow comments in files read from via `--file-from`\n\n## Details\n\n * Security #1445: Prevent writing outside the target directory during restore\n\n   A vulnerability was found in the restic restorer, which allowed attackers in\n   special circumstances to restore files to a location outside of the target\n   directory. Due to the circumstances we estimate this to be a low-risk\n   vulnerability, but urge all users to upgrade to the latest version of restic.\n\n   Exploiting the vulnerability requires a Linux/Unix system which saves backups\n   via restic and a Windows systems which restores files from the repo. In\n   addition, the attackers need to be able to create files with arbitrary names\n   which are then saved to the restic repo. For example, by creating a file named\n   \"..\\test.txt\" (which is a perfectly legal filename on Linux) and restoring a\n   snapshot containing this file on Windows, it would be written to the parent of\n   the target directory.\n\n   We'd like to thank Tyler Spivey for reporting this responsibly!\n\n   https://github.com/restic/restic/pull/1445\n\n * Bugfix #1256: Re-enable workaround for S3 backend\n\n   We've re-enabled a workaround for `minio-go` (the library we're using to access\n   s3 backends), this reduces memory usage.\n\n   https://github.com/restic/restic/issues/1256\n   https://github.com/restic/restic/pull/1267\n\n * Bugfix #1291: Reuse backend TCP connections to BackBlaze B2\n\n   A bug was discovered in the library we're using to access Backblaze, it now\n   reuses already established TCP connections which should be a lot faster and not\n   cause network failures any more.\n\n   https://github.com/restic/restic/issues/1291\n   https://github.com/restic/restic/pull/1301\n\n * Bugfix #1317: Run prune when `forget --prune` is called with just snapshot IDs\n\n   A bug in the `forget` command caused `prune` not to be run when `--prune` was\n   specified without a policy, e.g. when only snapshot IDs that should be forgotten\n   are listed manually.\n\n   https://github.com/restic/restic/pull/1317\n\n * Bugfix #1437: Remove implicit path `/restic` for the s3 backend\n\n   The s3 backend used the subdir `restic` within a bucket if no explicit path\n   after the bucket name was specified. Since this version, restic does not use\n   this default path any more. If you created a repo on s3 in a bucket without\n   specifying a path within the bucket, you need to add `/restic` at the end of the\n   repository specification to access your repo:\n   `s3:s3.amazonaws.com/bucket/restic`\n\n   https://github.com/restic/restic/issues/1292\n   https://github.com/restic/restic/pull/1437\n\n * Enhancement #448: Sftp backend prompts for password\n\n   The sftp backend now prompts for the password if a password is necessary for\n   login.\n\n   https://github.com/restic/restic/issues/448\n   https://github.com/restic/restic/pull/1270\n\n * Enhancement #510: Add `dump` command\n\n   We've added the `dump` command which prints a file from a snapshot to stdout.\n   This can e.g. be used to restore files read with `backup --stdin`.\n\n   https://github.com/restic/restic/issues/510\n   https://github.com/restic/restic/pull/1346\n\n * Enhancement #1040: Add local metadata cache\n\n   We've added a local cache for metadata so that restic doesn't need to load all\n   metadata (snapshots, indexes, ...) from the repo each time it starts. By default\n   the cache is active, but there's a new global option `--no-cache` that can be\n   used to disable the cache. By default, the cache a standard cache folder for the\n   OS, which can be overridden with `--cache-dir`. The cache will automatically\n   populate, indexes and snapshots are saved as they are loaded. Cache directories\n   for repos that haven't been used recently can automatically be removed by restic\n   with the `--cleanup-cache` option.\n\n   A related change was to by default create pack files in the repo that contain\n   either data or metadata, not both mixed together. This allows easy caching of\n   only the metadata files. The next run of `restic prune` will untangle mixed\n   files automatically.\n\n   https://github.com/restic/restic/issues/29\n   https://github.com/restic/restic/issues/738\n   https://github.com/restic/restic/issues/282\n   https://github.com/restic/restic/pull/1040\n   https://github.com/restic/restic/pull/1287\n   https://github.com/restic/restic/pull/1436\n   https://github.com/restic/restic/pull/1265\n\n * Enhancement #1102: Add subdirectory `ids` to fuse mount\n\n   The fuse mount now has an `ids` subdirectory which contains the snapshots below\n   their (short) IDs.\n\n   https://github.com/restic/restic/issues/1102\n   https://github.com/restic/restic/pull/1299\n   https://github.com/restic/restic/pull/1320\n\n * Enhancement #1114: Add `--cacert` to specify TLS certificates to check against\n\n   We've added the `--cacert` option which can be used to pass one (or more) CA\n   certificates to restic. These are used in addition to the system CA certificates\n   to verify HTTPS certificates (e.g. for the REST backend).\n\n   https://github.com/restic/restic/issues/1114\n   https://github.com/restic/restic/pull/1276\n\n * Enhancement #1216: Add upload/download limiting\n\n   We've added support for rate limiting through `--limit-upload` and\n   `--limit-download` flags.\n\n   https://github.com/restic/restic/issues/1216\n   https://github.com/restic/restic/pull/1336\n   https://github.com/restic/restic/pull/1358\n\n * Enhancement #1249: Add `latest` symlink in fuse mount\n\n   The directory structure in the fuse mount now exposes a symlink `latest` which\n   points to the latest snapshot in that particular directory.\n\n   https://github.com/restic/restic/pull/1249\n\n * Enhancement #1269: Add `--compact` to `forget` command\n\n   The option `--compact` was added to the `forget` command to provide the same\n   compact view as the `snapshots` command.\n\n   https://github.com/restic/restic/pull/1269\n\n * Enhancement #1271: Cache results for excludes for `backup`\n\n   The `backup` command now caches the result of excludes for a directory.\n\n   https://github.com/restic/restic/issues/1271\n   https://github.com/restic/restic/pull/1326\n\n * Enhancement #1274: Add `generate` command, replaces `manpage` and `autocomplete`\n\n   The `generate` command has been added, which replaces the now removed commands\n   `manpage` and `autocomplete`. This release of restic contains the most recent\n   manpages in `doc/man` and the auto-completion files for bash and zsh in\n   `doc/bash-completion.sh` and `doc/zsh-completion.zsh`\n\n   https://github.com/restic/restic/issues/1274\n   https://github.com/restic/restic/pull/1282\n\n * Enhancement #1281: Google Cloud Storage backend needs less permissions\n\n   The Google Cloud Storage backend no longer requires the service account to have\n   the `storage.buckets.get` permission (\"Storage Admin\" role) in `restic init` if\n   the bucket already exists.\n\n   https://github.com/restic/restic/pull/1281\n\n * Enhancement #1319: Make `check` print `no errors found` explicitly\n\n   The `check` command now explicitly prints `No errors were found` when no errors\n   could be found.\n\n   https://github.com/restic/restic/issues/1303\n   https://github.com/restic/restic/pull/1319\n\n * Enhancement #1353: Retry failed backend requests\n\n   https://github.com/restic/restic/pull/1353\n\n * Enhancement #1367: Allow comments in files read from via `--file-from`\n\n   When the list of files/dirs to be saved is read from a file with `--files-from`,\n   comment lines (starting with `#`) are now ignored.\n\n   https://github.com/restic/restic/issues/1367\n   https://github.com/restic/restic/pull/1368\n\n\n# Changelog for restic 0.7.3 (2017-09-20)\nThe following sections list the changes in restic 0.7.3 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1246: List all files stored in Google Cloud Storage\n\n## Details\n\n * Bugfix #1246: List all files stored in Google Cloud Storage\n\n   For large backups stored in Google Cloud Storage, the `prune` command fails\n   because listing only returns the first 1000 files. This has been corrected, no\n   data is lost in the process. In addition, a plausibility check was added to\n   `prune`.\n\n   https://github.com/restic/restic/issues/1246\n   https://github.com/restic/restic/pull/1247\n\n\n# Changelog for restic 0.7.2 (2017-09-13)\nThe following sections list the changes in restic 0.7.2 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1164: Make the `key remove` command behave as documented\n * Fix #1167: Do not create a local repo unless `init` is used\n * Fix #1191: Make sure to write profiling files on interrupt\n * Enh #317: Add `--exclude-caches` and `--exclude-if-present`\n * Enh #697: Automatically generate man pages for all restic commands\n * Enh #1044: Improve `restore`, do not traverse/load excluded directories\n * Enh #1061: Add Dockerfile and official Docker image\n * Enh #1126: Use the standard Go git repository layout, use `dep` for vendoring\n * Enh #1132: Make `key` command always prompt for a password\n * Enh #1134: Add support for storing backups on Google Cloud Storage\n * Enh #1144: Properly report errors when reading files with exclude patterns\n * Enh #1149: Add support for storing backups on Microsoft Azure Blob Storage\n * Enh #1179: Resolve name conflicts, append a counter\n * Enh #1196: Add `--group-by` to `forget` command for flexible grouping\n * Enh #1203: Print stats on all BSD systems when SIGINFO (ctrl+t) is received\n * Enh #1205: Allow specifying time/date for a backup with `--time`\n * Enh #1218: Add `--compact` to `snapshots` command\n\n## Details\n\n * Bugfix #1164: Make the `key remove` command behave as documented\n\n   https://github.com/restic/restic/pull/1164\n\n * Bugfix #1167: Do not create a local repo unless `init` is used\n\n   When a restic command other than `init` is used with a local repository and the\n   repository directory does not exist, restic creates the directory structure.\n   That's an error, only the `init` command should create the dir.\n\n   https://github.com/restic/restic/issues/1167\n   https://github.com/restic/restic/pull/1182\n\n * Bugfix #1191: Make sure to write profiling files on interrupt\n\n   Since a few releases restic had the ability to write profiling files for memory\n   and CPU usage when `debug` is enabled. It was discovered that when restic is\n   interrupted (ctrl+c is pressed), the proper shutdown hook is not run. This is\n   now corrected.\n\n   https://github.com/restic/restic/pull/1191\n\n * Enhancement #317: Add `--exclude-caches` and `--exclude-if-present`\n\n   A new option `--exclude-caches` was added that allows excluding cache\n   directories (that are tagged as such). This is a special case of a more generic\n   option `--exclude-if-present` which excludes a directory if a file with a\n   specific name (and contents) is present.\n\n   https://github.com/restic/restic/issues/317\n   https://github.com/restic/restic/pull/1170\n   https://github.com/restic/restic/pull/1224\n\n * Enhancement #697: Automatically generate man pages for all restic commands\n\n   https://github.com/restic/restic/issues/697\n   https://github.com/restic/restic/pull/1147\n\n * Enhancement #1044: Improve `restore`, do not traverse/load excluded directories\n\n   https://github.com/restic/restic/pull/1044\n\n * Enhancement #1061: Add Dockerfile and official Docker image\n\n   https://github.com/restic/restic/pull/1061\n\n * Enhancement #1126: Use the standard Go git repository layout, use `dep` for vendoring\n\n   The git repository layout was changed to resemble the layout typically used in\n   Go projects, we're not using `gb` for building restic any more and vendoring the\n   dependencies is now taken care of by `dep`.\n\n   https://github.com/restic/restic/pull/1126\n\n * Enhancement #1132: Make `key` command always prompt for a password\n\n   The `key` command now prompts for a password even if the original password to\n   access a repo has been specified via the `RESTIC_PASSWORD` environment variable\n   or a password file.\n\n   https://github.com/restic/restic/issues/1132\n   https://github.com/restic/restic/pull/1133\n\n * Enhancement #1134: Add support for storing backups on Google Cloud Storage\n\n   https://github.com/restic/restic/issues/211\n   https://github.com/restic/restic/pull/1134\n   https://github.com/restic/restic/pull/1052\n\n * Enhancement #1144: Properly report errors when reading files with exclude patterns\n\n   https://github.com/restic/restic/pull/1144\n\n * Enhancement #1149: Add support for storing backups on Microsoft Azure Blob Storage\n\n   The library we're using to access the service requires Go 1.8, so restic now\n   needs at least Go 1.8.\n\n   https://github.com/restic/restic/issues/609\n   https://github.com/restic/restic/pull/1149\n   https://github.com/restic/restic/pull/1059\n\n * Enhancement #1179: Resolve name conflicts, append a counter\n\n   https://github.com/restic/restic/issues/1179\n   https://github.com/restic/restic/pull/1209\n\n * Enhancement #1196: Add `--group-by` to `forget` command for flexible grouping\n\n   https://github.com/restic/restic/pull/1196\n\n * Enhancement #1203: Print stats on all BSD systems when SIGINFO (ctrl+t) is received\n\n   https://github.com/restic/restic/pull/1203\n   https://github.com/restic/restic/pull/1082#issuecomment-326279920\n\n * Enhancement #1205: Allow specifying time/date for a backup with `--time`\n\n   https://github.com/restic/restic/pull/1205\n\n * Enhancement #1218: Add `--compact` to `snapshots` command\n\n   The option `--compact` was added to the `snapshots` command to get a better\n   overview of the snapshots in a repo. It limits each snapshot to a single line.\n\n   https://github.com/restic/restic/issues/1218\n   https://github.com/restic/restic/pull/1223\n\n\n# Changelog for restic 0.7.1 (2017-07-22)\nThe following sections list the changes in restic 0.7.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #1115: Fix `prune`, only include existing files in indexes\n * Enh #1055: Create subdirs below `data/` for local/sftp backends\n * Enh #1067: Allow loading credentials for s3 from IAM\n * Enh #1073: Add `migrate` cmd to migrate from `s3legacy` to `default` layout\n * Enh #1080: Ignore chmod() errors on filesystems which do not support it\n * Enh #1081: Clarify semantic for `--tag` for the `forget` command\n * Enh #1082: Print stats on SIGINFO on Darwin and FreeBSD (ctrl+t)\n\n## Details\n\n * Bugfix #1115: Fix `prune`, only include existing files in indexes\n\n   A bug was found (and corrected) in the index rebuilding after prune, which led\n   to indexes which include blobs that were not present in the repo any more. There\n   were already checks in place which detected this situation and aborted with an\n   error message. A new run of either `prune` or `rebuild-index` corrected the\n   index files. This is now fixed and a test has been added to detect this.\n\n   https://github.com/restic/restic/pull/1115\n\n * Enhancement #1055: Create subdirs below `data/` for local/sftp backends\n\n   The local and sftp backends now create the subdirs below `data/` on open/init.\n   This way, restic makes sure that they always exist. This is connected to an\n   issue for the sftp server.\n\n   https://github.com/restic/restic/issues/1055\n   https://github.com/restic/rest-server/pull/11#issuecomment-309879710\n   https://github.com/restic/restic/pull/1077\n   https://github.com/restic/restic/pull/1105\n\n * Enhancement #1067: Allow loading credentials for s3 from IAM\n\n   When no S3 credentials are specified in the environment variables, restic now\n   tries to load credentials from an IAM instance profile when the s3 backend is\n   used.\n\n   https://github.com/restic/restic/issues/1067\n   https://github.com/restic/restic/pull/1086\n\n * Enhancement #1073: Add `migrate` cmd to migrate from `s3legacy` to `default` layout\n\n   The `migrate` command for changing the `s3legacy` layout to the `default` layout\n   for s3 backends has been improved: It can now be restarted with `restic migrate\n   --force s3_layout` and automatically retries operations on error.\n\n   https://github.com/restic/restic/issues/1073\n   https://github.com/restic/restic/pull/1075\n\n * Enhancement #1080: Ignore chmod() errors on filesystems which do not support it\n\n   https://github.com/restic/restic/pull/1080\n   https://github.com/restic/restic/pull/1112\n\n * Enhancement #1081: Clarify semantic for `--tag` for the `forget` command\n\n   https://github.com/restic/restic/issues/1081\n   https://github.com/restic/restic/pull/1090\n\n * Enhancement #1082: Print stats on SIGINFO on Darwin and FreeBSD (ctrl+t)\n\n   https://github.com/restic/restic/pull/1082\n\n\n# Changelog for restic 0.7.0 (2017-07-01)\nThe following sections list the changes in restic 0.7.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Fix #965: Switch to `default` repo layout for the s3 backend\n * Fix #1013: Switch back to using the high-level minio-go API for s3\n * Enh #512: Add Backblaze B2 backend\n * Enh #636: Add dirs `tags` and `hosts` to fuse mount\n * Enh #975: Add new backend for OpenStack Swift\n * Enh #989: Improve performance of the `find` command\n * Enh #998: Improve performance of the fuse mount\n * Enh #1021: Detect invalid backend name and print error\n * Enh #1029: Remove invalid pack files when `prune` is run\n\n## Details\n\n * Bugfix #965: Switch to `default` repo layout for the s3 backend\n\n   The default layout for the s3 backend is now `default` (instead of `s3legacy`).\n   Also, there's a new `migrate` command to convert an existing repo, it can be run\n   like this: `restic migrate s3_layout`\n\n   https://github.com/restic/restic/issues/965\n   https://github.com/restic/restic/pull/1004\n\n * Bugfix #1013: Switch back to using the high-level minio-go API for s3\n\n   For the s3 backend we're back to using the high-level API the s3 client library\n   for uploading data, a few users reported dropped connections (which the library\n   will automatically retry now).\n\n   https://github.com/restic/restic/issues/1013\n   https://github.com/restic/restic/issues/1023\n   https://github.com/restic/restic/pull/1025\n\n * Enhancement #512: Add Backblaze B2 backend\n\n   https://github.com/restic/restic/issues/512\n   https://github.com/restic/restic/pull/978\n\n * Enhancement #636: Add dirs `tags` and `hosts` to fuse mount\n\n   The fuse mount now has two more directories: `tags` contains a subdir for each\n   tag, which in turn contains only the snapshots that have this tag. The subdir\n   `hosts` contains a subdir for each host that has a snapshot, and the subdir\n   contains the snapshots for that host.\n\n   https://github.com/restic/restic/issues/636\n   https://github.com/restic/restic/pull/1050\n\n * Enhancement #975: Add new backend for OpenStack Swift\n\n   https://github.com/restic/restic/pull/975\n   https://github.com/restic/restic/pull/648\n\n * Enhancement #989: Improve performance of the `find` command\n\n   Improved performance for the `find` command: Restic recognizes paths it has\n   already checked for the files in question, so the number of backend requests is\n   reduced a lot.\n\n   https://github.com/restic/restic/issues/989\n   https://github.com/restic/restic/pull/993\n\n * Enhancement #998: Improve performance of the fuse mount\n\n   Listing directories which contain large files now is significantly faster.\n\n   https://github.com/restic/restic/pull/998\n\n * Enhancement #1021: Detect invalid backend name and print error\n\n   Restic now tries to detect when an invalid/unknown backend is used and returns\n   an error message.\n\n   https://github.com/restic/restic/issues/1021\n   https://github.com/restic/restic/pull/1070\n\n * Enhancement #1029: Remove invalid pack files when `prune` is run\n\n   The `prune` command has been improved and will now remove invalid pack files,\n   for example files that have not been uploaded completely because a backup was\n   interrupted.\n\n   https://github.com/restic/restic/issues/1029\n   https://github.com/restic/restic/pull/1036\n\n\n# Changelog for restic 0.6.1 (2017-06-01)\nThe following sections list the changes in restic 0.6.1 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Enh #974: Remove regular status reports\n * Enh #981: Remove temporary path from binary in `build.go`\n * Enh #985: Allow multiple parallel idle HTTP connections\n\n## Details\n\n * Enhancement #974: Remove regular status reports\n\n   Regular status report: We've removed the status report that was printed every 10\n   seconds when restic is run non-interactively. You can still force reporting the\n   current status by sending a `USR1` signal to the process.\n\n   https://github.com/restic/restic/pull/974\n\n * Enhancement #981: Remove temporary path from binary in `build.go`\n\n   The `build.go` now strips the temporary directory used for compilation from the\n   binary. This is the first step in enabling reproducible builds.\n\n   https://github.com/restic/restic/pull/981\n\n * Enhancement #985: Allow multiple parallel idle HTTP connections\n\n   Backends based on HTTP now allow several idle connections in parallel. This is\n   especially important for the REST backend, which (when used with a local server)\n   may create a lot connections and exhaust available ports quickly.\n\n   https://github.com/restic/restic/issues/985\n   https://github.com/restic/restic/pull/986\n\n\n# Changelog for restic 0.6.0 (2017-05-29)\nThe following sections list the changes in restic 0.6.0 relevant to\nrestic users. The changes are ordered by importance.\n\n## Summary\n\n * Enh #957: Make `forget` consistent\n * Enh #962: Improve memory and runtime for the s3 backend\n * Enh #966: Unify repository layout for all backends\n\n## Details\n\n * Enhancement #957: Make `forget` consistent\n\n   The `forget` command was corrected to be more consistent in which snapshots are\n   to be forgotten. It is possible that the new code removes more snapshots than\n   before, so please review what would be deleted by using the `--dry-run` option.\n\n   https://github.com/restic/restic/issues/953\n   https://github.com/restic/restic/pull/957\n\n * Enhancement #962: Improve memory and runtime for the s3 backend\n\n   We've updated the library used for accessing s3, switched to using a lower level\n   API and added caching for some requests. This lead to a decrease in memory usage\n   and a great speedup. In addition, we added benchmark functions for all backends,\n   so we can track improvements over time. The Continuous Integration test service\n   we're using (Travis) now runs the s3 backend tests not only against a Minio\n   server, but also against the Amazon s3 live service, so we should be notified of\n   any regressions much sooner.\n\n   https://github.com/restic/restic/pull/962\n   https://github.com/restic/restic/pull/960\n   https://github.com/restic/restic/pull/946\n   https://github.com/restic/restic/pull/938\n   https://github.com/restic/restic/pull/883\n\n * Enhancement #966: Unify repository layout for all backends\n\n   Up to now the s3 backend used a special repository layout. We've decided to\n   unify the repository layout and implemented the default layout also for the s3\n   backend. For creating a new repository on s3 with the default layout, use\n   `restic -o s3.layout=default init`. For further commands the option is not\n   necessary any more, restic will automatically detect the correct layout to use.\n   A future version will switch to the default layout for new repositories.\n\n   https://github.com/restic/restic/issues/965\n   https://github.com/restic/restic/pull/966\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.0458984375,
          "content": "This document describes the way you can contribute to the restic project.\n\nWays to Help Out\n================\n\nThank you for your contribution! Please **open an issue first** (or add a\ncomment to an existing issue) if you plan to work on any code or add a new\nfeature. This way, duplicate work is prevented and we can discuss your ideas\nand design first. Small bugfixes are an exception to this rule, just open a\npull request in this case.\n\nThere are several ways you can help us out. First of all code contributions and\nbug fixes are most welcome. However even \"minor\" details as fixing spelling\nerrors, improving documentation or pointing out usability issues are a great\nhelp also.\n\nThe restic project uses the GitHub infrastructure (see the\n[project page](https://github.com/restic/restic)) for all related discussions\nas well as the [forum](https://forum.restic.net/) and the `#restic` channel\non [irc.libera.chat](https://kiwiirc.com/nextclient/#ircs://irc.libera.chat:6697/#restic).\n\nIf you want to find an area that currently needs improving have a look at the\nopen issues listed at the\n[issues page](https://github.com/restic/restic/issues). This is also the place\nfor discussing enhancement to the restic tools.\n\nIf you are unsure what to do, please have a look at the issues, especially\nthose tagged\n[minor complexity](https://github.com/restic/restic/labels/help%3A%20minor%20complexity)\nor [good first issue](https://github.com/restic/restic/labels/help%3A%20good%20first%20issue).\nIf you are already a bit experienced with the restic internals, take a look\nat the issues tagged as [help wanted](https://github.com/restic/restic/labels/help%3A%20wanted).\n\n\nReporting Bugs\n==============\n\nYou've found a bug? Thanks for letting us know so we can fix it! It is a good\nidea to describe in detail how to reproduce the bug (when you know how), what\nenvironment was used and so on. Please tell us at least the following things:\n\n * What's the version of restic you used? Please include the output of\n   `restic version` in your bug report.\n * What commands did you execute to get to where the bug occurred?\n * What did you expect?\n * What happened instead?\n * Are you aware of a way to reproduce the bug?\n\nRemember, the easier it is for us to reproduce the bug, the earlier it will be\ncorrected!\n\nIn addition, you can instruct restic to create a debug log by setting the\nenvironment variable `DEBUG_LOG` to a file, e.g. like this:\n\n    $ export DEBUG_LOG=/tmp/restic-debug.log\n    $ restic backup ~/work\n\nPlease be aware that the debug log file will contain potentially sensitive\nthings like file and directory names, so please either redact it before\nuploading it somewhere or post only the parts that are really relevant.\n\nIf restic gets stuck, please also include a stacktrace in the description.\nOn non-Windows systems, you can send a SIGQUIT signal to restic or press\n`Ctrl-\\` to achieve the same result. This causes restic to print a stacktrace\nand then exit immediately. This will not damage your repository, however,\nit might be necessary to manually clean up stale lock files using\n`restic unlock`.\n\nOn Windows, please set the environment variable `RESTIC_DEBUG_STACKTRACE_SIGINT`\nto `true` and press `Ctrl-C` to create a stacktrace.\n\nIf you think restic uses too much memory or a too large cache directory, then\nplease include the output of `restic stats --mode debug`.\n\n\nDevelopment Environment\n=======================\n\nThe repository contains the code written for restic in the directories\n`cmd/` and `internal/`.\n\nMake sure you have the minimum required Go version installed. Clone the repo\n(without having `$GOPATH` set) and `cd` into the directory:\n\n    $ unset GOPATH\n    $ git clone https://github.com/restic/restic\n    $ cd restic\n\nThen use the `go` tool to build restic:\n\n    $ go build ./cmd/restic\n    $ ./restic version\n    restic 0.14.0-dev (compiled manually) compiled with go1.19 on linux/amd64\n\nTo create a debug build use:\n\n    $ go build -tags debug ./cmd/restic\n\nYou can run all tests with the following command:\n\n    $ go test ./...\n\n\nPerformance and Memory Usage Issues\n===================================\n\nDebug builds of restic support the `--block-profile`, `--cpu-profile`,\n`--mem-profile`, and `--trace-profile` options which collect performance data\nthat later on can be analyzed using the go tools:\n\n    $ restic --cpu-profile . [...]\n    $ go tool pprof -http localhost:12345 cpu.pprof\n\nTo analyze a trace profile use `go tool trace -http=localhost:12345 trace.out`.\n\nAs the memory usage of restic changes over time, it may be useful to capture a\nsnapshot of the current heap. This is possible using then `--listen-profile`\noption. Then while restic runs you can query and afterwards analyze the heap statistics.\n\n    $ restic --listen-profile localhost:12345 [...]\n    $ curl http://localhost:12345/debug/pprof/heap -o heap.pprof\n    $ go tool pprof -http localhost:12345 heap.pprof\n\nFurther useful tools are setting the environment variable `GODEBUG=gctrace=1`,\nwhich provides information about garbage collector runs. For a graphical variant\ncombine this with gcvis.\n\n\nProviding Patches\n=================\n\nYou have fixed an annoying bug or have added a new feature? Very cool! Let's\nget it into the project! The workflow we're using is also described on the\n[GitHub Flow](https://guides.github.com/introduction/flow/) website, it boils\ndown to the following steps:\n\n 0. If you want to work on something, please add a comment to the issue on\n    GitHub. For a new feature, please add an issue before starting to work on\n    it, so that duplicate work is prevented.\n\n 1. Next, fork our project on GitHub if you haven't done so already.\n\n 2. Clone your fork of the repository locally and **create a new branch** for\n    your changes. If you are working on the code itself, please set up the\n    development environment as described in the previous section.\n\n 3. Commit your changes to the new branch as fine grained as possible, as\n    smaller patches, for individual changes, are easier to discuss and merge.\n\n 4. Push the new branch with your changes to your fork of the repository.\n\n 5. Create a pull request by visiting the GitHub website, it will guide you\n    through the process. Please [allow edits from maintainers](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork).\n\n 6. You will receive comments on your code and the feature or bug that they\n    address. Maybe you need to rework some minor things, in this case push new\n    commits to the branch you created for the pull request (or amend the\n    existing commit, use common sense to decide which is better), they will be\n    automatically added to the pull request.\n\n 7. If your pull request changes anything that users should be aware of\n    (a bugfix, a new feature, ...) please add an entry as a new file in\n    `changelog/unreleased` including the issue number in the filename (e.g.\n    `issue-8756`). Use the template in `changelog/TEMPLATE` for the content.\n    It will be used in the announcement of the next stable release. While\n    writing, ask yourself: If I were the user, what would I need to be aware\n    of with this change?\n\n 8. Do not edit the man pages under `doc/man` or `doc/manual_rest.rst` -\n    these are autogenerated before new releases.\n\n 9. Once your code looks good and passes all the tests, we'll merge it. Thanks\n    a lot for your contribution!\n\nPlease provide the patches for each bug or feature in a separate branch and\nopen up a pull request for each, as this simplifies discussion and merging.\n\nThe restic project uses the `gofmt` tool for Go source indentation, so please\nrun\n\n    gofmt -w **/*.go\n\nin the project root directory before committing. For each Pull Request, the\nformatting is tested with `gofmt` for the latest stable version of Go.\nInstalling the script `fmt-check` from https://github.com/edsrzf/gofmt-git-hook\nlocally as a pre-commit hook checks formatting before committing automatically,\njust copy this script to `.git/hooks/pre-commit`.\n\nThe project is using the program\n[`golangci-lint`](https://github.com/golangci/golangci-lint) to run a list of\nlinters and checkers. It will be run on the code when you submit a PR. In order\nto check your code beforehand, you can run `golangci-lint run` manually.\nEventually, we will enable `golangci-lint` for the whole code base. For now,\nyou can ignore warnings printed for lines you did not modify, those will be\nignored by the CI.\n\nFor each pull request, several different systems run the integration tests on\nLinux, macOS and Windows. We won't merge any code that does not pass all tests\nfor all systems, so when a tests fails, try to find out what's wrong and fix\nit. If you need help on this, please leave a comment in the pull request, and\nwe'll be glad to assist. Having a PR with failing integration tests is nothing\nto be ashamed of. In contrast, that happens regularly for all of us. That's\nwhat the tests are there for.\n\nGit Commits\n-----------\n\nIt would be good if you could follow the same general style regarding Git\ncommits as the rest of the project, this makes reviewing code, browsing the\nhistory and triaging bugs much easier.\n\nGit commit messages have a very terse summary in the first line of the commit\nmessage, followed by an empty line, followed by a more verbose description or a\nList of changed things. For examples, please refer to the excellent [How to\nWrite a Git Commit Message](https://chris.beams.io/posts/git-commit/).\n\nIf you change/add multiple different things that aren't related at all, try to\nmake several smaller commits. This is much easier to review. Using `git add -p`\nallows staging and committing only some changes.\n\nCode Review\n===========\n\nThe restic project encourages actively reviewing the code, as it will store\nyour precious data, so it's common practice to receive comments on provided\npatches.\n\nIf you are reviewing other contributor's code please consider the following\nwhen reviewing:\n\n* Be nice. Please make the review comment as constructive as possible so all\n  participants will learn something from your review.\n\nAs a contributor you might be asked to rewrite portions of your code to make it\nfit better into the upstream sources.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 1.0458984375,
          "content": "# restic project governance\n\n## Overview\n\nThe restic project uses a governance model commonly described as Benevolent\nDictator For Life (BDFL). This document outlines our understanding of what this\nmeans. It is derived from the [i3 window manager project\ngovernance](https://raw.githubusercontent.com/i3/i3/next/.github/GOVERNANCE.md).\n\n## Roles\n\n* user: anyone who interacts with the restic project\n* core contributor: a handful of people who have contributed significantly to\n  the project by any means (issue triage, support, documentation, code, etc.).\n  Core contributors are recognizable via GitHub’s \"Member\" badge.\n* Benevolent Dictator For Life (BDFL): a single individual who makes decisions\n  when consensus cannot be reached. restic's current BDFL is [@fd0](https://github.com/fd0).\n\n## Decision making process\n\nIn general, we try to reach consensus in discussions. In case consensus cannot\nbe reached, the BDFL makes a decision.\n\n## Contribution process\n\nThe contribution process is described in a separate document called\n[CONTRIBUTING](CONTRIBUTING.md).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.3134765625,
          "content": "BSD 2-Clause License\n\nCopyright (c) 2014, Alexander Neumann <alexander@bumpern.de>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1298828125,
          "content": ".PHONY: all clean test restic\n\nall: restic\n\nrestic:\n\tgo run build.go\n\nclean:\n\trm -f restic\n\ntest:\n\tgo test ./cmd/... ./internal/...\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.572265625,
          "content": "[![Documentation](https://readthedocs.org/projects/restic/badge/?version=latest)](https://restic.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://github.com/restic/restic/workflows/test/badge.svg)](https://github.com/restic/restic/actions?query=workflow%3Atest)\n[![Go Report Card](https://goreportcard.com/badge/github.com/restic/restic)](https://goreportcard.com/report/github.com/restic/restic)\n\n# Introduction\n\nrestic is a backup program that is fast, efficient and secure. It supports the three major operating systems (Linux, macOS, Windows) and a few smaller ones (FreeBSD, OpenBSD).\n\nFor detailed usage and installation instructions check out the [documentation](https://restic.readthedocs.io/en/latest).\n\nYou can ask questions in our [Discourse forum](https://forum.restic.net).\n\n## Quick start\n\nOnce you've [installed](https://restic.readthedocs.io/en/latest/020_installation.html) restic, start\noff with creating a repository for your backups:\n\n    $ restic init --repo /tmp/backup\n    enter password for new backend:\n    enter password again:\n    created restic backend 085b3c76b9 at /tmp/backup\n    Please note that knowledge of your password is required to access the repository.\n    Losing your password means that your data is irrecoverably lost.\n\nand add some data:\n\n    $ restic --repo /tmp/backup backup ~/work\n    enter password for repository:\n    scan [/home/user/work]\n    scanned 764 directories, 1816 files in 0:00\n    [0:29] 100.00%  54.732 MiB/s  1.582 GiB / 1.582 GiB  2580 / 2580 items  0 errors  ETA 0:00\n    duration: 0:29, 54.47MiB/s\n    snapshot 40dc1520 saved\n\nNext you can either use `restic restore` to restore files or use `restic\nmount` to mount the repository via fuse and browse the files from previous\nsnapshots.\n\nFor more options check out the [online documentation](https://restic.readthedocs.io/en/latest/).\n\n# Backends\n\nSaving a backup on the same machine is nice but not a real backup strategy.\nTherefore, restic supports the following backends for storing backups natively:\n\n- [Local directory](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#local)\n- [sftp server (via SSH)](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#sftp)\n- [HTTP REST server](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server) ([protocol](https://restic.readthedocs.io/en/latest/100_references.html#rest-backend), [rest-server](https://github.com/restic/rest-server))\n- [Amazon S3](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#amazon-s3) (either from Amazon or using the [Minio](https://minio.io) server)\n- [OpenStack Swift](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#openstack-swift)\n- [BackBlaze B2](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#backblaze-b2)\n- [Microsoft Azure Blob Storage](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#microsoft-azure-blob-storage)\n- [Google Cloud Storage](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#google-cloud-storage)\n- And many other services via the [rclone](https://rclone.org) [Backend](https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#other-services-via-rclone)\n\n# Design Principles\n\nRestic is a program that does backups right and was designed with the\nfollowing principles in mind:\n\n-  **Easy**: Doing backups should be a frictionless process, otherwise\n   you might be tempted to skip it. Restic should be easy to configure\n   and use, so that, in the event of a data loss, you can just restore\n   it. Likewise, restoring data should not be complicated.\n\n-  **Fast**: Backing up your data with restic should only be limited by\n   your network or hard disk bandwidth so that you can backup your files\n   every day. Nobody does backups if it takes too much time. Restoring\n   backups should only transfer data that is needed for the files that\n   are to be restored, so that this process is also fast.\n\n-  **Verifiable**: Much more important than backup is restore, so restic\n   enables you to easily verify that all data can be restored.\n\n-  **Secure**: Restic uses cryptography to guarantee confidentiality and\n   integrity of your data. The location the backup data is stored is\n   assumed not to be a trusted environment (e.g. a shared space where\n   others like system administrators are able to access your backups).\n   Restic is built to secure your data against such attackers.\n\n-  **Efficient**: With the growth of data, additional snapshots should\n   only take the storage of the actual increment. Even more, duplicate\n   data should be de-duplicated before it is actually written to the\n   storage back end to save precious backup space.\n\n# Reproducible Builds\n\nThe binaries released with each restic version starting at 0.6.1 are\n[reproducible](https://reproducible-builds.org/), which means that you can\nreproduce a byte identical version from the source code for that\nrelease. Instructions on how to do that are contained in the\n[builder repository](https://github.com/restic/builder).\n\n## News\n\nYou can follow the restic project on Mastodon [@resticbackup](https://fosstodon.org/@restic) or subscribe to\nthe [project blog](https://restic.net/blog/).\n\n## License\n\nRestic is licensed under [BSD 2-Clause License](https://opensource.org/licenses/BSD-2-Clause). You can find the\ncomplete text in [`LICENSE`](LICENSE).\n\n## Sponsorship\n\nBackend integration tests for Google Cloud Storage and Microsoft Azure Blob\nStorage are sponsored by [AppsCode](https://appscode.com)!\n\n[![Sponsored by AppsCode](https://cdn.appscode.com/images/logo/appscode/ac-logo-color.png)](https://appscode.com)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0107421875,
          "content": "0.17.3-dev\n"
        },
        {
          "name": "build.go",
          "type": "blob",
          "size": 11.8916015625,
          "content": "// Description\n//\n// This program aims to make building Go programs for end users easier by just\n// calling it with `go run`, without having to setup a GOPATH.\n//\n// This program checks for a minimum Go version. It will use Go modules for\n// compilation. It builds the package configured as Main in the Config struct.\n\n// BSD 2-Clause License\n//\n// Copyright (c) 2016-2018, Alexander Neumann <alexander@bumpern.de>\n// All rights reserved.\n//\n// This file has been derived from the repository at:\n// https://github.com/fd0/build-go\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// * Redistributions of source code must retain the above copyright notice, this\n//   list of conditions and the following disclaimer.\n//\n// * Redistributions in binary form must reproduce the above copyright notice,\n//   this list of conditions and the following disclaimer in the documentation\n//   and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n//go:build ignore_build_go\n// +build ignore_build_go\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strconv\"\n\t\"strings\"\n)\n\n// config contains the configuration for the program to build.\nvar config = Config{\n\tName:             \"restic\",                                 // name of the program executable and directory\n\tNamespace:        \"github.com/restic/restic\",               // subdir of GOPATH, e.g. \"github.com/foo/bar\"\n\tMain:             \"./cmd/restic\",                           // package name for the main package\n\tDefaultBuildTags: []string{\"selfupdate\"},                   // specify build tags which are always used\n\tTests:            []string{\"./...\"},                        // tests to run\n\tMinVersion:       GoVersion{Major: 1, Minor: 21, Patch: 0}, // minimum Go version supported\n}\n\n// Config configures the build.\ntype Config struct {\n\tName             string\n\tNamespace        string\n\tMain             string\n\tDefaultBuildTags []string\n\tTests            []string\n\tMinVersion       GoVersion\n}\n\nvar (\n\tverbose   bool\n\trunTests  bool\n\tenableCGO bool\n\tenablePIE bool\n\tgoVersion = ParseGoVersion(runtime.Version())\n)\n\n// die prints the message with fmt.Fprintf() to stderr and exits with an error\n// code.\nfunc die(message string, args ...interface{}) {\n\tfmt.Fprintf(os.Stderr, message, args...)\n\tos.Exit(1)\n}\n\nfunc showUsage(output io.Writer) {\n\tfmt.Fprintf(output, \"USAGE: go run build.go OPTIONS\\n\")\n\tfmt.Fprintf(output, \"\\n\")\n\tfmt.Fprintf(output, \"OPTIONS:\\n\")\n\tfmt.Fprintf(output, \"  -v     --verbose       output more messages\\n\")\n\tfmt.Fprintf(output, \"  -t     --tags          specify additional build tags\\n\")\n\tfmt.Fprintf(output, \"  -T     --test          run tests\\n\")\n\tfmt.Fprintf(output, \"  -o     --output        set output file name\\n\")\n\tfmt.Fprintf(output, \"         --enable-cgo    use CGO to link against libc\\n\")\n\tfmt.Fprintf(output, \"         --enable-pie    use PIE buildmode\\n\")\n\tfmt.Fprintf(output, \"         --goos value    set GOOS for cross-compilation\\n\")\n\tfmt.Fprintf(output, \"         --goarch value  set GOARCH for cross-compilation\\n\")\n\tfmt.Fprintf(output, \"         --goarm value   set GOARM for cross-compilation\\n\")\n}\n\nfunc verbosePrintf(message string, args ...interface{}) {\n\tif !verbose {\n\t\treturn\n\t}\n\n\tfmt.Printf(\"build: \"+message, args...)\n}\n\n// printEnv prints Go-relevant environment variables in a nice way using verbosePrintf.\nfunc printEnv(env []string) {\n\tverbosePrintf(\"environment (GO*):\\n\")\n\tfor _, v := range env {\n\t\t// ignore environment variables which do not start with GO*.\n\t\tif !strings.HasPrefix(v, \"GO\") {\n\t\t\tcontinue\n\t\t}\n\t\tverbosePrintf(\"  %s\\n\", v)\n\t}\n}\n\n// build runs \"go build args...\" with GOPATH set to gopath.\nfunc build(cwd string, env map[string]string, args ...string) error {\n\t// -trimpath removes all absolute paths from the binary.\n\ta := []string{\"build\", \"-trimpath\"}\n\n\tif enablePIE {\n\t\ta = append(a, \"-buildmode=pie\")\n\t}\n\n\ta = append(a, args...)\n\tcmd := exec.Command(\"go\", a...)\n\tcmd.Env = os.Environ()\n\tfor k, v := range env {\n\t\tcmd.Env = append(cmd.Env, k+\"=\"+v)\n\t}\n\tif !enableCGO {\n\t\tcmd.Env = append(cmd.Env, \"CGO_ENABLED=0\")\n\t}\n\n\tprintEnv(cmd.Env)\n\n\tcmd.Dir = cwd\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\n\tverbosePrintf(\"chdir %q\\n\", cwd)\n\tverbosePrintf(\"go %q\\n\", a)\n\n\treturn cmd.Run()\n}\n\n// test runs \"go test args...\" with GOPATH set to gopath.\nfunc test(cwd string, env map[string]string, args ...string) error {\n\targs = append([]string{\"test\", \"-count\", \"1\"}, args...)\n\tcmd := exec.Command(\"go\", args...)\n\tcmd.Env = os.Environ()\n\tfor k, v := range env {\n\t\tcmd.Env = append(cmd.Env, k+\"=\"+v)\n\t}\n\tif !enableCGO {\n\t\tcmd.Env = append(cmd.Env, \"CGO_ENABLED=0\")\n\t}\n\tcmd.Dir = cwd\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\n\tprintEnv(cmd.Env)\n\n\tverbosePrintf(\"chdir %q\\n\", cwd)\n\tverbosePrintf(\"go %q\\n\", args)\n\n\treturn cmd.Run()\n}\n\n// getVersion returns the version string from the file VERSION in the current\n// directory.\nfunc getVersionFromFile() string {\n\tbuf, err := os.ReadFile(\"VERSION\")\n\tif err != nil {\n\t\tverbosePrintf(\"error reading file VERSION: %v\\n\", err)\n\t\treturn \"\"\n\t}\n\n\treturn strings.TrimSpace(string(buf))\n}\n\n// getVersion returns a version string which is a combination of the contents\n// of the file VERSION in the current directory and the version from git (if\n// available).\nfunc getVersion() string {\n\tversionFile := getVersionFromFile()\n\tversionGit := getVersionFromGit()\n\n\tverbosePrintf(\"version from file 'VERSION' is %q, version from git %q\\n\",\n\t\tversionFile, versionGit)\n\n\tswitch {\n\tcase versionFile == \"\":\n\t\treturn versionGit\n\tcase versionGit == \"\":\n\t\treturn versionFile\n\t}\n\n\treturn fmt.Sprintf(\"%s (%s)\", versionFile, versionGit)\n}\n\n// getVersionFromGit returns a version string that identifies the currently\n// checked out git commit.\nfunc getVersionFromGit() string {\n\tcmd := exec.Command(\"git\", \"describe\",\n\t\t\"--long\", \"--tags\", \"--dirty\", \"--always\")\n\tout, err := cmd.Output()\n\tif err != nil {\n\t\tverbosePrintf(\"git describe returned error: %v\\n\", err)\n\t\treturn \"\"\n\t}\n\n\tversion := strings.TrimSpace(string(out))\n\tverbosePrintf(\"git version is %s\\n\", version)\n\treturn version\n}\n\n// Constants represents a set of constants that are set in the final binary to\n// the given value via compiler flags.\ntype Constants map[string]string\n\n// LDFlags returns the string that can be passed to go build's `-ldflags`.\nfunc (cs Constants) LDFlags() string {\n\tl := make([]string, 0, len(cs))\n\n\tfor k, v := range cs {\n\t\tl = append(l, fmt.Sprintf(`-X \"%s=%s\"`, k, v))\n\t}\n\n\treturn strings.Join(l, \" \")\n}\n\n// GoVersion is the version of Go used to compile the project.\ntype GoVersion struct {\n\tMajor int\n\tMinor int\n\tPatch int\n}\n\n// ParseGoVersion parses the Go version s. If s cannot be parsed, the returned GoVersion is null.\nfunc ParseGoVersion(s string) (v GoVersion) {\n\tif !strings.HasPrefix(s, \"go\") {\n\t\treturn\n\t}\n\n\ts = s[2:]\n\tdata := strings.Split(s, \".\")\n\tif len(data) < 2 || len(data) > 3 {\n\t\t// invalid version\n\t\treturn GoVersion{}\n\t}\n\n\tvar err error\n\n\tv.Major, err = strconv.Atoi(data[0])\n\tif err != nil {\n\t\treturn GoVersion{}\n\t}\n\n\t// try to parse the minor version while removing an eventual suffix (like\n\t// \"rc2\" or so)\n\tfor s := data[1]; s != \"\"; s = s[:len(s)-1] {\n\t\tv.Minor, err = strconv.Atoi(s)\n\t\tif err == nil {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif v.Minor == 0 {\n\t\t// no minor version found\n\t\treturn GoVersion{}\n\t}\n\n\tif len(data) >= 3 {\n\t\tv.Patch, err = strconv.Atoi(data[2])\n\t\tif err != nil {\n\t\t\treturn GoVersion{}\n\t\t}\n\t}\n\n\treturn\n}\n\n// AtLeast returns true if v is at least as new as other. If v is empty, true is returned.\nfunc (v GoVersion) AtLeast(other GoVersion) bool {\n\tvar empty GoVersion\n\n\t// the empty version satisfies all versions\n\tif v == empty {\n\t\treturn true\n\t}\n\n\tif v.Major < other.Major {\n\t\treturn false\n\t}\n\n\tif v.Minor < other.Minor {\n\t\treturn false\n\t}\n\n\tif v.Patch < other.Patch {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nfunc (v GoVersion) String() string {\n\treturn fmt.Sprintf(\"Go %d.%d.%d\", v.Major, v.Minor, v.Patch)\n}\n\nfunc main() {\n\tif !goVersion.AtLeast(config.MinVersion) {\n\t\tfmt.Fprintf(os.Stderr, \"Detected version %s is too old, restic requires at least %s\\n\", goVersion, config.MinVersion)\n\t\tos.Exit(1)\n\t}\n\n\tbuildTags := config.DefaultBuildTags\n\n\tskipNext := false\n\tparams := os.Args[1:]\n\n\tenv := map[string]string{\n\t\t\"GO111MODULE\": \"on\", // make sure we build in Module mode\n\t\t\"GOOS\":        runtime.GOOS,\n\t\t\"GOARCH\":      runtime.GOARCH,\n\t\t\"GOARM\":       \"\",\n\t}\n\n\tvar outputFilename string\n\n\tfor i, arg := range params {\n\t\tif skipNext {\n\t\t\tskipNext = false\n\t\t\tcontinue\n\t\t}\n\n\t\tswitch arg {\n\t\tcase \"-v\", \"--verbose\":\n\t\t\tverbose = true\n\t\tcase \"-t\", \"-tags\", \"--tags\":\n\t\t\tif i+1 >= len(params) {\n\t\t\t\tdie(\"-t given but no tag specified\")\n\t\t\t}\n\t\t\tskipNext = true\n\t\t\tbuildTags = append(buildTags, strings.Split(params[i+1], \" \")...)\n\t\tcase \"-o\", \"--output\":\n\t\t\tskipNext = true\n\t\t\toutputFilename = params[i+1]\n\t\tcase \"-T\", \"--test\":\n\t\t\trunTests = true\n\t\tcase \"--enable-cgo\":\n\t\t\tenableCGO = true\n\t\tcase \"--enable-pie\":\n\t\t\tenablePIE = true\n\t\tcase \"--goos\":\n\t\t\tskipNext = true\n\t\t\tenv[\"GOOS\"] = params[i+1]\n\t\tcase \"--goarch\":\n\t\t\tskipNext = true\n\t\t\tenv[\"GOARCH\"] = params[i+1]\n\t\tcase \"--goarm\":\n\t\t\tskipNext = true\n\t\t\tenv[\"GOARM\"] = params[i+1]\n\t\tcase \"-h\":\n\t\t\tshowUsage(os.Stdout)\n\t\t\treturn\n\t\tdefault:\n\t\t\tfmt.Fprintf(os.Stderr, \"Error: unknown option %q\\n\\n\", arg)\n\t\t\tshowUsage(os.Stderr)\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n\n\tsolarisMinVersion := GoVersion{Major: 1, Minor: 20, Patch: 0}\n\tif env[\"GOARCH\"] == \"solaris\" && !goVersion.AtLeast(solarisMinVersion) {\n\t\tfmt.Fprintf(os.Stderr, \"Detected version %s is too old, restic requires at least %s for Solaris\\n\", goVersion, solarisMinVersion)\n\t\tos.Exit(1)\n\t}\n\n\tverbosePrintf(\"detected Go version %v\\n\", goVersion)\n\n\tpreserveSymbols := false\n\tfor i := range buildTags {\n\t\tbuildTags[i] = strings.TrimSpace(buildTags[i])\n\t\tif buildTags[i] == \"debug\" || buildTags[i] == \"profile\" {\n\t\t\tpreserveSymbols = true\n\t\t}\n\t}\n\n\tverbosePrintf(\"build tags: %s\\n\", buildTags)\n\n\troot, err := os.Getwd()\n\tif err != nil {\n\t\tdie(\"Getwd(): %v\\n\", err)\n\t}\n\n\tif outputFilename == \"\" {\n\t\toutputFilename = config.Name\n\t\tif env[\"GOOS\"] == \"windows\" {\n\t\t\toutputFilename += \".exe\"\n\t\t}\n\t}\n\n\toutput := outputFilename\n\tif !filepath.IsAbs(output) {\n\t\toutput = filepath.Join(root, output)\n\t}\n\n\tversion := getVersion()\n\tconstants := Constants{}\n\tif version != \"\" {\n\t\tconstants[\"main.version\"] = version\n\t}\n\tldflags := constants.LDFlags()\n\tif !preserveSymbols {\n\t\t// Strip debug symbols.\n\t\tldflags = \"-s -w \" + ldflags\n\t}\n\tverbosePrintf(\"ldflags: %s\\n\", ldflags)\n\n\tvar (\n\t\tbuildArgs []string\n\t\ttestArgs  []string\n\t)\n\n\tmainPackage := config.Main\n\tif strings.HasPrefix(mainPackage, config.Namespace) {\n\t\tmainPackage = strings.Replace(mainPackage, config.Namespace, \"./\", 1)\n\t}\n\n\tbuildTarget := filepath.FromSlash(mainPackage)\n\tbuildCWD, err := os.Getwd()\n\tif err != nil {\n\t\tdie(\"unable to determine current working directory: %v\\n\", err)\n\t}\n\n\tbuildArgs = append(buildArgs,\n\t\t\"-tags\", strings.Join(buildTags, \" \"),\n\t\t\"-ldflags\", ldflags,\n\t\t\"-o\", output, buildTarget,\n\t)\n\n\terr = build(buildCWD, env, buildArgs...)\n\tif err != nil {\n\t\tdie(\"build failed: %v\\n\", err)\n\t}\n\n\tif runTests {\n\t\tverbosePrintf(\"running tests\\n\")\n\n\t\ttestArgs = append(testArgs, config.Tests...)\n\n\t\terr = test(buildCWD, env, testArgs...)\n\t\tif err != nil {\n\t\t\tdie(\"running tests failed: %v\\n\", err)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.509765625,
          "content": "// Package restic gives a (very brief) introduction to the structure of source code.\n//\n// # Overview\n//\n// The packages are structured so that cmd/ contains the main package for the\n// restic binary, and internal/ contains almost all code in library form. We've\n// chosen to use the internal/ path so that the packages cannot be imported by\n// other programs. This was done on purpose, at the moment restic is a\n// command-line program and not a library. This may be revisited at a later\n// point in time.\npackage restic\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.513671875,
          "content": "module github.com/restic/restic\n\nrequire (\n\tcloud.google.com/go/storage v1.43.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0\n\tgithub.com/Backblaze/blazer v0.7.1\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/anacrolix/fuse v0.3.1\n\tgithub.com/cenkalti/backoff/v4 v4.3.0\n\tgithub.com/cespare/xxhash/v2 v2.3.0\n\tgithub.com/elithrar/simple-scrypt v1.3.0\n\tgithub.com/go-ole/go-ole v1.3.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/klauspost/compress v1.17.9\n\tgithub.com/minio/minio-go/v7 v7.0.77\n\tgithub.com/ncw/swift/v2 v2.0.3\n\tgithub.com/peterbourgon/unixtransport v0.0.4\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/pkg/profile v1.7.0\n\tgithub.com/pkg/sftp v1.13.7\n\tgithub.com/pkg/xattr v0.4.10\n\tgithub.com/restic/chunker v0.4.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/crypto v0.28.0\n\tgolang.org/x/net v0.30.0\n\tgolang.org/x/oauth2 v0.23.0\n\tgolang.org/x/sync v0.9.0\n\tgolang.org/x/sys v0.27.0\n\tgolang.org/x/term v0.25.0\n\tgolang.org/x/text v0.20.0\n\tgolang.org/x/time v0.7.0\n\tgoogle.golang.org/api v0.204.0\n)\n\nrequire (\n\tcloud.google.com/go v0.116.0 // indirect\n\tcloud.google.com/go/auth v0.10.0 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.5 // indirect\n\tcloud.google.com/go/compute/metadata v0.5.2 // indirect\n\tcloud.google.com/go/iam v1.2.1 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 // indirect\n\tgithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.4 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/felixge/fgprof v0.9.3 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-ini/ini v1.67.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/goccy/go-json v0.10.3 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/pprof v0.0.0-20230926050212-f7f687d19a98 // indirect\n\tgithub.com/google/s2a-go v0.1.8 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.13.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.8 // indirect\n\tgithub.com/kr/fs v0.1.0 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/minio/md5-simd v1.1.2 // indirect\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c // indirect\n\tgithub.com/rs/xid v1.6.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.29.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20241021214115-324edc3d5d38 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38 // indirect\n\tgoogle.golang.org/grpc v1.67.1 // indirect\n\tgoogle.golang.org/protobuf v1.35.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\ngo 1.21\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 34.515625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.116.0 h1:B3fRrSDkLRt5qSHWe40ERJvhvnQwdZiHu0bJOpldweE=\ncloud.google.com/go v0.116.0/go.mod h1:cEPSRWPzZEswwdr9BxE6ChEn01dWlTaF05LiC2Xs70U=\ncloud.google.com/go/auth v0.10.0 h1:tWlkvFAh+wwTOzXIjrwM64karR1iTBZ/GRr0S/DULYo=\ncloud.google.com/go/auth v0.10.0/go.mod h1:xxA5AqpDrvS+Gkmo9RqrGGRh6WSNKKOXhY3zNOr38tI=\ncloud.google.com/go/auth/oauth2adapt v0.2.5 h1:2p29+dePqsCHPP1bqDJcKj4qxRyYCcbzKpFyKGt3MTk=\ncloud.google.com/go/auth/oauth2adapt v0.2.5/go.mod h1:AlmsELtlEBnaNTL7jCj8VQFLy6mbZv0s4Q7NGBeQ5E8=\ncloud.google.com/go/compute/metadata v0.5.2 h1:UxK4uu/Tn+I3p2dYWTfiX4wva7aYlKixAHn3fyqngqo=\ncloud.google.com/go/compute/metadata v0.5.2/go.mod h1:C66sj2AluDcIqakBq/M8lw8/ybHgOZqin2obFxa/E5k=\ncloud.google.com/go/iam v1.2.1 h1:QFct02HRb7H12J/3utj0qf5tobFh9V4vR6h9eX5EBRU=\ncloud.google.com/go/iam v1.2.1/go.mod h1:3VUIJDPpwT6p/amXRC5GY8fCCh70lxPygguVtI0Z4/g=\ncloud.google.com/go/longrunning v0.6.1 h1:lOLTFxYpr8hcRtcwWir5ITh1PAKUD/sG2lKrTSYjyMc=\ncloud.google.com/go/longrunning v0.6.1/go.mod h1:nHISoOZpBcmlwbJmiVk5oDRz0qG/ZxPynEGs1iZ79s0=\ncloud.google.com/go/storage v1.43.0 h1:CcxnSohZwizt4LCzQHWvBf1/kvtHUn7gk9QERXPyXFs=\ncloud.google.com/go/storage v1.43.0/go.mod h1:ajvxEa7WmZS1PxvKRq4bq0tFT3vMd502JwstCcYv0Q0=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0 h1:JZg6HRh6W6U4OLl6lk7BZ7BLisIzM9dG1R50zUk9C/M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0/go.mod h1:YL1xnZ6QejvQHWJrX/AvhFl4WW4rqHVoKspWNVwFk0M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0 h1:B/dfvscEQtew9dVuoxqxrUKKv8Ih2f55PydknDamU+g=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0/go.mod h1:fiPSssYvltE08HJchL04dOy+RD4hgrjph0cwGGMntdI=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0 h1:+m0M/LFxN43KvULkDNfdXOgrjtg6UYJPFBJyuEcRCAw=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0/go.mod h1:PwOyop78lveYMRs6oCxjiVyBdyCgIYH6XHIVZO9/SFQ=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 h1:ywEEhmNahHBihViHepv3xPBn1663uRv2t2q/ESv9seY=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0/go.mod h1:iZDifYGJTIgIIkYRNWPENUnqx6bJ2xnSDFI2tjwZNuY=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.6.0 h1:PiSrjRPpkQNjrM8H0WwKMnZUdu1RGMtd/LdGKUrOo+c=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.6.0/go.mod h1:oDrbWx4ewMylP7xHivfgixbfGBT6APAwsSoHRKotnIc=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0 h1:mlmW46Q0B79I+Aj4azKC6xDMFN9a9SyZWESlGWYXbFs=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0/go.mod h1:PXe2h+LKcWTX9afWdZoHyODqR4fBa5boUM/8uJfZ0Jo=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1 h1:WJTmL004Abzc5wDB5VtZG2PJk5ndYDgVacGqfirKxjM=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1/go.mod h1:tCcJZ0uHAmvjsVYzEFivsRTN00oz5BEsRgQHu5JZ9WE=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/Backblaze/blazer v0.7.1 h1:J43PbFj6hXLg1jvCNr+rQoAsxzKK0IP7ftl1ReCwpcQ=\ngithub.com/Backblaze/blazer v0.7.1/go.mod h1:MhntL1nMpIuoqrPP6TnZu/xTydMgOAe/Xm6KongbjKs=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Julusian/godocdown v0.0.0-20170816220326-6d19f8ff2df8/go.mod h1:INZr5t32rG59/5xeltqoCJoNY7e5x/3xoY9WSWVWg74=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/anacrolix/envpprof v1.3.0 h1:WJt9bpuT7A/CDCxPOv/eeZqHWlle/Y0keJUvc6tcJDk=\ngithub.com/anacrolix/envpprof v1.3.0/go.mod h1:7QIG4CaX1uexQ3tqd5+BRa/9e2D02Wcertl6Yh0jCB0=\ngithub.com/anacrolix/fuse v0.3.1 h1:oT8s3B5HFkBdLe/WKJO5MNo9iIyEtc+BhvTZYp4jhDM=\ngithub.com/anacrolix/fuse v0.3.1/go.mod h1:vN3X/6E+uHNjg5F8Oy9FD9I+pYxeDWeB8mNjIoxL5ds=\ngithub.com/anacrolix/generics v0.0.0-20230113004304-d6428d516633 h1:TO3pytMIJ98CO1nYtqbFx/iuTHi4OgIUoE2wNfDdKxw=\ngithub.com/anacrolix/generics v0.0.0-20230113004304-d6428d516633/go.mod h1:ff2rHB/joTV03aMSSn/AZNnaIpUw0h3njetGsaXcMy8=\ngithub.com/anacrolix/log v0.13.1/go.mod h1:D4+CvN8SnruK6zIFS/xPoRJmtvtnxs+CSfDQ+BFxZ68=\ngithub.com/anacrolix/log v0.14.1 h1:j2FcIpYZ5FbANetUcm5JNu+zUBGADSp/VbjhUPrAY0k=\ngithub.com/anacrolix/log v0.14.1/go.mod h1:1OmJESOtxQGNMlUO5rcv96Vpp9mfMqXXbe2RdinFLdY=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/dvyukov/go-fuzz v0.0.0-20220726122315-1d375ef9f9f6/go.mod h1:11Gm+ccJnvAhCNLlf5+cS9KjtbaD5I5zaZpFMsTHWTw=\ngithub.com/elazarl/go-bindata-assetfs v1.0.0/go.mod h1:v+YaWX3bdea5J/mo8dSETolEo7R71Vk1u8bnjau5yw4=\ngithub.com/elithrar/simple-scrypt v1.3.0 h1:KIlOlxdoQf9JWKl5lMAJ28SY2URB0XTRDn2TckyzAZg=\ngithub.com/elithrar/simple-scrypt v1.3.0/go.mod h1:U2XQRI95XHY0St410VE3UjT7vuKb1qPwrl/EJwEqnZo=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/felixge/fgprof v0.9.3 h1:VvyZxILNuCiUCSXtPtYmmtGvb65nqXh2QFWc0Wpf2/g=\ngithub.com/felixge/fgprof v0.9.3/go.mod h1:RdbpDgzqYVh/T9fPELJyV7EYJuHB55UTEULNun8eiPw=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/frankban/quicktest v1.14.4/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/go-ini/ini v1.67.0 h1:z6ZrTEZqSWOTyH2FlglNbNgARyHG8oLW9gMELqKr06A=\ngithub.com/go-ini/ini v1.67.0/go.mod h1:ByCAeIL28uOIIG0E3PJtZPDL8WnHpFKFOtgjp+3Ies8=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=\ngithub.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=\ngithub.com/goccy/go-json v0.10.3 h1:KZ5WoDbxAIgm2HNbYckL0se1fHD6rz5j4ywS6ebzDqA=\ngithub.com/goccy/go-json v0.10.3/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=\ngithub.com/google/pprof v0.0.0-20230926050212-f7f687d19a98 h1:pUa4ghanp6q4IJHwE9RwLgmVFfReJN+KbQ8ExNEUUoQ=\ngithub.com/google/pprof v0.0.0-20230926050212-f7f687d19a98/go.mod h1:czg5+yv1E0ZGTi6S6vVK1mke0fV+FaUhNGcd6VRS9Ik=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.13.0 h1:yitjD5f7jQHhyDsnhKEBU52NdvvdSeGzlAnDPT0hH1s=\ngithub.com/googleapis/gax-go/v2 v2.13.0/go.mod h1:Z/fvTZXF8/uw7Xu5GuslPw+bplx6SS338j1Is2S+B7A=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/ianlancetaylor/demangle v0.0.0-20210905161508-09a460cdf81d/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6 h1:IsMZxCuZqKuao2vNdfD82fjjgPLfyHLpR41Z88viRWs=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6/go.mod h1:3VeWNIJaW+O5xpRQbPp0Ybqu1vJd/pm7s2F473HRrkw=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/klauspost/cpuid/v2 v2.0.1/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=\ngithub.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/kr/fs v0.1.0 h1:Jskdu9ieNAYnjxsi0LbQp1ulIKZV1LAFgK1tWhpZgl8=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/miekg/dns v1.1.54/go.mod h1:uInx36IzPl7FYnDcMeVWxj9byh7DutNykX4G9Sj60FY=\ngithub.com/minio/md5-simd v1.1.2 h1:Gdi1DZK69+ZVMoNHRXJyNcxrMA4dSxoYHZSQbirFg34=\ngithub.com/minio/md5-simd v1.1.2/go.mod h1:MzdKDxYpY2BT9XQFocsiZf/NKVtR7nkE4RoEpN+20RM=\ngithub.com/minio/minio-go/v7 v7.0.77 h1:GaGghJRg9nwDVlNbwYjSDJT1rqltQkBFDsypWX1v3Bw=\ngithub.com/minio/minio-go/v7 v7.0.77/go.mod h1:AVM3IUN6WwKzmwBxVdjzhH8xq+f57JSbbvzqvUzR6eg=\ngithub.com/ncw/swift/v2 v2.0.3 h1:8R9dmgFIWs+RiVlisCEfiQiik1hjuR0JnOkLxaP9ihg=\ngithub.com/ncw/swift/v2 v2.0.3/go.mod h1:cbAO76/ZwcFrFlHdXPjaqWZ9R7Hdar7HpjRXBfbjigk=\ngithub.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/peterbourgon/ff/v3 v3.3.1/go.mod h1:zjJVUhx+twciwfDl0zBcFzl4dW8axCRyXE/eKY9RztQ=\ngithub.com/peterbourgon/unixtransport v0.0.4 h1:UTF0FxXCAglvoZz9jaGPYjEg52DjBLDYGMJvJni6Tfw=\ngithub.com/peterbourgon/unixtransport v0.0.4/go.mod h1:o8aUkOCa8W/BIXpi15uKvbSabjtBh0JhSOJGSfoOhAU=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/profile v1.7.0/go.mod h1:8Uer0jas47ZQMJ7VD+OHknK4YDY07LPUC6dEvqDjvNo=\ngithub.com/pkg/sftp v1.13.7 h1:uv+I3nNJvlKZIQGSr8JVQLNHFU9YhhNpvC14Y6KgmSM=\ngithub.com/pkg/sftp v1.13.7/go.mod h1:KMKI0t3T6hfA+lTR/ssZdunHo+uwq7ghoN09/FSu3DY=\ngithub.com/pkg/xattr v0.4.10 h1:Qe0mtiNFHQZ296vRgUjRCoPHPqH7VdTOrZx3g0T+pGA=\ngithub.com/pkg/xattr v0.4.10/go.mod h1:di8WF84zAKk8jzR1UBTEWh9AUlIZZ7M/JNt8e9B6ktU=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/redis/go-redis/v9 v9.6.1 h1:HHDteefn6ZkTtY5fGUE8tj8uy85AHk6zP7CpzIAM0y4=\ngithub.com/redis/go-redis/v9 v9.6.1/go.mod h1:0C0c6ycQsdpVNQpxb1njEQIqkx5UcsM8FJCQLgE9+RA=\ngithub.com/restic/chunker v0.4.0 h1:YUPYCUn70MYP7VO4yllypp2SjmsRhRJaad3xKu1QFRw=\ngithub.com/restic/chunker v0.4.0/go.mod h1:z0cH2BejpW636LXw0R/BGyv+Ey8+m9QGiOanDHItzyw=\ngithub.com/robertkrimen/godocdown v0.0.0-20130622164427-0bfa04905481/go.mod h1:C9WhFzY47SzYBIvzFqSvHIR6ROgDo4TtdTuRaOMjF/s=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rs/xid v1.6.0 h1:fV591PaemRlL6JfRxGDEPl69wICngIQ3shQtzfy2gxU=\ngithub.com/rs/xid v1.6.0/go.mod h1:7XoLgs4eV+QndskICGsho+ADou8ySMSjJKDIan90Nz0=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stephens2424/writerset v1.0.2/go.mod h1:aS2JhsMn6eA7e82oNmW4rfsgAOp9COBTTl8mzkwADnc=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tv42/httpunix v0.0.0-20191220191345-2ba4b9c3382c h1:u6SKchux2yDvFQnDHS3lPnIRmfVJ5Sxy3ao2SIdysLQ=\ngithub.com/tv42/httpunix v0.0.0-20191220191345-2ba4b9c3382c/go.mod h1:hzIxponao9Kjc7aWznkXaL4U4TWaDSs8zcsY4Ka08nM=\ngithub.com/yuin/goldmark v1.4.1/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.29.0 h1:PdomN/Al4q/lN6iBJEN3AwPvUiHPMlt93c8bqTG5Llw=\ngo.opentelemetry.io/otel v1.29.0/go.mod h1:N/WtXPs1CNCUEx+Agz5uouwCba+i+bJGFicT8SR4NP8=\ngo.opentelemetry.io/otel/metric v1.29.0 h1:vPf/HFWTNkPu1aYeIsc98l4ktOQaL6LeSoeV2g+8YLc=\ngo.opentelemetry.io/otel/metric v1.29.0/go.mod h1:auu/QWieFVWx+DmQOUMgj0F8LHWdgalxXqvp7BII/W8=\ngo.opentelemetry.io/otel/sdk v1.29.0 h1:vkqKjk7gwhS8VaWb0POZKmIEDimRCMsopNYnriHyryo=\ngo.opentelemetry.io/otel/sdk v1.29.0/go.mod h1:pM8Dx5WKnvxLCb+8lG1PRNIDxu9g9b9g59Qr7hfAAok=\ngo.opentelemetry.io/otel/trace v1.29.0 h1:J/8ZNK4XgR7a21DZUAsbF8pZ5Jcw1VhACmnYt39JTi4=\ngo.opentelemetry.io/otel/trace v1.29.0/go.mod h1:eHl3w0sp3paPkYstJOmAimxhiFXPg+MMTlEh3nsQgWQ=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.17.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=\ngolang.org/x/crypto v0.28.0 h1:GBDwsMXVQi34v5CCYUm2jkJvu4cbtru2U4TN2PSyQnw=\ngolang.org/x/crypto v0.28.0/go.mod h1:rmgy+3RHxRZMyY0jjAJShp2zgEdOqj2AO7U0pYmeQ7U=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20220428152302-39d4317da171 h1:TfdoLivD44QwvssI9Sv1xwa5DcL5XQr4au4sZ2F2NV4=\ngolang.org/x/exp v0.0.0-20220428152302-39d4317da171/go.mod h1:lgLbSvA5ygNOMpwM/9anMpWVlVJ7Z+cHWq/eFuinpGE=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.5.1/go.mod h1:5OXOZSfqPIIbmVBIIKWRFfZjPR0E5r58TLhUjH0a2Ro=\ngolang.org/x/mod v0.6.0-dev.0.20211013180041-c96bc1413d57/go.mod h1:3p9vT2HGsQu2K1YbXdKPJLVgG5VJdoTa1poYQBtP1AY=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=\ngolang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.9.0 h1:fEo0HyrW1GIgZdpbhCRO0PkJajUS5H9IFUztCgEo2jQ=\ngolang.org/x/sync v0.9.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220408201424-a24fb2fb8a0f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=\ngolang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.15.0/go.mod h1:BDl952bC7+uMoWR75FIrCDx79TPU9oHkTZ9yRbYOrX0=\ngolang.org/x/term v0.25.0 h1:WtHI/ltw4NvSUig5KARz9h521QvRC8RmF/cuYqifU24=\ngolang.org/x/term v0.25.0/go.mod h1:RPyXicDX+6vLxogjjRxjgD2TKtmAO6NZBsBRfrOLu7M=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=\ngolang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.8-0.20211029000441-d6a9af8af023/go.mod h1:nABZi5QlRsZVlzPpHl034qft6wpY4eDcsTt5AaioBiU=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.3.0/go.mod h1:/rWhSS2+zyEVwoJf8YAX6L2f0ntZ7Kn/mGgAWcipA5k=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.204.0 h1:3PjmQQEDkR/ENVZZwIYB4W/KzYtN8OrqnNcHWpeR8E4=\ngoogle.golang.org/api v0.204.0/go.mod h1:69y8QSoKIbL9F94bWgWAq6wGqGwyjBgi2y8rAK8zLag=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20241021214115-324edc3d5d38 h1:Q3nlH8iSQSRUwOskjbcSMcF2jiYMNiQYZ0c2KEJLKKU=\ngoogle.golang.org/genproto v0.0.0-20241021214115-324edc3d5d38/go.mod h1:xBI+tzfqGGN2JBeSebfKXFSdBpWVQ7sLW40PTupVRm4=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53 h1:fVoAXEKA4+yufmbdVYv+SE73+cPZbbbe8paLsHfkK+U=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53/go.mod h1:riSXTwQ4+nqmPGtobMFyW5FqVAmIs0St6VPp4Ug7CE4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38 h1:zciRKQ4kBpFgpfC5QQCVtnnNAcLIqweL7plyZRQHVpI=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.67.1 h1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=\ngoogle.golang.org/grpc v1.67.1/go.mod h1:1gLDyUQU7CTLJI90u3nXZ9ekeghjeM7pTDZlqFNg2AA=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}