{
  "metadata": {
    "timestamp": 1736568163993,
    "page": 61,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjYx",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nsqio/nsq",
      "stars": 25044,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.712890625,
          "content": "/build/\ndist/\n.cover/\nprofile/\n\n# nsqd data from testing\n*.dat\n\n# nsqadmin\nnode_modules\n\n# apps\napps/nsqlookupd/nsqlookupd\napps/nsqd/nsqd\napps/nsqadmin/nsqadmin\napps/nsq_to_nsq/nsq_to_nsq\napps/nsq_to_file/nsq_to_file\napps/nsq_pubsub/nsq_pubsub\napps/nsq_to_http/nsq_to_http\napps/nsq_tail/nsq_tail\napps/nsq_stat/nsq_stat\napps/to_nsq/to_nsq\nbench/bench_reader/bench_reader\nbench/bench_writer/bench_writer\nbench/bench_channels/bench_channels\n\n# Go.gitignore\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n\n\n# vim stuff\n*.sw[op]\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.4013671875,
          "content": "# For a complete listing, see https://github.com/nsqio/nsq/graphs/contributors\n\n# Original Authors\n\nMatt Reiferson <mreiferson@gmail.com>\nJehiah Czebotar <jehiah@gmail.com>\n\n# Maintainers\n\nPierce Lopez <ploxiln@gmail.com>\n\n# Disclaimer\n\nMatt Reiferson's contributions to this project are being made solely in a personal capacity\nand does not convey any rights to any intellectual property of any third parties.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.9501953125,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and\nwelcoming community, we pledge to respect all people who contribute through reporting issues,\nposting feature requests, updating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone,\nregardless of level of experience, gender, gender identity and expression, sexual orientation,\ndisability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By\nadopting this Code of Conduct, project maintainers commit themselves to fairly and consistently\napplying these principles to every aspect of managing this project. Project maintainers who do not\nfollow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is\nrepresenting the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an\nissue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][1], version 1.2.0, available at\n[http://contributor-covenant.org/version/1/2/0/][2].\n\n[1]: http://contributor-covenant.org\n[2]: http://contributor-covenant.org/version/1/2/0/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4287109375,
          "content": "# Contributing\n\nThanks for your interest in contributing to NSQ!\n\n## Code of Conduct\n\nHelp us keep NSQ open and inclusive. Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## Getting Started\n\n* make sure you have a [GitHub account](https://github.com/signup/free)\n* submit a ticket for your issue, assuming one does not already exist\n  * clearly describe the issue including steps to reproduce when it is a bug\n  * identify specific versions of the binaries and client libraries\n* fork the repository on GitHub\n\n## Making Changes\n\n* create a branch from where you want to base your work\n  * we typically name branches according to the following format: `helpful_name_<issue_number>`\n* make commits of logical units\n* make sure your commit messages are in a clear and readable format, example:\n  \n```\nnsqd: fixed bug in protocol_v2\n  \n* update the message pump to properly account for RDYness\n* cleanup variable names\n* ...\n```\n\n* if you're fixing a bug or adding functionality it probably makes sense to write a test\n* make sure to run `fmt.sh` and `test.sh` in the root of the repo to ensure that your code is\n  properly formatted and that tests pass (we use GitHub Actions for continuous integration)\n\n## Submitting Changes\n\n* push your changes to your branch in your fork of the repository\n* submit a pull request against nsqio's repository\n* comment in the pull request when you're ready for the changes to be reviewed: `\"ready for review\"`\n"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 54.548828125,
          "content": "# NSQ Changelog\n\n## Releases\n\n### 1.3.0 - 2023-12-26\n\n**Upgrading**\n\n * #1427 / #1373 / #1371 - fix staticcheck warnings, remove support for gobindata / go 1.16\n\nFeatures:\n\n * #1473 - `nsqd`: use --tls-root-ca-file in nsqauth request (thanks @intellitrend-team)\n * #1470 / #1469 - `nsqadmin`: upgrade supported ECMA from ES5 to ES2020 (thanks @dudleycarr)\n * #1468 - `nsqadmin`: add paused label to topic within the node view (thanks @dudleycarr)\n * #1462 - `nsqadmin`: add admin check for topic/node thombstone endpoint (thanks @dudleycarr)\n * #1434 - `nsqd`: add support of unix sockets for tcp, http, https listeners (thanks @telepenin)\n * #1424 - `nsqd`: add /debug/freememory API (thanks @guozhao-coder)\n * #1421 - `nsqd`: nicer tls-min-version help text default\n * #1376 - `nsqd`: allow unbuffered memory chan if ephemeral or deferred\n * #1380 - `nsqd`: use metadata struct for both marshal and unmarshal (thanks @karalabe)\n * #1403 - `nsqd`: /info api returns more info (thanks @arshabbir)\n * #1384 - `nsqd`: allow disabling both HTTP and HTTPS interfaces (thanks @karalabe)\n * #1385 - `nsqd`: enable support for TLS1.3  (thanks @karalabe)\n * #1372 - `nsqadmin`: new flag --dev-static-dir instead of debug build tag\n\nBugs:\n\n * #1478 - `Dockerfile`: remove nsswitch.conf check (thanks @dudleycarr)\n * #1467 - `nsqadmin`: fix counter by bounding animation steps (thanks @dudleycarr)\n * #1466 - `nsqadmin`: fix broken graph template in nsqadmin node view (thanks @dudleycarr)\n * #1455 / #1387 - update dependencies\n * #1445 - `nsqd`: fix unsafe concurrency read in RemoveClient (thanks @gueFDF)\n * #1441 - `nsqd`: fix panic when statsd enabled and memstats disabled with no topics (thanks @carl-reverb)\n * #1428 - delete `validTopicChannelNameRegex` useless escape characters (thanks @sjatsh)\n * #1419 - contrib: update nsqadmin.cfg.example (thanks @StellarisW)\n\n### 1.2.1 - 2021-08-15\n\n**Upgrading**\n\n * #1227 - bump dependencies, officially drop `dep` support, drop Go `1.9` support\n\nFeatures:\n\n * #1347 - `nsqadmin`: switch to go:embed for static assets\n * #1355 / #1364 - arm64 builds (thanks @danbf)\n * #1346 - `nsqd`: ability to skip ephemeral topics/channels in statsd output \n * #1336 / #1341 / #1343 - `nsqd`: ability to configure auth endpoint path (thanks @tufanbarisyildirim)\n * #1307 - remove `Context` to use stdlib `context`\n * #1295 / #1296 - switch to GitHub Actions CI\n * #1292 - `nsqd`: minimize allocations on message send (thanks @imxyb)\n * #1289 - optimize `uniq` (thanks @donutloop)\n * #1230 / #1232 - `nsqd`: ability to omit memory stats from `/stats` (thanks @creker)\n * #1226 - `nsqd`: only update internal `RDY` count for client when it changes (thanks @andyxning)\n * #1221 / #1363 - test against more recent versions of Go\n * #1209 - `nsqd`: bump `go-diskqueue` (interface change) (thanks @bitpeng)\n * #1206 - prefer idiomatic `sort.Ints` over `sort.Sort` (thanks @lelenanam)\n * #1197 / #1362 - Dockerfile: update Alpine base image, use /data by default\n * #1178 - `nsqd`: configurable queue scan worker pool (thanks @andyxning)\n * #1159 - `nsqd`: don't buffer messages when `--mem-queue-size=0` (thanks @bitpeng)\n * #1073 / #1297 - `nsqd`: support separate broadcast ports for TCP and HTTP (thanks @shyam-king)\n\nBugs:\n\n * #1347 - `nsqadmin`: fix graphite key for ephemeral topics/channels\n * #765 / #1195 / #1203 / #1205 - fix build on illumos (thanks @i-sevostyanov)\n * #1333 - fix race detector tests on non-bash shells \n * #1330 - fix `log_level` support in configuration file (thanks @edoger)\n * #1319 / #1331 / #1361 - `nsqd`: handle SIGTERM \n * #1287 - `nsqadmin`: fix `--proxy-graphite` support (thanks @fanlix)\n * #1270 / #1271 - `nsqlookupd`: fix incorrect error message for HTTP listener (thanks @TangDH03)\n * #1264 - fix benchmark script\n * #1251 / #1314 / #1327 - `nsqd`: fix live lock for high churn ephemeral topic/channel reconnections (thanks @slayercat)\n * #1237 - Dockerfile: add `nsswitch.conf` to ensure go resolver uses `/etc/hosts` first\n * #1217 / #1220 - `nsqd`: improve error message when `--data-path` does not exist (thanks @mdh67899)\n * #1198 / #1190 / #1262 - synchronize close of all connections on Exit (thanks @benjsto)\n * #1188 / #1189 - `nsqadmin`: fix channel delete, fix source-maps in Firefox (thanks @avtrifanov)\n * #1186 - `nsqadmin`: fix nodes list with ipv6 addresses (thanks @andyxning)\n\n### 1.2.0 - 2019-08-26\n\n**Upgrading**\n\n * #1055 - `nsqd`: removed support for old metadata scheme used in v0.3.8 and earlier\n   * you cannot upgrade directly from v0.3.8 to v1.2.0, you must go through v1.0.0-compat or v1.1.0\n * #1115 - manage dependencies with go modules\n   * `dep` support still present for now, but deprecated\n\nFeatures:\n\n * #1136 - `nsqd`: add `--max-channel-consumers` (default unlimited) (thanks @andyxning)\n * #1133 - `nsqd`: add `--min-output-buffer-timeout` (default 25ms) to limit how low a timeout a consumer can request\n   * and raise default `--max-output-buffer-timeout` to 30 seconds (lower timeout, more cpu usage)\n * #1127 - `nsqd`: add topic total message bytes to stats (thanks @andyxning)\n * #1125 - `nsqd`: add flag to adjust default `--output-buffer-timeout` (thanks @andyxning)\n * #1163 - `nsqd`: add random load balancing for authd requests (thanks @shenhui0509)\n * #1119 - `nsqd`: include client TLS cert CommonName in authd requests\n * #1147 - `nsq_to_file`: include topic/channel in most log messages\n * #1117 - `nsq_to_file`: add `--log-level` and `--log-prefix` flags\n * #1117/#1120/#1123 - `nsq_to_file`: big refactor, more robust file switching and syncing and error handling\n * #1118 - `nsqd`: add param to `/stats` endpoint to allow skipping per-client stats (much faster if many clients)\n * #1118 - `nsqadmin`, `nsq_stat`: use `include_clients` param for `/stats` for a big speedup for big clusters\n * #1110 - `nsq_to_file`: support for separate working directory with `--work-dir` (thanks @mccutchen)\n * #856 - `nsqadmin`: add `--base-path` flag (thanks @blinklv)\n * #1072 - `nsq_to_http`: add `--header` flag (thanks @alwindoss)\n * #881 - `nsqd`: add producer client tcp connections to stats (thanks @sparklxb)\n * #1071/#1074 - `nsq_to_file`: new flag `--sync-interval` (default same as previous behavior, 30 seconds) (thanks @alpaker)\n\nBugs:\n\n * #1153 - `nsqd`: close connections that don't send \"magic\" header (thanks @JoseFeng)\n * #1140 - `nsqd`: exit on all fatal Accept() errors - restart enables better recovery for some conditions (thanks @mdh67899)\n * #1140 - `nsqd`, `nsqlookupd`, `nsqadmin`: refactor LogLevel, general refactor to better exit on all fatal errors\n * #1140 - `nsqadmin`: switch to using `judwhite/go-svc` like `nsqd` and `nsqadmin` do\n * #1134 - `nsqadmin`: fix clients count and channel total message rate (new bugs introduced in this cycle)\n * #1132 - `nsqd`, `nsqlookupd`, `nsqadmin`: fix http error response unreliable json serialization\n * #1116 - `nsqlookupd`: fix orphaned ephemeral topics in registration DB\n * #1109 - `nsqd`: fix topic message mis-counting if there are backend write errors (thanks @SwanSpouse)\n * #1099 - `nsqlookupd`: optimize `/nodes` endpoint, much better for hundreds of nsqd (thanks @andyxning)\n * #1085 - switch `GOFLAGS` to `BLDFLAGS` in `Makefile` now that `GOFLAGS` is automatically used by go\n * #1080 - `nsqadmin`: eslint reported fixes/cleanups\n\n### 1.1.0 - 2018-08-19\n\n**Upgrading from 1.0.0-compat**: Just a few backwards incompatible changes:\n\n * #1056 - Removed the `nsq_pubsub` utility\n * #873 - `nsqd` flags `--msg-timeout` and `--statsd-interval` only take duration strings\n   * plain integer no longer supported\n * #921 - `nsqd`: http `/mpub` endpoint `binary` param interprets \"0\" or \"false\" to mean text mode\n   * previously any value meant to use binary mode instead of text mode -  (thanks @andyxning)\n\nThe previous release, version \"1.0.0-compat\", was curiously-named to indicate an almost\n(but not quite) complete transition to a 1.0 api-stable release line. Confusingly, this\nfollow-up release which completes the transition comes more than a year later. Because there\nhave been a fair number of changes and improvements in the past year, an additional minor\nversion bump seems appropriate.\n\nFeatures:\n\n * #874 - `nsqd`: add memory stats to http `/stats` response (thanks @sparklxb)\n * #892 - `nsqd`, `nsqlookupd`, `nsqadmin`: add `--log-level` option (deprecating `--verbose`) (thanks @antihax)\n * #898 - `nsqd`, `nsqlookupd`, `nsqadmin`: logging refactor to use log levels everywhere\n * #914 - `nsqadmin`: `X-Forwarded-User` based \"admin\" permission (thanks @chen-anders)\n * #929 - `nsqd`: add topic/channel filter to `/stats`, use in `nsqadmin` and `nsq_stat` for efficiency (thanks @andyxning)\n * #936 - `nsq_to_file`: refactor/cleanup\n * #945 - `nsq_to_nsq`: support multiple `--topic` flags (thanks @jlr52)\n * #957 - `nsq_tail`: support multiple `--topic` flags (thanks @soar)\n * #946 - `nsqd`, `nsqadmin`: update internal http client with new go `http.Transport` features (keepalives, timeouts, dualstack)\n   * affects metadata/stats requests between `nsqadmin`, `nsqd`, `nsqlookupd`\n * #954 - manage dependencies with `dep` (replacing `gpm`) (thanks @judwhite)\n * #957 - multi-stage docker image build (thanks @soar)\n * #996 - `nsqd`: better memory usage when messages have different sizes (thanks @andyxning)\n * #1019 - `nsqd`: optimize random channel selection in queueScanLoop (thanks @vearne)\n * #1025 - `nsqd`: buffer and spread statsd udp sends (avoid big burst of udp, less chance of loss)\n * #1038 - `nsqlookupd`: optimize for many producers (thousands) (thanks @andyxning)\n * #1050/#1053 - `nsqd`: new topic can be unlocked faster after creation\n * #1062 - `nsqadmin`: update JS deps\n\nBugs:\n\n * #753 - `nsqadmin`: fix missing channels in topic list\n * #867 - `to_nsq`: fix divide-by-zero issue when `--rate` not specified (thanks @adamweiner)\n * #868 - `nsqd`: clamp requeue timeout to range instead of dropping connection (thanks @tsholmes)\n * #891 - `nsqd`: fix race when client subscribes to ephemeral topic or channel while it is being cleaned up (reported by @slayercat)\n * #927 - `nsqd`: fix deflate level handling\n * #934 - `nsqd`: fix channel shutdown flush race\n * #935 - `nsq_to_file`: fix connection leaks when using `--topic-pattern` (thanks @jxskiss)\n * #951 - mention docker images and binaries for additional platforms in README (thanks @DAXaholic)\n * #950 - `nsqlookupd`: close connection when magic read fails (thanks @yc90s)\n * #971 - `nsqd`: fix some races getting ChannelStats (thanks @daroot)\n * #988 - `nsqd`: fix e2e timings config example, add range validation (thanks @protoss-player)\n * #991 - `nsq_tail`: logging to stderr (only nsq messages to stdout)\n * #1000 - `nsq_to_http`: fix http connect/request timeout flags (thanks @kamyanskiy)\n * #993/#1008 - `nsqd`: fix possible lookupd-identify-error busy-loop (reported by @andyxning)\n * #1005 - `nsqadmin`: fix typo \"Delfate\" in connection attrs list (thanks @arussellsaw)\n * #1032 - `nsqd`: fix loading metadata with messages queued on un-paused topic with multiple channels (thanks @michaelyou)\n * #1004 - `nsqlookupd`: exit with error when failed to listen on ports (thanks @stephens2424)\n * #1068 - `nsqadmin`: fix html escaping for large_graph url inside javascript\n * misc test suite improvements and updates (go versions, tls certs, ...)\n\n### 1.0.0-compat - 2017-03-21\n\n**Upgrading from 0.3.8**: Numerous backwards incompatible changes:\n\n * Deprecated `nsqd` features removed:\n   * Pre-V1 HTTP endpoints / response format:\n     * `/{m,}put` (use `/{m,}pub`)\n     * `/{create,delete,empty,pause,unpause}_{topic,channel}` (use `/{topic,channel}/<operation>`)\n   * `--max-message-size` flag (use `--max-msg-size`)\n   * `V2` protocol `IDENTIFY` command `short_id` and `long_id` properties (use `client_id`, `hostname`, and `user_agent`)\n   * `/stats` HTTP response `name` property (use `client_id`)\n * Deprecated `nsqlookupd` features removed:\n   * Pre-V1 HTTP endpoints / response format:\n     * `/{create,delete}_{topic,channel}` (use `/{topic,channel}/<operation>`)\n     * `/tombstone_topic_producer` (use `/topic/tombstone`)\n * Deprecated `nsqadmin` features removed:\n   * `--template-dir` flag (not required, templates are compiled into binary)\n   * `--use-statsd-prefixes` flag (use `--statsd-counter-format` and `--statsd-gauge-format`)\n * `nsq_stat` `--status-every` flag (use `--interval`)\n * `--reader-opt` on all binaries that had this flag (use `--consumer-opt`)\n * `nsq_to_file` `--gzip-compression` flag (use `--gzip-level`)\n * `nsq_to_http` `--http-timeout` and `--http-timeout-ms` flags (use `--http-connect-timeout` and `--http-request-timeout`)\n * `nsq_to_http` `--round-robin` flag (use `--mode=round-robin`)\n * `nsq_to_http` `--max-backoff-duration` flag (use `--consumer-opt=max_backoff_duration,X`)\n * `nsq_to_http` `--throttle-fraction` flag (use `--sample=X`)\n * `nsq_to_nsq` `--max-backoff-duration` flag (use `--consumer-opt=max_backoff_duration,X`)\n * `nsqd` `--worker-id` deprecated in favor of `--node-id` (to be fully removed in subsequent release)\n\nThis is a compatibility release that drops a wide range of previously deprecated features (#367)\nwhile introducing some new deprecations (#844) that we intend to fully remove in a subsequent 1.0\nrelease.\n\nOf note, all of the pre-1.0 HTTP endpoints (and response formats) are gone. Any clients or tools\nthat use these endpoints/response formats won't work with this release. These changes have been\navailable since 0.2.29 (released in July of 2014). Clients wishing to forwards-compatibly upgrade\ncan either use the new endpoints or send the following header:\n\n    Accept: application/vnd.nsq version=1.0\n\nAlso, many command line flags have been removed — in almost all cases an alternative is available\nwith a (hopefully) more obvious name. These changes have the same affect on config file option\nnames.\n\nOn Linux, this release will automatically migrate `nsq.<worker-id>.dat` named metadata files to\n`nsq.dat` in a way that allows users to seamlessly _downgrade_ from this release back to 0.3.8, if\nnecessary. A subsequent release will clean up these convenience symlinks and observe only\n`nsq.dat`. See the discussion in #741 and the changes #844 for more details.\n\nPerformance wise, #741 landed which significantly reduces global contention on internal message ID\ngeneration, providing a ~1.75x speed improvement on multi-topic benchmarks.\n\nFinally, a number of minor issues were resolved spanning contributions from 9 community members!\nThanks!\n\nFeatures:\n\n * #766 - use `alpine` base image for official Docker container (thanks @kenjones-cisco)\n * #775 - `nsqadmin:` `/config` API (thanks @kenjones-cisco)\n * #776 - `nsqadmin`, `nsq_stat`, `nsq_to_file`, `nsq_to_http`: HTTP client connect/request timeouts (thanks @kenjones-cisco)\n * #777/#778/#783/#785 - improve test coverage (thanks @kenjones-cisco)\n * #788 - `to_nsq`: add `--rate` message throttling option\n * #367 - purge deprecated features (see above)\n * #741 - `nsqd`: per-topic message IDs (multi-topic pub benchmarks up to ~1.75x faster)\n * #850 - `nsqd`, `nsqlookupd`, `nsqadmin`: add `--log-prefix` option (thanks @ploxiln)\n * #844 - `nsqd`: deprecate `--worker-id` for `--node-id` and drop ID from `nsqd.dat` file (thanks @ploxiln)\n\nBugs:\n\n * #787 - `nsqlookupd`: properly close TCP connection in `IOLoop` (thanks @JackDrogon)\n * #792 - `nsqdmin`: fix root CA verification (thanks @joshuarubin)\n * #794 - `nsq_to_file`: require `--topic` or `--topic-pattern` (thanks @judwhite)\n * #816/#823 - `nsqadmin`: fix handling of IPv6 broadcast addresses (thanks @magnetised)\n * #805/#832 - `nsqd`: fix requeue and deferred message accounting (thanks @sdbaiguanghe)\n * #532/#830 - `nsqd`: switch to golang/snappy to fix snappy deadlock\n * #826/#831/#837/#839 - `nsqd`: fix default `--broadcast-address` and error when `nsqlookupd` reqs fail (thanks @ploxiln @stephensearles)\n * #822/#835 - `nsqd`: prevent panic in binary `/mpub` (thanks @yangyifeng01)\n * #841 - `nsqadmin`: allow ctrl/meta+click to open a new tab\n * #843 - `nsqd`: check for exit before requeing\n\n### 0.3.8 - 2016-05-26\n\n**Upgrading from 0.3.7**: Binaries contain no backwards incompatible changes.\n\nThis release fixes a critical regression in `0.3.7` that could result in message loss when\nattempting to cleanly shutdown `nsqd` by sending it a `SIGTERM`. The expected behavior was for it\nto flush messages in internal buffers to disk before exiting. See #757 and #759 for more details.\n\nA few performance improvements landed including #743, which improves channel throughput by ~17%,\nand #740, which reduces garbage when reading messages from disk.\n\nWe're now stripping debug info, reducing binary size, in the official binary downloads and Windows\nbinaries are now bundled with the appropriate `.exe` extension (#726 and #751).\n\nFeatures:\n\n * #743 - `nsqd`: remove channel `messagePump`\n * #751 - strip debug info from binaries (thanks @ploxiln)\n * #740 - `nsqd`: reduce garbage when reading from diskqueue (thanks @dieterbe)\n\nBugs:\n\n * #757/#759 - `nsqd`: properly handle `SIGTERM` (thanks @judwhite)\n * #738 - updates for latest `go-options`\n * #730 - `nsqd`: diskqueue sync count on both read/write\n * #734 - `nsqadmin`: make `rate` column work without `--proxy-graphite` (thanks @ploxiln)\n * #726 - add `.exe` extension to Windows binaries (thanks @ploxiln)\n * #722 - `nsqadmin`: fix connected duration > `1hr`\n\n### 0.3.7 - 2016-02-23\n\n**Upgrading from 0.3.6**: Binaries contain no backwards incompatible changes.\n\nThis release has been built with Go 1.6.\n\nHighlights include the various work done to reduce `nsqd` lock contention, significantly improving\nthe impact of high load on the `/stats` endpoint, addressing issues with timeouts and failures\nin `nsqadmin` (#700, #701, #703, #709).\n\nThanks to @judwhite, `nsqd` and `nsqlookupd` now natively support being run as a Windows service\n(#718). We're also now publishing official Windows releases.\n\n`nsqd` will now `flock` its data directory on linux, preventing two `nsqd` from running\nsimultaneously pointed at the same path (#583).\n\nOn the bugfix side, the most noteworthy change is that `nsqd` will now correctly reset health state\non a successful backend write (#671).\n\nFeatures:\n\n * #700/#701/#703/#709 - `nsqd`: reduce lock contention (thanks @zachbadgett @absolute8511)\n * #718 - `nsqd`/`nsqlookupd`: support running as a windows service (thanks @judwhite)\n * #706 - `nsqd`: support enabling/disabling block profile via HTTP (thanks @absolute8511)\n * #710 - `nsqd`: support `POST` `/debug/pprof/symbol` (thanks @absolute8511)\n * #662 - `nsqadmin`: add flags for formatting statsd keys (thanks @kesutton)\n * #583 - `nsqd`: `flock` `--data-path` on linux\n * #663 - `nsqd`: optimize GUID generation (thanks @ploxiln)\n\nBugs:\n\n * #672 - `nsqd`: fix max size accounting in `diskqueue` (thanks @judwhite)\n * #671 - `nsqd`: reset health on successful backend write (thanks @judwhite)\n * #615 - `nsqd`: prevent OOM when reading from `nsqlookupd` peer\n * #664/#666 - dist.sh/Makefile cleanup (thanks @ploxiln)\n\n### 0.3.6 - 2015-09-24\n\n**Upgrading from 0.3.5**: Binaries contain no backwards incompatible changes.\n\nWe've adopted the [Contributor Covenant 1.2 Code of Conduct](CODE_OF_CONDUCT.md) (#593). Help us\nkeep NSQ open and inclusive by reading and following this document.\n\nWe closed a few longstanding issues related to `nsqadmin`, namely (#323, et al.) converting it to\nan API and single-page app (so that it is _much_ easier to develop), displaying fine-grained errors\n(#421, #657), and enabling support for `--tls-required` configurations (#396).\n\nFor `nsqd`, we added support for deferred publishing aka `DPUB` (#293), which allows a producer to\nspecify a duration of time to delay initial delivery of the message. We also addressed performance\nissues relating to large numbers of topics/channels (#577) by removing some per-channel goroutines\nin favor of a centralized, periodic, garbage collection approach.\n\nIn order to provide more flexibility when deploying NSQ in dynamically orchestrated topologies,\n`nsqd` now supports the ability to configure `nsqlookupd` peers at runtime via HTTP (#601),\neliminating the need to restart the daemon.\n\nAs part of the large `nsqadmin` refactoring, we took the opportunity to cleanup the internals for\n_all_ of the daemon's HTTP code paths (#601, #610, #612, #641) as well as improving the test suite\nso that it doesn't leave around temporary files (#553).\n\nFeatures:\n\n * #593 - add code of conduct\n * #323/#631/#632/#642/#421/#649/#650/#651/#652/#654 - `nsqadmin`: convert to API / single-page app\n * #653 - `nsqadmin`: expand notification context\n * #293 - `nsqd`: add deferred pub (`DPUB`)\n * #577 - `nsqd`: drop per-channel queue workers in favor of centralized queue GC\n * #584 - `nsqlookupd`: improve registration DB performance (thanks @xiaost)\n * #601 - `nsqd`: HTTP endpoints to dynamically configure `nsqlookupd` peers\n * #608 - `nsqd`: support for filtering `/stats` to topic/channel (thanks @chrusty)\n * #601/#610/#612/#641 - improved HTTP internal routing / log HTTP requests\n * #628 - `nsqd`: clarify help text for `--e2e-processing-latency-percentile`\n * #640 - switch `--{consumer,producer}-opt` to `nsq.ConfigFlag`\n\nBugs:\n\n * #656 - `nsqadmin`: update `statsd` prefix to `stats.counters`\n * #421/#657 - `nsqadmin`: display upstream/partial errors\n * #396 - `nsqdamin`/`nsqd`: support for `--tls-required`\n * #558 - don't overwrite docker root FS\n * #582 - `nsqd`: ignore benign EOF errors\n * #587 - `nsqd`: GUID error handling / catch errors if GUID goes backwards (thanks @mpe)\n * #586 - `nsqd`: fix valid range for `--worker-id`\n * #550/#602/#617/#618/#619/#620/#622 - `nsqd`: fix benchmarks (thanks @Dieterbe)\n * #553 - cleanup test dirs\n * #600 - `nsqd`: enforce diskqueue min/max message size (thanks @twmb)\n\n### 0.3.5 - 2015-04-26\n\n**Upgrading from 0.3.3**: Binaries contain no backwards incompatible changes.\n\nThis is another quick bug fix release to address the broken `nsqadmin` binary in the distribution\n(see #578).\n\n### 0.3.4 - 2015-04-26\n\n**WARNING**: please upgrade to `v0.3.5` to address the broken `nsqadmin` binary.\n\n**Upgrading from 0.3.3**: Binaries contain no backwards incompatible changes.\n\nThis is a quick bug fix release to fix the outdated `go-nsq` dependency in `v0.3.3`\nfor the bundled utilities (see 6e8504e).\n\n### 0.3.3 - 2015-04-26\n\n**WARNING**: please upgrade to `v0.3.5` to address the outdated `go-nsq` dependency for the\nbundled utilities and the broken `nsqadmin` binary.\n\n**Upgrading from 0.3.2**: Binaries contain no backwards incompatible changes.\n\nThis release is primarily a bug fix release after cleaning up and reorganizing the codebase.\n`nsqadmin` is now importable, which paves the way for completing #323. The bundled utilities\nreceived a few feature additions and bug fixes (mostly from bug fixes on the `go-nsq` side).\n\nFeatures:\n\n * #569 - `nsqadmin`: re-org into importable package\n * #562 - `nsq_to_{nsq,http}`: add `epsilon-greedy` mode (thanks @twmb)\n * #547 - `nsqd`: adds `start_time` to `/stats` (thanks @ShawnSpooner)\n * #544 - `nsq_to_http`: accept any `200` response as success (thanks @mikedewar)\n * #548 - `nsq_to_http`: read entire request body (thanks @imgix)\n * #552/#554/#555/#556/#561 - code cleanup and `/internal` package re-org (thanks @cespare)\n\nBugs:\n\n * #573 - `nsqd`: don't persist metadata upon startup (thanks @xiaost)\n * #560 - `nsqd`: do not print `EOF` error when client closes cleanly (thanks @twmb)\n * #557 - `nsqd`: fix `--tls-required=tcp-https` with `--tls-client-auth-policy` (thanks @twmb)\n * #545 - enable shell expansion in official Docker image (thanks @paddyforan)\n\nNOTE: the bundled utilities are built against [`go-nsq` `v1.0.4`][go-nsq_104] and include all of\nthose features/fixes.\n\n[go-nsq_104]: https://github.com/nsqio/go-nsq/releases/tag/v1.0.4\n\n### 0.3.2 - 2015-02-08\n\n**Upgrading from 0.3.1**: Binaries contain no backwards incompatible changes however as of this\nrelease we've updated our official Docker images.\n\nWe now provide a single Docker image [`nsqio/nsq`](https://registry.hub.docker.com/r/nsqio/nsq/)\nthat includes *all* of the NSQ binaries. We did this for several reasons, primarily because the\ntagged versions in the previous incarnation were broken (and did not actually pin to a version!).\nThe new image is an order of magnitude smaller, weighing in around 70mb.\n\nIn addition, the impetus for this quick release is to address a slew of reconnect related bug fixes\nin the utility apps (`nsq_to_nsq`, `nsq_to_file`, etc.), for details see the [`go-nsq` `v1.0.3`\nrelease notes](https://github.com/nsqio/go-nsq/releases/tag/v1.0.3).\n\nFeatures:\n\n * #534/#539/#540 - single Dockerfile approach (thanks @paddyforan)\n\nBugs:\n\n * #529 - nsqadmin: fix more `#ephemeral` topic deletion issues\n * #530 - nsqd: fix the provided sample config file (thanks @jnewmano)\n * #538 - nsqd: fix orphaned ephemeral channels (thanks @adamsathailo)\n\n### 0.3.1 - 2015-01-21\n\n**Upgrading from 0.3.0**: No backwards incompatible changes.\n\nThis release contains minor bug fixes and feature additions.\n\nThere are a number of functionality improvements to the `nsq_stat` and `nsq_to_file` helper\napplications (and general support for `#ephemeral` topics, broken in `0.2.30`).\n\nAdditionally, the TLS options continue to improve with support for setting `--tls-min-version` and\na work-around for a bug relating to `TLS_FALLBACK_SCSV` ([to be fixed in Go\n1.5](https://go-review.googlesource.com/#/c/1776/)).\n\nFeatures:\n\n * #527 - nsq_stat: deprecate `--status-every` in favor of `--interval`\n * #524 - nsq_stat: add `--count` option (thanks @nordicdyno)\n * #518 - nsqd: set defaults for `--tls-min-version` and set TLS max version to 1.2\n * #475/#513/#518 - nsqd: `--tls-required` can be disabled for HTTP / add `--tls-min-version`\n                    (thanks @twmb)\n * #496 - nsq_to_file: add `<PID>` to filename and rotation by size/interval (thanks @xiaost)\n * #507 - nsq_stat: add rates (thanks @xiaost)\n * #505 - nsqd: speed up failure path of `BytesToBase10` (thanks @iand)\n\nBugs:\n\n * #522 - nsqadmin: fix `#ephemeral` topic deletion issues\n * #509 - nsqd: fix `diskqueue` atomic rename on Windows (thanks @allgeek)\n * #479 - nsqd: return `output_buffer_*` resolved settings in `IDENTIFY` response (thanks @tj)\n\n### 0.3.0 - 2014-11-18\n\n**Upgrading from 0.2.31**: No backwards incompatible changes.\n\nThis release includes a slew of bug fixes and few key feature additions.\n\nThe biggest functional change is that `nsqd` no longer decrements its `RDY` count for clients. This\nmeans that client libraries no longer have to periodically re-send `RDY`. For some context, `nsqd`\nalready provided back-pressure due to the fact that a client must respond to messages before\nreceiving new ones. The decremented `RDY` count only made the implementation of the server and\nclient more complex without additional benefit. Now the `RDY` command can be treated as an \"on/off\"\nswitch. For details see #404 and the associated changes in nsqio/go-nsq#83 and nsqio/pynsq#98.\n\nThe second biggest change (and oft-requested feature!) is `#ephemeral` topics. Their behavior\nmirrors that of channels. This feature is incredibly useful for situations where you're using\ntopics to \"route\" messages to consumers (like RPC) or when a backlog of messages is undesirable.\n\nThere are now scripts in the `bench` directory that automate the process of running a distributed\nbenchmark.  This is a work-in-progress, but it already provides a closer-to-production setup and\ntherefore more accurate results.  There's much work to do here!\n\nA whole bunch of bugs were fixed - notably all were 3rd-party contributions! Thanks!\n\n * #305 - `#ephemeral` topics\n * #404/#459 - don't decr `RDY` / send `RDY` before `FIN`/`REQ`\n * #472 - improve `nsqd` `diskqueue` sync strategies\n * #488 - ability to filter topics by regex in `nsq_to_file` (thanks @lxfontes)\n * #438 - distributed pub-sub benchmark scripts\n * #448 - better `nsqd` `IOLoop` logging (thanks @rexposadas)\n * #458 - switch to [gpm](https://github.com/pote/gpm) for builds\n\nBugs:\n\n * #493 - ensure all `nsqd` `Notify()` goroutines have exited prior to shutdown (thanks @allgeek)\n * #492 - ensure `diskqueue` syncs at end of benchmarks (thanks @Dieterbe)\n * #490 - de-flake `TestPauseMetadata` (thanks @allgeek)\n * #486 - require ports to be specified for daemons (thanks @jnewmano)\n * #482 - better bash in `dist.sh` (thanks @losinggeneration)\n * #480 - fix panic when `nsqadmin` checks stats for missing topic (thanks @jnewmano)\n * #469 - fix panic when misbehaving client sends corrupt command (thanks @prio)\n * #461 - fix panic when `nsqd` decodes corrupt message data (thanks @twmb)\n * #454/#455 - fix 32-bit atomic ops in `nsq_to_nsq`/`nsq_to_http` (thanks @leshik)\n * #451 - fix `go get` compatibility (thanks @adams-sarah)\n\n### 0.2.31 - 2014-08-26\n\n**Upgrading from 0.2.30**: No backwards incompatible changes.\n\nThis release includes a few key changes. First, we improved feedback and back-pressure when `nsqd`\nwrites to disk. Previously this was asynchronous and would result in clients not knowing that their\n`PUB` had failed. Interestingly, this refactoring improved performance of `PUB` by 41%, by removing\nthe topic's goroutine responsible for message routing in favor of `N:N` Go channel communication.\nFor details see #437.\n\n@paddyforan contributed official Dockerfiles that are now built automatically via Docker Hub.\nPlease begin to use (and improve these) as the various older images we had been maintaining will be\ndeprecated.\n\nThe utility apps deprecated the `--reader-opt` flag in favor of `--consumer-opt` and `nsq_to_nsq`\nand `to_nsq` received a `--producer-opt` flag, for configuring details of the connection publishing\nto `nsqd`. Additionally, it is now possible to configure client side TLS certificates via\n`tls_cert` and `tls_key` opts.\n\nAs usual, we fixed a few minor bugs, see below for details.\n\nNew Features / Enhancements:\n\n * #422/#437 - `nsqd`: diskqueue error feedback/backpressure (thanks @boyand)\n * #412 - official Dockerfiles for `nsqd`, `nsqlookupd`, `nsqadmin` (thanks @paddyforan)\n * #442 - utilities: add `--consumer-opt` alias for `--reader-opt` and\n          add `--producer-opt` to `nsq_to_nsq` (also support configuration\n          of `tls_cert` and `tls_key`)\n * #448 - `nsqd`: improve IOLoop error messages (thanks @rexposadas)\n\nBugs:\n\n * #440 - `nsqd`: fixed statsd GC stats reporting (thanks @jphines)\n * #434/#435 - refactored/stabilized tests and logging\n * #429 - `nsqd`: improve handling/documentation of `--worker-id` (thanks @bschwartz)\n * #428 - `nsqd`: `IDENTIFY` should respond with materialized `msg_timeout` (thanks @visionmedia)\n\n### 0.2.30 - 2014-07-28\n\n**Upgrading from 0.2.29**: No backwards incompatible changes.\n\n**IMPORTANT**: this is a quick bug-fix release to address a panic in `nsq_to_nsq` and\n`nsq_to_http`, see #425.\n\nNew Features / Enhancements:\n\n * #417 - `nsqadmin`/`nsqd`: expose TLS connection state\n * #425 - `nsq_to_nsq`/`nsq_to_file`: display per-destination-address timings\n\nBugs:\n\n * #425 - `nsq_to_nsq`/`nsq_to_file`: fix shared mutable state panic\n\n### 0.2.29 - 2014-07-25\n\n**Upgrading from 0.2.28**: No backwards incompatible changes.\n\nThis release includes a slew of new features and bug fixes, with contributions from 8\nmembers of the community, thanks!\n\nThe most important new feature is authentication (the `AUTH` command for `nsqd`), added in #356.\nWhen `nsqd` is configured with an `--auth-http-address` it will require clients to send the `AUTH`\ncommand. The `AUTH` command body is opaque to `nsqd`, it simply passes it along to the configured\nauth daemon which responds with well formed JSON, indicating which topics/channels and properties\non those entities are accessible to that client (rejecting the client if it accesses anything\nprohibited). For more details, see [the spec](https://nsq.io/clients/tcp_protocol_spec.html) or [the\n`nsqd` guide](https://nsq.io/components/nsqd.html#auth).\n\nAdditionally, we've improved performance in a few areas. First, we refactored in-flight handling in\n`nsqd` to reduce garbage creation and improve baseline performance 6%. End-to-end processing\nlatency calculations are also significantly faster, thanks to improvements in the\n[`perks`](https://github.com/bmizerany/perks/pulls/7) package.\n\nHTTP response formats have been improved (removing the redundant response wrapper) and cleaning up\nsome of the endpoint namespaces. This change is backwards compatible. Clients wishing to move\ntowards the new response format can either use the new endpoint names or send the following header:\n\n    Accept: application/vnd.nsq version=1.0\n\nOther changes including officially bumping the character limit for topic and channel names to 64\n(thanks @svmehta), making the `REQ` timeout limit configurable in `nsqd` (thanks @AlphaB), and\ncompiling static asset dependencies into `nsqadmin` to simplify deployment (thanks @crossjam).\n\nFinally, `to_nsq` was added to the suite of bundled apps. It takes a stdin stream and publishes to\n`nsqd`, an extremely flexible solution (thanks @matryer)!\n\nAs for bugs, they're mostly minor, see the pull requests referenced in the section below for\ndetails.\n\nNew Features / Enhancements:\n\n * #304 - apps: added `to_nsq` for piping stdin to NSQ (thanks @matryer)\n * #406 - `nsqadmin`: embed external static asset dependencies (thanks @crossjam)\n * #389 - apps: report app name and version via `user_agent`\n * #378/#390 - `nsqd`: improve in-flight message handling (6% faster, GC reduction)\n * #356/#370/#386 - `nsqd`: introduce `AUTH`\n * #358 - increase topic/channel name max length to 64 (thanks @svmehta)\n * #357 - remove internal `go-nsq` dependencies (GC reduction)\n * #330/#366 - version HTTP endpoints, simplify response format\n * #352 - `nsqd`: make `REQ` timeout limit configurable (thanks @AlphaB)\n * #340 - `nsqd`: bump perks dependency (E2E performance improvement, see 25086e4)\n\nBugs:\n\n * #384 - `nsqd`: fix statsd GC time reporting\n * #407 - `nsqd`: fix double `TOUCH` and use of client's configured msg timeout\n * #392 - `nsqadmin`: fix HTTPS warning (thanks @juliangruber)\n * #383 - `nsqlookupd`: fix race on last update timestamp\n * #385 - `nsqd`: properly handle empty `FIN`\n * #365 - `nsqd`: fix `IDENTIFY` `msg_timeout` response (thanks @visionmedia)\n * #345 - `nsq_to_file`: set proper permissions on new directories (thanks @bschwartz)\n * #338 - `nsqd`: fix windows diskqueue filenames (thanks @politician)\n\n### 0.2.28 - 2014-04-28\n\n**Upgrading from 0.2.27**: No backwards incompatible changes.  We've deprecated the `short_id`\nand `long_id` options in the `IDENTIFY` command in favor of `client_id` and `hostname`, which\nmore accurately reflect the data typically used.\n\nThis release includes a few important new features, in particular enhanced `nsqd`\nTLS support thanks to a big contribution by @chrisroberts.\n\nYou can now *require* that clients negotiate TLS with `--tls-required` and you can configure a\nclient certificate policy via `--tls-client-auth-policy` (`require` or `require-verify`):\n\n * `require` - the client must offer a certificate, otherwise rejected\n * `require-verify` - the client must offer a valid certificate according to the default CA or\n                      the chain specified by `--tls-root-ca-file`, otherwise rejected\n\nThis can be used as a form of client authentication.\n\nAdditionally, `nsqd` is now structured such that it is importable in other Go applications\nvia `github.com/nsqio/nsq/nsqd`, thanks to @kzvezdarov.\n\nFinally, thanks to @paddyforan, `nsq_to_file` can now archive *multiple* topics or\noptionally archive *all* discovered topics (by specifying no `--topic` params\nand using `--lookupd-http-address`).\n\nNew Features / Enhancements:\n\n * #334 - `nsq_to_file` can archive many topics (thanks @paddyforan)\n * #327 - add `nsqd` TLS client certificate verification policy, ability\n          to require TLS, and HTTPS support (thanks @chrisroberts)\n * #325 - make `nsqd` importable (`github.com/nsqio/nsq/nsqd`) (thanks @kzvezdarov)\n * #321 - improve `IDENTIFY` options (replace `short_id` and `long_id` with\n          `client_id` and `hostname`)\n * #319 - allow path separator in `nsq_to_file` filenames (thanks @jsocol)\n * #324 - display memory depth and total depth in `nsq_stat`\n\nBug Fixes:\n\n * nsqio/go-nsq#19 and nsqio/go-nsq#29 - fix deadlocks on `nsq.Reader` connection close/exit, this\n                                         impacts the utilities packaged with the NSQ binary\n                                         distribution such as `nsq_to_file`, `nsq_to_http`,\n                                         `nsq_to_nsq` and `nsq_tail`.\n * #329 - use heartbeat interval for write deadline\n * #321/#326 - improve benchmarking tests\n * #315/#318 - fix test data races / flakiness\n\n### 0.2.27 - 2014-02-17\n\n**Upgrading from 0.2.26**: No backwards incompatible changes.  We deprecated `--max-message-size`\nin favor of `--max-msg-size` for consistency with the rest of the flag names.\n\nIMPORTANT: this is another quick bug-fix release to address an issue in `nsqadmin` where templates\nwere incompatible with older versions of Go (pre-1.2).\n\n * #306 - fix `nsqadmin` template compatibility (and formatting)\n * #310 - fix `nsqadmin` behavior when E2E stats are disabled\n * #309 - fix `nsqadmin` `INVALID_ERROR` on node page tombstone link\n * #311/#312 - fix `nsqd` client metadata race condition and test flakiness\n * #314 - fix `nsqd` test races (run w/ `-race` and `GOMAXPROCS=4`) deprecate `--max-message-size`\n\n### 0.2.26 - 2014-02-06\n\n**Upgrading from 0.2.25**: No backwards incompatible changes.\n\nIMPORTANT: this is a quick bug-fix release to address a regression identified in `0.2.25` where\n`statsd` prefixes were broken when using the default (or any) prefix that contained a `%s` for\nautomatic host replacement.\n\n * #303 - fix `nsqd` `--statsd-prefix` when using `%s` host replacement\n\n### 0.2.25 - 2014-02-05\n\n**Upgrading from 0.2.24**: No backwards incompatible changes.\n\nThis release adds several commonly requested features.\n\nFirst, thanks to [@elubow](https://twitter.com/elubow) you can now configure your clients to sample\nthe stream they're subscribed to. To read more about the details of the implementation see #286 and\nthe original discussion in #223.  Eric also contributed an improvement to `nsq_tail` to add\nthe ability to tail the last `N` messages and exit.\n\nWe added config file support ([TOML](https://github.com/mojombo/toml/blob/master/README.md)) for\n`nsqd`, `nsqlookupd`, and `nsqadmin` - providing even more deployment flexibility. Example configs\nare in the `contrib` directory. Command line arguments override the equivalent option in the config\nfile.\n\nWe added the ability to pause a *topic* (it is already possible to pause individual *channels*).\nThis functionality stops all message flow from topic to channel for *all channels* of a topic,\nqueueing at the topic level. This enables all kinds of interesting possibilities like atomic\nchannel renames and trivial infrastructure wide operations.\n\nFinally, we now compile the static assets used by `nsqadmin` into the binary, simplifying\ndeployment.  This means that `--template-dir` is now deprecated and will be removed in a future\nrelease and you can remove the templates you previously deployed and maintained.\n\nNew Features / Enhancements:\n\n * #286 - add client `IDENTIFY` option to sample a % of messages\n * #279 - add TOML config file support to `nsqd`, `nsqlookupd`, and `nsqadmin`\n * #263 - add ability to pause a topic\n * #291 - compile templates into `nsqadmin` binary\n * #285/#288 - `nsq_tail` support for `-n #` to get recent # messages\n * #287/#294 - display client `IDENTIFY` attributes in `nsqadmin` (sample rate, TLS, compression)\n * #189/#296 - add client user agent to `nsqadmin``\n * #297 - add `nsq_to_nsq` JSON message filtering options\n\n### 0.2.24 - 2013-12-07\n\n**Upgrading from 0.2.23**: No backwards incompatible changes. However, as you'll see below, quite a\nfew command line flags to the utility apps (`nsq_to_http`, `nsq_to_file`, `nsq_to_http`) were\ndeprecated and will be removed in the next release. Please use this release to transition over to\nthe new ones.\n\nNOTE: we are now publishing additional binaries built against go1.2\n\nThe most prominent addition is the tracking of end-to-end message processing percentiles. This\nmeasures the amount of time it's taking from `PUB` to `FIN` per topic/channel. The percentiles are\nconfigurable and, because there is *some* overhead in collecting this data, it can be turned off\nentirely. Please see [the section in the docs](https://nsq.io/components/nsqd.html) for\nimplementation details.\n\nAdditionally, the utility apps received comprehensive support for all configurable reader options\n(including compression, which was previously missing). This necessitated a bit of command line flag\ncleanup, as follows:\n\n#### nsq_to_file\n\n * deprecated `--gzip-compression` in favor of `--gzip-level`\n * deprecated `--verbose` in favor of `--reader-opt=verbose`\n\n#### nsq_to_http\n\n * deprecated `--throttle-fraction` in favor of `--sample`\n * deprecated `--http-timeout-ms` in favor of `--http-timeout` (which is a\n   *duration* flag)\n * deprecated `--verbose` in favor of `--reader-opt=verbose`\n * deprecated `--max-backoff-duration` in favor of\n   `--reader-opt=max_backoff_duration=X`\n\n#### nsq_to_nsq\n\n * deprecated `--verbose` in favor of `--reader-opt=verbose`\n * deprecated `--max-backoff-duration` in favor of\n   `--reader-opt=max_backoff_duration=X`\n\nNew Features / Enhancements:\n\n * #280 - add end-to-end message processing latency metrics\n * #267 - comprehensive reader command line flags for utilities\n\n### 0.2.23 - 2013-10-21\n\n**Upgrading from 0.2.22**: No backwards incompatible changes.\n\nWe now use [godep](https://github.com/kr/godep) in order to achieve reproducible builds with pinned\ndependencies.  If you're on go1.1+ you can now just use `godep get github.com/nsqio/nsq/...`.\n\nThis release includes `nsqd` protocol compression feature negotiation.\n[Snappy](https://code.google.com/p/snappy/) and [Deflate](http://en.wikipedia.org/wiki/DEFLATE) are\nsupported, clients can choose their preferred format.\n\n`--statsd-prefix` can now be used to modify the prefix for the `statsd` keys generated by `nsqd`.\nThis is useful if you want to add datacenter prefixes or remove the default host prefix.\n\nFinally, this release includes a \"bug\" fix that reduces CPU usage for `nsqd` with many clients by\nchoosing a more reasonable default for a timer used in client output buffering.  For more details\nsee #236.\n\nNew Features / Enhancements:\n\n * #266 - use godep for reproducible builds\n * #229 - compression (Snappy/Deflate) feature negotiation\n * #241 - binary support for HTTP /mput\n * #269 - add --statsd-prefix flag\n\nBug Fixes:\n\n * #278 - fix nsqd race for client subscription cleanup (thanks @simplereach)\n * #277 - fix nsqadmin counter page\n * #275 - stop accessing simplejson internals\n * #274 - nsqd channel pause state lost during unclean restart (thanks @hailocab)\n * #236 - reduce \"idle\" CPU usage by 90% with large # of clients\n\n### 0.2.22 - 2013-08-26\n\n**Upgrading from 0.2.21**: message timestamps are now officially nanoseconds.  The protocol docs\nalways stated this however `nsqd` was actually sending seconds.  This may cause some compatibility\nissues for client libraries/clients that were taking advantage of this field.\n\nThis release also introduces support for TLS feature negotiation in `nsqd`.  Clients can optionally\nenable TLS by using the appropriate handshake via the `IDENTIFY` command. See #227.\n\nSignificant improvements were made to the HTTP publish endpoints and in flight message handling to\nreduce GC pressure and eliminate memory abuse vectors. See #242, #239, and #245.\n\nThis release also includes a new utility `nsq_to_nsq` for performant, low-latency, copying of an NSQ\ntopic over the TCP protocol.\n\nFinally, a whole suite of debug HTTP endpoints were added (and consolidated) under the\n`/debug/pprof` namespace. See #238, #248, and #252. As a result `nsqd` now supports *direct*\nprofiling via Go's `pprof` tool, ie:\n\n    $ go tool pprof --web http://ip.address:4151/debug/pprof/heap\n\nNew Features / Enhancements:\n\n * #227 - TLS feature negotiation\n * #238/#248/#252 - support for more HTTP debug endpoints\n * #256 - `nsqadmin` single node view (with GC/mem graphs)\n * #255 - `nsq_to_nsq` utility for copying a topic over TCP\n * #230 - `nsq_to_http` takes `--content-type` flag (thanks @michaelhood)\n * #228 - `nsqadmin` displays tombstoned topics in the `/nodes` list\n * #242/#239/#245 - reduced GC pressure for inflight and `/mput`\n\nBug Fixes:\n\n * #260 - `tombstone_topic_producer` action in `nsqadmin` missing node info\n * #244 - fix 64bit atomic alignment issues on 32bit platforms\n * #251 - respect configured limits for HTTP publishing\n * #247 - publish methods should not allow 0 length messages\n * #231/#259 - persist `nsqd` metadata on topic/channel changes\n * #237 - fix potential memory leaks with retained channel references\n * #232 - message timestamps are now nano\n * #228 - `nsqlookupd`/`nsqadmin` would display inactive nodes in `/nodes` list\n * #216 - fix edge cases in `nsq_to_file` that caused empty files\n\n### 0.2.21 - 2013-06-07\n\n**Upgrading from 0.2.20**: there are no backward incompatible changes in this release.\n\nThis release introduces a significant new client feature as well as a slew of consistency and\nrecovery improvements to diskqueue.\n\nFirst, we expanded the feature negotiation options for clients. There are many cases where you want\ndifferent output buffering semantics from `nsqd` to your client. You can now control both\noutput buffer size and the output buffer timeout via new fields in the `IDENTIFY` command. You can\neven disable output buffering if low latency is a priority.\n\nYou can now specify a duration between fsyncs via `--sync-timeout`. This is a far better way to\nmanage when the process fsyncs messages to disk (vs the existing `--sync-every` which is based on #\nof messages). `--sync-every` is now considered a deprecated option and will be removed in a future\nrelease.\n\nFinally, `0.2.20` introduced a significant regression in #176 where a topic would not write messages\nto its channels. It is recommended that all users running `0.2.20` upgrade to this release. For\nadditional information see #217.\n\nNew Features / Enhancements:\n\n * #214 - add --sync-timeout for time based fsync, improve when diskqueue syncs\n * #196 - client configurable output buffering\n * #190 - nsq_tail generates a random #ephemeral channel\n\nBug Fixes:\n\n * #218/#220 - expose --statsd-interval for nsqadmin to handle non 60s statsd intervals\n * #217 - fix new topic channel creation regression from #176 (thanks @elubow)\n * #212 - dont use port in nsqadmin cookies\n * #214 - dont open diskqueue writeFile with O_APPEND\n * #203/#211 - diskqueue depth accounting consistency\n * #207 - failure to write a heartbeat is fatal / reduce error log noise\n * #206 - use broadcast address for statsd prefix\n * #205 - cleanup example utils exit\n\n### 0.2.20 - 2013-05-13\n\n**Upgrading from 0.2.19**: there are no backward incompatible changes in this release.\n\nThis release adds a couple of convenient features (such as adding the ability to empty a *topic*)\nand continues our work to reduce garbage produced at runtime to relieve GC pressure in the Go\nruntime.\n\n`nsqd` now has two new flags to control the max value clients can use to set their heartbeat\ninterval as well as adjust a clients maximum RDY count. This is all set/communicated via `IDENTIFY`.\n\n`nsqadmin` now displays `nsqd` -> `nsqlookupd` connections in the \"nodes\" view. This is useful for\nvisualizing how the topology is connected as well as situations where `--broadcast-address` is being\nused incorrectly.\n\n`nsq_to_http` now has a \"host pool\" mode where upstream state will be adjusted based on\nsuccessful/failed requests and for failures, upstreams will be exponentially backed off. This is an\nincredibly useful routing mode.\n\nAs for bugs, we fixed an issue where \"fatal\" client errors were not actually being treated as fatal.\nUnder certain conditions deleting a topic would not clean up all of its files on disk. There was a\nreported issue where the `--data-path` was not writable by the process and this was only discovered\nafter message flow began. We added a writability check at startup to improve feedback. Finally.\n`deferred_count` was being sent as a counter value to statsd, it should be a gauge.\n\nNew Features / Enhancements:\n\n * #197 - nsqadmin nodes list improvements (show nsqd -> lookupd conns)\n * #192 - add golang runtime version to daemon version output\n * #183 - ability to empty a topic\n * #176 - optimizations to reduce garbage, copying, locking\n * #184 - add table headers to nsqadmin channel view (thanks @elubow)\n * #174/#186 - nsq_to_http hostpool mode and backoff control\n * #173/#187 - nsq_stat utility for command line introspection\n * #175 - add nsqd --max-rdy-count configuration option\n * #178 - add nsqd --max-heartbeat-interval configuration option\n\nBug Fixes:\n\n * #198 - fix fatal errors not actually being fatal\n * #195 - fix delete topic does not delete all diskqueue files\n * #193 - fix data race in channel requeue\n * #185 - ensure that --data-path is writable on startup\n * #182 - fix topic deletion ordering to prevent race conditions with lookupd/diskqueue\n * #179 - deferred_count as gauge for statsd\n * #173/#188/#191 - fix nsqadmin counter template error; fix nsqadmin displaying negative rates\n\n### 0.2.19 - 2013-04-11\n\n**Upgrading from 0.2.18**: there are no backward incompatible changes in this release.\n\nThis release is a small release that introduces one major client side feature and resolves one\ncritical bug.\n\n`nsqd` clients can now configure their own heartbeat interval. This is important because as of\n`0.2.18` *all* clients (including producers) received heartbeats by default. In certain cases\nreceiving a heartbeat complicated \"simple\" clients that just wanted to produce messages and not\nhandle asynchronous responses. This gives flexibility for the client to decide how it would like\nbehave.\n\nA critical bug was discovered where emptying a channel would leave client in-flight state\ninconsistent (it would not zero) which limited deliverability of messages to those clients.\n\nNew Features / Enhancements:\n\n * #167 - 'go get' compatibility\n * #158 - allow nsqd clients to configure (or disable) heartbeats\n\nBug Fixes:\n\n * #171 - fix race conditions identified testing against go 1.1 (scheduler improvements)\n * #160 - empty channel left in-flight count inconsistent (thanks @dmarkham)\n\n### 0.2.18 - 2013-02-28\n\n**Upgrading from 0.2.17**: all V2 clients of nsqd now receive heartbeats (previously only clients\nthat subscribed would receive heartbeats, excluding TCP *producers*).\n\n**Upgrading from 0.2.16**: follow the notes in the 0.2.17 changelog for upgrading from 0.2.16.\n\nBeyond the important note above regarding heartbeats this release includes `nsq_tail`, an extremely\nuseful utility application that can be used to introspect a topic on the command line. If statsd is\nenabled (and graphite in `nsqadmin`) we added the ability to retrieve rates for display in\n`nsqadmin`.\n\nWe resolved a few critical issues with data consistency in `nsqlookupd` when channels and topics are\ndeleted. First, deleting a topic would cause that producer to disappear from `nsqlookupd` for all\ntopics. Second, deleting a channel would cause that producer to disappear from the topic list in\n`nsqlookupd`.\n\nNew Features / Enhancements:\n\n * #131 - all V2 nsqd clients get heartbeats\n * #154 - nsq_tail example reader\n * #143 - display message rates in nsqadmin\n\nBug Fixes:\n\n * #148 - store tombstone data per registration in nsqlookupd\n * #153 - fix large graph formulas in nsqadmin\n * #150/#151 - fix topics disappearing from nsqlookupd when channels are deleted\n\n### 0.2.17 - 2013-02-07\n\n**Upgrading from 0.2.16**: IDENTIFY and SUB now return success responses (they previously only\nresponded to errors). The official Go and Python libraries are forwards/backwards compatible with\nthis change however 3rd party client libraries may not be.\n\n**Upgrading from 0.2.15**: in #132 deprecations in SUB were removed as well as support for the old,\nline oriented, `nsqd` metadata file format. For these reasons you should upgrade to `0.2.16` first.\n\nNew Features / Enhancements:\n\n * #119 - add TOUCH command to nsqd\n * #142 - add --broadcast-address flag to nsqd/nsqadmin (thanks @dustismo)\n * #135 - atomic MPUB\n * #133 - improved protocol fatal error handling and responses; IDENTIFY/SUB success responses\n * #118 - switch nsqadmin actions to POST and require confirmation\n * #117/#147 - nsqadmin action POST notifications\n * #122 - configurable msg size limits\n * #132 - deprecate identify in SUB and old nsqd metadata file format\n\nBug Fixes:\n\n * #144 - empty channel should clear inflight/deferred messages\n * #140 - fix MPUB protocol documentation\n * #139 - fix nsqadmin handling of legacy statsd prefixes for graphs\n * #138/#145 - fix nsqadmin action redirect handling\n * #134 - nsqd to nsqlookupd registration fixes\n * #129 - nsq_to_file gzip file versioning\n * #106 - nsqlookupd topic producer tombstones\n * #100 - sane handling of diskqueue read errors\n * #123/#125 - fix notify related exit deadlock\n\n### 0.2.16 - 2013-01-07\n\n**Upgrading from 0.2.15**: there are no backward incompatible changes in this release.\n\nHowever, this release introduces the `IDENTIFY` command (which supersedes sending\nmetadata along with `SUB`) for clients of `nsqd`.  The old functionality will be\nremoved in a future release.\n\n * #114 persist paused channels through restart\n * #121 fix typo preventing compile of bench_reader (thanks @datastream)\n * #120 fix nsqd crash when empty command is sent (thanks @michaelhood)\n * #115 nsq_to_file --filename-format --datetime-format parameter and fix\n * #101 fix topic/channel delete operations ordering\n * #98 nsqadmin fixes when not using lookupd\n * #90/#108 performance optimizations / IDENTIFY protocol support in nsqd. For\n   a single consumer of small messages (< 4k) increases throughput ~400% and\n   reduces # of allocations ~30%.\n * #105 strftime compatible datetime format\n * #103 nsq_to_http handler logging\n * #102 compatibility with Go tip\n * #99 nsq_to_file --gzip flag\n * #95 proxy graphite requests through nsqadmin\n * #93 fix nqd API response for no topics\n * #92 graph rendering options\n * #86 nsq_to_http Content-Length headers\n * #89 gopkg doc updates\n * #88 move pynsq to it's own repo\n * #81/#87 reader improvements / introduced MPUB. Fix bug for mem-queue-size < 10\n * #76 statsd/graphite support\n * #75 administrative ability to create topics and channels\n\n### 0.2.15 - 2012-10-25\n\n * #84 fix lookupd hanging on to ephemeral channels w/ no producers\n * #82 add /counter page to nsqadmin\n * #80 message size benchmark\n * #78 send Content-Length for nsq_to_http requests\n * #57/#83 documentation updates\n\n### 0.2.14 - 2012-10-19\n\n * #77 ability to pause a channel (includes bugfix for message pump/diskqueue)\n * #74 propagate all topic changes to lookupd\n * #65 create binary releases\n\n### 0.2.13 - 2012-10-15\n\n * #70 deadlined nsq_to_http outbound requests\n * #69/#72 improved nsq_to_file sync strategy\n * #58 diskqueue metadata bug and refactoring\n\n### 0.2.12 - 2012-10-10\n\n * #63 consolidated protocol V1 into V2 and fixed PUB bug\n * #61 added a makefile for simpler building\n * #55 allow topic/channel names with `.`\n * combined versions for all binaries\n\n### 0.2.7 - 0.2.11\n\n * Initial public release.\n\n## go-nsq Client Library\n\n * #264 moved **go-nsq** to its own [repository](https://github.com/nsqio/go-nsq)\n\n## pynsq Python Client Library\n\n * #88 moved **pynsq** to its own [repository](https://github.com/nsqio/pynsq)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6904296875,
          "content": "FROM golang:alpine AS build\n\nRUN apk update && apk add make gcc musl-dev\n\nRUN mkdir -p /go/src/github.com/nsqio/nsq\nCOPY    .    /go/src/github.com/nsqio/nsq\nWORKDIR      /go/src/github.com/nsqio/nsq\n\nRUN CGO_ENABLED=0 make BLDDIR=/tmp/nsq PREFIX=/opt/nsq BLDFLAGS='-ldflags=\"-s -w\"' install\n\nFROM alpine:latest\n\nEXPOSE 4150 4151 4160 4161 4170 4171\n\nRUN mkdir -p /data\nWORKDIR      /data\n\n# Optional volumes (explicitly configure with \"docker run -v ...\")\n# /data          - used by nsqd for persistent storage across restarts\n# /etc/ssl/certs - for SSL Root CA certificates from host\n\nCOPY --from=build /opt/nsq/bin/ /usr/local/bin/\nRUN ln -s /usr/local/bin/*nsq* / \\\n && ln -s /usr/local/bin/*nsq* /bin/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.3037109375,
          "content": "PREFIX=/usr/local\nBINDIR=${PREFIX}/bin\nDESTDIR=\nBLDDIR=build\nBLDFLAGS=\nEXT=\nifeq (${GOOS},windows)\n    EXT=.exe\nendif\n\nAPPS = nsqd nsqlookupd nsqadmin nsq_to_nsq nsq_to_file nsq_to_http nsq_tail nsq_stat to_nsq\nall: $(APPS)\n\n$(BLDDIR)/nsqd:        $(wildcard apps/nsqd/*.go       nsqd/*.go       nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsqlookupd:  $(wildcard apps/nsqlookupd/*.go nsqlookupd/*.go nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsqadmin:    $(wildcard apps/nsqadmin/*.go   nsqadmin/*.go nsqadmin/templates/*.go internal/*/*.go)\n$(BLDDIR)/nsq_to_nsq:  $(wildcard apps/nsq_to_nsq/*.go  nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsq_to_file: $(wildcard apps/nsq_to_file/*.go nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsq_to_http: $(wildcard apps/nsq_to_http/*.go nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsq_tail:    $(wildcard apps/nsq_tail/*.go    nsq/*.go internal/*/*.go)\n$(BLDDIR)/nsq_stat:    $(wildcard apps/nsq_stat/*.go             internal/*/*.go)\n$(BLDDIR)/to_nsq:      $(wildcard apps/to_nsq/*.go               internal/*/*.go)\n\n$(BLDDIR)/%:\n\t@mkdir -p $(dir $@)\n\tgo build ${BLDFLAGS} -o $@ ./apps/$*\n\n$(APPS): %: $(BLDDIR)/%\n\nclean:\n\trm -fr $(BLDDIR)\n\n.PHONY: install clean all\n.PHONY: $(APPS)\n\ninstall: $(APPS)\n\tinstall -m 755 -d ${DESTDIR}${BINDIR}\n\tfor APP in $^ ; do install -m 755 ${BLDDIR}/$$APP ${DESTDIR}${BINDIR}/$$APP${EXT} ; done\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4384765625,
          "content": "<p align=\"center\">\n<img align=\"left\" width=\"175\" src=\"https://nsq.io/static/img/nsq_blue.png\">\n<ul>\n<li><strong>Source</strong>: https://github.com/nsqio/nsq\n<li><strong>Issues</strong>: https://github.com/nsqio/nsq/issues\n<li><strong>Mailing List</strong>: <a href=\"https://groups.google.com/d/forum/nsq-users\">nsq-users@googlegroups.com</a>\n<li><strong>IRC</strong>: #nsq on freenode\n<li><strong>Docs</strong>: https://nsq.io\n<li><strong>Twitter</strong>: <a href=\"https://twitter.com/nsqio\">@nsqio</a>\n</ul>\n</p>\n\n[![Build Status](https://github.com/nsqio/nsq/workflows/tests/badge.svg)](https://github.com/nsqio/nsq/actions) [![GitHub release](https://img.shields.io/github/release/nsqio/nsq.svg)](https://github.com/nsqio/nsq/releases/latest) [![Coverage Status](https://coveralls.io/repos/github/nsqio/nsq/badge.svg?branch=master)](https://coveralls.io/github/nsqio/nsq?branch=master)\n\n**NSQ** is a realtime distributed messaging platform designed to operate at scale, handling\nbillions of messages per day.\n\nIt promotes *distributed* and *decentralized* topologies without single points of failure,\nenabling fault tolerance and high availability coupled with a reliable message delivery\nguarantee.  See [features & guarantees][features_guarantees].\n\nOperationally, **NSQ** is easy to configure and deploy (all parameters are specified on the command\nline and compiled binaries have no runtime dependencies). For maximum flexibility, it is agnostic to\ndata format (messages can be JSON, MsgPack, Protocol Buffers, or anything else). Official Go and\nPython libraries are available out of the box (as well as many other [client\nlibraries][client_libraries]), and if you're interested in building your own, there's a [protocol\nspec][protocol].\n\nWe publish [binary releases][installing] for Linux, Darwin, FreeBSD and Windows, as well as an official [Docker image][docker_deployment].\n\nNOTE: master is our *development* branch and may not be stable at all times.\n\n## In Production\n\n<a href=\"https://bitly.com/\"><img src=\"https://nsq.io/static/img/bitly_logo.png\" width=\"84\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.life360.com/\"><img src=\"https://nsq.io/static/img/life360_logo.png\" width=\"100\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.simplereach.com/\"><img src=\"https://nsq.io/static/img/simplereach_logo.png\" width=\"136\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://moz.com/\"><img src=\"https://nsq.io/static/img/moz_logo.png\" width=\"108\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://segment.com/\"><img src=\"https://nsq.io/static/img/segment_logo.png\" width=\"70\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://eventful.com/events\"><img src=\"https://nsq.io/static/img/eventful_logo.png\" width=\"95\" align=\"middle\"/></a><br/>\n\n<a href=\"https://www.energyhub.com/\"><img src=\"https://nsq.io/static/img/energyhub_logo.png\" width=\"99\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://project-fifo.net/\"><img src=\"https://nsq.io/static/img/project_fifo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://trendrr.com/\"><img src=\"https://nsq.io/static/img/trendrr_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://reonomy.com/\"><img src=\"https://nsq.io/static/img/reonomy_logo.png\" width=\"100\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://hw-ops.com/\"><img src=\"https://nsq.io/static/img/heavy_water.png\" width=\"50\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.getlytics.com/\"><img src=\"https://nsq.io/static/img/lytics.png\" width=\"100\" align=\"middle\"/></a><br/>\n\n<a href=\"https://mediaforge.com/\"><img src=\"https://nsq.io/static/img/rakuten.png\" width=\"100\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://wistia.com/\"><img src=\"https://nsq.io/static/img/wistia_logo.png\" width=\"140\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://stripe.com/\"><img src=\"https://nsq.io/static/img/stripe_logo.png\" width=\"96\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.shipwire.com/\"><img src=\"https://nsq.io/static/img/shipwire_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://digg.com/\"><img src=\"https://nsq.io/static/img/digg_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.scalabull.com/\"><img src=\"https://nsq.io/static/img/scalabull_logo.png\" width=\"97\" align=\"middle\"/></a><br/>\n\n<a href=\"https://www.soundest.com/\"><img src=\"https://nsq.io/static/img/soundest_logo.png\" width=\"96\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.docker.com/\"><img src=\"https://nsq.io/static/img/docker_logo.png\" width=\"100\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.getweave.com/\"><img src=\"https://nsq.io/static/img/weave_logo.png\" width=\"94\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.augury.com/\"><img src=\"https://nsq.io/static/img/augury_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.buzzfeed.com/\"><img src=\"https://nsq.io/static/img/buzzfeed_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://eztable.com/\"><img src=\"https://nsq.io/static/img/eztable_logo.png\" width=\"97\" align=\"middle\"/></a><br/>\n\n<a href=\"https://www.dotabuff.com/\"><img src=\"https://nsq.io/static/img/dotabuff_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.fastly.com/\"><img src=\"https://nsq.io/static/img/fastly_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://talky.io/\"><img src=\"https://nsq.io/static/img/talky_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://groupme.com/\"><img src=\"https://nsq.io/static/img/groupme_logo.png\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://wiredcraft.com/\"><img src=\"https://nsq.io/static/img/wiredcraft_logo.jpg\" width=\"97\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://sproutsocial.com/\"><img src=\"https://nsq.io/static/img/sproutsocial_logo.png\" width=\"90\" align=\"middle\"/></a><br/>\n\n<a href=\"https://fandom.wikia.com/\"><img src=\"https://nsq.io/static/img/fandom_logo.svg\" width=\"100\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://gitee.com/\"><img src=\"https://nsq.io/static/img/gitee_logo.svg\" width=\"140\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://bytedance.com/\"><img src=\"https://nsq.io/static/img/bytedance_logo.png\" width=\"140\" align=\"middle\"/></a>&nbsp;&nbsp;\n<a href=\"https://www.tokopedia.com/\"><img src=\"https://nsq.io/static/img/tokopedia_logo.svg\" width=\"145\" align=\"middle\"/></a><br/>\n<a href=\"https://www.kuafood.com/\"><img src=\"https://nsq.io/static/img/kuafood_logo.png\" width=\"145\" align=\"middle\"/></a><br/>\n\n## Code of Conduct\n\nHelp us keep NSQ open and inclusive. Please read and follow our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## Authors\n\nNSQ was designed and developed by Matt Reiferson ([@imsnakes][snakes_twitter]) and Jehiah Czebotar\n([@jehiah][jehiah_twitter]) but wouldn't have been possible without the support of [Bitly][bitly],\nmaintainers ([Pierce Lopez][pierce_github]), and all our [contributors][contributors].\n\nLogo created by Wolasi Konu ([@kisalow][wolasi_twitter]).\n\n[protocol]: https://nsq.io/clients/tcp_protocol_spec.html\n[installing]: https://nsq.io/deployment/installing.html\n[docker_deployment]: https://nsq.io/deployment/docker.html\n[snakes_twitter]: https://twitter.com/imsnakes\n[jehiah_twitter]: https://twitter.com/jehiah\n[bitly]: https://bitly.com\n[features_guarantees]: https://nsq.io/overview/features_and_guarantees.html\n[contributors]: https://github.com/nsqio/nsq/graphs/contributors\n[client_libraries]: https://nsq.io/clients/client_libraries.html\n[wolasi_twitter]: https://twitter.com/kisalow\n[pierce_github]: https://github.com/ploxiln\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "bench.sh",
          "type": "blob",
          "size": 1.23046875,
          "content": "#!/bin/bash\nreadonly messageSize=\"${1:-200}\"\nreadonly batchSize=\"${2:-200}\"\nreadonly memQueueSize=\"${3:-1000000}\"\nreadonly dataPath=\"${4:-}\"\nset -e\nset -u\n\necho \"# using --mem-queue-size=$memQueueSize --data-path=$dataPath --size=$messageSize --batch-size=$batchSize\"\necho \"# compiling/running nsqd\"\npushd apps/nsqd >/dev/null\ngo build\nrm -f *.dat\n./nsqd --mem-queue-size=$memQueueSize --data-path=$dataPath >/dev/null 2>&1 &\nnsqd_pid=$!\npopd >/dev/null\n\ncleanup() {\n    kill -9 $nsqd_pid\n    rm -f nsqd/*.dat\n}\ntrap cleanup INT TERM EXIT\n\nsleep 0.3\necho \"# creating topic/channel\"\ncurl --silent 'http://127.0.0.1:4151/create_topic?topic=sub_bench' >/dev/null 2>&1\ncurl --silent 'http://127.0.0.1:4151/create_channel?topic=sub_bench&channel=ch' >/dev/null 2>&1\n\necho \"# compiling bench_reader/bench_writer\"\npushd bench >/dev/null\nfor app in bench_reader bench_writer; do\n    pushd $app >/dev/null\n    go build\n    popd >/dev/null\ndone\npopd >/dev/null\n\necho -n \"PUB: \"\nbench/bench_writer/bench_writer --size=$messageSize --batch-size=$batchSize 2>&1\n\ncurl -s -o cpu.pprof http://127.0.0.1:4151/debug/pprof/profile &\npprof_pid=$!\n\necho -n \"SUB: \"\nbench/bench_reader/bench_reader --size=$messageSize --channel=ch 2>&1\n\necho \"waiting for pprof...\"\nwait $pprof_pid\n"
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage.sh",
          "type": "blob",
          "size": 1.41015625,
          "content": "#!/bin/bash\n# Generate test coverage statistics for Go packages.\n#\n# Works around the fact that `go test -coverprofile` currently does not work\n# with multiple packages, see https://code.google.com/p/go/issues/detail?id=6909\n#\n# Usage: coverage.sh [--html|--coveralls]\n#\n#     --html      Additionally create HTML report\n#     --coveralls Push coverage statistics to coveralls.io\n#\n\nset -e\n\nworkdir=.cover\nprofile=\"$workdir/cover.out\"\nmode=count\n\ngenerate_cover_data() {\n    rm -rf \"$workdir\"\n    mkdir \"$workdir\"\n\n    for pkg in \"$@\"; do\n        f=\"$workdir/$(echo $pkg | tr / -).cover\"\n        go test -covermode=\"$mode\" -coverprofile=\"$f\" \"$pkg\"\n    done\n\n    echo \"mode: $mode\" >\"$profile\"\n    grep -h -v \"^mode:\" \"$workdir\"/*.cover >>\"$profile\"\n}\n\nshow_html_report() {\n    go tool cover -html=\"$profile\" -o=\"$workdir\"/coverage.html\n}\n\nshow_csv_report() {\n    go tool cover -func=\"$profile\" -o=\"$workdir\"/coverage.csv\n}\n\npush_to_coveralls() {\n    echo \"Pushing coverage statistics to coveralls.io\"\n    # ignore failure to push - it happens\n    $GOPATH/bin/goveralls -coverprofile=\"$profile\" \\\n                          -service=github          \\\n                          -ignore=\"nsqadmin/bindata.go\" || true\n}\n\ngenerate_cover_data $(go list ./... | grep -v /vendor/)\nshow_csv_report\n\ncase \"$1\" in\n\"\")\n    ;;\n--html)\n    show_html_report ;;\n--coveralls)\n    push_to_coveralls ;;\n*)\n    echo >&2 \"error: invalid option: $1\"; exit 1 ;;\nesac\n"
        },
        {
          "name": "dist.sh",
          "type": "blob",
          "size": 1.958984375,
          "content": "#!/bin/bash\n\n# 1. commit to bump the version and update the changelog/readme\n# 2. tag that commit\n# 3. use dist.sh to produce tar.gz for all platforms\n# 4. aws s3 cp dist s3://bitly-downloads/nsq/ --recursive --exclude \"*\" --include \"nsq-1.3.0*\" --profile bitly --acl public-read\n# 5. docker manifest push nsqio/nsq:latest\n# 6. push to nsqio/master\n# 7. update the release metadata on github / upload the binaries\n# 8. update nsqio/nsqio.github.io/_posts/2014-03-01-installing.md\n# 9. send release announcement emails\n# 10. update IRC channel topic\n# 11. tweet\n\nset -e\n\nDIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nrm -rf   $DIR/dist/docker\nmkdir -p $DIR/dist/docker\n\nGOFLAGS='-ldflags=\"-s -w\"'\nversion=$(awk '/const Binary/ {print $NF}' < $DIR/internal/version/binary.go | sed 's/\"//g')\ngoversion=$(go version | awk '{print $3}')\n\necho \"... running tests\"\n./test.sh\n\nexport GO111MODULE=on\nfor target in \"linux/amd64\" \"linux/arm64\" \"darwin/amd64\" \"darwin/arm64\" \"freebsd/amd64\" \"windows/amd64\"; do\n    os=${target%/*}\n    arch=${target##*/}\n    echo \"... building v$version for $os/$arch\"\n    BUILD=$(mktemp -d ${TMPDIR:-/tmp}/nsq-XXXXX)\n    TARGET=\"nsq-$version.$os-$arch.$goversion\"\n    GOOS=$os GOARCH=$arch CGO_ENABLED=0 \\\n        make DESTDIR=$BUILD PREFIX=/$TARGET BLDFLAGS=\"$GOFLAGS\" install\n    pushd $BUILD\n    sudo chown -R 0:0 $TARGET\n    tar czvf $TARGET.tar.gz $TARGET\n    mv $TARGET.tar.gz $DIR/dist\n    popd\n    make clean\n    sudo rm -r $BUILD\ndone\n\nrnd=$(LC_ALL=C tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c10)\ndocker buildx create --use --name nsq-$rnd\ndocker buildx build .\\\n    --tag nsqio/nsq:v$version \\\n    --platform linux/amd64,linux/arm64 \\\n    --output type=image,push=true\nif [[ ! $version == *\"-\"* ]]; then\n    echo \"Tagging nsqio/nsq:v$version as the latest release\"\n    shas=$(docker manifest inspect nsqio/nsq:v$version |\\\n        grep digest | awk '{print $2}' | sed 's/[\",]//g' | sed 's/^/nsqio\\/nsq@/')\n    docker manifest create --amend nsqio/nsq:latest $shas\nfi\n"
        },
        {
          "name": "fmt.sh",
          "type": "blob",
          "size": 0.0517578125,
          "content": "#!/bin/bash\nfind . -name \"*.go\" | xargs goimports -w\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.6787109375,
          "content": "module github.com/nsqio/nsq\n\ngo 1.17\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/bitly/go-hostpool v0.1.0\n\tgithub.com/bitly/timer_metrics v1.0.0\n\tgithub.com/blang/semver v3.5.1+incompatible\n\tgithub.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b\n\tgithub.com/golang/snappy v0.0.4\n\tgithub.com/judwhite/go-svc v1.2.1\n\tgithub.com/julienschmidt/httprouter v1.3.0\n\tgithub.com/mreiferson/go-options v1.0.0\n\tgithub.com/nsqio/go-diskqueue v1.1.0\n\tgithub.com/nsqio/go-nsq v1.1.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgolang.org/x/sys v0.10.0 // indirect\n)\n\nreplace github.com/judwhite/go-svc => github.com/mreiferson/go-svc v1.2.2-0.20210815184239-7a96e00010f6\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.65234375,
          "content": "github.com/BurntSushi/toml v0.4.1 h1:GaI7EiDXDRfa8VshkTj7Fym7ha+y8/XxIgD2okUIjLw=\ngithub.com/BurntSushi/toml v0.4.1/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/bitly/go-hostpool v0.1.0 h1:XKmsF6k5el6xHG3WPJ8U0Ku/ye7njX7W81Ng7O2ioR0=\ngithub.com/bitly/go-hostpool v0.1.0/go.mod h1:4gOCgp6+NZnVqlKyZ/iBZFTAJKembaVENUpMkpg42fw=\ngithub.com/bitly/timer_metrics v1.0.0 h1:bbszVIl0vT5+/cdZx8L4KOQmM8mC/0y3EBICGSxyhCk=\ngithub.com/bitly/timer_metrics v1.0.0/go.mod h1:87z4/LSg3f++tMqZwZlsLwPuJu6xloyJ7Qm40NyEkLs=\ngithub.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=\ngithub.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b h1:AP/Y7sqYicnjGDfD5VcY4CIfh1hRXBUavxrvELjTiOE=\ngithub.com/bmizerany/perks v0.0.0-20141205001514-d9a9656a3a4b/go.mod h1:ac9efd0D1fsDb3EJvhqgXRbFx7bs2wqZ10HQPeU8U/Q=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/julienschmidt/httprouter v1.3.0 h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/mreiferson/go-options v1.0.0 h1:RMLidydGlDWpL+lQTXo0bVIf/XT2CTq7AEJMoz5/VWs=\ngithub.com/mreiferson/go-options v1.0.0/go.mod h1:zHtCks/HQvOt8ATyfwVe3JJq2PPuImzXINPRTC03+9w=\ngithub.com/mreiferson/go-svc v1.2.2-0.20210815184239-7a96e00010f6 h1:NbuBXARvEXrYZ1SzN53ZpObeuwGhl1zvs/C+kzCggrQ=\ngithub.com/mreiferson/go-svc v1.2.2-0.20210815184239-7a96e00010f6/go.mod h1:mo/P2JNX8C07ywpP9YtO2gnBgnUiFTHqtsZekJrUuTk=\ngithub.com/nsqio/go-diskqueue v1.1.0 h1:r0dJ0DMXT3+2mOq+79cvCjnhoBxyGC2S9O+OjQrpe4Q=\ngithub.com/nsqio/go-diskqueue v1.1.0/go.mod h1:INuJIxl4ayUsyoNtHL5+9MFPDfSZ0zY93hNY6vhBRsI=\ngithub.com/nsqio/go-nsq v1.1.0 h1:PQg+xxiUjA7V+TLdXw7nVrJ5Jbl3sN86EhGCQj4+FYE=\ngithub.com/nsqio/go-nsq v1.1.0/go.mod h1:vKq36oyeVXgsS5Q8YEO7WghqidAVXQlcFxzQbQTuDEY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.4.0 h1:2E4SXV/wtOkTonXsotYi4li6zVWxYlZuYNCXe9XRJyk=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20211023085530-d6a326fbbf70 h1:SeSEfdIxyvwGJliREIJhRPPXvW6sDlLT+UQ3B0hD0NA=\ngolang.org/x/sys v0.0.0-20211023085530-d6a326fbbf70/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0 h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "nsqadmin",
          "type": "tree",
          "content": null
        },
        {
          "name": "nsqd",
          "type": "tree",
          "content": null
        },
        {
          "name": "nsqlookupd",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.8154296875,
          "content": "#!/bin/sh\nset -e\n\nGOMAXPROCS=1 go test -timeout 90s ./...\n\nif [ \"$GOARCH\" = \"amd64\" ] || [ \"$GOARCH\" = \"arm64\" ]; then\n    # go test: -race is only supported on linux/amd64, linux/ppc64le,\n    # linux/arm64, freebsd/amd64, netbsd/amd64, darwin/amd64 and windows/amd64\n    GOMAXPROCS=4 go test -timeout 90s -race ./...\nfi\n\n# no tests, but a build is something\nfor dir in apps/*/ bench/*/; do\n    dir=${dir%/}\n    if grep -q '^package main$' $dir/*.go 2>/dev/null; then\n        echo \"building $dir\"\n        go build -o $dir/$(basename $dir) ./$dir\n    else\n        echo \"(skipped $dir)\"\n    fi\ndone\n\n# disable \"composite literal uses unkeyed fields\"\ngo vet -composites=false ./...\n\nFMTDIFF=\"$(find apps internal nsqd nsqlookupd -name '*.go' -exec gofmt -d '{}' ';')\"\nif [ -n \"$FMTDIFF\" ]; then\n    printf '%s\\n' \"$FMTDIFF\"\n    exit 1\nfi\n"
        }
      ]
    }
  ]
}