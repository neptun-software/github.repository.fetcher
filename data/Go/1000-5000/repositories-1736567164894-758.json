{
  "metadata": {
    "timestamp": 1736567164894,
    "page": 758,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AdguardTeam/dnsproxy",
      "stars": 2520,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.125,
          "content": "coverage:\n  status:\n    project:\n      default:\n        target: 40%\n        threshold: null\n    patch: false\n    changes: false\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0712890625,
          "content": "# Ignore everything except for explicitly allowed stuff.\n*\n!build/docker\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0166015625,
          "content": "vendor/** binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4560546875,
          "content": "# Please, DO NOT put your text editors' temporary files here.  The more are\n# added, the harder it gets to maintain and manage projects' gitignores.  Put\n# them into your global gitignore file instead.\n#\n# See https://stackoverflow.com/a/7335487/1892060.\n#\n# Only build, run, and test outputs here.  Sorted.  With negations at the\n# bottom to make sure they take effect.\n*.out\n*.test\n/bin/\nbuild\ndnsproxy\ndnsproxy.exe\nexample.crt\nexample.key\ncoverage.txt\nconfig.yaml\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0849609375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 Adguard Software Ltd\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.96484375,
          "content": "# Keep the Makefile POSIX-compliant.  We currently allow hyphens in\n# target names, but that may change in the future.\n#\n# See https://pubs.opengroup.org/onlinepubs/9799919799/utilities/make.html.\n.POSIX:\n\n# This comment is used to simplify checking local copies of the\n# Makefile.  Bump this number every time a significant change is made to\n# this Makefile.\n#\n# AdGuard-Project-Version: 9\n\n# Don't name these macros \"GO\" etc., because GNU Make apparently makes\n# them exported environment variables with the literal value of\n# \"${GO:-go}\" and so on, which is not what we need.  Use a dot in the\n# name to make sure that users don't have an environment variable with\n# the same name.\n#\n# See https://unix.stackexchange.com/q/646255/105635.\nGO.MACRO = $${GO:-go}\nVERBOSE.MACRO = $${VERBOSE:-0}\n\nBRANCH = $${BRANCH:-$$(git rev-parse --abbrev-ref HEAD)}\nDIST_DIR = build\nGOAMD64 = v1\nGOPROXY = https://proxy.golang.org|direct\nGOTOOLCHAIN = go1.23.4\nGOTELEMETRY = off\nOUT = dnsproxy\nRACE = 0\nREVISION = $${REVISION:-$$(git rev-parse --short HEAD)}\nVERSION = 0\n\nENV = env\\\n\tBRANCH=\"$(BRANCH)\"\\\n\tDIST_DIR='$(DIST_DIR)'\\\n\tGO=\"$(GO.MACRO)\"\\\n\tGOAMD64='$(GOAMD64)'\\\n\tGOPROXY='$(GOPROXY)'\\\n\tGOTELEMETRY='$(GOTELEMETRY)'\\\n\tGOTOOLCHAIN='$(GOTOOLCHAIN)'\\\n\tOUT='$(OUT)'\\\n\tPATH=\"$${PWD}/bin:$$(\"$(GO.MACRO)\" env GOPATH)/bin:$${PATH}\"\\\n\tRACE='$(RACE)'\\\n\tREVISION=\"$(REVISION)\"\\\n\tVERBOSE=\"$(VERBOSE.MACRO)\"\\\n\tVERSION=\"$(VERSION)\"\\\n\n# Keep the line above blank.\n\nENV_MISC = env\\\n\tPATH=\"$${PWD}/bin:$$(\"$(GO.MACRO)\" env GOPATH)/bin:$${PATH}\"\\\n\tVERBOSE=\"$(VERBOSE.MACRO)\"\\\n\n# Keep the line above blank.\n\n# Keep this target first, so that a naked make invocation triggers a\n# full build.\nbuild: go-deps go-build\n\ninit: ; git config core.hooksPath ./scripts/hooks\n\ntest: go-test\n\ngo-build:     ; $(ENV)          \"$(SHELL)\" ./scripts/make/go-build.sh\ngo-deps:      ; $(ENV)          \"$(SHELL)\" ./scripts/make/go-deps.sh\ngo-env:       ; $(ENV)          \"$(GO.MACRO)\" env\ngo-lint:      ; $(ENV)          \"$(SHELL)\" ./scripts/make/go-lint.sh\ngo-test:      ; $(ENV) RACE='1' \"$(SHELL)\" ./scripts/make/go-test.sh\ngo-tools:     ; $(ENV)          \"$(SHELL)\" ./scripts/make/go-tools.sh\ngo-upd-tools: ; $(ENV)          \"$(SHELL)\" ./scripts/make/go-upd-tools.sh\n\ngo-check: go-tools go-lint go-test\n\n# A quick check to make sure that all operating systems relevant to the\n# development of the project can be typechecked and built successfully.\ngo-os-check:\n\t$(ENV) GOOS='darwin'  \"$(GO.MACRO)\" vet ./...\n\t$(ENV) GOOS='freebsd' \"$(GO.MACRO)\" vet ./...\n\t$(ENV) GOOS='openbsd' \"$(GO.MACRO)\" vet ./...\n\t$(ENV) GOOS='linux'   \"$(GO.MACRO)\" vet ./...\n\t$(ENV) GOOS='windows' \"$(GO.MACRO)\" vet ./...\n\ntxt-lint: ; $(ENV) \"$(SHELL)\" ./scripts/make/txt-lint.sh\n\nmd-lint:  ; $(ENV_MISC) \"$(SHELL)\" ./scripts/make/md-lint.sh\nsh-lint:  ; $(ENV_MISC) \"$(SHELL)\" ./scripts/make/sh-lint.sh\n\nclean:   ; $(ENV) $(GO.MACRO) clean && rm -f -r '$(DIST_DIR)'\n\nrelease: clean\n\t$(ENV) \"$(SHELL)\" ./scripts/make/build-release.sh\n\ndocker: release\n\t$(ENV) \"$(SHELL)\" ./scripts/make/build-docker.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.685546875,
          "content": "[![Code Coverage](https://img.shields.io/codecov/c/github/AdguardTeam/dnsproxy/master.svg)](https://codecov.io/github/AdguardTeam/dnsproxy?branch=master)\n[![Go Report Card](https://goreportcard.com/badge/github.com/AdguardTeam/dnsproxy)](https://goreportcard.com/report/AdguardTeam/dnsproxy)\n[![Go Doc](https://godoc.org/github.com/AdguardTeam/dnsproxy?status.svg)](https://godoc.org/github.com/AdguardTeam/dnsproxy)\n\n# DNS Proxy <!-- omit in toc -->\n\nA simple DNS proxy server that supports all existing DNS protocols including\n`DNS-over-TLS`, `DNS-over-HTTPS`, `DNSCrypt`, and `DNS-over-QUIC`. Moreover,\nit can work as a `DNS-over-HTTPS`, `DNS-over-TLS` or `DNS-over-QUIC` server.\n\n- [How to install](#how-to-install)\n- [How to build](#how-to-build)\n- [Usage](#usage)\n- [Examples](#examples)\n  - [Simple options](#simple-options)\n  - [Encrypted upstreams](#encrypted-upstreams)\n  - [Encrypted DNS server](#encrypted-dns-server)\n  - [Additional features](#additional-features)\n  - [DNS64 server](#dns64-server)\n  - [Fastest addr + cache-min-ttl](#fastest-addr--cache-min-ttl)\n  - [Specifying upstreams for domains](#specifying-upstreams-for-domains)\n  - [EDNS Client Subnet](#edns-client-subnet)\n  - [Bogus NXDomain](#bogus-nxdomain)\n\n## How to install\n\nThere are several options how to install `dnsproxy`.\n\n1. Grab the binary for your device/OS from the [Releases][releases] page.\n2. Use the [official Docker image][docker].\n3. Build it yourself (see the instruction below).\n\n[releases]: https://github.com/AdguardTeam/dnsproxy/releases\n[docker]: https://hub.docker.com/r/adguard/dnsproxy\n\n## How to build\n\nYou will need Go v1.21 or later.\n\n```shell\n$ make build\n```\n\n## Usage\n\n```\nUsage:\n  dnsproxy [OPTIONS]\n\nApplication Options:\n      --config-path=               yaml configuration file. Minimal working configuration in config.yaml.dist. Options passed through command\n                                   line will override the ones from this file.\n  -o, --output=                    Path to the log file. If not set, write to stdout.\n  -c, --tls-crt=                   Path to a file with the certificate chain\n  -k, --tls-key=                   Path to a file with the private key\n      --https-server-name=         Set the Server header for the responses from the HTTPS server. (default: dnsproxy)\n      --https-userinfo=            If set, all DoH queries are required to have this basic authentication information.\n  -g, --dnscrypt-config=           Path to a file with DNSCrypt configuration. You can generate one using https://github.com/ameshkov/dnscrypt\n      --edns-addr=                 Send EDNS Client Address\n      --upstream-mode=             Defines the upstreams logic mode, possible values: load_balance, parallel, fastest_addr (default:\n                                   load_balance)\n  -l, --listen=                    Listening addresses\n  -p, --port=                      Listening ports. Zero value disables TCP and UDP listeners\n  -s, --https-port=                Listening ports for DNS-over-HTTPS\n  -t, --tls-port=                  Listening ports for DNS-over-TLS\n  -q, --quic-port=                 Listening ports for DNS-over-QUIC\n  -y, --dnscrypt-port=             Listening ports for DNSCrypt\n  -u, --upstream=                  An upstream to be used (can be specified multiple times). You can also specify path to a file with the\n                                   list of servers\n  -b, --bootstrap=                 Bootstrap DNS for DoH and DoT, can be specified multiple times (default: use system-provided)\n  -f, --fallback=                  Fallback resolvers to use when regular ones are unavailable, can be specified multiple times. You can also\n                                   specify path to a file with the list of servers\n      --private-rdns-upstream=     Private DNS upstreams to use for reverse DNS lookups of private addresses, can be specified multiple times\n      --dns64-prefix=              Prefix used to handle DNS64. If not specified, dnsproxy uses the 'Well-Known Prefix' 64:ff9b::.  Can be\n                                   specified multiple times\n      --private-subnets=           Private subnets to use for reverse DNS lookups of private addresses\n      --bogus-nxdomain=            Transform the responses containing at least a single IP that matches specified addresses and CIDRs into\n                                   NXDOMAIN.  Can be specified multiple times.\n      --hosts-files=               List of paths to the hosts files, can be specified multiple times\n      --timeout=                   Timeout for outbound DNS queries to remote upstream servers in a human-readable form (default: 10s)\n      --cache-min-ttl=             Minimum TTL value for DNS entries, in seconds. Capped at 3600. Artificially extending TTLs should only be\n                                   done with careful consideration.\n      --cache-max-ttl=             Maximum TTL value for DNS entries, in seconds.\n      --cache-size=                Cache size (in bytes). Default: 64k\n  -r, --ratelimit=                 Ratelimit (requests per second)\n      --ratelimit-subnet-len-ipv4= Ratelimit subnet length for IPv4. (default: 24)\n      --ratelimit-subnet-len-ipv6= Ratelimit subnet length for IPv6. (default: 56)\n      --udp-buf-size=              Set the size of the UDP buffer in bytes. A value <= 0 will use the system default.\n      --max-go-routines=           Set the maximum number of go routines. A zero value will not not set a maximum.\n      --tls-min-version=           Minimum TLS version, for example 1.0\n      --tls-max-version=           Maximum TLS version, for example 1.3\n      --pprof                      If present, exposes pprof information on localhost:6060.\n      --version                    Prints the program version\n  -v, --verbose                    Verbose output (optional)\n      --insecure                   Disable secure TLS certificate validation\n      --ipv6-disabled              If specified, all AAAA requests will be replied with NoError RCode and empty answer\n      --http3                      Enable HTTP/3 support\n      --cache-optimistic           If specified, optimistic DNS cache is enabled\n      --cache                      If specified, DNS cache is enabled\n      --refuse-any                 If specified, refuse ANY requests\n      --edns                       Use EDNS Client Subnet extension\n      --dns64                      If specified, dnsproxy will act as a DNS64 server\n      --use-private-rdns           If specified, use private upstreams for reverse DNS lookups of private addresses\n      --hosts-file-enabled=        If specified, use hosts files for resolving (default: true)\n\nHelp Options:\n  -h, --help                       Show this help message\n```\n\n## Examples\n\n### Simple options\n\nRuns a DNS proxy on `0.0.0.0:53` with a single upstream - Google DNS.\n```shell\n./dnsproxy -u 8.8.8.8:53\n```\n\nThe same proxy with verbose logging enabled writing it to the file `log.txt`.\n```shell\n./dnsproxy -u 8.8.8.8:53 -v -o log.txt\n```\n\nRuns a DNS proxy on `127.0.0.1:5353` with multiple upstreams.\n```shell\n./dnsproxy -l 127.0.0.1 -p 5353 -u 8.8.8.8:53 -u 1.1.1.1:53\n```\n\nListen on multiple interfaces and ports:\n```shell\n./dnsproxy -l 127.0.0.1 -l 192.168.1.10 -p 5353 -p 5354 -u 1.1.1.1\n```\n\nThe plain DNS upstream server may be specified in several ways:\n\n -  With a plain IP address:\n    ```shell\n    ./dnsproxy -l 127.0.0.1 -u 8.8.8.8:53\n    ```\n\n -  With a hostname or plain IP address and the `udp://` scheme:\n    ```shell\n    ./dnsproxy -l 127.0.0.1 -u udp://dns.google -u udp://1.1.1.1\n    ```\n\n -  With a hostname or plain IP address and the `tcp://` scheme to force using\n    TCP:\n    ```shell\n    ./dnsproxy -l 127.0.0.1 -u tcp://dns.google -u tcp://1.1.1.1\n    ```\n\n### Encrypted upstreams\n\nDNS-over-TLS upstream:\n```shell\n./dnsproxy -u tls://dns.adguard.com\n```\n\nDNS-over-HTTPS upstream with specified bootstrap DNS:\n```shell\n./dnsproxy -u https://dns.adguard.com/dns-query -b 1.1.1.1:53\n```\n\nDNS-over-QUIC upstream:\n```shell\n./dnsproxy -u quic://dns.adguard.com\n```\n\nDNS-over-HTTPS upstream with enabled HTTP/3 support (chooses it if it's faster):\n```shell\n./dnsproxy -u https://dns.google/dns-query --http3\n```\n\nDNS-over-HTTPS upstream with forced HTTP/3 (no fallback to other protocol):\n```shell\n./dnsproxy -u h3://dns.google/dns-query\n```\n\nDNSCrypt upstream ([DNS Stamp](https://dnscrypt.info/stamps) of AdGuard DNS):\n```shell\n./dnsproxy -u sdns://AQMAAAAAAAAAETk0LjE0MC4xNC4xNDo1NDQzINErR_JS3PLCu_iZEIbq95zkSV2LFsigxDIuUso_OQhzIjIuZG5zY3J5cHQuZGVmYXVsdC5uczEuYWRndWFyZC5jb20\n```\n\nDNS-over-HTTPS upstream ([DNS Stamp](https://dnscrypt.info/stamps) of Cloudflare DNS):\n```shell\n./dnsproxy -u sdns://AgcAAAAAAAAABzEuMC4wLjGgENk8mGSlIfMGXMOlIlCcKvq7AVgcrZxtjon911-ep0cg63Ul-I8NlFj4GplQGb_TTLiczclX57DvMV8Q-JdjgRgSZG5zLmNsb3VkZmxhcmUuY29tCi9kbnMtcXVlcnk\n```\n\nDNS-over-TLS upstream with two fallback servers (to be used when the main upstream is not available):\n```shell\n./dnsproxy -u tls://dns.adguard.com -f 8.8.8.8:53 -f 1.1.1.1:53\n```\n\n### Encrypted DNS server\n\nRuns a DNS-over-TLS proxy on `127.0.0.1:853`.\n```shell\n./dnsproxy -l 127.0.0.1 --tls-port=853 --tls-crt=example.crt --tls-key=example.key -u 8.8.8.8:53 -p 0\n```\n\nRuns a DNS-over-HTTPS proxy on `127.0.0.1:443`.\n```shell\n./dnsproxy -l 127.0.0.1 --https-port=443 --tls-crt=example.crt --tls-key=example.key -u 8.8.8.8:53 -p 0\n```\n\nRuns a DNS-over-HTTPS proxy on `127.0.0.1:443` with HTTP/3 support.\n```shell\n./dnsproxy -l 127.0.0.1 --https-port=443 --http3 --tls-crt=example.crt --tls-key=example.key -u 8.8.8.8:53 -p 0\n```\n\nRuns a DNS-over-QUIC proxy on `127.0.0.1:853`.\n```shell\n./dnsproxy -l 127.0.0.1 --quic-port=853 --tls-crt=example.crt --tls-key=example.key -u 8.8.8.8:53 -p 0\n```\n\nRuns a DNSCrypt proxy on `127.0.0.1:443`.\n\n```shell\n./dnsproxy -l 127.0.0.1 --dnscrypt-config=./dnscrypt-config.yaml --dnscrypt-port=443 --upstream=8.8.8.8:53 -p 0\n```\n\n> Please note that in order to run a DNSCrypt proxy, you need to obtain DNSCrypt configuration first. You can use https://github.com/ameshkov/dnscrypt command-line tool to do that with a command like this `./dnscrypt generate --provider-name=2.dnscrypt-cert.example.org --out=dnscrypt-config.yaml`\n\n### Additional features\n\nRuns a DNS proxy on `0.0.0.0:53` with rate limit set to `10 rps`, enabled DNS cache, and that refuses type=ANY requests.\n```shell\n./dnsproxy -u 8.8.8.8:53 -r 10 --cache --refuse-any\n```\n\nRuns a DNS proxy on 127.0.0.1:5353 with multiple upstreams and enable parallel queries to all configured upstream servers.\n```shell\n./dnsproxy -l 127.0.0.1 -p 5353 -u 8.8.8.8:53 -u 1.1.1.1:53 -u tls://dns.adguard.com --upstream-mode parallel\n```\n\nLoads upstreams list from a file.\n```shell\n./dnsproxy -l 127.0.0.1 -p 5353 -u ./upstreams.txt\n```\n\n### DNS64 server\n\n`dnsproxy` is capable of working as a DNS64 server.\n\n> **What is DNS64/NAT64**\n> This is a mechanism of providing IPv6 access to IPv4. Using a NAT64 gateway\n> with IPv4-IPv6 translation capability lets IPv6-only clients connect to\n> IPv4-only services via synthetic IPv6 addresses starting with a prefix that\n> routes them to the NAT64 gateway. DNS64 is a DNS service that returns AAAA\n> records with these synthetic IPv6 addresses for IPv4-only destinations\n> (with A but not AAAA records in the DNS). This lets IPv6-only clients use\n> NAT64 gateways without any other configuration.\n\nSee also [RFC 6147](https://datatracker.ietf.org/doc/html/rfc6147).\n\nEnables DNS64 with the default [Well-Known Prefix][wkp]:\n```shell\n./dnsproxy -l 127.0.0.1 -p 5353 -u 8.8.8.8 --use-private-rdns --private-rdns-upstream=127.0.0.1 --dns64\n```\n\nYou can also specify any number of custom DNS64 prefixes:\n```shell\n./dnsproxy -l 127.0.0.1 -p 5353 -u 8.8.8.8 --use-private-rdns --private-rdns-upstream=127.0.0.1 --dns64 --dns64-prefix=64:ffff:: --dns64-prefix=32:ffff::\n```\n\nNote that only the first specified prefix will be used for synthesis.\n\nPTR queries for addresses within the specified ranges or the\n[Well-Known one][wkp] could only be answered with locally appropriate data, so\ndnsproxy will route those to the local upstream servers.  Those should be\nspecified and enabled if DNS64 is enabled.\n\n[wkp]: https://datatracker.ietf.org/doc/html/rfc6052#section-2.1\n\n### Fastest addr + cache-min-ttl\n\nThis option would be useful to the users with problematic network connection.\nIn this mode, `dnsproxy` would detect the fastest IP address among all that were\nreturned, and it will return only it.\n\nAdditionally, for those with problematic network connection, it makes sense to\noverride `cache-min-ttl`.  In this case, `dnsproxy` will make sure that DNS\nresponses are cached for at least the specified amount of time.\n\nIt makes sense to run it with multiple upstream servers only.\n\nRun a DNS proxy with two upstreams, min-TTL set to 10 minutes, fastest address\ndetection is enabled:\n```\n./dnsproxy -u 8.8.8.8 -u 1.1.1.1 --cache --cache-min-ttl=600 --upstream-mode=fastest_addr\n```\n\n who run `dnsproxy` with multiple upstreams\n\n### Specifying upstreams for domains\n\nYou can specify upstreams that will be used for a specific domain(s). We use the\ndnsmasq-like syntax, decorating domains with brackets (see `--server`\n[description][server-description]).\n\n**Syntax:** `[/[domain1][/../domainN]/]upstreamString`\n\nWhere `upstreamString` is one or many upstreams separated by space (e.g.\n`1.1.1.1` or `1.1.1.1 2.2.2.2`).\n\nIf one or more domains are specified, that upstream (`upstreamString`) is used\nonly for those domains. Usually, it is used for private nameservers. For\ninstance, if you have a nameserver on your network which deals with\n`xxx.internal.local` at `192.168.0.1` then you can specify\n`[/internal.local/]192.168.0.1`, and dnsproxy will send all queries to that\nnameserver. Everything else will be sent to the default upstreams (which are\nmandatory!).\n\n1. An empty domain specification, `//` has the special meaning of \"unqualified\n   names only\", which will be used to resolve names with a single label in them,\n   or with exactly two labels in case of `DS` requests.\n2. More specific domains take precedence over less specific domains, so:\n   `--upstream=[/host.com/]1.2.3.4 --upstream=[/www.host.com/]2.3.4.5` will send\n   queries for `*.host.com` to `1.2.3.4`, except `*.www.host.com`, which will go\n   to `2.3.4.5`.\n3. The special server address `#` means, \"use the common servers\", so:\n   `--upstream=[/host.com/]1.2.3.4 --upstream=[/www.host.com/]#` will send\n   queries for `*.host.com` to `1.2.3.4`, except `*.www.host.com` which will be\n   forwarded as usual.\n4. The wildcard `*` has special meaning of \"any sub-domain\", so:\n   `--upstream=[/*.host.com/]1.2.3.4` will send queries for `*.host.com` to\n   `1.2.3.4`, but `host.com` will be forwarded to default upstreams.\n\n**Examples**\n\nSends requests for `*.local` domains to `192.168.0.1:53`. Other requests are\nsent to `8.8.8.8:53`:\n\n```sh\n./dnsproxy\\\n    -u \"8.8.8.8:53\"\\\n    -u \"[/local/]192.168.0.1:53\"\n```\n\nSends requests for `*.host.com` to `1.1.1.1:53` except for `*.maps.host.com`\nwhich are sent to `8.8.8.8:53` (along with other requests):\n\n```sh\n./dnsproxy\\\n    -u \"8.8.8.8:53\"\\\n    -u \"[/host.com/]1.1.1.1:53\"\\\n    -u \"[/maps.host.com/]#\"\n```\n\nSends requests for `*.host.com` to `1.1.1.1:53` except for `host.com` which is\nsent to `9.9.9.10:53`, and all other requests are sent to `8.8.8.8:53`:\n\n```sh\n./dnsproxy\\\n    -u \"8.8.8.8:53\"\\\n    -u \"[/host.com/]9.9.9.10:53\"\\\n    -u \"[/*.host.com/]1.1.1.1:53\"\n```\n\nSends requests for `com` (and its subdomains) to `1.2.3.4:53`, requests for\nother top-level domains to `1.1.1.1:53`, and all other requests to `8.8.8.8:53`:\n\n```sh\n./dnsproxy\\\n    -u \"8.8.8.8:53\"\\\n    -u \"[//]1.1.1.1:53\"\\\n    -u \"[/com/]1.2.3.4:53\"\n```\n\n### Specifying private rDNS upstreams\n\nYou can specify upstreams that will be used for reverse DNS requests of type PTR\nfor private addresses.  Same applies to the authority requests of types SOA and\nNS.  The set of private addresses is defined by the `--private-rdns-upstream`,\nand the set from [RFC 6303][rfc6303] is used by default.\n\nThe additional requirement to the domains specified for upstreams is to be\n`in-addr.arpa`, `ip6.arpa`, or its subdomain.  Addresses encoded in the domains\nshould also be private.\n\n**Examples**\n\nSends queries for `*.168.192.in-addr.arpa` to `192.168.1.2`, if requested by\nclient from `192.168.0.0/16` subnet.  Other queries answered with `NXDOMAIN`:\n\n```sh\n./dnsproxy\\\n    -l \"0.0.0.0\"\\\n    -u \"8.8.8.8\"\\\n    --use-private-rdns\\\n    --private-subnets=\"192.168.0.0/16\"\n    --private-rdns-upstream=\"192.168.1.2\"\\\n```\n\nSends queries for `*.in-addr.arpa` to `192.168.1.2`, `*.ip6.arpa` to `fe80::1`,\nif requested by client within the default [RFC 6303][rfc6303] subnet set.  Other\nqueries answered with `NXDOMAIN`:\n\n```sh\n./dnsproxy\\\n    -l \"0.0.0.0\"\\\n    -u 8.8.8.8\\\n    --use-private-rdns\\\n    --private-rdns-upstream=\"192.168.1.2\"\\\n    --private-rdns-upstream=\"[/ip6.arpa/]fe80::1\"\n```\n\n[rfc6303]: https://datatracker.ietf.org/doc/html/rfc6303\n[server-description]: http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq-man.html\n\n\n### EDNS Client Subnet\n\nTo enable support for EDNS Client Subnet extension you should run dnsproxy with `--edns` flag:\n\n```\n./dnsproxy -u 8.8.8.8:53 --edns\n```\n\nNow if you connect to the proxy from the Internet - it will pass through your original IP address's prefix to the upstream server.  This way the upstream server may respond with IP addresses of the servers that are located near you to minimize latency.\n\nIf you want to use EDNS CS feature when you're connecting to the proxy from a local network, you need to set `--edns-addr=PUBLIC_IP` argument:\n\n```\n./dnsproxy -u 8.8.8.8:53 --edns --edns-addr=72.72.72.72\n```\n\nNow even if your IP address is 192.168.0.1 and it's not a public IP, the proxy will pass through 72.72.72.72 to the upstream server.\n\n### Bogus NXDomain\n\nThis option is similar to dnsmasq `bogus-nxdomain`.  `dnsproxy` will transform\nresponses that contain at least a single IP address which is also specified by\nthe option into `NXDOMAIN`. Can be specified multiple times.\n\nIn the example below, we use AdGuard DNS server that returns `0.0.0.0` for\nblocked domains, and transform them to `NXDOMAIN`.\n\n```\n./dnsproxy -u 94.140.14.14:53 --bogus-nxdomain=0.0.0.0\n```\n\nCIDR ranges are supported as well.  The following will respond with `NXDOMAIN`\ninstead of responses containing any IP from `192.168.0.0`-`192.168.255.255`:\n\n```\n./dnsproxy -u 192.168.0.15:53 --bogus-nxdomain=192.168.0.0/16\n```\n\n### Basic Auth for DoH\n\nBy setting the `--https-userinfo` option you can use `dnsproxy` as a DoH proxy\nwith basic authentication requirements.\n\nFor example:\n\n```sh\n./dnsproxy\\\n    --https-port='443'\\\n    --https-userinfo='user:p4ssw0rd'\\\n    --tls-crt='…/my.crt'\\\n    --tls-key='…/my.key'\\\n    -u '94.140.14.14:53'\n```\n\nThis configuration will only allow DoH queries that contain an `Authorization`\nheader containing the BasicAuth credentials for user `user` with password\n`p4ssw0rd`.\n\nAdd `-p 0` if you also want to disable plain-DNS handling and make `dnsproxy`\nonly serve DoH with Basic Auth checking.\n"
        },
        {
          "name": "bamboo-specs",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.yaml.dist",
          "type": "blob",
          "size": 0.546875,
          "content": "# This is the yaml configuration file for dnsproxy with minimal working\n# configuration, all the options available can be seen with ./dnsproxy --help.\n# To use it within dnsproxy specify the --config-path=/<path-to-config.yaml>\n# option.  Any other command-line options specified will override the values\n# from the config file.\n---\nbootstrap:\n  - \"8.8.8.8:53\"\nlisten-addrs:\n  - \"0.0.0.0\"\nlisten-ports:\n  - 53\nmax-go-routines: 0\nratelimit: 0\nratelimit-subnet-len-ipv4: 24\nratelimit-subnet-len-ipv6: 64\nudp-buf-size: 0\nupstream:\n  - \"1.1.1.1:53\"\ntimeout: '10s'\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastip",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.44140625,
          "content": "module github.com/AdguardTeam/dnsproxy\n\ngo 1.23.4\n\nrequire (\n\tgithub.com/AdguardTeam/golibs v0.31.0\n\tgithub.com/ameshkov/dnscrypt/v2 v2.3.0\n\tgithub.com/ameshkov/dnsstamps v1.0.3\n\tgithub.com/beefsack/go-rate v0.0.0-20220214233405-116f4ca011a0\n\tgithub.com/bluele/gcache v0.0.2\n\tgithub.com/miekg/dns v1.1.62\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/quic-go/quic-go v0.48.2\n\tgithub.com/stretchr/testify v1.10.0\n\tgolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sys v0.28.0\n\tgonum.org/v1/gonum v0.15.1\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da // indirect\n\tgithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.22.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/quic-go/qpack v0.5.1 // indirect\n\tgo.uber.org/mock v0.5.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/tools v0.28.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 6.5419921875,
          "content": "github.com/AdguardTeam/golibs v0.31.0 h1:Z0oPfLTLw6iZmpE58dePy2Bel0MaX+lnDwtFEE5EmIo=\ngithub.com/AdguardTeam/golibs v0.31.0/go.mod h1:wIkZ9o2UnppeW6/YD7yJB71dYbMhiuC1Fh/I2ElW7GQ=\ngithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da h1:KjTM2ks9d14ZYCvmHS9iAKVt9AyzRSqNU1qabPih5BY=\ngithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da/go.mod h1:eHEWzANqSiWQsof+nXEI9bUVUyV6F53Fp89EuCh2EAA=\ngithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635 h1:52m0LGchQBBVqJRyYYufQuIbVqRawmubW3OFGqK1ekw=\ngithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635/go.mod h1:lmLxL+FV291OopO93Bwf9fQLQeLyt33VJRUg5VJ30us=\ngithub.com/ameshkov/dnscrypt/v2 v2.3.0 h1:pDXDF7eFa6Lw+04C0hoMh8kCAQM8NwUdFEllSP2zNLs=\ngithub.com/ameshkov/dnscrypt/v2 v2.3.0/go.mod h1:N5hDwgx2cNb4Ay7AhvOSKst+eUiOZ/vbKRO9qMpQttE=\ngithub.com/ameshkov/dnsstamps v1.0.3 h1:Srzik+J9mivH1alRACTbys2xOxs0lRH9qnTA7Y1OYVo=\ngithub.com/ameshkov/dnsstamps v1.0.3/go.mod h1:Ii3eUu73dx4Vw5O4wjzmT5+lkCwovjzaEZZ4gKyIH5A=\ngithub.com/beefsack/go-rate v0.0.0-20220214233405-116f4ca011a0 h1:0b2vaepXIfMsG++IsjHiI2p4bxALD1Y2nQKGMR5zDQM=\ngithub.com/beefsack/go-rate v0.0.0-20220214233405-116f4ca011a0/go.mod h1:6YNgTHLutezwnBvyneBbwvB8C82y3dcoOj5EQJIdGXA=\ngithub.com/bluele/gcache v0.0.2 h1:WcbfdXICg7G/DGBh1PFfcirkWOQV+v077yF1pSy3DGw=\ngithub.com/bluele/gcache v0.0.2/go.mod h1:m15KV+ECjptwSPxKhOhQoAFQVtUFjTVkc3H8o0t/fp0=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad h1:a6HEuzUHeKH6hwfN/ZoQgRgVIWFJljSWa/zetS2WTvg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/miekg/dns v1.1.62 h1:cN8OuEF1/x5Rq6Np+h1epln8OiyPWV+lROx9LxcGgIQ=\ngithub.com/miekg/dns v1.1.62/go.mod h1:mvDlcItzm+br7MToIKqkglaGhlFMHJ9DTNNWONWXbNQ=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo/v2 v2.22.1 h1:QW7tbJAUDyVDVOM5dFa7qaybo+CRfR7bemlQUN6Z8aM=\ngithub.com/onsi/ginkgo/v2 v2.22.1/go.mod h1:S6aTpoRsSq2cZOd+pssHAlKW/Q/jZt6cPrPlnj4a1xM=\ngithub.com/onsi/gomega v1.36.1 h1:bJDPBO7ibjxcbHMgSCoo4Yj18UWbKDlLwX1x9sybDcw=\ngithub.com/onsi/gomega v1.36.1/go.mod h1:PvZbdDc8J6XJEpDK4HCuRBm8a6Fzp9/DmhC9C7yFlog=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/quic-go/qpack v0.5.1 h1:giqksBPnT/HDtZ6VhtFKgoLOWmlyo9Ei6u9PqzIMbhI=\ngithub.com/quic-go/qpack v0.5.1/go.mod h1:+PC4XFrEskIVkcLzpEkbLqq1uCoxPhQuvK5rH1ZgaEg=\ngithub.com/quic-go/quic-go v0.48.2 h1:wsKXZPeGWpMpCGSWqOcqpW2wZYic/8T3aqiOID0/KWE=\ngithub.com/quic-go/quic-go v0.48.2/go.mod h1:yBgs3rWBOADpga7F+jJsb6Ybg1LSYiQvwWlLX+/6HMs=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngo.uber.org/mock v0.5.0 h1:KAMbZvZPyBPWgD14IrIQ38QCyjwpvVVV6K/bHl1IwQU=\ngo.uber.org/mock v0.5.0/go.mod h1:ge71pBPLYDk7QIi1LupWxdAykm7KIEFchiOqd6z7qMM=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67 h1:1UoZQm6f0P/ZO0w1Ri+f+ifG/gXhegadRdwBIXEFWDo=\ngolang.org/x/exp v0.0.0-20241217172543-b2144cdd0a67/go.mod h1:qj5a5QZpwLU2NLQudwIN5koi3beDhSAlJwa67PuM98c=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngonum.org/v1/gonum v0.15.1 h1:FNy7N6OUZVUaWG9pTiD+jlhdQ3lMP+/LcTpJ6+a8sQ0=\ngonum.org/v1/gonum v0.15.1/go.mod h1:eZTZuRFrzu5pcyjN5wJhcIhnUdNijYxX1T2IcrOGY0o=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.099609375,
          "content": "package main\n\nimport (\n\t\"github.com/AdguardTeam/dnsproxy/internal/cmd\"\n)\n\nfunc main() {\n\tcmd.Main()\n}\n"
        },
        {
          "name": "proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "proxyutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.5888671875,
          "content": "# This comment is used to simplify checking local copies of the staticcheck\n# configuration.  Bump this number every time a significant change is made to\n# this file.\n#\n# AdGuard-Project-Version: 1\nchecks = [\"all\"]\ninitialisms = [\n  # See https://github.com/dominikh/go-tools/blob/master/config/config.go.\n  #\n  # Do not add \"PTR\" since we use \"Ptr\" as a suffix.\n  \"inherit\"\n, \"ASN\"\n, \"DHCP\"\n, \"DNSSEC\"\n  # E.g. SentryDSN.\n, \"DSN\"\n, \"ECS\"\n, \"EDNS\"\n, \"MX\"\n, \"QUIC\"\n, \"RA\"\n, \"RRSIG\"\n, \"RTT\"\n, \"SDNS\"\n, \"SLAAC\"\n, \"SOA\"\n, \"SVCB\"\n, \"TLD\"\n, \"WHOIS\"\n]\ndot_import_whitelist = []\nhttp_status_code_whitelist = []\n"
        },
        {
          "name": "upstream",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}