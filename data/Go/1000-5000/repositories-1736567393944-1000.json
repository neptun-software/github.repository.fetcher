{
  "metadata": {
    "timestamp": 1736567393944,
    "page": 1000,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "koding/koding",
      "stars": 2130,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".braveqa",
          "type": "blob",
          "size": 3.34375,
          "content": "tests/specs/clone_stack_template.spec\ntests/specs/collaboration_create_newfile_from_IDE.spec\ntests/specs/collaboration_create_save_files.spec\ntests/specs/collaboration_delete_file.spec\ntests/specs/collaboration_endcollaboration.spec\ntests/specs/collaboration_leave_invite_leave_session.spec\ntests/specs/collaboration_logout_login_in1minute.spec\ntests/specs/collaboration_open_terminal_refresh.spec\ntests/specs/collaboration_open_video.spec\ntests/specs/collaboration_permission_deny.spec\ntests/specs/collaboration_permission_revoke_grant.spec\ntests/specs/collaboration_readonly.spec\ntests/specs/collaboration_reject_accept_invitation.spec\ntests/specs/collaboration_run_terminal.spec\ntests/specs/collaboration_saveas_check_marker.spec\ntests/specs/collaboration_start_session_invite_member.spec\ntests/specs/collaboration_switch_vms.spec\ntests/specs/collaboration_upload_file.spec\ntests/specs/collaboration_watchfile_kick_invite_user.spec\ntests/specs/createPrivateStackByAdminAndMember_enableStackCreationForMembers.spec\ntests/specs/createPrivateStackByAdmin_AddTo_RemoveFromSidebar.spec\ntests/specs/createTeam_usingAlreadyRegisteredEmail_afterClickingFreshAccount.spec\ntests/specs/create_team_with_a_new_user.spec\ntests/specs/create_team_with_existing_account.spec\ntests/specs/create_team_with_existing_user_stack_related.spec\ntests/specs/create_team_with_failures.spec\ntests/specs/disableMember_fixPermissions_destroyDisabledUsersVMs.spec\ntests/specs/disableUser_removePermanently.spec\ntests/specs/dontShareCredentials_createAnotherAndMakeTeamDefault_ReinitializeDefaultStack.spec\ntests/specs/editReinitPrivateStack_destroyVMs_deletePrivateStack.spec\ntests/specs/enable_VM_sharing_invite_Member.spec\ntests/specs/ide_compress_and_search_files.spec\ntests/specs/ide_create_duplicate_delete_folder_file.spec\ntests/specs/ide_edit_save_file.spec\ntests/specs/ide_filetree.spec\ntests/specs/ide_find.spec\ntests/specs/ide_permission.spec\ntests/specs/ide_settings.spec\ntests/specs/ide_settings_editor.spec\ntests/specs/ide_settings_terminal.spec\ntests/specs/ide_split_merge_panes.spec\ntests/specs/ide_switch_vms.spec\ntests/specs/ide_terminal.spec\ntests/specs/integrations.spec\ntests/specs/inviteAlreadyInvited_tryToLeaveTeamAsOnlyAdmin_MakeAdmin.spec\ntests/specs/inviteAsAdmin_convertToMember_inviteAlreadyMember.spec\ntests/specs/joinByInvitation_logout_tryToLoginWith_NotAllowedEmail_InvalidPassword.spec\ntests/specs/koding_utilities.spec\ntests/specs/login_to_an_existing_team_with_alwaysOn_VM.spec\ntests/specs/myaccount.spec\ntests/specs/myteam_settings.spec\ntests/specs/reinitializeStackAfterChangingContent_seeTheBuildLogs.spec\ntests/specs/send_resend_revoke_openRevoked_invitation.spec\ntests/specs/shareCredentials_updateTemplate_tryToDeleteInUseCredentialAndTemplate.spec\ntests/specs/sharedVMs_accept_remove_inviteAgain.spec\ntests/specs/sharedVMs_createAndSaveNewFile_leaveSharedVM_seeFileAsVmOwner.spec\ntests/specs/sharedVMs_reject_inviteAgain_accept_checkTerminalActions.spec\ntests/specs/sharedVMs_uploadFileByDragDrop.spec\ntests/specs/sharedVMs_viewEditExistingFiles_saveAs_seeTheUpdatesAsVmOwner.spec\ntests/specs/show_edit_remove_credentials.spec\ntests/specs/skipGuide_custom_userData_variables_readme_templatePreview.spec\ntests/specs/tryOnKoding_loginWithExistingUser_registerNewUser.spec\ntests/specs/tryToCreateStackWithoutPermission_viewStackbyMember_deleteStackTemplateWhenInUsebyOthers.spec\ntests/specs/turnVmOnAndOff.spec\n\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coffeelintignore",
          "type": "blob",
          "size": 2.482421875,
          "content": "client/app/lib/activitycontroller.coffee\nclient/app/lib/applicationmanager.coffee\nclient/app/lib/commonviews/avatarviews/avatarview.coffee\nclient/app/lib/commonviews/dnduploader.coffee\nclient/app/lib/components\nclient/app/lib/sidebar\nclient/app/lib/flux/environment/actions.coffee\nclient/app/lib/navigation/navigationmachineitem.coffee\nclient/app/lib/nostackfoundview.coffee\nclient/app/lib/providers/computecontroller.ui.coffee\nclient/app/lib/providers/computeeventlistener.coffee\nclient/app/lib/providers/computehelpers.coffee\nclient/app/lib/providers/computestatechecker.coffee\nclient/app/lib/providers/environmentsmachinestatemodal.coffee\nclient/app/lib/providers/connectcompute.coffee\nclient/app/lib/react\nclient/app/lib/routehandler.coffee\nclient/app/lib/shortcuts/accounteditshortcutsrow.coffee\nclient/app/lib/socialapicontroller.coffee\nclient/app/lib/terminal/createansicontrolcodereader.coffee\nclient/app/lib/terminal/inputhandler.coffee\nclient/app/lib/terminal/terminal.coffee\nclient/app/lib/util/expandReactivityUsernames.coffee\nclient/app/lib/util/expandUsernames.coffee\nclient/app/lib/util/nicetime.coffee\nclient/app/lib/util/showError.coffee\nclient/component-lab\nclient/home/lib/billing/components\nclient/home/lib/billing/index.coffee\nclient/home/lib/homeappview.coffee\nclient/home/lib/integrations\nclient/home/lib/myteam/components\nclient/home/lib/myteam/hometeampermissions.coffee\nclient/home/lib/myteam/hometeamsendinvites.coffee\nclient/home/lib/myteam/hometeamsettings.coffee\nclient/home/lib/myteam/hometeamteammates.coffee\nclient/home/lib/paymenthistory\nclient/home/lib/stacks\nclient/home/lib/utilities\nclient/home/lib/virtualmachines/components\nclient/home/lib/virtualmachines/homevirtualmachinesconnectedmachines.coffee\nclient/home/lib/virtualmachines/homevirtualmachinessharedmachines.coffee\nclient/home/lib/virtualmachines/homevirtualmachinesvirtualmachines.coffee\nclient/home/lib/virtualmachines/test\nclient/home/lib/welcome/components/welcomesteps/container.coffee\nclient/home/lib/welcome/components/welcomesteps/miniview.coffee\nclient/home/lib/welcome/components/welcomesteps/view.coffee\nclient/home/lib/welcome/homewelcomesteps.coffee\nclient/home/lib/welcome/index.coffee\nclient/ide/lib/collaborationcontroller.coffee\nclient/ide/lib/index.coffee\nclient/ide/lib/test/browser/index.coffee\nclient/ide/lib/views/contentsearch/idecontentsearch.coffee\nclient/mocks\nclient/stack-editor/lib/components\nclient/stack-editor/lib/editor/index.coffee\nclient/stack-editor/lib/editor/stackscriptsearchview.coffee\ndocs\nnode_modules\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": ".git\ngenerated\n"
        },
        {
          "name": ".ebextensions",
          "type": "tree",
          "content": null
        },
        {
          "name": ".env-docker-compose",
          "type": "blob",
          "size": 0.646484375,
          "content": "KONFIG_PROJECTROOT=/opt/koding\n\nKONFIG_MONGO=mongo:27017/koding\n\nKONFIG_MQ_HOST=rabbitmq\nKONFIG_MQ_APIADDRESS=rabbitmq\n\nKONFIG_REDIS_HOST=redis\nKONFIG_REDIS_PORT=6379\n\nKONFIG_MONITORINGREDIS_HOST=redis\nKONFIG_MONITORINGREDIS_PORT=6379\n\nKONFIG_POSTGRES_HOST=postgres\n\nKONFIG_KONTROL_MONGOURL=mongo:27017/koding\nKONFIG_KONTROL_POSTGRES_HOST=postgres\n\nKONFIG_KLOUD_MONGOURL=mongo:27017/koding\n\nKONFIG_SOCIALAPI_MONGO=mongo:27017/koding\nKONFIG_SOCIALAPI_MQ_HOST=rabbitmq\nKONFIG_SOCIALAPI_MQ_APIADDRESS=rabbitmq\nKONFIG_SOCIALAPI_POSTGRES_HOST=postgres\nKONFIG_SOCIALAPI_REDIS_URL=redis:6379\n\nKONFIG_VMWATCHER_MONGO=mongo:27017/koding\nKONFIG_VMWATCHER_REDIS=redis:6379\n"
        },
        {
          "name": ".env-kubernetes",
          "type": "blob",
          "size": 1.57421875,
          "content": "declare -p KONFIG_MONGO &> /dev/null || export KONFIG_MONGO=$MONGO_SERVICE_HOST:27017/koding\ndeclare -p KONFIG_KLOUD_MONGOURL &> /dev/null || export KONFIG_KLOUD_MONGOURL=$KONFIG_MONGO\ndeclare -p KONFIG_KONTROL_MONGOURL &> /dev/null || export KONFIG_KONTROL_MONGOURL=$KONFIG_MONGO\ndeclare -p KONFIG_SOCIALAPI_MONGO &> /dev/null || export KONFIG_SOCIALAPI_MONGO=$KONFIG_MONGO\n\ndeclare -p KONFIG_MQ_HOST &> /dev/null || export KONFIG_MQ_HOST=$RABBITMQ_SERVICE_HOST\ndeclare -p KONFIG_MQ_LOGIN &> /dev/null || export KONFIG_MQ_LOGIN=test\ndeclare -p KONFIG_MQ_PASSWORD &> /dev/null || export KONFIG_MQ_PASSWORD=test\ndeclare -p KONFIG_SOCIALAPI_MQ_HOST &> /dev/null || export KONFIG_SOCIALAPI_MQ_HOST=$KONFIG_MQ_HOST\ndeclare -p KONFIG_SOCIALAPI_MQ_LOGIN &> /dev/null || export KONFIG_SOCIALAPI_MQ_LOGIN=test\ndeclare -p KONFIG_SOCIALAPI_MQ_PASSWORD &> /dev/null || export KONFIG_SOCIALAPI_MQ_PASSWORD=test\n\ndeclare -p KONFIG_REDIS_HOST &> /dev/null || export KONFIG_REDIS_HOST=$REDIS_SERVICE_HOST\ndeclare -p KONFIG_REDIS_URL &> /dev/null || export KONFIG_REDIS_URL=$REDIS_SERVICE_HOST:6379\n\ndeclare -p KONFIG_POSTGRES_HOST &> /dev/null || export KONFIG_POSTGRES_HOST=$POSTGRES_SERVICE_HOST\ndeclare -p KONFIG_KLOUD_POSTGRES_HOST &> /dev/null || export KONFIG_KLOUD_POSTGRES_HOST=$KONFIG_POSTGRES_HOST\ndeclare -p KONFIG_KONTROL_POSTGRES_HOST &> /dev/null || export KONFIG_KONTROL_POSTGRES_HOST=$KONFIG_POSTGRES_HOST\ndeclare -p KONFIG_SOCIALAPI_POSTGRES_HOST &> /dev/null || export KONFIG_SOCIALAPI_POSTGRES_HOST=$KONFIG_POSTGRES_HOST\n\ndeclare -p KONFIG_WEBSERVER_PORT &> /dev/null || export KONFIG_WEBSERVER_PORT=8040\n  \n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "go/src/vendor/* linguist-vendored\nnode_modules_koding/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5849609375,
          "content": "selenium-debug.log\nnginx.conf\nnginx.pid\n*.test\n*.dump\n*.orig\n*.sublime-*\n*.swo\n*.swp\n*.etcd\n.cake_task_cache\n.DS_Store\n.idea/*\n.pyc\n.rabbitvhost\n.revision\n.vagrant\n.runningpids\n.imagesrc\n.agignore\n/.build\n/vault\n/generated\n/.logs/*\n/.deployments\n/.pydevproject\n/.revision\n/.settings\n/.coffee\n/install/docker-mongo/dump\n/broker/apps/broker/src/broker.app.src\n/broker/deps\n/broker/log\nkontrol-data-*\n/erl_crash.dump\n/go/src/socialapi/db/sql/kontrol/001-schema.sql\n/go/src/koding/kites/kloud/kloud/import.go\n\n/go/bin\n/go/bin-vagrant\n/go/build\n/go/pkg\n/go/data\n/go/binexport\n/go/src/github.com\n/go/src/socialapi/db/sql/kontrol\n/go/src/socialapi/config/*.toml\n\n/node_modules\n/node_modules/*\nnode_modules_koding/processes/src/.tmp*\nnode_modules_koding/*/node_modules/*\n/npm-debug.log\n/tags\n\n/install/BUILD_DATA\nBUILD_CONFIG.json\nABUSE_REPORT\nebin\nsftp-config.json\nv8.log\ntmp\nkontrolUUID-*\n/newrelic_agent.log\nlogs/*.log\n/embedly_cache\n/run\ndocs/koding-dep.graph\ndocs/todo.txt\ndeployment/generated_files\n\nwebsite/default.html\nwebsite/index.html\nwebsite/a/site.*\nwebsite/a/sprites/*.sprite.png\nwebsite/a/out\nwebsite/a/p\n\nclient/.happypack\nclient/.sprites\nclient/.tmp\nclient/node_modules\nclient/.config.json\nclient/.schema.json\nclient/.nightwatch.json\nclient/builder/node_modules\nclient/test/users.json\nclient/test/build\nclient/test/output\nclient/test/logs\nclient/test/globals.js\n\nsupervisor.html\n.supervisor/*\nsupervisord.conf\nclient/test/*.png\nclient/test/users-*.json\nelektron/lib\nelektron/dist\nelektron/node_modules\n\n.env.sh\n.env.json\npackage-lock.json\nwebsite/apidocs/lang\n\ncredential\n\nwebsite/a/klient\n\ndeployment/kubernetes/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2333984375,
          "content": "[submodule \"go/data/geoipdb\"]\n\tpath = go/data/geoipdb\n\turl = https://github.com/koding/geolite2-city.git\n[submodule \"docs/docs/github.com.terraform\"]\n\tpath = docs/docs/github.com.terraform\n\turl = https://github.com/hashicorp/terraform.git\n"
        },
        {
          "name": ".koding.yml",
          "type": "blob",
          "size": 0.9951171875,
          "content": "provider:\n  aws:\n    access_key: '${var.aws_access_key}'\n    secret_key: '${var.aws_secret_key}'\nresource:\n  aws_instance:\n    koding-instance:\n      root_block_device:\n        volume_size: 30\n      instance_type: c3.xlarge\n      ami: ''\n      tags:\n        Name: '${var.koding_user_username}-${var.koding_group_slug}'\n      user_data: |-\n\n        export KODING_USER=${var.koding_user_username}\n        export KODING_HOME=/home/$KODING_USER\n        export KODING_BOOTSTRAP=$KODING_HOME/koding-bootstrap.sh\n\n        curl -fsSL https://get.docker.com/ | sh\n        usermod -aG docker $KODING_USER\n\n        apt-get install -y python-pip\n        pip install docker-compose\n\n        cat > $KODING_BOOTSTRAP <<EOF\n        #!/bin/bash\n\n        git clone https://github.com/koding/docker-compose.git koding-docker-compose\n        cd koding-docker-compose\n        docker-compose up -d\n\n        EOF\n\n        chown $KODING_USER: $KODING_BOOTSTRAP\n        chmod +x $KODING_BOOTSTRAP\n\n        su - $KODING_USER -c $KODING_BOOTSTRAP\n"
        },
        {
          "name": ".logs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npm-install.sh",
          "type": "blob",
          "size": 0.087890625,
          "content": "#!/bin/bash\n\nset -o errexit\n\nscripts/patch-node-modules.sh\n\npushd client\nnpm install\npopd\n"
        },
        {
          "name": ".npm-postinstall.sh",
          "type": "blob",
          "size": 0.1123046875,
          "content": "#!/bin/bash\n\nset -o errexit\n\nscripts/reset-node-modules.sh\ntouch $(dirname $0)/node_modules/.npm-install.timestamp\n"
        },
        {
          "name": ".npm-preinstall.sh",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/bin/bash\n\nset -o errexit\n\nscripts/de-reset-node-modules.sh\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.005859375,
          "content": "6.9.4\n"
        },
        {
          "name": ".supervisor",
          "type": "tree",
          "content": null
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.0869140625,
          "content": "install git\ninstall node\ninstall go\ninstall mongodb\ninstall nginx\ninstall graphicsmagick\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.015625,
          "content": "wwww.koding.com\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.3095703125,
          "content": "# Contribute to Koding\n\nThank you for your interest in contributing to Koding. This guide details how\nto contribute to Koding in a way that is efficient for everyone.\n\n## Contributor license agreement\n\nBy submitting code as an individual you should agree to the\n[individual contributor license agreement](https://gist.github.com/koding-bot/ee8e4107e37a93eb6eb0e5205181015f).\n\n## Security vulnerability disclosure\n\nPlease report suspected security vulnerabilities in private to\n`support@koding.com`.\nPlease do **NOT** create publicly viewable issues for suspected security\nvulnerabilities.\n\n## Closing policy for issues and merge requests\n\nOut of respect for our volunteers, issues and merge requests not in line with\nthe guidelines listed in this document may be closed without notice.\n\nIssues and merge requests should be in English and contain appropriate language\nfor audiences of all ages.\n\n## I want to contribute!\n\nIf you want to contribute to Koding, but are not sure where to start, look for\n[issues with the label `Status-HelpWanted`](https://github.com/koding/koding/labels/Status-HelpWanted). These\nissues will be of reasonable size and challenge, for anyone to start\ncontributing to Koding.\n\n\nThis initial draft is inspired from Gitlab's contributing [readme](https://gitlab.com/gitlab-org/gitlab-ce/raw/master/CONTRIBUTING.md).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.3583984375,
          "content": "FROM koding/base\nMAINTAINER Sonmez Kartal <sonmez@koding.com>\n\nADD . /opt/koding\nWORKDIR /opt/koding\n\nENV KODING_VERSION=master\n\nRUN npm install --unsafe-perm && \\\n    ./configure --version $KODING_VERSION && \\\n    go/build.sh && \\\n    make -C client dist && \\\n    rm -rfv generated && \\\n    echo $KODING_VERSION > VERSION\n\nENTRYPOINT [\"scripts/bootstrap-container\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.0986328125,
          "content": "GNU AFFERO GENERAL PUBLIC LICENSE\n   Version 3, 19 November 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n        Preamble\n\nThe GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\nDevelopers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\nA secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\nThe GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\nAn older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n   TERMS AND CONDITIONS\n\n0. Definitions.\n\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\nThe Corresponding Source for a work in source code form is that\nsame work.\n\n2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n8. Termination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n13. Remote Network Interaction; Use with the GNU General Public License.\n\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n END OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\nYou should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4658203125,
          "content": "HOST?=localhost\nPORT?=8090\n\nKLIENT_DIR=$(KONFIG_PROJECTROOT)/website/a/klient/$(KONFIG_ENVIRONMENT)/latest\n\n# all: configure run\n\nconfigure:\n\t@./configure --host \"$(HOST):$(PORT)\"\n\nrun:\n\t@./run\n\nbackend: configure\n\t@./run backend\n\nservices: configure\n\t@./run services\n\nbuildservices:\n\t@./run buildservices\n\nbuildclient: configure\n\t@./run buildclient\n\nklient:\n\t@mkdir --parents $(KLIENT_DIR)\n\t@cat $(GOPATH)/bin/klient | gzip -9 > $(KLIENT_DIR)/klient.gz\n\n.PHONY: configure run\n"
        },
        {
          "name": "README.development.markdown",
          "type": "blob",
          "size": 17.3427734375,
          "content": "  * [Getting started for local deployment](#getting-started-for-local-deployment)\n      * [Prerequisites](#prerequisites)\n      * [Install dependencies](#install-dependencies)\n      * [Deploy Koding locally](#deploy-koding-locally)\n  * [Life cycle of a development task](#life-cycle-of-a-development-task)\n    * [Story types](#story-types)\n        * [Feature](#feature)\n        * [Bug](#bug)\n        * [Chore](#chore)\n        * [Epic](#epic)\n    * [Estimation](#estimation)\n    * [Starting](#starting)\n    * [Development](#development)\n      * [Making changes in submodules](#making-changes-in-submodules)\n      * [Making changes in a node module](#making-changes-in-a-node-module)\n        * [Versioning of node modules](#versioning-of-node-modules)\n      * [Implementing a Kloud provider plugin](#implementing-a-kloud-provider-plugin)\n    * [Submitting a pull request &amp; review](#submitting-a-pull-request--review)\n      * [Submitting a pull request to a submodule](#submitting-a-pull-request-to-a-submodule)\n    * [Deployment](#deployment)\n    * [Testing](#testing)\n    * [Amazon Server Management](#amazon-server-management)\n      * [VPC](#vpc)\n      * [Subnets](#subnets)\n      * [Routing Tables](#routing-tables)\n      * [Internet Gateways](#internet-gateways)\n      * [Elastic IPs](#elastic-ips)\n      * [Network ACLs](#network-acls)\n      * [Security Group](#security-group)\n\n# Getting started for local deployment\n\n### Prerequisites\n\n- [Homebrew](http://brew.sh/)\n- [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n- [Go](https://golang.org/dl/) (**Mac users**: use official installer)\n\n### Install dependencies\n\nSupported `node.js` and `npm` versions are respectively `0.10` and `2.x` - if you have already newer version installed, remember to force remove it first:\n\n```\n$ brew remove node --force\n$ brew tap homebrew/versions\n$ brew install homebrew/versions/node010\n```\n\n```\n$ brew install docker graphicsmagick mongodb nginx postgresql\n$ npm i coffee-script@1.12.2 gulp -g\n```\n\n### Deploy Koding locally\n\n```\nkoding $ npm install\nkoding $ ./configure\nkoding $ ./run buildservices force\nkoding $ ./run install\nkoding $ ./run backend\n```\n\nAccess your local deployment under `dev.koding.com:8090` (`dev.koding.com` is added to your routing table during deploy and routes to `localhost`).\n\n# Life cycle of a development task\n\nIt consists of following steps:\n\n\n- Estimation\n\n- Starting\n\n- Submitting a pull request & review\n\n- Deployment\n\n- Testing\n\n## Story types\n\n#### Feature\n\nThis type of stories are used for implementing new features. Stories\nare added to\n[features](https://www.pivotaltracker.com/n/projects/1167412) project.\n\n#### Bug\n\nThis type of story is used for broken functionalities.  Stories are\nadded to [bugs](https://www.pivotaltracker.com/n/projects/1217662)\nproject.\n\n#### Chore\n\nThis type is used for maintenance tasks that does not implement a new\nfeature or fix/improve an existing functionality.\n\n#### Epic\n\nEpic is a collection of stories. Epics are recommended to group tasks\nthat fall under a single objective.\n\n\n## Estimation\n\nFirst thing to do is setting an estimation point to story.\n\n- 0 point is used for trivial stories that can be done in like no-time\n  or already done.\n\n- Use 1 point for a story that can be completed in a day.\n\n- Use 2 points for a story that is going to take more than a day to\n  complete.\n\n- Use 3 points for a story that needs to be broken down for a more\n  fine estimation. Never start working on a 3 pointer story.\n\n## Starting\n\nStarting is the most easy part of this cycle.  If you need to switch\nto some other task or cannot proceed then you should put that task\ninto unstarted state.\n\nYou can add a goal entry to iDoneThis, preferrably by backlinking\nstory.\n\n## Development\n\n* Your code should have decent amount of comments ( not only function comments but also inline )\n* Your code should have good coverage of tests of integration and unit (+%70)\n* Your code should be formatted accordingly ( go/coffee style guides )\n* If your code/feature requires a UI test, inform QA team with steps & and feature to test at devs@koding.com\n* If your code requires a metric for alerting and/or monitoring, inform at sysops@koding.com\n* If your code requires a system/server change, do it in your code\n* if your code requires an API change, do it as backward compatible ( do not remove any API right away even if it is obsolete, do it with another deploy )\n* Feature you develop, SHOULD be testable in dev env too without needing to take any extra step\n* If your code requires a db migration, you _must_ do it with backward compatible steps\n* do not apply database changes without having anyone to review them\n* notify others at koding channel if your are gonna apply a blocking/performance degrading change\n* Use logging in your code wisely, do not output lines that make sense only for you. Know the difference between debug&info&critical&error&fatal\n* If your code requires a new Go package, open a separate PR containing only that package, all added Go packages should be reviewed too.\n* DO NOT open a PR with LOTS of code in it, after stating your intentions & architecture to the reviewer, do open small, incremental PRs\n* Do not come and say, i used a new feature of a tool we use and you all need to update your X to version Y\n* instead do\n  * test it thoroughly in your local for a while,\n  * request one of your colleagues to use that specific version along with you,\n  * update dev scripts to enforce dev env to use that version,\n  * add help text on how to update it,\n  * update wercker boxes\n  * update test boxes\n  * update elasticbeanstalk env scripts to use them\n  * deploy your changes separately from normal schedule if it can break deployments\n* Do not push any credential, authrization key, public/private key pairs,\nsecret key, password or similar sensitive information that is used in production\nsystems to main koding/koding repository. If you need to add new configuration\nparameters let `on call` person to help you with setting it to credential repo.\n\n### Making changes in submodules\n\nFollowing paths are submodules owned by koding in\n[koding/koding](http://github.com/koding/koding) repository.\n\n- client/ide\n- client/finder\n- client/landing\n\nAdd your fork of submodule as a remote in local clone.\n\n```shell\ncd $SUBMODULE_PATH\ngit remote add -f fork git@github.com/$USERNAME/$SUBMODULE_NAME.git\n```\n\nYou should checkout to most recent revision of upstream development\nbranch (it is `master` most of the time) in your local clone of a\nsubmodule before you start making changes.\n\n```shell\ngit remote update\ngit checkout $BRANCH_NAME # if necessary\ngit rebase origin/master\n```\n\n### Making changes in a node module\n\nMost notable node module in place is KD framework.\n\nTo begin working on a node module, make sure you have a local clone on\nyour development environment.  It shouldn't be in koding repository\nclone.\n\nSetup your fork's remote in local clone where changes you make will be\npushed first.\n\n```shell\ncd $MODULE_PATH\nnpm link\n```\n\n`npm link` command makes your local clone available in the module\nsearch path of `node` runtime.  It basically links module path into\nglobal node modules library directory\n(e.g. /usr/local/lib/node_modules).\n\nFirst thing to do is setting up your local clone as a node module in\nyour koding development environment.  There are a few packages that\nrequire node modules you can work with.\n\n- main (koding repository)\n- client\n- client/builder\n- client/landing\n\nYou need to change shell's working directory to one of these packages\nwhich depends on node module you're going to work on.  That is denoted\nas PACKAGE_DIR environment variable in the below command excerpt.\n\n```shell\ncd $PACKAGE_DIR\nnpm link $MODUlE_NAME\n```\n\n`npm link $MODULE_NAME` command above installs your local clone into\nparent package as a dependency which will effectively make your\nchanges in node module repository visible in your koding development\nenvironment.\n\n#### Versioning of node modules\n\nIt's necessary to keep track of versions both on `npm` registry and\nrepository tags.  Please follow patterns used in prior versions of\nthat package to name versions.\n\nModule version needs to be updated after changes are accepted.\nProcess to do this is explained in following steps:\n\n- Version in `package.json` file needs to be increased, committed and\n  pushed to upstream repository\n\n- Tag new version in `git` repository and push to upstream repository\n\n- Execute module prepublish script or `make` targets to make sure\n  module is not broken\n\n- Publish new version to module to npm registry\n\n### Implementing a Kloud provider plugin\n\nThe Kloud provider design, instructions on how to implement\ncustom provider plugin and working example live in an external\nrepository.\n\n  https://github.com/koding/kloud-provider-example\n\n## Submitting a pull request & review\n\nYou need to submit your changes as a pull request on GitHub.  A story\nis considered in progress until pull request is accepted.  Feature/bug\ntype of stories requiring a code change should not be finished\nmanually.  You can put a checkmark respective iDoneThis entry at this\npoint.\n\nOne of the following keywords needs to be added to end of pull request\ntitle.\n\n- Completes for feature stories\n\n- Fixes for bug stories\n\nExample: “Implement foo feature [completes #123456]”. #123456 is the\nstory id on Pivotal Tracker.\n\nBacklink pull request on GitHub to story on Pivotal Tracker and\nvice-versa.\n\nAttach a screenshot/screencast of visual changes into pull request to\nmake review process easier.\n\nThere are automated tests executed for open pull requests determining\nCI status of your changes.\n\n### Submitting a pull request to a submodule\n\nYou should push your commits to your own fork of a submodule then open\na pull request.\n\nIt's imperative to **update** submodule revision in main repository\nafter your submodule pull request is accepted.\n\nSubmit a pull request to main repository updating submodule revision.\n\n```shell\ncd $SUBMODULE_PATH\ngit checkout $UPSTREAM_BRANCH_NAME # it'll be `master` most of the time\ngit remote update\ngit reset --hard origin/$UPSTREAM_BRANCH_NAME\ncd $KODING_PATH\ngit add $SUBMODULE_PATH\ngit commit -m \"Update $SUBMODULE_NAME submodule\"\n```\n\nPush that commit to your main repository fork and then open a pull\nrequest.\n\n## Deployment\n\nRegular deployments are done in Tuesday and Friday, starting at 6am\nUTC.  QA team delivers finished tasks on Pivotal Tracker as first step\nto testing phase.\n\nPlease ensure that your pull requests are **merged** before\ndeployments start.  If this means you need to _nudge_ a pull request\nreviewer because your pull request is pending merge, do so!\n\n## Testing\n\nQA team tests delivered stories on\n[sandbox](https://sandbox.koding.com) and\n[latest](https://latest.koding.com) environments.  If a story does not\nsatisfy requirements then it will be rejected.  You need to restart\nthat story when you begin working on it again and follow same steps.\n\n\n## Amazon Server Management\n\n### VPC\n\nAmazon Virtual Private Cloud (Amazon VPC) lets you provision a logically\nisolated section of the Amazon Web Services (AWS) Cloud where you can launch AWS\nresources in a virtual network that you define. You have complete control over\nyour virtual networking environment, including selection of your own IP address\nrange, creation of subnets, and configuration of route tables and network\ngateways.\n\n* Newly created VPCs should start with \"vpc\" prefix\n\n\n\n### Subnets\n\nSubnets are logical partitions within VPC, they are limited by their\nAvailabilty Zones\n\n* All subnets should start with \"subnet\" prefix. Should be\nfollowed by region suffix then should have vpc name eg:subnet-1a-koding-eb-\ndeployment-prod :subnet-<region>-<vpc_name>\n\n### Routing Tables\n\nA route table contains a set of rules, called routes, that are used to determine\nwhere network traffic is directed.\n\n* They should start with \"rtb\" prefix, followed by vpc name\neg: rtb-koding-eb-deployment-prod :rtb-<vpc_name>\n\n* Do not assign any subnets to main route tables, for security reasons\n\n### Internet Gateways\n\nAn Internet gateway is a horizontally scaled, redundant, and highly available\nVPC component that allows communication between instances in your VPC and the\nInternet. It therefore imposes no availability risks or bandwidth constraints on\nyour network traffic. An Internet gateway serves two purposes: to provide a\ntarget in your VPC route tables for Internet-routable traffic, and to perform\nnetwork address translation (NAT) for instances that have been assigned public\nIP addresses.\n\nTo enable access to or from the Internet for instances in a VPC subnet, you must\nattach an Internet gateway to your VPC, ensure that your subnet's route table\npoints to the Internet gateway, ensure that instances in your subnet have public\nIP addresses or Elastic IP addresses, and ensure that your network access\ncontrol and security group rules allow the relevant traffic to flow to and from\nyour instance.\n\n* They should start with \"igt\", followed by vpc name\neg: igw-koding-eb-deployment-prod : igw-<vpc_name>\n\n* they should be attached to one VPC\n\n### Elastic IPs\n\nAn Elastic IP address (EIP) is a static IP address designed for dynamic cloud\ncomputing. With an EIP, you can mask the failure of an instance or software by\nrapidly remapping the address to another instance in your account. Your EIP is\nassociated with your AWS account, not a particular instance, and it remains\nassociated with your account until you choose to explicitly release it.\n\n* They should be attached to one instance\n\n### Network ACLs\n\nA network access control list (ACL) is an optional layer of security that acts\nas a firewall for controlling traffic in and out of a subnet. You might set up\nnetwork ACLs with rules similar to your security groups in order to add an\nadditional layer of security to your VPC\n\n* They should start with \"acl\", followed by vpc name\neg: acl-koding-eb-deployment-prod :acl-<vpc_name>\n\n* They should be attached to one at least one subnet\n\n### Security Group\n\nA security group acts as a virtual firewall for your instance to control inbound\nand outbound traffic. When you launch an instance in a VPC, you can assign the\ninstance to up to five security groups. Security groups act at the instance\nlevel, not the subnet level. Therefore, each instance in a subnet in your VPC\ncould be assigned to a different set of security groups. If you don't specify a\nparticular group at launch time, the instance is automatically assigned to the\ndefault security group for the VPC.\n\n* You can create up to 100 security groups per VPC. You can add up to 50 rules to\neach security group. If you need to apply more than 50 rules to an instance, you\ncan associate up to 5 security groups with each network interface. For more\ninformation about network interfaces, see Elastic Network Interfaces (ENI).\n\n* You can specify allow rules, but not deny rules.\n\n* You can specify separate rules for inbound and outbound traffic.\n\n* By default, no inbound traffic is allowed until you add inbound rules to the\nsecurity group.\n\n* By default, all outbound traffic is allowed until you add outbound rules to the\ngroup (and then, you specify the outbound traffic that's allowed).\n\n* Responses to allowed inbound traffic are allowed to flow outbound regardless of\noutbound rules, and vice versa (security groups are therefore stateful).\n\n* Instances associated with a security group can't talk to each other unless you\nadd rules allowing it (exception: the default security group has these rules by\ndefault).\n\n* After you launch an instance, you can change which security groups the instance\nis associated with.\n\n* VPC automatically comes with a default security group. Each EC2 instance\nthat you launch in your VPC is automatically associated with the default\nsecurity group if you don't specify a different security group when you launch\nthe instance.\n\n* You can change the rules for the default security group. But dont do it\n\n* You can't delete a default security group.\n\n* All security groups should tagged with a proper type\nTypes are ssh, loadbalancer, personal, eb, other, default\n\n* `ssh` types security groups are automatically populated security groups from\n`personal` tagged security groups\n\n* `loadbalancer` typed security groups should only have 2 ingress rules, 80 & 443,\nthey cant have more than 2\n\n* `loadbalancer` typed security groups should only have 2 egress rules, 80, 81,\nthey cant have more than 2\n\n*  `personal` typed security groups are special security groups for developers\nwith SSH access, you can create as many as security groups with `type=personal`\ntag, should only have 2 ingress 1 egress rules at most.\n\n* `eb` typed security groups are for Elastic Beanstalk environments and their\ninternal & external communications, they can be reached from their respective\nLoadBalancer security groups. Latest EB SG has also production ELB SG because we\nare using latest environemnt for 0 downtime deployment/switch\n\n* `eb` should include, loadbalancer sg, default sg, and itself (for internal comm)\n\n* `other` typed security groups can only have 22, 80 and 443 as ingress rule,\negress is limited with one rule.\n\n* `default` typed security groups are created when a vpc is created, do no use\nthem for your very own purposes, you can not delete them either.\n\n* Security groups should start with `sg` prefix, should be followed by their\nrespective vpc name, resource name and type\n\neg: sg-koding-eb-deployment-prod--koding-prod-eb: sg-<vpc_name>--<resource_name>-<type>\n\nThings to watch out while creating machines;\n* Assing proper security groups\n* Do no create random security groups\n* Name security groups properly\n\n\n# Project Management\n[Jira](https://koding.atlassian.net/)\n"
        },
        {
          "name": "README.gitlab.markdown",
          "type": "blob",
          "size": 7.9970703125,
          "content": "# Koding & GitLab\n\nThis document will guide you through installing and configuring Koding with\nGitLab.\n\nFirst of all, to be able to use Koding and GitLab together you will need public\naccess to your server. This allows you to use single sign-on from GitLab to\nKoding and using vms from cloud providers like AWS. Koding has a registry for\nVMs, called Kontrol and it runs on the same server as Koding itself, VMs from\ncloud providers register themselves to Kontrol via the agent that we put into\nprovisioned VMs. This agent is called Klient and it provides Koding to access\nand manage the target machine.\n\nKontrol and Klient are based on another technology called\n[Kite](github.com/koding/kite), that we have written at Koding. Which is a\nmicroservice framework that allows you to develop microservices easily.\n\n\n## Requirements\n\n### Hardware\n\nMinimum requirements are;\n\n  - 2 cores CPU\n  - 3G RAM\n  - 10G Storage\n\nIf you plan to use AWS to install Koding it is recommended that you use at\nleast a `c3.xlarge` instance.\n\n### Software\n\n  - [git](https://git-scm.com)\n  - [docker](https://www.docker.com)\n  - [docker-compose](https://www.docker.com/products/docker-compose)\n\nKoding can run on most of the UNIX based operating systems, since it's shipped\nas containerized with Docker support, it can work on any operating system that\nsupports Docker.\n\nRequired services are;\n\n  - PostgreSQL # Kontrol and Service DB provider\n  - MongoDB    # Main DB provider the application\n  - Redis      # In memory DB used by both application and services\n  - RabbitMQ   # Message Queue for both application and services\n\nwhich are also provided as a Docker container by Koding.\n\n\n## Getting Started with Development Versions\n\n\n### Koding\n\nYou can run `docker-compose` environment for developing koding by\nexecuting commands in the following snippet.\n\n```bash\ngit clone https://github.com/koding/koding.git\ncd koding\ndocker-compose up\n```\n\nThis should start koding on `localhost:8090`.\n\nBy default there is no team exists in Koding DB. You'll need to create a team\ncalled `gitlab` which is the default team name for GitLab integration in the\nconfiguration. To make things in order it's recommended to create the `gitlab`\nteam first thing after setting up Koding.\n\n\n### GitLab\n\nTo install GitLab to your environment for development purposes it's recommended\nto use GitLab Development Kit which you can get it from\n[here](https://gitlab.com/gitlab-org/gitlab-development-kit).\n\nAfter all those steps, gitlab should be running on `localhost:3000`\n\n\n## Integration\n\nIntegration includes following components;\n\n  - Single Sign On with OAuth from GitLab to Koding\n  - System Hook integration for handling GitLab events on Koding\n    (`project_created`, `user_joined` etc.)\n  - Service endpoints for importing/executing stacks from GitLab to Koding\n    (`Run/Try on IDE (Koding)` buttons on GitLab Projects, Issues, MRs)\n\nAs it's pointed out before, you will need public access to this machine that\nyou've installed Koding and GitLab on. Better to use a domain but a static IP\nis also fine.\n\nFor IP based installation you can use [xip.io](https://xip.io) service which is\nfree and provides DNS resolution to IP based requests like following;\n\n  - 127.0.0.1.xip.io              -> resolves to 127.0.0.1\n  - foo.bar.baz.127.0.0.1.xip.io  -> resolves to 127.0.0.1\n  - and so on...\n\nAs Koding needs subdomains for team names; `foo.127.0.0.1.xip.io` requests for\na running koding instance on `127.0.0.1` server will be handled as `foo` team\nrequests.\n\n\n### GitLab Side\n\nYou need to enable Koding integration from Settings under Admin Area. To do\nthat login with an Admin account and do followings;\n\n - open [http://127.0.0.1:3000/admin/application_settings](http://127.0.0.1:3000/admin/application_settings)\n - scroll to bottom of the page until Koding section\n - check `Enable Koding` checkbox\n - provide GitLab team page for running Koding instance as `Koding URL`*\n\n* For `Koding URL` you need to provide the gitlab integration enabled team on\nyour Koding installation. Team called `gitlab` has integration on Koding out\nof the box, so if you didn't change anything your team on Koding should be\n`gitlab`.\n\nSo, if your Koding is running on `http://1.2.3.4.xip.io:8090` your URL needs\nto be `http://gitlab.1.2.3.4.xip.io:8090`. You need to provide the same host\nwith your Koding installation here.\n\n\n#### Registering Koding for OAuth integration\n\nWe need `Application ID` and `Secret` to enable login to Koding via GitLab\nfeature and to do that you need to register running Koding as a new application\nto your running GitLab application. Follow\n[these](http://docs.gitlab.com/ce/integration/oauth_provider.html) steps to\nenable this integration.\n\nRedirect URI should be `http://gitlab.127.0.0.1:8090/-/oauth/gitlab/callback`\nwhich again you need to _replace `127.0.0.1` with your instance public IP._\n\nTake a copy of `Application ID` and `Secret` that is generated by the GitLab\napplication, we will need those on _Koding Part_ of this guide.\n\n\n#### Registering system hooks to Koding (optional)\n\nKoding can take actions based on the events generated by GitLab application.\nThis feature is still in progress and only following events are processed by\nKoding at the moment;\n\n  - user_create\n  - user_destroy\n\nAll system events are handled but not implemented on Koding side.\n\nTo enable this feature you need to provide a `URL` and a `Secret Token` to your\nGitLab application. Open your admin area on your GitLab app from\n[http://127.0.0.1:3000/admin/hooks](http://127.0.0.1:3000/admin/hooks)\nand provide `URL` as `http://gitlab.127.0.0.1:8090/-/api/gitlab` which is the\nendpoint to handle GitLab events on Koding side. Provide a `Secret Token` and\nkeep a copy of it, we will need it on _Koding Part_ of this guide.\n\n_(replace `127.0.0.1` with your instance public IP)_\n\n\n### Koding Part\n\nIf you followed the steps in GitLab part we should have followings to enable\nKoding part integrations;\n\n  - `Application ID` and `Secret` for OAuth integration\n  - `Secret Token` for system hook integration\n  - Public address of running GitLab instance\n\n\n#### Start Koding with GitLab URL\n\nNow we need to configure Koding with all this information to get things ready.\nIf it's already running please stop koding first.\n\n##### From command-line\n\nReplace followings with the ones you got from GitLab part of this guide;\n\n```bash\ncd koding\ndocker-compose run                              \\\n  --service-ports backend                       \\\n  /opt/koding/scripts/bootstrap-container build \\\n  --host=**YOUR_IP**.xip.io                     \\\n  --gitlabHost=**GITLAB_IP**                    \\\n  --gitlabPort=**GITLAB_PORT**                  \\\n  --gitlabToken=**SECRET_TOKEN**                \\\n  --gitlabAppId=**APPLICATION_ID**              \\\n  --gitlabAppSecret=**SECRET**\n```\n\n##### By updating configuration\n\nAlternatively you can update `gitlab` section on\n`config/credentials.default.coffee` like following;\n\n```\ngitlab =\n  host: '**GITLAB_IP**'\n  port: '**GITLAB_PORT**'\n  applicationId: '**APPLICATION_ID**'\n  applicationSecret: '**SECRET**'\n  team: 'gitlab'\n  redirectUri: ''\n  systemHookToken: '**SECRET_TOKEN**'\n  hooksEnabled: yes\n```\n\nand start by only providing the `host`;\n\n```bash\ncd koding\ndocker-compose run                              \\\n  --service-ports backend                       \\\n  /opt/koding/scripts/bootstrap-container build \\\n  --host=**YOUR_IP**.xip.io                     \\\n```\n\n#### Enable Single Sign On\n\nOnce you restarted your Koding and logged in with your username and password\nyou need to activate oauth authentication for your user. To do that\n\n - Navigate to Dashboard on Koding from;\n   `http://gitlab.**YOUR_IP**.xip.io:8090/Home/my-account`\n - Scroll down to Integrations section\n - Click on toggle to turn On integration in GitLab integration section\n\nThis will redirect you to your GitLab instance and will ask your permission (\nif you are not logged in to GitLab at this point you will be redirected after\nlogin) once you accept you will be redirected to your Koding instance.\n\nFrom now on you can login by using `SIGN IN WITH GITLAB` button on your Login\nscreen in your Koding instance.\n\n"
        },
        {
          "name": "README.kdonkd.markdown",
          "type": "blob",
          "size": 2.2490234375,
          "content": "# Connect Koding on Koding\n\nWe’ve moved development of koding.com from our local machines to team on koding.com. It’s a big undertaking, but it’s necessary to do it to understand the day to day experience of using teams on koding.com. \n\nYou should have been invited to [team.koding.com](https://team.koding.com) already. Please do the following:\n\n* [Build your stack](http://take.ms/GxI9N) on https://team.koding.com and follow instructions there to get a working version of koding on your VM.\n* [Add your team](https://monosnap.com/file/vq1fJe8508BZp5zTb7CBNeK2zUnwJo) `5... foo.dev.koding.com` if you want to develop teams product. The first part, `5...` is the ip address of your VM. The second part `foo` is the name of the team.\n\n## Remote workflow\n\n* Pull latest code from upstream: `git pull --rebase <upstream> <branch>`\n* Update any changed config: `./configure`\n* Start/rebuild required services, i.e. databases: `./run buildservices`\n* Start the workers: `./run backend`\n\n## kd\n\nTo connect your Koding VMs to your local IDE, we’ll use a command line program called: `kd` To get started, login to [team.koding.com](https://team.koding.com/Channels/team) and click on http://take.ms/rB1Jm to get link to download kd.\n\nCurrently only OSX and Linux are supported. Once it's done installing, `kd` should be available in your path and you can do `kd -h` to see list of help topics.\n\n### Common commands\n\n* `kd help <command>` to see help for that command.\n* `kd list` to see list of your vms.\n* `kd mount <alias>:/home/<username>/koding <local folder>` to mount your remote koding to your local folder. Remote path needs to be a full path to the folder on your VM.\n* `kd ssh <machine name>` to ssh into the machine.\n* `kd run <command>` to run command on remote machine when inside mounted folder.\n* Alias common commands like `git` to `kd run`, ie `alias git=\"kd run git\"`.\n\n## Known limitations\n\n* Recursive file read commands like `find -r`, or `ag` will take a long time to complete due to network roundtrip. Use `kd run` instead.\n* In case of fire unmount and mount your machine. In worst case scenarios, do `sudo kd restart` to restart kd and `diskutil unmount <local path>` to unmount manually.\n* This is a BETA software, so here be bugs. Open a bug report and they'll all be fixed.\n"
        },
        {
          "name": "README.lp.markdown",
          "type": "blob",
          "size": 5.9287109375,
          "content": "Local Provisioning devenv\n=========================\n\n# Flow overview\n\n![flow](http://i.imgur.com/6jqrNs2.png)\n\n# Prerequisites\n\n## User, team and klient\n\nA user and a team are going to be required, if you don't have any in your MongoDB created them first.\n\nUsername and team are used with kloudctl when asking kloud to perform team actions, like apply, auth or plan.\n\n## ./run backend\n\n## Building kloudctl\n\nInstall the kloudctl tool with:\n\n```\n$ go install koding/kites/kloud/kloudctl\n```\n\nCommands going to be used:\n\n- [kloudctl kontrol](./go/src/kites/kloud/kloudctl/README.md#kontrol)\n- [kloudctl team](./go/src/kites/kloud/kloudctl/README.md#team)\n- [kloudctl vagrant](./go/src/kites/kloud/kloudctl/README.md#vagrant)\n- [route53](./go/src/kites/kloud/scripts/route53/README.md)\n\n## Building klient\n\nBuild steps:\n\n```bash\n$ cd go/src/koding/klient\n$ cat >Makefile.dev <<EOF\nall:\n        @echo \"\\033[0;32m==> Building all packages\\033[0m\"\n        @go build -v -ldflags \"-X koding/klient/protocol.Version 1.0.99 -X koding/klient/protocol.Environment development\"\n\n.PHONY: all\nEOF\n$ make -f Makefile.dev\n```\n\nGenerate a kite.key and Start the client:\n\n```bash\n$ kloudctl kontrol key -u rafal -o kite.key\n$ KITE_HOME=$PWD ./klient -kontrol-url http://koding-${USER}.ngrok.com/kontrol/kite -tunnel-server tunnel.dev.koding.io:8081\n...\n2016-02-04 15:42:39 [klient] INFO     Using version: '1.0.99' querystring: 'da38a55e-5422-4ab4-a319-096cd1e88866'\n```\n\nVerify the klient is registered to your kontrol:\n\n```bash\n$ kloudctl kontrol list | jq\n[\n...\n  {\n    \"name\": \"klient\",\n    \"username\": \"rafal\",\n    \"id\": \"da38a55e-5422-4ab4-a319-096cd1e88866\",\n    \"environment\": \"development\",\n    \"region\": \"public-region\",\n    \"version\": \"1.0.99\",\n    \"hostname\": \"rjeczalik-osxpro.local\",\n    \"url\": \"http://rafal.tunnel.dev.koding.io:8081/klient/kite\",\n    \"concurrent\": true,\n    \"kontrolURL\": \"http://127.0.0.1:3000/kite\",\n    \"kontrolUser\": \"koding\",\n    \"authType\": \"token\"\n  },\n...\n]\n```\n\nVerify the klient serves vagrant requests:\n\n```bash\n$ kloudctl vagrant version -host da38a55e-5422-4ab4-a319-096cd1e88866\n1.7.4\n```\n\n**NOTE**: Route53 takes a while to propagate DNS entries, if you want to see the progress pass `-debug` flag to the client.\n\n## (optionally) Building tunnelserver\n\nIf for whatever reason `tunnel.dev.koding.io:8081` is down or you want to use your own for development, build it with:\n\n```bash\n$ go install koding/kites/cmd/tunnelserver\n```\n\nAnd start it with:\n\n```\n$ cat >tunnelserver.sh <<EOF\n#!/bin/bash\n\nexport DOMAIN=\"mytunnel.dev.koding.io\" \\\n\tPUBLIC_IP=\"104.155.84.135\" \\\n\tPORT=\"8081\" \\\n\tKITE_KONTROL_URL=\"http://koding-rjeczalik.ngrok.com/kontrol/kite\"\n\n$HOME/bin/tunnelserver \\\n        -basevirtualhost \"${DOMAIN}:${PORT}\" \\\n        -hostedzone dev.koding.io \\\n        -accesskey \"${AWS_ACCESS_KEY}\" \\\n        -secretkey \"${AWS_SECRET_KEY} \\\\\n        -serveraddr \"${PUBLIC_IP}:${PORT}\" \\\n        -region \"unknown\" -port \"${PORT}\" \\\n        -environment development\nEOF\n$ chmod +x tunnelserver.sh\n```\n```bash\n$ ./tunnelserver.sh\n2016-02-04 15:01:07 [tunnelserver] INFO     Dialing 'kontrol' kite: http://koding-rjeczalik.ngrok.com/kontrol/kite\n2016-02-04 15:01:07 [tunnelserver] INFO     Connected to Kontrol\n2016-02-04 15:01:07 [tunnelserver] INFO     Registering to kontrol with URL: http://104.155.84.135:8081/tunnelkite-0.0.1/kite\n2016-02-04 15:01:08 [tunnelserver] INFO     Registered to kontrol with URL: http://104.155.84.135:8081/tunnelkite-0.0.1/kite and Kite query: /koding/development/tunnelkite/0.0.1/unknown/koding-vm/3813c4bc-33a2-4219-b7e7-fc31d3237148\n2016-02-04 15:01:08 [tunnelserver] INFO     New listening: 0.0.0.0:8081\n2016-02-04 15:01:08 [tunnelserver] INFO     Serving...\n```\n\n# Getting started\n\n### Creating vagrant stack\n\nPrepare Vagrant template:\n\n```bash\n$ export TEAM_USER=rafal\n$ cat >vagrant.json <<EOF\n{\n    \"resource\": {\n        \"vagrantkite_build\": {\n            \"example_1\": {\n                \"cpus\": 2,\n                \"memory\": 2048,\n                \"customScript\": \"sudo apt-get install sl -y\\ntouch /tmp/${var.koding_user_username}.txt\",\n\n                \"registerURL\": \"http://example1.${TEAM_USER}.tunnel.dev.koding.io:8081/klient/kite\",\n                \"kontrolURL\": \"http://koding-${USER}.ngrok.com/kontrol/kite\",\n                \"klientURL\": \"https://s3-eu-west-1.amazonaws.com/kodingdev-klient/klient_0.1.99_development_amd64.deb\"\n            }\n        }\n    }\n}\nEOF\n```\n\nThe `registerURL`, `kontrolURL` and `klientURL` fields are not going to be needed in production, as those value will be default ones.\n\nCreate jComputeStack for your existing team:\n\n```bash\n$ cat vagrant.json | kloudctl team init -u rafal -team foobar -klient da38a55e-5422-4ab4-a319-096cd1e88866 > stack.json\n```\n\nVerify the kloud can connect to your klient:\n\n```bash\n$ $(cat stack.json | jq -r .kloudctl.auth)\nauthenticate raw response: {\"56b36a7cb07390b5c6e4dbd4\":true}\n```\n\nAnd finally build the stack:\n\n```bash\n$ $(cat stack.json | jq -r .kloudctl.apply)\n{EventId:apply-56b36ef1b07390ecc4e84937}\n2016-02-04 16:32:04 ==> apply started [Status: Building Percentage: 0]\n2016-02-04 16:32:08 ==> Fetching and validating credentials [Status: Building Percentage: 30]\n2016-02-04 16:32:12 ==> Building stack resources [Status: Building Percentage: 50]\n2016-02-04 16:32:16 ==> Building stack resources [Status: Building Percentage: 55]\n2016-02-04 16:32:20 ==> Building stack resources [Status: Building Percentage: 60]\n...\n```\n\nVerify, upon successful build, the klient from inside of vagrant has registered to kontrol with the `registerURL` passed in the template:\n\n```\n$ kloudctl kontrol list | jq\n[\n...\n  {\n    \"name\": \"klient\",\n    \"username\": \"rafal\",\n    \"id\": \"f5e4c605-b5ca-400a-8158-5274126f772c\",\n    \"environment\": \"development\",\n    \"region\": \"public-region\",\n    \"version\": \"0.1.99\",\n    \"hostname\": \"rafal\",\n    \"url\": \"http://example1.rafal.tunnel.dev.koding.io:8081/klient/kite\",\n    \"concurrent\": true,\n    \"kontrolURL\": \"http://127.0.0.1:3000/kite\",\n    \"kontrolUser\": \"koding\",\n    \"authType\": \"token\"\n  },\n...\n]\n```\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 4.58203125,
          "content": "# Koding\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/koding/koding.svg?maxAge=2592000)](https://hub.docker.com/r/koding/koding/)\n\nThe Simplest Way to Manage Your Entire Dev Infrastructure!\n\nKoding is a development platform that orchestrates your dev\nenvironment. Developers get everything they need to spin up\nfull-stack, project-specific environments in seconds. Share them, update them,\nand manage infrastructure from a simple interface.\n\nYou can try Koding now on [koding.com](https://www.koding.com)\n\n## Quick Start with Docker-Compose\n\nEasiest way to run Koding is to install `docker-compose` which\ncan be found [here](https://docs.docker.com/compose/install/). For the\nrest you can follow these steps:\n\n```bash\ngit clone https://github.com/koding/docker-compose.git koding-docker-compose\ncd koding-docker-compose\n# Requires docker-compose version >= 1.6\ndocker-compose up -d\n```\n\nNow you are able to access Koding via port `8090` (e.g. [localhost:8090](http://localhost:8090)) on your host.\n\n## Run Koding on Koding.com\n\nYes, you can run koding on [koding.com](https://www.koding.com) by using\nthe provided [.koding.yml](https://github.com/koding/koding/blob/master/.koding.yml)\n\nFor more information about stacks: [koding.com/docs](https://www.koding.com/docs/creating-an-aws-stack)\n\n## Getting started for Development\n\nYou need to install following software packages to run Koding:\n\n- [git](https://git-scm.com)\n- [docker](https://www.docker.com)\n- [docker-compose](https://www.docker.com/products/docker-compose)\n\n### Start developing\n\nYou are now ready to run Koding.\n\n```bash\ngit clone https://github.com/koding/koding.git\ncd koding\ndocker-compose -f docker-compose-init.yml run init\ndocker-compose up\n```\n\nIf you don't have a powerful computer, this may take a while at first, slow computers may take up to 15 minutes before they build the entire system. Please be patient. Once it is up and running, everything will be smooth and very fast.\n\nNow you can navigate to http://localhost:8090 to see your local Koding\ninstance. Enjoy! (If you don't see it, keep waiting, it will show up)\n\nWhen you edit files on your host computer, they will be visible in the\nruntime environment. Watchers will automatically restart backend workers, re-compile frontend code. You don't need to do anything for it.\n\n### Tips\n\nIf you need to execute some commands in runtime\nenvironment, here is how you can start a shell in\nbackend service container:\n\n```bash\ndocker-compose exec backend bash\n```\n\nYou can follow [coffeescript-styleguide](https://github.com/koding/styleguide-coffeescript)\nthat we are relying on.\n\n## Running Koding on Local Machine\n\nThis is if you don't want to do docker-compose way and install everything locally, (not recommended).\n\n### Software Prerequisites\n\n- [Go](http://www.golang.org/) v1.7\n- [Node.js](https://nodejs.org/en/) v0.10\n- [CoffeeScript](http://coffeescript.org/) v1.8.0\n- [Supervisor](http://supervisord.org/)\n\n### Start developing\n\nFollow these steps for running the instance:\n\n```bash\ngit clone https://github.com/koding/koding.git /your/koding/path\ncd /your/koding/path\nnode -v # make sure your node version is not greater than `0.10.x`\nnpm -v # make sure your npm version is 2.15.x\ncoffee -v # make sure your coffeeScript version must be 1.8\nnpm install\n```\n\nYou should have packages ready for running build specific scripts.\n\n```bash\n./configure # create necessary config files\n./run install # start to install dependencies\n./run buildservices # build the services\n./run # run all services\n```\n\nAs a result, you will have a file watcher watching your backend files\n(both node, and golang) and restart services when it's necessary. Now open up\nanother terminal and run following commands:\n\n```bash\ncd /your/koding/path\ncd client # move into frontend client folder\nnpm install # install client dependencies\nmake # this will run a client watcher for you\n```\n\nRight now you should have 2 different watchers for (1) your backend files,\n(2)for your frontend client files.\nNow you can navigate to [](http://localhost:8090) to see your local Koding\ninstance. Enjoy!\n\n## License\n\nThis repository is licensed under [GNU AGPL V3](https://github.com/koding/koding/blob/master/LICENSE)\nKoding Community Edition is licensed under [Apache 2.0](https://github.com/koding-ce/koding)\n\n## Contribute\n\nThe main purpose of this repository to continue evolve Koding in order to make it more\nstable and create the best development experience ever. If you're interested\nin helping with that, please check our [open\nissues](https://github.com/koding/koding/issues). You can also join the\nconversation in our [slack team]!\n\n[slack team]: http://cebeci.koding.com/slackin/\n"
        },
        {
          "name": "README.nodejs-testing.markdown",
          "type": "blob",
          "size": 2.548828125,
          "content": "# Testing Node.js Code\n\nThis document aims to explain everything about running and writing tests for node.js code.\n\n## Infrastructure of Node.js testing\n\n[Mocha.js](http://mochajs.org/) is being used as the test framework. The assertion library that we use in our tests is [Chai.js](http://chaijs.com/).\n\n## Installation\n\nNo need to install anything to run tests within Koding repository.\nYou should be ready for testing when you clone Koding repository.\n\n## Running tests in local\n\nRunning tests in local is as easy as executing `./run $TEST_COMMAND`.\n`$TEST_COMMAND` can be `socialworkertests`, `nodeservertests`, and `nodetestfiles`.\nThese commands picks up the files with the extension `.test.coffee` and ignores the rest.\nSo be sure that your test files end with `.test.coffee`\n\n`socialworkertests` and `nodeservertests` are for the files in socialworker and servers directories.\nOn the other hand `nodetestfiles` can be used to run a single test file or all the files in directory.\nFor example `./run nodetestfiles pathToSingleFile.x.test.coffee` or `./run nodetestfiles aFolder`\n\n## Writing tests\n\nFor writing tests we have some rules to be followed:\n* [BDD api](http://chaijs.com/api/bdd/) with `expect` style of Chai.js should be used in tests.\n* [Coffee style guide](https://github.com/koding/styleguide-coffeescript) of Koding should be applied to test code.\n* Test files should be added to the same folder with the file being tested.\n* Adding separate test suites for main scenarios is strongly advised.\n```coffeescript\ndescribe 'servers.handlers.verifyslug', ->\n\n  describe 'when domain is available', ->\n  \n    it 'should send HTTP 200 if domain is valid', (done) ->\n      ...\n      \n  describe 'when domain is not available', ->\n  \n    it 'should send HTTP 400', (done) ->\n      ...\n```\n* Variables should be declared in test suite/case scope, global variables should be avoided.\n```coffeescript\n#NO\nverifySlugRequestParams = generateVerifySlugRequestParams\n      body   :\n        name : ''\n        \ndescribe 'servers.handlers.verifyslug', ->\n  \n  it 'should send HTTP 400 if team domain is not set', (done) ->\n    \n    request.post verifySlugRequestParams ...\n\n\n#YES\ndescribe 'servers.handlers.verifyslug', ->\n  \n  it 'should send HTTP 400 if team domain is not set', (done) ->\n\n    verifySlugRequestParams = generateVerifySlugRequestParams\n      body   :\n        name : ''\n        \n    request.post verifySlugRequestParams ...\n```\n\n## Testing process in wercker\n\nWercker connects to a test instance via ssh and calls\n`./run socialworkertests` and `./run nodeservertests` on the test instance.\n"
        },
        {
          "name": "README.outsourcingworkflow.markdown",
          "type": "blob",
          "size": 6.7373046875,
          "content": "## Basic WorkFlow\n- Issues are posted to [outsourcing master list](https://docs.google.com/spreadsheets/d/1YjDSF672d_v5PKMli2Y-imCMl0OVYvX4SobK74EvE5w/edit#gid=0) with its specification, requirement, design and acceptance criteria.\n- Developer picks one of outsourced issue\n- Developer gives a deadline and price\n- Issue will be marked as `in progress` after we accept the inquiry\n- Developer finishes the task within the timeframe\n- Developer opens a pull request\n    - Our engineers review developers code\n    - Our engineers may ask for edit/fix\n    - Developer fixes comments and issue gets merged\n- Developer gets paid.\n\n![](https://ibin.co/2zANiJc8OmVB.png)\n\n\n## Issue Deadline and Pull Request Guidelines\n- You might miss the deadline that you proposed before. That's usually OK within reason.\n- You then may ask for deadline extension. You should do that only once.\n- Koding doesn't have to accept all pull requests.\n    - We are providing a slack team channel where developers can ask questions about the issue to our engineers directly.\n    - Whenever developer opens a pull request, Koding is responsible to give a comment to that pull request.\n    - We recommend you open a pull request with WIP tag as early as you can, so we can course correct you if necessary. With that you can receive an early review, and make sure you are on the right path vs open a big PR at the last day of your proposed timeline which might get rejected, and/or would result in non-payment or require too many corrections.\n    - We are going to add acceptance criteria to each of outsourced issues\n    - If developer provides all specs but the code is not readable, or confusing, not on-par with coding guidelines:\n        - We are going to ask developer to fix them\n        - We may extend the deadline if we think it's salvageable.\n        - We might reject it.\n    - Developer understands that if the task is unfinished, not testable, contains errors not on point, Koding can reject and doesn't have to pay. No partial payments will be made. If the issue was unclear, that task shouldn't be started by the developer. We ask you to clarify all unknowns when you start the task, and our engineers will do all necessary clarification.\n    - If unforeseen problems occurred while implementation, please contact the outsourcing manager for extension or extra payment. If we do decide those problems are valid but we no longer want to continue the task, we might then issue a partial or full payment.\n\n\n\nOur code style guide [is here](https://github.com/koding/styleguide-coffeescript)\n\n\n\n## Payment Process\nOur preferred payment methods are direct bank transfer, if you require another type of payment, please verify with us before you start on any task.\n- Koding can cancel the issue if and only if nobody started to work on it. Otherwise, Koding has to make a full payment to the developer.\n- There will be no partial payment for incomplete jobs\n- If a developer cancels the contract after task is assigned, there is no penalty other than potentially we no longer working with them\n\n\n\nWe will assign one developer to the issue. If different persons, we will want to make the payment to the PR owner. We won't issue multiple payments, that should be arranged by the PR owner. We are required to receive a W9-form and an invoice from the contractor. As soon as we agreed with developer we will mark that issue as `in progress`. So other developers can not work with same issue.\n\n## Conflict Resolution\nIf we find ourselves in a conflict situation that you believe your work is of quality and meets the requirements, but we don't believe your work satisfies our requirements, we will not issue a payment and at this time we do not have a conflict resolution standards. You are free to not work with us ever, we understand. We will try our best to make sure your experience is smooth and your questions are answered. Two things, don't start on tasks you think you need to ask a lot of questions to, entire philosophy behind this project is to reduce communications between parties so you get to work and our engineers don't stop their work and answer your questions. In a conflict situation, you can't claim any rights, if we do not want to keep working with you, that's the end of it. If you don't trust our company, don't like the requirements, don't feel confident you can deliver, please don't start the job. We are thinking to find 3 well known independent developers in the future to make a decision in case of a conflict, but we do not have it yet.\n\n## Contractor Onboarding\n- We made it really easy for you to work, downtowork.koding.com you will be invited to this team\n- You will have your dev environment ready in 5 mins.\n- We are also providing a slack [koding-dev channel](http://cebeci.koding.com/slackin/) to answer all of your questions, you will be treated as a part of our family.\n\n\n## Technologies\nOur back-end is 80% Go and 20% NodeJS, front-end is built in KD.js (in-house framework), ReactJS and Flux.\nWe also have command-line tool that is called `kd` which allows you to sync your remote machine's filetree with your local one to give chance to use Vagrant stack and use your local IDE.\n\n\n## Rates\nEstimate high. This is software development, and we want you to feel safe. If you think you can finish the task in 10 hours estimate 15 hours, leave some room for comments, deadline extension etc. If you did finish the task earlier, we won't try to pay you less, you deserve that payment, and you saved us time.\n\nTime to time, some of your work will get rejected, or you will have to spend extra time that won't be compensated, the extra money you made will help you move on quickly to another task and provide you with a safety cushion.\n\nPlease feel free to estimate however you think is a fair compensation of your work. We will not look for lowest bidders, we understand that you are an amazing developer and you will do an amazing job. That's our agreement, we want this platform to be fair, transparent and trustworthy. Not a platform where developers are underpaid and overworked. Feel free to bid any amount you think is fair to you, to your experience with some added safety amount. We will pick based on our trust to you and your previous work with us, or with others we can see publicly on Github.\n\n\nTL;DR We would like to hear your estimated deadline and price. We don't care about the lowest bid. Pricing absolutely depends on you, your experience and your hourly rate. Bid happy, work happily and deliver amazing work.\n\nPricing of the issue is totally depends on how hard to implement the issue and who is developing it. We will never disclose (unlike other sites) who earns what. We think that's not nice. No one asks us how much money we make. We should be only judged based on how good our work is, not how much money we make. Thus this information will never be made public.\n"
        },
        {
          "name": "README.react-components.markdown",
          "type": "blob",
          "size": 7.0634765625,
          "content": "## React Components\n\nThis folder contains react components.\n\nWe split components as **container** components(smart) and **view** components(dumb/presentational).\n\n### **Container** components\n\n - Are concerned with how things work.\n - It contains `view` component inside for presentation.\n - Provide the data and behavior to view or other container components.\n - Call Flux actions and provide these as callbacks to view components.\n - It may have states and change own states\n - It may have ComponentDidMount, ComponentDidUpdate etc.. react lifecycle event handlers.\n\n### **View** components\n\n - Are concerned with how things look.\n - May contain both view and container components inside, and usually have some DOM markup of their own.\n - Have no dependencies on the rest of the app, such as Flux actions or stores.\n - Don’t specify how the data is loaded or mutated.\n - Receive data and callbacks exclusively via props.\n - Have no states\n - Have no `ComponentDidMount, ComponentDidUpdate etc..` react lifecycle event handlers. We use this handlers and other methods to call Flux actions in `Container` components\n - Have only `render` methods.\n\n### Benefits of this approach\n\n - Better separation of concerns. You understand your app and your UI better by writing components this way.\n - Better reusability. You can use the same view component with completely different state sources, and turn those into separate container components that can be further reused.\n - This forces us to extract `layout components` such as `Sidebar, Page, ContextMenu` and use `@props.children` instead of duplicating the same markup and layout in several container components.\n\n### Folder structure\n\nWe create component folder structure as you can see below;\n\n```\n├── Readme.md\n├── bant.json\n└── lib\n    └── components\n       └── Readme.md\n       └── commentList\n            ├── index.coffee\n            ├── view.coffee\n            ├── container.coffee\n            └── test\n              ├── index.coffee\n              ├── view.coffee\n              └── container.coffee\n```\n\n### Creating Components\n\n\n`index.coffee` should include `view` and `container` files.\n\n```coffeescript\n## /commentlist/index.coffee\n\nmodule.exports           = require './view'\nmodule.exports.Container = require './container'\n```\n\n---\n\n`view.coffee` should contain only presentational part.\n\n```coffeescript\n\n## /commentlist/view.coffee\n\nkd             = require 'kd'\nReact          = require 'kd-react'\nimmutable      = require 'immutable'\n\nmodule.exports = class CommentListView extends React.Component\n\n@propTypes =\n  repliesCount    : React.PropTypes.number\n  showMoreComment : React.PropTypes.func.isRequired\n  comments        : React.PropTypes.instanceOf immutable.Map\n\n@defaultProps =\n  repliesCount    : 0\n  comments        : immutable.Map()\n\n\nrenderShowMoreComments: -> ...\n\n\nrenderList: -> ...\n\n\nrender: ->\n  <div className='CommentList'>\n    {@renderShowMoreComments()}\n    {@renderList()}\n  </div>\n```\n\n---\n\n`container.coffee` should call flux actions, provide data and behavior to view part. It may contain states, event handlers like `componentDidMount, componentDidUpdate etc...` and various methods to call Flux actions or to do arbitrary things.\n\n```coffeescript\n\n## /commentlist/container.coffee\n\nkd              = require 'kd'\nView            = require './view'\nReact           = require 'kd-react'\nimmutable       = require 'immutable'\nActivityFlux    = require 'activity/flux'\n\nmodule.exports = class CommentListContainer extends React.Component\n\n  constructor: (props) ->\n\n    super props\n\n    @state = { showModal: no, isEditingMode: no }\n\n\n  @propTypes =\n    repliesCount    : React.PropTypes.number\n    channelId       : React.PropTypes.string\n    messageId       : React.PropTypes.string\n    comments        : React.PropTypes.instanceOf immutable.Map\n\n  @defaultProps =\n    repliesCount   : 0\n    channelId      : ''\n    messageId      : ''\n    comments       : immutable.Map()\n\n\n  componentDidMount: -> do something...\n\n\n  componentDidUnmount: -> do another...\n\n\n  showMoreComment: -> ActivityFlux.actions.message.loadComments()\n\n\n  doSomething: -> ...\n\n\n  render: ->\n\n    <View\n      ref             = 'view'\n      comments        = { @props.comments }\n      channelId       = { @props.channelId }\n      messageId       = { @props.messageId }\n      showModal       = { @state.showModal }\n      repliesCount    = { @props.repliesCount }\n      isEditingMode   = { @state.isEditingMode }\n      showMoreComment = { @bound 'showMoreComment' }/>\n\n```\n\n##### Using Component in another component\n\n```coffeescript\n\n## /components/AnyComponentView.coffee\n\nCommentList = require 'activity/components/commentlist'\n\nrender: ->\n\n    <div className='CommentListWrapper'>\n      <CommentList.Container\n        ref            = 'CommentList'\n        comments       = { @props.comments }\n        channelId      = { @props.channelId }\n        onMentionClick = { @props.onMentionClick }\n        messageId      = { @props.messageId }\n        repliesCount   = { @props.repliesCount }/>\n    </div>\n\n```\n\n\n\n\n### Writing Tests\n\n`index.coffee` should include `view` and `container` test files.\n\n```coffeescript\n\n## /test/index.coffee\n\ndescribe 'CommentList', ->\n  require './view'\n  require './container'\n\n```\n\n---\n\n`view.coffee` should contain view component tests.\n\n```coffeescript\n\n## /test/view.coffee\n\ndescribe 'CommentListView', ->\n\n  { Simulate\n    renderIntoDocument\n    findRenderedDOMComponentWithClass\n    scryRenderedDOMComponentsWithClass } = TestUtils\n\n\n  beforeEach -> do something...\n\n\n  afterEach -> do something...\n\n\n  describe '::render', ->\n\n    it 'should render View with correct classNames', ->\n\n      view = renderIntoDocument(<View {...@props} />)\n\n      expect(findRenderedDOMComponentWithClass view, 'CommentList').toExist()\n      expect((scryRenderedDOMComponentsWithClass view, 'CommentListItem').length).toEqual 10\n      expect(findRenderedDOMComponentWithClass view, 'CommentList-showMoreComment').toExist()\n\n\n  describe '::onClick', ->\n\n    it 'should call passed showMoreComment handler when click the showMoreComment link', ->\n\n      showMoreSpy = expect.createSpy()\n      view        = renderIntoDocument(<View {...@props} showMoreComment={showMoreSpy}/>)\n      node        = ReactDOM.findDOMNode view\n      showMoreEl  = node.querySelector '.CommentList-showMoreComment'\n\n      Simulate.click showMoreEl\n\n      expect(showMoreSpy).toHaveBeenCalled()\n\n```\n\n---\n\n\n`container.coffee` should contain container component tests.\n\n```coffeescript\n\n## /test/container.coffee\n\ndescribe 'CommentListContainer', ->\n\n  { renderIntoDocument } = TestUtils\n\n  beforeEach -> do something...\n\n\n  afterEach -> do something...\n\n\n  describe '::showMoreComment', ->\n\n    it 'should call loadComments action with correct parameters', ->\n\n      { message }     = ActivityFlux.actions\n      loadCommentsSpy = expect.spyOn message, 'loadComments'\n      container       = renderIntoDocument(<Container {...@props} />)\n\n      container.showMoreComment()\n\n      expect(loadCommentsSpy).toHaveBeenCalledWith ...\n\n\n```\n\n\n\n"
        },
        {
          "name": "README.softlayer.markdown",
          "type": "blob",
          "size": 13.8056640625,
          "content": "Softlayer\n=========\n\n# Tools\n\n- `sl` (managing VLANs) - [koding/kites/kloud/scripts/sl](./go/src/koding/kites/kloud/scripts/sl)\n- `kloudctl` (managing machines) - [koding/kites/kloud/kloudctl](./go/src/koding/kites/kloud/kloudctl)\n- `images` (managing base images) - [README.md](./go/src/koding/kites/kloud/docs/ami-creation.md#updating-softlayer-base-image)\n- - official `slcli` (everything else) - http://softlayer-python.readthedocs.org/en/latest/install.html\n\n# Prerequisites\n\n```bash\n~ $ cd ${KODING_REPO}\nkoding $ export GOPATH=${PWD}/go\nkoding $ export PATH=${GOPATH}/bin:${PATH}\n```\n\n## Installation\n\n- sl\n\n```bash\nkoding $ go install koding/kites/kloud/scripts/sl\n```\n\n- kloudctl\n```bash\nkoding $ go install koding/kites/kloud/kloudctl\n```\n\n## Environment variables\n\n```bash\nkoding $ cat >> ~/.bashrc <<EOF\nexport SOFTLAYER_API_KEY=\"#{slKeys.vm_kloud.apiKey}\"\nexport SOFTLAYER_USER_NAME=\"#{slKeys.vm_kloud.username}\"\nexport KLOUDCTL_MONGODB_URL=\"#{mongo}\";\n# export KLOUDCTL_DEBUG=\"1\";\nexport KITE_KONTROL_URL=\"https://koding.com/kontrol/kite\";\nexport KITE_ENVIRONMENT=production\nEOF\n```\n\n- slKeys.vm_kloud - https://github.com/koding/credential/blob/6faa820/config/main.prod.coffee#L11-L12\n- mongo - https://github.com/koding/credential/blob/6faa820/config/main.prod.coffee#L82\n\n# Getting started\n\n## Checking machine\n\n### via MongoDB\n\n```bash\nmongo> db.jMachines.find({\"credential\": \"rjeczalik\", \"slug\": \"softlayer-vm-0\"}, {\"domain\": 1, \"ipAddress\": 1, \"status.state\": 1, \"_id\": 0})\n```\n```json\n{\n  \"domain\": \"urkseca4aeee.rjeczalik.koding.io\",\n  \"ipAddress\": \"169.54.128.8\",\n  \"status\": {\n    \"state\": \"Running\"\n  }\n}\n```\n\n### via kloudctl\n\n```bash\nkoding $ ./kloudctl group create -dry -users rjeczalik\n```\n```\nPreparing jMachine documents for users...\n0 to be machines built\n1 error(s) occurred:\n\n* jMachine status for \"rjeczalik\": the machine is already running\nnothing to build\n```\n\nQuerying multiple users at once:\n\n```bash\nkoding $ cat >userlist.txt <<EOF\ncaikoding\ncihangirsavas\ndevrim\ndicle\ndidemacet\nfatihacet\ngokmen\nleeolayvar\nmehmet\nnitin\nozan\nrjeczalik\nselin\nsenthil\nsent-hil\nsinan\nsonmez\nstefan\nstefanbc\nszkl\ntpiha\nturunc\numut\nusirin\nEOF\n```\n```bash\nkoding $ cat userlist.txt | kloudctl group create -dry -users -\n```\n```bash\nPreparing jMachine documents for users...\n0 to be machines built\n24 error(s) occurred:\n\n* jMachine status for \"cihangirsavas\": the machine is already running\n* jMachine status for \"devrim\": the machine is already running\n* jMachine status for \"didemacet\": the machine is already running\n* jMachine status for \"fatihacet\": the machine is already running\n* jMachine status for \"ozan\": the machine is already running\n* jMachine status for \"senthil\": the machine is already running\n* jMachine status for \"stefanbc\": the machine is already running\n* jMachine status for \"usirin\": the machine is already running\n* jMachine status for \"dicle\": the machine is already running\n* jMachine status for \"gokmen\": the machine is already running\n* jMachine status for \"mehmet\": the machine is already running\n* jMachine status for \"nitin\": the machine is already running\n* jMachine status for \"selin\": the machine is already running\n* jMachine status for \"stefan\": the machine is already running\n* jMachine status for \"caikoding\": the machine is already running\n* jMachine status for \"gokhan\": this is going to be rebuild without -dry\n* jMachine status for \"leeolayvar\": the machine is already running\n* jMachine status for \"sonmez\": the machine is already running\n* jMachine status for \"szkl\": the machine is already running\n* jMachine status for \"cihangir\": the machine is already running\n* jMachine status for \"sent-hil\": the machine is already running\n* jMachine status for \"sinan\": the machine is already running\n* jMachine status for \"turunc\": the machine is already running\n* jMachine status for \"umut\": the machine is already running\nnothing to build\n```\n\n### via Softlayer\n\n```bash\n~ $ slcli vm list --tag koding-user:rjeczalik\n```\n```bash\n:..........:...........:..............:................:............:........:\n:    id    :  hostname :  primary_ip  :   backend_ip   : datacenter : action :\n:..........:...........:..............:................:............:........:\n: 16109405 : rjeczalik : 169.54.128.8 : 10.122.209.232 :   sjc01    :   -    :\n:..........:...........:..............:................:............:........:\n```\n\nAvailable tags:\n\n- `koding-user:<jMachines.credential>`\n- `koding-env:<environment>`\n- `koding-machineid:<jMachines.ObjectId>`\n- `koding-domain:<jMachines.domain>`\n\n### via SSH\n\n```bash\n~ $ export USER_IP=$(slcli vm list --tag koding-user:rjeczalik | tr -s ' ' | cut -d' ' -f3)\n~ $ ssh -i $KLOUD_RSA_PEM root@$USER_IP\n```\n```bash\nWelcome to Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-74-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\nLast login: Fri Feb 19 12:40:54 2016 from 89-67-178-12.dynamic.chello.pl\nThis virtual hackathon is powered by...\n\n  _____ ____  __  __    _____ _                 _\n |_   _|  _ \\|  \\/  |  / ____| |               | |\n   | | | |_) | \\  / | | |    | | ___  _   _  __| |\n   | | |  _ <| |\\/| | | |    | |/ _ \\| | | |/ _` |\n  _| |_| |_) | |  | | | |____| | (_) | |_| | (_| |\n |_____|____/|_|  |_|  \\_____|_|\\___/ \\__,_|\\__,_| SoftLayer\n\nroot: ~ $ \n```\n\n### via Klient Kite\n\n```bash\n~ $ export USER_IP=$(slcli vm list --tag koding-user:rjeczalik | tr -s ' ' | cut -d' ' -f3)\n~ $ curl $USER_IP:56789/kite\n```\n```bash\nWelcome to SockJS!\n```\n\n## Creating a machine\n\n### Production datacenters / VLANs\n\nBefore creating machine we need to determine in which datacenter it will run. Finding a datacenter basically means finding a VLAN which has spare capacity. Each single VLAN has capacity of ~250 VMs by default (it can be slightly increased by Softlayer Team on demand, but rather don't count on that).\n\nWe don't care about VLANs which are untagged, but are attached to our account.\n\nIn order to list production VLANs use `sl` tool. Each VLAN has two tags:\n\n- `koding-env`, either production, dev, sandbox etc. if kloud runs in production in won't see VLANs tagged other than production\n- `koding-vlan-cap`, set to 250 for each VLAN, based on this value kloud will balance machines among all vlans for the given datacenter\n\n```bash\nkoding $ sl vlan list\n```bash\nID            Internal ID\tTotal\tAvailable\tInstances\tDatacenter\tTags\n1172807\t1443\t\t0\t0\t\t1\t\tpar01\t\t[koding-vlan-cap=250,koding-env=production]\n1171871\t1366\t\t64\t61\t\t207\t\tsjc01\t\t[koding-vlan-cap=250,koding-env=production]\n1171873\t1400\t\t64\t61\t\t208\t\tsjc01\t\t[koding-env=production,koding-vlan-cap=250]\n1171875\t1407\t\t64\t61\t\t204\t\tsjc01\t\t[koding-env=production,koding-vlan-cap=250]\n1171877\t1410\t\t64\t61\t\t204\t\tsjc01\t\t[koding-env=production,koding-vlan-cap=250]\n1171879\t1417\t\t64\t61\t\t201\t\tsjc01\t\t[koding-env=production,koding-vlan-cap=250]\n1171881\t1418\t\t64\t61\t\t200\t\tsjc01\t\t[koding-env=production,koding-vlan-cap=250]\n1171883\t1420\t\t64\t61\t\t201\t\tsjc01\t\t[koding-vlan-cap=250,koding-env=production]\n1171885\t1425\t\t64\t61\t\t134\t\tsjc01\t\t[koding-vlan-cap=250,koding-env=production]\n1171487\t1872\t\t64\t61\t\t1\t\ttok02\t\t[koding-vlan-cap=250,koding-env=production]\n1171483\t1518\t\t64\t61\t\t233\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171489\t1772\t\t64\t61\t\t232\t\twdc04\t\t[koding-vlan-cap=250,koding-env=production]\n1171491\t1773\t\t64\t61\t\t226\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171497\t1774\t\t64\t61\t\t232\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171499\t1775\t\t64\t61\t\t225\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171501\t1776\t\t64\t61\t\t242\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171503\t1777\t\t64\t61\t\t237\t\twdc04\t\t[koding-vlan-cap=250,koding-env=production]\n1171505\t1778\t\t64\t61\t\t225\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171507\t1779\t\t64\t61\t\t230\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171509\t1780\t\t64\t61\t\t234\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171511\t1781\t\t64\t61\t\t226\t\twdc04\t\t[koding-env=production,koding-vlan-cap=250]\n1171513\t1782\t\t64\t61\t\t228\t\twdc04\t\t[koding-vlan-cap=250,koding-env=production]\n1171859\t1206\t\t0\t0\t\t318\t\tsjc03\t\t[koding-env=production,koding-vlan-cap=250]\n1171861\t1229\t\t0\t0\t\t361\t\tsjc03\t\t[koding-vlan-cap=250,koding-env=production]\n1171863\t1235\t\t0\t0\t\t318\t\tsjc03\t\t[koding-env=production,koding-vlan-cap=250]\n1171865\t1236\t\t0\t0\t\t315\t\tsjc03\t\t[koding-vlan-cap=250,koding-env=production]\n1171835\t1251\t\t0\t0\t\t256\t\tdal09\t\t[koding-env=production,koding-vlan-cap=250]\n1171837\t1252\t\t0\t0\t\t256\t\tdal09\t\t[koding-env=production,koding-vlan-cap=250]\n1171839\t1253\t\t0\t0\t\t249\t\tdal09\t\t[koding-env=production,koding-vlan-cap=250]\n1171841\t1254\t\t0\t0\t\t252\t\tdal09\t\t[koding-env=production,koding-vlan-cap=250]\n1171843\t1255\t\t0\t0\t\t257\t\tdal09\t\t[koding-vlan-cap=250,koding-env=production]\n1171845\t1256\t\t0\t0\t\t250\t\tdal09\t\t[koding-vlan-cap=250,koding-env=production]\n1171847\t1257\t\t0\t0\t\t353\t\tdal09\t\t[koding-env=production,koding-vlan-cap=250]\n1171849\t1258\t\t0\t0\t\t248\t\tdal09\t\t[koding-vlan-cap=250,koding-env=production]\n```\n\nFrom the above list we see most of the datacenters are pretty crowded, some overprovisionned, but `sjc01` looks like it have the most spare capacity.\n\n[The kloudctl directory](https://github.com/koding/koding/tree/c60ba0ff/go/src/koding/kites/kloud/kloudctl) contains template files for each datacenter we have vlans in:\n\n- `hackathon-dal09.json` for dal09\n- `hackathon-sjc03.json` for sjc03\n- `hackathon-wdc04.json` for wdc04\n- `hackathon-sjc01.json` for sjc01\n\nCreating machine for user:\n\n```bash\nkoding $ kloudctl group create -f hackathon-sjc01.json -users rjeczalik\n```\n```bash\nPreparing jMachine documents for users...\n1 machine to be built\nRequesting to process \"softlayer-vm-0\"\nwatching status for \"56c766e8bc09c90729ffb7b9\"\n2016-02-19 19:03:05.6797201 +0000 UTC: status for \"56c766e8bc09c90729ffb7b9\": Building\n2016-02-19 19:03:20.554644929 +0000 UTC: status for \"56c766e8bc09c90729ffb7b8\": Building\n2016-02-19 19:03:20.766824502 +0000 UTC: status for \"56c766e8bc09c90729ffb7b9\": Building\n2016-02-19 19:03:35.850424965 +0000 UTC: status for \"56c766e8bc09c90729ffb7b8\": Building\n2016-02-19 19:03:35.933874654 +0000 UTC: status for \"56c766e8bc09c90729ffb7b9\": Building\n2016-02-19 19:03:51.02228675 +0000 UTC: status for \"56c766e8bc09c90729ffb7b9\": Building\n...\n```\n\nAfter the machine is successfully built, it's invisible to a user. Attaching it to the user's stack will make it visible:\n\n```bash\nkoding $ kloudctl group stack -users rjeczalik -machine 'softlayer-vm-0'\n```\n```bash\nprocessing 1 users...\nprocessed \"rjeczalik\" user stack\n```\n\nThe same commands, but for scale:\n\n```bash\nkoding $ cat userlist.txt | kloudctl group create -f hackathon-sjc01.json -t 20 -users -\nkoding $ # 20 concurrent builds is a safe and tested value\n```\n```bash\nkoding $ cat userlist.txt | kloudctl group stack -machine 'softlayer-vm-0' -j 64 -users -\nkoding $ # 64 concurrent processings is a safe and tested value\n```\n\n## Deleting a machine\n\n- we would want to modify a jMachine document when:\n  - building a machine failed and rebuilding it again fails on kloud\n  - when jMachine.meta.id is missing or is some bad value (0 is bad value here)\n  - when jMachine.meta.vlanId is some bad value (0 is ok for vlanId - it means: kloud please autobalance me), which causes failures on rebuild\n- we would want to delete a Softlayer machine when it's dead broken and we want to make a room for more\n\n### MongoDB\n\nHelper scripts:\n\n- gives a jMachine.ObjectId given the username (and optionally machine slug)\n\n```bash\nprod-find-machine() { \n    local usr=${1:-rjeczalik};\n    local slug=${2:-softlayer-vm-0};\n    ( mongo -u user -p password host:port/database 2> /dev/null | tail -n+3 | sed '$ d' ) <<< \"db.jMachines.find({\\\"credential\\\": \\\"$usr\\\", \\\"slug\\\": \\\"$slug\\\"}, {\\\"_id\\\": 1})\" | tr -d ' ' | cut -d\\\" -f4\n}\n```\n```bash\n~ $ prod-find-machine rjeczalik softlayer-vm-0\n56c6673abc09c91ab3e9f0bd\n```\n\n- gives a jUsers.ObjectId given the jUsers.Username\n\n```bash\nprod-find-user() { \n    local usr=${1:-rjeczalik};\n    ( mongo -u user -p password host:port/database 2> /dev/null | tail -n+3 | sed '$ d' ) <<< \"db.jAccounts.find({\\\"profile.nickname\\\": \\\"$usr\\\"}, {\\\"_id\\\": 1})\" | tr -d ' ' | cut -d\\\" -f4\n}\n```\n```bash\n~ $ prod-find-user rjeczalik\n530c63a19e4dc2247000e798\n```\n\n- gives a jUsers.Username given the jUsers.ObjectId\n\n```bash\nprod-revfind-user() { \n    local id=${1};\n    ( mongo -u user -p password host:port/database 2> /dev/null | tail -n+3 | sed '$ d' ) <<< \"db.jUsers.find({\\\"_id\\\": ObjectId(\\\"$id\\\")}, {\\\"username\\\": 1, \\\"_id\\\": 0})\" | jq -r .username\n}\n```\n```bash\n~ $ prod-revfind-user 530c63a19e4dc2247000e798\nrjeczalik\n```\n\n- deletes a jMachine document given the jMachines.ObjectId\n\n```bash\nprod-del-machine () { \n    local id=${1:-};\n    if [[ -z \"${id}\" ]]; then\n        echo \"arg is empty\" 2>&1;\n        return 1;\n    fi;\n    ( mongo -u user -p password host:port/database 2> /dev/null | tail -n+3 | sed '$ d' ) <<< \"db.jMachines.remove({\\\"_id\\\": ObjectId(\\\"${id}\\\")})\"\n}\n```\n```bash\n~ $ prod-del-machine 56c6673abc09c91ab3e9f0bd\nCannot use commands write mode, degrading to compatibility mode\nWriteResult({ \"nRemoved\" : 1 })\n```\n\n### Softlayer\n\n```bash\n~ $ slcli vm list --tag koding-user:rjeczalik | tr -s ' ' | cut -d' ' -f1\n16109405\n```\n```bash\n~ $ slcli vm cancel 16109405 <<< 16109405\n```\n\n# Known issues\n\n- multiple `softlayer-vm-0`\n\nEarly `kloudctl` version had a race problem which might created a duplicated `softlayer-vm-0` (all of the duplicates are removed now). If user has multiple machines with the same slug/label, the UI won't work. Solution is to determinate which machine is running for the user and has a valid jMachine document (matching `jMachines.ipAddress` etc.) and delete the other ones (both jMachine and Softlayer vm).\n\nTo detect the probem:\n\n```bash\n~ $ prod-find-machine rjeczalik softlayer-vm-0\n56c6673abc09c91ab3e9f0bd\n54c6233abc09c91ab3e9e421\n```\n\nIf the `54c6233abc09c91ab3e9e421` is the running machine, delete the other one:\n\n```bash\n~ $ slcli vm list --tag koding-machineid:56c6673abc09c91ab3e9f0bd | tr -s ' ' | cut -d' ' -f1\n16109639\n```\n```bash\n~ $ slcli vm cancel 16109639 <<< 16109639\n```\n```bash\n~ $ prod-del-machine 56c6673abc09c91ab3e9f0bd\n```\n"
        },
        {
          "name": "README.supervisor.markdown",
          "type": "blob",
          "size": 3.8369140625,
          "content": "# Supervisor: A Process Control System\n\nBackend workers can be started using\n[supervisor](http://supervisord.org).\n\n## Installation\n\nYou can install `supervisor` via `pip`.\n\n```shell\npip install supervisor\n```\n\n## Starting up\n\n`supervisord` by default looks up in current working directory for\n`supervisord.conf` file first.  This file is generated by `configure`\nscript.  Make sure you executed `configure` script before running\n`supervisord`.\n\n`supervisord` starts programs defined in configuration immediately.\n\n## Using `supervisorctl`\n\nYou can interact with `supervisor` via `supervisorctl` program.  It\nreads configuration file in current working directory like\n`supervisord`.\n\n`supervisorctl` provides two interfaces, one is classic command line\noptions and the other is an interactive\n[REPL](https://en.wikipedia.org/wiki/Read–eval–print_loop).\n\nREPL mode can be entered by executing `supervisorctl` without any\ncommands.\n\n```shell\nsupervisorctl\n```\n\nIf `supervisord` is not running then following error output will be\nprinted:\n\n```\nerror: <class 'xmlrpclib.Fault'>, <Fault 6: 'SHUTDOWN_STATE'>: file: /usr/lib/python2.7/xmlrpclib.py line: 794\n```\n\nBy default, `supervisorctl` prints output of `status` command.\n\nExample output during startup:\n\n```\nenvironment:kloud                     STARTING\nenvironment:kontrol                   STARTING\nenvironment:terraformer               STARTING\nsocialapi:algoliaconnector            STARTING\nsocialapi:collaboration               STARTING\nsocialapi:dispatcher                  STARTING\nsocialapi:gatekeeper                  STARTING\nsocialapi:mailsender                  STARTING\nsocialapi:realtime                    STARTING\nsocialapi                             STARTING\nsocialapi:team                        STARTING\nwebserver:socialworker                STARTING\nwebserver                             STARTING\n```\n\nSame command executed through command line options.\n\n```\n$ supervisorctl status\nenvironment:kloud                     RUNNING   pid 3276, uptime 0:00:15\nenvironment:kontrol                   RUNNING   pid 3271, uptime 0:00:15\nenvironment:terraformer               RUNNING   pid 3274, uptime 0:00:15\nsocialapi:algoliaconnector            RUNNING   pid 3327, uptime 0:00:15\nsocialapi:collaboration               RUNNING   pid 3382, uptime 0:00:15\nsocialapi:dispatcher                  RUNNING   pid 3391, uptime 0:00:15\nsocialapi:gatekeeper                  RUNNING   pid 3277, uptime 0:00:15\nsocialapi:mailsender                  RUNNING   pid 3292, uptime 0:00:15\nsocialapi:realtime                    RUNNING   pid 3312, uptime 0:00:15\nsocialapi                             RUNNING   pid 3280, uptime 0:00:15\nsocialapi:team                        RUNNING   pid 3417, uptime 0:00:15\nwebserver:socialworker                RUNNING   pid 3482, uptime 0:00:15\nwebserver                             RUNNING   pid 3449, uptime 0:00:15\n```\n\nCommands listed below are useful during development\n\n- start [all|program-name]\n- stop [all|program-name]\n- restart [all|program-name]\n- reread\n- reload\n- shutdown\n- exit\n\n`start`, `stop`, and `restart` commands work on programs run by\n`supervisord`.\n\nYou can execute `supervisorctl restart all` after pulling changes to\nupdate workers running on your development environment.\n\n`reread` command reads configuration file and updates supervisord\naccordingly.  `reload` command, additional to `reread`, restarts all\nprograms which is useful when `supervisor` configuration is changed.\n\n`shutdown` command kills `supervisord` process which is parent of\nprograms defined in configuration.  You do not need to kill supervisor\ndaemon during development cycle.  Stopping workers via `stop all`\ncommand is probably serve you well for most of the cases.\n\n`exit` command exits from interactive mode of `supervisorctl`.\n\n## Logs\n\nYou can tail logs via following command after running `supervisord`.\n\n```shell\ntail -fq .logs/*\n```\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.5078125,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"ubuntu/trusty64\"\n  config.vm.hostname = \"vagrant\"\n\n  config.vm.synced_folder \".\", \"/opt/koding/\"\n\n  config.vm.provider \"virtualbox\" do |vb|\n    # Use VBoxManage to customize the VM. For example to change memory:\n    vb.customize [\"modifyvm\", :id, \"--memory\", \"2048\", \"--cpus\", \"2\"]\n  end\nend\n"
        },
        {
          "name": "cleanup",
          "type": "blob",
          "size": 1.6953125,
          "content": "#!/usr/bin/env coffee\n\nread      = require 'read'\ncolors    = require 'colors'\n{ exec }  = require 'child_process'\n\nhas       = (arg)-> \"--#{arg}\" in process.argv\nhasYes    = has \"yes\"\nincludeGo = if has \"includeGo\" then \"\" else \"-e go\"\n\ndo cleanup = ->\n\n  sure = if hasYes then \"\" else \"-n\"\n\n  exec \"git status\",(err,stdout,stderr)->\n    console.log has \"force\"\n    if stdout.indexOf(\"Untracked files\") > -1 and not has(\"force\")\n      console.log \"You have untracked files, they may be files you are working on - \"\n      console.log \"if they get DELETED, you get mad.  exiting now... (do git status and resolve first or use --force  )\"\n      process.exit()\n    else\n      exec \"git clean -d -f #{sure} -x -e cleanup -e .vagrant -e node_modules -e node_modules_koding #{includeGo}\", (err, res)->\n\n        if res isnt ''\n\n          console.log \"\\n#{res}\".yellow\n\n          if not hasYes\n\n            console.log \"If you are sure to remove these files you can directly run:\\n\".red\n            console.log \" $ ./cleanup --yes \\n\".cyan\n\n            if not has \"includeGo\"\n              console.log \"If you want to cleanup GO binaries too, try:\\n\".red\n              console.log \" $ ./cleanup --includeGo \\n\".cyan\n\n            read\n              prompt  : \"Do you want to cleanup these files now? (y/N)\"\n              default : \"N\"\n            ,\n              (err, answer)->\n                if answer in [\"y\", \"Y\"]\n                  hasYes = yes # :)\n                  cleanup()\n\n          else\n            console.log \"All remaining files removed, it's a new era for you!\".green\n            console.log \"Now you need to do './configure' again.\\n\".yellow\n        else\n          console.log \"Everything seems fine, nothing to remove.\".green\n\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.404296875,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: true\ncomment:\n  behavior: default\n  layout: header, diff\n  require_changes: true\ncoverage:\n  precision: 1\n  range:\n  - 70.0\n  - 100.0\n  round: down\n  status:\n    changes: false\n    patch: true\n    project: true\nparsers:\n  gcov:\n    branch_detection:\n      conditional: true\n      loop: true\n      macro: false\n      method: false\n  javascript:\n    enable_partials: false\n"
        },
        {
          "name": "coffeelint.json",
          "type": "blob",
          "size": 2.38671875,
          "content": "{\n  \"arrow_spacing\": {\n    \"level\": \"error\"\n  },\n  \"braces_spacing\": {\n    \"level\": \"error\",\n    \"spaces\": 1,\n    \"empty_object_spaces\": 0\n  },\n  \"camel_case_classes\": {\n    \"level\": \"error\"\n  },\n  \"coffeescript_error\": {\n    \"level\": \"error\"\n  },\n  \"colon_assignment_spacing\": {\n    \"level\": \"ignore\",\n    \"spacing\": {\n      \"left\": 0,\n      \"right\": 0\n    }\n  },\n  \"cyclomatic_complexity\": {\n    \"value\": 12,\n    \"level\": \"error\"\n  },\n  \"duplicate_key\": {\n    \"level\": \"error\"\n  },\n  \"empty_constructor_needs_parens\": {\n    \"level\": \"ignore\"\n  },\n  \"ensure_comprehensions\": {\n    \"level\": \"ignore\"\n  },\n  \"eol_last\": {\n    \"level\": \"error\"\n  },\n  \"indentation\": {\n    \"value\": 2,\n    \"level\": \"error\"\n  },\n  \"line_endings\": {\n    \"level\": \"error\",\n    \"value\": \"unix\"\n  },\n  \"max_line_length\": {\n    \"value\": 80,\n    \"level\": \"ignore\",\n    \"limitComments\": true\n  },\n  \"missing_fat_arrows\": {\n    \"level\": \"ignore\",\n    \"is_strict\": false\n  },\n  \"newlines_after_classes\": {\n    \"value\": 2,\n    \"level\": \"error\"\n  },\n  \"no_backticks\": {\n    \"level\": \"ignore\"\n  },\n  \"no_debugger\": {\n    \"level\": \"error\",\n    \"console\": false\n  },\n  \"no_empty_functions\": {\n    \"level\": \"ignore\"\n  },\n  \"no_empty_param_list\": {\n    \"level\": \"error\"\n  },\n  \"no_implicit_braces\": {\n    \"level\": \"error\",\n    \"strict\": false\n  },\n  \"no_implicit_parens\": {\n    \"strict\": true,\n    \"level\": \"ignore\"\n  },\n  \"no_interpolation_in_single_quotes\": {\n    \"level\": \"ignore\"\n  },\n  \"no_nested_string_interpolation\": {\n    \"level\": \"ignore\"\n  },\n  \"no_plusplus\": {\n    \"level\": \"ignore\"\n  },\n  \"no_stand_alone_at\": {\n    \"level\": \"error\"\n  },\n  \"no_tabs\": {\n    \"level\": \"error\"\n  },\n  \"no_this\": {\n    \"level\": \"ignore\"\n  },\n  \"no_throwing_strings\": {\n    \"level\": \"error\"\n  },\n  \"no_trailing_semicolons\": {\n    \"level\": \"error\"\n  },\n  \"no_trailing_whitespace\": {\n    \"level\": \"error\",\n    \"allowed_in_comments\": false,\n    \"allowed_in_empty_lines\": false\n  },\n  \"no_unnecessary_double_quotes\": {\n    \"level\": \"error\"\n  },\n  \"no_private_function_fat_arrows\": {\n    \"level\": \"error\"\n  },\n  \"no_unnecessary_fat_arrows\": {\n    \"level\": \"error\"\n  },\n  \"non_empty_constructor_needs_parens\": {\n    \"level\": \"ignore\"\n  },\n  \"prefer_english_operator\": {\n    \"level\": \"error\",\n    \"doubleNotLevel\": \"ignore\"\n  },\n  \"space_operators\": {\n    \"level\": \"error\"\n  },\n  \"spacing_after_comma\": {\n    \"level\": \"error\"\n  },\n  \"transform_messes_up_line_numbers\": {\n    \"level\": \"warn\"\n  }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 5.1962890625,
          "content": "#!/usr/bin/env coffee\nlog = console.log\nfs = require 'fs'\nos = require 'os'\npath = require 'path'\nminimist = require 'minimist'\n{ extend, defaults, clone } = require 'underscore'\n\nargv = minimist process.argv.slice(2), {\n  string: ['version']\n}\n\ndefaultEnv = argv.config or process.env.DEFAULTENV or 'default'\n\nlog \"-------------------------\"\nlog \"\"\nlog \"# ./configure assumes development environment - comes bundled with options below.\"\nlog \"# override them as you see fit with command line arguments like --config --branch etc.\"\nlog \"\"\n\n# clone all the arguments to options\noptions = extend {}, argv\n\n# set sane defaults for _some_ options.\ndefaults options,\n  config: defaultEnv\n  envFileName: '.env'\n\noptions.inheritEnvVars = if argv.hasOwnProperty 'without-envvars' then no else yes\noptions.runGoWatcher = argv.hasOwnProperty 'with-go-watcher'\noptions.watchNode = argv.hasOwnProperty 'watch-node'\noptions.sendEventsToSegment = if argv['disable-segment'] then off else on\n\nrest = ->\n  options.publicHostname = argv.publichostname or \"http://#{options.hostname}:#{options.publicPort or '8090'}\"\n\n  log \"Configuring with options:\"\n  log \"-------------------------\"\n  log options\n  log \"-------------------------\"\n  log \"\"\n\n  KONFIG = require(\"./config/main.#{options.config}.coffee\")(options)\n\n  equals = (x1, x2, whitelist)->\n    for key of x1 when key not in whitelist\n      if typeof (x2[key]) is \"undefined\"\n        console.log \"#{key} is undefined, but exists in '#{defaultEnv}'\"\n        return false\n\n      if x1[key] and typeof (x1[key]) is \"object\"\n        unless equals(x1[key], x2[key], whitelist)\n          console.log x1[key], x2[key], \"are not the same\"\n          return false\n\n    return true\n\n\n  configMatchesDefault = (config)->\n\n    dev     = require(\"./config/main.#{defaultEnv}.coffee\")(options)\n    devKeys = JSON.parse(dev.JSON)\n    keys    = JSON.parse config.JSON\n\n    equals(devKeys, keys, config.configCheckExempt)\n\n\n  createEnvFile = (KONFIG) ->\n\n    for own type, content of KONFIG.envFiles\n      fs.writeFileSync \"#{options.envFileName}.#{type}\", content\n\n\n  createRunFile = (KONFIG)->\n\n    fs.writeFileSync \"run\",KONFIG.runFile\n    fs.chmodSync \"./run\", 0o755\n\n    fs.writeFileSync \"./deployment/generated_files/supervisord.conf\", KONFIG.supervisorConf\n    if options.kubernetes\n      fs.writeFileSync \"./deployment/kubernetes/backend-pod/containers.yaml\", KONFIG.kubernetesConf\n      fs.writeFileSync \"./deployment/kubernetes/build-pod.yaml\", KONFIG.buildPodConf\n      fs.writeFileSync \"./deployment/kubernetes/frontend-pod/client-containers.yaml\", KONFIG.clientPodConf\n    fs.writeFileSync \"./deployment/generated_files/nginx.conf\", KONFIG.nginxConf\n    fs.writeFileSync \"./nginx.conf\", KONFIG.nginxConf\n    fs.writeFileSync 'supervisord.conf', KONFIG.supervisorConf\n\n    log \"Configuration done\"\n    log \"------------------\"\n    log \"MAC INSTALL INSTRUCTIONS\"\n    log \"------------------\"\n    log \"1) install Docker\"\n    log \"2) brew install mongodb nginx\"\n    log \"3) do './run install' \"\n    log \"4) do './run buildservices' to create backend service containers after installing docker.\"\n    log \"5) you can then type './run' to run Koding and see it on #{options.hostname}\"\n\n    (require \"./deployment/socialapiconfig.coffee\").create KONFIG\n    (require \"./deployment/mongomigrationconfig.coffee\").create KONFIG\n    (require \"./deployment/gokodingconfig.coffee\").create KONFIG\n\n  # write revision to client/.config.json\n  writeVersion = (obj) ->\n    file = __dirname + '/client/.config.json'\n    config = if fs.existsSync file then require file else {}\n    config.rev = obj.client.version\n    configStr = JSON.stringify config\n    fs.writeFileSync file, configStr\n    console.log \"written #{file}\"\n\n  createEnvFile KONFIG\n  createRunFile KONFIG\n  writeVersion KONFIG\n\n  return  unless defaultEnv is 'default'\n\n  # do not check the schemas for default environment when user has no\n  # vault directory (e.g. clean repo), otherwise the configure\n  # will fail.\n  if defaultEnv != 'default' or fs.exists './vault'\n    # check 'prod', 'sandbox' config schema against 'dev'\n    #\n    # NOTICE(rjeczalik): this check causes BUG in main.default.coffee\n    # and also it overwrites fields in options when a main.#{c}.coffee\n    # does not use ' or= ' assigments.\n    for c in [\"sandbox\", \"prod\"]\n      if fs.existsSync(\"./config/main.#{c}.coffee\")\n        _options = clone options\n        config = require(\"./config/main.#{c}.coffee\")(_options)\n        process.exit(1)  unless configMatchesDefault(config)\n\nupdateVault = ->\n  # only run copying vault in dev env\n  return rest() unless options.config is 'dev'\n  return rest()  if process.env.CI\n  { execFile } = require 'child_process'\n\n  execFile './scripts/copy_vault.sh', (err, stdout, stderr) ->\n    console.log err  if err\n    process.stdout.write stdout\n    process.stderr.write stderr\n    rest()\n\ntry\n  options.version = require('git-rev-sync').short()\ncatch\n  try\n    options.version = fs.readFileSync(path.join(__dirname, './VERSION'), 'utf-8').trim()\n\nif argv.hostname\n  options.hostname = argv.hostname\n  updateVault()\nelse if os.type() is \"Darwin\"\n  options.hostname = \"dev.koding.com\"\n  updateVault()\nelse\n  { body } = require('sync-request') 'GET', 'https://p.koding.com/-/ip'\n  options.hostname = body.toString()\n  updateVault()\n"
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-init.yml",
          "type": "blob",
          "size": 0.21484375,
          "content": "version: '2'\n\nservices:\n  init:\n    image: koding/base\n    working_dir: /opt/koding\n    entrypoint: scripts/bootstrap-container\n    command: configure\n    env_file: .env-docker-compose\n    volumes:\n      - .:/opt/koding\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.0263671875,
          "content": "version: '2'\n\nservices:\n\n  backend:\n    image: koding/base\n    working_dir: /opt/koding\n    entrypoint: scripts/bootstrap-container\n    command: run backend\n    env_file: .env-docker-compose\n    volumes:\n      - .:/opt/koding\n    ports:\n      - 8090:8090\n    links:\n      - mongo\n      - postgres\n      - rabbitmq\n      - redis\n      - countly\n\n  client:\n    image: koding/base\n    working_dir: /opt/koding\n    entrypoint: scripts/bootstrap-container is_ready\n    command: make -C client development\n    env_file: .env-docker-compose\n    volumes:\n      - .:/opt/koding\n\n  client-landing:\n    image: koding/base\n    working_dir: /opt/koding\n    entrypoint: scripts/bootstrap-container is_ready\n    command: make -C client/landing dev\n    env_file: .env-docker-compose\n    volumes:\n      - .:/opt/koding\n\n  mongo:\n    image: mongo:3.2.8\n    command: --nojournal --noprealloc --smallfiles\n\n  postgres:\n    image: koding/postgres\n\n  countly:\n    image: countly/countly-server:16.06\n\n  rabbitmq:\n    image: rabbitmq:3-management\n\n  redis:\n    image: redis\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs_old",
          "type": "tree",
          "content": null
        },
        {
          "name": "elektron",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "icon.png",
          "type": "blob",
          "size": 19.2705078125,
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "node_modules_koding",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.2529296875,
          "content": "{\n  \"author\": \"Koding Team <team@koding.com>\",\n  \"name\": \"Koding\",\n  \"description\": \"Koding codebase\",\n  \"version\": \"0.9.2\",\n  \"homepage\": \"koding.com\",\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:koding/koding.git\"\n  },\n  \"main\": \"server/index.js\",\n  \"scripts\": {\n    \"preinstall\": \"./.npm-preinstall.sh\",\n    \"install\": \"./.npm-install.sh\",\n    \"postinstall\": \"./.npm-postinstall.sh\"\n  },\n  \"engines\": {\n    \"node\": \"6\"\n  },\n  \"dependencies\": {\n    \"amqp\": \"0.2.6\",\n    \"analytics-node\": \"2.1.0\",\n    \"appmetrics\": \"3.0.2\",\n    \"async\": \"1.5.0\",\n    \"aws-sdk\": \"2.7.21\",\n    \"backoff\": \"2.5.0\",\n    \"bluebird\": \"3.4.7\",\n    \"body-parser\": \"1.15.2\",\n    \"busboy\": \"0.2.13\",\n    \"cache-manager\": \"2.3.0\",\n    \"cli-table\": \"0.3.1\",\n    \"codo\": \"2.1.2\",\n    \"coffee-cache\": \"1.0.2\",\n    \"coffee-script\": \"1.12.4\",\n    \"coffee-unused\": \"0.2.1\",\n    \"coffeenode-zxcvbn\": \"1.0.1\",\n    \"colors\": \"1.1.2\",\n    \"cookie-parser\": \"1.4.3\",\n    \"cors\": \"2.8.1\",\n    \"cron\": \"1.2.1\",\n    \"csv\": \"1.1.0\",\n    \"csv-parse\": \"1.1.7\",\n    \"curlrequest\": \"1.0.1\",\n    \"dateformat\": \"2.0.0\",\n    \"debug\": \"2.6.0\",\n    \"deep-equal\": \"1.0.1\",\n    \"disposable-email-domains\": \"1.0.14\",\n    \"dns\": \"0.2.2\",\n    \"dogapi\": \"2.6.0\",\n    \"embedly\": \"2.1.0\",\n    \"es\": \"0.5.2\",\n    \"eventemitter2\": \"3.0.1\",\n    \"express\": \"4.14.0\",\n    \"faker\": \"3.1.0\",\n    \"geoip-lite\": \"1.1.8\",\n    \"github\": \"7.3.1\",\n    \"gitlab\": \"1.7.1\",\n    \"googleapis\": \"16.0.0\",\n    \"gulp\": \"3.9.1\",\n    \"hat\": \"0.0.3\",\n    \"helmet\": \"3.3.0\",\n    \"highlight.js\": \"9.9.0\",\n    \"htmlencode\": \"0.0.4\",\n    \"ip\": \"1.1.4\",\n    \"js-yaml\": \"3.7.0\",\n    \"json-format\": \"1.0.0\",\n    \"jsonify\": \"0.0.0\",\n    \"jsonwebtoken\": \"7.2.1\",\n    \"kite.js\": \"1.0.0\",\n    \"konstraints\": \"0.1.5\",\n    \"lodash\": \"4.17.4\",\n    \"lodash.clonedeep\": \"4.5.0\",\n    \"lru-cache\": \"4.0.2\",\n    \"marked\": \"0.3.6\",\n    \"mime\": \"1.3.4\",\n    \"minimist\": \"1.2.0\",\n    \"mkdirp\": \"0.5.1\",\n    \"mongodb\": \"2.1.21\",\n    \"nib\": \"1.1.2\",\n    \"node-dogstatsd\": \"0.0.6\",\n    \"node-sockjs-client\": \"1.0.7\",\n    \"node-syntaxhighlighter\": \"0.8.1\",\n    \"nodemailer\": \"2.7.0\",\n    \"oauth\": \"0.9.15\",\n    \"on-finished\": \"2.3.0\",\n    \"opentok\": \"2.5.0\",\n    \"optimist\": \"0.6.1\",\n    \"papertrail\": \"1.0.2\",\n    \"progress\": \"1.1.8\",\n    \"randomstring\": \"1.1.5\",\n    \"ratelimit.js\": \"1.8.0\",\n    \"read\": \"1.0.7\",\n    \"redis\": \"2.6.3\",\n    \"request\": \"2.79.0\",\n    \"sendmail\": \"1.1.1\",\n    \"shortid\": \"2.2.6\",\n    \"simple-recaptcha\": \"0.0.3\",\n    \"sockjs\": \"0.3.18\",\n    \"speakeasy\": \"1.0.3\",\n    \"stripcolorcodes\": \"0.1.0\",\n    \"stylus\": \"0.54.5\",\n    \"terraform-yml\": \"hakankaradis/stack-docs-search\",\n    \"toml-js\": \"0.0.8\",\n    \"tough-cookie\": \"2.3.2\",\n    \"traverse\": \"0.6.6\",\n    \"ua-parser-js\": \"0.7.12\",\n    \"uglify-js\": \"2.7.5\",\n    \"underscore\": \"1.8.3\",\n    \"url\": \"0.11.0\",\n    \"url-join\": \"1.1.0\",\n    \"url-parse\": \"1.1.7\",\n    \"uuid\": \"3.0.1\",\n    \"uuid-validate\": \"0.0.2\",\n    \"validator\": \"6.2.1\",\n    \"winston\": \"2.3.0\",\n    \"winston-papertrail\": \"1.0.4\",\n    \"xml2js\": \"0.4.17\",\n    \"yield-siftscience\": \"0.2.0\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"3.5.0\",\n    \"coffeelint\": \"1.16.0\",\n    \"crypto\": \"0.0.3\",\n    \"git-rev-sync\": \"1.8.0\",\n    \"mocha\": \"2.2.4\",\n    \"mongodb-migrate\": \"2.0.1\",\n    \"sync-request\": \"4.0.1\",\n    \"which\": \"1.2.12\"\n  },\n  \"optionalDependencies\": {}\n}\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "servers",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions",
          "type": "tree",
          "content": null
        },
        {
          "name": "watch-node",
          "type": "blob",
          "size": 0.7890625,
          "content": "#!/bin/bash\n\ntrap ctrl_c INT TERM KILL\nfunction ctrl_c() { kill -KILL $pid $$; }\n\npath=$@\nwatchfolder=$(dirname $1)\ncommand=\"node $path\"\n\n# echo\n# echo if you want to understand what this script is doing, un-comment the line below.\n# echo [watch-node $$] running $command and daemonizing, watching folder $watchfolder every 2 secs.\n# echo\n\n$command &\npid=$!\nwhile [[ true ]]; do\n\n\tfiles=$(find -L $watchfolder -type f -newermt '2 seconds ago' | grep -v \"\\.test\\.\" | grep -v \"models\\.json\")\n\n\tif [[ $files != \"\" ]]; then\n\t\techo [watch-node $$] files changed [$files] killing $pid $command\n\t\tkill -KILL $pid >/dev/null\n\t\techo [watch-node $$] new pid is $pid\n\tfi\n\tif ! (ps -p $pid >/dev/null); then\n\t\t$command &\n\t\tpid=$!\n\t\techo \"[watch-node $$] process (re)started new pid $pid cmd: $command\"\n\tfi\n\tsleep 2\ndone\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        },
        {
          "name": "wercker.yml",
          "type": "blob",
          "size": 11.876953125,
          "content": "box: koding/base@0.1.7\nno-response-timeout: 10\nservices:\n  - userminddeployer/postgresql9.3@0.0.7-usermind-9.3-1\n  - wercker/rabbitmq@1.0.1\n  - wercker/redis@0.0.8\n  - wercker/mongodb@1.0.1\n\nbuild:\n  steps:\n    - add-ssh-key:\n        keyname: DEPLOYMENT_KEY_V2\n    - script:\n        name: setup git identity\n        code: |\n          git config --global user.email 'sysops@koding.com'\n          git config --global user.name 'Koding Bot'\n    - script:\n        name: fetch pull requests\n        code: |\n          git config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pull/*'\n          git fetch --force --quiet origin\n    - script:\n        name: create version file\n        code: $WERCKER_ROOT/scripts/create_version.sh\n    - script:\n        name: build started\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH is in progress\" \"building\" 10\n    - script:\n        name: check package.json files\n        code: scripts/check_package_json_constraints.sh\n    - script:\n        name: setup nvm\n        code: |\n          source $HOME/.nvm/nvm.sh\n          nvm use 6\n    - script:\n        name: node modules\n        code: |\n          scripts/wercker/install-node-modules koding\n          npm install\n          scripts/wercker/update-node-modules\n    - script:\n        name: notify cebeci\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - build preparation finished\" \"building\" 30\n    - script:\n        name: copy deployment credentials\n        code: scripts/copy-deployment-credentials.sh\n    - script:\n        name: change mod of test instace private key\n        code: chmod 600 ./scripts/test-instance/koding-test-instances-2015-06.pem\n    - mktemp:\n        envvar: INSTANCE_IP\n    - script:\n        name: create data files\n        code: touch INSTANCE_DATA\n    - script:\n        name: run coffeelint\n        code: scripts/wercker/run-command node_modules/coffeelint/bin/coffeelint --quiet .\n    - script:\n        name: check configs\n        code: |\n          ./configure --config sandbox\n          ./configure --config prod\n    - script:\n        name: configure build\n        code: |\n          # dev build is here just for creating dev.toml for socialapi\n          ./configure --config dev     --projectRoot $WERCKER_SOURCE_DIR --ebEnvName $EB_ENV_NAME --version $(cat $WERCKER_ROOT/VERSION)\n          ./configure --config sandbox --projectRoot $WERCKER_SOURCE_DIR --ebEnvName $EB_ENV_NAME --version $(cat $WERCKER_ROOT/VERSION)\n    - script:\n        name: launch test hosts\n        code: |\n          scripts/wercker/run-command ./run exec scripts/wercker/launch-test-hosts | tee INSTANCE_DATA\n    - script:\n        name: check api consistency\n        code: scripts/wercker/run-command ./run exec scripts/api-generator.coffee --check\n    - script:\n        name: build client\n        code: |\n          make -C client dist\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - build client finished\" \"building\" 35\n    - wercker/s3sync@2.0.3:\n        source-dir: website/a/p/p/$(cat VERSION)/\n        bucket-url: s3://koding-assets/a/p/p/$(cat VERSION)/\n        key-id: $S3_KEY_ID\n        key-secret: $S3_KEY_SECRET\n        opts: \"--no-mime-magic --guess-mime-type --acl-public\"\n    - script:\n        name: build go binaries\n        code: go/build.sh\n    - script:\n        name: test go koding config\n        code: scripts/wercker/run-command ./run exec ./scripts/gotests.sh kites koding/kites/config\n    - script:\n        name: ensure JSON and generated files in go/src/koding are not stale\n        code: scripts/check-generated-files.sh\n    - script:\n        name: test klient\n        code: scripts/wercker/run-command scripts/test-klient.sh\n    - script:\n        name: test kd\n        code: scripts/wercker/run-command scripts/test-kd.sh\n    - script:\n        name: test kites\n        code: scripts/wercker/run-command go/src/koding/kites/e2etest/e2etest.sh\n    - script:\n        name: test kloud\n        code: scripts/wercker/run-command ./scripts/gotests.sh kites koding/kites/kloud/provider/... koding/kites/kloud/credential/... koding/kites/kloud/stack/... koding/kites/kloud/kloud/...\n    - script:\n        name: test koding/api\n        code: scripts/wercker/run-command ./scripts/gotests.sh koding/api/...\n    - script:\n        name: build backend finished\n        code: scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - build backend finished\" \"building\" 40\n    - script:\n        name: check social api code quality\n        code: scripts/wercker/run-command scripts/check_socialapi_code_quality.sh\n    - script:\n        name: check go codes with gometalinter\n        code: scripts/wercker/run-command scripts/gometalinter.sh\n    - script:\n        name: check client code quality\n        code: scripts/wercker/run-command scripts/check_client_code_quality.sh\n    - script:\n        name: testing backend started\n        code: scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - test backend started\" \"building\" 41\n    - script:\n        name: create postgresql tables\n        code: scripts/wercker/run-command scripts/wercker/create-postgresql-tables\n    - script:\n        name: prepare test data\n        code: scripts/wercker/run-command go run go/src/socialapi/workers/cmd/migrator/main.go -c go/src/socialapi/config/dev.toml\n    - script:\n        name: test social api\n        code: scripts/wercker/run-command scripts/wercker/test-social-api\n    - script:\n        name: test koding mongo models\n        code: scripts/wercker/run-command ./run exec go test koding/db/mongodb/modelhelper\n    - script:\n        name: test kontrol\n        code: scripts/wercker/run-command ./scripts/gotests.sh koding/kites/kontrol/kontrol\n    - script:\n        name: testing backend finished\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - test backend finished\" \"building\" 45\n    - script:\n        name: send test coverages\n        code: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -X gcov -X fix\n    - script:\n        name: delete deployment credentials\n        code: |\n          [ \"$CONFIG\" != \"prod\" ] && scripts/delete-deployment-credentials.sh\n    - script:\n        name: check connectivity\n        code: |\n          scripts/wercker/run-command ./run exec scripts/test-instance/check-connectivity INSTANCE_DATA\n    - script:\n        name: test nodejs\n        code: scripts/wercker/run-command scripts/node-testing/run-tests INSTANCE_DATA\n    - script:\n        name: testing client started\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - test client started\" \"building\" 46\n    - script:\n        name: run test suites\n        code: scripts/wercker/run-command scripts/ci/run-tests INSTANCE_DATA\n    - script:\n        name: testing client finished\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH - test client finished\" \"building\" 85\n  after-steps:\n    - script:\n        name: test suite timeline breakdown\n        code: |\n          cat TEST_SUITE_TIMELINE || :\n    - script:\n        name: setup nvm\n        code: |\n          source $HOME/.nvm/nvm.sh\n          nvm use 6\n    - script:\n        name: upload logs\n        code: |\n          [[ \"$WERCKER_RESULT\" == 'failed' ]] && ./run exec scripts/test-instance/upload-logs INSTANCE_DATA $WERCKER_BUILD_ID || exit 0\n    - script:\n        name: cleanup\n        code: ./run exec scripts/wercker/cleanup INSTANCE_DATA\n    - jessefulton/slack-notify:\n        subdomain: koding\n        token: $SLACK_TOKEN\n        channel: announce\n        username: wercker\n        icon_url: https://avatars3.githubusercontent.com/u/1695193?s=140\n    - script:\n        name: build finished\n        code: |\n          scripts/notify-cebeci.sh \"build\" \"<$WERCKER_BUILD_URL|build> of $WERCKER_GIT_BRANCH is $WERCKER_RESULT \" $WERCKER_RESULT 100\n    - script:\n        name: cat socialapi\n        code: |\n          tail -n 1000 /var/log/koding/social-api.log || :\n          tail -n 100 /var/log/koding/social-populartopic.log || :\n          tail -n 100 /var/log/koding/social-pinnedpost.log || :\n          tail -n 100 /var/log/koding/social-webhook.log || :\n          tail -n 100 /var/log/koding/social-webhookmiddleware.log || :\ndeploy:\n  steps:\n    - add-ssh-key:\n        keyname: DEPLOYMENT_KEY_V2\n    - script:\n        name: deploy started\n        code: |\n          $WERCKER_ROOT/scripts/notify-cebeci.sh \"deploy\" \"<$WERCKER_DEPLOY_URL|deploy> of $WERCKER_GIT_BRANCH started\" \"deploying\" 5\n    - script:\n        name: create version file\n        code: |\n          $WERCKER_ROOT/scripts/create_version.sh\n    - script:\n        name: setup nvm\n        code: |\n          source $HOME/.nvm/nvm.sh\n          nvm use 6\n    - script:\n        name: copy deployment credentials\n        code: scripts/copy-deployment-credentials.sh\n    - script:\n        name: build application\n        code: |\n          cd $WERCKER_ROOT\n\n          ./configure --without-envvars --config $CONFIG --projectRoot /opt/koding --ebEnvName $EB_ENV_NAME --version $(cat $WERCKER_ROOT/VERSION)\n\n          make -C client dist\n    - script:\n        name: zip\n        code: |\n          cd $WERCKER_ROOT\n\n          rm -rf .git .build node_modules client/node_modules client/builder/node_modules client/landing/node_modules client/.sprites\n          rm -rf go/bin go/pkg\n          zip -q --symlinks -r $(cat $WERCKER_ROOT/ARCHIVE_NAME) . || :\n\n          $WERCKER_ROOT/scripts/notify-cebeci.sh \"deploy\" \"created deploy file $ARCHIVE\" \"deploying\" 45\n    - script:\n        name: delete deployment credentials\n        code: scripts/delete-deployment-credentials.sh\n    - koding/eb-deploy@0.31.0:\n        access-key: $S3_KEY_ID\n        secret-key: $S3_KEY_SECRET\n        app-name: koding\n        env-name: $EB_ENV_NAME\n        version-label: $(cat $WERCKER_ROOT/ARCHIVE_NAME)\n        region: $EB_ENV_REGION\n        s3-bucket: $S3_EB_DEPLOY-$EB_ENV_REGION\n        s3-key: $(cat $WERCKER_ROOT/ARCHIVE_NAME)\n    - script:\n        name: notify-cebeci with eb trigger\n        code: |\n          $WERCKER_ROOT/scripts/notify-cebeci.sh \"deploy\" \"triggered $EB_ENV_NAME EB\" \"deploying\" 95\n\n  after-steps:\n    - jessefulton/slack-notify:\n        subdomain: koding\n        token: $SLACK_TOKEN\n        channel: announce\n        username: wercker\n        icon_url: https://avatars3.githubusercontent.com/u/1695193?s=140\n    - script:\n        name: notify-cebeci with result\n        code: |\n          $WERCKER_ROOT/scripts/notify-cebeci.sh \"deploy\" \"wercker is done with the <$WERCKER_DEPLOY_URL|deploy> of $WERCKER_GIT_BRANCH result: $WERCKER_RESULT\" $WERCKER_RESULT 100\n\n  s3-klient-production:\n    - script:\n        name: deploy klient to production channel\n        code: $WERCKER_ROOT/scripts/deploy-klient.sh\n\n  s3-klient-development:\n    - script:\n        name: deploy klient to development channel\n        code: $WERCKER_ROOT/scripts/deploy-klient.sh\n\n  s3-kd-production:\n    - script:\n        name: deploy kd to production channel\n        code: $WERCKER_ROOT/scripts/deploy-kd.sh\n\n  s3-kd-development:\n    - script:\n        name: deploy kd to development channel\n        code: $WERCKER_ROOT/scripts/deploy-kd.sh\n\n  s3-klient-managed:\n    - script:\n        name: deploy klient to managed channel\n        code: $WERCKER_ROOT/scripts/deploy-klient.sh\n\n  s3-klient-devmanaged:\n    - script:\n        name: deploy klient to devmanaged channel\n        code: $WERCKER_ROOT/scripts/deploy-klient.sh\n\n  s3-klient-and-kd-production:\n    - script:\n        name: deploy klient to managed channel and kd to production\n        code: |\n          $WERCKER_ROOT/scripts/deploy-klient.sh\n          $WERCKER_ROOT/scripts/deploy-kd.sh\n\n  s3-klient-and-kd-development:\n    - script:\n        name: deploy klient to devmanaged channel and kd to development\n        code: |\n          $WERCKER_ROOT/scripts/deploy-klient.sh\n          $WERCKER_ROOT/scripts/deploy-kd.sh\n"
        },
        {
          "name": "workers",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}