{
  "metadata": {
    "timestamp": 1736566626269,
    "page": 183,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dundee/gdu",
      "stars": 4142,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": "/.vscode\n/.idea\n/coverage.txt\n/dist\n/test_dir\n/vendor"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.6669921875,
          "content": "linters-settings:\n  errcheck:\n    check-blank: true\n  revive:\n    rules:\n      - name: blank-imports\n      - name: context-as-argument\n      - name: context-keys-type\n      - name: dot-imports\n      - name: error-return\n      - name: error-strings\n      - name: error-naming\n      - name: exported\n      - name: increment-decrement\n      - name: var-naming\n      - name: var-declaration\n      - name: package-comments\n      - name: range\n      - name: receiver-naming\n      - name: time-naming\n      - name: unexported-return\n      - name: indent-error-flow\n      - name: errorf\n      - name: empty-block\n      - name: superfluous-else\n      - name: unreachable-code\n      - name: redefines-builtin-id\n      # While we agree with this rule, right now it would break too many\n      # projects. So, we disable it by default.\n      - name: unused-parameter\n        disabled: true\n  gocyclo:\n    min-complexity: 25\n  dupl:\n    threshold: 100\n  goconst:\n    min-len: 3\n    min-occurrences: 3\n  lll:\n    line-length: 160\n  gocritic:\n    enabled-tags:\n      - diagnostic\n      - experimental\n      - opinionated\n      - performance\n      - style\n    disabled-checks:\n      - whyNoLint\n  funlen:\n    lines: 500\n    statements: 50\n  govet:\n    enable:\n      - shadow\n\nlinters:\n  disable-all: true\n  enable:\n    - bodyclose\n    - dogsled\n    - errcheck\n    - errorlint\n    - exhaustive\n    - exportloopref\n    - funlen\n    - goconst\n    - gocritic\n    - gocyclo\n    - gofmt\n    - goimports\n    - revive\n    - gosimple\n    - govet\n    - ineffassign\n    - lll\n    - nakedret\n    - staticcheck\n    - typecheck\n    - unparam\n    - unused\n    - whitespace\n\nissues:\n  exclude:\n    # We allow error shadowing\n    - 'declaration of \"err\" shadows declaration at'\n\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - gocyclo\n        - errcheck\n        - gosec\n        - funlen\n        - gocritic\n        - gochecknoglobals # Globals in test files are tolerated.\n        - goconst # Repeated consts in test files are tolerated.\n    # This rule is buggy and breaks on our `///Block` lines.  Disable for now.\n    - linters:\n        - gocritic\n      text: \"commentFormatting: put a space\"\n    # This rule incorrectly flags nil references after assert.Assert(t, x != nil)\n    - path: _test\\.go\n      text: \"SA5011\"\n      linters:\n        - staticcheck\n    - linters:\n        - lll\n      source: \"^//go:generate \"\n    - linters:\n        - lll\n        - gocritic\n      path: \\.resolvers\\.go\n      source: '^func \\(r \\*[a-zA-Z]+Resolvers\\) '\n\noutput:\n  formats:\n    - format: colored-line-number\n  sort-results: true\n"
        },
        {
          "name": ".tito",
          "type": "tree",
          "content": null
        },
        {
          "name": ".tool-versions",
          "type": "blob",
          "size": 0.013671875,
          "content": "golang 1.23.3\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2119140625,
          "content": "FROM docker.io/library/golang:1.23 as builder\n\nWORKDIR /app\n\nCOPY go.mod go.sum ./\nRUN go mod download\n\nCOPY . .\nRUN make build-static\n\nFROM scratch\n\nCOPY --from=builder /app/dist/gdu /opt/gdu\n\nENTRYPOINT [\"/opt/gdu\"]"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 3.986328125,
          "content": "# Installation\n\n[Arch Linux](https://archlinux.org/packages/extra/x86_64/gdu/):\n\n    pacman -S gdu\n\n[Debian](https://packages.debian.org/bullseye/gdu):\n\n    apt install gdu\n\n[Ubuntu](https://launchpad.net/~daniel-milde/+archive/ubuntu/gdu)\n\n    add-apt-repository ppa:daniel-milde/gdu\n    apt-get update\n    apt-get install gdu\n\n[NixOS](https://search.nixos.org/packages?channel=unstable&show=gdu&query=gdu):\n\n    nix-env -iA nixos.gdu\n\n[Homebrew](https://formulae.brew.sh/formula/gdu):\n\n    brew install -f gdu\n    # gdu will be installed as `gdu-go` to avoid conflicts with coreutils\n    gdu-go\n\n[Snap](https://snapcraft.io/gdu-disk-usage-analyzer):\n\n    snap install gdu-disk-usage-analyzer\n    snap connect gdu-disk-usage-analyzer:mount-observe :mount-observe\n    snap connect gdu-disk-usage-analyzer:system-backup :system-backup\n    snap alias gdu-disk-usage-analyzer.gdu gdu\n\n[Binenv](https://github.com/devops-works/binenv)\n\n    binenv install gdu\n\n[Go](https://pkg.go.dev/github.com/dundee/gdu):\n\n    go install github.com/dundee/gdu/v5/cmd/gdu@latest\n\n[Winget](https://github.com/microsoft/winget-pkgs/tree/master/manifests/d/dundee/gdu) (for Windows users):\n\n    winget install gdu\n\nYou can either run it as `gdu_windows_amd64.exe` or\n* add an alias with `Doskey`.\n* add `alias gdu=\"gdu_windows_amd64.exe\"` to your `~/.bashrc` file if using Git Bash to run it as `gdu`.\n\nYou might need to restart your terminal.\n\n[Scoop](https://github.com/ScoopInstaller/Main/blob/master/bucket/gdu.json):\n\n    scoop install gdu\n\n[X-cmd](https://www.x-cmd.com/start/)\n\n    x env use gdu\n\n## [COPR builds](https://copr.fedorainfracloud.org/coprs/faramirza/gdu/)\nCOPR Builds exist for the the following Linux Distros.\n\n[How to enable a CORP Repo](https://docs.pagure.org/copr.copr/how_to_enable_repo.html)\n\nAmazon Linux 2023:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/amazonlinux-2023-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\nEPEL 7:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/epel-7-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\nEPEL 8:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/epel-8-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\nEPEL 9:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/epel-9-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\nFedora 38:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/fedora-$releasever-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\nFedora 39:\n```\n[copr:copr.fedorainfracloud.org:faramirza:gdu]\nname=Copr repo for gdu owned by faramirza\nbaseurl=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/fedora-$releasever-$basearch/\ntype=rpm-md\nskip_if_unavailable=True\ngpgcheck=1\ngpgkey=https://download.copr.fedorainfracloud.org/results/faramirza/gdu/pubkey.gpg\nrepo_gpgcheck=0\nenabled=1\nenabled_metadata=1\n```\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.05078125,
          "content": "Copyright 2020-2021 Daniel Milde <daniel@milde.cz>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.1201171875,
          "content": "NAME := gdu\nMAJOR_VER := v5\nPACKAGE := github.com/dundee/$(NAME)/$(MAJOR_VER)\nCMD_GDU := cmd/gdu\nVERSION := $(shell git describe --tags 2>/dev/null)\nNAMEVER := $(NAME)-$(subst v,,$(VERSION))\nDATE := $(shell date +'%Y-%m-%d')\nGOFLAGS ?= -buildmode=pie -trimpath -mod=readonly -modcacherw -pgo=default.pgo\nGOFLAGS_STATIC ?= -trimpath -mod=readonly -modcacherw -pgo=default.pgo\nLDFLAGS := -s -w -extldflags '-static' \\\n\t-X '$(PACKAGE)/build.Version=$(VERSION)' \\\n\t-X '$(PACKAGE)/build.User=$(shell id -u -n)' \\\n\t-X '$(PACKAGE)/build.Time=$(shell LC_ALL=en_US.UTF-8 date)'\nTAR := tar\nifeq ($(shell uname -s),Darwin)\n\tTAR := gtar # brew install gnu-tar\nendif\n\nall: clean tarball build-all build-docker man clean-uncompressed-dist shasums\n\nrun:\n\tgo run $(PACKAGE)/$(CMD_GDU)\n\nvendor: go.mod go.sum\n\tgo mod vendor\n\ntarball: vendor\n\t-mkdir dist\n\t$(TAR) czf dist/$(NAMEVER).tgz --transform \"s,^,$(NAMEVER)/,\" --exclude dist --exclude test_dir --exclude coverage.txt *\n\nbuild:\n\t@echo \"Version: \" $(VERSION)\n\tmkdir -p dist\n\tGOFLAGS=\"$(GOFLAGS)\" CGO_ENABLED=0 go build -ldflags=\"$(LDFLAGS)\" -o dist/$(NAME) $(PACKAGE)/$(CMD_GDU)\n\nbuild-static:\n\t@echo \"Version: \" $(VERSION)\n\tmkdir -p dist\n\tGOFLAGS=\"$(GOFLAGS_STATIC)\" CGO_ENABLED=0 go build -ldflags=\"$(LDFLAGS)\" -o dist/$(NAME) $(PACKAGE)/$(CMD_GDU)\n\nbuild-docker:\n\t@echo \"Version: \" $(VERSION)\n\tdocker build . --tag ghcr.io/dundee/gdu:$(VERSION)\n\nbuild-all:\n\t@echo \"Version: \" $(VERSION)\n\t-mkdir dist\n\t-CGO_ENABLED=0 gox \\\n\t\t-os=\"darwin\" \\\n\t\t-arch=\"amd64 arm64\" \\\n\t\t-output=\"dist/gdu_{{.OS}}_{{.Arch}}\" \\\n\t\t-ldflags=\"$(LDFLAGS)\" \\\n\t\t$(PACKAGE)/$(CMD_GDU)\n\n\t-CGO_ENABLED=0 gox \\\n\t\t-os=\"windows\" \\\n\t\t-arch=\"amd64\" \\\n\t\t-output=\"dist/gdu_{{.OS}}_{{.Arch}}\" \\\n\t\t-ldflags=\"$(LDFLAGS)\" \\\n\t\t$(PACKAGE)/$(CMD_GDU)\n\n\t-CGO_ENABLED=0 gox \\\n\t\t-os=\"linux freebsd netbsd openbsd\" \\\n\t\t-output=\"dist/gdu_{{.OS}}_{{.Arch}}\" \\\n\t\t-ldflags=\"$(LDFLAGS)\" \\\n\t\t$(PACKAGE)/$(CMD_GDU)\n\n\tGOFLAGS=\"$(GOFLAGS)\" CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_amd64-x $(PACKAGE)/$(CMD_GDU)\n\tGOFLAGS=\"$(GOFLAGS_STATIC)\" CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_amd64_static $(PACKAGE)/$(CMD_GDU)\n\n\tCGO_ENABLED=0 GOOS=linux GOARM=5 GOARCH=arm go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_armv5l $(PACKAGE)/$(CMD_GDU)\n\tCGO_ENABLED=0 GOOS=linux GOARM=6 GOARCH=arm go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_armv6l $(PACKAGE)/$(CMD_GDU)\n\tCGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_armv7l $(PACKAGE)/$(CMD_GDU)\n\tCGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_linux_arm64 $(PACKAGE)/$(CMD_GDU)\n\tCGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -ldflags=\"$(LDFLAGS)\" -o dist/gdu_android_arm64 $(PACKAGE)/$(CMD_GDU)\n\n\tcd dist; for file in gdu_linux_* gdu_darwin_* gdu_netbsd_* gdu_openbsd_* gdu_freebsd_* gdu_android_*; do tar czf $$file.tgz $$file; done\n\tcd dist; for file in gdu_windows_*; do zip $$file.zip $$file; done\n\ngdu.1: gdu.1.md\n\tsed 's/{{date}}/$(DATE)/g' gdu.1.md > gdu.1.date.md\n\tpandoc gdu.1.date.md -s -t man > gdu.1\n\trm -f gdu.1.date.md\n\nman: gdu.1\n\tcp gdu.1 dist\n\tcd dist; tar czf gdu.1.tgz gdu.1\n\nshow-man:\n\tsed 's/{{date}}/$(DATE)/g' gdu.1.md > gdu.1.date.md\n\tpandoc gdu.1.date.md -s -t man | man -l -\n\ntest:\n\tgotestsum\n\ncoverage:\n\tgotestsum -- -race -coverprofile=coverage.txt -covermode=atomic ./...\n\ncoverage-html: coverage\n\tgo tool cover -html=coverage.txt\n\ngobench:\n\tgo test -bench=. $(PACKAGE)/pkg/analyze\n\nheap-profile:\n\tgo tool pprof -web http://localhost:6060/debug/pprof/heap\n\npgo:\n\twget -O cpu.pprof http://localhost:6060/debug/pprof/profile?seconds=30\n\tgo tool pprof -proto cpu.pprof default.pgo > merged.pprof\n\tmv merged.pprof default.pgo\n\ntrace:\n\twget -O trace.out http://localhost:6060/debug/pprof/trace?seconds=30\n\tgotraceui ./trace.out\n\nbenchmark:\n\tsudo cpupower frequency-set -g performance\n\thyperfine --export-markdown=bench-cold.md \\\n\t\t--prepare 'sync; echo 3 | sudo tee /proc/sys/vm/drop_caches' \\\n\t\t--ignore-failure \\\n\t\t'dua ~' 'duc index ~' 'ncdu -0 -o /dev/null ~' \\\n\t\t'diskus ~' 'du -hs ~' 'dust -d0 ~' 'pdu ~' \\\n\t\t'gdu -npc ~' 'gdu -gnpc ~' 'gdu -npc --use-storage ~'\n\thyperfine --export-markdown=bench-warm.md \\\n\t\t--warmup 5 \\\n\t\t--ignore-failure \\\n\t\t'dua ~' 'duc index ~' 'ncdu -0 -o /dev/null ~' \\\n\t\t'diskus ~' 'du -hs ~' 'dust -d0 ~' 'pdu ~' \\\n\t\t'gdu -npc ~' 'gdu -gnpc ~' 'gdu -npc --use-storage ~'\n\tsudo cpupower frequency-set -g schedutil\n\nlint:\n\tgolangci-lint run -c .golangci.yml\n\nclean:\n\tgo mod tidy\n\t-rm coverage.txt\n\t-rm -r test_dir\n\t-rm -r vendor\n\t-rm -r dist\n\nclean-uncompressed-dist:\n\tfind dist -type f -not -name '*.tgz' -not -name '*.zip' -delete\n\nshasums:\n\tcd dist; sha256sum * > sha256sums.txt\n\tcd dist; gpg --sign --armor --detach-sign sha256sums.txt\n\nrelease:\n\tgh release create -t \"gdu $(VERSION)\" $(VERSION) ./dist/*\n\ninstall-dev-dependencies:\n\tgo install gotest.tools/gotestsum@latest\n\tgo install github.com/mitchellh/gox@latest\n\tgo install honnef.co/go/gotraceui/cmd/gotraceui@master\n\tgo install github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n\n.PHONY: run build build-static build-all test gobench benchmark coverage coverage-html clean clean-uncompressed-dist man show-man release\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.4970703125,
          "content": "# go DiskUsage()\n\n<img src=\"./gdu.png\" alt=\"Gdu \" width=\"200\" align=\"right\">\n\n[![Codecov](https://codecov.io/gh/dundee/gdu/branch/master/graph/badge.svg)](https://codecov.io/gh/dundee/gdu)\n[![Go Report Card](https://goreportcard.com/badge/github.com/dundee/gdu)](https://goreportcard.com/report/github.com/dundee/gdu)\n[![Maintainability](https://api.codeclimate.com/v1/badges/30d793274607f599e658/maintainability)](https://codeclimate.com/github/dundee/gdu/maintainability)\n[![CodeScene Code Health](https://codescene.io/projects/13129/status-badges/code-health)](https://codescene.io/projects/13129)\n\nPretty fast disk usage analyzer written in Go.\n\nGdu is intended primarily for SSD disks where it can fully utilize parallel processing.\nHowever HDDs work as well, but the performance gain is not so huge.\n\n[![asciicast](https://asciinema.org/a/382738.svg)](https://asciinema.org/a/382738)\n\n<a href=\"https://repology.org/project/gdu/versions\">\n    <img src=\"https://repology.org/badge/vertical-allrepos/gdu.svg\" alt=\"Packaging status\" align=\"right\">\n</a>\n\n## Installation\n\nHead for the [releases page](https://github.com/dundee/gdu/releases) and download the binary for your system.\n\nUsing curl:\n\n    curl -L https://github.com/dundee/gdu/releases/latest/download/gdu_linux_amd64.tgz | tar xz\n    chmod +x gdu_linux_amd64\n    mv gdu_linux_amd64 /usr/bin/gdu\n\nSee the [installation page](./INSTALL.md) for other ways how to install Gdu to your system.\n\nOr you can use Gdu directly via Docker:\n\n    docker run --rm --init --interactive --tty --privileged --volume /:/mnt/root ghcr.io/dundee/gdu /mnt/root\n\n## Usage\n\n```\n  gdu [flags] [directory_to_scan]\n\nFlags:\n      --config-file string            Read config from file (default is $HOME/.gdu.yaml)\n  -g, --const-gc                      Enable memory garbage collection during analysis with constant level set by GOGC\n      --enable-profiling              Enable collection of profiling data and provide it on http://localhost:6060/debug/pprof/\n  -L, --follow-symlinks               Follow symlinks for files, i.e. show the size of the file to which symlink points to (symlinks to directories are not followed)\n  -h, --help                          help for gdu\n  -i, --ignore-dirs strings           Absolute paths to ignore (separated by comma) (default [/proc,/dev,/sys,/run])\n  -I, --ignore-dirs-pattern strings   Absolute path patterns to ignore (separated by comma)\n  -X, --ignore-from string            Read absolute path patterns to ignore from file\n  -f, --input-file string             Import analysis from JSON file\n  -l, --log-file string               Path to a logfile (default \"/dev/null\")\n  -m, --max-cores int                 Set max cores that Gdu will use. 12 cores available (default 12)\n  -c, --no-color                      Do not use colorized output\n  -x, --no-cross                      Do not cross filesystem boundaries\n      --no-delete                     Do not allow deletions\n  -H, --no-hidden                     Ignore hidden directories (beginning with dot)\n      --no-mouse                      Do not use mouse\n      --no-prefix                     Show sizes as raw numbers without any prefixes (SI or binary) in non-interactive mode\n  -p, --no-progress                   Do not show progress in non-interactive mode\n  -u, --no-unicode                    Do not use Unicode symbols (for size bar)\n  -n, --non-interactive               Do not run in interactive mode\n  -o, --output-file string            Export all info into file as JSON\n  -r, --read-from-storage             Read analysis data from persistent key-value storage\n      --sequential                    Use sequential scanning (intended for rotating HDDs)\n  -a, --show-apparent-size            Show apparent size\n  -d, --show-disks                    Show all mounted disks\n  -C, --show-item-count               Show number of items in directory\n  -M, --show-mtime                    Show latest mtime of items in directory\n  -B, --show-relative-size            Show relative size\n      --si                            Show sizes with decimal SI prefixes (kB, MB, GB) instead of binary prefixes (KiB, MiB, GiB)\n      --storage-path string           Path to persistent key-value storage directory (default \"/tmp/badger\")\n  -s, --summarize                     Show only a total in non-interactive mode\n  -t, --top int                       Show only top X largest files in non-interactive mode\n      --use-storage                   Use persistent key-value storage for analysis data (experimental)\n  -v, --version                       Print version\n      --write-config                  Write current configuration to file (default is $HOME/.gdu.yaml)\n\nBasic list of actions in interactive mode (show help modal for more):\n  ↑ or k                              Move cursor up\n  ↓ or j                              Move cursor down\n  → or Enter or l                     Go to highlighted directory\n  ← or h                              Go to parent directory\n  d                                   Delete the selected file or directory\n  e                                   Empty the selected directory\n  n                                   Sort by name\n  s                                   Sort by size\n  c                                   Show number of items in directory\n  ?                                   Show help modal\n```\n\n## Examples\n\n    gdu                                   # analyze current dir\n    gdu -a                                # show apparent size instead of disk usage\n    gdu --no-delete                       # prevent write operations\n    gdu <some_dir_to_analyze>             # analyze given dir\n    gdu -d                                # show all mounted disks\n    gdu -l ./gdu.log <some_dir>           # write errors to log file\n    gdu -i /sys,/proc /                   # ignore some paths\n    gdu -I '.*[abc]+'                     # ignore paths by regular pattern\n    gdu -X ignore_file /                  # ignore paths by regular patterns from file\n    gdu -c /                              # use only white/gray/black colors\n\n    gdu -n /                              # only print stats, do not start interactive mode\n    gdu -np /                             # do not show progress, useful when using its output in a script\n    gdu -nps /some/dir                    # show only total usage for given dir\n    gdu -nt 10 /                          # show top 10 largest files\n    gdu / > file                          # write stats to file, do not start interactive mode\n\n    gdu -o- / | gzip -c >report.json.gz   # write all info to JSON file for later analysis\n    zcat report.json.gz | gdu -f-         # read analysis from file\n\n    GOGC=10 gdu -g --use-storage /        # use persistent key-value storage for saving analysis data\n    gdu -r /                              # read saved analysis data from persistent key-value storage\n\n## Modes\n\nGdu has three modes: interactive (default), non-interactive and export.\n\nNon-interactive mode is started automatically when TTY is not detected (using [go-isatty](https://github.com/mattn/go-isatty)), for example if the output is being piped to a file, or it can be started explicitly by using a flag.\n\nExport mode (flag `-o`) outputs all usage data as JSON, which can be later opened using the `-f` flag.\n\nHard links are counted only once.\n\n## File flags\n\nFiles and directories may be prefixed by a one-character\nflag with following meaning:\n\n* `!` An error occurred while reading this directory.\n\n* `.` An error occurred while reading a subdirectory, size may be not correct.\n\n* `@` File is symlink or socket.\n\n* `H` Same file was already counted (hard link).\n\n* `e` Directory is empty.\n\n## Configuration file\n\nGdu can read (and write) YAML configuration file.\n\n`$HOME/.config/gdu/gdu.yaml` and `$HOME/.gdu.yaml` are checked for the presence of the config file by default.\n\nSee the [full list of all configuration options](configuration).\n\n### Examples\n\n* To configure gdu to permanently run in gray-scale color mode:\n\n```\necho \"no-color: true\" >> ~/.gdu.yaml\n```\n\n* To set default sorting in configuration file:\n\n```\nsorting:\n    by: name // size, name, itemCount, mtime\n    order: desc\n```\n\n* To configure gdu to set CWD variable when browsing directories:\n\n```\necho \"change-cwd: true\" >> ~/.gdu.yaml\n```\n\n* To save the current configuration\n\n```\ngdu --write-config\n```\n\n## Styling\n\nThere are wide options for how terminals can be colored.\nSome gdu primitives (like basic text) adapt to different color schemas, but the selected/highlighted row does not.\n\nIf the default look is not sufficient, it can be changed in configuration file, e.g.:\n\n```\nstyle:\n    selected-row:\n        text-color: black\n        background-color: \"#ff0000\"\n```\n\n## Deletion in background and in parallel (experimental)\n\nGdu can delete items in the background, thus not blocking the UI for additional work.\nTo enable:\n\n```\necho \"delete-in-background: true\" >> ~/.gdu.yaml\n```\n\nDirectory items can be also deleted in parallel, which might increase the speed of deletion.\nTo enable:\n\n```\necho \"delete-in-parallel: true\" >> ~/.gdu.yaml\n```\n\n## Memory usage\n\n### Automatic balancing\n\nGdu tries to balance performance and memory usage.\n\nWhen less memory is used by gdu than the total free memory of the host,\nthen Garbage Collection is disabled during the analysis phase completely to gain maximum speed.\n\nOtherwise GC is enabled.\nThe more memory is used and the less memory is free, the more often will the GC happen.\n\n### Manual memory usage control\n\nIf you want manual control over Garbage Collection, you can use `--const-gc` / `-g` flag.\nIt will run Garbage Collection during the analysis phase with constant level of aggressiveness.\nAs a result, the analysis will be about 25% slower and will consume about 30% less memory.\nTo change the level, you can set the `GOGC` environment variable to specify how often the garbage collection will happen.\nLower value (than 100) means GC will run more often. Higher means less often. Negative number will stop GC.\n\nExample running gdu with constant GC, but not so aggressive as default:\n\n```\nGOGC=200 gdu -g /\n```\n\n## Saving analysis data to persistent key-value storage (experimental)\n\nGdu can store the analysis data to persistent key-value storage instead of just memory.\nGdu will run much slower (approx 10x) but it should use much less memory (when using small GOGC as well).\nGdu can also reopen with the saved data.\nCurrently only BadgerDB is supported as the key-value storage (embedded).\n\n```\nGOGC=10 gdu -g --use-storage /    # saves analysis data to key-value storage\ngdu -r /                          # reads just saved data, does not run analysis again\n```\n\n## Running tests\n\n    make install-dev-dependencies\n    make test\n\n## Profiling\n\nGdu can collect profiling data when the `--enable-profiling` flag is set.\nThe data are provided via embedded http server on URL `http://localhost:6060/debug/pprof/`.\n\nYou can then use e.g. `go tool pprof -web http://localhost:6060/debug/pprof/heap`\nto open the heap profile as SVG image in your web browser.\n\n## Benchmarks\n\nBenchmarks were performed on 50G directory (100k directories, 400k files) on 500 GB SSD using [hyperfine](https://github.com/sharkdp/hyperfine).\nSee `benchmark` target in [Makefile](Makefile) for more info.\n\n### Cold cache\n\nFilesystem cache was cleared using `sync; echo 3 | sudo tee /proc/sys/vm/drop_caches`.\n\n| Command | Mean [s] | Min [s] | Max [s] | Relative |\n|:---|---:|---:|---:|---:|\n| `diskus ~` | 3.126 ± 0.020 | 3.087 | 3.155 | 1.00 |\n| `gdu -npc ~` | 3.132 ± 0.019 | 3.111 | 3.173 | 1.00 ± 0.01 |\n| `gdu -gnpc ~` | 3.136 ± 0.012 | 3.112 | 3.155 | 1.00 ± 0.01 |\n| `pdu ~` | 3.657 ± 0.013 | 3.641 | 3.677 | 1.17 ± 0.01 |\n| `dust -d0 ~` | 3.933 ± 0.144 | 3.849 | 4.213 | 1.26 ± 0.05 |\n| `dua ~` | 3.994 ± 0.073 | 3.827 | 4.134 | 1.28 ± 0.02 |\n| `gdu -npc --use-storage ~` | 12.812 ± 0.078 | 12.644 | 12.912 | 4.10 ± 0.04 |\n| `du -hs ~` | 14.120 ± 0.213 | 13.969 | 14.703 | 4.52 ± 0.07 |\n| `duc index ~` | 14.567 ± 0.080 | 14.385 | 14.657 | 4.66 ± 0.04 |\n| `ncdu -0 -o /dev/null ~` | 14.963 ± 0.254 | 14.759 | 15.637 | 4.79 ± 0.09 |\n\n### Warm cache\n\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\n|:---|---:|---:|---:|---:|\n| `pdu ~` | 226.6 ± 3.7 | 219.6 | 231.2 | 1.00 |\n| `diskus ~` | 227.7 ± 5.2 | 221.6 | 239.9 | 1.00 ± 0.03 |\n| `dust -d0 ~` | 400.1 ± 7.1 | 386.7 | 409.4 | 1.77 ± 0.04 |\n| `dua ~` | 444.9 ± 2.4 | 442.4 | 448.9 | 1.96 ± 0.03 |\n| `gdu -npc ~` | 451.3 ± 3.8 | 445.9 | 458.5 | 1.99 ± 0.04 |\n| `gdu -gnpc ~` | 516.1 ± 6.7 | 503.1 | 527.5 | 2.28 ± 0.05 |\n| `du -hs ~` | 905.0 ± 3.9 | 901.2 | 913.4 | 3.99 ± 0.07 |\n| `duc index ~` | 1053.0 ± 5.1 | 1046.2 | 1064.1 | 4.65 ± 0.08 |\n| `ncdu -0 -o /dev/null ~` | 1653.9 ± 5.7 | 1645.9 | 1663.0 | 7.30 ± 0.12 |\n| `gdu -npc --use-storage ~` | 9754.9 ± 688.7 | 8403.8 | 10427.4 | 43.04 ± 3.12 |\n\n## Alternatives\n\n* [ncdu](https://dev.yorhel.nl/ncdu) - NCurses based tool written in pure `C` (LTS) or `zig` (Stable)\n* [godu](https://github.com/viktomas/godu) - Analyzer with a carousel like user interface\n* [dua](https://github.com/Byron/dua-cli) - Tool written in `Rust` with interface similar to gdu (and ncdu)\n* [diskus](https://github.com/sharkdp/diskus) - Very simple but very fast tool written in `Rust`\n* [duc](https://duc.zevv.nl/) - Collection of tools with many possibilities for inspecting and visualising disk usage\n* [dust](https://github.com/bootandy/dust) - Tool written in `Rust` showing tree like structures of disk usage\n* [pdu](https://github.com/KSXGitHub/parallel-disk-usage) - Tool written in `Rust` showing tree like structures of disk usage\n\n## Notes\n\n[HDD icon created by Nikita Golubev - Flaticon](https://www.flaticon.com/free-icons/hdd)"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.16796875,
          "content": "coverage:\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 2%\n        informational: true\n    patch:\n      default:\n        informational: true"
        },
        {
          "name": "configuration.md",
          "type": "blob",
          "size": 3.7353515625,
          "content": "# YAML file configuration options\n\nGdu provides an additional set of configuration options to the usual command line options.\n\nYou can get the full list of all possible options by running:\n\n```\ngdu --write-config\n```\n\nThis will create file `$HOME/.gdu.yaml` with all the options set to default values.\n\nLet's go through them one by one:\n\n#### `log-file`\n\nPath to a logfile (default \"/dev/null\")\n\n#### `input-file`\n\nImport analysis from JSON file\n\n#### `output-file`\n\nExport all info into file as JSON\n\n#### `ignore-dirs`\n\nAbsolute paths to ignore (separated by comma) (default [/proc,/dev,/sys,/run])\n\n#### `ignore-dir-patterns`\n\nAbsolute path regex patterns to ignore (separated by comma)\n\n#### `ignore-from-file`\n\nRead absolute path regex patterns to ignore from file\n\n#### `max-cores`\n\nSet max cores that Gdu will use.\n\n#### `sequential-scanning`\n\nUse sequential scanning (intended for rotating HDDs)\n\n#### `show-apparent-size`\n\nShow apparent size\n\n#### `show-relative-size`\n\nShow relative size\n\n#### `show-item-count`\n\nShow number of items in directory\n\n#### `no-color`\n\nDo not use colorized output\n\n#### `no-mouse`\n\nDo not use mouse\n\n#### `non-interactive`\n\nDo not run in interactive mode\n\n#### `no-progress`\n\nDo not show progress in non-interactive mode\n\n#### `no-cross`\n\nDo not cross filesystem boundaries\n\n#### `no-hidden`\n\nIgnore hidden directories (beginning with dot)\n\n#### `no-delete`\n\nDo not allow deletions\n\n#### `follow-symlinks`\n\nFollow symlinks for files, i.e. show the size of the file to which symlink points to (symlinks to directories are not followed)\n\n#### `profiling`\n\nEnable collection of profiling data and provide it on http://localhost:6060/debug/pprof/\n\n#### `const-gc`\n\nEnable memory garbage collection during analysis with constant level set by GOGC\n\n#### `use-storage`\n\nUse persistent key-value storage for analysis data (experimental)\n\n#### `storage-path`\n\nPath to persistent key-value storage directory (default is /tmp/badger)\n\n#### `read-from-storage`\n\nRead analysis data from persistent key-value storage\n\n#### `summarize`\n\nShow only a total in non-interactive mode\n\n#### `use-si-prefix`\n\nShow sizes with decimal SI prefixes (kB, MB, GB) instead of binary prefixes (KiB, MiB, GiB)\n\n#### `no-prefix`\n\nShow sizes as raw numbers without any prefixes (SI or binary) in non-interactive mode\n\n#### `change-cwd`\n\nSet CWD variable when browsing directories\n\n#### `delete-in-background`\n\nDelete items in the background, not blocking the UI from work\n\n#### `delete-in-parallel`\n\nDelete items in parallel, which might increase the speed of deletion\n\n#### `style.selected-row.text-color`\n\nColor of text for the selected row\n\n#### `style.selected-row.background-color`\n\nBackground color for the selected row\n\n#### `style.progress-modal.current-item-path-max-len`\n\nMaximum length of file path for the current item in progress bar.\nWhen the length is reached, the path is shortened with \"/.../\".\n\n#### `style.use-old-size-bar`\n\nShow size bar without Unicode symbols.\n\n#### `style.footer.text-color`\n\nColor of text for footer bar\n\n#### `style.footer.background-color`\n\nBackground color for footer bar\n\n#### `style.footer.number-color`\n\nColor of numbers displayed in the footer\n\n#### `style.header.text-color`\n\nColor of text for header bar\n\n#### `style.header.background-color`\n\nBackground color for header bar\n\n#### `style.header.hidden`\n\nHide the header bar\n\n#### `style.result-row.number-color`\n\nColor of numbers in result rows\n\n#### `style.result-row.directory-color`\n\nColor of directory names in result rows\n\n#### `sorting.by`\n\nSort items. Possible values:\n* name - name of the item\n* size - usage or apparent size\n* itemCount - number of items in the folder tree\n* mtime - modification time\n\n#### `sorting.order`\n\nSet sorting order. Possible values:\n* asc - ascending order\n* desc - descending order"
        },
        {
          "name": "default.pgo",
          "type": "blob",
          "size": 61.470703125,
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gdu.1",
          "type": "blob",
          "size": 3.8994140625,
          "content": ".\\\" Automatically generated by Pandoc 3.1.11.1\n.\\\"\n.TH \"gdu\" \"1\" \"2024\\-12\\-30\" \"\" \"\"\n.SH NAME\ngdu \\- Pretty fast disk usage analyzer written in Go\n.SH SYNOPSIS\n\\f[B]gdu [flags] [directory_to_scan]\\f[R]\n.SH DESCRIPTION\nPretty fast disk usage analyzer written in Go.\n.PP\nGdu is intended primarily for SSD disks where it can fully utilize\nparallel processing.\nHowever HDDs work as well, but the performance gain is not so huge.\n.SH OPTIONS\n\\f[B]\\-h\\f[R], \\f[B]\\-\\-help\\f[R][=false] help for gdu\n.PP\n\\f[B]\\-i\\f[R], \\f[B]\\-\\-ignore\\-dirs\\f[R]=[/proc,/dev,/sys,/run]\nAbsolute paths to ignore (separated by comma)\n.PP\n\\f[B]\\-I\\f[R], \\f[B]\\-\\-ignore\\-dirs\\-pattern\\f[R] Absolute path\npatterns to ignore (separated by comma)\n.PP\n\\f[B]\\-X\\f[R], \\f[B]\\-\\-ignore\\-from\\f[R] Read absolute path patterns to\nignore from file\n.PP\n\\f[B]\\-l\\f[R], \\f[B]\\-\\-log\\-file\\f[R]=\\[dq]/dev/null\\[dq] Path to a\nlogfile\n.PP\n\\f[B]\\-m\\f[R], \\f[B]\\-\\-max\\-cores\\f[R] Set max cores that Gdu will use.\n.PP\n\\f[B]\\-c\\f[R], \\f[B]\\-\\-no\\-color\\f[R][=false] Do not use colorized\noutput\n.PP\n\\f[B]\\-x\\f[R], \\f[B]\\-\\-no\\-cross\\f[R][=false] Do not cross filesystem\nboundaries\n.PP\n\\f[B]\\-H\\f[R], \\f[B]\\-\\-no\\-hidden\\f[R][=false] Ignore hidden\ndirectories (beginning with dot)\n.PP\n\\f[B]\\-L\\f[R], \\f[B]\\-\\-follow\\-symlinks\\f[R][=false] Follow symlinks\nfor files, i.e.\\ show the size of the file to which symlink points to\n(symlinks to directories are not followed)\n.PP\n\\f[B]\\-n\\f[R], \\f[B]\\-\\-non\\-interactive\\f[R][=false] Do not run in\ninteractive mode\n.PP\n\\f[B]\\-p\\f[R], \\f[B]\\-\\-no\\-progress\\f[R][=false] Do not show progress\nin non\\-interactive mode\n.PP\n\\f[B]\\-u\\f[R], \\f[B]\\-\\-no\\-unicode\\f[R][=false] Do not use Unicode\nsymbols (for size bar)\n.PP\n\\f[B]\\-s\\f[R], \\f[B]\\-\\-summarize\\f[R][=false] Show only a total in\nnon\\-interactive mode\n.PP\n\\f[B]\\-t\\f[R], \\f[B]\\-\\-top\\f[R][=0] Show only top X largest files in\nnon\\-interactive mode\n.PP\n\\f[B]\\-d\\f[R], \\f[B]\\-\\-show\\-disks\\f[R][=false] Show all mounted disks\n.PP\n\\f[B]\\-a\\f[R], \\f[B]\\-\\-show\\-apparent\\-size\\f[R][=false] Show apparent\nsize\n.PP\n\\f[B]\\-C\\f[R], \\f[B]\\-\\-show\\-item\\-count\\f[R][=false] Show number of\nitems in directory\n.PP\n\\f[B]\\-M\\f[R], \\f[B]\\-\\-show\\-mtime\\f[R][=false] Show latest mtime of\nitems in directory\n.PP\n\\f[B]\\-\\-si\\f[R][=false] Show sizes with decimal SI prefixes (kB, MB,\nGB) instead of binary prefixes (KiB, MiB, GiB)\n.PP\n\\f[B]\\-\\-no\\-prefix\\f[R][=false] Show sizes as raw numbers without any\nprefixes (SI or binary) in non\\-interactive mode\n.PP\n\\f[B]\\-\\-no\\-mouse\\f[R][=false] Do not use mouse\n.PP\n\\f[B]\\-\\-no\\-delete\\f[R][=false] Do not allow deletions\n.PP\n\\f[B]\\-f\\f[R], \\f[B]\\-\\-input\\-file\\f[R] Import analysis from JSON file.\nIf the file is \\[dq]\\-\\[dq], read from standard input.\n.PP\n\\f[B]\\-o\\f[R], \\f[B]\\-\\-output\\-file\\f[R] Export all info into file as\nJSON.\nIf the file is \\[dq]\\-\\[dq], write to standard output.\n.PP\n\\f[B]\\-\\-config\\-file\\f[R]=\\[dq]$HOME/.gdu.yaml\\[dq] Read config from\nfile\n.PP\n\\f[B]\\-\\-write\\-config\\f[R][=false] Write current configuration to file\n(default is $HOME/.gdu.yaml)\n.PP\n\\f[B]\\-g\\f[R], \\f[B]\\-\\-const\\-gc\\f[R][=false] Enable memory garbage\ncollection during analysis with constant level set by GOGC\n.PP\n\\f[B]\\-\\-enable\\-profiling\\f[R][=false] Enable collection of profiling\ndata and provide it on http://localhost:6060/debug/pprof/\n.PP\n\\f[B]\\-\\-use\\-storage\\f[R][=false] Use persistent key\\-value storage for\nanalysis data (experimental)\n.PP\n\\f[B]\\-r\\f[R], \\f[B]\\-\\-read\\-from\\-storage\\f[R][=false] Read analysis\ndata from persistent key\\-value storage\n.PP\n\\f[B]\\-v\\f[R], \\f[B]\\-\\-version\\f[R][=false] Print version\n.SH FILE FLAGS\nFiles and directories may be prefixed by a one\\-character flag with\nfollowing meaning:\n.TP\n\\f[B]!\\f[R]\nAn error occurred while reading this directory.\n.TP\n\\f[B].\\f[R]\nAn error occurred while reading a subdirectory, size may be not correct.\n.TP\n\\f[B]\\[at]\\f[R]\nFile is symlink or socket.\n.TP\n\\f[B]H\\f[R]\nSame file was already counted (hard link).\n.TP\n\\f[B]e\\f[R]\nDirectory is empty.\n"
        },
        {
          "name": "gdu.1.md",
          "type": "blob",
          "size": 3.3515625,
          "content": "---\ndate: {{date}}\nsection: 1\ntitle: gdu\n---\n\n# NAME\n\ngdu - Pretty fast disk usage analyzer written in Go\n\n# SYNOPSIS\n\n**gdu \\[flags\\] \\[directory_to_scan\\]**\n\n# DESCRIPTION\n\nPretty fast disk usage analyzer written in Go.\n\nGdu is intended primarily for SSD disks where it can fully utilize\nparallel processing. However HDDs work as well, but the performance gain\nis not so huge.\n\n# OPTIONS\n\n**-h**, **\\--help**\\[=false\\] help for gdu\n\n**-i**, **\\--ignore-dirs**=\\[/proc,/dev,/sys,/run\\] Absolute paths to\nignore (separated by comma)\n\n**-I**, **\\--ignore-dirs-pattern** Absolute path patterns to\nignore (separated by comma)\n\n**-X**, **\\--ignore-from** Read absolute path patterns to ignore from file\n\n**-l**, **\\--log-file**=\\\"/dev/null\\\" Path to a logfile\n\n**-m**, **\\--max-cores** Set max cores that Gdu will use.\n\n**-c**, **\\--no-color**\\[=false\\] Do not use colorized output\n\n**-x**, **\\--no-cross**\\[=false\\] Do not cross filesystem boundaries\n\n**-H**, **\\--no-hidden**\\[=false\\] Ignore hidden directories (beginning with dot)\n\n**-L**, **\\--follow-symlinks**\\[=false\\] Follow symlinks for files, i.e. show the\nsize of the file to which symlink points to (symlinks to directories are not followed)\n\n**-n**, **\\--non-interactive**\\[=false\\] Do not run in interactive mode\n\n**-p**, **\\--no-progress**\\[=false\\] Do not show progress in\nnon-interactive mode\n\n**-u**, **\\--no-unicode**\\[=false\\] Do not use Unicode symbols (for size bar)\n\n**-s**, **\\--summarize**\\[=false\\] Show only a total in non-interactive mode\n\n**-t**, **\\--top**\\[=0\\] Show only top X largest files in non-interactive mode\n\n**-d**, **\\--show-disks**\\[=false\\] Show all mounted disks\n\n**-a**, **\\--show-apparent-size**\\[=false\\] Show apparent size\n\n**-C**, **\\--show-item-count**\\[=false\\] Show number of items in directory\n\n**-M**, **\\--show-mtime**\\[=false\\] Show latest mtime of items in directory\n\n**\\--si**\\[=false\\] Show sizes with decimal SI prefixes (kB, MB, GB) instead of binary prefixes (KiB, MiB, GiB)\n\n**\\--no-prefix**\\[=false\\] Show sizes as raw numbers without any prefixes (SI or binary) in non-interactive mode\n\n**\\--no-mouse**\\[=false\\] Do not use mouse\n\n**\\--no-delete**\\[=false\\] Do not allow deletions\n\n**-f**, **\\--input-file** Import analysis from JSON file. If the file is \\\"-\\\", read from standard input.\n\n**-o**, **\\--output-file** Export all info into file as JSON. If the file is \\\"-\\\", write to standard output.\n\n**\\--config-file**=\\\"$HOME/.gdu.yaml\\\"             Read config from file\n\n**\\--write-config**\\[=false\\] Write current configuration to file (default is $HOME/.gdu.yaml)\n\n**-g**, **\\--const-gc**\\[=false\\] Enable memory garbage collection during analysis with constant level set by GOGC\n\n**\\--enable-profiling**\\[=false\\] Enable collection of profiling data and provide it on http://localhost:6060/debug/pprof/\n\n**\\--use-storage**\\[=false\\] Use persistent key-value storage for analysis data (experimental)\n\n**-r**, **\\--read-from-storage**\\[=false\\] Read analysis data from persistent key-value storage\n\n**-v**, **\\--version**\\[=false\\] Print version\n\n# FILE FLAGS\n\nFiles and directories may be prefixed by a one-character\nflag with following meaning:\n\n**!**\n\n:   An error occurred while reading this directory.\n\n**.**\n\n:   An error occurred while reading a subdirectory, size may be not correct.\n\n**\\@**\n\n:  File is symlink or socket.\n\n**H**\n\n:  Same file was already counted (hard link).\n\n**e**\n\n:  Directory is empty.\n"
        },
        {
          "name": "gdu.png",
          "type": "blob",
          "size": 128.5712890625,
          "content": null
        },
        {
          "name": "gdu.spec",
          "type": "blob",
          "size": 7.404296875,
          "content": "Name:           gdu\nVersion:        5.30.1\nRelease:        1\nSummary:        Pretty fast disk usage analyzer written in Go\n\nLicense:        MIT\nURL:            https://github.com/dundee/gdu\n\nSource0:        https://github.com/dundee/gdu/archive/refs/tags/v%{version}.tar.gz\n\nBuildRequires:  golang\nBuildRequires:  systemd-rpm-macros\nBuildRequires:  git\n\nProvides:       %{name} = %{version}\n\n%description\nPretty fast disk usage analyzer written in Go.\n\n%global debug_package %{nil}\n\n%prep\n%autosetup -n %{name}-%{version}\n\n%build\nGO111MODULE=on CGO_ENABLED=0 go build \\\n-trimpath \\\n-buildmode=pie \\\n-mod=readonly \\\n-modcacherw \\\n-ldflags \\\n\"-s -w \\\n-X 'github.com/dundee/gdu/v5/build.Version=v%{version}' \\\n-X 'github.com/dundee/gdu/v5/build.User=$(id -u -n)' \\\n-X 'github.com/dundee/gdu/v5/build.Time=$(LC_ALL=en_US.UTF-8 date)'\" \\\n-o %{name} github.com/dundee/gdu/v5/cmd/gdu\n\n%install\nrm -rf $RPM_BUILD_ROOT\ninstall -Dpm 0755 %{name} %{buildroot}%{_bindir}/%{name}\ninstall -Dpm 0755 %{name}.1 $RPM_BUILD_ROOT%{_mandir}/man1/gdu.1\n\n%check\n\n%post\n\n%preun\n\n%files\n%{_bindir}/gdu\n%{_mandir}/man1/gdu.1.gz\n\n%changelog\n* Mon Dec 30 2024 Daniel Milde - 5.30.1-1\n- fix: set default colors when config file does not exist\n* Mon Dec 30 2024 Daniel Milde - 5.30.0-1\n- feat: show top largest files using -t or --top option in #391\n- feat: introduce more style options in #396\n* Mon Jun 17 2024 Daniel Milde - 5.29.0-1\n- feat: support for reading gzip, bzip2 and xz files by @dundee in #363\n- feat: add --show-mtime (-M) option by @dundee in #350\n- feat: add option --no-unicode to disable unicode symbols by @dundee in #362\n- fix: division by zero error in formatFileRow by @xroberx in #359\n* Sun Apr 21 2024 Danie de Jager - 5.28.0-1\n- feat: delete/empty items in background by @dundee in #336\n- feat: add --show-item-count (-C) option by @ramgp in #332\n- feat: add --no-delete option by @ramgp in #333\n- feat: ignore item by pressing I by @dundee in #345\n- feat: delete directory items in parallel by @dundee in #340\n- feat: add --sequential option for sequential scanning by @dundee in #322\n* Sun Feb 18 2024 Danie de Jager - 5.27.0-1\n- feat: export in interactive mode by @kadogo in #298\n- feat: handle vim-style navigation in confirmation by @samihda in #283\n- fix: panic with Interface Conversion Nil Error by @ShivamB25 in #274\n- fix: Enter key properly working when reading analysis from file by @dundee in #312\n- fix: check if type matches for selected device by @dundee in #318\n- ci: package gdu in docker container by @rare-magma in #313\n- ci: add values for building gdu with tito by @daniejstriata in #288\n- ci: change Winget Releaser job to ubuntu-latest by @sitiom in #271\n* Tue Feb 13 2024 Danie de Jager - 5.26.0-1\n- feat: use key-value store for analysis data in #297\n- feat: use profile-guided optimization in #286\n* Fri Dec 1 2023 Danie de Jager - 5.25.0-2\n- Improved SPEC to build on AL2023.\n* Tue Jun 6 2023 Danie de Jager - 5.25.0-1\n- feat: use unicode block elements in size bar in #255\n* Thu Jun 1 2023 Danie de Jager - 5.24.0-1\n- feat: add ctrl+z for job control by @yurenchen000 in #250\n- feat: upgrade dependencies by @dundee in #252\n* Thu May 11 2023 Danie de Jager - 5.23.0-2\n- Compiled with golang 1.19.9\n* Tue Apr 11 2023 Danie de Jager - 5.23.0-1\n- feat: added configuration option to change CWD when browsing directories by @leapfog in #230\n- fix: do not show help modal when confirm modal is already opened by @dundee in #237\n* Mon Feb 6 2023 Danie de Jager - 5.22.0-1\n- feat: added option to follow symlinks in #206\n- fix: ignore mouse events when modal is opened in #205\n- Updated SPEC file used for rpm creation by @daniejstriata in #198\n* Mon Jan 9 2023 Danie de Jager - 5.21.1-2\n- updated SPEC file to support builds on Fedora\n* Mon Jan 9 2023 Danie de Jager - 5.21.1-1\n- fix: correct open command for Win\n* Wed Jan 4 2023 Danie de Jager - 5.21.0-1\n- feat: mark multiple items for deletion by @dundee in #193\n- feat: move cursor to next row when marked by @dundee in #194\n- Use GNU tar on Darwin to fix build error by @sryze in #188\n* Mon Oct 24 2022 Danie de Jager - 5.20.0-1\n- feat: set default sorting using config option\n- feat: open file or directory in external program\n- fix: check reference type\n* Wed Sep 28 2022 Danie de Jager - 5.19.0-1\n- feat: upgrade all dependencies\n- feat: bump go version to 1.18\n- feat: format negative numbers correctly\n- feat: try to read config from ~/.config/gdu/gdu.yaml first\n- test: export formatting\n- docs: config file default locations\n* Sun Sep 18 2022 Danie de Jager - 5.18.1-1\n- fix: correct config file option regex\n- fix: read non-default config file properly in #175\n- feat: crop current item path to 70 chars in #173\n- feat: show elapsed time in progress modal\n- feat: configuration option for setting maximum length of the path for current item in the progress modal in #174\n* Tue Sep 13 2022 Danie de Jager - 5.17.1-1\n- fix: nul log file for Windows (#171)\n- fix: increase the vertical size of the progress modal (#172)\n- feat: added possibility to change text and background color of the selected row by @dundee in #170\n* Thu Sep 8 2022 Danie de Jager - 5.16.0-1\n- feat: support for reading (and writing) configuration to YAML file\n- feat: initial mouse support by @dundee in #165\n- add mtime for Windows by @mcoret in #157\n- openbsd fixes by @dundee in #164\n* Wed Aug 10 2022 Danie de Jager - 5.15.0-1\n- feat: show sizes as raw numbers without prefixes by @dundee in #147\n- feat: natural sorting by @dundee in #156\n- fix: honor --summarize when reading analysis by @Riatre in #149\n- fix: upgrade dependencies by @phanirithvij in #153\n- ci: generate release tarballs with vendor directory by @CyberTailor in #148\n* Mon Jul 18 2022 Danie de Jager - 5.14.0-2\n* Thu May 26 2022 Danie de Jager - 5.14.0-1\n- sort items by name if usage/size/count is the same (#143)\n* Mon Feb 21 2022 Danie de Jager - 5.13.2\n- able to go back to devices list from analyzed directory\n* Thu Feb 10 2022 Danie de Jager - 5.13.1\n- properly count only the first hard link size on a rescan\n- do not panic if path does not start with a slash\n* Sat Jan 29 2022 Danie de Jager - 5.13.0-1\n- lower memory usage\n- possibility to toggle between bar graph relative to the size of the directory or the biggest file\n- added option --si for showing sizes with decimal SI prefixes\n- fixed freeze when r key binding is being hold\n* Tue Dec 14 2021 Danie de Jager - 5.12.1-1\n- Bump to 5.12.1-1\n- fixed listing devices on NetBSD\n- escape file names (#111)\n- fixed filtering\n* Fri Dec 3 2021 Danie de Jager - 5.12.0-1\n- Bump to 5.12.0-1\n* Fri Dec 3 2021 Danie de Jager - 5.11.0-2\n- Compile with go 1.17.4\n* Sun Nov 28 2021 Danie de Jager - 5.11.0-1\n- Bump to 5.11.0\n* Tue Nov 23 2021 Danie de Jager - 5.10.1-1\n- Bump to 5.10.1\n* Wed Nov 10 2021 Danie de Jager - 5.10.0-1\n- Bump to 5.10.01\n* Mon Oct 25 2021 Danie de Jager - 5.9.0-1\n- Bump to 5.9.0\n* Mon Sep 27 2021 Danie de Jager - 5.8.1-2\n- Remove pandoc requirement.\n* Sun Sep 26 2021 Danie de Jager - 5.8.1-1\n- Bump to 5.8.1\n* Thu Sep 23 2021 Danie de Jager - 5.8.0-2\n- Bump to 5.8.0\n* Tue Sep 7 2021 Danie de Jager - 5.7.0-1\n- Bump to 5.7.0\n* Sat Aug 28 2021 Danie de Jager - 5.6.2-1\n- Bump to 5.6.2\n- Compiled with go 1.17\n* Fri Aug 27 2021 Danie de Jager - 5.6.1-1\n- Bump to 5.6.1\n* Mon Aug 23 2021 Danie de Jager - 5.6.0-1\n- Bump to 5.6.0\n* Fri Aug 13 2021 Danie de Jager - 5.5.0-2\n- Compiled with go 1.16.7\n* Mon Aug 2 2021 Danie de Jager - 5.5.0-1\n- Bump to 5.5.0\n* Mon Jul 26 2021 Danie de Jager - 5.4.0-1\n- Bump to 5.4.0\n* Thu Jul 22 2021 Danie de Jager - 5.3.0-2\n- First release\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.84765625,
          "content": "module github.com/dundee/gdu/v5\n\ngo 1.21\n\nrequire (\n\tgithub.com/dgraph-io/badger/v3 v3.2103.2\n\tgithub.com/fatih/color v1.16.0\n\tgithub.com/gdamore/tcell/v2 v2.7.1\n\tgithub.com/h2non/filetype v1.1.3\n\tgithub.com/maruel/natural v1.1.0\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/rivo/tview v0.0.0-20240204151237-861aa94d61c8\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/cobra v1.8.0\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/ulikunitz/xz v0.5.12\n\tgolang.org/x/exp v0.0.0-20240205201215-2c58cdc269a3\n\tgolang.org/x/sys v0.20.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/cespare/xxhash v1.1.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.1.1 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgraph-io/ristretto v0.1.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.0 // indirect\n\tgithub.com/gdamore/encoding v1.0.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b // indirect\n\tgithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6 // indirect\n\tgithub.com/golang/protobuf v1.3.1 // indirect\n\tgithub.com/golang/snappy v0.0.3 // indirect\n\tgithub.com/google/flatbuffers v1.12.1 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.12.3 // indirect\n\tgithub.com/kr/pretty v0.3.0 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.15 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgo.opencensus.io v0.22.5 // indirect\n\tgolang.org/x/net v0.23.0 // indirect\n\tgolang.org/x/term v0.18.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 20.5224609375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1 h1:6MnRN8NT7+YBpUIWxHtefFZOKTAPgGjpQSxqLNn0+qY=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-etcd v2.0.0+incompatible/go.mod h1:Jez6KQU2B/sWsbdaef3ED8NzMklzPG4d5KIOhIy30Tk=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger/v3 v3.2103.2 h1:dpyM5eCJAtQCBcMCZcT4UBZchuTJgCywerHHgmxfxM8=\ngithub.com/dgraph-io/badger/v3 v3.2103.2/go.mod h1:RHo4/GmYcKKh5Lxu63wLEMHJ70Pac2JqZRYGhlyAo2M=\ngithub.com/dgraph-io/ristretto v0.1.0 h1:Jv3CGQHp9OjuMBSne1485aDpUkTKEcUqF+jm/LuerPI=\ngithub.com/dgraph-io/ristretto v0.1.0/go.mod h1:fux0lOrBhrVCJd3lcTHsIJhq1T2rokOu6v9Vcb3Q9ug=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2 h1:tdlZCpZ/P9DhczCTSixgIKmwPv6+wP5DGjqLYw5SUiA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/gdamore/encoding v1.0.0 h1:+7OoQ1Bc6eTm5niUzBa0Ctsh6JbMW6Ra+YNuAtDBdko=\ngithub.com/gdamore/encoding v1.0.0/go.mod h1:alR0ol34c49FCSBLjhosxzcPHQbf2trDkoo5dl+VrEg=\ngithub.com/gdamore/tcell/v2 v2.7.1 h1:TiCcmpWHiAU7F0rA2I3S2Y4mmLmO9KHxJ7E1QhYzQbc=\ngithub.com/gdamore/tcell/v2 v2.7.1/go.mod h1:dSXtXTSK0VsW1biw65DZLZ2NKr7j0qP/0J7ONmsraWg=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6 h1:ZgQEtGgCBiWRM39fZuwSd1LwSqqSW0hOdXCYYDX0R3I=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1 h1:YF8+flBXS5eO826T4nzqPrxfhQThhXl0YzfuUPu4SBg=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/snappy v0.0.3 h1:fHPg5GQYlCeLIPB9BZqMVR5nR9A+IM5zcgeTdjMYmLA=\ngithub.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/flatbuffers v1.12.1 h1:MVlul7pQNoDzWRLTw5imwYsl+usrS1TXG2H4jg6ImGw=\ngithub.com/google/flatbuffers v1.12.1/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/h2non/filetype v1.1.3 h1:FKkx9QbD7HR/zjK1Ia5XiBsq9zdLi5Kf3zGyFTAFkGg=\ngithub.com/h2non/filetype v1.1.3/go.mod h1:319b3zT68BvV+WRj7cwy856M2ehB3HqNOt6sy1HndBY=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.12.3 h1:G5AfA94pHPysR56qqrkO2pxEexdDzrpFJ6yt/VqWxVU=\ngithub.com/klauspost/compress v1.12.3/go.mod h1:8dP1Hq4DHOhN9w426knH3Rhby4rFm6D8eO+e+Dq5Gzg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/maruel/natural v1.1.0 h1:2z1NgP/Vae+gYrtC0VuvrTJ6U35OuyUqDdfluLqMWuQ=\ngithub.com/maruel/natural v1.1.0/go.mod h1:eFVhYCcUOfZFxXoDZam8Ktya72wa79fNC3lc/leA0DQ=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 h1:onHthvaw9LFnH4t2DcNVpwGmV9E1BkGknEliJkfwQj0=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58/go.mod h1:DXv8WO4yhMYhSNPKjeNKa5WY9YCIEBRbNzFFPJbWO6Y=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/tview v0.0.0-20240204151237-861aa94d61c8 h1:aW0ILZ0lkphO/2mUWocSfP1iebWtSFcxL8BiSNR+/8g=\ngithub.com/rivo/tview v0.0.0-20240204151237-861aa94d61c8/go.mod h1:sGSvhfWFNS7FpYxS8K+e22OTOI3UsB5rDs0nRtoZkpA=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.3/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spaolacci/murmur3 v1.1.0 h1:7c1g84S4BPRrfL5Xrdp6fOJ206sU9y293DDHaoy0bLI=\ngithub.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v0.0.5/go.mod h1:3K3wKZymM7VvHMDS9+Akkh4K60UwM26emMESw8tLCHU=\ngithub.com/spf13/cobra v1.8.0 h1:7aJaZx1B85qltLMc546zn58BxxfZdR/W22ej9CFoEf0=\ngithub.com/spf13/cobra v1.8.0/go.mod h1:WXLWApfZ71AjXPya3WOlMsY9yMs7YeiHhFVlvLyhcho=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.3.2/go.mod h1:ZiWeW+zYFKm7srdB9IoDzzZXaJaI5eL9QjNiN/DMA2s=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=\ngithub.com/ulikunitz/xz v0.5.12 h1:37Nm15o69RwBkXM0J6A5OlE67RZTfzUxTj8fB3dfcsc=\ngithub.com/ulikunitz/xz v0.5.12/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=\ngithub.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.opencensus.io v0.22.5 h1:dntmOdLpSpHlVqbW5Eay97DelsZHe+55D+xC6i0dDS0=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngolang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240205201215-2c58cdc269a3 h1:/RIbNt/Zr7rVhIkQhooTxCxFcdWLGIKnZA4IXNFSrvo=\ngolang.org/x/exp v0.0.0-20240205201215-2c58cdc269a3/go.mod h1:idGWGoKP1toJGkd5/ig9ZLuPcZBC3ewk7SzmH0uou08=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181205085412-a5c9d58dba9a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0 h1:Od9JTbYCk261bKm4M/mw7AklTlFYIa0bIp9BgSm1S8Y=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=\ngolang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "report",
          "type": "tree",
          "content": null
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 1.0390625,
          "content": "name: gdu-disk-usage-analyzer\nversion: git\nsummary: Pretty fast disk usage analyzer written in Go.\ndescription: |\n  Gdu is intended primarily for SSD disks where it can fully utilize parallel processing.\n  However HDDs work as well, but the performance gain is not so huge.\nconfinement: strict\nbase: core20\nparts:\n  gdu:\n    plugin: go\n    source: .\n    override-build: |\n          GO111MODULE=on CGO_ENABLED=0 go build \\\n            -buildmode=pie -trimpath -mod=readonly -modcacherw \\\n            -ldflags \\\n              \"-s -w \\\n              -X 'github.com/dundee/gdu/v5/build.Version=$(git describe)' \\\n              -X 'github.com/dundee/gdu/v5/build.User=$(id -u -n)' \\\n              -X 'github.com/dundee/gdu/v5/build.Time=$(LC_ALL=en_US.UTF-8 date)' \\\n              -X 'github.com/dundee/gdu/v5/build.RootPathPrefix=/var/lib/snapd/hostfs'\" \\\n            -o $SNAPCRAFT_PART_INSTALL/gdu \\\n            github.com/dundee/gdu/v5/cmd/gdu\n          $SNAPCRAFT_PART_INSTALL/gdu -v\napps:\n  gdu:\n    command: gdu\n    plugs:\n    - mount-observe\n    - system-backup\n"
        },
        {
          "name": "stdout",
          "type": "tree",
          "content": null
        },
        {
          "name": "tui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}