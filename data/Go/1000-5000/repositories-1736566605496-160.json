{
  "metadata": {
    "timestamp": 1736566605496,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "googlecodelabs/tools",
      "stars": 4271,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0693359375,
          "content": "bazel-*\n.DS_Store\n.drone.sec.yml\n.idea/\ndebug.test\n*pb.go\nnode_modules\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.947265625,
          "content": "sudo: true\ndist: trusty\ngit:\n  depth: 3\nlanguage: go\ngo:\n- 1.11.x  # need for App Engine\nenv:\n- BAZEL=0.18.1\nbefore_install:\n- |\n  wget -O install.sh \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL}/bazel-${BAZEL}-installer-linux-x86_64.sh\"\n  chmod +x install.sh\n  ./install.sh --user\n  rm -f install.sh\ninstall:\n- go get golang.org/x/lint/golint\n# Install protobuf dependencies\n- go get -u github.com/golang/protobuf/protoc-gen-go\n- curl -OL https://github.com/google/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-x86_64.zip\n- sudo unzip -o protoc-3.7.1-linux-x86_64.zip -d /usr/local bin/protoc\n- sudo unzip -o protoc-3.7.1-linux-x86_64.zip -d /usr/local include/*\n- rm -f protoc-3.7.1-linux-x86_64.zip\n# Dynamically get rest of Golang-specific dependencies\n- go get -t -d ./claat/...\nscript:\n- make -C claat test lint\n- bash codelab-elements/tools/ci-presubmit.sh\n\nbefore_deploy:\n- make -C claat release -j\ndeploy:\n  provider: releases\n  api_key:\n    secure: qvNA0W7KEKGF4s+FtjB0UeYSc8El8Y7Y3I8J+PzKAbR2HHXTq06OtH1pd2cS6k3ovh5tXAyos0FrFqr7XHohuDmM/CI0/f7PXhP1u7cJjnnvWnOJyYgvOSWjJg0sFlwdnxJ+6yaNlwfIkVfTG9COm7jovBikUn5YPfD8k0cxyoTAWSSY9bEwvAfH4FO08QVvdpIyLpFdvVqei4YXFEB74EaaAK7uqMOGOtB0NDsI9FzfZZjHvL2JWk6BwtQOMxXliHiM+FxaPN3Uq1QiKnd0nNY/47naijTx74neSbz3+R4XsOYwxzKvfEV8bbBmMlBfjRPpy0U/r7ywILykt5fHKqodDgmVUbItTyTD9CUUYbCCRvaXfaldmIC9jMBzxWRakDladJemmIYGC4CQNXFvKz8NW2NMc0waSgqv/d+j+3u0zGQ1iJ199lRyXEz5E2VoUXPSvaxub8Sya83uXTxD6dSdWbePKLpXq9WTg6P0Qj0kccYNcxNJ6s2UeKOD2J7HCtaIOQeLn0IGgj5sjjFuhbjg1eayXUcJP4bAhEFc5Q4rajgbrBtVefX4FdBKacI+YaF/rhjCfQA+653OiyLzVRpri481vT8rmNm9ID8PxDP0NokgFUpZKUx/AItxKVvcDaJmCtTLLt8/K3mA0AjOHhWLxchO/bGeiL7mbuWn3Xg=\n  on:\n    repo: googlecodelabs/tools\n    tags: true\n    go: 1.11.x # match the above; latest release\n  skip_cleanup: true\n  file:\n  - claat/bin/claat-darwin-amd64\n  - claat/bin/claat-linux-amd64\n  - claat/bin/claat-linux-386\n  - claat/bin/claat-windows-amd64.exe\n  - claat/bin/claat-windows-386.exe\n  - claat/bin/sha1sum.txt\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 0.642578125,
          "content": "package(default_visibility = [\"//visibility:public\"])\n\nlicenses([\"notice\"])\n\nexports_files([\"LICENSE\"])\n\ngenrule(\n    name = \"bundle\",\n    outs = [\"bundle.zip\"],\n    srcs = [\n        \"LICENSE\",\n        \"//codelab-elements:README.md\",\n        \"//codelab-elements:all_files\",\n        \"@prettify//:prettify\",\n        \"@polyfill//:custom_elements\",\n        \"@polyfill//:native_shim\",\n    ],\n    cmd = \"zip -j $@ $(SRCS)\",\n)\n\ngenrule(\n    name = \"npm_dist\",\n    outs = [\"npm_dist.zip\"],\n    srcs = [\n        \"LICENSE\",\n        \"package.json\",\n        \"//codelab-elements:README.md\",\n        \"//codelab-elements:all_files\",\n    ],\n    cmd = \"zip -j $@ $(SRCS)\",\n)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4169921875,
          "content": "Want to contribute? Great! First, read this page (including the small print at\nthe end).\n\n### Before you contribute\nBefore we can use your code, you must sign the\n[Google Individual Contributor License Agreement](https://cla.developers.google.com/about/google-individual)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase, so we need your permission to use and distribute your code. We also\nneed to be sure of various other things -- for instance that you'll tell us if\nyou know that your code infringes on other people's patents. You don't have to\nsign the CLA until after you've submitted your code for review and a member has\napproved it, but you must do it before we can put your code into our codebase.\nBefore you start working on a larger contribution, you should get in touch with\nus first through the issue tracker with your idea so that we can help out and\npossibly guide you. Coordinating up front makes it much easier to avoid\nfrustration later on.\n\n### Code reviews\nAll submissions, including submissions by project members, require review. We\nuse Github pull requests for this purpose.\n\n### The small print\nContributions made by corporations are covered by a different agreement than\nthe one above, the\n[Software Grant and Corporate Contributor License Agreement](https://cla.developers.google.com/about/google-corporate).\n"
        },
        {
          "name": "FORMAT-GUIDE.md",
          "type": "blob",
          "size": 16.0341796875,
          "content": "# Codelab Formatting Guide\n\nBug or feature request? File it [here](https://github.com/googlecodelabs/tools/issues).\n\n## Getting Started\n\nCopy [this template doc](https://docs.google.com/document/d/1E6XMcdTexh5O8JwGy42SY3Ehzi8gOfUGiqTiUX6N04o/edit) as a starting point and then iteratively mutate the metadata and contents to your liking, following the formatting rules described below.\n\nTo preview a codelab:\n\n-  (optional one-time setup) Install the [Preview Codelab Chrome extension](https://chrome.google.com/webstore/detail/preview-codelab/lhojjnijnkiglhkggagbapfonpdlinji) in your browser.\n\n- Click the Chrome extension's button while you're in your codelab Google Doc tab, or\n- Navigate manually to **https://codelabs-preview.appspot.com/?file_id=[google-doc-id]**.\n\n## Formatting Reference\n\n1. Table of Contents\n\n    Every codelab document must use the **Heading 1** paragraph style to delineate the steps of the codelab. In turn, these headings will be used to automatically create a Table of Contents which shows the student exactly where they are in the codelab and lets them jump to any step.\n\n    The table of contents disappears for smaller browsers but is still available from the hamburger menu.\n\n1. Codelab Metadata (Google Docs)\n\n    There is some additional metadata that is required in order to properly publish a codelab. This metadata should be added as a **two-column table** anywhere before the first step of the codelab. For example:\n\n\n\n    You are free to add your own metadata here if you'd like but certain key/value pairs are reserved for specific codelab publishing features. The current list of reserved metadata terms are:\n\n    * **Summary:** A short summary of the codelab that will be shown in the codelab browser UI.\n    * **URL:** The URL suffix where this codelab will be published, i.e. the path after the root URL to a collection of codelabs. For example, the Google Codelabs site uses codelabs.developers.google.com/codelabs/ as root and this value is appended to that base to form the unique URL for a given codelab.\n    * **Category:** A single, top-level category that will be used to group codelabs by platform. Categories are normally curated by an organization (e.g. we have a set we use for the Google Codelabs site) but each publisher is free to use this value at their discretion.\n    * **Environment**: A tag that allows use to output some codelabs for a specific environment. All codelabs default to the \"Web\" environment but given some hardware constraints we might only want to generate them for a \"Kiosk\" environment where we know people will have the right hardware. \\\nYou can also use this to target specific events, for instance:  \\\n\"Web, polymer-summit\" (without quotes)\n    * **Status:** One or more of (Draft, Published, Deprecated, Hidden) to indicate the progress and whether the codelab is ready to be published. 'Hidden' implies the codelab is for restricted use, should be available only by direct URL, and should not appear on the main index page.\n    * **Feedback Link:** The URL that the student should be sent to when they click on the feedback link to report a bug in the codelab.\n    * **Analytics Account:** This allows you to specify a custom Google Analytics ID for your codelab. If no ID is specified, it defaults to a global codelabs analytics account.\n\n1. Codelab Metadata (Markdown)\n\n    You are free to add your own metadata here if you'd like but certain key/value pairs are reserved for specific codelab publishing features. The current list of reserved metadata terms are:\n\n    * **summary:** A short summary of the codelab that will be shown in the codelab browser UI.\n    * **id:** The name of the folder that will be generated once you export the markdown file via claat.\n    * **categories:** A single, top-level category that will be used to group codelabs by platform. Categories are normally curated by an organization (e.g. we have a set we use for the Google Codelabs site) but each publisher is free to use this value at their discretion.\n    * **environments**: A tag that allows use to output some codelabs for a specific environment. All codelabs default to the \"Web\" environment but given some hardware constraints we might only want to generate them for a \"Kiosk\" environment where we know people will have the right hardware. \\\nYou can also use this to target specific events, for instance:  \\\n\"Web, polymer-summit\" (without quotes)\n    * **status:** One or more of (Draft, Published, Deprecated, Hidden) to indicate the progress and whether the codelab is ready to be published. 'Hidden' implies the codelab is for restricted use, should be available only by direct URL, and should not appear on the main index page.\n    * **feedback link:** The URL that the student should be sent to when they click on the feedback link to report a bug in the codelab.\n    * **analytics account:** This allows you to specify a custom Google Analytics ID for your codelab. If no ID is specified, it defaults to a global codelabs analytics account.\n    * **tags:** Add relevant tags to make your codelab easily found.\n    * **authors:** Indicate the author(s) of this specific codelab.\n\n1. Headers\n\n    Within the steps of your codelab you should use the **Heading 2**, **Heading 3** and **Heading 4** paragraph styles to organize your content. These will get translated to `<h2>`, `<h3>` and `<h4>` tags in the codelab markup.\n\n    Also, if you wish to include some additional administrative information at the beginning of your codelab you can freely use the **Heading 2**, **Heading 3** and **Heading 4** paragraph styles and they will not show up in the codelab as long as they appear before the first **Heading 1**.\n\n1. Text Styles\n\n    For the most part, it doesn't matter which fonts you use in your Google Doc draft; everything will be formatted using Roboto in the final codelab.\n\n    There are some simple ways that you can add emphasis to certain parts of the text. Bolded and italicized text will be passed through to the codelab markup as `<strong>` and `<em>` tags respectively. Also, passages of text formatted with the `Courier New` font will be passed through as an inline `<code>` tag in the markup.\n\n1. Responsive Images\n\n    Inline images in your codelab should just work seamlessly. You can re-size them in your codelab document and that width will be applied as a **max-width** on the image in the codelab markup so that images are the same size relative to the text but also scale down appropriately for smaller browsers.\n\n1. Youtube Videos\n\n    Youtube Videos can be embedded by doing:\n     - Add an image in the document. The image can be a screenshot of the video for instance but it doesn't really matter since it won't be displayed but replaced by the embedded video.\n     - Add an \"Alt Text\" to the image by doing **Cmd+Opt+Y** or **Right click > \"Alt Text...\"**\n     - Put a Youtube video link in the **Description** field of the Alt Text. in the format `https://www.youtube.com/watch?v=[video_ID]`\n    > Specifying a start time is not supported at this time.\n\n1. Embedded Iframes\n\n    Iframes can be embedded by doing:\n     - Add an image in the document. The image can be a screenshot of the iframe for instance but it doesn't really matter since it won't be displayed but replaced by the embedded iframe.\n     - Add an \"Alt Text\" to the image by doing **Cmd+Opt+Y** or **Right click > \"Alt Text...\"**\n     - Put a full URL in the **Description** field of the Alt Text. in the format `https://www.domain.com/watch?foo=bar`. Note that for security reasons, iframe embbedding is limited to an enumerated set of allowable iframe source URLs. Feel free to submit a PR if you'd like to augment that list or tweak your own version of the claat command.\n\n1. Info Boxes\n\n    For additional information that you would like to specially call-out in your codelab, there are two styles of info boxes:\n\n    1. Positive information like best practices and time saving tips should be formatted as a **single-cell table** with a **light green 3** background.\n\n    2. Negative information like warnings and API usage restrictions should be formatted as a **single-cell table** with a **light orange 3** background.\n\n    It is recommended that you keep your infoboxes clean, concise and focused on a single topic. If you have information which may be useful to know but is not a critical part of the codelab instructions, then you should link to that information from the FAQ section rather than including it as an infobox.\n\n1. Command-line Snippets\n\n    It's often the case that you will have command-line instructions or log messages which are formatted with a monospaced font and have pre-defined whitespace. You can add these sections to your codelab by creating a **single-cell table** and making sure that all the text is formatted using the **Consolas font**.\n\n1. Code Snippets\n\n    Code snippets with syntax highlighting can be added by creating a **single-cell table** and making sure that all the text is formatted using the **`Courier New`** font.\n\n    Any additional styles applied to the code will be overridden by the syntax highlighting. This means that you're free to use code highlighting Add-ons in your codelab doc but it will have no effect on how the code is highlighted in the final codelab.\n\n    It is also strongly recommended that you provide a **Heading 3** header directly above your code snippet with the file name. This helps students keep track of where the code is coming from. The codelab framework also uses the file extension of the prior header as a clue for how to highlight the code.\n\n    It is also strongly recommended that you make your **Heading 3** header a hyperlink to the actual file if it is available on GitHub. A GitHub icon will automatically be added to the heading in such cases.\n\n1. Frequently Asked Questions\n\n    As the author of the codelab, you have developed and tested your code. You've probably run into all sorts of common issues or misconceptions. By linking to frequently asked questions, after each step where they often occur, you will reassure the students that they have everything they need to complete the codelab and avoid having to explain everything inline in your codelab.\n    FAQs are easy to add. All the author needs to do is provide an unordered list of hyperlinks and preface it with a **Heading 3** header with the exact text: **Frequently Asked Questions**.\n\n    Link icons will be added automatically for stackoverflow.com, developers.google.com, developers.android.com and support.google.com. All links will be configured to open in a new tab.\n\n1. Download Buttons\n\n    You can make it really easy to get started by including direct download buttons inline in your codelab. In order to add a button to your codelab, simply add a hyperlink and make sure that it is highlighted with a **dark green 1** background.\n\n    Additionally, if the link text begins with the word \"Download\", a file download icon will be added to the button.\n\n1. Per-step Time Estimates\n\n    Many participants are not fully committed to completing a codelab when they start it. One of the ways that we can keep them in our codelab is by giving them accurate estimates about how much additional effort is required to complete the codelab at each step.\n\n    In order to add this feature to your codelab, simply annotate each step in your codelab doc with a Duration: which uses **dark grey 1** text.\n\n    That's it. The codelab framework will do everything else for you. If you forget to annotate a step with a duration, the default is 1:00. Also, if the last step of your codelab is just a congratulations page, you should set the duration of that step to **0**.\n\n1. Conditional Steps\n\n    Sometimes it's useful to have different versions of a codelab for different environments. For example, you might have some steps that only apply to students who take the codelab in a classroom setting while other steps only apply to people who are following the instructions at their own pace online.\n\n    The format is similar to the duration metadata. You simply specify one or more environments with an Environment: which uses **dark grey 1** text. The Duration and/or Environment fields, when present, should be followed by a blank line and should be set in normal text (not in Heading 1, lest they be considered part of the step title).\n\n    If no environment metadata is specified, the default environment is \"Web, Kiosk\".\n\n    When previewing your codelab, you can change environments using the &env=web or &env=kiosk parameters.\n\n1. Fragment imports\n\n    It is possible for a codelab to import another doc as a step fragment. For instance, it could be a set of setup instructions shared among multiple codelabs:\n\n    [[**import** [funny dog](https://docs.google.com/document/d/1VkJopEKiqitwFgqFOEU6rpB1VE-R-uYWq4erNHP2TQ4/edit)]]\n\n    The contents of the funny dog document will be inserted in the codelab, replacing import instruction.\n\n    The instruction syntax is:\n\n    *   start with [[ (two square brackets)\n    *   followed by **import** keyword in bold\n    *   followed by a link to a doc\n    *   end with ]] (two square brackets)\n\n    Caveat: The imported doc is limited to content within a step (hence the term \"fragment\"). Including multiple steps, or even the step title/heading, within the imported doc is not supported.\n\n1. Resumable Codelabs\n\n    When a user returns to a codelab, they may be returning via a bookmark or a short-link posted online, it usually takes them to the first page of the codelab. In that case, the codelab remembers where they left off and asks them if they wish to resume where they left off. This makes it easier for the user to jump back in and gives us more accurate analytics about how long users spend on each step.\n\n    This is simply part of the framework. There is nothing that you need to do as a codelab author to enable this feature.\n\n1. Feedback Links\n\n    At the bottom of every step of the codelab there is a link for reporting bugs. This link can be configured using the **Feedback Link** setting in your metadata table.\n\n1. Inline Surveys\n\n    **NOTE: Surveys cannot be used to collect data that can individually, or in conjunction with other information from this site, help locate and identify a particular user or reveal their sensitive demographics information. Any data collected should be sufficiently anonymized and aggregated. Also, consider that the surveys can possibly send a numerical ID of the selections instead of the actual value itself. Apart from helping on the localization front, this can also help prevent from injecting obvious PII values into GA.**\n\n    As we've seen in previous years, participants consume our codelabs for a wide range of reasons. In order to give us some more insight into how different people consume codelabs, we can ask them some quick multiple choice questions in the early stages of our codelab.\n\n    You can configure these short survey questions to ask whatever you think is relevant to your codelab. In order to include a survey question in your codelab, add a single-cell table with a **light blue 3** background. Format your question with the **Heading 4** paragraph style and provide an **unordered list** of choices.\n\n    The participants' answers will automatically be added as custom variables in Google Analytics which can help you understand things like:\n\n    *   _What is the difference in completion rate between novices and experts?_\n    *   _What is the average time spent for people who wanted to write code vs. people who just wanted to read?_\n    *   _Is the bounce rate affected by the students' preference in IDE?_\n\n    Of course, we need to be mindful of our participants' time and concentration and only ask a few key questions. It is _not_ recommended to have a survey after each step.\n\n1. What you'll learn\n\n    Having a header 2 of \"What you'll learn\" followed by a bullet point list creates a list of check marks.\n\n    A title of \"What we've covered\" has the same effect.\n    \n1. YouTube Video Embeds\n\n    Use a video tag like so `<video id=\"DWAinkJ54AP8\"></video>` to embed a video uploaded to YouTube with the URL https://www.youtube.com/watch?v=DWAinkJ54AP8\n\n## Things to avoid\n\n- **Footers:** Any characters included in the footer (beyond the default page number) result in parsing bugs. For this reason, page footers are not recommended.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0966796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.7451171875,
          "content": "# Tools for authoring and serving codelabs\n\nCodelabs are interactive instructional tutorials, which can be authored in Google Docs\nusing some simple formatting conventions. You can also author codelabs using markdown syntax.\nThis repo contains all the tools and documentation you’ll need for building and publishing\nyour own codelabs.\n\nIf you're interested in authoring codelabs, create a doc following the [Codelab Formatting Guide](FORMAT-GUIDE.md). \nand see the [claat](claat) directory for a detailed description of the `claat` command line tool.\n\nAlso, consider joining the [codelab-authors Google Group](https://groups.google.com/forum/#!forum/codelab-authors),\nwhich connects you with other authors and provides updates on new releases. \n\n## What is this?\n\nFor the past 3+ years, the CLaaT (Codelabs as a Thing) project has given developers around the\nworld a hands-on experience with Google products and tools.  We’ve accumulated over 500 high quality\ncodelabs, served millions of web visitors, and supported over 100 events, from local meetups\nall the way up to Google I/O.\n\nThis project has been implemented as a volunteer project by a small group of dedicated Googlers\nwho care deeply about this kind of “learning by doing” approach to education.\n\n## What's special about this tool?\n\n* Powerful and flexible authoring flow via Google Docs\n* Optional support for authoring in Markdown text\n* Ability to produce interactive web or markdown tutorials without writing any code\n* Easy interactive previewing\n* Usage monitoring via Google Analytics\n* Support for multiple target environments (kiosk, web, markdown, offline, etc.)\n* Support for anonymous use - ideal for public computers at developer events\n* Looks great, with a responsive web implementation\n* Remembers where the student left off when returning to a codelab\n* Mobile friendly user experience\n\n## Can I use this to create my own codelabs and serve my own codelabs online?\n\nYes, the claat tool and the serving mechanism can be used by anyone to author their\nown codelabs and to serve up their own codelabs on the web.\n\nYou can also use this tool to create a nice looking summary page like the one you see on the official [Google Codelabs site](https://g.co/codelabs).\n\nIf you're interested in authoring codelabs, join [codelab-authors group](https://groups.google.com/forum/#!forum/codelab-authors),\nwhich connects you with other authors and provides access to the\n[Codelab Formatting Guide](FORMAT-GUIDE.md).\n\n## Ok, how do I use it?\n\nCheck out this [excellent tutorial](https://medium.com/@zarinlo/publish-technical-tutorials-in-google-codelab-format-b07ef76972cd).\n\n1. Create a doc following the syntax conventions described in the [Codelab Formatting Guide](FORMAT-GUIDE.md). Here’s an [example doc](https://docs.google.com/document/d/1E6XMcdTexh5O8JwGy42SY3Ehzi8gOfUGiqTiUX6N04o/). Feel free to copy that doc as a starter template. Once you have your own source doc, note its DocId, which is the long string near the end of the URL (right after docs.google.com/document/d/).\n\n1. Make one or more changes and preview your codelab, using the preview app provided by Google. To preview a codelab, install the [Preview Codelab Chrome extension](https://chrome.google.com/webstore/detail/preview-codelab/lhojjnijnkiglhkggagbapfonpdlinji) in your browser. Now you can preview a codelab directly from the Google Doc view by clicking the Chrome extension’s button, which will open a new tab to display the preview. Alternatively, navigate manually to https://codelabs-preview.appspot.com/?file_id=<google-doc-id>\n\n1. Install the claat command -- see the [README in the claat directory](https://github.com/googlecodelabs/tools/blob/master/claat/README.md) of this repo for instructions..\n\n1. Run the claat command to transform the doc contents into one of the supported output formats. The default supported formats are html and markdown but the claat tool supports adding additional formats by specifying a path to a Go template. For example, using the example document above:\n\n        $ claat export 1rpHleSSeY-MJZ8JvncvYA8CFqlnlcrW8-a4uEaqizPY  \n        ok      your-first-pwapp\n\n    You can also specify a markdown document (.md file) as input. It has to adhere to the syntax conventions described [here](https://github.com/googlecodelabs/tools/tree/master/claat/parser/md)\n\n        $ claat export document.md\n        ok      your-md-based-codelab\n\n1. Run the claat serve command.\n\n        $ claat serve\n\nThis will start a local web server and open a browser tab to the local server. Click on the\nhyperlink represent your codelab of interest to experience a fully rendered version.\n\n## How do I generate my own landing page?\n\nSee instructions in the [site directory's readme](site/README.md).\n\n## How do I generate a custom view?\n\nCopy the [sample view](site/app/views/vslive), customize it to your liking,\ntag and rebuild the codelabs you want included, and then generate your view.\n\n## How do I publish my codelabs?\n\nThe output generated by `claat` is a purely static set of HTML or Markdown code. As such,\nit can be served by any web serving mechanism, including any of the following options:\n\n* Github Pages (`*.github.io`)\n* [Google App Engine](https://cloud.google.com/appengine)\n* [Firebase Static Serving](https://firebase.google.com/products/hosting)\n* [Google Cloud Storage](https://cloud.google.com/storage)\n* Amazon Web Services S3\n* Netlify\n* Any open source web server (Nginx, Apache)\n* `python -m SimpleHTTPServer` (Python 2)\n* `python3 -m http.server` (Python 3)\n\nSimply commit the artifacts generated by the claat command into your preferred serving vehicle\nand you should be ready to go.\n\nThe [site directory](site) contains tools for building your own custom landing page(s) and publishing both landing\npages and codelabs to Google Cloud Storage.\n\n## Why bother with this approach when I can write tutorials directly in Markdown?\n\nSome people like the Google Docs authoring flow, others prefer to specify their codelabs\ndirectly in Markdown. Using the Docs approach, one source format can be used to generate\nnumerous output formats. Also, you can use a doc for the initial formulation stage, where\nWYSIWYG and easy collaboration are extremely useful. Once the content stabilizes, typically\nafter the first launch, you are free to make the generated markdown your source of truth\nand discard the Google Doc as a controlling source. This is desirable because it gives you\nthe ability to manage the content as code in a source control system, but it comes at the\ncost of having to commit to one specific output format, or having to maintain multiple\nsources of truth.\n\nThis tool and corresponding authoring approach are agnostic with respect to whether (and when)\nyou choose to manage your source as a Google Doc or as Markdown text checked into a repo.\nThe only hard and fast rule is that, at any one point in time, you should choose one or the\nother. Trying to simultaneously maintain a doc and a corresponding repository is a recipe\nfor disaster.\n\n## What are the supported input formats?\n\n* Google Docs (following FORMAT-GUIDE.md formatting conventions)\n* Markdown\n\n## What are the supported output formats?\n\n* Google Codelabs - HTML and Markdown\n* Qwiklabs - Markdown\n* Cloud Shell Tutorials - Markdown with special directives\n* Jupyter, Kaggle Kernels, Colaboratory, et. al. - Markdown with format specific cells\n\nThere’s no one “best” publication format. Each format has its own advantages,\ndisadvantages, community, and application domain. For example, Jupyter has a very strong\nfollowing in the data science and Python communities.\n\nThis variety of formats is healthy because we’re seeing new innovative approaches all the\ntime (for example, see observablehq.com, which recently launched their Beta release).\n\nWhile this evolving format ecosystem is generally a good thing, having to maintain tutorials in\nmultiple formats, or switch from one format to another can be painful. The Codelabs doc format\n(as specified in FORMAT-GUIDE.md) can provide a high level specification for maintaining\na single source of truth, programmatically translated into one or more tutorial specific formats.\n\n## Can I contribute?\n\nYes, by all means. Have feature ideas? Send us a pull request or file a bug.\n\n## Where did this come from?\n\nFor several years, Googlers would rush to build new tutorials and related assets for our\nannual developer event, Google I/O. But every year the authoring platform and distribution\nmechanism changed. As a result, there was little reuse of content and serving infrastructure,\nAnd every year we essentially kept reinventing the same wheel.\n\nFor Google I/O 2014, Shawn Simister wrote a Python program which retrieved\nspecially formatted documents from Google Drive, parsed them, and generated\na nice interactive web-based user experience. This allowed authors to design their\ncodelabs using Google Docs, with its great interactivity and collaboration features,\nand automatically convert those documents into beautiful web based tutorials,\nwithout needing to write a single line of code.\n\nLater, Ewa Gasperowicz wrote a site generator, supporting the ability to\npublish custom landing pages, with associated branding and an inventory of codelabs\nspecially curated for a given event.\n\nAlex Vaghin later rewrote Shawn's Python program as a statically linked Go program (the claat command in this repo), eliminating many runtime dependencies, improving translation\nperformance. Alex also added, among many other enhancements, a proper abstract syntax\ntree (to facilitate translation to different output formats), an app engine based previewer, an extensible rendering engine, support for generating markdown output. Alex also wrote the web serving infrastructure, the build tooling (based on gulp), and, with the author, the ability to self-publish codelabs directly from the preview app.\n\nClare Bayley has been the guru of onsite codelab experiences, running events large and small, while Sam Thorogood and Chris Broadfoot made major contributions to the onsite kiosks you may have seen at Google I/O.\n\nEric Bidelman redesigned the codelab user interface using Polymer components and built the g.co/codelabs landing page, to provide a beautiful user experience that looks great and works equally well on desktop and mobile devices.\n\nLots of other contributions have been made over the years and I’m sure that I’m neglecting some important advances but for the sake of brevity, I’ll leave it at that.\n\n## Acknowledgements\n\nGoogle Codelabs exists thanks to the talents and efforts of many fine volunteers, including:\nAlex Vaghin, Marc Cohen, Shawn Simister, Ewa Gasperowicz, Eric Bidelman, Robert Kubis, Clare Bayley, Cassie Recher, Chris Broadfoot, Sam Thorogood, Ryan Seys, and the many codelab authors, inside and outside of Google, who have generated a veritable [treasure trove of content](https://g.co/codelabs).\n\n## Notes\n\nThis is not an official Google product.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 4.474609375,
          "content": "workspace(name = \"googlecodelabs_custom_elements\")\n\nmaven_server(\n    name = \"default\",\n    url = \"https://repo1.maven.org/maven2/\"\n)\n\nmaven_jar(\n    name = \"org_apache_httpcomponents_httpclient\",\n    artifact = \"org.apache.httpcomponents:httpclient:4.5.5\",\n)\n\nmaven_jar(\n    name = \"org_apache_httpcomponents_httpmime\",\n    artifact = \"org.apache.httpcomponents:httpmime:4.5.5\",\n)\n\nmaven_jar(\n    name = \"org_apache_httpcomponents_httpcore\",\n    artifact = \"org.apache.httpcomponents:httpcore:4.4.9\",\n)\n\nmaven_jar(\n    name = \"org_apache_commons_exec\",\n    artifact = \"org.apache.commons:commons-exec:1.3\",\n)\n\nmaven_jar(\n    name = \"org_seleniumhq_selenium_api\",\n    artifact = \"org.seleniumhq:selenium-api:3.9.1\",\n)\n\nmaven_jar(\n    name = \"org_seleniumhq_selenium_remote_driver\",\n    artifact = \"org.seleniumhq.selenium:selenium-remote-driver:3.8.1\",\n)\n\nmaven_jar(\n    name = \"net_java_dev_jna_platform\",\n    artifact = \"net.java.dev:jna-client:4.5.1\",\n)\n\nmaven_jar(\n    name = \"net_java_dev_jna\",\n    artifact = \"net.java.dev:jna:4.5.1\",\n)\n\nmaven_jar(\n    name = \"net_bytebuddy\",\n    artifact = \"net.bytebuddy:byte-buddy:1.7.9\",\n)\n\nmaven_jar(\n    name = \"com_squareup_okio\",\n    artifact = \"com.squareup:okio:1.14.0\",\n)\n\nmaven_jar(\n    name = \"com_squareup_okhttp3_okhttp\",\n    artifact = \"com.squareup.okhttp3:okhttp:3.9.1\",\n)\n\nmaven_jar(\n    name = \"cglib_nodep\",\n    artifact = \"cglib:cglib-nodep:3.2.6\",\n)\n\nmaven_jar(\n    name = \"junit\",\n    artifact = \"junit:junit:4.12\",\n)\n\nmaven_jar(\n    name = \"commons_logging\",\n    artifact = \"commons-logging:commons-logging:1.2\",\n)\n\nmaven_jar(\n    name = \"commons_codec\",\n    artifact = \"commons-codec:commons-codec:1.11\",\n)\n\nmaven_jar(\n    name = \"org_hamcrest_core\",\n    artifact = \"org.hamcrest:hamcrest-core:1.3\",\n)\n\nnew_http_archive(\n    name = \"com_google_javascript_closure_compiler\",\n    build_file = \"third_party/BUILD.closure\",\n    url = \"https://repo1.maven.org/maven2/com/google/javascript/closure-compiler-unshaded/v20180805/closure-compiler-unshaded-v20180805.jar\",\n)\n\n# Required by io_bazel_rules_webtesting.\nskylib_ver = \"f9b0ff1dd3d119d19b9cacbbc425a9e61759f1f5\"\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"ce27a2007deda8a1de65df9de3d4cd93a5360ead43c5ff3017ae6b3a2abe485e\",\n    strip_prefix = \"bazel-skylib-{v}\".format(v=skylib_ver),\n    urls = [\n        \"https://github.com/bazelbuild/bazel-skylib/archive/{v}.tar.gz\".format(v=skylib_ver),\n    ],\n)\n\nrules_closure_ver = \"0.9.0\"\nhttp_archive(\n    name = \"io_bazel_rules_closure\",\n    sha256 = \"054717a2e6a415001bc4c608b208723526bdf6cace3592ca6efb3749ba18ce21\",\n    strip_prefix = \"rules_closure-{v}\".format(v=rules_closure_ver),\n    url = \"https://github.com/shawnbuso/rules_closure/archive/{v}.zip\".format(v=rules_closure_ver),\n)\nload(\"@io_bazel_rules_closure//closure:defs.bzl\", \"closure_repositories\")\nclosure_repositories()\n\nhttp_archive(\n    name = \"io_bazel_rules_go\",\n    sha256 = \"53c8222c6eab05dd49c40184c361493705d4234e60c42c4cd13ab4898da4c6be\",\n    url = \"https://github.com/bazelbuild/rules_go/releases/download/0.10.0/rules_go-0.10.0.tar.gz\",\n)\nload(\"@io_bazel_rules_go//go:def.bzl\", \"go_rules_dependencies\", \"go_register_toolchains\")\ngo_rules_dependencies()\ngo_register_toolchains()\n\nrules_webtesting_ver = \"936c760cff973a63031be0d0518b40a228e224e3\"\nhttp_archive(\n    name = \"io_bazel_rules_webtesting\",\n    sha256 = \"797b75e792a34728a6a3846c7c3d3ad669f12cd8490b888cc969bad93d236b1b\",\n    strip_prefix = \"rules_webtesting-{v}\".format(v=rules_webtesting_ver),\n    url = \"https://github.com/bazelbuild/rules_webtesting/archive/{v}.zip\".format(v=rules_webtesting_ver),\n)\nload(\n    \"@io_bazel_rules_webtesting//web:repositories.bzl\",\n    \"browser_repositories\",\n    \"web_test_repositories\",\n)\nweb_test_repositories()\nbrowser_repositories(chromium = True)\n\nprettify_ver = \"2013-03-04\"\nnew_http_archive(\n    name = \"prettify\",\n    build_file = \"third_party/BUILD.prettify\",\n    strip_prefix = \"code-prettify-{v}\".format(v=prettify_ver),\n    url = \"https://github.com/google/code-prettify/archive/{v}.zip\".format(v=prettify_ver),\n)\n\nnew_http_archive(\n    name = \"polyfill\",\n    build_file = \"third_party/BUILD.polyfill\",\n    sha256 = \"9606cdeacbb67f21fb495a4b0a0e5ea6a137fc453945907822e1b930e77124d4\",\n    strip_prefix = \"custom-elements-1.0.8\",\n    url = \"https://github.com/webcomponents/custom-elements/archive/v1.0.8.zip\",\n)\n\ngit_repository(\n    name = \"io_bazel_rules_sass\",\n    remote = \"https://github.com/bazelbuild/rules_sass.git\",\n    tag = \"0.0.3\",\n)\n\nload(\"@io_bazel_rules_sass//sass:sass.bzl\", \"sass_repositories\")\n\nsass_repositories()\n"
        },
        {
          "name": "claat",
          "type": "tree",
          "content": null
        },
        {
          "name": "codelab-elements",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 1.5283203125,
          "content": "{\n  \"name\": \"codelab-elements\",\n  \"version\": \"4.0.0\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@bazel/bazel\": {\n      \"version\": \"0.18.1\",\n      \"resolved\": \"https://registry.npmjs.org/@bazel/bazel/-/bazel-0.18.1.tgz\",\n      \"integrity\": \"sha512-2KjB0umWsW5or78hTG/RVLmAKmeouyDjqjNsGlOY3pzpj9yqDMG5iDPJh4Q1/hXxiDmF2qZWwqWIEh55LFZXaQ==\",\n      \"requires\": {\n        \"@bazel/bazel-darwin_x64\": \"0.18.0\",\n        \"@bazel/bazel-linux_x64\": \"0.18.0\",\n        \"@bazel/bazel-win32_x64\": \"0.18.0\"\n      },\n      \"dependencies\": {\n        \"@bazel/bazel-darwin_x64\": {\n          \"version\": \"0.18.0\",\n          \"resolved\": \"https://registry.npmjs.org/@bazel/bazel-darwin_x64/-/bazel-darwin_x64-0.18.0.tgz\",\n          \"integrity\": \"sha512-um2OzgLL2Gd/W6joOpvrSTcqpnupliPNpwe/uE7sB0huBSJ/4Im0w2IlCTI6C7OfgMcbpUj4YxgUa9T6u6WY6w==\",\n          \"optional\": true\n        },\n        \"@bazel/bazel-linux_x64\": {\n          \"version\": \"0.18.0\",\n          \"resolved\": \"https://registry.npmjs.org/@bazel/bazel-linux_x64/-/bazel-linux_x64-0.18.0.tgz\",\n          \"integrity\": \"sha512-Rq8X8bL6SgQvbOHnfPhSgF6hp+f6Fbt2w6pRmBlFvV1J+CeUyrSrrRXfnnO1bjIuq05Ur3mV8ULA0qK6rtA5lQ==\",\n          \"optional\": true\n        },\n        \"@bazel/bazel-win32_x64\": {\n          \"version\": \"0.18.0\",\n          \"resolved\": \"https://registry.npmjs.org/@bazel/bazel-win32_x64/-/bazel-win32_x64-0.18.0.tgz\",\n          \"integrity\": \"sha512-U2TbfK8B7dc3JqXSFwj2oXCQrxEaSzCCUkAHjAOIGOKzx/HLKIKs+NJj9IQkLLr7BsMU+Qqzo8aqo11E+Vs+aA==\",\n          \"optional\": true\n        }\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6552734375,
          "content": "{\n  \"name\": \"codelab-elements\",\n  \"version\": \"1.0.1\",\n  \"description\": \"Custom elements for codelabs\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"clean\": \"node_modules/.bin/bazel clean\",\n    \"build\": \"node_modules/.bin/bazel build npm_dist\",\n    \"test\": \"node_modules/.bin/bazel test --test_output=all codelab-elements/demo:hello_test\",\n    \"pub\": \"npm run clean && npm run build && cd bazel-genfiles && unzip npm_dist.zip -d npm_dist && npm publish npm_dist\"\n  },\n  \"author\": \"Google\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/googlecodelabs/tools.git\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"@bazel/bazel\": \"^0.18.1\"\n  }\n}\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}