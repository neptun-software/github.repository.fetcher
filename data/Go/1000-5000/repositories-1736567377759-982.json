{
  "metadata": {
    "timestamp": 1736567377759,
    "page": 982,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jetstack/kube-lego",
      "stars": 2158,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": ".git\nkube-lego\nGodeps/_workspace/pkg\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": "_build/\n_test/\nkube-lego\n.idea\n*.iml\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.7177734375,
          "content": "image: docker:latest\n\nvariables:\n  DOCKER_DRIVER: overlay\n\nservices:\n- docker:dind\n\nbefore_script:\n- docker info > /dev/null\n- apk --update add make\n\nbuild:\n  tags:\n  - docker\n  script:\n  - make image\n  except:\n  - master\n  - tags\n\nmaster_push:\n  tags:\n  - docker\n  script:\n  - mkdir -p ~/.docker && echo \"${DOCKER_AUTH_CONFIG}\" > ~/.docker/config.json && chmod 600 ~/.docker/config.json\n  - make push IMAGE_TAGS=\"${CI_BUILD_REF_SLUG}-${CI_PIPELINE_ID} canary\"\n  only:\n  - master\n\nrelease_push:\n  tags:\n  - docker\n  script:\n  - mkdir -p ~/.docker && echo \"${DOCKER_AUTH_CONFIG}\" > ~/.docker/config.json && chmod 600 ~/.docker/config.json\n  - make push APP_VERSION=${CI_COMMIT_TAG} IMAGE_TAGS=\"${CI_COMMIT_TAG} latest\"\n  only:\n  - tags\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2265625,
          "content": "language: go\ngo:\n- 1.9.2\nbefore_install:\n- curl -Ls https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip > ngrok.zip\n- unzip ngrok.zip\n- rm ngrok.zip\n- export PATH=$(pwd):$PATH\ninstall:\n- make depend\nscript:\n- make all\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.83984375,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## [0.1.5] - 2017-07-03\n\n### Fixed\n\n- Fix infinite update loop on ingress changes [#204](https://github.com/jetstack/kube-lego/pull/204)\n- Fix error message wording [#209](https://github.com/jetstack/kube-lego/pull/209)\n- Fix documentation wording [#208](https://github.com/jetstack/kube-lego/pull/208)\n\n### Added\n\n- Whitelist ingress IP source range (allow 0.0.0.0/0) [#114](https://github.com/jetstack/kube-lego/pull/114)\n\n## [0.1.4] - 2017-05-12\n\n### Fixed\n\n- Set the ENTRYPOINT instead of the CMD [#117](https://github.com/jetstack/kube-lego/pull/117)\n- Fix suppressed error while ACME client creation [#155](https://github.com/jetstack/kube-lego/pull/155)\n- Fix the order of namespace/name in the secret names [#141](https://github.com/jetstack/kube-lego/pull/141)\n- fix logic typo #110\n\n### Added\n\n* Add support for pprof [#139](https://github.com/jetstack/kube-lego/pull/139)\n* Update godeps and k8s method signatures [#48](https://github.com/jetstack/kube-lego/pull/48)\n* Upgrade docker golang to v1.8 [#127](https://github.com/jetstack/kube-lego/pull/127)\n* Add support for running multiple instance of kube-lego in the cluster [#105](https://github.com/jetstack/kube-lego/pull/105)\n* Add ability to customize ingress class [#101](https://github.com/jetstack/kube-lego/pull/101)\n* Change docker image from scratch to alpine [#87](https://github.com/jetstack/kube-lego/pull/87)\n* Add ability to only monitor a single namespace [#123](https://github.com/jetstack/kube-lego/pull/123)\n\n[View](https://github.com/jetstack/kube-lego/pulls?utf8=âœ“&q=is%3Apr%20is%3Aclosed%20merged%3A2016-11-03..2017-05-12%20%20fix) all the changes\n\n## [0.1.3] - 2016-11-03\n\n### Fixed\n\n- Workaround for GLBC health check detection bug\n- Raise resync period to 60 seconds\n- Use correct minimum validity config (used the `LEGO_CHECK_INTERVAL` before)\n\n### Added\n\n* Replace lego with the acme library\n* Increase tests coverage and automation\n* Improved log output, no secrets default log level is debug\n* Upgrade dependencies\n* Upgrade to go 1.7.3\n* Possibility to change api server url [Pavel Sorejs]\n\n## [0.1.2] - 2016-08-19\n\n### Fixed\n\n- Better error output for failing validations\n- Fix problems with updating ingress objects\n\n## [0.1.1] - 2016-08-16\n\n### Fixed\n\n- Fix version output of kube-lego\n- Fix image version in the docs\n\n## [0.1.0] - 2016-08-10\n\n### Added\n\n- Support for GCE load balancer ingress controller\n- E2E automation scripts for GCE/NGINX ingress controllers on GKE\n- Support for ingress-class annotations to distinguish between GCE/NGINX ingress\n- Abstracted the ingress controller specific code into separate packages\n- Deployment of kube-lego uses readiness checks\n\n### Fixed\n\n- Handle failed certificate request without exiting kube-lego\n\n\n## [0.0.4] - 2016-07-11\n### Added\n- Check for expired certificates periodically (default config every 8 hours)\n- Use upstream nginx-ingress-controller (from k8s-contrib)\n\n### Fixed\n- Fix bug for empty kube-lego ingress resource\n\n## [0.0.3] - 2016-05-27\n### Added\n- E2E test for receiving a cert from Let's Encrypt Staging\n- Updating docs/examples to use latest nginx-ingress release\n\n## [0.0.2] - 2016-05-03\n### Added\n- Documentation\n- Versioned docker images\n- Jenkins builds using pipelines/workflow plugin\n\n## [0.0.1] - 2016-05-03 - MVP release\n### Added\n- Recognizes the need of a new certificate (domain name missing, certificate expired, certificate unparseable)\n- Obtains certificates per TLS object in ingress resources and stores it in Kubernetes secrets using `HTTP-01` challenge\n- Creates a user account (incl. private key) for Let's Encrypt and stores it in Kubernetes secrets\n- Watches changes of ingress resources and reevaluate certificates\n- Configures endpoints for `HTTP-01` challenge in a separate ingress resource\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2216796875,
          "content": "# Contributing\n\n## DCO Sign off\n\nAll authors to the project retain copyright to their work. However, to ensure\nthat they are only submitting work that they have rights to, we are requiring\neveryone to acknowledge this by signing their work.\n\nAny copyright notices in this repo should specify the authors as \"the Jetstack\ncert-manager contributors\".\n\nTo sign your work, just add a line like this at the end of your commit message:\n\n```\nSigned-off-by: Joe Bloggs <joe@example.com>\n```\n\nThis can easily be done with the `--signoff` option to `git commit`.\nYou can also mass sign-off a whole PR with `git rebase --signoff master`, replacing\n`master` with the branch you are creating a pull request again if not master.\n\nBy doing this you state that you can certify the following (from\n[developercertificate.org](https://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5146484375,
          "content": "FROM alpine:3.5\n\n# install ca certificates for comms with Let's Encrypt\nRUN apk --update add ca-certificates && rm -rf /var/cache/apk/*\n\n# add user / group\nRUN addgroup -g 1000 app && \\\n    adduser -G app -h /home/app -u 1000 -D app\n\n# move to user / group\nUSER app\nWORKDIR /home/app\n\nCOPY _build/kube-lego-linux-amd64 /kube-lego\nENTRYPOINT [\"/kube-lego\"]\nARG VCS_REF\nLABEL org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/jetstack/kube-lego\" \\\n      org.label-schema.license=\"Apache-2.0\"\n"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 10.455078125,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  name = \"github.com/PuerkitoBio/purell\"\n  packages = [\".\"]\n  revision = \"0bcb03f4b4d0a9428594752bd2a3b9aa0a9d4bd4\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/PuerkitoBio/urlesc\"\n  packages = [\".\"]\n  revision = \"de5bf2ad457846296e2031421a34e2568e304e35\"\n\n[[projects]]\n  name = \"github.com/Sirupsen/logrus\"\n  packages = [\".\"]\n  revision = \"d682213848ed68c0a260ca37d6dd5ace8423f5ba\"\n  version = \"v1.0.4\"\n\n[[projects]]\n  name = \"github.com/asaskevich/govalidator\"\n  packages = [\".\"]\n  revision = \"521b25f4b05fd26bec69d9dedeb8f9c9a83939a8\"\n  version = \"v8\"\n\n[[projects]]\n  name = \"github.com/cenk/backoff\"\n  packages = [\".\"]\n  revision = \"61153c768f31ee5f130071d08fc82b85208528de\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  name = \"github.com/davecgh/go-spew\"\n  packages = [\"spew\"]\n  revision = \"346938d642f2ec3594ed81d874461961cd0faa76\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  name = \"github.com/docker/distribution\"\n  packages = [\"digest\",\"reference\"]\n  revision = \"48294d928ced5dd9b378f7fd7c6f5da3ff3f2c89\"\n  version = \"v2.6.2\"\n\n[[projects]]\n  name = \"github.com/emicklei/go-restful\"\n  packages = [\".\",\"log\"]\n  revision = \"2dd44038f0b95ae693b266c5f87593b5d2fdd78d\"\n  version = \"v2.5.0\"\n\n[[projects]]\n  name = \"github.com/emicklei/go-restful-swagger12\"\n  packages = [\".\"]\n  revision = \"dcef7f55730566d41eae5db10e7d6981829720f6\"\n  version = \"1.0.1\"\n\n[[projects]]\n  name = \"github.com/ghodss/yaml\"\n  packages = [\".\"]\n  revision = \"0ca9ea5df5451ffdf184b4428c902747c2c11cd7\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/analysis\"\n  packages = [\".\"]\n  revision = \"0db1e4cf47d6eb0fc6b25135868c3483cc6b066e\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/errors\"\n  packages = [\".\"]\n  revision = \"7bcb96a367bac6b76e6e42fa84155bb5581dcff8\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/jsonpointer\"\n  packages = [\".\"]\n  revision = \"779f45308c19820f1a69e9a4cd965f496e0da10f\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/jsonreference\"\n  packages = [\".\"]\n  revision = \"36d33bfe519efae5632669801b180bf1a245da3b\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/loads\"\n  packages = [\".\"]\n  revision = \"2a2b323bab96e6b1fdee110e57d959322446e9c9\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/spec\"\n  packages = [\".\"]\n  revision = \"fa03337d7da5735229ee8f5e9d5d0b996014b7f8\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/strfmt\"\n  packages = [\".\"]\n  revision = \"4dd3d302e100bae008baedc42d446ce83bdd10ad\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/swag\"\n  packages = [\".\"]\n  revision = \"84f4bee7c0a6db40e3166044c7983c1c32125429\"\n\n[[projects]]\n  name = \"github.com/gogo/protobuf\"\n  packages = [\"proto\",\"sortkeys\"]\n  revision = \"342cbe0a04158f6dcb03ca0079991a51a4248c02\"\n  version = \"v0.5\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/golang/glog\"\n  packages = [\".\"]\n  revision = \"23def4e6c14b4da8ac2ed8007337bc5eb5007998\"\n\n[[projects]]\n  name = \"github.com/golang/mock\"\n  packages = [\"gomock\"]\n  revision = \"13f360950a79f5864a972c786a10a50e44b69541\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/google/gofuzz\"\n  packages = [\".\"]\n  revision = \"24818f796faf91cd76ec7bddd72458fbced7a6c1\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/hashicorp/golang-lru\"\n  packages = [\".\",\"simplelru\"]\n  revision = \"0a025b7e63adc15a622f29b0b2c4c3848243bbf6\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/howeyc/gopass\"\n  packages = [\".\"]\n  revision = \"bf9dde6d0d2c004a008c27aaee91170c786f6db8\"\n\n[[projects]]\n  name = \"github.com/imdario/mergo\"\n  packages = [\".\"]\n  revision = \"f1ac5984e69fed03e0574a92f70c59f132616ea2\"\n  version = \"0.3.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/juju/ratelimit\"\n  packages = [\".\"]\n  revision = \"59fac5042749a5afb9af70e813da1dd5474f0167\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/mailru/easyjson\"\n  packages = [\"buffer\",\"jlexer\",\"jwriter\"]\n  revision = \"32fa128f234d041f196a9f3e0fea5ac9772c08e1\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/mitchellh/mapstructure\"\n  packages = [\".\"]\n  revision = \"b4575eea38cca1123ec2dc90c26529b5c5acfcff\"\n\n[[projects]]\n  name = \"github.com/onsi/ginkgo\"\n  packages = [\".\",\"config\",\"internal/codelocation\",\"internal/containernode\",\"internal/failer\",\"internal/leafnodes\",\"internal/remote\",\"internal/spec\",\"internal/spec_iterator\",\"internal/specrunner\",\"internal/suite\",\"internal/testingtproxy\",\"internal/writer\",\"reporters\",\"reporters/stenographer\",\"reporters/stenographer/support/go-colorable\",\"reporters/stenographer/support/go-isatty\",\"types\"]\n  revision = \"9eda700730cba42af70d53180f9dcce9266bc2bc\"\n  version = \"v1.4.0\"\n\n[[projects]]\n  name = \"github.com/onsi/gomega\"\n  packages = [\".\",\"format\",\"internal/assertion\",\"internal/asyncassertion\",\"internal/oraclematcher\",\"internal/testingtsupport\",\"matchers\",\"matchers/support/goraph/bipartitegraph\",\"matchers/support/goraph/edge\",\"matchers/support/goraph/node\",\"matchers/support/goraph/util\",\"types\"]\n  revision = \"003f63b7f4cff3fc95357005358af2de0f5fe152\"\n  version = \"v1.3.0\"\n\n[[projects]]\n  name = \"github.com/pmezard/go-difflib\"\n  packages = [\"difflib\"]\n  revision = \"792786c7400a136282c1664665ae0a8db921c6c2\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  name = \"github.com/spf13/pflag\"\n  packages = [\".\"]\n  revision = \"e57e3eeb33f795204c1ca35f56c44f83227c6e66\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  name = \"github.com/stretchr/testify\"\n  packages = [\"assert\"]\n  revision = \"b91bfb9ebec76498946beb6af7c0230c7cc7ba6c\"\n  version = \"v1.2.0\"\n\n[[projects]]\n  name = \"github.com/ugorji/go\"\n  packages = [\"codec\"]\n  revision = \"ded73eae5db7e7a0ef6f55aace87a2873c5d2b74\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n  packages = [\"acme\",\"ssh/terminal\"]\n  revision = \"13931e22f9e72ea58bb73048bc752b48c6d4d4ac\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/net\"\n  packages = [\"context\",\"html\",\"html/atom\",\"html/charset\",\"http2\",\"http2/hpack\",\"idna\",\"lex/httplex\"]\n  revision = \"5ccada7d0a7ba9aeb5d3aca8d3501b4c2a509fec\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/sys\"\n  packages = [\"unix\",\"windows\"]\n  revision = \"fff93fa7cd278d84afc205751523809c464168ab\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/text\"\n  packages = [\"collate\",\"collate/build\",\"encoding\",\"encoding/charmap\",\"encoding/htmlindex\",\"encoding/internal\",\"encoding/internal/identifier\",\"encoding/japanese\",\"encoding/korean\",\"encoding/simplifiedchinese\",\"encoding/traditionalchinese\",\"encoding/unicode\",\"internal/colltab\",\"internal/gen\",\"internal/tag\",\"internal/triegen\",\"internal/ucd\",\"internal/utf8internal\",\"language\",\"runes\",\"secure/bidirule\",\"transform\",\"unicode/bidi\",\"unicode/cldr\",\"unicode/norm\",\"unicode/rangetable\",\"width\"]\n  revision = \"e19ae1496984b1c655b8044a65c0300a3c878dd3\"\n\n[[projects]]\n  name = \"gopkg.in/inf.v0\"\n  packages = [\".\"]\n  revision = \"3887ee99ecf07df5b447e9b00d9c0b2adaa9f3e4\"\n  version = \"v0.9.0\"\n\n[[projects]]\n  branch = \"v2\"\n  name = \"gopkg.in/mgo.v2\"\n  packages = [\"bson\",\"internal/json\"]\n  revision = \"3f83fa5005286a7fe593b055f0d7771a7dce4655\"\n\n[[projects]]\n  branch = \"v2\"\n  name = \"gopkg.in/yaml.v2\"\n  packages = [\".\"]\n  revision = \"d670f9405373e636a5a2765eea47fac0c9bc91a4\"\n\n[[projects]]\n  branch = \"release-1.7\"\n  name = \"k8s.io/apimachinery\"\n  packages = [\"pkg/api/equality\",\"pkg/api/errors\",\"pkg/api/meta\",\"pkg/api/resource\",\"pkg/apimachinery\",\"pkg/apimachinery/announced\",\"pkg/apimachinery/registered\",\"pkg/apis/meta/v1\",\"pkg/apis/meta/v1/unstructured\",\"pkg/apis/meta/v1alpha1\",\"pkg/conversion\",\"pkg/conversion/queryparams\",\"pkg/conversion/unstructured\",\"pkg/fields\",\"pkg/labels\",\"pkg/openapi\",\"pkg/runtime\",\"pkg/runtime/schema\",\"pkg/runtime/serializer\",\"pkg/runtime/serializer/json\",\"pkg/runtime/serializer/protobuf\",\"pkg/runtime/serializer/recognizer\",\"pkg/runtime/serializer/streaming\",\"pkg/runtime/serializer/versioning\",\"pkg/selection\",\"pkg/types\",\"pkg/util/cache\",\"pkg/util/clock\",\"pkg/util/diff\",\"pkg/util/errors\",\"pkg/util/framer\",\"pkg/util/intstr\",\"pkg/util/json\",\"pkg/util/net\",\"pkg/util/rand\",\"pkg/util/runtime\",\"pkg/util/sets\",\"pkg/util/validation\",\"pkg/util/validation/field\",\"pkg/util/wait\",\"pkg/util/yaml\",\"pkg/version\",\"pkg/watch\",\"third_party/forked/golang/reflect\"]\n  revision = \"8a12651bddd061e6fac22c64db4fb0fe5b1013d2\"\n\n[[projects]]\n  branch = \"release-4.0\"\n  name = \"k8s.io/client-go\"\n  packages = [\"discovery\",\"kubernetes\",\"kubernetes/scheme\",\"kubernetes/typed/admissionregistration/v1alpha1\",\"kubernetes/typed/apps/v1beta1\",\"kubernetes/typed/authentication/v1\",\"kubernetes/typed/authentication/v1beta1\",\"kubernetes/typed/authorization/v1\",\"kubernetes/typed/authorization/v1beta1\",\"kubernetes/typed/autoscaling/v1\",\"kubernetes/typed/autoscaling/v2alpha1\",\"kubernetes/typed/batch/v1\",\"kubernetes/typed/batch/v2alpha1\",\"kubernetes/typed/certificates/v1beta1\",\"kubernetes/typed/core/v1\",\"kubernetes/typed/extensions/v1beta1\",\"kubernetes/typed/networking/v1\",\"kubernetes/typed/policy/v1beta1\",\"kubernetes/typed/rbac/v1alpha1\",\"kubernetes/typed/rbac/v1beta1\",\"kubernetes/typed/settings/v1alpha1\",\"kubernetes/typed/storage/v1\",\"kubernetes/typed/storage/v1beta1\",\"pkg/api\",\"pkg/api/v1\",\"pkg/api/v1/ref\",\"pkg/apis/admissionregistration\",\"pkg/apis/admissionregistration/v1alpha1\",\"pkg/apis/apps\",\"pkg/apis/apps/v1beta1\",\"pkg/apis/authentication\",\"pkg/apis/authentication/v1\",\"pkg/apis/authentication/v1beta1\",\"pkg/apis/authorization\",\"pkg/apis/authorization/v1\",\"pkg/apis/authorization/v1beta1\",\"pkg/apis/autoscaling\",\"pkg/apis/autoscaling/v1\",\"pkg/apis/autoscaling/v2alpha1\",\"pkg/apis/batch\",\"pkg/apis/batch/v1\",\"pkg/apis/batch/v2alpha1\",\"pkg/apis/certificates\",\"pkg/apis/certificates/v1beta1\",\"pkg/apis/extensions\",\"pkg/apis/extensions/v1beta1\",\"pkg/apis/networking\",\"pkg/apis/networking/v1\",\"pkg/apis/policy\",\"pkg/apis/policy/v1beta1\",\"pkg/apis/rbac\",\"pkg/apis/rbac/v1alpha1\",\"pkg/apis/rbac/v1beta1\",\"pkg/apis/settings\",\"pkg/apis/settings/v1alpha1\",\"pkg/apis/storage\",\"pkg/apis/storage/v1\",\"pkg/apis/storage/v1beta1\",\"pkg/util\",\"pkg/util/parsers\",\"pkg/version\",\"rest\",\"rest/watch\",\"tools/auth\",\"tools/cache\",\"tools/clientcmd\",\"tools/clientcmd/api\",\"tools/clientcmd/api/latest\",\"tools/clientcmd/api/v1\",\"tools/metrics\",\"transport\",\"util/cert\",\"util/flowcontrol\",\"util/homedir\",\"util/integer\",\"util/workqueue\"]\n  revision = \"0cdf7ac6ed103d89206cfff7fd3a9f4074771d22\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  inputs-digest = \"2a7e68b37e8d090d2467fbcd818831f55ec13e25eb0b0990cf703eae546d89f3\"\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 0.9130859375,
          "content": "[[constraint]]\n  name = \"github.com/Sirupsen/logrus\"\n  version = \"1.0.4\"\n\n[[constraint]]\n  name = \"github.com/cenk/backoff\"\n  version = \"1.1.0\"\n\n[[constraint]]\n  name = \"github.com/golang/mock\"\n  version = \"1.0.0\"\n\n[[constraint]]\n  name = \"github.com/onsi/ginkgo\"\n  version = \"1.4.0\"\n\n[[constraint]]\n  name = \"github.com/onsi/gomega\"\n  version = \"1.3.0\"\n\n[[constraint]]\n  name = \"github.com/stretchr/testify\"\n  version = \"1.2.0\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"golang.org/x/net\"\n\n[[constraint]]\n  name = \"k8s.io/client-go\"\n  branch = \"release-4.0\"\n\n[[constraint]]\n  name = \"k8s.io/apimachinery\"\n  branch = \"release-1.7\"\n\n[[constraint]]\n  name = \"k8s.io/api\"\n  branch = \"release-1.7\"\n\n[[constraint]]\n  name = \"k8s.io/apiserver\"\n  branch = \"release-1.7\"\n\n[[override]]\n  name = \"github.com/ugorji/go\"\n  revision = \"ded73eae5db7e7a0ef6f55aace87a2873c5d2b74\"\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 3.236328125,
          "content": "// vim: et:ts=4:sw=4:ft=groovy\ndef jenkinsSlack(type){\n    def jobInfo = \"\\n Â» ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|job>) (<${env.BUILD_URL}/console|console>)\"\n    if (type == 'start'){\n        slackSend color: 'blue', message: \"build started${jobInfo}\"\n    }\n    if (type == 'finish'){\n        def buildColor = currentBuild.result == null? \"good\": \"warning\"\n        def buildStatus = currentBuild.result == null? \"SUCCESS\": currentBuild.result\n        slackSend color: buildColor, message: \"build finished - ${buildStatus}${jobInfo}\"\n    }\n}\n\ndef gitTags(commit) {\n    sh(\"git tag --contains ${commit} > GIT_TAGS\")\n    def gitTags = readFile('GIT_TAGS').trim()\n    sh('rm -f GIT_TAGS')\n    if (gitTags == '') {\n        return []\n    }\n    return gitTags.tokenize('\\n')\n}\n\ndef gitCommit() {\n    sh('git rev-parse HEAD > GIT_COMMIT')\n    def gitCommit = readFile('GIT_COMMIT').trim()\n    sh('rm -f GIT_COMMIT')\n    return gitCommit\n}\n\ndef gitMasterBranchCommit() {\n    sh('git rev-parse origin/master > GIT_MASTER_COMMIT')\n    def gitCommit = readFile('GIT_MASTER_COMMIT').trim()\n    sh('rm -f GIT_MASTER_COMMIT')\n    return gitCommit\n}\n\ndef onMasterBranch(){\n    return gitCommit() == gitMasterBranchCommit()\n}\n\ndef imageTags(){\n    def gitTags = gitTags(gitCommit())\n    if (gitTags == []) {\n        return [\"canary\"]\n    } else {\n        return gitTags + [\"latest\"]\n    }\n}\n\nnode('docker'){\n    catchError {\n        def imageName = 'jetstack/kube-lego'\n        def imageTag = 'jenkins-build'\n\n        jenkinsSlack('start')\n\n        stage 'Checkout source code'\n        checkout scm\n\n        stage 'Test kube-lego'\n        sh \"make docker_test\"\n        step([$class: 'JUnitResultArchiver', testResults: '_test/test*.xml'])\n\n        stage 'Build kube-lego'\n        sh \"make docker_build\"\n\n        stage 'Build docker image'\n        sh \"docker build --build-arg VCS_REF=${gitCommit().take(8)} -t ${imageName}:${imageTag} .\"\n\n        if (onMasterBranch()) {\n            stage 'Push docker image'\n\n\n            withCredentials([[$class: 'FileBinding', credentialsId: '31a54b99-cab6-4a1a-9bd7-4de5e85ca0e6', variable: 'DOCKER_CONFIG_FILE']]) {\n                try {\n                    // prepare docker auth\n                    sh 'mkdir -p _temp_dockercfg'\n                    sh 'ln -sf \\$DOCKER_CONFIG_FILE _temp_dockercfg/config.json'\n\n                    // get tags to push\n                    def imageTags = imageTags()\n                    echo \"tags to push '${imageTags}'\"\n\n                    def desc = []\n                    for (i = 0; i < imageTags.size(); i++) {\n                        def repoNameTag = \"${imageName}:${imageTags[i]}\"\n                        echo \"Push and tag ${repoNameTag}\"\n                        sh \"docker tag ${imageName}:${imageTag} ${repoNameTag}\"\n                        sh \"docker --config=_temp_dockercfg push ${repoNameTag}\"\n                        desc << \"${repoNameTag}\"\n                    }\n\n                    currentBuild.description = desc.join(\"\\n\") + \"\\ngit_commit=${gitCommit().take(8)}\"\n                } finally {\n                    sh 'rm -rf _temp_dockercfg'\n                }\n            }\n        }\n    }\n    jenkinsSlack('finish')\n    step([$class: 'Mailer', recipients: 'christian@jetstack.io', notifyEveryUnstableBuild: true])\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1005859375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 Christian Simon All rights reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.005859375,
          "content": "ACCOUNT=jetstack\nAPP_NAME=kube-lego\n\nPACKAGE_NAME=github.com/${ACCOUNT}/${APP_NAME}\nGO_VERSION=1.9.2\n\nGOOS := linux\nGOARCH := amd64\n\nDOCKER_IMAGE=${ACCOUNT}/${APP_NAME}\n\nBUILD_DIR=_build\nTEST_DIR=_test\n\nCONTAINER_DIR=/go/src/${PACKAGE_NAME}\n\nBUILD_TAG := build\nIMAGE_TAGS := canary\n\nPACKAGES=$(shell find . -name \"*_test.go\" | xargs -n1 dirname | grep -v 'vendor/' | sort -u | xargs -n1 printf \"%s.test_pkg \")\n\n.PHONY: version\n\nall: test build\n\ncodegen:\n\twhich mockgen\n\tmockgen -imports .=github.com/jetstack/kube-lego/pkg/kubelego_const -package=mocks -source=pkg/kubelego_const/interfaces.go > pkg/mocks/mocks.go\n\ndepend:\n\trm -rf $(TEST_DIR)/\n\trm -rf ${BUILD_DIR}/\n\tmkdir $(TEST_DIR)/\n\tmkdir $(BUILD_DIR)/\n\nversion:\n\t$(eval GIT_STATE := $(shell if test -z \"`git status --porcelain 2> /dev/null`\"; then echo \"clean\"; else echo \"dirty\"; fi))\n\t$(eval GIT_COMMIT := $(shell git rev-parse HEAD))\n\t$(eval APP_VERSION ?= $(shell cat VERSION))\n\techo $(APP_VERSION)\n\n\ntest_prepare: depend\n\twhich gocover-cobertura || go get github.com/t-yuki/gocover-cobertura\n\twhich go2xunit || go get github.com/tebeka/go2xunit\n\twhich ngrok || curl -sL \"https://bin.equinox.io/a/mU8jSiqMekT/ngrok-2.1.14-linux-amd64.tar.gz\" | tar xvzf - -C \"${GOPATH}/bin\"\n\tgo build -i\n\ntest: test_prepare $(PACKAGES)\n\techo $(PACKAGES)\n\n%.test_pkg: test_prepare\n\t$(eval PKG := ./$*)\n\t$(eval PKG_CLEAN := $(shell echo \"$*\" | sed \"s#^p#.p#\" | sed \"s#/#-#g\"))\n\t@echo \"test $(PKG_CLEAN) ($(PKG))\"\n\tbash -o pipefail -c \"go test -v -coverprofile=$(TEST_DIR)/coverage$(PKG_CLEAN).txt -covermode count $(PKG) | tee $(TEST_DIR)/test$(PKG_CLEAN).out\"\n\tcat $(TEST_DIR)/test$(PKG_CLEAN).out | go2xunit > $(TEST_DIR)/test$(PKG_CLEAN).xml\n\tgocover-cobertura < $(TEST_DIR)/coverage$(PKG_CLEAN).txt > $(TEST_DIR)/coverage$(PKG_CLEAN).xml\n\nbuild: depend version\n\tCGO_ENABLED=0 GOOS=$(GOOS) GOARCH=$(GOARCH) go build \\\n\t\t-a -tags netgo \\\n\t\t-o ${BUILD_DIR}/${APP_NAME}-$(GOOS)-$(GOARCH) \\\n\t\t-ldflags \"-X main.AppGitState=${GIT_STATE} -X main.AppGitCommit=${GIT_COMMIT} -X main.AppVersion=${APP_VERSION}\"\n\ndocker: docker_all\n\ndocker_%:\n\t# create a container\n\t$(eval CONTAINER_ID := $(shell docker create \\\n\t\t-i \\\n\t\t-w $(CONTAINER_DIR) \\\n\t\tgolang:${GO_VERSION} \\\n\t\t/bin/bash -c \"tar xf - && make $*\" \\\n\t))\n\t\n\t# run build inside container\n\ttar cf - . | docker start -a -i $(CONTAINER_ID)\n\n\t# copy artifacts over\n\trm -rf $(BUILD_DIR)/ $(TEST_DIR)/\n\tdocker cp $(CONTAINER_ID):$(CONTAINER_DIR)/$(BUILD_DIR)/ .\n\tdocker cp $(CONTAINER_ID):$(CONTAINER_DIR)/$(TEST_DIR)/ .\n\n\t# remove container\n\tdocker rm $(CONTAINER_ID)\n\nimage: docker_all version\n\tdocker build --build-arg VCS_REF=$(GIT_COMMIT) -t $(DOCKER_IMAGE):$(BUILD_TAG) .\n\t\npush: image\n\tset -e; \\\n\tfor tag in $(IMAGE_TAGS); do \\\n\t\tdocker tag  $(DOCKER_IMAGE):$(BUILD_TAG) $(DOCKER_IMAGE):$${tag} ; \\\n\t\tdocker push $(DOCKER_IMAGE):$${tag}; \\\n\tdone\n\nrelease:\nifndef VERSION\n\t$(error VERSION is not set)\nendif\n\t@echo \"Preparing release of version $(VERSION)\"\n\techo $(VERSION) > VERSION\n\tfind examples -name '*.yaml' -type f -exec sed -i 's/kube-lego:[0-9\\.]*$$/kube-lego:$(VERSION)/g' {} \\;\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.8994140625,
          "content": "# kube-lego\n\n>  :warning:\n>\n>  kube-lego is no longer maintained. The officially endorsed successor is **[cert-manager](https://github.com/jetstack/cert-manager/)**.\n>\n>  If you are a current user of kube-lego, you can find a migration guide [here](https://cert-manager.readthedocs.io/en/latest/tutorials/acme/migrating-from-kube-lego.html).\n>\n>  :warning:\n\n\n*kube-lego* automatically requests certificates for Kubernetes Ingress resources from Let's Encrypt\n\n[![Build Status](https://travis-ci.org/jetstack/kube-lego.svg?branch=master)](https://travis-ci.org/jetstack/kube-lego)\n[![](https://images.microbadger.com/badges/version/jetstack/kube-lego.svg)](http://microbadger.com/#/images/jetstack/kube-lego \"Get your own version badge on microbadger.com\")\n\n## Screencast\n\n[![Kube Lego screencast](https://asciinema.org/a/47444.png)](https://asciinema.org/a/47444)\n\n## Features\n\n- Recognizes the need of a new certificate for this cases:\n  - No certificate existing\n  - Existing certificate is not containing all domain names\n  - Existing certificate is expired or near to its expiry date (cf. option `LEGO_MINIMUM_VALIDITY`)\n  - Existing certificate is unparseable, invalid or not matching the secret key\n- Creates a user account (incl. private key) for Let's Encrypt and stores it in Kubernetes secrets (secret name is configurable via `LEGO_SECRET_NAME`)\n- Obtains the missing certificates from Let's Encrypt and authorizes the request with the `HTTP-01` challenge\n- Makes sure that the specific Kubernetes objects (Services, Ingress) contain the rights configuration for the `HTTP-01` challenge to succeed\n- Official Kubernetes Helm [chart](https://github.com/kubernetes/charts/tree/master/stable/kube-lego) for simplistic deployment.\n\n## Requirements\n\n- Kubernetes 1.2+\n- Compatible ingress controller (nginx or GCE see [here](#ingress-controllers))\n- Non-production use case :laughing:\n\n## Usage\n\n### run kube-lego\n\n* [GCE](examples/gce/README.md)\n* [nginx controller](examples/nginx/README.md)\n\nThe default value of `LEGO_URL` is the Let's Encrypt **staging environment**. If you want to get \"real\" certificates you have to configure their production env.\n\n### how kube-lego works\n\nAs soon as the kube-lego daemon is running, it will create a user account with LetsEncrypt, make a service resource, and look for ingress resources that have this annotation:\n\n```yaml\nmetadata:\n  annotations:\n    kubernetes.io/tls-acme: \"true\"\n```\n\nEvery ingress resource that has this annotation will be monitored by *kube-lego* (cluster-wide in all namespaces). The only part that is watched is the list `spec.tls`. Every element will get its own certificate through Let's Encrypt.\n\nLet's take a look at this ingress resource:\n\n```yaml\nspec:\n  tls:\n  - secretName: mysql-tls\n    hosts:\n    - phpmyadmin.example.com\n    - mysql.example.com\n  - secretName: postgres-tls\n    hosts:\n    - postgres.example.com\n```\n\nOn finding the above resource, the following happens:\n\n1. An ingress resource is created coordinating where to send acme challenges for the said domains.\n\n2. *kube-lego* will then perform its own check for i.e. `http://mysql.example.com/.well-known/acme-challenge/_selftest` to ensure all is well before reaching out to letsencrypt.\n\n3. *kube-lego* will obtain two certificates (one with phpmyadmin.example.com and mysql.example.com, the other with postgres.example.com).\n\n\nPlease note:\n\n- The `secretName` statements have to be unique per namespace\n- `secretName` is required (even if no secret exists with that name, as it will be created by *kube-lego*)\n- Setups which utilize 1:1 NAT need to ensure internal resources can reach gateway controlled public addresses.\n- Additionally, your domain must point to your externally available Load Balancer (either directly or via 1:1 NAT)\n\n### Switching from staging to production\nAt some point you'll be ready to use LetsEncrypt production API URL. To make the switch in kube-lego, please do the following:\n* Update `LEGO_URL` to `https://acme-v01.api.letsencrypt.org/directory`.\n* Delete the existing k8s secret `kube-lego-account`.\n* Delete other secrets that hold data for certificates you want to replace.\n* Restart kube-lego.\n\n## Ingress controllers\n\n### [Nginx Ingress Controller](https://github.com/kubernetes/ingress-nginx/)\n\n- available through image `gcr.io/google_containers/nginx-ingress-controller`\n- fully supports kube-lego from version 0.8 onwards\n\n### [GCE Loadbalancers](https://github.com/kubernetes/ingress-gce/)\n\n- you don't have to maintain the ingress controller yourself, you pay GCE to do that for you\n- every ingress resource creates one GCE load balancer\n- all service that you want to expose, have to be `Type=NodePort`\n\n## Environment variables\n\n| Name | Required | Default | Description |\n|------|----------|---------|-------------|\n| `LEGO_EMAIL` | y | `-` | E-Mail address for the ACME account, used to recover from lost secrets |\n| `LEGO_POD_IP` | y | `-` | Pod IP address (use the [downward API](https://kubernetes.io/docs/tasks/configure-pod-container/environment-variable-expose-pod-information/#the-downward-api))|\n| `LEGO_NAMESPACE` | n | `default` | Namespace where kube-lego is running in |\n| `LEGO_URL` | n | `https://acme-staging.api.letsencrypt.org/directory` | URL for the ACME server. To get \"real\" certificates set to the production API of Let's Encrypt: `https://acme-v01.api.letsencrypt.org/directory` |\n| `LEGO_SECRET_NAME` | n | `kube-lego-account` | Name of the secret in the same namespace that contains ACME account secret |\n| `LEGO_SERVICE_SELECTOR` | n | `kube-lego` | Set the service selector to the the kube-lego pod |\n| `LEGO_SERVICE_NAME_NGINX` | n | `kube-lego-nginx` | Service name for NGINX ingress |\n| `LEGO_SERVICE_NAME_GCE` | n | `kube-lego-gce` | Service name for GCE ingress |\n| `LEGO_SUPPORTED_INGRESS_CLASS` | n | `nginx,gce` | Specify the supported ingress class |\n| `LEGO_SUPPORTED_INGRESS_PROVIDER` | n | `nginx,gce` | Specify the supported ingress provider |\n| `LEGO_INGRESS_NAME_NGINX` | n | `kube-lego-nginx` | Ingress name which contains the routing for HTTP verification for nginx ingress |\n| `LEGO_PORT` | n | `8080` | Port where this daemon is listening for verifcation calls (HTTP method) |\n| `LEGO_CHECK_INTERVAL` | n | `8h` | Interval for periodically certificate checks (to find expired certs) |\n| `LEGO_MINIMUM_VALIDITY` | n | `720h` (30 days) | Request a renewal when the remaining certificate validity falls below that value |\n| `LEGO_DEFAULT_INGRESS_CLASS` | n | `nginx` | Default ingress class for resources without specification|\n| `LEGO_DEFAULT_INGRESS_PROVIDER` | n | `$LEGO_DEFAULT_INGRESS_CLASS` | Default ingress provider for resources without specification |\n| `LEGO_KUBE_API_URL` | n | `http://127.0.0.1:8080` | API server URL |\n| `LEGO_LOG_LEVEL` | n | `info` | Set log level (`debug`, `info`, `warn` or `error`) |\n| `LEGO_LOG_TYPE` | n | `text` | Set log type. Only `json` as custom value supported, everything else defaults to default logrus textFormat |\n| `LEGO_KUBE_ANNOTATION` | n | `kubernetes.io/tls-acme` | Set the ingress annotation used by this instance of kube-lego to get certificate for from Let's Encrypt. Allows you to run kube-lego against staging and production LE |\n| `LEGO_WATCH_NAMESPACE` | n | `` | Namespace that kube-lego should watch for ingresses and services |\n| `LEGO_RSA_KEYSIZE` | n | `2048` | Size of the private RSA key |\n| `LEGO_EXPONENTIAL_BACKOFF_MAX_ELAPSED_TIME` | n | `5m` | Max time to wait for each domain authorization attempt |\n| `LEGO_EXPONENTIAL_BACKOFF_MAX_INITIAL_INTERVAL` | n | `30s` | Initial interval to wait for each domain authorization attempt |\n| `LEGO_EXPONENTIAL_BACKOFF_MAX_MULTIPLIER` | n | `2.0` | Multiplier for every step |\n\n## Full deployment examples\n\n- [Nginx Ingress Controller](examples/nginx/)\n- [GCE Load Balancers](examples/gce/)\n\n## Troubleshooting\n\nWhen interacting with *kube-lego*, its a good idea to run with `LEGO_LOG_LEVEL=debug` for more verbose details.\nAdditionally, be aware of the automatically created resources (see environment variables) when cleaning up or testing.\n\nPossible resources for *help*:\n\n* The official channel ~~`#kube-lego`~~ `#cert-manager` on `kubernetes.slack.com` (The old channel was renamed)\n\n> There is also a good chance to get some support on non-official support\n> channels for *kube-lego*, but be aware that these are rather general\n> kubernetes discussion channels.\n\n* `#coreos` on freenode\n* Slack channels like `#kubernetes-users` or `#kubernetes-novice` on `kubernetes.slack.com`\n* If you absolutely just can't figure out your problem, file an issue.\n\n\n### Enable the pprof tool\n\nTo enable the [pprof tool](https://golang.org/pkg/net/http/pprof/) run kube-lego with environment `LEGO_LOG_LEVEL=debug`.\n\nCapture 20 seconds of the execution trace:\n\n`$ wget http://localhost:8080/debug/pprof/trace?seconds=20 -O kube-lego.trace`\n\nYou can inspect the trace sample running\n\n`$ go tool trace kube-lego.trace`\n\n\n## Authors\n\n* Christian Simon for [Jetstack Ltd](http://www.jetstack.io)\n* [PR contributors](https://github.com/jetstack/kube-lego/graphs/contributors)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.1.6\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "labels.yaml",
          "type": "blob",
          "size": 3.0009765625,
          "content": "---\nrepo: jetstack/kube-lego\nlabels:\n- name: approved\n  color: 0ffa16\n- name: approved-for-milestone\n  color: fef2c0\n- name: area/templates\n  color: 0052cc\n- name: area/acme\n  color: 0052cc\n- name: area/reliability\n  color: 0052cc\n- name: area/security\n  color: d93f0b\n- name: area/test\n  color: 0052cc\n- name: area/upgrade\n  color: 0052cc\n- name: area/usability\n  color: 0052cc\n- name: cherrypick-approved\n  color: fef2c0\n- name: cherrypick-candidate\n  color: fef2c0\n- name: do-not-merge\n  color: e11d21\n- name: do-not-merge/work-in-progress\n  color: e11d21\n- name: do-not-merge/hold\n  color: e11d21\n- name: do-not-merge/cherry-pick-not-approved\n  color: e11d21\n- name: do-not-merge/release-note-label-needed\n  color: e11d21\n- name: do-not-merge/blocked-paths\n  color: e11d21\n- name: for-new-contributors\n  color: 006b75\n- name: help-wanted\n  color: 006b75\n- name: keep-open\n  color: fbca04\n- name: kind/api-change\n  color: c7def8\n- name: kind/bug\n  color: e11d21\n- name: kind/cleanup\n  color: c7def8\n- name: kind/design\n  color: c7def8\n- name: kind/documentation\n  color: c7def8\n- name: kind/enhancement\n  color: c7def8\n- name: kind/feature\n  color: c7def8\n- name: kind/flake\n  color: f7c6c7\n- name: kind/friction\n  color: c7def8\n- name: kind/new-api\n  color: c7def8\n- name: kind/old-docs\n  color: c7def8\n- name: kind/postmortem\n  color: bfe5bf\n- name: kind/support\n  color: eb6420\n- name: kind/technical-debt\n  color: c7def8\n- name: kind/upgrade-test-failure\n  color: fbca04\n- name: lgtm\n  color: 15dd18\n- name: milestone-labels-complete\n  color: 77bb00\n- name: milestone-labels-incomplete\n  color: e11d21\n- name: needs-ok-to-merge\n  color: ededed\n- name: needs-ok-to-test\n  color: b60205\n- name: needs-rebase\n  color: BDBDBD\n- name: non-release-blocker\n  color: 0e8a16\n- name: ok-to-merge\n  color: fbca04\n- name: priority/awaiting-more-evidence\n  color: fef2c0\n- name: priority/backlog\n  color: fbca04\n- name: priority/critical-urgent\n  color: e11d21\n- name: priority/failing-test\n  color: e11d21\n- name: priority/important-longterm\n  color: eb6420\n- name: priority/important-soon\n  color: eb6420\n- name: priority/P0\n  color: ff0000\n- name: priority/P1\n  color: ededed\n- name: priority/P2\n  color: ededed\n- name: priority/P3\n  color: ededed\n- name: queue/blocks-others\n  color: ffaa00\n- name: queue/critical-fix\n  color: ffaa00\n- name: queue/fix\n  color: ffaa00\n- name: queue/multiple-rebases\n  color: ffaa00\n- name: release-blocker\n  color: d93f0b\n- name: release-note\n  color: c2e0c6\n- name: release-note-action-required\n  color: c2e0c6\n- name: release-note-label-needed\n  color: db5a64\n- name: release-note-none\n  color: c2e0c6\n- name: retest-not-required\n  color: eb6420\n- name: retest-not-required-docs-only\n  color: fbca04\n- name: size/L\n  color: ee9900\n- name: size/M\n  color: eebb00\n- name: size/S\n  color: 77bb00\n- name: size/XL\n  color: ee5500\n- name: size/XS\n  color: \"009900\"\n- name: size/XXL\n  color: ee0000\n- name: stale\n  color: \"795548\"\n- name: status/in-progress\n  color: fef2c0\n- name: status/in-review\n  color: fef2c0\n- name: triaged\n  color: d455d0\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.498046875,
          "content": "package main\n\nimport (\n\t\"flag\"\n\n\t\"github.com/jetstack/kube-lego/pkg/kubelego\"\n)\n\nvar AppVersion = \"unknown\"\nvar AppGitCommit = \"\"\nvar AppGitState = \"\"\n\nfunc Version() string {\n\tversion := AppVersion\n\tif len(AppGitCommit) > 0 {\n\t\tversion += \"-\"\n\t\tversion += AppGitCommit[0:8]\n\t}\n\tif len(AppGitState) > 0 && AppGitState != \"clean\" {\n\t\tversion += \"-\"\n\t\tversion += AppGitState\n\t}\n\treturn version\n}\n\nfunc main() {\n\t// parse standard command line arguments\n\tflag.Parse()\n\n\tkl := kubelego.New(Version())\n\tkl.Init()\n}\n"
        },
        {
          "name": "main_test.go",
          "type": "blob",
          "size": 0.146484375,
          "content": "package main\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestVersion(t *testing.T) {\n\tassert.Equal(t, \"unknown\", Version())\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}