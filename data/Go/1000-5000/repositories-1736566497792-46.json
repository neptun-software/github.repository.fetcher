{
  "metadata": {
    "timestamp": 1736566497792,
    "page": 46,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hashicorp/consul-template",
      "stars": 4773,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".copywrite.hcl",
          "type": "blob",
          "size": 0.337890625,
          "content": "schema_version = 1\n\nproject {\n  license        = \"MPL-2.0\"\n  copyright_year = 2014\n\n  # (OPTIONAL) A list of globs that should not have copyright/license headers.\n  # Supports doublestar glob patterns for more flexibility in defining which\n  # files or folders should be ignored\n  header_ignore = [\n    # \"vendors/**\",\n    # \"**autogen**\",\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7392578125,
          "content": "### Custom ###\n/bin\n/pkg\n/vendor\nconsul-template\n\n### Golang ###\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n.proc\n\n# IDE files\n*.iml\n*.idea\n\n### OSX ###\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n# Thumbnails\n._*\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.7255859375,
          "content": "# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\nlinters:\n  disable-all: true\n  enable:\n    - gofmt\n    - govet\n    - unconvert\n    - staticcheck\n    - ineffassign\n    - unparam\n    - forbidigo\n    - gomodguard\n    - gosimple\n    - depguard\n\nissues:\n  # Disable the default exclude list so that all excludes are explicitly\n  # defined in this file.\n  exclude-use-default: false\n  exclude-rules:\n    - text: 'shadow: declaration of \"(err|ctx)\" shadows declaration at'\n      linters: [ govet ]\n  exclude-dirs-use-default: false\n\nlinters-settings:\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment\n      - nilness\n      - unusedwrite\n  forbidigo:\n    # Forbid the following identifiers (list of regexp).\n    forbid:\n      - '\\bioutil\\b(# Use io and os packages instead of ioutil)?'\n      - '\\brequire\\.New\\b(# Use package-level functions with explicit TestingT)?'\n      - '\\bassert\\.New\\b(# Use package-level functions with explicit TestingT)?'\n    # Exclude godoc examples from forbidigo checks.\n    # Default: true\n    exclude_godoc_examples: false\n  gofmt:\n    simplify: true\n  gomodguard:\n    blocked:\n      # List of blocked modules.\n      modules:\n        # Blocked module.\n        - github.com/hashicorp/go-msgpack:\n            recommendations:\n              - github.com/hashicorp/consul-net-rpc/go-msgpack\n        - github.com/golang/protobuf:\n            recommendations:\n              - google.golang.org/protobuf\n  depguard:\n    rules:\n      main:\n        # List of file globs that will match this list of settings to compare against.\n        # Default: $all\n        files:\n          - $all\n        # List of allowed packages.\n        allow:\n          - $gostd\n          - github.com/BurntSushi/toml\n          - github.com/Masterminds/sprig/v3\n          - github.com/davecgh/go-spew/spew\n          - github.com/hashicorp/consul-template\n          - github.com/hashicorp/consul/api\n          - github.com/hashicorp/consul/sdk/testutil\n          - github.com/hashicorp/go-gatedio\n          - github.com/hashicorp/go-hclog\n          - github.com/hashicorp/go-multierror\n          - github.com/hashicorp/go-rootcerts\n          - github.com/hashicorp/go-sockaddr/template\n          - github.com/hashicorp/go-syslog\n          - github.com/hashicorp/hcl\n          - github.com/hashicorp/logutils\n          - github.com/hashicorp/nomad/api\n          - github.com/hashicorp/vault/api\n          - dario.cat/mergo\n          - github.com/mitchellh/go-homedir\n          - github.com/mitchellh/hashstructure\n          - github.com/mitchellh/mapstructure\n          - github.com/pkg/errors\n          - github.com/stretchr/testify/assert\n          - github.com/stretchr/testify/require\n          - github.com/coreos/go-systemd\n\nrun:\n  timeout: 10m\n  concurrency: 4"
        },
        {
          "name": ".release",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 68.6708984375,
          "content": "# 0.39.1 (July 16, 2024)\n\nIMPROVEMENTS:\n* Enhance pkiCert template to return full CA chain [[GH-1962](https://github.com/hashicorp/consul-template/pull/1962)]\n\n# 0.39.0 (June 20, 2024)\n\nNEW FEATURES:\n* Add support for support for sameness groups [[GH-1899](https://github.com/hashicorp/consul-template/pull/1899)]\n\n# 0.38.1 (June 6, 2024)\n\nIMPROVEMENTS:\n* Return expanded list for exportedServices instead of wildcard from configuration entry [[GH-1948](https://github.com/hashicorp/consul-template/pull/1948)]\n\nBUG FIXES:\n* Return the correct value for exportedServices when called multiple times with different partitions [[GH-1949](https://github.com/hashicorp/consul-template/pull/1949)]\n\n# 0.38.0 (June 3, 2024)\n\nNEW FEATURES:\n* Add support for listing Consul partitions [[GH-1940](https://github.com/hashicorp/consul-template/pull/1940)]\n* Add support for listing exported services in a Consul partition [[GH-1940](https://github.com/hashicorp/consul-template/pull/1940)]\n* Add support for grouping Consul services by port [[GH-1939](https://github.com/hashicorp/consul-template/pull/1939)]\n\n# 0.37.6 (May 6, 2024)\nBUG FIXES:\n* Fix shimkv2 concatenation [GH-1921]https://github.com/hashicorp/consul-template/pull/1921/\n\n# 0.37.5 (April 30, 2024)\nIMPROVEMENTS:\n* Formatting changes [GH-1901]https://github.com/hashicorp/consul-template/pull/1901\n* Use lifespan instead of duration when calculating TTL for PKI certificate renewal [GH-1865]https://github.com/hashicorp/consul-template/pull/1865\n* PKI Certificate renewal time can be configured using the VaultLeaseRenewal threshold value [GH-1908]https://github.com/hashicorp/consul-template/pull/1908\n\nBUG FIXES:\n* Fix linters [GH-1902]https://github.com/hashicorp/consul-template/pull/1902\n\n\n# 0.37.4 (March 27, 2024)\nIMPROVEMENTS:\n* Add a `ServerErrCh` to the runner that that will surface server errors back to the caller. [GH-1897](https://github.com/hashicorp/consul-template/pull/1897)\n\nBUG FIXES:\n* Fixed a goroutine leak where dependencies could be added after a runner stops. [GH-1898](https://github.com/hashicorp/consul-template/pull/1898)\n\n# 0.37.3 (Unreleased)\nVersion 0.37.3 includes all the changes in 0.37.4 but was not officially released.\n\n# 0.37.2 (March 8, 2024)\nIMPROVEMENTS:\n* Add ability to set custom render and reader functions to control behaviour writing and reading files. [GH-1876](https://github.com/hashicorp/consul-template/pull/1876)\n\n# 0.37.1 (February 26, 2024)\nBUG FIXES:\n* Fix `peer` not being a part of `String` function in `health_service.go`.\n* Fix flaky ENT test cases [NET-7377](https://hashicorp.atlassian.net/browse/NET-7377).\n\n# 0.37.0 (February 20, 2024)\n\nNEW FEATURES:\n* Add support for listing Consul peers [NET-6966](https://hashicorp.atlassian.net/browse/NET-6966)\n* Add ENT test cases such that all unit tests could run on different combinations of namespace and partition [NET-7377](https://hashicorp.atlassian.net/browse/NET-7377)\n\nBUG FIXES:\n* Fetch services query not overriding opts correctly [NET-7571](https://hashicorp.atlassian.net/browse/NET-7571)\n* All consul resources which support namespace and partition should also have namespace and partition in the key represented by `String` function.[NET-7571](https://hashicorp.atlassian.net/browse/NET-7571)\n* Consul-template now correctly renders KVv2 secrets with `delete_version_after` set [NET-3777](https://hashicorp.atlassian.net/browse/NET-3777)\n\n## v0.36.0 (January 3, 2024)\n\nIMPROVEMENTS:\n* Support for namespaces, partitions in consul endpoints. [GH-1842](https://github.com/hashicorp/consul-template/pull/1842)\n* Bump github.com/go-jose/go-jose/v3 from 3.0.0 to 3.0.1. [GH-1843](https://github.com/hashicorp/consul-template/pull/1843)\n* Bump golang.org/x/crypto from 0.14.0 to 0.17.0. [GH-1858](https://github.com/hashicorp/consul-template/pull/1858)\n* Add Vault transport configuration option for `MaxConnsPerHost`. [GH-1858](https://github.com/hashicorp/consul-template/pull/1858)\n\n## v0.35.0 (November 7, 2023)\n\nNEW FEATURES:\n* Add alpha support for Consul namespaces/partitions/peering. [GH-1822](https://github.com/hashicorp/consul-template/pull/1822)\n\nIMPROVEMENTS:\n* Bump golang.org/x/text from 0.13.0 to 0.14.0. [GH-1830](https://github.com/hashicorp/consul-template/pull/1830)\n* Bump golang.org/x/sys from 0.13.0 to 0.14.0. [GH-1829](https://github.com/hashicorp/consul-template/pull/1829)\n* Bump github.com/hashicorp/consul/sdk from 0.14.1 to 0.15.0. [GH-1826](https://github.com/hashicorp/consul-template/pull/1826)\n* Bump github.com/hashicorp/consul/api from 1.25.1 to 1.26.1. [GH-1827](https://github.com/hashicorp/consul-template/pull/1827)\n\n## v0.34.0 (October 11, 2023)\n\nIMPROVEMENTS:\n* Refactor deprecated Vault calls. [GH-1768](https://github.com/hashicorp/consul-template/pull/1768)\n* Remove explicit math/rand seed. [GH-1793](https://github.com/hashicorp/consul-template/pull/1793)\n* Bump github.com/hashicorp/vault/api/auth/kubernetes from 0.4.1 to 0.5.0. [GH-1805](https://github.com/hashicorp/consul-template/pull/1805)\n* Bump go version from 1.20 to 1.21. [GH-1819](https://github.com/hashicorp/consul-template/pull/1819)\n* Bump golang.org/x/text from 0.11.0 to 0.13.0. [GH-1802](https://github.com/hashicorp/consul-template/pull/1802)\n* Bump golang.org/x/sys from 0.11.0 to 0.13.0. [GH-1816](https://github.com/hashicorp/consul-template/pull/1816)\n* Bump github.com/hashicorp/consul/api from 1.23.0 to 1.25.1. [GH-1787](https://github.com/hashicorp/consul-template/pull/1787) [GH-1815](https://github.com/hashicorp/consul-template/pull/1815)\n* Bump github.com/hashicorp/vault/api from 1.9.2 to 1.10.0. [GH-1806](https://github.com/hashicorp/consul-template/pull/1806)\n* Bump golangci/golangci-lint-action from 3.6.0 to 3.7.0. [GH-1812](https://github.com/hashicorp/consul-template/pull/1812)\n* add golangci-lint. [GH-1773](https://github.com/hashicorp/consul-template/pull/1773) [GH-1774](https://github.com/hashicorp/consul-template/pull/1774/files)\n\n## v0.33.0 (August 9, 2023)\n\nIMPROVEMENTS:\n* Add support for setting Vault CA from VAULT_CACERT_BYTES. [GH-1782](https://github.com/hashicorp/consul-template/pull/1782)\n* Add CLI support for exec env configs. [GH-1761](https://github.com/hashicorp/consul-template/pull/1761)\n* Add function for HMAC SHA256. [GH-1760](https://github.com/hashicorp/consul-template/pull/1760)\n* Bump go version from 1.19 to 1.20. [GH-1783](https://github.com/hashicorp/consul-template/pull/1783)\n* Bump hashicorp/consul/api from 1.13.0 to 1.23.0. [GH-1781](https://github.com/hashicorp/consul-template/pull/1781) & [GH-1758](https://github.com/hashicorp/consul-template/pull/1758)\n* Bump BurntSushi/toml from 1.2.1 to 1.3.2. [GH-1766](https://github.com/hashicorp/consul-template/pull/1766)\n* Bump golang.org/x/sys from 0.10.0 to 0.11.0. [GH-1788](https://github.com/hashicorp/consul-template/pull/1788)\n* Bump golang.org/x/net from 0.12.0 to 0.13.0. [GH-1784](https://github.com/hashicorp/consul-template/pull/1784)\n* Bump golang.org/x/text from 0.7.0 to 0.10.0. [GH-1763](https://github.com/hashicorp/consul-template/pull/1763)\n* Bump stretchr/testify from 1.8.2 to 1.8.4. [GH-1757](https://github.com/hashicorp/consul-template/pull/1757)\n* Bump hashicorp/vault/api/auth/kubernetes from 0.3.0 to 0.4.1. [GH-1755](https://github.com/hashicorp/consul-template/pull/1755)\n\nREPO MAINTENANCE:\n* Code quality fixes and various lint improvements. [GH-1762](https://github.com/hashicorp/consul-template/pull/1762)\n\n\n## v0.32.0 (May 18, 2023)\n\nIMPROVEMENTS:\n* Add support for Vault agent environment variables. [GH-1741](https://github.com/hashicorp/consul-template/pull/1741)\n* Upgrade hashicorp/vault/api from 1.8.2 to 1.9.1. [GH-1743](https://github.com/hashicorp/consul-template/pull/1743)\n\nREPO MAINTENANCE:\n* remove repo-specific codeql action, in favor of centralized job. [GH-1740](https://github.com/hashicorp/consul-template/pull/1740/files)\n\n\n## v0.31.0 (Apr 06, 2023)\n\nIMPROVEMENTS:\n\n* Added `ExtFuncMap` to allow external functions to be passed to the template. This gives users ability to add functions to the library and selective opaque existing ones. [1708](https://github.com/hashicorp/consul-template/pull/1708)\n* Vault: add new configuration option `vault-client-user-agent`, when set consul-template will use the set `User-Agent` when making requests to vault. This change is being made as part of a broader effort for Vault Agent to send its version as part of a User-Agent string in requests to Vault. Agent will then consume the latest version of consul-template, then use this new config to set the correct `User-Agent`. [GH-1725](https://github.com/hashicorp/consul-template/pull/1725)\n* Upgrade golang.org/x/net from 0.4.0 to 0.7.0. [GH-1711](https://github.com/hashicorp/consul-template/pull/1711)\n* Upgrade Sprig from v2 to v3. [GH-1699](https://github.com/hashicorp/consul-template/pull/1699/files)\n* Upgrage github.com/stretchr/testify from 1.8.1 to 1.8.2 [1726](https://github.com/hashicorp/consul-template/pull/1726)\n* Add copyright headers to file for compliance. [GH-1721](https://github.com/hashicorp/consul-template/pull/1721)\n* Improve use of inclusive language [GH-1731](https://github.com/hashicorp/consul-template/pull/1731)\n\n## v0.30.0 (Jan 09, 2023)\n\nIMPROVEMENTS:\n* option to exit with an error upon failure to look up data (instead of blocking and waiting for it). [[GH-1695](https://github.com/hashicorp/consul-template/pull/1695), [GH-1637](https://github.com/hashicorp/consul-template/issues/1637)]\n* tweak defaults for performance improvements [[GH-1697](https://github.com/hashicorp/consul-template/pull/1697), [GH-1603](https://github.com/hashicorp/consul-template/issues/1603)]\n\nBUG FIXES:\n* properly respect reload/kill configured signals [[GH-1690](https://github.com/hashicorp/consul-template/pull/1690), [GH-1671](https://github.com/hashicorp/consul-template/issues/1671)]\n* Fix 'toTitle' function for a better support for word boundaries and unicode punctuation [[GH-1678](https://github.com/hashicorp/consul-template/pull/1678)]\n\n## v0.29.6 (Nov 30, 2022)\n\nBUG FIXES:\n* Force kill fails to kill the process group in exec mode [[GH-1666](https://github.com/hashicorp/consul-template/issues/1666), [GH-1668](https://github.com/hashicorp/consul-template/pull/1668)]\n* Fix user set in dockerfile [[GH-1662](https://github.com/hashicorp/consul-template/pull/1662)]\n* Module version update to x/text package for CVE-2022-32149, though the CVE didn't impact consul-template [[GH-1655](https://github.com/hashicorp/consul-template/issues/1655)]\n\nIMPROVEMENTS:\n* Update build to use 1.18+ to add template support for continue and break [[GH-1663](https://github.com/hashicorp/consul-template/issues/1663)]\n* Template function 'splitToMap' [[GH-1664](https://github.com/hashicorp/consul-template/pull/1664)]\n* Template function 'mustEnv' [[GH-1657](https://github.com/hashicorp/consul-template/pull/1657)]\n\n## v0.29.5 (Oct 04, 2022)\n\nBUG FIXES:\n* Fix issue with ownership change detection incorrectly indicating a change when a user or group was set but not both [[GH-1652](https://github.com/hashicorp/consul-template/pull/1652)]\n* Fix issue with nomad configuration setup [[GH-1653](https://github.com/hashicorp/consul-template/pull/1653)]\n\n## v0.29.4 (Sept 30, 2022)\n\nBUG FIXES:\n* Fix goroutine leak in vault token watcher on config reload. [[GH-1650](https://github.com/hashicorp/consul-template/issues/1650)]\n\n## v0.29.3 (Sept 30, 2022)\n\nIMPROVEMENTS:\n* Vault token management refactor to increase encapsulation and enable testing. [[GH-1645](https://github.com/hashicorp/consul-template/pull/1645)]\n\nBUG FIXES:\n* Log child process successful exits at INFO level (not ERR). [[GH-1649](https://github.com/hashicorp/consul-template/pull/1649), [GH-1282](https://github.com/hashicorp/consul-template/issues/1282)]\n* Fix reading vault agent token in wrapped format [[GH-1498](https://github.com/hashicorp/consul-template/issues/1498)]\n* Fix issue with transient goroutine leak causing unnecessary memory growth. [[GH-1644](https://github.com/hashicorp/consul-template/pull/1644)]\n* Fix issue with pkiCerts failing if cert file is moved. [[GH-1639](https://github.com/hashicorp/consul-template/pull/1639)]\n\n\n## v0.29.2 (Aug 16, 2022)\n\nIMPROVEMENTS:\n* Nomad services support use of `byTab` template function. [[GH-1594](https://github.com/hashicorp/consul-template/pull/1594)]\n\nBUG FIXES:\n* Fix issue with pkiCert caching certificate based on consul key path. [[GH-1611](https://github.com/hashicorp/consul-template/pull/1611), [GH-1607](https://github.com/hashicorp/consul-template/issues/1607)]\n* Fix issue with setting the reload_signal to an empty string (\"\") not disabling the reload_signal as documented. [[GH-1610](https://github.com/hashicorp/consul-template/pull/1610), [GH-1428](https://github.com/hashicorp/consul-template/issues/1428), [GH-1442](https://github.com/hashicorp/consul-template/issues/1442)]\n* Limit Setgpid setting to strictly `sh -c` wrapped calls. [[GH-1600](https://github.com/hashicorp/consul-template/pull/1600), [GH-1604](https://github.com/hashicorp/consul-template/issues/1604)]\n* Fix potential for nil pointer dereference in vault config debug output. [[GH-1586](https://github.com/hashicorp/consul-template/issues/1586)]\n\nSECURITY:\n* Filter Vault Secrets from text/template error messages, [CVE-2022-38149](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-38149). [[GH-1613](https://github.com/hashicorp/consul-template/pull/1613)]\n* Updates dependencies several of which had known CVEs. [[GH-1622](https://github.com/hashicorp/consul-template/pull/1622), [GH-1614](https://github.com/hashicorp/consul-template/issues/1614)]\n\n\n## v0.29.1 (Jun 24, 2022)\n\nIMPROVEMENTS:\n\n* Kubernetets Vault authentication support [[GH-1580](https://github.com/hashicorp/consul-template/pull/1580)]\n* Nomad: add support for querying consistent subset of services [[GH-1579](https://github.com/hashicorp/consul-template/pull/1579)]\n\nBUG FIXES:\n\n* pkiCert now useful, getting the certificate, private key and CA [[GH-1591](https://github.com/hashicorp/consul-template/pull/1591), [1567](https://github.com/hashicorp/consul-template/issues/1567)]\n* fix issue with VaultConfig debug printing [[GH-1587](https://github.com/hashicorp/consul-template/pull/1587)]\n* update crypto package version [[GH-1592](https://github.com/hashicorp/consul-template/pull/1592), [GH-1582](https://github.com/hashicorp/consul-template/issues/1582)]\n* fix sort.Stable sorting [[GH-1578](https://github.com/hashicorp/consul-template/pull/1578)]\n\n\n## v0.29.0 (Apr 20, 2022)\n\nIMPROVEMENTS:\n* Nomad Service Discovery! [[GH-1565](https://github.com/hashicorp/consul-template/pull/1565)]\n* New `pkiCert` template function provides self-caching certificates [[GH-1559](https://github.com/hashicorp/consul-template/pull/1559), [GH-1259](https://github.com/hashicorp/consul-template/issues/1259)]\n* Add string trim template functions [[GH-1558](https://github.com/hashicorp/consul-template/pull/1558), [GH-1544](https://github.com/hashicorp/consul-template/issues/1544)]\n\nBUG FIXES:\n* Fix issue with multiple identical templates using the same path [[GH-1573](https://github.com/hashicorp/consul-template/pull/1573)]\n* Reduce signal processing overhead [[GH-1575](https://github.com/hashicorp/consul-template/pull/1575), [GH-1548](https://github.com/hashicorp/consul-template/issues/1548)]\n* Fix issue with template user/group setting [[GH-1571](https://github.com/hashicorp/consul-template/pull/1571), [GH-1570](https://github.com/hashicorp/consul-template/issues/1570)]\n\n\n## v0.28.1 (Apr 04, 2022)\n\nIMPROVEMENTS:\n* Allow setting template destination file ownership by name (with uid/gid compatibilty) [[GH-1541](https://github.com/hashicorp/consul-template/pull/1541), [GH-1551](https://github.com/hashicorp/consul-template/pull/1551)]\n* better writeToFile user/group ownership behaviors [[GH-1549](https://github.com/hashicorp/consul-template/pull/1549)]\n* configurable lease check wait for non-renewable secrets [[GH-1546](https://github.com/hashicorp/consul-template/pull/1546)]\n\n## v0.28.0 (Mar 04, 2022)\n\nBUG FIXES:\n* Fix issue returning typed nil pointers in template functions [[GH-1535](https://github.com/hashicorp/consul-template/pull/1535), [GH-1418](https://github.com/hashicorp/consul-template/issues/1418)]\n* Support secret write queries w/ an empty write [[GH-1532](https://github.com/hashicorp/consul-template/pull/1532), [GH-1453](https://github.com/hashicorp/consul-template/issues/1453)]\n\n\nIMPROVEMENTS:\n* Add sprig library [[GH-1312](https://github.com/hashicorp/consul-template/pull/1312)]\n* Add option to make template errors non-fatal [[GH-1420](https://github.com/hashicorp/consul-template/pull/1420), [GH-1419](https://github.com/hashicorp/consul-template/issues/1419), [GH-1289](https://github.com/hashicorp/consul-template/issues/1289)]\n* Support for accepting a custom logger for a child process [[GH-1515](https://github.com/hashicorp/consul-template/pull/1515)]\n* Add support for providing Consul ACL Token via a file [[GH-1516](https://github.com/hashicorp/consul-template/pull/1516), [GH-1429](https://github.com/hashicorp/consul-template/issues/1429)]\n* Allow setting user/group ownership of template output [[GH-1531](https://github.com/hashicorp/consul-template/pull/1531), [GH-1497](https://github.com/hashicorp/consul-template/issues/1497), [GH-639](https://github.com/hashicorp/consul-template/issues/639)]\n* Logging to file [[GH-1534](https://github.com/hashicorp/consul-template/pull/1534), [GH-1416](https://github.com/hashicorp/consul-template/issues/1416)]]\n* Support command/exec lists [[GH-1543](https://github.com/hashicorp/consul-template/pull/1543), [GH-1518](https://github.com/hashicorp/consul-template/issues/1518)]\n\n\n## v0.27.2 (Nov 05, 2021)\n\nBUG FIXES:\n* Syslog doesn't work after upgrade to 0.27 [[GH-1523](https://github.com/hashicorp/consul-template/issues/1523), [GH-1529](https://github.com/hashicorp/consul-template/pull/1529)]\n\n## v0.27.1 (Sep 22, 2021)\n\nIMPROVEMENTS:\n* Updated command execution on \\*nix systems to call the command directly,\n  without the `sh -c` wrapping shell command, *only* in cases where the command\n  is a single word (no spaces). This allows docker to run in environments (like\n  a minimal docker image) where there is no shell (`sh`). Multi-word commands\n  will continue to use the wrapping shell call.\n  [[GH-1509](https://github.com/hashicorp/consul-template/pull/1509),\n  [GH-1508](https://github.com/hashicorp/consul-template/issues/1508)]\n\nSECURITY:\n* Updated golang.or/x/crypto dependency for CVE-2020-29652. [[GH-1507](https://github.com/hashicorp/consul-template/issues/1507)]\n\n\n## v0.27.0 (Aug 16, 2021)\n\nBREAKING CHANGES:\n* All command execution calls are now made (on \\*nix systems) using a shell command call ('/bin/sh -c ...') with [process group](https://man7.org/linux/man-pages/man2/setpgid.2.html) set to ensure all signals are propagated to the called commands. This was done to eliminate the need for parsing the shell command as it was a continual source of bugs. Windows systems currently only support single command calls because of no (known) 'sh -c' equivalent on Windows. [[GH-1496](https://github.com/hashicorp/consul-template/pull/1496), [GH-1494](https://github.com/hashicorp/consul-template/pull/1494)]\n\nIMPROVEMENTS:\n* New Docker Image. Similar to old Alpine image but modernized and simplified [[GH-1481](https://github.com/hashicorp/consul-template/issues/1481), [GH-1484](https://github.com/hashicorp/consul-template/pull/1484)]\n* New, more obvious, log level environment variable [[GH-1383](https://github.com/hashicorp/consul-template/pull/1383)]\n* New 'writeToFile' template function [[GH-1495](https://github.com/hashicorp/consul-template/pull/1495), [GH-1077](https://github.com/hashicorp/consul-template/issues/1077)]\n* New mergeMap and mergeMapWithOverride template functions [[GH-1500](https://github.com/hashicorp/consul-template/pull/1500), [GH-1499](https://github.com/hashicorp/consul-template/issues/1499)].\n\nBUG FIXES:\n* Ignore SIGURG signals by default [[GH-1486](https://github.com/hashicorp/consul-template/issues/1486), [GH-1487](https://github.com/hashicorp/consul-template/pull/1487)]\n* Fix issue with command argument parsing when using sub-shell calls [[GH-1482](https://github.com/hashicorp/consul-template/issues/1482)]\n\n## v0.26.0 (Jun 10, 2021)\n\nBREAKING CHANGES:\n* Docker: We have moved to a new Docker image build pipeline that is creating a simplified image containing only the executable, meant primarily to be used as a base image. If you would like the previous, more complex image back please file an issue. Thanks.\n\nIMPROVEMENTS:\n* Arm CPUs no longer need special builds [[GH-1471](https://github.com/hashicorp/consul-template/pull/1471), [GH-1404](https://github.com/hashicorp/consul-template/issues/1404)]\n* add 'md5sum' template function [[GH-1464](https://github.com/hashicorp/consul-template/pull/1464)]\n* add 'envOrDefault' template function [[GH-1461](https://github.com/hashicorp/consul-template/pull/1461), [GH-829](https://github.com/hashicorp/consul-template/issues/829)]\n* configurable Vault default lease duration [[GH-1446](https://github.com/hashicorp/consul-template/pull/1446), [GH-1445](https://github.com/hashicorp/consul-template/issues/1445)]\n* unescaped JSON template filter functions [[GH-1432](https://github.com/hashicorp/consul-template/pull/1432), [GH-1430](https://github.com/hashicorp/consul-template/issues/1430)]\n* go spew debugging template functions [[GH-1406](https://github.com/hashicorp/consul-template/pull/1406)]\n* add service tagged addresses to health service data [[GH-1400](https://github.com/hashicorp/consul-template/pull/1400), [GH-1398](https://github.com/hashicorp/consul-template/issues/1398)]\n* allow running via Windows Service Control [[GH-1382](https://github.com/hashicorp/consul-template/pull/1382)]\n\nBUG FIXES:\n* fix command shell quoting issue [[GH-1477](https://github.com/hashicorp/consul-template/pull/1477), [GH-1456](https://github.com/hashicorp/consul-template/issues/1456), [GH-1463](https://github.com/hashicorp/consul-template/issues/1463)]\n* rework logging, add tests and fix missing timestamp issue [[GH-1476](https://github.com/hashicorp/consul-template/pull/1476), [GH-1475](https://github.com/hashicorp/consul-template/issues/1475)]\n* fix issue with connect/health services using same cache entry [[GH-1474](https://github.com/hashicorp/consul-template/pull/1474), [GH-1458](https://github.com/hashicorp/consul-template/issues/1458)]\n* fix issue with ownership when perms option is set [[GH-1473](https://github.com/hashicorp/consul-template/pull/1473), [GH-1379](https://github.com/hashicorp/consul-template/issues/1379)]\n* fixes issue with 'secrets' and Vault kv-v2 [[GH-1468](https://github.com/hashicorp/consul-template/pull/1468), [GH-1274](https://github.com/hashicorp/consul-template/issues/1274), [GH-1275](https://github.com/hashicorp/consul-template/issues/1275),  [GH-1462](https://github.com/hashicorp/consul-template/issues/1462)]\n\n\n## v0.25.2 (Feb 19, 2021)\n\nBREAKING CHANGES:\n* version output from -v/-version should go to STDOUT (not STDERR)[[GH-1452](https://github.com/hashicorp/consul-template/issues/1452), [GH-1455](https://github.com/hashicorp/consul-template/pull/1455)]\n* log date output format consistency fix [[GH-1412](https://github.com/hashicorp/consul-template/pull/1412)]\n\nBUG FIXES:\n* fix extra logging/broken log levels [[GH-1438](https://github.com/hashicorp/consul-template/issues/1438), [GH-1426](https://github.com/hashicorp/consul-template/issues/1426), [GH-1454](https://github.com/hashicorp/consul-template/pull/1454), []()]\n* fix issue with vault secret panic/missing nil check [[GH-1450](https://github.com/hashicorp/consul-template/issues/1450), [GH-1447](https://github.com/hashicorp/consul-template/pull/1447)]\n* Override block_query_wait doesn't work [[GH-1441](https://github.com/hashicorp/consul-template/issues/1441), [GH-1443](https://github.com/hashicorp/consul-template/pull/1443)]\n\nIMPROVEMENTS:\n* vault secret ttl handling [[Gh-1451](https://github.com/hashicorp/consul-template/pull/1451)]\n\n## v0.25.1 (Jul 27, 2020)\n\nIMPROVEMENTS:\n* Update whitelist/blacklist config options to allowlist/denylist with backward compatibility [[GH-1388](https://github.com/hashicorp/consul-template/pull/1388)]\n\nBUG FIXES:\n* Fix issue rendering empty file to disk [[GH-1393](https://github.com/hashicorp/consul-template/issues/1393)][[GH-1397](https://github.com/hashicorp/consul-template/pull/1397)]\n* Fix issue with Vault PKI cert expiration [[GH-1394](https://github.com/hashicorp/consul-template/pull/1394)]\n* Fix issue reading Vault KVv2 secrets metadata [[GH-1396](https://github.com/hashicorp/consul-template/issues/1396)][[GH-1399](https://github.com/hashicorp/consul-template/pull/1399)]\n\n## v0.25.0 (Apr 27, 2020)\n\nIMPROVEMENTS:\n\n* Add minimum and maximum math functions [[GH-1323](https://github.com/hashicorp/consul-template/pull/1323)]\n\n* Allow overriding the default delimiter [[GH-1290](https://github.com/hashicorp/consul-template/pull/1290)]\n\n* Add weights field for HealthService [[GH-1288](https://github.com/hashicorp/consul-template/pull/1288)]\n\n* Beta support for Consul Namespaces (Consul Enterprise feature) [[GH-1320](https://github.com/hashicorp/consul-template/pull/1320), [GH-1303](https://github.com/hashicorp/consul-template/issues/1303)]\n\n* Added sha256Hex function [[GH-1327](https://github.com/hashicorp/consul-template/pull/1327)]\n\n* Make timeout for blocking query configurable [[GH-1329](https://github.com/hashicorp/consul-template/pull/1329)]\n\n* docker: alpine without docker-base [[GH-1333](https://github.com/hashicorp/consul-template/pull/1333)]\n\n* Add parseYAML helper [[GH-1344](https://github.com/hashicorp/consul-template/pull/1344)]\n\n* Add lease calculation for rotating secrets [[GH-1358](https://github.com/hashicorp/consul-template/pull/1358)]\n\n* Allow to set application name in syslog [[GH-1367](https://github.com/hashicorp/consul-template/pull/1367)]\n\n\nBUG FIXES:\n\n* Don't renew vault token when no token is set [[GH-1352](https://github.com/hashicorp/consul-template/pull/1352), [GH-1297](https://github.com/hashicorp/consul-template/issues/1297)]\n\n* Fix bug looking up versioned vault secrets [[GH-1354](https://github.com/hashicorp/consul-template/pull/1354), [GH-1350](https://github.com/hashicorp/consul-template/issues/1350)]\n\n* Fix issue reading kv2 vault secrets for key paths starting with \"data\" [[GH-1341](https://github.com/hashicorp/consul-template/pull/1341), [GH-1340](https://github.com/hashicorp/consul-template/issues/1340)]\n\n* Fix data race in child.go [[GH-1373](https://github.com/hashicorp/consul-template/pull/1373), [GH-1372](https://github.com/hashicorp/consul-template/issues/1372)]\n\n* Fix issue with template commands when used as library [[GH-1370](https://github.com/hashicorp/consul-template/pull/1370), [GH-1369](https://github.com/hashicorp/consul-template/issues/1369)]\n\nDOCUMENTATION:\n\n* How to run multiple things in template commands [[GH-1375](https://github.com/hashicorp/consul-template/pull/1375)]\n\n* Template command_timeout clarifications [[GH-1370](https://github.com/hashicorp/consul-template/pull/1370), [GH-1369](https://github.com/hashicorp/consul-template/issues/1369)]\n\n* ByMeta does not accept `services` as input [[GH-1348](https://github.com/hashicorp/consul-template/issues/1348)]\n\n\n## v0.24.1 (Jan 24, 2020)\n\nBUG FIXES:\n\n* Make user non-numeric to satisfy PSP [[GH-1332](https://github.com/hashicorp/consul-template/pull/1332)]\n* fatal error: PowerRegisterSuspendResumeNotification failure on windows [[GH-1335](https://github.com/hashicorp/consul-template/issues/1335)]\n\n## v0.24.0 (Jan 08, 2020)\n\nBREAKING CHANGES:\n\n* Alpine Docker image no longer runs as root and so doesn't change ownership of the /consul-template/data and /consul-template/config directories to the consul-template user. See the [Docker Image Use](https://github.com/hashicorp/consul-template#docker-image-use) topic in the documentation for more.\n\nBUG FIXES:\n\n* arm builds are linked against wrong library [[GH-1317](https://github.com/hashicorp/consul-template/issues/1317), [GH-1326](https://github.com/hashicorp/consul-template/pull/1326)]\n* consul-template container runs as root - breaks CISO compliance [[GH-1321](https://github.com/hashicorp/consul-template/issues/1321), [GH-1324](https://github.com/hashicorp/consul-template/pull/1324)]\n* 'sockaddr' function returning whitespace after address [[GH-1314](https://github.com/hashicorp/consul-template/issues/1314), [GH-1315](https://github.com/hashicorp/consul-template/pull/1315)]\n* runTemplate - DEBUG logging is needed to identify missing dependencies [[GH-1308](https://github.com/hashicorp/consul-template/issues/1308), [GH-1309](https://github.com/hashicorp/consul-template/pull/1309)]\n* Remove code/logic for working with (long deprecated) Vault grace [[GH-1284](https://github.com/hashicorp/consul-template/pull/1284)]\n\n## v0.23.0 (Nov 13, 2019)\n\nIMPROVEMENTS:\n\n* Support Configuring Consul Connect Clients [[GH-1262](https://github.com/hashicorp/consul-template/issues/1262), [GH-1304](https://github.com/hashicorp/consul-template/pull/1304), [GH-1306](https://github.com/hashicorp/consul-template/pull/1306)]\n\n## v0.22.1 (Nov 08, 2019)\n\nSECURITY:\n\n* curl is vulnerable in the latest alpine docker image [[GH-1302](https://github.com/hashicorp/consul-template/issues/1302)]\n\nBUG FIXES:\n\n* fix breaking change for loop [[GH-1285](https://github.com/hashicorp/consul-template/issues/1285)]\n\n## v0.22.0 (September 10, 2019)\n\nIMPROVEMENTS:\n\n* Add rate limiting to consul api calls [[GH-1279](https://github.com/hashicorp/consul-template/pull/1279)]\n* Add `byMeta` function [[GH-1237](https://github.com/hashicorp/consul-template/pull/1237)]\n* Add support for : and = in service tag values [[GH-1149](https://github.com/hashicorp/consul-template/pull/1149), [GH-1049](https://github.com/hashicorp/consul-template/issues/1049)]\n* Add `explodeMap` function [[GH-1148](https://github.com/hashicorp/consul-template/pull/1148)]\n* Don't wait for splay when stopping child runner [[GH-1141](https://github.com/hashicorp/consul-template/pull/1141)]\n* Add `safels` and `safetree` functions [[GH-1132](https://github.com/hashicorp/consul-template/pull/1132)]\n* Support Vault certificates with no lease [[GH-1106](https://github.com/hashicorp/consul-template/pull/1106)]\n* Add wrapper function for go-sockaddr templating [[GH-1087](https://github.com/hashicorp/consul-template/pull/1087)]\n* Build binaries for arm64 platform [[GH-1251](https://github.com/hashicorp/consul-template/pull/1251)]\n\nBUG FIXES:\n\n* Fix arm/arm64 builds by enabling CGO and restricting builds to Linux [workaround for [go/issues/32912](https://github.com/golang/go/issues/32912)]\n\n## v0.21.3 (September 05, 2019)\n\nBUG FIXES:\n\n* Fix regression in non-renewable sleep [[GH-1277](https://github.com/hashicorp/consul-template/pull/1277), [GH-1272](https://github.com/hashicorp/consul-template/issues/1272), [GH-1276](https://github.com/hashicorp/consul-template/issues/1276)]\n\n## v0.21.2 (August 31, 2019)\n\nBUG FIXES:\n\n* Fix regression in backup [[GH-1271](https://github.com/hashicorp/consul-template/pull/1271), [GH-1270](https://github.com/hashicorp/consul-template/issues/1270)]\n\n## v0.21.1 (August 30, 2019)\n\nBUG FIXES:\n\n* Fixed issue in Vault call retry logic [[GH-1269](https://github.com/hashicorp/consul-template/pull/1269), [GH-1224](https://github.com/hashicorp/consul-template/issues/1224)]\n* Fixed race in backup [[GH-1265](https://github.com/hashicorp/consul-template/pull/1265), [GH-1264](https://github.com/hashicorp/consul-template/issues/1264)]\n* Fixed issue when reading deleted secret [[GH-1260](https://github.com/hashicorp/consul-template/pull/1260), [GH-1198](https://github.com/hashicorp/consul-template/issues/1198)]\n* Fix issue with Vault writes [[GH-1257](https://github.com/hashicorp/consul-template/pull/1257), [GH-1252](https://github.com/hashicorp/consul-template/issues/1252)]\n* Fix loop to work with template set integers [[GH-1255](https://github.com/hashicorp/consul-template/pull/1255), [GH-1143](https://github.com/hashicorp/consul-template/issues/1143)]\n\n## v0.21.0 (August 05, 2019)\n\nIMPROVEMENTS:\n\n* Migrated to use Go modules [[GH-1244](https://github.com/hashicorp/consul-template/pull/1244), [GH-1173](https://github.com/hashicorp/consul-template/issues/1173), [GH-1208](https://github.com/hashicorp/consul-template/pull/1208)[GH-1232](https://github.com/hashicorp/consul-template/pull/1232)]\n* Template blacklist feature [[GH-1243](https://github.com/hashicorp/consul-template/pull/1243)]\n\n## v0.20.1 (July 30, 2019)\n\nBUG FIXES:\n\n* Fixed issue with exec running before template rendering when wait is set [[GH-1229](https://github.com/hashicorp/consul-template/issues/1229), [GH-1209](https://github.com/hashicorp/consul-template/issues/1209)]\n* Fixed issue with templates not rendering with `-once` [[GH-1227](https://github.com/hashicorp/consul-template/pull/1227), [GH-1196](https://github.com/hashicorp/consul-template/issues/1196), [GH-1207](https://github.com/hashicorp/consul-template/issues/1207)]\n* Fixed regression with ~/.vault-token and with vault_agent_token_file not respecting renew_token [[GH-1228](https://github.com/hashicorp/consul-template/issues/1228), [GH-1189](https://github.com/hashicorp/consul-template/issues/1189)]\n* CA certificates missing from docker 'light' image [[GH-1200](https://github.com/hashicorp/consul-template/issues/1200)]\n* Fixed issue with dedup data garbage in Consul KV [[GH-1158](https://github.com/hashicorp/consul-template/issues/1158), [GH-1168](https://github.com/hashicorp/consul-template/issues/1168)]\n* Fixed bad case in import path [[GH-1139](https://github.com/hashicorp/consul-template/issues/1139)]\n* Documented limits on using \".\" in service names [[GH-1205](https://github.com/hashicorp/consul-template/issues/1205)]\n\n## v0.20.0 (February 19, 2019)\n\nIMPROVEMENTS:\n\n* Support for Consul service metadata [GH-1113]\n* Support for Vault's KV v2 secrets engine, including versioned secrets [GH-1180].\n* Support for Vault Enterprise's namespaces feature [GH-1181].\n* Support for a new config parameter, `vault_agent_token_file`, which supports loading the Vault token from the contents of a dynamically updated file. This is intended for use in environments like Kubernetes [GH-1185].\n* A template's destination file will now have its user and group permissions preserved on supported OSes (Linux/MacOS) [GH-1061].\n\nBUG FIXES:\n\n* The indent function no longer panics on negative spaces variable [GH-1127]\n* Fixed an issue that caused `exec` to not be called with multiple templates and `wait` configured [GH-1043]\n* Fixed an issue where Consul Template did not wait for most of a non-renewable secret's lease before attempting to refresh the secret. [GH-1183]\n\n## v0.19.5 (June 12, 2018)\n\nBUG FIXES:\n\n  * The de-duplication feature was incorrectly calculating the hash of dependency\n    values over an unstable encoding of the data. This meant that in most cases\n    the templates were being re-written to KV and on all watching template\n    instances every minimum update time (i.e. `wait { min = X }`). At best this\n    was a lot of wasted work, in some cases it caused 100% CPU usage when template\n    instance leadership was split. [GH-1099, GH-1095]\n  * Fixed an issue where we waited unnecessarily for a child process to exit [GH-1101]\n\nIMPROVEMENTS:\n\n  * Initiating runner log level moved to DEBUG [GH-1088]\n\n\n## v0.19.4 (October 30, 2017)\n\nBREAKING CHANGES:\n\n  * The version of Consul Template is now taken into account when using\n    de-duplication mode. Without bundling the version, it's challenging to\n    upgrade existing clusters or run multiple versions of Consul Template on the\n    same cluster and template simultaneously. [GH-1025]\n\nBUG FIXES:\n\n  * Remove references to unsupported `dump_signal` configuration\n\n  * Update vendor libraries to support Consul 1.0.0 changes for better test\n    stability\n\n  * Renew unwrapped Vault token (previously Consul Template) would try to renew\n    the wrapped token, which would not work.\n\n  * Do not sort results when `~near` queries are used [GH-1027]\n\n  * Handle integer overflow in exponential backoff calculations\n    [GH-1031, GH-1028]\n\n  * Properly preserve existing file permissions [GH-1037]\n\nIMPROVEMENTS:\n\n  * Compile with Go 1.9.2\n\n  * The Vault grace period in the config is now set to 15 seconds as the\n    default. This matches Vault's default configuration for consistency.\n\n  * Add `indent` function for indenting blocks of text in templates\n\n  * Allow additional colons in the template command on the CLI [GH-1026]\n\n  * Add Vault Transit example for key exfiltration [GH-1014]\n\n  * Add a new option for disabling recursive directory creation per template\n    [GH-1033]\n\n  * Allow dots in node names [GH-977]\n\n## v0.19.3 (September 11, 2017)\n\nBUG FIXES:\n\n  * Fix a bug that would cause once mode to not exit when the file pre-existed\n    on disk with the correct contents. [GH-1000]\n\n## v0.19.2 (September 1, 2017)\n\nBUG FIXES:\n\n  * Fix a critical bug that would cause a hot loop for some TTL durations.\n      [GH-1004]\n\n## v0.19.1 (August 25, 2017)\n\nIMPROVEMENTS:\n\n  * The runner's render event now includes the last-rendered template contents.\n      This is useful when embedding Consul Template as a library. [GH-974-975]\n\n  * Use the new Golang API renewer [GH-978]\n\n  * Compile and build with Go 1.9\n\nBUG FIXES:\n\n  * Add per-template option `error_on_missing_key`. This causes the template to\n      error when the user attempts to access a key in a map or field in a struct\n      that does not exist. Previous behavior was to print `<no value>`, which\n      might not be the desired behavior. This is opt-in behavior on a\n      per-template basis. There is no global option. A future version of\n      Consul Template will switch the default behavior to this safer format, but\n      that change will be clearly called out as a breaking change in the future.\n      Users should set `error_on_missing_key = false` in their configuration\n      files if they are relying on the current `<no value>` behavior.\n      [GH-973, GH-972]\n  * Ensure all templates are rendered before spawning commands [GH-991, GH-995]\n\n## v0.19.0 (June 29, 2017)\n\nBREAKING CHANGES:\n\n  * All previous deprecation errors have been removed and associated configs or\n      CLI options are no longer valid. It is highly recommended that you run\n      v0.18.5 and resolve any deprecations before upgrading to this version!\n\nIMPROVEMENTS:\n\n  * Add new configuration option `vault.grace`, which configures the grace\n      period between lease renewal and secret re-acquisition. When renewing a\n      secret, if the remaining lease is less than or equal to the configured\n      grace, Consul Template will request a new credential. This prevents Vault\n      from revoking the credential at expiration and Consul Template having a\n      stale credential. **If you set this to a value that is higher than your\n      default TTL or max TTL, Consul Template will always read a new secret!**\n  * Add a new option to `datacenters` to optionally ignore inaccessible\n      datacenters [GH-908].\n\nBUG FIXES:\n\n  * Use the logger as soon as its available for output [GH-947]\n  * Update Consul API library to fix a bug where custom CA configuration was\n      ignored [GH-965]\n\n\n## v0.18.5 (May 25, 2017)\n\nBREAKING CHANGES:\n\n  * Retry now has a maximum default. Previous versions of Consul Template\n      would retry indefinitely, potentially allowing the time between retries to\n      reach days, months, or years due to the exponential nature. Users wishing\n      to use the old behavior should set `max_backoff = 0` in their\n      configurations. [GH-940]\n\nIMPROVEMENTS:\n\n  * Add support for `MaxBackoff` in Retry options [GH-938, GH-939]\n  * Compile with Go 1.8.3\n\n## v0.18.4 (May 25, 2017)\n\nBUG FIXES:\n\n  * Compile with go 1.8.2 for the security fix. The code is exactly the same as\n      v0.18.3.\n\n## v0.18.3 (May 9, 2017)\n\nIMPROVEMENTS:\n\n  * Add support for local datacenter in node queries [GH-862, GH-927]\n  * Add support for service tags on health checks [Consul vendor update]\n\nBUG FIXES:\n\n  * Seed the random generator for splay values\n  * Reset retries counter on successful contact [GH-931]\n  * Return a nil slice instead of an error for non-existent maps\n      [GH-906, GH-932]\n  * Do not return data in dedup mode if the template is unchanged\n      [GH-933 GH-698]\n\nNOTABLE:\n\n  * Consul Template is now built with Go 1.8.1\n  * Update internal library to Consul 0.8.2 - this should not affect any users\n\n## v0.18.2 (March 28, 2017)\n\nIMPROVEMENTS:\n\n  * Add missing HTTP transport configuration options\n  * Add `modulo` function for performing modulo math\n\nBUG FIXES:\n\n  * Default transport max idle connections based on `GOMAXPROCS`\n  * Read `VAULT_*` envvars before finalizing [GH-914, GH-916]\n  * Register `[]*KeyPair` as a gob [GH-893]\n\n## v0.18.1 (February 7, 2017)\n\nIMPROVEMENTS:\n\n  * Add support for tagged addresses and metadata [GH-863]\n  * Add `.exe` extension to Windows binaries [GH-875]\n  * Add support for customizing the low-level transport details for Consul and\n      Vault [GH-880, GH-877]\n  * Read token from `~/.vault-token` if it exists [GH-878, GH-884]\n\nBUG FIXES:\n\n  * Resolve an issue with filters on health service dependencies [GH-857]\n  * Restore ability to reload configurations from disk [GH-866]\n  * Move `env` back to a helper function [GH-882]\n\n    This was causing a lot of issues for users, and it required many folks to\n    re-write their templates for the small benefit of people running in\n    de-duplicate mode who did not understand the trade-offs. The README is now\n    updated with the trade-offs of running in dedup mode and the expected `env`\n    behavior has been restored.\n\n  * Do not loop indefinitely if the dedup manager is unable to acquire a lock\n      [GH-864]\n\n\n## v0.18.0 (January 20, 2017)\n\nNEW FEATURES:\n\n  * Add new template function `keyExists` for determining if a key is present.\n      See the breaking change notice before for more information about the\n      motivation for this change.\n\n  * Add `scratch` for storing information across a template invocation. Scratch\n      is especially useful when saving a computed value to use it across a\n      template. Scratch values are not shared across multiple templates and are\n      not persisted between template invocations\n\n  * Add support for controlling retry behavior for failed communications to\n      Consul or Vault. By default, Consul Template will now retry 5 times before\n      returning an error. The backoff timing and number of attempts can be tuned\n      using the CLI or a configuration file.\n\n  * Add `executeTemplate` function for executing a defined template.\n\n  * Add `base64Decode`, `base64Encode`, `base64URLDecode`, and `base64URLEncode`\n      functions for working with base64 encodings.\n\n  * Add `containsAll`, `containsAny`, `containsNone`, and `containsNotAll`\n      functions for easy filtering of multiple tag selections.\n\nBREAKING CHANGES:\n\n  * Consul Template now **blocks on `key` queries**. The previous behavior was\n      to always pass through, allowing users to use the existence of a key as\n      a source of control flow. This caused confusion among many users, so we\n      have restored the expected behavior of blocking on a `key` query, but have\n      added `keyExists` to check for the existence of a key. Note that the\n      `keyOrDefault` function remains unchanged and will not block if the value\n      is nil, as expected.\n\n  * The `vault` template function has been removed. This has been deprecated\n      with a warning since v0.14.0.\n\n  * A shell is no longer assumed for Template commands. Previous versions of\n      Consul Template assumed `/bin/sh` (`cmd` on Windows) as the parent\n      process for the template command. Due to user requests and a desire to\n      customize the shell, Consul Template no longer wraps the command in a\n      shell. For most commands, this change will be transparent. If you were\n      utilizing shell-specific functions like `&&`, `||`, or conditionals, you\n      will need to wrap you command in a shell, for example:\n\n    ```shell\n    -template \"in.tpl:out.tpl:/bin/bash -c 'echo a || b'\"\n    ```\n\n    or\n\n    ```hcl\n    template {\n      command = \"/bin/bash -c 'echo a || b'\"\n    }\n    ```\n\n  * The `env` function is now treated as a dependency instead of a helper. For\n      most users, there will be no impact.\n\n  * This release is compiled with Golang v1.8. We do not expect this to cause\n      any issues, but it is worth calling out.\n\nDEPRECATIONS:\n\n  * `.Tags.Contains` is deprecated. Templates should make use of the built-in\n      `in` and `contains` functions instead. For example:\n\n    ```liquid\n    {{ if .Tags.Contains \"foo\" }}\n    ```\n\n    becomes:\n\n    ```liquid\n    {{ if .Tags | contains \"foo\" }}\n    ```\n\n    or:\n\n    ```liquid\n    {{ if \"foo\" | in .Tags }}\n    ```\n\n  * `key_or_default` has been renamed to `keyOrDefault` to better align with\n      Go's naming structure. The old method is aliased and will remain until a\n      future release.\n\n  * Consul-specific CLI options are now prefixed with `-consul-`:\n\n    * `-auth` is now `-consul-auth`\n    * `-ssl-(.*)` is now `-consul-ssl-$1`\n    * `-retry` is now `-consul-retry` and has been broken apart into more\n      specific CLI options.\n\n  * Consul-specific configuration options are now nested under a stanza. For\n    example:\n\n    ```hcl\n    auth {\n      username = \"foo\"\n      password = \"bar\"\n    }\n    ```\n\n    becomes:\n\n    ```hcl\n    consul {\n      auth {\n        username = \"foo\"\n        password = \"bar\"\n      }\n    }\n    ```\n\n    This applies to the `auth`, `retry`, `ssl`, and `token` options.\n\nIMPROVEMENTS:\n\n  * Add CLI support for all SSL configuration options for both Consul and Vault.\n    Vault options are identical to Consul but with `vault-` prefix. Includes\n    the addition of `ssl-ca-path` to be consistent with file-based configuration\n    options.\n\n    * `ssl` `vault-ssl` (Enable)\n    * `ssl-verify` `vault-ssl-verify`\n    * `ssl-cert` `vault-ssl-cert`\n    * `ssl-key` `vault-ssl-key`\n    * `ssl-ca-cert` `vault-ssl-ca-cert`\n    * `ssl-ca-path` `vault-ssl-ca-path`\n    * `ssl-server-name` `vault-ssl-server-name`\n\n  * Add `-consul-ssl-server-name`\n  * Add `-consul-ssl-ca-path`\n  * Add `-consul-retry`\n  * Add `-consul-retry-attempts`\n  * Add `-consul-retry-backoff`\n  * Add `-vault-retry`\n  * Add `-vault-retry-attempts`\n  * Add `-vault-retry-backoff`\n  * Add support for `server_name` option for TLS configurations to allow\n      specification of the expected certificate common name.\n  * Add `-vault-addr` CLI option for specifying the Vault server address\n      [GH-740, GH-747]\n  * Add tagged addresses to Node structs\n  * Add support for multiple `-config` flags [GH-773, GH-751]\n  * Add more control over template command execution\n  * Add a way to programatically track the dependencies a particular template\n      is blocked on [GH-799]\n\nBUG FIXES:\n\n  * Fix `-renew-token` flag not begin honored on the CLI [GH-741, GH-745]\n  * Allow `*` in key names [GH-789, GH-755]\n\n## v0.16.0 (September 22, 2016)\n\nNEW FEATURES:\n\n  * **Exec Mode!** Consul Template can now act as a faux-supervisor for\n      applications. Please see the [Exec Mode](README.md#exec-mode)\n      documentation for more information.\n  * **Vault Token Unwrapping!** Consul Template can now unwrap Vault tokens that\n      have been wrapped using Vault's cubbyhole response wrapping. Simply add\n      the `unwrap_token` option to your Vault configuration stanza or pass in\n      the `-vault-unwrap-token` command line flag.\n\nBREAKING CHANGES:\n\n  * Consul Template no longer terminates on SIGTERM or SIGQUIT. Previous\n      versions were hard-coded to listen for SIGINT, SIGTERM, and SIGQUIT. This\n      value is now configurable, and the default is SIGINT. SIGQUIT will trigger\n      a core dump in accordance with similar programs. SIGTERM is no longer\n      listened.\n  * Consul Template now exits on irrecoverable Vault errors such as failing to\n      renew a token or lease.\n\nDEPRECATIONS:\n\n  * The `vault.renew` option has been renamed to `vault.renew_token` for added\n      clarity. This is backwards-compatible for this release, but will be\n      removed in a future release, so please update your configurations\n      accordingly.\n\nIMPROVEMENTS:\n\n  * Permit commas in key prefix names [GH-669]\n  * Add configurable kill and reload signals [GH-686]\n  * Add a command line flag for controlling whether a provided Vault token will\n      be renewed [GH-718]\n\nBUG FIXES:\n\n  * Allow variadic template function for `secret` [GH-660, GH-662]\n  * Always log in UTC time\n  * Log milliseconds [GH-676, GH-674]\n  * Maintain template ordering [GH-683]\n  * Add `Service` address to catalog node response [GH-687]\n  * Do not require trailing slashes [GH-706, GH-713]\n  * Wait for all existing dedup acquire attempts to finish [GH-716, GH-677]\n\n\n## v0.15.0.dev (June 9, 2016)\n\nBREAKING CHANGES:\n\n  * **Removing reaping functionality** [GH-628]\n\nIMPROVEMENTS:\n\n  * Allow specifying per-template delimiters [GH-615, GH-389]\n  * Allow specifying per-template wait parameters [GH-589, GH-618]\n  * Switch to actually vendoring dependencies\n  * Add support for writing data [GH-652, GH-492]\n\nBUG FIXES:\n\n  * Close open connections when reloading configuration [GH-591, GH-595]\n  * Do not share catalog nodes [GH-611, GH-572, GH-603]\n  * Properly handle empty string in ParseUint [GH-610, GH-609]\n  * Cache Vault's _original_ lease duration [5b955a8]\n  * Use decimal division for calculating Vault lease durations [87d61d9]\n  * Load VAULT_TOKEN environment variable [2431448]\n  * Properly clean up quiescence timers when using multiple templates [GH-616]\n  * Print a nice error if K/V cannot be exploded [GH-617, GH-596]\n  * Update documentation about symlinks [GH-579]\n  * Properly parse file permissions in mapstructure [GH-626]\n\n## v0.14.0 (March 7, 2016)\n\nDEPRECATIONS:\n\n  * The `vault` template API function has been renamed to `secret` to be in line\n    with other tooling. The `vault` API function will continue to work but will\n    print a warning to the log file. A future release of Consul Template will\n    remove the `vault` API.\n\nNEW FEATURES:\n\n  * Add `secrets` template API for listing secrets in Vault. Please note this\n    requires Vault 0.5+ and the secret backend must support listing. Please see\n    the Vault documentation for more information [GH-270]\n\nIMPROVEMENTS:\n\n  * Allow passing any kind of object to `toJSON` in the template. Previously\n    this was restricted to key-value maps, but that restriction is now removed.\n    [GH-553]\n\nBUG FIXES:\n\n  * Parse file permissions as a string in JSON [GH-548]\n  * Document how to reload config with signals [GH-522]\n  * Stop all dependencies when reloading the running/watcher [GH-534, GH-568]\n\n## v0.13.0 (February 18, 2016)\n\nBUG FIXES:\n\n  * Compile with go1.6 to avoid race [GH-442]\n  * Switch to using a pooled transport [GH-546]\n\n## v0.12.2 (January 15, 2016)\n\nBUG FIXES:\n\n  * Fixed an issue when running as PID 1 in a Docker container where Consul\n    Template could consume CPU and spuriously think its spwaned sub-processes\n    had failed [GH-511]\n\n## v0.12.1 (January 7, 2016)\n\nIMPROVEMENTS:\n\n  * Add support for math operations on uint types [GH-483, GH-484]\n  * Make check information available through health service [GH-490]\n\nBUG FIXES:\n\n  * Store vault data on the dependency and handle an error where a failed\n    lease renewal would result in `<no data>` in the rendered template. Please\n    note, there is a bug in Vault 0.4 with respect to lease renewals that makes\n    it inoperable with Consul Template. Please either use Vault 0.3 or wait\n    until Vault 0.5 is released (the bug has already been fixed on master).\n    [GH-468, GH-493, GH-504]\n\n\n## v0.12.0 (December 10, 2015)\n\nBREAKING CHANGES:\n\n  * Add support for checking if a node is in maintenance mode [GH-477, GH-455]\n\n    Previously, Consul Template would report nodes in maintenance mode as\n    \"critical\". They will now report as \"maintenance\" so users can perform more\n    detailed filtering. It is unlikely, but if you were filtering critical\n    services, nodes/services in maintenance mode will no longer be included.\n\n\nFEATURES:\n\n  * Add support for de-duplication mode. In de-duplication mode, Consul Template\n    uses leader election to elect one Consul Template process to render a\n    template. The results of this template are rendered into Consul's key-value\n    store, and other templates pull from the pre-rendered template. This option\n    is off by default, but it is highly recommended that the option is enabled\n    for clusters with a high load factor (number of templates x number of\n    dependencies per template). [GH-465]\n  * Add support for automatically reaping child processes. This is very useful\n    when running Consul Template as PID 1 (like in a Docker container) when no\n    init system is present. The option is configurable, but it defaults to \"on\"\n    when the Consul Template process is PID 1. [GH-428, GH-479]\n\n\nIMPROVEMENTS:\n\n  * Use the `renew-self` endpoint instead of `renew` for renewing the token\n    [GH-450]\n  * Allow existing templates to be backed up before writing the new one [GH-464]\n  * Add support for TLS/SSL mutual authentication [GH-448]\n  * Add support for checking if a node is in maintenance mode [GH-477, GH-455]\n\n\n## v0.11.1 (October 26, 2015)\n\nFEATURES:\n\n  * Accept \"unix\" as an argument to `timestamp` to generate a unix\n    timestamp [GH-422]\n\nIMPROVEMENTS:\n\n  * Make `Path` a public field on the vault secret dependency so other libraries\n    can access it\n\nBUG FIXES:\n\n  * Ensure there is a newline at the end of the version output\n  * Update README development instructions [GH-423]\n  * Adjust error messages so that data does not always \"come from Consul\"\n  * Fix race conditions in tests\n  * Update the `LastContact` value for non-Consul dependencies to always\n    return 0 [GH-432, GH-433]\n  * Always use `DefaultConfig()` in tests to find issues\n  * Fix broken math functions - previously add, subtract, multiply, and divide\n    for integers would perform the operation on only the first operand\n    [GH-430, GH-435]\n  * Renew the vault token based off of the auth, not the secret [GH-443]\n  * Remove noisy log message [GH-445]\n\n\n## v0.11.0 (October 9, 2015)\n\nBREAKING CHANGES:\n\n  * Allow configuration of destination file permissions [GH-415, GH-358]\n\n    Previously, Consul Template would inspect the file at the destination path\n    and mirror those file permissions, if a file existed. If a file did not\n    exist, Consul Template would render the file with 0644 permissions. This was\n    acceptable behavior in a pre-Vault world, but now that Consul Template is\n    capable of rendering secrets, there is a desire for increased security. As\n    such, Consul Template **no longer mirrors existing destination file\n    permissions**. Instead, users can specify the file permissions in the\n    configuration file. Please see the README for examples. If you were\n    previously relying on an existing file's file permissions to enfore the\n    destination file permissions, you must switch to specifying the file\n    permissions in the configuration file. If you were not dependent on this\n    behavior, nothing has changed; the default value is still 0644.\n\nFEATURES:\n\n  * Add `in` and `contains` functions for checking if a slice or array contains\n    a given value [GH-366]\n  * Add `add` function for calculating the sum of integers/floats\n  * Add `subtract` function for calculating the difference of integers/floats\n  * Add `multiply` function for calculating the product of integers/floats\n  * Add `divide` function for calculating the division of integers/floats\n\nIMPROVEMENTS:\n\n  * Sort serivces by ID as well\n  * Add a mechanism for renewing the given Vault token [GH-359, GH-367]\n  * Default max-stale to 1s - this severely reduces the load on the Consul\n    leader by allowing followers to respond to API requests [GH-386, GH-397]\n  * Add GPG signing for SHASUMS on new releases\n  * Push watcher errors down to the client in `once` mode [GH-361, GH-418]\n\nBUG FIXES:\n\n  * Set ssl in the CLI [GH-321]\n  * **Regression** - Reload configuration on SIGHUP [GH-332]\n  * Remove port option from `service` query and documentation - it was unused\n    and legacy, but was causing issues and confusion [GH-333]\n  * Return the empty value when no parsable value is given [GH-353]\n  * Start with a blank configuration when reloading via SIGHUP [GH-393, GH-394]\n  * Use an int64 instead of an int to loop function [GH-401, GH-402]\n  * Do not remove the Windows file if it exists [GH-378]\n\n## v0.10.0 (June 9, 2015)\n\nFEATURES:\n\n  * Add `plugin` and plugin ecosystem\n  * Add `parseBool` function for parsing strings into booleans (GH-312)\n  * Add `parseFloat` function for parsing strings into float64 (GH-312)\n  * Add `parseInt` function for parsing strings into int64 (GH-312)\n  * Add `parseUint` function for parsing strings into uint64 (GH-312)\n  * Add `explode` function for exploding the result of `tree` or `ls` into a\n    deeply nested  hash (GH-311)\n  * Add `toJSON` and `toJSONPretty` function for exporting the result of `tree`\n    or `ls`  into a JSON hash (GH-311)\n  * Add `toYAML` function for exporting the result of `tree` or `ls` into a\n    YAML document (GH-311)\n  * Add `node` function for querying nodes (GH-306, GH-309)\n  * Add `split` function for splitting a string on a separator (GH-285)\n  * Add `join` function for joining a string slice on a given key (GH-285)\n  * Add `pid_file` configuration and command line option for specifying the\n    location of a pid file on disk (GH-281, GH-286)\n\nIMPROVEMENTS:\n\n  * Allow setting log_level via the configuration file (CLI still take\n    precedence if specified)\n  * Improve error reporting when loading multiple configs by including the path\n    on the configuration file that had an error (GH-275)\n  * Add a timeout around command execution to prevent hanging (GH-283)\n  * Read Vault/Consul environment variables for the config (GH-307, GH-308)\n\nBUG FIXES:\n\n  * Properly merge \"default\" config values with user-supplied values (GH-271)\n\n\n## v0.9.0 (April 29, 2015)\n\nFEATURES:\n\n  * Add Vault functionality for querying secrets from Vault (GH-264)\n  * Add `regexMatch` template helper to determine if a result matches the given\n    regular expressions (GH-246)\n  * Add support for `ssl-cert` and `ss-ca-cert` options (GH-255)\n\nIMPROVEMENTS:\n\n  * Expand `byTag` to accept catalog services as well (GH-249, GH-250)\n  * Allow catalog service tags to use the `.Contains` function (GH-261)\n\nBUG FIXES:\n\n  * Send the standard error of commands back over the standard error of\n    Consul Template (GH-253, GH-254)\n  * Allow specifying `-v` in addition to `-version` to get the version output\n\n## v0.8.0 (March 30, 2015)\n\nFEATURES:\n\n  * Add `.Size()` so the watcher can report its size (GH-206)\n  * Add `byKey` template helper to group the results of a `tree` function by\n    their containing directory (GH-207, GH-209, GH-241)\n  * Add `timestamp` template function for returning the current timestamp with\n    the ability to add custom formatting (GH-225, GH-230)\n  * Add `loop` template function for iteration (GH-238, GH-221)\n\nIMPROVEMENTS:\n\n  * Expose `LastIndex` and `ReceivedData` from the Watcher\n  * Add unimplemented KV fields (GH-203)\n  * Warn the user if there are a large number of dependencies (GH-205)\n  * Extend documentation on how health service dependencies are downloaded from\n    Consul (GH-212)\n  * Allow empty configuration directories (GH-217)\n  * Document caveats around using `parseJSON` during multi-evaluation\n  * Print the final configuration as JSON in debug mode (GH-231)\n  * Export certain environment variables when executing commands that are read\n    by other Consul tooling or in your scripts (GH-232) - see the README for\n    more information\n  * Adjust logging to be less noisy without compromising information (GH-242)\n\nBUG FIXES:\n\n  * Properly filter services by their type (GH-210, GH-212)\n  * Return an error if extra arguments are given on the command line (GH-227)\n  * Do not overwrite given configuration with the default options (GH-228, GH-219)\n  * Check for the correct conditions when using basic authentication (GH-220)\n  * Remove unused code paths for clarity (GH-242)\n  * Remove race condition in templates when called concurrently (GH-242)\n  * Remove race condition in test suite (GH-242)\n  * Force a refresh if Consul's WaitIndex is less than our current value (GH-242)\n  * Avoid pushing data onto the watcher when the view has been stopped (GH-242)\n  * Do not accept data in the runner for an unwatched dependency (GH-198, GH-242)\n\n## v0.7.0 (February 19, 2015)\n\nBREAKING CHANGES:\n\n  * Remove `ssl` configuration option from templates - use an `ssl`\n    configuration block with `enabled = true` instead\n  * Remove `ssl_no_verify` configuration option from templates - use an `ssl`\n    configuration block with `verify = false` instead\n  * Restructure CLI `-ssl-no-verify` to `-ssl-verify` - to disable SSL\n    certification validation on the command line, use `-ssl-verify=false`\n  * Remove `auth` configuration option from templates - use an `auth`\n    configuration block with `enabled = true` combined with `username = ...` and\n    `password = ...` inside the block instead\n\nFEATURES:\n\n  * Add support for logging to syslog (GH-163)\n  * Add `log_level` as a configuration file option\n  * Add `-log-level` as a CLI option\n\nIMPROVEMENTS:\n\n  * Use a default retry interval of 5s (GH-190) - this value has been (and will\n    remain) configurable since v0.5.0, but the default value has changed from 0\n    to 5s\n  * Use a service's reported address if given (GH-185, GH-186)\n  * Add new `NodeAddress` field to health services to always include the node's\n    address\n  * Return errors up the watcher's error channel so other libraries can\n    determine what to do with the error instead of swallowing it (GH-196)\n  * Move SSL and authentication options into their own configuration blocks in\n    the HCL\n  * Add new `watch.WaitVar` for parsing Wait structs via Go's flag parsing\n    library.\n  * Extract logging components into their own library for sharing (GH-199)\n\nBUG FIXES:\n\n  * Return errors instead of nil in catalog nodes and key prefix dependencies\n    (GH-192)\n  * Allow Consul Template to exit when running in `once` mode and templates have\n    not changed (GH-188)\n  * Raise an error when specifying a non-existent option in the configuration\n    file (GH-197)\n  * Use an RWLock when accessing information in the Brain to improve performance\n  * Improve debugging output and consistency\n  * Remove unused Brain functions\n  * Remove unused documentation items\n  * Use the correct default values for `-ssl` and `-retry` on the CLI\n\n## v0.6.5 (February 5, 2015)\n\nFEATURES:\n\n  * Add `-max-stale` to specify Consul Template may talk to non-leader Consul\n    nodes if they are less than the maximum stale value (GH-183)\n\nBUG FIXES:\n\n  * Fix a concurrency bug in the Brain (GH-180)\n  * Add a better queue-draining mechanism for templates that have a large number\n    of dependencies (GH-184)\n\n## v0.6.1 (February 2, 2015)\n\nIMPROVEMENTS:\n\n  * Allow watcher to use buffered channels so we do not block when multiple\n    dependencies return data (GH-176)\n  * Buffer results from the watcher to reduce the number of CPU cycles (GH-168\n    and GH-178)\n\nBUG FIXES:\n\n  * Handle the case where reloading via SIGHUP would cause an error (GH-175 and\n    GH-177)\n  * Return errors to the template when parsing a key fails (GH-170)\n  * Expand the list of possible values for keys to non-ASCII fields (the `@` is\n    still a restricted character because it denotes the datacenter) (GH-170)\n  * Diff missing dependencies during the template render to avoid creating\n    extra watchers (GH-169)\n  * Improve debugging output (GH-169)\n\n## v0.6.0 (January 20, 2015)\n\nFEATURES:\n\n  * Implement n-pass evaluation (GH-64) - templates are now evaluated N+1 times\n    to properly accumulate dependencies and build the graph properly\n\nBREAKING CHANGES:\n\n  * Remove `storeKeyPrefix` template function - it has been replaced with `ls`\n    and/or `tree` and was deprecated in 0.2.0\n  * Remove `Key()` from dependency interface\n\nIMPROVEMENTS:\n\n  * Switch to using `hashicorp/consul/api` instead of `armon/consul-api`\n  * Add support for communicating with Consul via HTTPS/SSL (GH-143)\n  * Add support for communicating with Consul via BasicAuth (GH-147)\n  * Quiesce on a per-template basis\n\nBUG FIXES:\n\n  * Reduce memory footprint when running with a large number of templates by\n    using a single context instead of separate template contexts for each\n    template\n  * Improve test coverage\n  * Improve debugging output\n  * Correct tag deep copy that could result in 2N-1 tags (GH-155)\n  * Return an empty slice when parsing an empty JSON file\n  * Update README documentation\n\n## v0.5.1 (December 25, 2014)\n\nBUG FIXES:\n\n  * Parse Retry values in the config (GH-136)\n  * Remove `util` package as it is a code smell and separate `Watcher` and\n    `Dependency` structs and functions into their own packages for re-use\n    (GH-137)\n\n## v0.5.0 (December 19, 2014)\n\nFEATURES:\n\n  * Reload configuration on `SIGHUP`\n  * Add `services` template function for listing all services and associated\n    tags in the Consul catalog (GH-77)\n\nBUG FIXES:\n\n  * Do not execute the same command more than once in one run (GH-112)\n  * Do not exit when Consul is unavailable (GH-103)\n  * Accept configuration files as a valid option to `-config` (GH-126)\n  * Accept Windows drive letters in template paths (GH-78)\n  * Deep copy and sort data returned from Consul API (specifically tags)\n  * Run commands even if not all templates have received data (GH-119)\n\nIMPROVEMENTS:\n\n  * Add support for more complex service health filtering (GH-116)\n  * Add support for specifying a `-retry` interval for Consul timeouts and\n    connection errors (GH-22)\n  * Use official HashiCorp multierror package for errors\n  * Gracefully stop watchers on interrupt\n  * Add support for Go 1.4\n  * Improve test coverage around retrying failures\n\n## v0.4.0 (December 10, 2014)\n\nFEATURES:\n\n  * Add `env` template function for reading an environment variable in the\n    current process into the template\n  * Add `regexReplaceAll` template function\n\nBUG FIXES:\n\n  * Fix documentation examples\n  * Fix `golint` and `go vet` errors\n  * Fix a panic when Consul returned empty query metadata\n  * Allow colons in key prefixes (`ls` and `tree` receive this by proxy)\n  * Allow `parseJSON` to handle top-level JSON objects\n  * Filter empty keys in `tree` and `ls` (folder nodes)\n\nIMPROVEMENTS:\n\n  * Merge multiple configuration template definitions when a configuration\n    directory is specified\n\n## v0.3.1 (November 24, 2014)\n\nBUG FIXES:\n\n  * Allow colons in key names (GH-67)\n  * Fix a documentation bug in the README in the Varnish example (GH-82)\n  * Attempt to render templates before starting the watcher - this fixes an\n    issue where a template that declared no Consul dependencies would never be\n    rendered (GH-85)\n  * Update inline Go documentation for better clarity\n\nIMPROVEMENTS:\n\n  * Fix all issues raised by `go vet`\n  * Update packaging script to fix ZSHisms and use awk for clarity\n\n## v0.3.0 (November 13, 2014)\n\nFEATURES:\n\n  * Added a `Contains` method to `Service.Tags`\n  * Added support for specifying a configuration directory in `-config`, in\n    addition to a file\n  * Added support for querying all nodes in Consul's catalog with the `nodes`\n    template function\n\nBUG FIXES:\n\n  * Update README documentation to clarify that `service` dependencies default\n    to the current datacenter if one is not explicitly given\n  * Ignore empty keys that are returned from an `ls` call (GH-54)\n  * When writing a file atomicly, ensure the drive is the same (GH-58)\n  * Run all commands before exiting - previously if a single command failed in\n    a multi-template environment, the other commands would not execute, but\n    Consul Template would return\n\nIMPROVEMENTS:\n\n  * Added support for querying all `service` nodes by passing an additional\n    parameter to `service`\n\n## v0.2.0 (November 4, 2014)\n\nFEATURES:\n\n  * Added helper for decoding a result as JSON using the `parseJSON` pipe\n    function\n  * Added support for reading and watching changes from a file using the `file`\n    template function\n  * Added helper for sorting service entires by a particular tag\n  * Added helper function `toLower()` for converting a string to lowercase\n  * Added helper function `toTitle()` for converting a string to titlecase\n  * Added helper function `toUpper()` for converting a string to uppercase\n  * Added helper function `replaceAll()` for replacing occurrences of a\n    substring with a new string\n  * Added `tree` function for returning all key prefixes recursively\n  * Added `ls` function for returning all keys in the top-level prefix (but not\n    deeply nested ones)\n\nBUG FIXES:\n\n  * Remove prefixes from paths when querying a key prefix\n\nIMPROVEMENTS:\n\n  * Moved shareable functions into a util module so other libraries can benefit\n  * Make Path a public field on Template\n  * Added more examples and documentation to the README\n\nDEPRECATIONS:\n\n  * `keyPrefix` is deprecated in favor or `tree` and `ls` and will be removed in\n  the next major release\n\n\n## v0.1.1 (October 28, 2014)\n\nBUG FIXES:\n\n  * Fixed an issue where help output was displayed twice when specifying the\n    `-h` flag\n  * Added support for specifyiny forward slashes (`/`) in service names\n  * Added support for specifying underscores (`_`) in service names\n  * Added support for specifying dots (`.`) in tag names\n\nIMPROVEMENTS:\n\n  * Added support for Travis CI\n  * Fixed numerous typographical errors\n  * Added more documentation, including an FAQ in the README\n  * Do not return an error when a template has no dependencies. See GH-31 for\n    more background and information\n  * Do not render templates if they have the same content\n  * Do not execute commands if the template on disk would not be changed\n\n## v0.1.0 (October 21, 2014)\n\n  * Initial release\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.2080078125,
          "content": "# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n# ===================================\n# \n#   Release image\n#\n# ===================================\nFROM alpine:latest AS release-default\n\nARG BIN_NAME=consul-template\n# Export BIN_NAME for the CMD below, it can't see ARGs directly.\nENV BIN_NAME=$BIN_NAME\nARG PRODUCT_VERSION\nARG PRODUCT_REVISION\nARG PRODUCT_NAME=$BIN_NAME\n# TARGETARCH and TARGETOS are set automatically when --platform is provided.\nARG TARGETOS TARGETARCH\nENV PRODUCT_NAME=$BIN_NAME\n\nLABEL maintainer=\"Consul Team <consul@hashicorp.com>\"\n# version label is required for build process\nLABEL version=$PRODUCT_VERSION\nLABEL revision=$PRODUCT_REVISION\nLABEL licenses=\"MPL-2.0\"\n\n# These are the defaults, this makes them explicit and overridable.\nARG UID=100\nARG GID=1000\n# Create a non-root user to run the software.\nRUN addgroup -g ${GID} ${BIN_NAME} \\\n    && adduser -u ${UID} -S -G ${BIN_NAME} ${BIN_NAME}\n\n# where the build system stores the builds\nCOPY ./dist/$TARGETOS/$TARGETARCH/$BIN_NAME /bin/\nCOPY LICENSE /usr/share/doc/$PRODUCT_NAME/LICENSE.txt\n\n# entrypoint\nCOPY ./.release/docker-entrypoint.sh /bin/\nENTRYPOINT [\"/bin/docker-entrypoint.sh\"]\n\nUSER ${BIN_NAME}:${BIN_NAME}\nCMD /bin/$BIN_NAME\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 31.2392578125,
          "content": "Copyright (c) 2014 HashiCorp, Inc.\n\nMozilla Public License, version 2.0\n\n1. Definitions\n\n1.1. “Contributor”\n\n     means each individual or legal entity that creates, contributes to the\n     creation of, or owns Covered Software.\n\n1.2. “Contributor Version”\n\n     means the combination of the Contributions of others (if any) used by a\n     Contributor and that particular Contributor’s Contribution.\n\n1.3. “Contribution”\n\n     means Covered Software of a particular Contributor.\n\n1.4. “Covered Software”\n\n     means Source Code Form to which the initial Contributor has attached the\n     notice in Exhibit A, the Executable Form of such Source Code Form, and\n     Modifications of such Source Code Form, in each case including portions\n     thereof.\n\n1.5. “Incompatible With Secondary Licenses”\n     means\n\n     a. that the initial Contributor has attached the notice described in\n        Exhibit B to the Covered Software; or\n\n     b. that the Covered Software was made available under the terms of version\n        1.1 or earlier of the License, but not also under the terms of a\n        Secondary License.\n\n1.6. “Executable Form”\n\n     means any form of the work other than Source Code Form.\n\n1.7. “Larger Work”\n\n     means a work that combines Covered Software with other material, in a separate\n     file or files, that is not Covered Software.\n\n1.8. “License”\n\n     means this document.\n\n1.9. “Licensable”\n\n     means having the right to grant, to the maximum extent possible, whether at the\n     time of the initial grant or subsequently, any and all of the rights conveyed by\n     this License.\n\n1.10. “Modifications”\n\n     means any of the following:\n\n     a. any file in Source Code Form that results from an addition to, deletion\n        from, or modification of the contents of Covered Software; or\n\n     b. any new file in Source Code Form that contains any Covered Software.\n\n1.11. “Patent Claims” of a Contributor\n\n      means any patent claim(s), including without limitation, method, process,\n      and apparatus claims, in any patent Licensable by such Contributor that\n      would be infringed, but for the grant of the License, by the making,\n      using, selling, offering for sale, having made, import, or transfer of\n      either its Contributions or its Contributor Version.\n\n1.12. “Secondary License”\n\n      means either the GNU General Public License, Version 2.0, the GNU Lesser\n      General Public License, Version 2.1, the GNU Affero General Public\n      License, Version 3.0, or any later versions of those licenses.\n\n1.13. “Source Code Form”\n\n      means the form of the work preferred for making modifications.\n\n1.14. “You” (or “Your”)\n\n      means an individual or a legal entity exercising rights under this\n      License. For legal entities, “You” includes any entity that controls, is\n      controlled by, or is under common control with You. For purposes of this\n      definition, “control” means (a) the power, direct or indirect, to cause\n      the direction or management of such entity, whether by contract or\n      otherwise, or (b) ownership of more than fifty percent (50%) of the\n      outstanding shares or beneficial ownership of such entity.\n\n\n2. License Grants and Conditions\n\n2.1. Grants\n\n     Each Contributor hereby grants You a world-wide, royalty-free,\n     non-exclusive license:\n\n     a. under intellectual property rights (other than patent or trademark)\n        Licensable by such Contributor to use, reproduce, make available,\n        modify, display, perform, distribute, and otherwise exploit its\n        Contributions, either on an unmodified basis, with Modifications, or as\n        part of a Larger Work; and\n\n     b. under Patent Claims of such Contributor to make, use, sell, offer for\n        sale, have made, import, and otherwise transfer either its Contributions\n        or its Contributor Version.\n\n2.2. Effective Date\n\n     The licenses granted in Section 2.1 with respect to any Contribution become\n     effective for each Contribution on the date the Contributor first distributes\n     such Contribution.\n\n2.3. Limitations on Grant Scope\n\n     The licenses granted in this Section 2 are the only rights granted under this\n     License. No additional rights or licenses will be implied from the distribution\n     or licensing of Covered Software under this License. Notwithstanding Section\n     2.1(b) above, no patent license is granted by a Contributor:\n\n     a. for any code that a Contributor has removed from Covered Software; or\n\n     b. for infringements caused by: (i) Your and any other third party’s\n        modifications of Covered Software, or (ii) the combination of its\n        Contributions with other software (except as part of its Contributor\n        Version); or\n\n     c. under Patent Claims infringed by Covered Software in the absence of its\n        Contributions.\n\n     This License does not grant any rights in the trademarks, service marks, or\n     logos of any Contributor (except as may be necessary to comply with the\n     notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\n     No Contributor makes additional grants as a result of Your choice to\n     distribute the Covered Software under a subsequent version of this License\n     (see Section 10.2) or under the terms of a Secondary License (if permitted\n     under the terms of Section 3.3).\n\n2.5. Representation\n\n     Each Contributor represents that the Contributor believes its Contributions\n     are its original creation(s) or it has sufficient rights to grant the\n     rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\n     This License is not intended to limit any rights You have under applicable\n     copyright doctrines of fair use, fair dealing, or other equivalents.\n\n2.7. Conditions\n\n     Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in\n     Section 2.1.\n\n\n3. Responsibilities\n\n3.1. Distribution of Source Form\n\n     All distribution of Covered Software in Source Code Form, including any\n     Modifications that You create or to which You contribute, must be under the\n     terms of this License. You must inform recipients that the Source Code Form\n     of the Covered Software is governed by the terms of this License, and how\n     they can obtain a copy of this License. You may not attempt to alter or\n     restrict the recipients’ rights in the Source Code Form.\n\n3.2. Distribution of Executable Form\n\n     If You distribute Covered Software in Executable Form then:\n\n     a. such Covered Software must also be made available in Source Code Form,\n        as described in Section 3.1, and You must inform recipients of the\n        Executable Form how they can obtain a copy of such Source Code Form by\n        reasonable means in a timely manner, at a charge no more than the cost\n        of distribution to the recipient; and\n\n     b. You may distribute such Executable Form under the terms of this License,\n        or sublicense it under different terms, provided that the license for\n        the Executable Form does not attempt to limit or alter the recipients’\n        rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\n     You may create and distribute a Larger Work under terms of Your choice,\n     provided that You also comply with the requirements of this License for the\n     Covered Software. If the Larger Work is a combination of Covered Software\n     with a work governed by one or more Secondary Licenses, and the Covered\n     Software is not Incompatible With Secondary Licenses, this License permits\n     You to additionally distribute such Covered Software under the terms of\n     such Secondary License(s), so that the recipient of the Larger Work may, at\n     their option, further distribute the Covered Software under the terms of\n     either this License or such Secondary License(s).\n\n3.4. Notices\n\n     You may not remove or alter the substance of any license notices (including\n     copyright notices, patent notices, disclaimers of warranty, or limitations\n     of liability) contained within the Source Code Form of the Covered\n     Software, except that You may alter any license notices to the extent\n     required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\n     You may choose to offer, and to charge a fee for, warranty, support,\n     indemnity or liability obligations to one or more recipients of Covered\n     Software. However, You may do so only on Your own behalf, and not on behalf\n     of any Contributor. You must make it absolutely clear that any such\n     warranty, support, indemnity, or liability obligation is offered by You\n     alone, and You hereby agree to indemnify every Contributor for any\n     liability incurred by such Contributor as a result of warranty, support,\n     indemnity or liability terms You offer. You may include additional\n     disclaimers of warranty and limitations of liability specific to any\n     jurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n\n   If it is impossible for You to comply with any of the terms of this License\n   with respect to some or all of the Covered Software due to statute, judicial\n   order, or regulation then You must: (a) comply with the terms of this License\n   to the maximum extent possible; and (b) describe the limitations and the code\n   they affect. Such description must be placed in a text file included with all\n   distributions of the Covered Software under this License. Except to the\n   extent prohibited by statute or regulation, such description must be\n   sufficiently detailed for a recipient of ordinary skill to be able to\n   understand it.\n\n5. Termination\n\n5.1. The rights granted under this License will terminate automatically if You\n     fail to comply with any of its terms. However, if You become compliant,\n     then the rights granted under this License from a particular Contributor\n     are reinstated (a) provisionally, unless and until such Contributor\n     explicitly and finally terminates Your grants, and (b) on an ongoing basis,\n     if such Contributor fails to notify You of the non-compliance by some\n     reasonable means prior to 60 days after You have come back into compliance.\n     Moreover, Your grants from a particular Contributor are reinstated on an\n     ongoing basis if such Contributor notifies You of the non-compliance by\n     some reasonable means, this is the first time You have received notice of\n     non-compliance with this License from such Contributor, and You become\n     compliant prior to 30 days after Your receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\n     infringement claim (excluding declaratory judgment actions, counter-claims,\n     and cross-claims) alleging that a Contributor Version directly or\n     indirectly infringes any patent, then the rights granted to You by any and\n     all Contributors for the Covered Software under Section 2.1 of this License\n     shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user\n     license agreements (excluding distributors and resellers) which have been\n     validly granted by You or Your distributors under this License prior to\n     termination shall survive termination.\n\n6. Disclaimer of Warranty\n\n   Covered Software is provided under this License on an “as is” basis, without\n   warranty of any kind, either expressed, implied, or statutory, including,\n   without limitation, warranties that the Covered Software is free of defects,\n   merchantable, fit for a particular purpose or non-infringing. The entire\n   risk as to the quality and performance of the Covered Software is with You.\n   Should any Covered Software prove defective in any respect, You (not any\n   Contributor) assume the cost of any necessary servicing, repair, or\n   correction. This disclaimer of warranty constitutes an essential part of this\n   License. No use of  any Covered Software is authorized under this License\n   except under this disclaimer.\n\n7. Limitation of Liability\n\n   Under no circumstances and under no legal theory, whether tort (including\n   negligence), contract, or otherwise, shall any Contributor, or anyone who\n   distributes Covered Software as permitted above, be liable to You for any\n   direct, indirect, special, incidental, or consequential damages of any\n   character including, without limitation, damages for lost profits, loss of\n   goodwill, work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses, even if such party shall have been\n   informed of the possibility of such damages. This limitation of liability\n   shall not apply to liability for death or personal injury resulting from such\n   party’s negligence to the extent applicable law prohibits such limitation.\n   Some jurisdictions do not allow the exclusion or limitation of incidental or\n   consequential damages, so this exclusion and limitation may not apply to You.\n\n8. Litigation\n\n   Any litigation relating to this License may be brought only in the courts of\n   a jurisdiction where the defendant maintains its principal place of business\n   and such litigation shall be governed by laws of that jurisdiction, without\n   reference to its conflict-of-law provisions. Nothing in this Section shall\n   prevent a party’s ability to bring cross-claims or counter-claims.\n\n9. Miscellaneous\n\n   This License represents the complete agreement concerning the subject matter\n   hereof. If any provision of this License is held to be unenforceable, such\n   provision shall be reformed only to the extent necessary to make it\n   enforceable. Any law or regulation which provides that the language of a\n   contract shall be construed against the drafter shall not be used to construe\n   this License against a Contributor.\n\n\n10. Versions of the License\n\n10.1. New Versions\n\n      Mozilla Foundation is the license steward. Except as provided in Section\n      10.3, no one other than the license steward has the right to modify or\n      publish new versions of this License. Each version will be given a\n      distinguishing version number.\n\n10.2. Effect of New Versions\n\n      You may distribute the Covered Software under the terms of the version of\n      the License under which You originally received the Covered Software, or\n      under the terms of any subsequent version published by the license\n      steward.\n\n10.3. Modified Versions\n\n      If you create software not governed by this License, and you want to\n      create a new license for such software, you may create and use a modified\n      version of this License if you rename the license and remove any\n      references to the name of the license steward (except to note that such\n      modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n      If You choose to distribute Source Code Form that is Incompatible With\n      Secondary Licenses under the terms of this version of the License, the\n      notice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n\n      This Source Code Form is subject to the\n      terms of the Mozilla Public License, v.\n      2.0. If a copy of the MPL was not\n      distributed with this file, You can\n      obtain one at\n      http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular file, then\nYou may include the notice in a location (such as a LICENSE file in a relevant\ndirectory) where a recipient would be likely to look for such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - “Incompatible With Secondary Licenses” Notice\n\n      This Source Code Form is “Incompatible\n      With Secondary Licenses”, as defined by\n      the Mozilla Public License, v. 2.0.\n\nMozilla Public License, version 2.0\n\n1. Definitions\n\n1.1. “Contributor”\n\n     means each individual or legal entity that creates, contributes to the\n     creation of, or owns Covered Software.\n\n1.2. “Contributor Version”\n\n     means the combination of the Contributions of others (if any) used by a\n     Contributor and that particular Contributor’s Contribution.\n\n1.3. “Contribution”\n\n     means Covered Software of a particular Contributor.\n\n1.4. “Covered Software”\n\n     means Source Code Form to which the initial Contributor has attached the\n     notice in Exhibit A, the Executable Form of such Source Code Form, and\n     Modifications of such Source Code Form, in each case including portions\n     thereof.\n\n1.5. “Incompatible With Secondary Licenses”\n     means\n\n     a. that the initial Contributor has attached the notice described in\n        Exhibit B to the Covered Software; or\n\n     b. that the Covered Software was made available under the terms of version\n        1.1 or earlier of the License, but not also under the terms of a\n        Secondary License.\n\n1.6. “Executable Form”\n\n     means any form of the work other than Source Code Form.\n\n1.7. “Larger Work”\n\n     means a work that combines Covered Software with other material, in a separate\n     file or files, that is not Covered Software.\n\n1.8. “License”\n\n     means this document.\n\n1.9. “Licensable”\n\n     means having the right to grant, to the maximum extent possible, whether at the\n     time of the initial grant or subsequently, any and all of the rights conveyed by\n     this License.\n\n1.10. “Modifications”\n\n     means any of the following:\n\n     a. any file in Source Code Form that results from an addition to, deletion\n        from, or modification of the contents of Covered Software; or\n\n     b. any new file in Source Code Form that contains any Covered Software.\n\n1.11. “Patent Claims” of a Contributor\n\n      means any patent claim(s), including without limitation, method, process,\n      and apparatus claims, in any patent Licensable by such Contributor that\n      would be infringed, but for the grant of the License, by the making,\n      using, selling, offering for sale, having made, import, or transfer of\n      either its Contributions or its Contributor Version.\n\n1.12. “Secondary License”\n\n      means either the GNU General Public License, Version 2.0, the GNU Lesser\n      General Public License, Version 2.1, the GNU Affero General Public\n      License, Version 3.0, or any later versions of those licenses.\n\n1.13. “Source Code Form”\n\n      means the form of the work preferred for making modifications.\n\n1.14. “You” (or “Your”)\n\n      means an individual or a legal entity exercising rights under this\n      License. For legal entities, “You” includes any entity that controls, is\n      controlled by, or is under common control with You. For purposes of this\n      definition, “control” means (a) the power, direct or indirect, to cause\n      the direction or management of such entity, whether by contract or\n      otherwise, or (b) ownership of more than fifty percent (50%) of the\n      outstanding shares or beneficial ownership of such entity.\n\n\n2. License Grants and Conditions\n\n2.1. Grants\n\n     Each Contributor hereby grants You a world-wide, royalty-free,\n     non-exclusive license:\n\n     a. under intellectual property rights (other than patent or trademark)\n        Licensable by such Contributor to use, reproduce, make available,\n        modify, display, perform, distribute, and otherwise exploit its\n        Contributions, either on an unmodified basis, with Modifications, or as\n        part of a Larger Work; and\n\n     b. under Patent Claims of such Contributor to make, use, sell, offer for\n        sale, have made, import, and otherwise transfer either its Contributions\n        or its Contributor Version.\n\n2.2. Effective Date\n\n     The licenses granted in Section 2.1 with respect to any Contribution become\n     effective for each Contribution on the date the Contributor first distributes\n     such Contribution.\n\n2.3. Limitations on Grant Scope\n\n     The licenses granted in this Section 2 are the only rights granted under this\n     License. No additional rights or licenses will be implied from the distribution\n     or licensing of Covered Software under this License. Notwithstanding Section\n     2.1(b) above, no patent license is granted by a Contributor:\n\n     a. for any code that a Contributor has removed from Covered Software; or\n\n     b. for infringements caused by: (i) Your and any other third party’s\n        modifications of Covered Software, or (ii) the combination of its\n        Contributions with other software (except as part of its Contributor\n        Version); or\n\n     c. under Patent Claims infringed by Covered Software in the absence of its\n        Contributions.\n\n     This License does not grant any rights in the trademarks, service marks, or\n     logos of any Contributor (except as may be necessary to comply with the\n     notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\n     No Contributor makes additional grants as a result of Your choice to\n     distribute the Covered Software under a subsequent version of this License\n     (see Section 10.2) or under the terms of a Secondary License (if permitted\n     under the terms of Section 3.3).\n\n2.5. Representation\n\n     Each Contributor represents that the Contributor believes its Contributions\n     are its original creation(s) or it has sufficient rights to grant the\n     rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\n     This License is not intended to limit any rights You have under applicable\n     copyright doctrines of fair use, fair dealing, or other equivalents.\n\n2.7. Conditions\n\n     Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in\n     Section 2.1.\n\n\n3. Responsibilities\n\n3.1. Distribution of Source Form\n\n     All distribution of Covered Software in Source Code Form, including any\n     Modifications that You create or to which You contribute, must be under the\n     terms of this License. You must inform recipients that the Source Code Form\n     of the Covered Software is governed by the terms of this License, and how\n     they can obtain a copy of this License. You may not attempt to alter or\n     restrict the recipients’ rights in the Source Code Form.\n\n3.2. Distribution of Executable Form\n\n     If You distribute Covered Software in Executable Form then:\n\n     a. such Covered Software must also be made available in Source Code Form,\n        as described in Section 3.1, and You must inform recipients of the\n        Executable Form how they can obtain a copy of such Source Code Form by\n        reasonable means in a timely manner, at a charge no more than the cost\n        of distribution to the recipient; and\n\n     b. You may distribute such Executable Form under the terms of this License,\n        or sublicense it under different terms, provided that the license for\n        the Executable Form does not attempt to limit or alter the recipients’\n        rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\n     You may create and distribute a Larger Work under terms of Your choice,\n     provided that You also comply with the requirements of this License for the\n     Covered Software. If the Larger Work is a combination of Covered Software\n     with a work governed by one or more Secondary Licenses, and the Covered\n     Software is not Incompatible With Secondary Licenses, this License permits\n     You to additionally distribute such Covered Software under the terms of\n     such Secondary License(s), so that the recipient of the Larger Work may, at\n     their option, further distribute the Covered Software under the terms of\n     either this License or such Secondary License(s).\n\n3.4. Notices\n\n     You may not remove or alter the substance of any license notices (including\n     copyright notices, patent notices, disclaimers of warranty, or limitations\n     of liability) contained within the Source Code Form of the Covered\n     Software, except that You may alter any license notices to the extent\n     required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\n     You may choose to offer, and to charge a fee for, warranty, support,\n     indemnity or liability obligations to one or more recipients of Covered\n     Software. However, You may do so only on Your own behalf, and not on behalf\n     of any Contributor. You must make it absolutely clear that any such\n     warranty, support, indemnity, or liability obligation is offered by You\n     alone, and You hereby agree to indemnify every Contributor for any\n     liability incurred by such Contributor as a result of warranty, support,\n     indemnity or liability terms You offer. You may include additional\n     disclaimers of warranty and limitations of liability specific to any\n     jurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n\n   If it is impossible for You to comply with any of the terms of this License\n   with respect to some or all of the Covered Software due to statute, judicial\n   order, or regulation then You must: (a) comply with the terms of this License\n   to the maximum extent possible; and (b) describe the limitations and the code\n   they affect. Such description must be placed in a text file included with all\n   distributions of the Covered Software under this License. Except to the\n   extent prohibited by statute or regulation, such description must be\n   sufficiently detailed for a recipient of ordinary skill to be able to\n   understand it.\n\n5. Termination\n\n5.1. The rights granted under this License will terminate automatically if You\n     fail to comply with any of its terms. However, if You become compliant,\n     then the rights granted under this License from a particular Contributor\n     are reinstated (a) provisionally, unless and until such Contributor\n     explicitly and finally terminates Your grants, and (b) on an ongoing basis,\n     if such Contributor fails to notify You of the non-compliance by some\n     reasonable means prior to 60 days after You have come back into compliance.\n     Moreover, Your grants from a particular Contributor are reinstated on an\n     ongoing basis if such Contributor notifies You of the non-compliance by\n     some reasonable means, this is the first time You have received notice of\n     non-compliance with this License from such Contributor, and You become\n     compliant prior to 30 days after Your receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\n     infringement claim (excluding declaratory judgment actions, counter-claims,\n     and cross-claims) alleging that a Contributor Version directly or\n     indirectly infringes any patent, then the rights granted to You by any and\n     all Contributors for the Covered Software under Section 2.1 of this License\n     shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user\n     license agreements (excluding distributors and resellers) which have been\n     validly granted by You or Your distributors under this License prior to\n     termination shall survive termination.\n\n6. Disclaimer of Warranty\n\n   Covered Software is provided under this License on an “as is” basis, without\n   warranty of any kind, either expressed, implied, or statutory, including,\n   without limitation, warranties that the Covered Software is free of defects,\n   merchantable, fit for a particular purpose or non-infringing. The entire\n   risk as to the quality and performance of the Covered Software is with You.\n   Should any Covered Software prove defective in any respect, You (not any\n   Contributor) assume the cost of any necessary servicing, repair, or\n   correction. This disclaimer of warranty constitutes an essential part of this\n   License. No use of  any Covered Software is authorized under this License\n   except under this disclaimer.\n\n7. Limitation of Liability\n\n   Under no circumstances and under no legal theory, whether tort (including\n   negligence), contract, or otherwise, shall any Contributor, or anyone who\n   distributes Covered Software as permitted above, be liable to You for any\n   direct, indirect, special, incidental, or consequential damages of any\n   character including, without limitation, damages for lost profits, loss of\n   goodwill, work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses, even if such party shall have been\n   informed of the possibility of such damages. This limitation of liability\n   shall not apply to liability for death or personal injury resulting from such\n   party’s negligence to the extent applicable law prohibits such limitation.\n   Some jurisdictions do not allow the exclusion or limitation of incidental or\n   consequential damages, so this exclusion and limitation may not apply to You.\n\n8. Litigation\n\n   Any litigation relating to this License may be brought only in the courts of\n   a jurisdiction where the defendant maintains its principal place of business\n   and such litigation shall be governed by laws of that jurisdiction, without\n   reference to its conflict-of-law provisions. Nothing in this Section shall\n   prevent a party’s ability to bring cross-claims or counter-claims.\n\n9. Miscellaneous\n\n   This License represents the complete agreement concerning the subject matter\n   hereof. If any provision of this License is held to be unenforceable, such\n   provision shall be reformed only to the extent necessary to make it\n   enforceable. Any law or regulation which provides that the language of a\n   contract shall be construed against the drafter shall not be used to construe\n   this License against a Contributor.\n\n\n10. Versions of the License\n\n10.1. New Versions\n\n      Mozilla Foundation is the license steward. Except as provided in Section\n      10.3, no one other than the license steward has the right to modify or\n      publish new versions of this License. Each version will be given a\n      distinguishing version number.\n\n10.2. Effect of New Versions\n\n      You may distribute the Covered Software under the terms of the version of\n      the License under which You originally received the Covered Software, or\n      under the terms of any subsequent version published by the license\n      steward.\n\n10.3. Modified Versions\n\n      If you create software not governed by this License, and you want to\n      create a new license for such software, you may create and use a modified\n      version of this License if you rename the license and remove any\n      references to the name of the license steward (except to note that such\n      modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n      If You choose to distribute Source Code Form that is Incompatible With\n      Secondary Licenses under the terms of this version of the License, the\n      notice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n\n      This Source Code Form is subject to the\n      terms of the Mozilla Public License, v.\n      2.0. If a copy of the MPL was not\n      distributed with this file, You can\n      obtain one at\n      http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular file, then\nYou may include the notice in a location (such as a LICENSE file in a relevant\ndirectory) where a recipient would be likely to look for such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - “Incompatible With Secondary Licenses” Notice\n\n      This Source Code Form is “Incompatible\n      With Secondary Licenses”, as defined by\n      the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.0205078125,
          "content": "# Metadata about this makefile and position\nMKFILE_PATH := $(lastword $(MAKEFILE_LIST))\nCURRENT_DIR := $(patsubst %/,%,$(dir $(realpath $(MKFILE_PATH))))\n\n# Tags specific for building\nGOTAGS ?=\n\n# Get the project metadata\nOWNER := \"hashicorp\"\nNAME := \"consul-template\"\nPROJECT := $(shell go list -m | awk \"/${NAME}/ {print $0}\" )\nGIT_COMMIT ?= $(shell git rev-parse --short HEAD || echo release)\nVERSION := $(shell awk -F\\\" '/^[ \\t]+Version/ { print $$2; exit }' \"${CURRENT_DIR}/version/version.go\")\nPRERELEASE := $(shell awk -F\\\" '/^[ \\t]+VersionPrerelease/ { print $$2; exit }' \"${CURRENT_DIR}/version/version.go\")\n\n# Current system information\nGOOS ?= $(shell go env GOOS)\nGOARCH ?= $(shell go env GOARCH)\n\n# List of ldflags\nLD_FLAGS ?= \\\n\t-s -w \\\n\t-X ${PROJECT}/version.GitCommit=${GIT_COMMIT}\n\n# for CRT build process\nversion:\n\t@echo ${VERSION}${PRERELEASE}\n.PHONY: version\n\n# dev builds and installs the project locally.\ndev:\n\t@echo \"==> Installing ${NAME} for ${GOOS}/${GOARCH}\"\n\t@env \\\n\t\tCGO_ENABLED=\"0\" \\\n\t\tgo install \\\n\t\t\t-ldflags \"${LD_FLAGS}\" \\\n\t\t\t-tags \"${GOTAGS}\"\n.PHONY: dev\n\n# dev docker builds\ndocker:\n\t@env CGO_ENABLED=\"0\" go build -ldflags \"${LD_FLAGS}\" -o $(NAME)\n\tmkdir -p dist/linux/amd64/\n\tcp consul-template dist/linux/amd64/\n\tenv DOCKER_BUILDKIT=1 docker build -t consul-template .\n.PHONY: docker\n\n# test runs the test suite.\ntest:\n\t@echo \"==> Testing ${NAME}\"\n\t@go test -count=1 -timeout=30s -parallel=20 -failfast -tags=\"${GOTAGS}\" ./... ${TESTARGS}\n.PHONY: test\n\n# test-race runs the test suite.\ntest-race:\n\t@echo \"==> Testing ${NAME} (race)\"\n\t@go test -timeout=60s -race -tags=\"${GOTAGS}\" ./... ${TESTARGS}\n.PHONY: test-race\n\n# _cleanup removes any previous binaries\nclean:\n\t@rm -rf \"${CURRENT_DIR}/dist/\"\n\t@rm -f \"consul-template\"\n.PHONY: clean\n\n# Add/Update the \"Table Of Contents\" in the README.md\ntoc:\n\t@./scripts/readme-toc.sh\n.PHONY: toc\n\n# noop command to get build pipeline working\ndev-tree:\n\t@true\n.PHONY: dev-tree\n\n# lint\nlint:\n\t@echo \"==> Running golangci-lint\"\n\tGOWORK=off golangci-lint run --build-tags '$(GOTAGS)'\n.PHONY: lint"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.3623046875,
          "content": "\n---\n# Consul Template\n\n[![build](https://github.com/hashicorp/consul-template/actions/workflows/build.yml/badge.svg)](https://github.com/hashicorp/consul-template/actions/workflows/build.yml)\n[![ci](https://github.com/hashicorp/consul-template/actions/workflows/ci.yml/badge.svg)](https://github.com/hashicorp/consul-template/actions/workflows/ci.yml)\n[![Go Documentation](http://img.shields.io/badge/go-documentation-%2300acd7)](https://godoc.org/github.com/hashicorp/consul-template)\n\nThis project provides a convenient way to populate values from [Consul][consul]\ninto the file system using the `consul-template` daemon.\n\nThe daemon `consul-template` queries a [Consul][consul], [Vault][vault], or [Nomad][nomad]\ncluster and updates any number of specified templates on the file system. As an\nadded bonus, it can optionally run arbitrary commands when the update process\ncompletes. Please see the [examples folder][examples] for some scenarios where\nthis functionality might prove useful.\n\n---\n\n**The documentation in this README corresponds to the main branch of Consul Template. It may contain unreleased features or different APIs than the most recently released version.**\n\n**Please see the [Git tag](https://github.com/hashicorp/consul-template/releases) that corresponds to your version of Consul Template for the proper documentation.**\n\n---\n\n## Table of Contents\n\n- [Community Support](#community-support)\n- [Installation](#installation)\n- [Quick Example](#quick-example)\n- [Learn Guides](#learn-guides)\n- [Configuration](docs/configuration.md)\n- [Command Line Flags](docs/configuration.md#command-line-flags)\n- [Configuration File](docs/configuration.md#configuration-file)\n- [Reload Configuration and Templates](#reload-configuration-and-templates)\n- [Templating Language](docs/templating-language.md)\n  - [API Functions](docs/templating-language.md#api-functions)\n  - [Scratch](docs/templating-language.md#scratch)\n  - [Helper Functions](docs/templating-language.md#helper-functions)\n  - [Math Functions](docs/templating-language.md#math-functions)\n- [Observability](docs/observability.md)\n- [Logging](docs/observability.md#logging)\n  - [Logging to file](docs/observability.md#logging-to-file)\n- [Modes](docs/modes.md)\n- [Once Mode](docs/modes.md#once-mode)\n- [De-Duplication Mode](docs/modes.md#de-duplication-mode)\n- [Exec Mode](docs/modes.md#exec-mode)\n- [Plugins](docs/plugins.md)\n- [Caveats](#caveats)\n- [Docker Image Use](#docker-image-use)\n- [Dots in Service Names](#dots-in-service-names)\n- [Termination on Error](#termination-on-error)\n- [Commands](#commands)\n  - [Environment](#environment)\n  - [Multiple Commands](#multiple-commands)\n- [Multi-phase Execution](#multi-phase-execution)\n- [Debugging](#debugging)\n- [FAQ](#faq)\n- [Contributing](#contributing)\n\n\n## Community Support\n\nIf you have questions about how consul-template works, its capabilities or\nanything other than a bug or feature request (use github's issue tracker for\nthose), please see our community support resources.\n\nCommunity portal: https://discuss.hashicorp.com/tags/c/consul/29/consul-template\n\nOther resources: https://www.consul.io/community.html\n\nAdditionally, for issues and pull requests, we'll be using the :+1: reactions\nas a rough voting system to help gauge community priorities. So please add :+1:\nto any issue or pull request you'd like to see worked on. Thanks.\n\n\n## Installation\n\n1. Download a pre-compiled, released version from the [Consul Template releases page][releases].\n\n1. Extract the binary using `unzip` or `tar`.\n\n1. Move the binary into `$PATH`.\n\nTo compile from source, please see the instructions in the\n[contributing section](#contributing).\n\n## Quick Example\n\nThis short example assumes Consul is installed locally.\n\n1. Start a Consul cluster in dev mode:\n\n  ```shell\n  $ consul agent -dev\n  ```\n\n1. Author a template `in.tpl` to query the kv store:\n\n  ```liquid\n  {{ key \"foo\" }}\n  ```\n\n1. Start Consul Template:\n\n  ```shell\n  $ consul-template -template \"in.tpl:out.txt\" -once\n  ```\n\n1. Write data to the key in Consul:\n\n  ```shell\n  $ consul kv put foo bar\n  ```\n\n1. Observe Consul Template has written the file `out.txt`:\n\n  ```shell\n  $ cat out.txt\n  bar\n  ```\n\nFor more examples and use cases, please see the [examples folder][examples] in\nthis repository.\n\n## Learn Guides\n\nIn addition to these [examples][examples], HashiCorp has published guides and\nofficial documentation to help walk through a few common use cases for Consul\nTemplate.\n* [Consul KV](https://learn.hashicorp.com/consul/developer-configuration/consul-template#use-case-consul-kv)\n* [Consul Catalog](https://learn.hashicorp.com/consul/developer-configuration/consul-template#use-case-discover-all-services)\n* [Vault Agent Templates](https://learn.hashicorp.com/vault/identity-access-management/agent-templates)\n* [Vault Secrets](https://www.vaultproject.io/docs/agent/template#example-template)\n* [Nomad Native Service Discovery](https://learn.hashicorp.com/tutorials/nomad/schedule-edge-services)\n\n## Configuration\n\nConfiguration documentation has been moved to [docs/configuration.md](docs/configuration.md).\n\n## Reload Configuration and Templates\n\nWhile there are multiple ways to run Consul Template, the most common pattern is\nto run Consul Template as a system service. When Consul Template first starts,\nit reads any configuration files and templates from disk and loads them into\nmemory. From that point forward, changes to the files on disk do not propagate\nto running process without a reload.\n\nThe reason for this behavior is simple and aligns with other tools like haproxy.\nA user may want to perform pre-flight validation checks on the configuration or\ntemplates before loading them into the process. Additionally, a user may want to\nupdate configuration and templates simultaneously. Having Consul Template\nautomatically watch and reload those files on changes is both operationally\ndangerous and against some of the paradigms of modern infrastructure. Instead,\nConsul Template listens for the `SIGHUP` syscall to trigger a configuration\nreload. If you update configuration or templates, simply send `HUP` to the\nrunning Consul Template process and Consul Template will reload all the\nconfigurations and templates from disk.\n\n## Templating Language\n\nTemplating Language documentation has been moved to\n[docs/templating-language.md](docs/templating-language.md).\n\n## Caveats\n\n### Docker Image Use\n\nThe Alpine Docker image is configured to support an external volume to render\nshared templates to. If mounted you will need to make sure that the\nconsul-template user in the docker image has write permissions to the\ndirectory. Also if you build your own image using these you need to be sure you\nhave the permissions correct.\n\n**The consul-template user in docker has a UID of 100 and a GID of 1000.**\n\nThis effects the in image directories /consul-template/config, used to add\nconfiguration when using this as a parent image, and /consul-template/data,\nexported as a VOLUME as a location to render shared results.\n\nPreviously the image initially ran as root in order to ensure the permissions\nallowed it. But this ran against docker best practices and security policies.\n\nIf you build your own image based on ours you can override these values with\n`--build-arg` parameters.\n\n### Dots in Service Names\n\nUsing dots `.` in service names will conflict with the use of dots for [TAG\ndelineation](https://github.com/hashicorp/consul-template#service) in the\ntemplate. Dots already [interfere with using\nDNS](https://www.consul.io/docs/agent/services.html#service-and-tag-names-with-dns)\nfor service names, so we recommend avoiding dots wherever possible.\n\n### Termination on Error\n\nBy default Consul Template is highly fault-tolerant. If Consul is unreachable or\na template changes, Consul Template will happily continue running. The only\nexception to this rule is if the optional `command` exits non-zero. In this\ncase, Consul Template will also exit non-zero. The reason for this decision is\nso the user can easily configure something like Upstart or God to manage Consul\nTemplate as a service.\n\nIf you want Consul Template to continue watching for changes, even if the\noptional command argument fails, you can append `|| true` to your command. Note\nthat `||` is a \"shell-ism\", not a built-in function. You will also need to run\nyour command under a shell:\n\n```shell\n$ consul-template \\\n  -template \"in.ctmpl:out.file:/bin/bash -c 'service nginx restart || true'\"\n```\n\nIn this example, even if the Nginx restart command returns non-zero, the overall\nfunction will still return an OK exit code; Consul Template will continue to run\nas a service. Additionally, if you have complex logic for restarting your\nservice, you can intelligently choose when you want Consul Template to exit and\nwhen you want it to continue to watch for changes. For these types of complex\nscripts, we recommend using a custom sh or bash script instead of putting the\nlogic directly in the `consul-template` command or configuration file.\n\n### Commands\n\n#### Environment\n\nThe current processes environment is used when executing commands with the following additional environment variables:\n\n- `CONSUL_HTTP_ADDR`\n- `CONSUL_HTTP_TOKEN`\n- `CONSUL_HTTP_TOKEN_FILE`\n- `CONSUL_HTTP_AUTH`\n- `CONSUL_HTTP_SSL`\n- `CONSUL_HTTP_SSL_VERIFY`\n- `NOMAD_ADDR`\n- `NOMAD_NAMESPACE`\n- `NOMAD_TOKEN`\n\nThese environment variables are exported with their current values when the\ncommand executes. Other Consul tooling reads these environment variables,\nproviding smooth integration with other Consul tools (like `consul maint` or\n`consul lock`). Additionally, exposing these environment variables gives power\nusers the ability to further customize their command script.\n\n#### Multiple Commands\n\nThe command configured for running on template rendering must take one of two\nforms.\n\nThe first is as a list of the command and arguments split at spaces. The\ncommand can use an absolute path or be found on the execution environment's\nPATH and must be the first item in the list. This form allows for single or\nmulti-word commands that can be executed directly with a system call. For\nexample...\n\n`command = [\"echo\", \"hello\"]`\n`command = [\"/opt/foo-package/bin/run-foo\"]`\n`command = [\"foo\"]`\n\nNote that if you give a single command without the list denoting square\nbrackets (`[]`) it is converted into a list with a single argument.\n\nThis:\n`command = \"foo\"`\nis equivalent to:\n`command = [\"foo\"]`\n\nThe second form is as a single quoted command using system shell features. This\nform **requires** a shell named `sh` be on the executable search path (eg. PATH\non \\*nix). This is the standard on all \\*nix systems and should work out of the\nbox on those systems. This won't work on, for example, Docker images with only\nthe executable and without a minimal system like Alpine. Using this form you\ncan join multiple commands with logical operators, `&&` and `||`, use pipelines\nwith `|`, conditionals, etc. Note that the shell `sh` is normally `/bin/sh` on\n\\*nix systems and is either a POSIX shell or a shell run in POSIX compatible\nmode, so it is best to stick to POSIX shell syntax in this command. For\nexample..\n\n`command = \"/opt/foo && /opt/bar\"`\n\n`command = \"if /opt/foo ; then /opt/bar ; fi\"`\n\nUsing this method you can run as many shell commands as you need with whatever\nlogic you need. Though it is suggested that if it gets too long you might want\nto wrap it in a shell script, deploy and run that.\n\n#### Shell Commands and Exec Mode\n\nUsing the system shell based command has one additional caveat when used for\nthe Exec mode process (the managed, executed process to which it will propagate\nsignals). That is to get signals to work correctly means not only does anything\nthe shell runs need to handle signals, but the shell itself needs to handle\nthem. This needs to be managed by you as shells will exit upon receiving most\nsignals.\n\nA common example of this would be wanting the SIGHUP signal to trigger a reload\nof the underlying process and to be ignored by the shell process. To get this\nyou have 2 options, you can use `trap` to ignore the signal or you can use\n`exec` to replace the shell with another process.\n\nTo use `trap` to ignore the signal, you call `trap` to catch the signal in the\nshell with no action. For example if you had an underlying nginx process you\nwanted to run with a shell command and have the shell ignore it you'd do..\n\n`command = \"trap '' HUP; /usr/sbin/nginx -c /etc/nginx/nginx.conf\"`\n\nThe `trap '' HUP;` bit is enough to get the shell to ignore the HUP signal. If\nyou left off the `trap` command nginx would reload but the shell command would\nexit but leave the nginx still running, not unmanaged.\n\nAlternatively using `exec` will replace the shell's process with a sub-process,\nkeeping the same PID and process grouping (allowing the sub-process to be\nmanaged). This is simpler, but a bit less flexible than `trap`, and looks\nlike..\n\n`command = \"exec /usr/sbin/nginx -c /etc/nginx/nginx.conf\"`\n\nWhere the nginx process would replace the enclosing shell process to be managed\nby consul-template, receiving the Signals directly. Basically `exec` eliminates\nthe shell from the equation.\n\nSee your shell's documentation on `trap` and/or `exec` for more details on this.\n\n### Multi-phase Execution\n\nConsul Template does an n-pass evaluation of templates, accumulating\ndependencies on each pass. This is required due to nested dependencies, such as:\n\n```liquid\n{{ range services }}\n{{ range service .Name }}\n  {{ .Address }}\n{{ end }}{{ end }}\n```\n\nDuring the first pass, Consul Template does not know any of the services in\nConsul, so it has to perform a query. When those results are returned, the\ninner-loop is then evaluated with that result, potentially creating more queries\nand watches.\n\nBecause of this implementation, template functions need a default value that is\nan acceptable parameter to a `range` function (or similar), but does not\nactually execute the inner loop (which would cause a panic). This is important\nto mention because complex templates **must** account for the \"empty\" case. For\nexample, the following **will not work**:\n\n```liquid\n{{ with index (service \"foo\") 0 }}\n# ...\n{{ end }}\n```\n\nThis will raise an error like:\n\n```text\n<index $services 0>: error calling index: index out of range: 0\n```\n\nThat is because, during the _first_ evaluation of the template, the `service`\nkey is returning an empty slice. You can account for this in your template like\nso:\n\n```liquid\n{{ with service \"foo\" }}\n{{ with index . 0 }}\n{{ .Node }}{{ end }}{{ end }}\n```\n\nThis will still add the dependency to the list of watches, but will not\nevaluate the inner-if, avoiding the out-of-index error.\n\n## Debugging\n\nConsul Template can print verbose debugging output. To set the log level for\nConsul Template, use the `-log-level` flag:\n\n```shell\n$ consul-template -log-level info ...\n```\n\n```text\n<timestamp> [INFO] (cli) received redis from Watcher\n<timestamp> [INFO] (cli) invoking Runner\n# ...\n```\n\nYou can also specify the level as debug:\n\n```shell\n$ consul-template -log-level debug ...\n```\n\n```text\n<timestamp> [DEBUG] (cli) creating Runner\n<timestamp> [DEBUG] (cli) creating Consul API client\n<timestamp> [DEBUG] (cli) creating Watcher\n<timestamp> [DEBUG] (cli) looping for data\n<timestamp> [DEBUG] (watcher) starting watch\n<timestamp> [DEBUG] (watcher) all pollers have started, waiting for finish\n<timestamp> [DEBUG] (redis) starting poll\n<timestamp> [DEBUG] (service redis) querying Consul with &{...}\n<timestamp> [DEBUG] (service redis) Consul returned 2 services\n<timestamp> [DEBUG] (redis) writing data to channel\n<timestamp> [DEBUG] (redis) starting poll\n<timestamp> [INFO] (cli) received redis from Watcher\n<timestamp> [INFO] (cli) invoking Runner\n<timestamp> [DEBUG] (service redis) querying Consul with &{...}\n# ...\n```\n\n## FAQ\n\n**Q: How is this different than confd?**<br>\nA: The answer is simple: Service Discovery as a first class citizen. You are also encouraged to read [this Pull Request](https://github.com/kelseyhightower/confd/pull/102) on the project for more background information. We think confd is a great project, but Consul Template fills a missing gap. Additionally, Consul Template has first class integration with [Vault][vault], making it easy to incorporate secret material like database credentials or API tokens into configuration files.\n\n**Q: How is this different than Puppet/Chef/Ansible/Salt?**<br>\nA: Configuration management tools are designed to be used in unison with Consul Template. Instead of rendering a stale configuration file, use your configuration management software to render a dynamic template that will be populated by [Consul][consul].\n\n\n**Q: How does compatibility with Consul look like?**<br>\nA: The following table shows the compatibility of Consul Template with Consul versions:\n|               | Consul v1.16  | Consul v1.17  | Consul v1.18  | Consul v1.16+ent  | Consul v1.17+ent  |\n| ------------- | ------------- | ------------- | ------------- | ----------------- | ----------------- |\n| CT v0.37      | ✅            | ✅            | ✅            | ✅                | ✅                |\n| CT v0.36      | ✅            | ✅            | ✅            | N/A               | N/A               |\n| CT v0.35      | ✅            | ✅            | ✅            | N/A               | N/A               |\n| CT v0.34      | ✅            | ✅            | ✅            | N/A               | N/A               |\n\nN/A = ENT tests were not supported before this version\n\n\n## Contributing\n\nTo build and install Consul-Template locally, you will need to [install Go][go].\n\nClone the repository:\n\n```shell\n$ git clone https://github.com/hashicorp/consul-template.git\n```\n\nTo compile the `consul-template` binary for your local machine:\n\n```shell\n$ make dev\n```\n\nThis will compile the `consul-template` binary into `bin/consul-template` as\nwell as your `$GOPATH` and run the test suite.\n\nIf you want to run the tests, first install [consul](https://www.consul.io/docs/install/index.html), [nomad](https://learn.hashicorp.com/tutorials/nomad/get-started-install) and [vault](https://www.vaultproject.io/docs/install/) locally, then:\n\n```shell\n$ make test\n```\n\nOr to run a specific test in the suite:\n\n```shell\ngo test ./... -run SomeTestFunction_name\n```\n\n[consul]: https://www.consul.io \"Consul by HashiCorp\"\n[connect]: https://www.consul.io/docs/connect/ \"Connect\"\n[examples]: (https://github.com/hashicorp/consul-template/tree/main/examples) \"Consul Template Examples\"\n[releases]: https://releases.hashicorp.com/consul-template \"Consul Template Releases\"\n[vault]: https://www.vaultproject.io \"Vault by HashiCorp\"\n[go]: https://golang.org \"Go programming language\"\n[nomad]: https://www.nomadproject.io \"Nomad By HashiCorp\"\n"
        },
        {
          "name": "child",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli.go",
          "type": "blob",
          "size": 27.2822265625,
          "content": "// Copyright (c) HashiCorp, Inc.\n// SPDX-License-Identifier: MPL-2.0\n\npackage main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"os/signal\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/coreos/go-systemd/v22/daemon\"\n\t\"github.com/hashicorp/consul-template/config\"\n\t\"github.com/hashicorp/consul-template/logging\"\n\t\"github.com/hashicorp/consul-template/manager\"\n\t\"github.com/hashicorp/consul-template/service_os\"\n\t\"github.com/hashicorp/consul-template/signals\"\n\t\"github.com/hashicorp/consul-template/version\"\n)\n\n// Exit codes are int values that represent an exit code for a particular error.\n// Sub-systems may check this unique error to determine the cause of an error\n// without parsing the output or help text.\n//\n// Errors start at 10\nconst (\n\tExitCodeOK int = 0\n\n\tExitCodeError = 10 + iota\n\tExitCodeInterrupt\n\tExitCodeParseFlagsError\n\tExitCodeRunnerError\n\tExitCodeConfigError\n)\n\n// CLI is the main entry point.\ntype CLI struct {\n\tsync.Mutex\n\n\t// outSteam and errStream are the standard out and standard error streams to\n\t// write messages from the CLI.\n\toutStream, errStream io.Writer\n\n\t// signalCh is the channel where the cli receives signals.\n\tsignalCh chan os.Signal\n\n\t// stopCh is an internal channel used to trigger a shutdown of the CLI.\n\tstopCh  chan struct{}\n\tstopped bool\n}\n\n// NewCLI creates a new CLI object with the given stdout and stderr streams.\nfunc NewCLI(out, err io.Writer) *CLI {\n\treturn &CLI{\n\t\toutStream: out,\n\t\terrStream: err,\n\t\tsignalCh:  make(chan os.Signal, 10),\n\t\tstopCh:    make(chan struct{}),\n\t}\n}\n\n// Run accepts a slice of arguments and returns an int representing the exit\n// status from the command.\nfunc (cli *CLI) Run(args []string) int {\n\t// Parse the flags\n\tconfig, paths, dry, isVersion, err := cli.ParseFlags(args[1:])\n\tif err != nil {\n\t\tif err == flag.ErrHelp {\n\t\t\tfmt.Fprintf(cli.outStream, usage, version.Name)\n\t\t\treturn 0\n\t\t}\n\t\tfmt.Fprintln(cli.errStream, err.Error())\n\t\treturn ExitCodeParseFlagsError\n\t}\n\n\t// Save original config (defaults + parsed flags) for handling reloads\n\tcliConfig := config.Copy()\n\n\t// Load configuration paths, with CLI taking precedence\n\tconfig, err = loadConfigs(paths, cliConfig)\n\tif err != nil {\n\t\treturn logError(err, ExitCodeConfigError)\n\t}\n\n\tconfig.Finalize()\n\n\t// Setup the config and logging\n\tconfig, err = cli.setup(config)\n\tif err != nil {\n\t\treturn logError(err, ExitCodeConfigError)\n\t}\n\n\t// Print version information for debugging\n\tlog.Printf(\"[INFO] %s\", version.HumanVersion)\n\n\t// If the version was requested, return an \"error\" containing the version\n\t// information. This might sound weird, but most *nix applications actually\n\t// print their version on stderr anyway.\n\tif isVersion {\n\t\tlog.Printf(\"[DEBUG] (cli) version flag was given, exiting now\")\n\t\tfmt.Fprintf(cli.outStream, \"%s\\n\", version.HumanVersion)\n\t\treturn ExitCodeOK\n\t}\n\n\t// Create a context with cancellation\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()\n\n\t// Create a channel for signaling readiness to the systemd init system.\n\treadyCh := make(chan struct{})\n\n\t// Start a goroutine that listens for signals on the readyCh channel.\n\t// When a signal (an empty struct) is received, it notifies systemd that\n\t// the application is ready by calling daemon.SdNotify with SdNotifyReady.\n\t// If an error occurs during the notification, it logs a warning message.\n\tgo func() {\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase <-readyCh:\n\t\t\t\t_, err := daemon.SdNotify(false, daemon.SdNotifyReady)\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Printf(\"[WARN] failed to signal readiness to systemd: %v\", err)\n\t\t\t\t}\n\t\t\tcase <-ctx.Done():\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}()\n\n\t// Initial runner\n\trunner, err := manager.NewRunner(config, dry)\n\tif err != nil {\n\t\treturn logError(err, ExitCodeRunnerError)\n\t}\n\n\trunner.SetReadyChannel(readyCh)\n\tgo runner.Start()\n\n\t// Listen for monitored signals\n\tsignal.Notify(cli.signalCh, signals.MonitoredSignals...)\n\n\tfor {\n\t\tselect {\n\t\tcase err := <-runner.ErrCh:\n\t\t\t// Check if the runner's error returned a specific exit status, and\n\t\t\t// return that value.\n\t\t\t// If no value was given, return a generic exit status.\n\t\t\tcode := ExitCodeRunnerError\n\t\t\tif typed, ok := err.(manager.ErrExitable); ok {\n\t\t\t\tcode = typed.ExitStatus()\n\t\t\t}\n\t\t\tswitch code {\n\t\t\tcase 0:\n\t\t\t\tlog.Printf(\"[INFO] (cli) %s\", err)\n\t\t\t\treturn ExitCodeOK\n\t\t\tdefault:\n\t\t\t\treturn logError(err, code)\n\t\t\t}\n\t\tcase <-runner.DoneCh:\n\t\t\treturn ExitCodeOK\n\t\tcase <-service_os.Shutdown_Channel():\n\t\t\tfmt.Fprintf(cli.errStream, \"Cleaning up...\\n\")\n\t\t\trunner.StopImmediately()\n\t\t\tcancel() // Cancel the context to stop the readyCh goroutine\n\t\t\treturn ExitCodeInterrupt\n\t\tcase s := <-cli.signalCh:\n\t\t\tlog.Printf(\"[DEBUG] (cli) receiving signal %q\", s)\n\n\t\t\tswitch s {\n\t\t\tcase *config.ReloadSignal:\n\t\t\t\tfmt.Fprintf(cli.errStream, \"Reloading configuration...\\n\")\n\t\t\t\trunner.Stop()\n\n\t\t\t\t// Re-parse any configuration files or paths\n\t\t\t\tconfig, err = loadConfigs(paths, cliConfig)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn logError(err, ExitCodeConfigError)\n\t\t\t\t}\n\t\t\t\tconfig.Finalize()\n\n\t\t\t\t// Load the new configuration from disk\n\t\t\t\tconfig, err = cli.setup(config)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn logError(err, ExitCodeConfigError)\n\t\t\t\t}\n\n\t\t\t\trunner, err = manager.NewRunner(config, dry)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn logError(err, ExitCodeRunnerError)\n\t\t\t\t}\n\t\t\t\trunner.SetReadyChannel(readyCh)\n\t\t\t\tgo runner.Start()\n\t\t\tcase *config.KillSignal:\n\t\t\t\tfmt.Fprintf(cli.errStream, \"Cleaning up...\\n\")\n\t\t\t\trunner.StopImmediately()\n\t\t\t\treturn ExitCodeInterrupt\n\t\t\tdefault:\n\t\t\t\t// Propagate the signal to the child process\n\t\t\t\trunner.Signal(s)\n\t\t\t}\n\t\tcase <-cli.stopCh:\n\t\t\treturn ExitCodeOK\n\t\t}\n\t}\n}\n\n// stop is used internally to shutdown a running CLI\nfunc (cli *CLI) stop() {\n\tcli.Lock()\n\tdefer cli.Unlock()\n\n\tif cli.stopped {\n\t\treturn\n\t}\n\n\tclose(cli.stopCh)\n\tcli.stopped = true\n}\n\n// ParseFlags is a helper function for parsing command line flags using Go's\n// Flag library. This is extracted into a helper to keep the main function\n// small, but it also makes writing tests for parsing command line arguments\n// much easier and cleaner.\nfunc (cli *CLI) ParseFlags(args []string) (\n\t*config.Config, []string, bool, bool, error,\n) {\n\tvar dry, isVersion bool\n\n\tc := config.DefaultConfig()\n\n\tif s := os.Getenv(\"CT_LOCAL_CONFIG\"); s != \"\" {\n\t\tenvConfig, err := config.Parse(s)\n\t\tif err != nil {\n\t\t\treturn nil, nil, false, false, err\n\t\t}\n\t\tc = c.Merge(envConfig)\n\t}\n\n\t// configPaths stores the list of configuration paths on disk\n\tconfigPaths := make([]string, 0, 6)\n\n\t// Parse the flags and options\n\tflags := flag.NewFlagSet(version.Name, flag.ContinueOnError)\n\tflags.SetOutput(io.Discard)\n\tflags.Usage = func() {}\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tconfigPaths = append(configPaths, s)\n\t\treturn nil\n\t}), \"config\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.Address = config.String(s)\n\t\treturn nil\n\t}), \"consul-addr\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\ta, err := config.ParseAuthConfig(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.Consul.Auth = a\n\t\treturn nil\n\t}), \"consul-auth\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Consul.Retry.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"consul-retry\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.Consul.Retry.Attempts = config.Int(i)\n\t\treturn nil\n\t}), \"consul-retry-attempts\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Retry.Backoff = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"consul-retry-backoff\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Retry.MaxBackoff = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"consul-retry-max-backoff\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Consul.SSL.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"consul-ssl\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.SSL.CaCert = config.String(s)\n\t\treturn nil\n\t}), \"consul-ssl-ca-cert\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.SSL.CaPath = config.String(s)\n\t\treturn nil\n\t}), \"consul-ssl-ca-path\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.SSL.Cert = config.String(s)\n\t\treturn nil\n\t}), \"consul-ssl-cert\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.SSL.Key = config.String(s)\n\t\treturn nil\n\t}), \"consul-ssl-key\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.SSL.ServerName = config.String(s)\n\t\treturn nil\n\t}), \"consul-ssl-server-name\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Consul.SSL.Verify = config.Bool(b)\n\t\treturn nil\n\t}), \"consul-ssl-verify\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.Token = config.String(s)\n\t\treturn nil\n\t}), \"consul-token\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Consul.TokenFile = config.String(s)\n\t\treturn nil\n\t}), \"consul-token-file\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Transport.DialKeepAlive = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"consul-transport-dial-keep-alive\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Transport.DialTimeout = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"consul-transport-dial-timeout\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Consul.Transport.DisableKeepAlives = config.Bool(b)\n\t\treturn nil\n\t}), \"consul-transport-disable-keep-alives\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.Consul.Transport.MaxIdleConnsPerHost = config.Int(i)\n\t\treturn nil\n\t}), \"consul-transport-max-idle-conns-per-host\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Transport.TLSHandshakeTimeout = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"consul-transport-tls-handshake-timeout\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Dedup.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"dedup\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.DefaultDelims.Left = config.String(s)\n\t\treturn nil\n\t}), \"default-left-delimiter\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.DefaultDelims.Right = config.String(s)\n\t\treturn nil\n\t}), \"default-right-delimiter\", \"\")\n\n\tflags.BoolVar(&dry, \"dry\", false, \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Exec.Enabled = config.Bool(true)\n\t\tc.Exec.Command = []string{s}\n\t\treturn nil\n\t}), \"exec\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tsig, err := signals.Parse(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.Exec.KillSignal = config.Signal(sig)\n\t\treturn nil\n\t}), \"exec-kill-signal\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Exec.KillTimeout = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"exec-kill-timeout\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tsig, err := signals.Parse(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.Exec.ReloadSignal = config.Signal(sig)\n\t\treturn nil\n\t}), \"exec-reload-signal\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Exec.Splay = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"exec-splay\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Exec.Env.Pristine = config.Bool(b)\n\t\treturn nil\n\t}), \"exec-env-pristine\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Exec.Env.Custom = append(c.Exec.Env.Custom, s)\n\t\treturn nil\n\t}), \"exec-env-custom\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Exec.Env.Allowlist = append(c.Exec.Env.Allowlist, s)\n\t\treturn nil\n\t}), \"exec-env-allowlist\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Exec.Env.Denylist = append(c.Exec.Env.Denylist, s)\n\t\treturn nil\n\t}), \"exec-env-denylist\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tsig, err := signals.Parse(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.KillSignal = config.Signal(sig)\n\t\treturn nil\n\t}), \"kill-signal\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.LogLevel = config.String(s)\n\t\treturn nil\n\t}), \"log-level\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.FileLog.LogFilePath = config.String(s)\n\t\treturn nil\n\t}), \"log-file\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.FileLog.LogRotateBytes = config.Int(i)\n\t\treturn nil\n\t}), \"log-rotate-bytes\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.FileLog.LogRotateDuration = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"log-rotate-duration\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.FileLog.LogRotateMaxFiles = config.Int(i)\n\t\treturn nil\n\t}), \"log-rotate-max-files\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.MaxStale = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"max-stale\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Once = *(config.Bool(b))\n\t\treturn nil\n\t}), \"once\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.ParseOnly = *(config.Bool(b))\n\t\treturn nil\n\t}), \"parse-only\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.PidFile = config.String(s)\n\t\treturn nil\n\t}), \"pid-file\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tsig, err := signals.Parse(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.ReloadSignal = config.Signal(sig)\n\t\treturn nil\n\t}), \"reload-signal\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Consul.Retry.Backoff = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"retry\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Syslog.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"syslog\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Syslog.Facility = config.String(s)\n\t\treturn nil\n\t}), \"syslog-facility\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Syslog.Name = config.String(s)\n\t\treturn nil\n\t}), \"syslog-name\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tt, err := config.ParseTemplateConfig(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t*c.Templates = append(*c.Templates, t)\n\t\treturn nil\n\t}), \"template\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.TemplateErrFatal = config.Bool(b)\n\t\treturn nil\n\t}), \"template-error-fatal\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.Address = config.String(s)\n\t\treturn nil\n\t}), \"vault-addr\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.RenewToken = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-renew-token\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.Retry.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-retry\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.Vault.Retry.Attempts = config.Int(i)\n\t\treturn nil\n\t}), \"vault-retry-attempts\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.Retry.Backoff = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-retry-backoff\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.Retry.MaxBackoff = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-retry-max-backoff\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.ClientUserAgent = config.String(s)\n\t\treturn nil\n\t}), \"vault-client-user-agent\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.SSL.Enabled = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-ssl\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.SSL.CaCert = config.String(s)\n\t\treturn nil\n\t}), \"vault-ssl-ca-cert\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.SSL.CaPath = config.String(s)\n\t\treturn nil\n\t}), \"vault-ssl-ca-path\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.SSL.Cert = config.String(s)\n\t\treturn nil\n\t}), \"vault-ssl-cert\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.SSL.Key = config.String(s)\n\t\treturn nil\n\t}), \"vault-ssl-key\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.SSL.ServerName = config.String(s)\n\t\treturn nil\n\t}), \"vault-ssl-server-name\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.SSL.Verify = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-ssl-verify\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.Transport.DialKeepAlive = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-transport-dial-keep-alive\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.Transport.DialTimeout = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-transport-dial-timeout\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.Transport.DisableKeepAlives = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-transport-disable-keep-alives\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.Vault.Transport.MaxIdleConnsPerHost = config.Int(i)\n\t\treturn nil\n\t}), \"vault-transport-max-idle-conns-per-host\", \"\")\n\n\tflags.Var((funcIntVar)(func(i int) error {\n\t\tc.Vault.Transport.MaxConnsPerHost = config.Int(i)\n\t\treturn nil\n\t}), \"vault-transport-max-conns-per-host\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.Transport.TLSHandshakeTimeout = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-transport-tls-handshake-timeout\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.Token = config.String(s)\n\t\treturn nil\n\t}), \"vault-token\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tc.Vault.VaultAgentTokenFile = config.String(s)\n\t\treturn nil\n\t}), \"vault-agent-token-file\", \"\")\n\n\tflags.Var((funcBoolVar)(func(b bool) error {\n\t\tc.Vault.UnwrapToken = config.Bool(b)\n\t\treturn nil\n\t}), \"vault-unwrap-token\", \"\")\n\n\tflags.Var((funcDurationVar)(func(d time.Duration) error {\n\t\tc.Vault.DefaultLeaseDuration = config.TimeDuration(d)\n\t\treturn nil\n\t}), \"vault-default-lease-duration\", \"\")\n\n\tflags.Var((funcVar)(func(s string) error {\n\t\tw, err := config.ParseWaitConfig(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tc.Wait = w\n\t\treturn nil\n\t}), \"wait\", \"\")\n\n\tflags.BoolVar(&isVersion, \"v\", false, \"\")\n\tflags.BoolVar(&isVersion, \"version\", false, \"\")\n\n\t// If there was a parser error, stop\n\tif err := flags.Parse(args); err != nil {\n\t\treturn nil, nil, false, false, err\n\t}\n\n\t// Error if extra arguments are present\n\targs = flags.Args()\n\tif len(args) > 0 {\n\t\treturn nil, nil, false, false, fmt.Errorf(\"cli: extra args: %q\", args)\n\t}\n\n\treturn c, configPaths, dry, isVersion, nil\n}\n\n// loadConfigs loads the configuration from the list of paths. The optional\n// configuration is the list of overrides to apply at the very end, taking\n// precedence over any configurations that were loaded from the paths. If any\n// errors occur when reading or parsing those sub-configs, it is returned.\nfunc loadConfigs(paths []string, o *config.Config) (*config.Config, error) {\n\tfinalC := config.DefaultConfig()\n\n\tfor _, path := range paths {\n\t\tc, err := config.FromPath(path)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tfinalC = finalC.Merge(c)\n\t}\n\n\tfinalC = finalC.Merge(o)\n\tif o.TemplateErrFatal != nil {\n\t\tfor _, tmpl := range *finalC.Templates {\n\t\t\ttmpl.ErrFatal = o.TemplateErrFatal\n\t\t}\n\t}\n\tfinalC.Finalize()\n\treturn finalC, nil\n}\n\n// logError logs an error message and then returns the given status.\nfunc logError(err error, status int) int {\n\tlog.Printf(\"[ERR] (cli) %s\", err)\n\treturn status\n}\n\nfunc (cli *CLI) setup(conf *config.Config) (*config.Config, error) {\n\tif err := logging.Setup(&logging.Config{\n\t\tLevel:             config.StringVal(conf.LogLevel),\n\t\tLogFilePath:       config.StringVal(conf.FileLog.LogFilePath),\n\t\tLogRotateBytes:    config.IntVal(conf.FileLog.LogRotateBytes),\n\t\tLogRotateDuration: config.TimeDurationVal(conf.FileLog.LogRotateDuration),\n\t\tLogRotateMaxFiles: config.IntVal(conf.FileLog.LogRotateMaxFiles),\n\t\tSyslog:            config.BoolVal(conf.Syslog.Enabled),\n\t\tSyslogFacility:    config.StringVal(conf.Syslog.Facility),\n\t\tSyslogName:        config.StringVal(conf.Syslog.Name),\n\t\tWriter:            cli.errStream,\n\t}); err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn conf, nil\n}\n\nconst usage = `Usage: %s [options]\n\n  Watches a series of templates on the file system, writing new changes when\n  Consul is updated. It runs until an interrupt is received unless the -once\n  flag is specified.\n\nOptions:\n\n  -config=<path>\n      Sets the path to a configuration file or folder on disk. This can be\n      specified multiple times to load multiple files or folders. If multiple\n      values are given, they are merged left-to-right, and CLI arguments take\n      the top-most precedence.\n\n  -consul-addr=<address>\n      Sets the address of the Consul instance\n\n  -consul-auth=<username[:password]>\n      Set the basic authentication username and password for communicating\n      with Consul.\n\n  -consul-retry\n      Use retry logic when communication with Consul fails\n\n  -consul-retry-attempts=<int>\n      The number of attempts to use when retrying failed communications\n\n  -consul-retry-backoff=<duration>\n      The base amount to use for the backoff duration. This number will be\n      increased exponentially for each retry attempt.\n\n  -consul-retry-max-backoff=<duration>\n      The maximum limit of the retry backoff duration. Default is one minute.\n      0 means infinite. The backoff will increase exponentially until given value.\n\n  -consul-ssl\n      Use SSL when connecting to Consul\n\n  -consul-ssl-ca-cert=<string>\n      Validate server certificate against this CA certificate file list\n\n  -consul-ssl-ca-path=<string>\n      Sets the path to the CA to use for TLS verification\n\n  -consul-ssl-cert=<string>\n      SSL client certificate to send to server\n\n  -consul-ssl-key=<string>\n      SSL/TLS private key for use in client authentication key exchange\n\n  -consul-ssl-server-name=<string>\n      Sets the name of the server to use when validating TLS.\n\n  -consul-ssl-verify\n      Verify certificates when connecting via SSL\n\n  -consul-token=<token>\n      Sets the Consul API token\n\n  -consul-token-file=<path>\n      Sets the path to a file containing the Consul API token\n\n  -consul-transport-dial-keep-alive=<duration>\n      Sets the amount of time to use for keep-alives\n\n  -consul-transport-dial-timeout=<duration>\n      Sets the amount of time to wait to establish a connection\n\n  -consul-transport-disable-keep-alives\n      Disables keep-alives (this will impact performance)\n\n  -consul-transport-max-idle-conns-per-host=<int>\n      Sets the maximum number of idle connections to permit per host\n\n  -consul-transport-tls-handshake-timeout=<duration>\n      Sets the handshake timeout\n\n  -dedup\n      Enable de-duplication mode - reduces load on Consul when many instances of\n      Consul Template are rendering a common template\n\n  -default-left-delimiter\n      The default left delimiter for templating\n\n  -default-right-delimiter\n      The default right delimiter for templating\n\n  -dry\n      Print generated templates to stdout instead of rendering\n\n  -exec=<command>\n      Enable exec mode to run as a supervisor-like process - the given command\n      will receive all signals provided to the parent process and will receive a\n      signal when templates change\n\n  -exec-kill-signal=<signal>\n      Signal to send when gracefully killing the process\n\n  -exec-kill-timeout=<duration>\n      Amount of time to wait before force-killing the child\n\n  -exec-reload-signal=<signal>\n      Signal to send when a reload takes place\n\n  -exec-splay=<duration>\n      Amount of time to wait before sending signals\n\n  -exec-env-pristine\n      Child process should not inherit the parent process's environment.\n\n  -exec-env-custom\n      Additional custom environment variables to inject into the child's\n      runtime. Even if pristine, allowlist, or denylist is specified, all\n      values in this option are given to the child process. Can be specified\n      multiple times.\n\n  -exec-env-allowlist\n      List of environment variables to exclusively include in the list of\n      environment variables exposed to the child process. Only those environment\n      variables matching the given patterns are exposed to the child process.\n      Wildcards are permitted. Can be specified multiple times.\n\n  -exec-env-denylist\n      List of environment variables to exclusively prohibit in the list of\n      environment variables exposed to the child process. The values in this\n      option take precedence over the values in the allowlist.\n      Wildcards are permitted. Can be specified multiple times.\n\n  -kill-signal=<signal>\n      Signal to listen to gracefully terminate the process\n\n  -log-level=<level>\n      Set the logging level - values are \"debug\", \"info\", \"warn\", and \"err\"\n\n  -max-stale=<duration>\n      Set the maximum staleness and allow stale queries to Consul which will\n      distribute work among all servers instead of just the leader\n\n  -once\n      Do not run the process as a daemon. This disables wait/quiescence timers.\n\n  -parse-only\n      Do not process templates. Parse them for structure.\n\n  -pid-file=<path>\n      Path on disk to write the PID of the process\n\n  -reload-signal=<signal>\n      Signal to listen to reload configuration\n\n  -retry=<duration>\n      The amount of time to wait if Consul returns an error when communicating\n      with the API\n\n  -syslog\n      Send the output to syslog instead of standard error and standard out. The\n      syslog facility defaults to LOCAL0 and can be changed using a\n      configuration file\n\n  -syslog-facility=<facility>\n      Set the facility where syslog should log - if this attribute is supplied,\n      the -syslog flag must also be supplied\n\n  -syslog-name=<name>\n      Set the name of the application which will appear in syslog, if this\n      attribute is supplied, the -syslog flag must also be supplied\n\n  -template=<template>\n      Adds a new template to watch on disk in the format 'in:out(:command)'\n\n  -template-error-fatal=<bool>\n      Control whether template errors cause consul-template to immediately exit.\n      This overrides the per-template setting.\n\n  -vault-addr=<address>\n      Sets the address of the Vault server\n\n  -vault-renew-token\n      Periodically renew the provided Vault API token - this defaults to \"true\"\n      and will renew the token at half of the lease duration\n\n  -vault-retry\n      Use retry logic when communication with Vault fails\n\n  -vault-retry-attempts=<int>\n      The number of attempts to use when retrying failed communications\n\n  -vault-retry-backoff=<duration>\n      The base amount to use for the backoff duration. This number will be\n      increased exponentially for each retry attempt.\n\n  -vault-retry-max-backoff=<duration>\n      The maximum limit of the retry backoff duration. Default is one minute.\n      0 means infinite. The backoff will increase exponentially until given value.\n\n  -vault-ssl\n      Specifies whether communications with Vault should be done via SSL\n\n  -vault-ssl-ca-cert=<string>\n      Sets the path to the CA certificate to use for TLS verification\n\n  -vault-ssl-ca-path=<string>\n      Sets the path to the CA to use for TLS verification\n\n  -vault-ssl-cert=<string>\n      Sets the path to the certificate to use for TLS verification\n\n  -vault-ssl-key=<string>\n      Sets the path to the key to use for TLS verification\n\n  -vault-ssl-server-name=<string>\n      Sets the name of the server to use when validating TLS.\n\n  -vault-ssl-verify\n      Enable SSL verification for communications with Vault.\n\n  -vault-token=<token>\n      Sets the Vault API token\n\n  -vault-agent-token-file=<token-file>\n      File to read Vault API token from.\n\n  -vault-transport-dial-keep-alive=<duration>\n      Sets the amount of time to use for keep-alives\n\n  -vault-transport-dial-timeout=<duration>\n      Sets the amount of time to wait to establish a connection\n\n  -vault-transport-disable-keep-alives\n      Disables keep-alives (this will impact performance)\n\n  -vault-transport-max-idle-conns-per-host=<int>\n      Sets the maximum number of idle connections to permit per host\n\n  -vault-transport-max-conns-per-host=<int>\n      Sets the maximum number of total connections to permit per host\n\n  -vault-transport-tls-handshake-timeout=<duration>\n      Sets the handshake timeout\n\n  -vault-unwrap-token\n      Unwrap the provided Vault API token (see Vault documentation for more\n      information on this feature)\n\n  -vault-default-lease-duration=<duration>\n\t  configures the default lease duration when not explicitly\n\t  set by vault\n\n  -wait=<duration>\n      Sets the 'min(:max)' amount of time to wait before writing a template (and\n      triggering a command)\n\n  -v, -version\n      Print the version of this daemon\n`\n"
        },
        {
          "name": "cli_test.go",
          "type": "blob",
          "size": 20.966796875,
          "content": "// Copyright (c) HashiCorp, Inc.\n// SPDX-License-Identifier: MPL-2.0\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"reflect\"\n\t\"strings\"\n\t\"syscall\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/hashicorp/consul-template/config\"\n\t\"github.com/hashicorp/consul-template/signals\"\n\t\"github.com/hashicorp/consul-template/test\"\n\tgatedio \"github.com/hashicorp/go-gatedio\"\n)\n\nfunc TestCLI_ParseFlags(t *testing.T) {\n\tf, err := os.CreateTemp(\"\", \"\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tdefer os.Remove(f.Name())\n\n\tcases := []struct {\n\t\tname string\n\t\tf    []string\n\t\te    *config.Config\n\t\terr  bool\n\t}{\n\t\t{\n\t\t\t\"config\",\n\t\t\t[]string{\"-config\", f.Name()},\n\t\t\t&config.Config{},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul_addr\",\n\t\t\t[]string{\"-consul-addr\", \"1.2.3.4\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tAddress: config.String(\"1.2.3.4\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul_auth_empty\",\n\t\t\t[]string{\"-consul-auth\", \"\"},\n\t\t\tnil,\n\t\t\ttrue,\n\t\t},\n\t\t{\n\t\t\t\"consul_auth_username\",\n\t\t\t[]string{\"-consul-auth\", \"username\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tAuth: &config.AuthConfig{\n\t\t\t\t\t\tUsername: config.String(\"username\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul_auth_username_password\",\n\t\t\t[]string{\"-consul-auth\", \"username:password\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tAuth: &config.AuthConfig{\n\t\t\t\t\t\tUsername: config.String(\"username\"),\n\t\t\t\t\t\tPassword: config.String(\"password\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-retry\",\n\t\t\t[]string{\"-consul-retry\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-retry-attempts\",\n\t\t\t[]string{\"-consul-retry-attempts\", \"20\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tAttempts: config.Int(20),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-retry-backoff\",\n\t\t\t[]string{\"-consul-retry-backoff\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tBackoff: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-retry-max-backoff\",\n\t\t\t[]string{\"-consul-retry-max-backoff\", \"60s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tMaxBackoff: config.TimeDuration(60 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl\",\n\t\t\t[]string{\"-consul-ssl\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-ca-cert\",\n\t\t\t[]string{\"-consul-ssl-ca-cert\", \"ca_cert\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCaCert: config.String(\"ca_cert\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-ca-path\",\n\t\t\t[]string{\"-consul-ssl-ca-path\", \"ca_path\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCaPath: config.String(\"ca_path\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-cert\",\n\t\t\t[]string{\"-consul-ssl-cert\", \"cert\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCert: config.String(\"cert\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-key\",\n\t\t\t[]string{\"-consul-ssl-key\", \"key\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tKey: config.String(\"key\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-server-name\",\n\t\t\t[]string{\"-consul-ssl-server-name\", \"server_name\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tServerName: config.String(\"server_name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-ssl-verify\",\n\t\t\t[]string{\"-consul-ssl-verify\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tVerify: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-token\",\n\t\t\t[]string{\"-consul-token\", \"token\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tToken: config.String(\"token\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-token-file\",\n\t\t\t[]string{\"-consul-token-file\", \"/a/very/secret/path\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTokenFile: config.String(\"/a/very/secret/path\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-transport-dial-keep-alive\",\n\t\t\t[]string{\"-consul-transport-dial-keep-alive\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDialKeepAlive: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-transport-dial-timeout\",\n\t\t\t[]string{\"-consul-transport-dial-timeout\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDialTimeout: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-transport-disable-keep-alives\",\n\t\t\t[]string{\"-consul-transport-disable-keep-alives\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDisableKeepAlives: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-transport-max-idle-conns-per-host\",\n\t\t\t[]string{\"-consul-transport-max-idle-conns-per-host\", \"100\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tMaxIdleConnsPerHost: config.Int(100),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"consul-transport-tls-handshake-timeout\",\n\t\t\t[]string{\"-consul-transport-tls-handshake-timeout\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tTLSHandshakeTimeout: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"dedup\",\n\t\t\t[]string{\"-dedup\"},\n\t\t\t&config.Config{\n\t\t\t\tDedup: &config.DedupConfig{\n\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec\",\n\t\t\t[]string{\"-exec\", \"command\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t\tCommand: []string{\"command\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-kill-signal\",\n\t\t\t[]string{\"-exec-kill-signal\", \"SIGUSR1\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tKillSignal: config.Signal(syscall.SIGUSR1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-kill-timeout\",\n\t\t\t[]string{\"-exec-kill-timeout\", \"10s\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tKillTimeout: config.TimeDuration(10 * time.Second),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-reload-signal\",\n\t\t\t[]string{\"-exec-reload-signal\", \"SIGUSR1\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tReloadSignal: config.Signal(syscall.SIGUSR1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-splay\",\n\t\t\t[]string{\"-exec-splay\", \"10s\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tSplay: config.TimeDuration(10 * time.Second),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-pristine\",\n\t\t\t[]string{\"-exec-env-pristine\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tPristine: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-custom\",\n\t\t\t[]string{\"-exec-env-custom\", \"SOME_ENV_VARIABLE=VALUE\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tCustom: []string{\"SOME_ENV_VARIABLE=VALUE\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-custom-multiple\",\n\t\t\t[]string{\n\t\t\t\t\"-exec-env-custom\", \"SOME_ENV_VARIABLE=VALUE\",\n\t\t\t\t\"-exec-env-custom\", \"ANOTHER_ENV_VARIABLE=VALUE\",\n\t\t\t},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tCustom: []string{\n\t\t\t\t\t\t\t\"SOME_ENV_VARIABLE=VALUE\",\n\t\t\t\t\t\t\t\"ANOTHER_ENV_VARIABLE=VALUE\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-allowlist\",\n\t\t\t[]string{\"-exec-env-allowlist\", \"SOME_*\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tAllowlist: []string{\"SOME_*\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-allowlist-multiple\",\n\t\t\t[]string{\n\t\t\t\t\"-exec-env-allowlist\", \"SOME_*\",\n\t\t\t\t\"-exec-env-allowlist\", \"ANOTHER_*\",\n\t\t\t},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tAllowlist: []string{\n\t\t\t\t\t\t\t\"SOME_*\",\n\t\t\t\t\t\t\t\"ANOTHER_*\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-denylist\",\n\t\t\t[]string{\"-exec-env-denylist\", \"VAULT_*\"},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tDenylist: []string{\"VAULT_*\"},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"exec-env-denylist-multiple\",\n\t\t\t[]string{\n\t\t\t\t\"-exec-env-denylist\", \"VAULT_*\",\n\t\t\t\t\"-exec-env-denylist\", \"CONSUL_*\",\n\t\t\t},\n\t\t\t&config.Config{\n\t\t\t\tExec: &config.ExecConfig{\n\t\t\t\t\tEnv: &config.EnvConfig{\n\t\t\t\t\t\tDenylist: []string{\n\t\t\t\t\t\t\t\"VAULT_*\",\n\t\t\t\t\t\t\t\"CONSUL_*\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"kill-signal\",\n\t\t\t[]string{\"-kill-signal\", \"SIGUSR1\"},\n\t\t\t&config.Config{\n\t\t\t\tKillSignal: config.Signal(syscall.SIGUSR1),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"log-level\",\n\t\t\t[]string{\"-log-level\", \"DEBUG\"},\n\t\t\t&config.Config{\n\t\t\t\tLogLevel: config.String(\"DEBUG\"),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"log-file\",\n\t\t\t[]string{\"-log-file\", \"something.log\"},\n\t\t\t&config.Config{\n\t\t\t\tFileLog: &config.LogFileConfig{\n\t\t\t\t\tLogFilePath: config.String(\"something.log\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"log-rotate-bytes\",\n\t\t\t[]string{\"-log-rotate-bytes\", \"102400\"},\n\t\t\t&config.Config{\n\t\t\t\tFileLog: &config.LogFileConfig{\n\t\t\t\t\tLogRotateBytes: config.Int(102400),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"log-rotate-duration\",\n\t\t\t[]string{\"-log-rotate-duration\", \"24h\"},\n\t\t\t&config.Config{\n\t\t\t\tFileLog: &config.LogFileConfig{\n\t\t\t\t\tLogRotateDuration: config.TimeDuration(24 * time.Hour),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"log-rotate-max-files\",\n\t\t\t[]string{\"-log-rotate-max-files\", \"10\"},\n\t\t\t&config.Config{\n\t\t\t\tFileLog: &config.LogFileConfig{\n\t\t\t\t\tLogRotateMaxFiles: config.Int(10),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"max-stale\",\n\t\t\t[]string{\"-max-stale\", \"10s\"},\n\t\t\t&config.Config{\n\t\t\t\tMaxStale: config.TimeDuration(10 * time.Second),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"pid-file\",\n\t\t\t[]string{\"-pid-file\", \"/var/pid/file\"},\n\t\t\t&config.Config{\n\t\t\t\tPidFile: config.String(\"/var/pid/file\"),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"reload-signal\",\n\t\t\t[]string{\"-reload-signal\", \"SIGUSR1\"},\n\t\t\t&config.Config{\n\t\t\t\tReloadSignal: config.Signal(syscall.SIGUSR1),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"reload-signal-signil\",\n\t\t\t[]string{\"-reload-signal\", \"SIGNULL\"},\n\t\t\t&config.Config{\n\t\t\t\tReloadSignal: config.Signal(signals.SIGNULL),\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"retry\",\n\t\t\t[]string{\"-retry\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tConsul: &config.ConsulConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tBackoff: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"syslog\",\n\t\t\t[]string{\"-syslog\"},\n\t\t\t&config.Config{\n\t\t\t\tSyslog: &config.SyslogConfig{\n\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"syslog-facility\",\n\t\t\t[]string{\"-syslog-facility\", \"LOCAL0\"},\n\t\t\t&config.Config{\n\t\t\t\tSyslog: &config.SyslogConfig{\n\t\t\t\t\tFacility: config.String(\"LOCAL0\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"template\",\n\t\t\t[]string{\"-template\", \"/tmp/in.tpl\"},\n\t\t\t&config.Config{\n\t\t\t\tTemplates: &config.TemplateConfigs{\n\t\t\t\t\t&config.TemplateConfig{\n\t\t\t\t\t\tSource: config.String(\"/tmp/in.tpl\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-addr\",\n\t\t\t[]string{\"-vault-addr\", \"vault_addr\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tAddress: config.String(\"vault_addr\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-retry\",\n\t\t\t[]string{\"-vault-retry\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-retry-attempts\",\n\t\t\t[]string{\"-vault-retry-attempts\", \"20\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tAttempts: config.Int(20),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-retry-backoff\",\n\t\t\t[]string{\"-vault-retry-backoff\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tBackoff: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-retry-max-backoff\",\n\t\t\t[]string{\"-vault-retry-max-backoff\", \"60s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tRetry: &config.RetryConfig{\n\t\t\t\t\t\tMaxBackoff: config.TimeDuration(60 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-renew-token\",\n\t\t\t[]string{\"-vault-renew-token\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tRenewToken: config.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl\",\n\t\t\t[]string{\"-vault-ssl\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tEnabled: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-ca-cert\",\n\t\t\t[]string{\"-vault-ssl-ca-cert\", \"ca_cert\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCaCert: config.String(\"ca_cert\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-ca-path\",\n\t\t\t[]string{\"-vault-ssl-ca-path\", \"ca_path\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCaPath: config.String(\"ca_path\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-cert\",\n\t\t\t[]string{\"-vault-ssl-cert\", \"cert\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tCert: config.String(\"cert\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-key\",\n\t\t\t[]string{\"-vault-ssl-key\", \"key\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tKey: config.String(\"key\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-server-name\",\n\t\t\t[]string{\"-vault-ssl-server-name\", \"server_name\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tServerName: config.String(\"server_name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-ssl-verify\",\n\t\t\t[]string{\"-vault-ssl-verify\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tSSL: &config.SSLConfig{\n\t\t\t\t\t\tVerify: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-token\",\n\t\t\t[]string{\"-vault-token\", \"token\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tToken: config.String(\"token\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-agent-token-file\",\n\t\t\t[]string{\"-vault-agent-token-file\", \"/tmp/vault/agent/token\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tVaultAgentTokenFile: config.String(\"/tmp/vault/agent/token\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-dial-keep-alive\",\n\t\t\t[]string{\"-vault-transport-dial-keep-alive\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDialKeepAlive: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-dial-timeout\",\n\t\t\t[]string{\"-vault-transport-dial-timeout\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDialTimeout: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-disable-keep-alives\",\n\t\t\t[]string{\"-vault-transport-disable-keep-alives\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tDisableKeepAlives: config.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-max-idle-conns-per-host\",\n\t\t\t[]string{\"-vault-transport-max-idle-conns-per-host\", \"100\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tMaxIdleConnsPerHost: config.Int(100),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-max-conns-per-host\",\n\t\t\t[]string{\"-vault-transport-max-conns-per-host\", \"25\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tMaxConnsPerHost: config.Int(25),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-transport-tls-handshake-timeout\",\n\t\t\t[]string{\"-vault-transport-tls-handshake-timeout\", \"30s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tTransport: &config.TransportConfig{\n\t\t\t\t\t\tTLSHandshakeTimeout: config.TimeDuration(30 * time.Second),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-unwrap-token\",\n\t\t\t[]string{\"-vault-unwrap-token\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tUnwrapToken: config.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"vault-default-lease-duration\",\n\t\t\t[]string{\"-vault-default-lease-duration\", \"60s\"},\n\t\t\t&config.Config{\n\t\t\t\tVault: &config.VaultConfig{\n\t\t\t\t\tDefaultLeaseDuration: config.TimeDuration(60 * time.Second),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"wait_min\",\n\t\t\t[]string{\"-wait\", \"10s\"},\n\t\t\t&config.Config{\n\t\t\t\tWait: &config.WaitConfig{\n\t\t\t\t\tMin: config.TimeDuration(10 * time.Second),\n\t\t\t\t\tMax: config.TimeDuration(40 * time.Second),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"wait_min_max\",\n\t\t\t[]string{\"-wait\", \"10s:30s\"},\n\t\t\t&config.Config{\n\t\t\t\tWait: &config.WaitConfig{\n\t\t\t\t\tMin: config.TimeDuration(10 * time.Second),\n\t\t\t\t\tMax: config.TimeDuration(30 * time.Second),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"once-wait\",\n\t\t\t[]string{\"-once\", \"-wait\", \"10s\"},\n\t\t\t&config.Config{\n\t\t\t\tWait: &config.WaitConfig{\n\t\t\t\t\tEnabled: config.Bool(false),\n\t\t\t\t},\n\t\t\t\tOnce: true,\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{\n\t\t\t\"parse-only\",\n\t\t\t[]string{\"-parse-only\"},\n\t\t\t&config.Config{\n\t\t\t\tParseOnly: true,\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t}\n\n\tfor i, tc := range cases {\n\t\tt.Run(fmt.Sprintf(\"%d_%s\", i, tc.name), func(t *testing.T) {\n\t\t\tout := gatedio.NewByteBuffer()\n\t\t\tcli := NewCLI(out, out)\n\n\t\t\ta, _, _, _, err := cli.ParseFlags(tc.f)\n\t\t\tif (err != nil) != tc.err {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\ta.Finalize()\n\n\t\t\tvar e *config.Config\n\t\t\tif tc.e != nil {\n\t\t\t\te = config.DefaultConfig().Merge(tc.e)\n\t\t\t\te.Finalize()\n\t\t\t}\n\n\t\t\t// these can't be compared with DeepEqual\n\t\t\tif e != nil {\n\t\t\t\te.RendererFunc = nil\n\t\t\t\te.ReaderFunc = nil\n\t\t\t}\n\t\t\tif a != nil {\n\t\t\t\ta.RendererFunc = nil\n\t\t\t\ta.ReaderFunc = nil\n\t\t\t}\n\n\t\t\tif !reflect.DeepEqual(e, a) {\n\t\t\t\tt.Errorf(\"Config diff: %soutput: %q\", e.Diff(a), out)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc TestCLI_Run(t *testing.T) {\n\tcases := []struct {\n\t\tname string\n\t\targs []string\n\t\tf    func(*testing.T, int, string)\n\t}{\n\t\t{\n\t\t\t\"help\",\n\t\t\t[]string{\"-h\"},\n\t\t\tfunc(t *testing.T, i int, s string) {\n\t\t\t\tif i != 0 {\n\t\t\t\t\tt.Error(\"expected 0 exit\")\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t\"version\",\n\t\t\t[]string{\"-v\"},\n\t\t\tfunc(t *testing.T, i int, s string) {\n\t\t\t\tif i != 0 {\n\t\t\t\t\tt.Error(\"expected 0 exit\")\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t\"too_many_args\",\n\t\t\t[]string{\"foo\", \"bar\", \"baz\"},\n\t\t\tfunc(t *testing.T, i int, s string) {\n\t\t\t\tif i == 0 {\n\t\t\t\t\tt.Error(\"expected error\")\n\t\t\t\t}\n\t\t\t\tif !strings.Contains(s, \"extra args\") {\n\t\t\t\t\tt.Errorf(\"\\nexp: %q\\nact: %q\", \"extra args\", s)\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t}\n\n\tfor i, tc := range cases {\n\t\tt.Run(fmt.Sprintf(\"%d_%s\", i, tc.name), func(t *testing.T) {\n\t\t\tout := gatedio.NewByteBuffer()\n\t\t\tcli := NewCLI(out, out)\n\n\t\t\ttc.args = append([]string{\"consul-template\"}, tc.args...)\n\t\t\texit := cli.Run(tc.args)\n\t\t\ttc.f(t, exit, out.String())\n\t\t})\n\t}\n\n\tt.Run(\"once\", func(t *testing.T) {\n\t\tf, err := os.CreateTemp(\"\", \"\")\n\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tdefer os.Remove(f.Name())\n\t\tif _, err := f.WriteString(`{{ key \"once-foo\" }}`); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t\tdest, err := os.CreateTemp(\"\", \"\")\n\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tdefer os.Remove(dest.Name())\n\n\t\ttestConsul.SetKVString(t, \"once-foo\", \"bar\")\n\n\t\tout := gatedio.NewByteBuffer()\n\t\tcli := NewCLI(out, out)\n\n\t\tch := make(chan int, 1)\n\t\tgo func() {\n\t\t\tch <- cli.Run([]string{\n\t\t\t\t\"consul-template\",\n\t\t\t\t\"-once\",\n\t\t\t\t\"-wait\", \"30s\", // should not wait\n\t\t\t\t\"-consul-addr\", testConsul.HTTPAddr,\n\t\t\t\t\"-vault-renew-token=false\",\n\t\t\t\t\"-template\", f.Name() + \":\" + dest.Name(),\n\t\t\t})\n\t\t}()\n\n\t\tselect {\n\t\tcase status := <-ch:\n\t\t\tif status != ExitCodeOK {\n\t\t\t\tt.Errorf(\"\\nexp: %#v\\nact: %#v\", ExitCodeOK, status)\n\t\t\t}\n\t\t\tb, err := os.ReadFile(dest.Name())\n\t\t\tif err != nil {\n\t\t\t\tt.Errorf(\"\\nerror reading file: %s\\nout: %s\", err, out.String())\n\t\t\t}\n\t\t\tcontents := string(b)\n\t\t\tif !strings.Contains(\"bar\", contents) {\n\t\t\t\tt.Errorf(\"\\nexp: %v\\nact: %v\\nout: %s\", \"bar\", contents, out.String())\n\t\t\t}\n\t\tcase <-time.After(2 * time.Second):\n\t\t\tt.Errorf(\"timeout: %q\", out.String())\n\t\t}\n\t})\n\n\tt.Run(\"reload\", func(t *testing.T) {\n\t\tf, err := os.CreateTemp(\"\", \"\")\n\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tdefer os.Remove(f.Name())\n\t\tif _, err := f.WriteString(`hello`); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t\tout := gatedio.NewByteBuffer()\n\t\tcli := NewCLI(out, out)\n\t\tdefer cli.stop()\n\n\t\tch := make(chan int, 1)\n\t\tgo func() {\n\t\t\tch <- cli.Run([]string{\n\t\t\t\t\"consul-template\",\n\t\t\t\t\"-dry\",\n\t\t\t\t\"-consul-addr\", testConsul.HTTPAddr,\n\t\t\t\t\"-template\", f.Name(),\n\t\t\t})\n\t\t}()\n\n\t\t// Wait for the file to be available\n\t\ttest.WaitForContents(t, 2*time.Second, f.Name(), \"hello\")\n\n\t\t// Write new contents, which wil not be picked up until a reload\n\t\tif _, err := f.WriteString(`world`); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t\t// Trigger a reload\n\t\tcli.signalCh <- syscall.SIGHUP\n\n\t\t// Wait for the file contents\n\t\ttest.WaitForContents(t, 2*time.Second, f.Name(), \"helloworld\")\n\n\t\t// We are done now\n\t\tcli.stop()\n\n\t\tselect {\n\t\tcase status := <-ch:\n\t\t\tif status != ExitCodeOK {\n\t\t\t\tt.Errorf(\"\\nexp: %#v\\nact: %#v\", status, ExitCodeOK)\n\t\t\t}\n\t\tcase <-time.After(2 * time.Second):\n\t\t\tt.Errorf(\"timeout: %q\", out.String())\n\t\t}\n\t})\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependency",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flags.go",
          "type": "blob",
          "size": 1.6103515625,
          "content": "// Copyright (c) HashiCorp, Inc.\n// SPDX-License-Identifier: MPL-2.0\n\npackage main\n\nimport (\n\t\"strconv\"\n\t\"time\"\n)\n\n// funcVar is a type of flag that accepts a function that is the string given\n// by the user.\ntype funcVar func(s string) error\n\nfunc (f funcVar) Set(s string) error { return f(s) }\nfunc (f funcVar) String() string     { return \"\" }\nfunc (f funcVar) IsBoolFlag() bool   { return false }\n\n// funcBoolVar is a type of flag that accepts a function, converts the user's\n// value to a bool, and then calls the given function.\ntype funcBoolVar func(b bool) error\n\nfunc (f funcBoolVar) Set(s string) error {\n\tv, err := strconv.ParseBool(s)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn f(v)\n}\nfunc (f funcBoolVar) String() string   { return \"\" }\nfunc (f funcBoolVar) IsBoolFlag() bool { return true }\n\n// funcDurationVar is a type of flag that accepts a function, converts the\n// user's value to a duration, and then calls the given function.\ntype funcDurationVar func(d time.Duration) error\n\nfunc (f funcDurationVar) Set(s string) error {\n\tv, err := time.ParseDuration(s)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn f(v)\n}\nfunc (f funcDurationVar) String() string   { return \"\" }\nfunc (f funcDurationVar) IsBoolFlag() bool { return false }\n\n// funcIntVar is a type of flag that accepts a function, converts the\n// user's value to a int, and then calls the given function.\ntype funcIntVar func(i int) error\n\nfunc (f funcIntVar) Set(s string) error {\n\tv, err := strconv.ParseInt(s, 10, 32)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn f(int(v))\n}\nfunc (f funcIntVar) String() string   { return \"\" }\nfunc (f funcIntVar) IsBoolFlag() bool { return false }\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.83984375,
          "content": "module github.com/hashicorp/consul-template\n\ngo 1.22\n\ntoolchain go1.22.4\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc\n\tgithub.com/hashicorp/consul/api v1.29.1\n\tgithub.com/hashicorp/consul/sdk v0.16.1\n\tgithub.com/hashicorp/go-gatedio v0.5.0\n\tgithub.com/hashicorp/go-hclog v1.6.3\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/go-rootcerts v1.0.2\n\tgithub.com/hashicorp/go-sockaddr v1.0.6\n\tgithub.com/hashicorp/go-syslog v1.0.0\n\tgithub.com/hashicorp/hcl v1.0.0\n\tgithub.com/hashicorp/logutils v1.0.0\n\tgithub.com/hashicorp/nomad/api v0.0.0-20230103221135-ce00d683f9be\n\tgithub.com/hashicorp/serf v0.10.1 // indirect\n\tgithub.com/hashicorp/vault/api v1.10.0\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/mitchellh/hashstructure v1.1.0\n\tgithub.com/mitchellh/mapstructure v1.5.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/stretchr/testify v1.8.4\n\tgolang.org/x/crypto v0.22.0 // indirect\n\tgolang.org/x/sys v0.20.0\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tdario.cat/mergo v1.0.0\n\tgithub.com/Masterminds/sprig/v3 v3.2.3\n\tgithub.com/hashicorp/vault/api/auth/kubernetes v0.5.0\n\tgolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842\n\tgolang.org/x/text v0.14.0\n)\n\nrequire (\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.2.0 // indirect\n\tgithub.com/armon/go-metrics v0.4.1 // indirect\n\tgithub.com/cenkalti/backoff/v3 v3.2.2 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/fatih/color v1.17.0 // indirect\n\tgithub.com/go-jose/go-jose/v3 v3.0.3 // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/gorilla/websocket v1.5.0 // indirect\n\tgithub.com/hashicorp/cronexpr v1.1.1 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.7 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 // indirect\n\tgithub.com/hashicorp/go-uuid v1.0.3 // indirect\n\tgithub.com/hashicorp/go-version v1.6.0 // indirect\n\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n\tgithub.com/huandu/xstrings v1.4.0 // indirect\n\tgithub.com/imdario/mergo v0.3.11 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/miekg/dns v1.1.50 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/ryanuber/go-glob v1.0.0 // indirect\n\tgithub.com/shopspring/decimal v1.3.1 // indirect\n\tgithub.com/spf13/cast v1.5.0 // indirect\n\tgolang.org/x/net v0.24.0 // indirect\n\tgolang.org/x/time v0.3.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 36.7783203125,
          "content": "dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.2.0 h1:3MEsd0SM6jqZojhjLWWeBY+Kcjy9i6MQAeY7YgDP83g=\ngithub.com/Masterminds/semver/v3 v3.2.0/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/Masterminds/sprig/v3 v3.2.3 h1:eL2fZNezLomi0uOLqjQoN6BfsDD+fyLtgbJMAj9n6YA=\ngithub.com/Masterminds/sprig/v3 v3.2.3/go.mod h1:rXcFaZ2zZbLRJv/xSysmlgIM1u11eBaRMhvYXJNkGuM=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.4.1 h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\ngithub.com/armon/go-metrics v0.4.1/go.mod h1:E6amYzXo6aW1tqzoZGT755KkbgrJsSdpwZ+3JqfkOG4=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/armon/go-radix v1.0.0/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/cenkalti/backoff/v3 v3.0.0/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=\ngithub.com/cenkalti/backoff/v3 v3.2.2 h1:cfUAAO3yvKMYKPrvhDuHSwQnhZNk/RMHKdZqKTxfm6M=\ngithub.com/cenkalti/backoff/v3 v3.2.2/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/fatih/color v1.17.0 h1:GlRw1BRJxkpqUCBKzKOw098ed57fEsKeNjpTe3cSjK4=\ngithub.com/fatih/color v1.17.0/go.mod h1:YZ7TlrGPkiz6ku9fK3TLD/pl3CpsiFyu8N92HLgmosI=\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\ngithub.com/frankban/quicktest v1.14.3/go.mod h1:mgiwOwqx65TmIk1wJ6Q7wvnVMocbUorkibMOrVTHZps=\ngithub.com/go-jose/go-jose/v3 v3.0.0/go.mod h1:RNkWWRld676jZEYoV3+XK8L2ZnNSvIsxFMht0mSX+u8=\ngithub.com/go-jose/go-jose/v3 v3.0.3 h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=\ngithub.com/go-jose/go-jose/v3 v3.0.3/go.mod h1:5b+7YgP7ZICgJDBdfjZaIt+H/9L9T/YQrVfLAMboGkQ=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-test/deep v1.0.2 h1:onZX1rnHT3Wv6cqNgYyFOOlgVKJrksuCMCRvJStbMYw=\ngithub.com/go-test/deep v1.0.2/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.1 h1:gK4Kx5IaGY9CD5sPJ36FHiBJ6ZXl0kilRiiCj+jdYp4=\ngithub.com/google/btree v1.0.1/go.mod h1:xXMiIv4Fb/0kKde4SpL7qlzvu5cMJDRkFDxJfI9uaxA=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/hashicorp/consul/api v1.29.1 h1:UEwOjYJrd3lG1x5w7HxDRMGiAUPrb3f103EoeKuuEcc=\ngithub.com/hashicorp/consul/api v1.29.1/go.mod h1:lumfRkY/coLuqMICkI7Fh3ylMG31mQSRZyef2c5YvJI=\ngithub.com/hashicorp/consul/proto-public v0.6.1 h1:+uzH3olCrksXYWAYHKqK782CtK9scfqH+Unlw3UHhCg=\ngithub.com/hashicorp/consul/proto-public v0.6.1/go.mod h1:cXXbOg74KBNGajC+o8RlA502Esf0R9prcoJgiOX/2Tg=\ngithub.com/hashicorp/consul/sdk v0.16.1 h1:V8TxTnImoPD5cj0U9Spl0TUxcytjcbbJeADFF07KdHg=\ngithub.com/hashicorp/consul/sdk v0.16.1/go.mod h1:fSXvwxB2hmh1FMZCNl6PwX0Q/1wdWtHJcZ7Ea5tns0s=\ngithub.com/hashicorp/cronexpr v1.1.1 h1:NJZDd87hGXjoZBdvyCF9mX4DCq5Wy7+A/w+A7q0wn6c=\ngithub.com/hashicorp/cronexpr v1.1.1/go.mod h1:P4wA0KBl9C5q2hABiMO7cp6jcIg96CDh1Efb3g1PWA4=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-gatedio v0.5.0 h1:Jm1X5yP4yCqqWj5L1TgW7iZwCVPGtVc+mro5r/XX7Tg=\ngithub.com/hashicorp/go-gatedio v0.5.0/go.mod h1:Lr3t8L6IyxD3DAeaUxGcgl2JnRUpWMCsmBl4Omu/2t4=\ngithub.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=\ngithub.com/hashicorp/go-hclog v0.16.2/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-msgpack v0.5.5 h1:i9R9JSrqIz0QVLz3sz+i3YJdT7TTSLcfLLzJi9aZTuI=\ngithub.com/hashicorp/go-msgpack v0.5.5/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-retryablehttp v0.6.6/go.mod h1:vAew36LZh98gCBJNLH42IQ1ER/9wtLZZ8meHqQvEYWY=\ngithub.com/hashicorp/go-retryablehttp v0.7.2 h1:AcYqCvkpalPnPF2pn0KamgwamS42TqUDDYFRKq/RAd0=\ngithub.com/hashicorp/go-retryablehttp v0.7.2/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=\ngithub.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.6/go.mod h1:QmrqtbKuxxSWTN3ETMPuB+VtEiBJ/A9XhoYGv8E1uD8=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.7 h1:UpiO20jno/eV1eVZcxqWnUohyKRe1g8FPV/xH1s/2qs=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.7/go.mod h1:QmrqtbKuxxSWTN3ETMPuB+VtEiBJ/A9XhoYGv8E1uD8=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.1/go.mod h1:gKOamz3EwoIoJq7mlMIRBpVTAUn8qPCrEclOKKWhD3U=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 h1:kes8mmyCpxJsI7FTwtzRqEy9CdjCtrXrXGuOpxEA7Ts=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2/go.mod h1:Gou2R9+il93BqX25LAKCLuM+y9U2T4hlwvT1yprcna4=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=\ngithub.com/hashicorp/go-sockaddr v1.0.6 h1:RSG8rKU28VTUTvEKghe5gIhIQpv8evvNpnDEyqO4u9I=\ngithub.com/hashicorp/go-sockaddr v1.0.6/go.mod h1:uoUUmtwU7n9Dv3O4SNLeFvg0SxQ3lyjsj6+CCykpaxI=\ngithub.com/hashicorp/go-syslog v1.0.0 h1:KaodqZuhUoZereWVIYmpUgZysurB1kBLX2j0MwMrUAE=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-version v1.6.0 h1:feTTfFNnjP967rlCxM/I9g701jU+RN74YKx2mOkIeek=\ngithub.com/hashicorp/go-version v1.6.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\ngithub.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0 h1:dLEQVugN8vlakKOUE3ihGLTZJRB4j+M2cdTm/ORI65Y=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.4/go.mod h1:mtBihi+LeNXGtG8L9dX59gAEa12BDtBQSp4v/YAJqrc=\ngithub.com/hashicorp/memberlist v0.5.0 h1:EtYPN8DpAURiapus508I4n9CzHs2W+8NZGbmmR/prTM=\ngithub.com/hashicorp/memberlist v0.5.0/go.mod h1:yvyXLpo0QaGE59Y7hDTsTzDD25JYBZ4mHgHUZ8lrOI0=\ngithub.com/hashicorp/nomad/api v0.0.0-20230103221135-ce00d683f9be h1:bJ/jBA5pt/5OT1oaApx8B5g/nRyohn61Q8TyUp4PoEI=\ngithub.com/hashicorp/nomad/api v0.0.0-20230103221135-ce00d683f9be/go.mod h1:EM/2XaEwHziSB4NdWZ6MfE65TcvgWwVawOUBT8kVRqE=\ngithub.com/hashicorp/serf v0.10.1 h1:Z1H2J60yRKvfDYAOZLd2MU0ND4AH/WDz7xYHDWQsIPY=\ngithub.com/hashicorp/serf v0.10.1/go.mod h1:yL2t6BqATOLGc5HF7qbFkTfXoPIY0WZdWHfEvMqbG+4=\ngithub.com/hashicorp/vault/api v1.10.0 h1:/US7sIjWN6Imp4o/Rj1Ce2Nr5bki/AXi9vAW3p2tOJQ=\ngithub.com/hashicorp/vault/api v1.10.0/go.mod h1:jo5Y/ET+hNyz+JnKDt8XLAdKs+AM0G5W0Vp1IrFI8N8=\ngithub.com/hashicorp/vault/api/auth/kubernetes v0.5.0 h1:CXO0fD7M3iCGovP/UApeHhPcH4paDFKcu7AjEXi94rI=\ngithub.com/hashicorp/vault/api/auth/kubernetes v0.5.0/go.mod h1:afrElBIO9Q4sHFVuVWgNevG4uAs1bT2AZFA9aEiI608=\ngithub.com/huandu/xstrings v1.3.3/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.4.0 h1:D17IlohoQq4UcpqD7fDk80P7l+lwAmlFaBHgOipl2FU=\ngithub.com/huandu/xstrings v1.4.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/imdario/mergo v0.3.11 h1:3tnifQM4i+fbajXKBHXWEH+KvNHqojZ778UH75j3bGA=\ngithub.com/imdario/mergo v0.3.11/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.10/go.mod h1:qgIWMr58cqv1PHHyhnkY9lrL7etaEgOFcMEpPG5Rm84=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.41/go.mod h1:p6aan82bvRIyn+zDIv9xYNUpwa73JcSh9BKwknJysuI=\ngithub.com/miekg/dns v1.1.50 h1:DQUfb9uc6smULcREF09Uc+/Gd46YWqJd5DbpPE9xkcA=\ngithub.com/miekg/dns v1.1.50/go.mod h1:e3IlAVfNqAllflbibAZEWOXOQ+Ynzk/dDozDxY7XnME=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/cli v1.1.0/go.mod h1:xcISNoH86gajksDmfB23e/pu+B+GeFRMYmoHXxx3xhI=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.14.1 h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=\ngithub.com/mitchellh/go-testing-interface v1.14.1/go.mod h1:gfgS7OtZj6MA4U1UrDRp04twqAjfvlZyCfX3sDjEym8=\ngithub.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/hashstructure v1.1.0 h1:P6P1hdjqAAknpY/M1CGipelZgp+4y9ja9kmUZPXP+H0=\ngithub.com/mitchellh/hashstructure v1.1.0/go.mod h1:xUDAozZz0Wmdiufv0uyhnHkUTN6/6d8ulp4AwfLKrmA=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/posener/complete v1.2.3/go.mod h1:WZIdtGGp+qx0sLrYKtIRAruyNpv6hFCicSgv7Sy7s/s=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/columnize v2.1.0+incompatible/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/go-glob v1.0.0 h1:iQh3xXAumdQ+4Ufa5b25cRpC5TYKlno6hsv6Cb3pkBk=\ngithub.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 h1:nn5Wsu0esKSJiIVhscUtVbo7ada43DJhG55ua/hjS5I=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shoenig/test v0.5.2 h1:ELZ7qZ/6CPrT71PXrSe2TFzLs4/cGCqqU5lZ5RhZ+B8=\ngithub.com/shoenig/test v0.5.2/go.mod h1:xYtyGBC5Q3kzCNyJg/SjgNpfAa2kvmgA0i5+lQso8x0=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shopspring/decimal v1.3.1 h1:2Usl1nmF/WZucqkFZhnfFYxxxu8LG21F6nPQBE5gKV8=\ngithub.com/shopspring/decimal v1.3.1/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190911031432-227b76d455e7/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.3.0/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.22.0 h1:g1v0xeRhjcugydODzvb3mEM9SQ0HGp9s/nh3COQ/C30=\ngolang.org/x/crypto v0.22.0/go.mod h1:vr6Su+7cTlO45qkww3VDJlzDn0ctJvRgYbC2NvXHt+M=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 h1:vr/HnozRka3pE4EsMEg1lgkXJkTFJCVUX+S/ZT6wYzM=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842/go.mod h1:XtvwrStGgqGPLc4cjQfWqZHG1YFdYs6swckp8vpsjnc=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210410081132-afb366fc7cd1/go.mod h1:9tjilg8BloeKEkVJvy7fQ90B1CfIiPueXVOjqfkSzI8=\ngolang.org/x/net v0.0.0-20210726213435-c6fcb2dbf985/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\ngolang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210303074136-134d130e1a04/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0 h1:Od9JTbYCk261bKm4M/mw7AklTlFYIa0bIp9BgSm1S8Y=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.0.0-20200416051211-89c76fbcd5d1/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.6-0.20210726203631-07bc1bf47fb2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.21.0 h1:qc0xYgIbsSDt9EyWz05J5wfa7LOVW0YTLOXrqdLAWIw=\ngolang.org/x/tools v0.21.0/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1 h1:KpwkzHKEF7B9Zxg18WzOa7djJ+Ha5DzthMyZYQfEn2A=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1/go.mod h1:nKE/iIaLqn2bQwXBg8f1g2Ylh6r5MN5CmZvuzZCgsCU=\ngoogle.golang.org/grpc v1.56.3 h1:8I4C0Yq1EjstUzUJzpcRVbuYA2mODtEmpWiQoN/b2nc=\ngoogle.golang.org/grpc v1.56.3/go.mod h1:I9bI3vqKfayGqPUAwGdOSu7kt6oIJLixfffKrpXqQ9s=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.220703125,
          "content": "// Copyright (c) HashiCorp, Inc.\n// SPDX-License-Identifier: MPL-2.0\n\npackage main // import \"github.com/hashicorp/consul-template\"\n\nimport \"os\"\n\nfunc main() {\n\tcli := NewCLI(os.Stdout, os.Stderr)\n\tos.Exit(cli.Run(os.Args))\n}\n"
        },
        {
          "name": "main_test.go",
          "type": "blob",
          "size": 1.326171875,
          "content": "// Copyright (c) HashiCorp, Inc.\n// SPDX-License-Identifier: MPL-2.0\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"testing\"\n\n\tdep \"github.com/hashicorp/consul-template/dependency\"\n\t\"github.com/hashicorp/consul-template/test\"\n\t\"github.com/hashicorp/consul/sdk/testutil\"\n)\n\nvar (\n\ttestConsul  *testutil.TestServer\n\ttestClients *dep.ClientSet\n)\n\nfunc TestMain(m *testing.M) {\n\ttb := &test.TestingTB{}\n\tconsul, err := testutil.NewTestServerConfigT(tb,\n\t\tfunc(c *testutil.TestServerConfig) {\n\t\t\tc.LogLevel = \"warn\"\n\t\t\tc.Stdout = io.Discard\n\t\t\tc.Stderr = io.Discard\n\t\t})\n\tif err != nil {\n\t\tlog.Fatal(fmt.Errorf(\"failed to start consul server: %v\", err))\n\t}\n\ttestConsul = consul\n\tlog.SetOutput(io.Discard)\n\n\tclients := dep.NewClientSet()\n\tif err := clients.CreateConsulClient(&dep.CreateConsulClientInput{\n\t\tAddress: testConsul.HTTPAddr,\n\t}); err != nil {\n\t\ttestConsul.Stop()\n\t\tlog.Fatal(err)\n\t}\n\ttestClients = clients\n\n\texitCh := make(chan int, 1)\n\tfunc() {\n\t\tdefer func() {\n\t\t\t// Attempt to recover from a panic and stop the server. If we don't stop\n\t\t\t// it, the panic will cause the server to remain running in the\n\t\t\t// background. Here we catch the panic and the re-raise it.\n\t\t\tif r := recover(); r != nil {\n\t\t\t\ttestConsul.Stop()\n\t\t\t\tpanic(r)\n\t\t\t}\n\t\t}()\n\n\t\texitCh <- m.Run()\n\t}()\n\n\texit := <-exitCh\n\n\ttb.DoCleanup()\n\ttestConsul.Stop()\n\tos.Exit(exit)\n}\n"
        },
        {
          "name": "manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "renderer",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "service_os",
          "type": "tree",
          "content": null
        },
        {
          "name": "signals",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        },
        {
          "name": "watch",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}