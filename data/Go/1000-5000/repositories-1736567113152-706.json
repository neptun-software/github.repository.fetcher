{
  "metadata": {
    "timestamp": 1736567113152,
    "page": 706,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "src-d/hercules",
      "stars": 2649,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 1.3125,
          "content": "version: \"{build}\"\nplatform: x64\nimage: Visual Studio 2017\n\nclone_folder: c:\\boilerplate\ncache:\n  - vendor\n\ninstall:\n  - curl -SLko protoc.zip https://github.com/google/protobuf/releases/download/v3.6.0/protoc-3.6.0-win32.zip\n  - 7z e protoc.zip\n  - move protoc.exe C:\\msys64\\mingw64\\bin\n\nbuild_script:\n  - go version\n  - set PATH=C:\\mingw-w64\\x86_64-7.2.0-posix-seh-rt_v5-rev1\\mingw64\\bin;C:\\msys64\\usr\\bin;C:\\msys64\\mingw64\\bin;%PATH%\n  - set PATH=%PATH:C:\\Program Files\\Git\\usr\\bin;=%\n  - make\n  - copy /y \"C:\\mingw-w64\\x86_64-7.2.0-posix-seh-rt_v5-rev1\\mingw64\\x86_64-w64-mingw32\\lib\\libgcc_s_seh-1.dll\"\n  - copy /y \"C:\\mingw-w64\\x86_64-7.2.0-posix-seh-rt_v5-rev1\\mingw64\\x86_64-w64-mingw32\\lib\\libstdc++-6.dll\"\n  - copy /y \"C:\\mingw-w64\\x86_64-7.2.0-posix-seh-rt_v5-rev1\\mingw64\\x86_64-w64-mingw32\\lib\\libwinpthread-1.dll\"\n  - 7z a hercules.win64.zip hercules.exe \"libgcc_s_seh-1.dll\" \"libstdc++-6.dll\" \"libwinpthread-1.dll\"\n\ntest_script:\n  - go test -v -timeout 20m -race -tags disable_babelfish gopkg.in/src-d/hercules.v10/...\n\nartifacts:\n  - name: hercules.win64.zip\n    path: hercules.win64.zip\n\ndeploy:\n  release: $(APPVEYOR_REPO_TAG_NAME)\n  provider: GitHub\n  auth_token:\n    secure: 78zsH4q19DqcpdkwnYHQoe0BakBfv+LGu1W7mXuaBC9mS87+EuAj3+yTzJv4NEfI\n  artifact: hercules.win64.zip\n  on:\n    branch: master\n    appveyor_repo_tag: true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.521484375,
          "content": "vendor\ncmd/hercules/plugin_template_source.go\ncontrib/_plugin_example/churn_analysis.pb.go\npb/pb.pb.go\npb/pb_pb2.py\ncoverage.txt\nprotoc-gen-gogo\nhercules\npython/dist\npython/build\n\n**/*.egg-info\n**/__pycache__\n**/.DS_Store\n.idea\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n*.tsv\n*.tsv.gz\n*.json\n\n**/__pycache__\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.9775390625,
          "content": "dist: bionic\nsudo: required\n\ngit:\n  depth: 9999999\n\nlanguage: go\ngo:\n  - 1.11.x\n  - 1.12.x\n  - 1.13.x\n\nservices:\n  - docker\n\ncache:\n  directories:\n    - $HOME/.cache/pip\n    - $HOME/vendor\n\nmatrix:\n  fast_finish: true\n\nstages:\n  - test\n  - name: deploy\n    # require any tag name to deploy\n    if: tag =~ .*\n\nenv:\n  - PROTOC_VERSION=3.6.0 TENSORFLOW_VERSION=1.11.0 GOPATH=\n\nbefore_install:\n  - wget -O protoc.zip https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip\n  - unzip -d ~/.local protoc.zip && rm protoc.zip\n  - go get -v golang.org/x/lint/golint\n  - (wget -O - https://bootstrap.pypa.io/get-pip.py || wget -O - https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py) | sudo python3 - pip==18.1\n  - export PATH=~/usr/bin:.:$PATH\n  - make --version\n  - pip3 --version\n  - sudo pip3 install cython\n  - sudo pip3 install tensorflow flake8 ./python\n  - docker run -d --privileged -p 9432:9432 --name bblfshd bblfsh/bblfshd\n  - docker exec -it bblfshd bblfshctl driver install python bblfsh/python-driver:latest\n  - docker exec -it bblfshd bblfshctl driver install go bblfsh/go-driver:latest\n  - docker exec -it bblfshd bblfshctl driver install java bblfsh/java-driver:latest\n  - curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-$(go env GOOS)-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar -C /usr/local -xz\n  - sudo ldconfig\ninstall:\n  - git clean -xfd\n  - go env\n  - travis_retry make TAGS=tensorflow\nscript:\n  - set -e\n  - export GO111MODULE=on\n  - test -z \"$(gofmt -s -l . | grep -v vendor/)\"\n  - go vet -tags tensorflow ./...\n  - golint -set_exit_status $(go list ./... | grep -v /vendor/)\n  - cd python && flake8 && cd ..\n  - go test -coverpkg=all -v -coverprofile=coverage.txt -covermode=count gopkg.in/src-d/hercules.v10/... && sed -i '/cmd\\/hercules\\|core.go/d' coverage.txt\n  - # race checks increase the elapsed time by 10 minutes, we run them only in AppVeyor\n  - hercules version\n  - hercules --burndown --couples --devs --quiet --pb https://github.com/src-d/hercules > 1.pb\n  - cp 1.pb 2.pb\n  - hercules combine 1.pb 2.pb > 12.pb\n  - (hercules generate-plugin -n MyPlug -o myplug && cd myplug && GOFLAGS=\"-tags=tensorflow\" make)\n  - hercules --plugin myplug/my_plug.so --help | grep my-plug\n  - (cd contrib/_plugin_example && GOBIN=../.. make)\n  - hercules --burndown --burndown-files --burndown-people --couples --devs --quiet https://github.com/src-d/hercules | labours -m all -o out --backend Agg --disable-projector\n  - hercules --burndown --burndown-files --burndown-people --couples --devs --quiet --pb https://github.com/src-d/hercules | labours -f pb -m all -o out --backend Agg --disable-projector\n  - # hercules --sentiment --quiet --languages Python https://github.com/src-d/hercules > /dev/null\n  - set +e\n  - if [ $TRAVIS_GO_VERSION == \"1.11.x\" ]; then bash <(curl -s https://codecov.io/bash); fi\n\njobs:\n  include:\n    - stage: test\n      language: generic\n      env: DOCKER_BUILD=1\n      before_install: skip\n      install: skip\n      script:\n        - docker build -t srcd/hercules .\n        - docker run --rm srcd/hercules hercules --help\n        - docker run --rm srcd/hercules labours --help\n    - stage: deploy\n      os: osx\n      osx_image: xcode9.3\n      go: 1.12.x\n      before_install:\n        - wget -O protoc.zip https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-osx-x86_64.zip\n        - unzip -d ~/.local protoc.zip && rm protoc.zip\n        - export PATH=.:$PATH\n      after_success:\n        - gzip -S .darwin_amd64.gz hercules\n      script: skip\n      install:\n        - travis_retry make\n      deploy:\n        provider: releases\n        api_key:\n          secure: $GITHUB_TOKEN\n        file: \"hercules.darwin_amd64.gz\"\n        skip_cleanup: true\n        on:\n          tags: true\n    - stage: deploy\n      os: linux\n      go: 1.13.x\n      before_install:\n        - wget -O protoc.zip https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip\n        - unzip -d ~/.local protoc.zip && rm protoc.zip\n        - export PATH=.:$PATH\n        - (wget -O - https://bootstrap.pypa.io/get-pip.py || wget -O - https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py) | sudo python3 - pip==18.1\n        - sudo pip3 install twine pyopenssl\n      script:\n        - test v$(python3 python/setup.py --version) == $TRAVIS_TAG\n      install:\n        - set -e\n        - travis_retry make\n        - cd python\n        - python3 setup.py bdist_wheel\n        - cp dist/*py3-none-any* ..\n        - cd ..\n      after_success:\n        - gzip -S .linux_amd64.gz hercules\n      deploy:\n        - provider: releases\n          api_key:\n            secure: $GITHUB_TOKEN\n          file: \"hercules.linux_amd64.gz\"\n          skip_cleanup: true\n          on:\n            tags: true\n        - provider: script\n          script: twine upload *py3-none-any* -u $PYPI_LOGIN -p $PYPI_PASS\n          skip_cleanup: true\n          on:\n            tags: true\n\n\nnotifications:\n  email: false\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1513671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at conduct@sourced.tech. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.755859375,
          "content": "# Contributing Guidelines\n\nHercules project is [Apache licensed](LICENSE.md) and accepts\ncontributions via GitHub pull requests.  This document outlines some of the\nconventions on development workflow, commit message formatting, contact points,\nand other resources to make it easier to get your contribution accepted.\n\n## Certificate of Origin\n\nBy contributing to this project you agree to the [Developer Certificate of\nOrigin (DCO)](DCO). This document was created by the Linux Kernel community and is a\nsimple statement that you, as a contributor, have the legal right to make the\ncontribution.\n\nIn order to show your agreement with the DCO you should include at the end of commit message,\nthe following line: `Signed-off-by: John Doe <john.doe@example.com>`, using your real name.\n\nThis can be done easily using the [`-s`](https://github.com/git/git/blob/b2c150d3aa82f6583b9aadfecc5f8fa1c74aca09/Documentation/git-commit.txt#L154-L161) flag on the `git commit`.\n\n\n## Support Channels\n\nThe official support channels, for both users and contributors, are:\n\n- GitHub [issues](https://github.com/src-d/hercules/issues)*\n- Slack: #machine-learning room in the [source{d} Slack](https://join.slack.com/t/sourced-community/shared_invite/enQtMjc4Njk5MzEyNzM2LTFjNzY4NjEwZGEwMzRiNTM4MzRlMzQ4MmIzZjkwZmZlM2NjODUxZmJjNDI1OTcxNDAyMmZlNmFjODZlNTg0YWM)\n\n*Before opening a new issue or submitting a new pull request, it's helpful to\nsearch the project - it's likely that another user has already reported the\nissue you're facing, or it's a known issue that we're already aware of.\n\n\n## How to Contribute\n\nPull Requests (PRs) are the main and exclusive way to contribute to the official go-git project.\nIn order for a PR to be accepted it needs to pass a list of requirements:\n\n- Code Coverage does not decrease.\n- All the tests pass.\n- Go code is idiomatic, formatted according to [gofmt](https://golang.org/cmd/gofmt/), and without any warnings from [go lint](https://github.com/golang/lint) nor [go vet](https://golang.org/cmd/vet/).\n- Python code is formatted according to [![PEP8](https://img.shields.io/badge/code%20style-pep8-orange.svg)](https://www.python.org/dev/peps/pep-0008/).\n- If the PR is a bug fix, it has to include a new unit test that fails before the patch is merged.\n- If the PR is a new feature, it has to come with a suite of unit tests, that tests the new functionality.\n- In any case, all the PRs have to pass the personal evaluation of at least one of the [maintainers](MAINTAINERS.md).\n\n\n### Format of the commit message\n\nThe commit summary must start with a capital letter and with a verb in present tense. No dot in the end.\n\n```\nAdd a feature\nRemove unused code\nFix a bug\n```\n\nEvery commit details should describe what was changed, under which context and, if applicable, the GitHub issue it relates to.\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.38671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.6357421875,
          "content": "FROM golang:1.13 AS builder\nENV PROTOBUF_VERSION 3.5.1\nCOPY . /root/src\nRUN apt-get update && \\\n    apt-get install -y unzip make && \\\n    curl -SLo protoc.zip https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protoc-$PROTOBUF_VERSION-linux-x86_64.zip && \\\n    unzip -d /usr/local protoc.zip && \\\n    rm protoc.zip && \\\n    cd /root/src && \\\n    curl -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-$(go env GOOS)-x86_64-1.7.0.tar.gz\" | tar -C /usr/local -xz && \\\n    make\n\nFROM ubuntu:18.04\nCOPY --from=builder /root/src/hercules /usr/local/bin\nCOPY python /root/src\nENV LC_ALL en_US.UTF-8\nRUN apt-get update && \\\n    apt-get upgrade -y  && \\\n    apt-get install -y --no-install-suggests --no-install-recommends locales ca-certificates python3 python3-dev python3-distutils libyaml-dev libyaml-0-2 libxml2-dev libxml2 curl git g++ && \\\n    locale-gen en_US.UTF-8 && \\\n    echo '#!/bin/bash\\n\\\n\\n\\\necho\\n\\\necho \"\t$@\"\\n\\\necho\\n\\' > /browser && \\\n    chmod +x /browser && \\\n    curl https://bootstrap.pypa.io/get-pip.py | python3 - pip==18.1 && \\\n    pip3 install --no-cache-dir --no-build-isolation cython && \\\n    sed -i 's/DEFAULT_MATPLOTLIB_BACKEND = None/DEFAULT_MATPLOTLIB_BACKEND = \"Agg\"/' /root/src/labours/cli.py && \\\n    pip3 install --no-cache-dir /root/src && \\\n    pip3 install --no-cache-dir \"tensorflow<2.0\" && \\\n    rm -rf /root/src && \\\n    apt-get remove -y python3-dev libyaml-dev libxml2-dev curl git g++ && \\\n    apt-get autoremove -y && \\\n    rm -rf /usr/share/doc /usr/share/man && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n\nEXPOSE 8000\nENV BROWSER /browser\nENV COUPLES_SERVER_TIME 7200\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 10.248046875,
          "content": "Apache License\n==============\n\n_Version 2.0, January 2004_  \n_&lt;<http://www.apache.org/licenses/>&gt;_\n\n### Terms and Conditions for use, reproduction, and distribution\n\n#### 1. Definitions\n\n“License” shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n\n“Licensor” shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n\n“Legal Entity” shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, “control” means **(i)** the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or **(ii)** ownership of fifty percent (50%) or more of the\noutstanding shares, or **(iii)** beneficial ownership of such entity.\n\n“You” (or “Your”) shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n\n“Source” form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n\n“Object” form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n\n“Work” shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n\n“Derivative Works” shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n\n“Contribution” shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n“submitted” means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as “Not a Contribution.”\n\n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.\n\n#### 2. Grant of Copyright License\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.\n\n#### 3. Grant of Patent License\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.\n\n#### 4. Redistribution\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n* **(a)** You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and\n* **(b)** You must cause any modified files to carry prominent notices stating that You\nchanged the files; and\n* **(c)** You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and\n* **(d)** If the Work includes a “NOTICE” text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.\n\n#### 5. Submission of Contributions\n\nUnless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.\n\n#### 6. Trademarks\n\nThis License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.\n\n#### 7. Disclaimer of Warranty\n\nUnless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an “AS IS” BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.\n\n#### 8. Limitation of Liability\n\nIn no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.\n\n#### 9. Accepting Warranty or Additional Liability\n\nWhile redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\n_END OF TERMS AND CONDITIONS_\n\n### APPENDIX: How to apply the Apache License to your work\n\nTo apply the Apache License to your work, attach the following boilerplate\nnotice, with the fields enclosed by brackets `[]` replaced with your own\nidentifying information. (Don't include the brackets!) The text should be\nenclosed in the appropriate comment syntax for the file format. We also\nrecommend that a file or class name and description of purpose be included on\nthe same “printed page” as the copyright notice for easier identification within\nthird-party archives.\n\n    Copyright [yyyy] [name of copyright owner]\n    \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n      http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.05078125,
          "content": "Vadim Markovtsev <vadim@sourced.tech> (@vmarkovtsev)"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.21875,
          "content": "GOBIN ?= .\nGO111MODULE=on\nifneq ($(OS),Windows_NT)\nEXE =\nelse\nEXE = .exe\nendif\nPKG = $(shell go env GOOS)_$(shell go env GOARCH)\nTAGS ?=\n\nall: ${GOBIN}/hercules${EXE}\n\ntest: all\n\tgo test gopkg.in/src-d/hercules.v10\n\n${GOBIN}/protoc-gen-gogo${EXE}:\n\tgo build github.com/gogo/protobuf/protoc-gen-gogo\n\nifneq ($(OS),Windows_NT)\ninternal/pb/pb.pb.go: internal/pb/pb.proto ${GOBIN}/protoc-gen-gogo\n\tPATH=\"${PATH}:${GOBIN}\" protoc --gogo_out=internal/pb --proto_path=internal/pb internal/pb/pb.proto\nelse\ninternal/pb/pb.pb.go: internal/pb/pb.proto ${GOBIN}/protoc-gen-gogo.exe\n\texport PATH=\"${PATH};${GOBIN}\" && \\\n\tprotoc --gogo_out=internal/pb --proto_path=internal/pb internal/pb/pb.proto\nendif\n\npython/labours/pb_pb2.py: internal/pb/pb.proto\n\tprotoc --python_out python/labours --proto_path=internal/pb internal/pb/pb.proto\n\ncmd/hercules/plugin_template_source.go: cmd/hercules/plugin.template\n\tcd cmd/hercules && go generate\n\nvendor:\n\tgo mod vendor\n\n${GOBIN}/hercules${EXE}: vendor *.go */*.go */*/*.go */*/*/*.go internal/pb/pb.pb.go python/labours/pb_pb2.py cmd/hercules/plugin_template_source.go\n\tgo build -tags \"$(TAGS)\" -ldflags \"-X gopkg.in/src-d/hercules.v10.BinaryGitHash=$(shell git rev-parse HEAD)\" gopkg.in/src-d/hercules.v10/cmd/hercules\n"
        },
        {
          "name": "PLUGINS.md",
          "type": "blob",
          "size": 1.4453125,
          "content": "Hercules plugins\n================\n\n### Prerequisites\n\nIt is required to have [GoGo Protobuf](https://github.com/gogo/protobuf) installed:\n\n```\ngo get github.com/gogo/protobuf/protoc-gen-gogo\n```\n\nThere must be the `protoc` tool available in `$PATH`, version 3. Grab it from the\n[official Protocol Buffers releases page](https://github.com/google/protobuf/releases) (`protoc-*.zip`).\n\n### Creating a new plugin\n\nGeneration of a new plugin skeleton:\n\n```\nhercules generate-plugin -n MyPluginName -o my_plugin\n```\n\nThis command creates:\n\n* `my_plugin/my_plugin_name.go` with the plugin source code. Refer to the docs about [LeafPipelineItem]().\n* `my_plugin/my_plugin_name.proto` which defines the Protocol Buffers scheme of the result\n* `my_plugin/my_plugin_name.pb.go` is generated from `my_plugin/my_plugin_name.proto`\n\nCompilation:\n\n```\ncd my_plugin\nmake\n```\n\n### Using a plugin\n\n```\nhercules --plugin my_plugin_name.so --my-plugin-name https://github.com/user/repo\n```\n\n### Example\n\nSee [contrib/plugin_example](contrib/_plugin_example). It was generated by `hercules generate-plugin`\nand implements [code churn](https://blog.gitprime.com/why-code-churn-matters/) analysis through time.\nIt uses many Hercules features and supports YAML and protobuf output formats.\n\n![go-git global churn](doc/churn_global.png)\n<p align=\"center\">Generated with <code>hercules --plugin churn_analysis.so --churn https://github.com/src-d/go-git | python3 plot_churn.py --tick-days 14 -</code></p>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.9052734375,
          "content": "<p align=\"center\">\n\n</p>\n<h1 align=\"center\">Hercules</h1>\n<p align=\"center\">\n      Fast, insightful and highly customizable Git history analysis.<br><br>\n      <a href=\"http://godoc.org/gopkg.in/src-d/hercules.v10\"><img src=\"https://godoc.org/gopkg.in/src-d/hercules.v10?status.svg\" alt=\"GoDoc\"></a>\n      <a href=\"https://travis-ci.com/src-d/hercules\"><img src=\"https://travis-ci.com/src-d/hercules.svg?branch=master\" alt=\"Travis build Status\"></a>\n      <a href=\"https://ci.appveyor.com/project/vmarkovtsev/hercules\"><img src=\"https://ci.appveyor.com/api/projects/status/49f0lm3v2y6xyph3?svg=true\" alt=\"AppVeyor build status\"></a>\n      <a href=\"https://pypi.python.org/pypi/labours\"><img src=\"https://img.shields.io/pypi/v/labours.svg\" alt=\"PyPi package status\"></a>\n      <a href=\"https://hub.docker.com/r/srcd/hercules\"><img src=\"https://img.shields.io/docker/build/srcd/hercules.svg\" alt=\"Docker build status\"></a>\n      <a href=\"https://codecov.io/gh/src-d/hercules\"><img src=\"https://codecov.io/github/src-d/hercules/coverage.svg\" alt=\"Code coverage\"></a>\n      <a href=\"https://goreportcard.com/report/github.com/src-d/hercules\"><img src=\"https://goreportcard.com/badge/github.com/src-d/hercules\" alt=\"Go Report Card\"></a>\n      <a href=\"https://opensource.org/licenses/Apache-2.0\"><img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" alt=\"Apache 2.0 license\"></a>\n</p>\n<p align=\"center\">\n  <a href=\"#overview\">Overview</a> •\n  <a href=\"#usage\">How To Use</a> •\n  <a href=\"#installation\">Installation</a> •\n  <a href=\"#contributions\">Contributions</a> •\n  <a href=\"#license\">License</a>\n</p>\n\n--------\n\n\nTable of Contents\n=================\n\n  * [Overview](#overview)\n  * [Installation](#installation)\n     * [Build from source](#build-from-source)\n     * [GitHub Action](#github-action)\n  * [Contributions](#contributions)\n  * [License](#license)\n  * [Usage](#usage)\n    * [Caching](#caching)\n    * [GitHub Action](#github-action-1)\n    * [Docker image](#docker-image)\n    * [Built-in analyses](#built-in-analyses)\n      * [Project burndown](#project-burndown)\n      * [Files](#files)\n      * [People](#people)\n      * [Churn matrix](#overwrites-matrix)\n      * [Code ownership](#code-ownership)\n      * [Couples](#couples)\n      * [Structural hotness](#structural-hotness)\n      * [Aligned commit series](#aligned-commit-series)\n      * [Added vs changed lines through time](#added-vs-changed-lines-through-time)\n      * [Efforts through time](#efforts-through-time)\n      * [Sentiment (positive and negative comments)](#sentiment-positive-and-negative-comments)\n      * [Everything in a single pass](#everything-in-a-single-pass)\n    * [Plugins](#plugins)\n    * [Merging](#merging)\n    * [Bad unicode errors](#bad-unicode-errors)\n    * [Plotting](#plotting)\n    * [Custom plotting backend](#custom-plotting-backend)\n    * [Caveats](#caveats)\n    * [Burndown Out-Of-Memory](#burndown-out-of-memory)\n  * [Roadmap](#roadmap)\n\n## Overview\n\nHercules is an amazingly fast and highly customizable Git repository analysis engine written in Go. Batteries are included.\nPowered by [go-git](https://github.com/go-git/go-git).\n\n*Notice (November 2020): the main author is back from the limbo and is gradually resuming the development. See the [roadmap](#roadmap).*\n\nThere are two command-line tools: `hercules` and `labours`. The first is a program\nwritten in Go which takes a Git repository and executes a Directed Acyclic Graph (DAG) of [analysis tasks](doc/PIPELINE_ITEMS.md) over the full commit history.\nThe second is a Python script which shows some predefined plots over the collected data. These two tools are normally used together through\na pipe. It is possible to write custom analyses using the plugin system. It is also possible\nto merge several analysis results together - relevant for organizations. \nThe analyzed commit history includes branches, merges, etc.\n\nHercules has been successfully used for several internal projects at [source{d}](https://sourced.tech).\nThere are blog posts: [1](https://blog.sourced.tech/post/hercules-v4), [2](https://blog.sourced.tech/post/hercules) and\na [presentation](http://vmarkovtsev.github.io/gowayfest-2018-minsk/). Please [contribute](#contributions)\nby testing, fixing bugs, adding [new analyses](https://github.com/src-d/hercules/issues?q=is%3Aissue+is%3Aopen+label%3Anew-analysis), or coding swagger!\n\n![Hercules DAG of Burndown analysis](doc/dag.png)\n<p align=\"center\">The DAG of burndown and couples analyses with UAST diff refining. Generated with <code>hercules --burndown --burndown-people --couples --feature=uast --dry-run --dump-dag doc/dag.dot https://github.com/src-d/hercules</code></p>\n\n![git/git image](doc/linux.png)\n<p align=\"center\">torvalds/linux line burndown (granularity 30, sampling 30, resampled by year). Generated with <code>hercules --burndown --first-parent --pb https://github.com/torvalds/linux | labours -f pb -m burndown-project</code> in 1h 40min.</p>\n\n## Installation\n\nGrab `hercules` binary from the [Releases page](https://github.com/src-d/hercules/releases).\n`labours` is installable from [PyPi](https://pypi.org/):\n\n```\npip3 install labours\n```\n\n[`pip3`](https://pip.pypa.io/en/stable/installing/) is the Python package manager.\n\nNumpy and Scipy can be installed on Windows using http://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n### Build from source\nYou are going to need Go (>= v1.11) and [`protoc`](https://github.com/google/protobuf/releases).\n```\ngit clone https://github.com/src-d/hercules && cd hercules\nmake\npip3 install -e ./python\n```\n\n### GitHub Action\n\nIt is possible to run Hercules as a [GitHub Action](https://help.github.com/en/articles/about-github-actions):\n[Hercules on GitHub Marketplace](https://github.com/marketplace/actions/hercules-insights).\nPlease refer to the [sample workflow](.github/workflows/main.yml) which demonstrates how to setup.\n\n## Contributions\n\n...are welcome! See [CONTRIBUTING](CONTRIBUTING.md) and [code of conduct](CODE_OF_CONDUCT.md).\n\n## License\n[Apache 2.0](LICENSE.md)\n\n## Usage\n\nThe most useful and reliably up-to-date command line reference:\n\n```\nhercules --help\n```\n\nSome examples:\n\n```\n# Use \"memory\" go-git backend and display the burndown plot. \"memory\" is the fastest but the repository's git data must fit into RAM.\nhercules --burndown https://github.com/go-git/go-git | labours -m burndown-project --resample month\n# Use \"file system\" go-git backend and print some basic information about the repository.\nhercules /path/to/cloned/go-git\n# Use \"file system\" go-git backend, cache the cloned repository to /tmp/repo-cache, use Protocol Buffers and display the burndown plot without resampling.\nhercules --burndown --pb https://github.com/git/git /tmp/repo-cache | labours -m burndown-project -f pb --resample raw\n\n# Now something fun\n# Get the linear history from git rev-list, reverse it\n# Pipe to hercules, produce burndown snapshots for every 30 days grouped by 30 days\n# Save the raw data to cache.yaml, so that later is possible to labours -i cache.yaml\n# Pipe the raw data to labours, set text font size to 16pt, use Agg matplotlib backend and save the plot to output.png\ngit rev-list HEAD | tac | hercules --commits - --burndown https://github.com/git/git | tee cache.yaml | labours -m burndown-project --font-size 16 --backend Agg --output git.png\n```\n\n`labours -i /path/to/yaml` allows to read the output from `hercules` which was saved on disk.\n\n### Caching\n\nIt is possible to store the cloned repository on disk. The subsequent analysis can run on the\ncorresponding directory instead of cloning from scratch:\n\n```\n# First time - cache\nhercules https://github.com/git/git /tmp/repo-cache\n\n# Second time - use the cache\nhercules --some-analysis /tmp/repo-cache\n```\n\n### GitHub Action\n\nThe action produces the artifact named\n`hercules_charts`. Since it is currently impossible to pack several files in one artifact, all the\ncharts and Tensorflow Projector files are packed in the inner tar archive. In order to view the embeddings,\ngo to [projector.tensorflow.org](https://projector.tensorflow.org), click \"Load\" and choose the two TSVs. Then use UMAP or T-SNE.\n\n### Docker image\n\n```\ndocker run --rm srcd/hercules hercules --burndown --pb https://github.com/git/git | docker run --rm -i -v $(pwd):/io srcd/hercules labours -f pb -m burndown-project -o /io/git_git.png\n```\n\n### Built-in analyses\n\n#### Project burndown\n\n```\nhercules --burndown\nlabours -m burndown-project\n```\n\nLine burndown statistics for the whole repository.\nExactly the same what [git-of-theseus](https://github.com/erikbern/git-of-theseus)\ndoes but much faster. Blaming is performed efficiently and incrementally using a custom RB tree tracking\nalgorithm, and only the last modification date is recorded while running the analysis.\n\nAll burndown analyses depend on the values of *granularity* and *sampling*.\nGranularity is the number of days each band in the stack consists of. Sampling\nis the frequency with which the burnout state is snapshotted. The smaller the\nvalue, the more smooth is the plot but the more work is done.\n\nThere is an option to resample the bands inside `labours`, so that you can\ndefine a very precise distribution and visualize it different ways. Besides,\nresampling aligns the bands across periodic boundaries, e.g. months or years.\nUnresampled bands are apparently not aligned and start from the project's birth date.\n\n#### Files\n\n```\nhercules --burndown --burndown-files\nlabours -m burndown-file\n```\n\nBurndown statistics for every file in the repository which is alive in the latest revision.\n\nNote: it will generate separate graph for every file. You don't want to run it on repository with many files.\n\n#### People\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m burndown-person\n```\n\nBurndown statistics for the repository's contributors. If `--people-dict` is not specified, the identities are\ndiscovered by the following algorithm:\n\n0. We start from the root commit towards the HEAD. Emails and names are converted to lower case.\n1. If we process an unknown email and name, record them as a new developer.\n2. If we process a known email but unknown name, match to the developer with the matching email,\nand add the unknown name to the list of that developer's names.\n3. If we process an unknown email but known name, match to the developer with the matching name,\nand add the unknown email to the list of that developer's emails.\n\nIf `--people-dict` is specified, it should point to a text file with the custom identities. The\nformat is: every line is a single developer, it contains all the matching emails and names separated\nby `|`. The case is ignored.\n\n#### Overwrites matrix\n\n![Wireshark top 20 overwrites matrix](doc/wireshark_overwrites_matrix.png)\n<p align=\"center\">Wireshark top 20 devs - overwrites matrix</p>\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m overwrites-matrix\n```\n\nBeside the burndown information, `--burndown-people` collects the added and deleted line statistics per\ndeveloper. Thus it can be visualized how many lines written by developer A are removed by developer B.\nThis indicates collaboration between people and defines expertise teams.\n\nThe format is the matrix with N rows and (N+2) columns, where N is the number of developers.\n\n1. First column is the number of lines the developer wrote.\n2. Second column is how many lines were written by the developer and deleted by unidentified developers\n(if `--people-dict` is not specified, it is always 0).\n3. The rest of the columns show how many lines were written by the developer and deleted by identified\ndevelopers.\n\nThe sequence of developers is stored in `people_sequence` YAML node.\n\n#### Code ownership\n\n![Ember.js top 20 code ownership](doc/emberjs_people.png)\n<p align=\"center\">Ember.js top 20 devs - code ownership</p>\n\n```\nhercules --burndown --burndown-people [--people-dict=/path/to/identities]\nlabours -m ownership\n```\n\n`--burndown-people` also allows to draw the code share through time stacked area plot. That is,\nhow many lines are alive at the sampled moments in time for each identified developer.\n\n#### Couples\n\n![Linux kernel file couples](doc/tfprojcouples.png)\n<p align=\"center\">torvalds/linux files' coupling in Tensorflow Projector</p>\n\n```\nhercules --couples [--people-dict=/path/to/identities]\nlabours -m couples -o <name> [--couples-tmp-dir=/tmp]\n```\n\n**Important**: it requires Tensorflow to be installed, please follow [official instructions](https://www.tensorflow.org/install/).\n\nThe files are coupled if they are changed in the same commit. The developers are coupled if they\nchange the same file. `hercules` records the number of couples throughout the whole commit history\nand outputs the two corresponding co-occurrence matrices. `labours` then trains\n[Swivel embeddings](https://github.com/src-d/tensorflow-swivel) - dense vectors which reflect the\nco-occurrence probability through the Euclidean distance. The training requires a working\n[Tensorflow](http://tensorflow.org) installation. The intermediate files are stored in the\nsystem temporary directory or `--couples-tmp-dir` if it is specified. The trained embeddings are\nwritten to the current working directory with the name depending on `-o`. The output format is TSV\nand matches [Tensorflow Projector](http://projector.tensorflow.org/) so that the files and people\ncan be visualized with t-SNE implemented in TF Projector.\n\n#### Structural hotness\n\n```\n      46  jinja2/compiler.py:visit_Template [FunctionDef]\n      42  jinja2/compiler.py:visit_For [FunctionDef]\n      34  jinja2/compiler.py:visit_Output [FunctionDef]\n      29  jinja2/environment.py:compile [FunctionDef]\n      27  jinja2/compiler.py:visit_Include [FunctionDef]\n      22  jinja2/compiler.py:visit_Macro [FunctionDef]\n      22  jinja2/compiler.py:visit_FromImport [FunctionDef]\n      21  jinja2/compiler.py:visit_Filter [FunctionDef]\n      21  jinja2/runtime.py:__call__ [FunctionDef]\n      20  jinja2/compiler.py:visit_Block [FunctionDef]\n```\n\nThanks to Babelfish, hercules is able to measure how many times each structural unit has been modified.\nBy default, it looks at functions; refer to [Semantic UAST XPath](https://docs.sourced.tech/babelfish/using-babelfish/uast-querying)\nmanual to switch to something else.\n\n```\nhercules --shotness [--shotness-xpath-*]\nlabours -m shotness\n```\n\nCouples analysis automatically loads \"shotness\" data if available.\n\n![Jinja2 functions grouped by structural hotness](doc/jinja.png)\n<p align=\"center\"><code>hercules --shotness --pb https://github.com/pallets/jinja | labours -m couples -f pb</code></p>\n\n#### Aligned commit series\n\n![tensorflow/tensorflow](doc/devs_tensorflow.png)\n<p align=\"center\">tensorflow/tensorflow aligned commit series of top 50 developers by commit number.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m devs -o <name>\n```\n\nWe record how many commits made, as well as lines added, removed and changed per day for each developer.\nWe plot the resulting commit time series using a few tricks to show the temporal grouping. In other words,\ntwo adjacent commit series should look similar after normalization.\n\n1. We compute the distance matrix of the commit series. Our distance metric is\n[Dynamic Time Warping](https://en.wikipedia.org/wiki/Dynamic_time_warping).\nWe use [FastDTW](https://cs.fit.edu/~pkc/papers/tdm04.pdf) algorithm which has linear complexity\nproportional to the length of time series. Thus the overall complexity of computing the matrix is quadratic.\n2. We compile the linear list of commit series with\n[Seriation](http://nicolas.kruchten.com/content/2018/02/seriation/) technique.\nParticularly, we solve the [Travelling Salesman Problem](https://en.wikipedia.org/wiki/Travelling_salesman_problem) which is NP-complete.\nHowever, given the typical number of developers which is less than 1,000, there is a good chance that\nthe solution does not take much time. We use [Google or-tools](https://developers.google.com/optimization/routing/tsp) solver.\n3. We find 1-dimensional clusters in the resulting path with [HDBSCAN](https://hdbscan.readthedocs.io/en/latest/how_hdbscan_works.html)\nalgorithm and assign colors accordingly.\n4. Time series are smoothed by convolving with the [Slepian window](https://en.wikipedia.org/wiki/Window_function#DPSS_or_Slepian_window).\n\nThis plot allows to discover how the development team evolved through time. It also shows \"commit flashmobs\"\nsuch as [Hacktoberfest](https://hacktoberfest.digitalocean.com/). For example, here are the revealed\ninsights from the `tensorflow/tensorflow` plot above:\n\n1. \"Tensorflow Gardener\" is classified as the only outlier.\n2. The \"blue\" group of developers covers the global maintainers and a few people who left (at the top).\n3. The \"red\" group shows how core developers join the project or become less active.\n\n#### Added vs changed lines through time\n\n![tensorflow/tensorflow](doc/add_vs_changed.png)\n<p align=\"center\">tensorflow/tensorflow added and changed lines through time.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m old-vs-new -o <name>\n```\n\n`--devs` from the previous section allows to plot how many lines were added and how many existing changed\n(deleted or replaced) through time. This plot is smoothed.\n\n#### Efforts through time\n\n![kubernetes/kubernetes](doc/k8s_efforts.png)\n<p align=\"center\">kubernetes/kubernetes efforts through time.</p>\n\n```\nhercules --devs [--people-dict=/path/to/identities]\nlabours -m devs-efforts -o <name>\n```\n\nBesides, `--devs` allows to plot how many lines have been changed (added or removed) by each developer.\nThe upper part of the plot is an accumulated (integrated) lower part. It is impossible to have the same scale\nfor both parts, so the lower values are scaled, and hence there are no lower Y axis ticks.\nThere is a difference between the efforts plot and the ownership plot, although changing lines correlate\nwith owning lines.\n\n#### Sentiment (positive and negative comments)\n\n![Django sentiment](doc/sentiment.png)\n<p align=\"center\">It can be clearly seen that Django comments were positive/optimistic in the beginning, but later became negative/pessimistic.<br><code>hercules --sentiment --pb https://github.com/django/django | labours -m sentiment -f pb</code></p>\n\nWe extract new and changed comments from source code on every commit, apply [BiDiSentiment](https://github.com/vmarkovtsev/bidisentiment)\ngeneral purpose sentiment recurrent neural network and plot the results. Requires\n[libtensorflow](https://www.tensorflow.org/install/install_go).\nE.g. [`sadly, we need to hide the rect from the documentation finder for now`](https://github.com/pygame/pygame/commit/b6091d38c8a5639d311858660b38841d96598509#diff-eae59f175858fcef57cb17e733981c73R27) is negative and\n[`Theano has a built-in optimization for logsumexp (...) so we can just write the expression directly`](https://github.com/keras-team/keras/commit/7d52af64c03e71bcd23112a7086dc8aab1b37ed2#diff-ff634bb5c5441d7052449f20018872b8R549)\nis positive. Don't expect too much though - as was written, the sentiment model is\ngeneral purpose and the code comments have different nature, so there is no magic (for now).\n\nHercules must be built with \"tensorflow\" tag - it is not by default:\n\n```\nmake TAGS=tensorflow\n```\n\nSuch a build requires [`libtensorflow`](https://www.tensorflow.org/install/install_go).\n\n#### Everything in a single pass\n\n```\nhercules --burndown --burndown-files --burndown-people --couples --shotness --devs [--people-dict=/path/to/identities]\nlabours -m all\n```\n\n### Plugins\n\nHercules has a plugin system and allows to run custom analyses. See [PLUGINS.md](PLUGINS.md).\n\n### Merging\n\n`hercules combine` is the command which joins several analysis results in Protocol Buffers format together.\n\n```\nhercules --burndown --pb https://github.com/go-git/go-git > go-git.pb\nhercules --burndown --pb https://github.com/src-d/hercules > hercules.pb\nhercules combine go-git.pb hercules.pb | labours -f pb -m burndown-project --resample M\n```\n\n### Bad unicode errors\n\nYAML does not support the whole range of Unicode characters and the parser on `labours` side\nmay raise exceptions. Filter the output from `hercules` through `fix_yaml_unicode.py` to discard\nsuch offending characters.\n\n```\nhercules --burndown --burndown-people https://github.com/... | python3 fix_yaml_unicode.py | labours -m people\n```\n\n### Plotting\n\nThese options affects all plots:\n\n```\nlabours [--style=white|black] [--backend=] [--size=Y,X]\n```\n\n`--style` sets the general style of the plot (see `labours --help`).\n`--background` changes the plot background to be either white or black.\n`--backend` chooses the Matplotlib backend.\n`--size` sets the size of the figure in inches. The default is `12,9`.\n\n(required in macOS) you can pin the default Matplotlib backend with\n\n```\necho \"backend: TkAgg\" > ~/.matplotlib/matplotlibrc\n```\n\nThese options are effective in burndown charts only:\n\n```\nlabours [--text-size] [--relative]\n```\n\n`--text-size` changes the font size, `--relative` activate the stretched burndown layout.\n\n### Custom plotting backend\n\nIt is possible to output all the information needed to draw the plots in JSON format.\nSimply append `.json` to the output (`-o`) and you are done. The data format is not fully\nspecified and depends on the Python code which generates it. Each JSON file should\ncontain `\"type\"` which reflects the plot kind.\n\n### Caveats\n\n1. Processing all the commits may fail in some rare cases. If you get an error similar to https://github.com/src-d/hercules/issues/106\nplease report there and specify `--first-parent` as a workaround.\n1. Burndown collection may fail with an Out-Of-Memory error. See the next session for the workarounds.\n1. Parsing YAML in Python is slow when the number of internal objects is big. `hercules`' output\nfor the Linux kernel in \"couples\" mode is 1.5 GB and takes more than an hour / 180GB RAM to be\nparsed. However, most of the repositories are parsed within a minute. Try using Protocol Buffers\ninstead (`hercules --pb` and `labours -f pb`).\n1. To speed up yaml parsing\n   ```\n   # Debian, Ubuntu\n   apt install libyaml-dev\n   # macOS\n   brew install yaml-cpp libyaml\n\n   # you might need to re-install pyyaml for changes to make effect\n   pip uninstall pyyaml\n   pip --no-cache-dir install pyyaml\n   ```\n\n### Burndown Out-Of-Memory\n\nIf the analyzed repository is big and extensively uses branching, the burndown stats collection may\nfail with an OOM. You should try the following:\n\n1. Read the repo from disk instead of cloning into memory.\n2. Use `--skip-blacklist` to avoid analyzing the unwanted files. It is also possible to constrain the `--language`.\n3. Use the [hibernation](doc/HIBERNATION.md) feature: `--hibernation-distance 10 --burndown-hibernation-threshold=1000`. Play with those two numbers to start hibernating right before the OOM.\n4. Hibernate on disk: `--burndown-hibernation-disk --burndown-hibernation-dir /path`.\n5. `--first-parent`, you win.\n\n## Roadmap\n\n* [ ] Switch from `src-d/go-git` to `go-git/go-git`. Upgrade the codebase to be compatible with the latest Go version.\n* [ ] Update the docs regarding the copyrights and such.\n* [ ] Fix the reported bugs.\n* [ ] Remove the dependency on Babelfish for parsing the code. It is abandoned and a better alternative should be found.\n* [ ] Remove the ad-hoc analyses added while source{d} was agonizing.\n\n"
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 0.640625,
          "content": "name: \"Hercules Insights\"\ndescription: \"Run various Git history analyses with src-d/hercules\"\nauthor: \"source{d}\"\ninputs:\n  args:\n    description: \"hercules command line arguments\"\n    required: false\n    default: \"--burndown --burndown-people --devs --couples\"\nruns:\n  using: \"docker\"\n  image: \"docker://srcd/hercules:latest\"\n  args:\n    - \"/bin/bash\"\n    - \"-c\"\n    - \"hercules ${{ inputs.args }} --pb . | labours -m all -f pb --disable-projector -o hercules_charts\n       && cd hercules_charts\n       && tar -cf ../hercules_charts.tar * ../hercules_charts_*\n       && cd ..\n       && rm -r hercules_charts\"\nbranding:\n  color: purple\n  icon: bar-chart-2\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "core.go",
          "type": "blob",
          "size": 8.9267578125,
          "content": "package hercules\n\nimport (\n\t\"github.com/spf13/pflag\"\n\t\"gopkg.in/src-d/go-git.v4\"\n\t\"gopkg.in/src-d/go-git.v4/plumbing/object\"\n\t\"gopkg.in/src-d/hercules.v10/internal/core\"\n\t\"gopkg.in/src-d/hercules.v10/internal/plumbing\"\n\t\"gopkg.in/src-d/hercules.v10/internal/plumbing/identity\"\n\t\"gopkg.in/src-d/hercules.v10/internal/plumbing/uast\"\n\t\"gopkg.in/src-d/hercules.v10/internal/yaml\"\n\t_ \"gopkg.in/src-d/hercules.v10/leaves\"          // add burndown and other analyses\n\t_ \"gopkg.in/src-d/hercules.v10/leaves/research\" // add \"research\" analyses\n)\n\n// ConfigurationOptionType represents the possible types of a ConfigurationOption's value.\ntype ConfigurationOptionType = core.ConfigurationOptionType\n\nconst (\n\t// BoolConfigurationOption reflects the boolean value type.\n\tBoolConfigurationOption = core.BoolConfigurationOption\n\t// IntConfigurationOption reflects the integer value type.\n\tIntConfigurationOption = core.IntConfigurationOption\n\t// StringConfigurationOption reflects the string value type.\n\tStringConfigurationOption = core.StringConfigurationOption\n\t// FloatConfigurationOption reflects a floating point value type.\n\tFloatConfigurationOption = core.FloatConfigurationOption\n\t// StringsConfigurationOption reflects the array of strings value type.\n\tStringsConfigurationOption = core.StringsConfigurationOption\n\t// MessageFinalize is the status text reported before calling LeafPipelineItem.Finalize()-s.\n\tMessageFinalize = core.MessageFinalize\n)\n\n// ConfigurationOption allows for the unified, retrospective way to setup PipelineItem-s.\ntype ConfigurationOption = core.ConfigurationOption\n\n// PipelineItem is the interface for all the units in the Git commits analysis pipeline.\ntype PipelineItem = core.PipelineItem\n\n// FeaturedPipelineItem enables switching the automatic insertion of pipeline items on or off.\ntype FeaturedPipelineItem = core.FeaturedPipelineItem\n\n// LeafPipelineItem corresponds to the top level pipeline items which produce the end results.\ntype LeafPipelineItem = core.LeafPipelineItem\n\n// ResultMergeablePipelineItem specifies the methods to combine several analysis results together.\ntype ResultMergeablePipelineItem = core.ResultMergeablePipelineItem\n\n// CommonAnalysisResult holds the information which is always extracted at Pipeline.Run().\ntype CommonAnalysisResult = core.CommonAnalysisResult\n\n// NoopMerger provides an empty Merge() method suitable for PipelineItem.\ntype NoopMerger = core.NoopMerger\n\n// OneShotMergeProcessor provides the convenience method to consume merges only once.\ntype OneShotMergeProcessor = core.OneShotMergeProcessor\n\n// MetadataToCommonAnalysisResult copies the data from a Protobuf message.\nfunc MetadataToCommonAnalysisResult(meta *core.Metadata) *CommonAnalysisResult {\n\treturn core.MetadataToCommonAnalysisResult(meta)\n}\n\n// Pipeline is the core Hercules entity which carries several PipelineItems and executes them.\n// See the extended example of how a Pipeline works in doc.go\ntype Pipeline = core.Pipeline\n\nconst (\n\t// ConfigPipelineDAGPath is the name of the Pipeline configuration option (Pipeline.Initialize())\n\t// which enables saving the items DAG to the specified file.\n\tConfigPipelineDAGPath = core.ConfigPipelineDAGPath\n\t// ConfigPipelineDumpPlan is the name of the Pipeline configuration option (Pipeline.Initialize())\n\t// which outputs the execution plan to stderr.\n\tConfigPipelineDumpPlan = core.ConfigPipelineDumpPlan\n\t// ConfigPipelineDryRun is the name of the Pipeline configuration option (Pipeline.Initialize())\n\t// which disables Configure() and Initialize() invocation on each PipelineItem during the\n\t// Pipeline initialization.\n\t// Subsequent Run() calls are going to fail. Useful with ConfigPipelineDAGPath=true.\n\tConfigPipelineDryRun = core.ConfigPipelineDryRun\n\t// ConfigPipelineCommits is the name of the Pipeline configuration option (Pipeline.Initialize())\n\t// which allows to specify the custom commit sequence. By default, Pipeline.Commits() is used.\n\tConfigPipelineCommits = core.ConfigPipelineCommits\n\t// ConfigTickSize is the number of hours per 'tick'\n\tConfigTickSize = plumbing.ConfigTicksSinceStartTickSize\n\t// ConfigLogger is used to set the logger in all pipeline items.\n\tConfigLogger = core.ConfigLogger\n)\n\n// NewPipeline initializes a new instance of Pipeline struct.\nfunc NewPipeline(repository *git.Repository) *Pipeline {\n\treturn core.NewPipeline(repository)\n}\n\n// LoadCommitsFromFile reads the file by the specified FS path and generates the sequence of commits\n// by interpreting each line as a Git commit hash.\nfunc LoadCommitsFromFile(path string, repository *git.Repository) ([]*object.Commit, error) {\n\treturn core.LoadCommitsFromFile(path, repository)\n}\n\n// ForkSamePipelineItem clones items by referencing the same origin.\nfunc ForkSamePipelineItem(origin PipelineItem, n int) []PipelineItem {\n\treturn core.ForkSamePipelineItem(origin, n)\n}\n\n// ForkCopyPipelineItem clones items by copying them by value from the origin.\nfunc ForkCopyPipelineItem(origin PipelineItem, n int) []PipelineItem {\n\treturn core.ForkCopyPipelineItem(origin, n)\n}\n\n// PipelineItemRegistry contains all the known PipelineItem-s.\ntype PipelineItemRegistry = core.PipelineItemRegistry\n\n// Registry contains all known pipeline item types.\nvar Registry = core.Registry\n\nconst (\n\t// DependencyCommit is the name of one of the three items in `deps` supplied to PipelineItem.Consume()\n\t// which always exists. It corresponds to the currently analyzed commit.\n\tDependencyCommit = core.DependencyCommit\n\t// DependencyIndex is the name of one of the three items in `deps` supplied to PipelineItem.Consume()\n\t// which always exists. It corresponds to the currently analyzed commit's index.\n\tDependencyIndex = core.DependencyIndex\n\t// DependencyIsMerge is the name of one of the three items in `deps` supplied to PipelineItem.Consume()\n\t// which always exists. It indicates whether the analyzed commit is a merge commit.\n\t// Checking the number of parents is not correct - we remove the back edges during the DAG simplification.\n\tDependencyIsMerge = core.DependencyIsMerge\n\t// DependencyAuthor is the name of the dependency provided by identity.Detector.\n\tDependencyAuthor = identity.DependencyAuthor\n\t// DependencyBlobCache identifies the dependency provided by BlobCache.\n\tDependencyBlobCache = plumbing.DependencyBlobCache\n\t// DependencyTick is the name of the dependency which TicksSinceStart provides - the number\n\t// of ticks since the first commit in the analysed sequence.\n\tDependencyTick = plumbing.DependencyTick\n\t// DependencyFileDiff is the name of the dependency provided by FileDiff.\n\tDependencyFileDiff = plumbing.DependencyFileDiff\n\t// DependencyTreeChanges is the name of the dependency provided by TreeDiff.\n\tDependencyTreeChanges = plumbing.DependencyTreeChanges\n\t// DependencyUastChanges is the name of the dependency provided by Changes.\n\tDependencyUastChanges = uast.DependencyUastChanges\n\t// DependencyUasts is the name of the dependency provided by Extractor.\n\tDependencyUasts = uast.DependencyUasts\n\t// FactCommitsByTick contains the mapping between tick indices and the corresponding commits.\n\tFactCommitsByTick = plumbing.FactCommitsByTick\n\t// FactIdentityDetectorPeopleCount is the name of the fact which is inserted in\n\t// identity.Detector.Configure(). It is equal to the overall number of unique authors\n\t// (the length of ReversedPeopleDict).\n\tFactIdentityDetectorPeopleCount = identity.FactIdentityDetectorPeopleCount\n\t// FactIdentityDetectorPeopleDict is the name of the fact which is inserted in\n\t// identity.Detector.Configure(). It corresponds to identity.Detector.PeopleDict - the mapping\n\t// from the signatures to the author indices.\n\tFactIdentityDetectorPeopleDict = identity.FactIdentityDetectorPeopleDict\n\t// FactIdentityDetectorReversedPeopleDict is the name of the fact which is inserted in\n\t// identity.Detector.Configure(). It corresponds to identity.Detector.ReversedPeopleDict -\n\t// the mapping from the author indices to the main signature.\n\tFactIdentityDetectorReversedPeopleDict = identity.FactIdentityDetectorReversedPeopleDict\n)\n\n// FileDiffData is the type of the dependency provided by plumbing.FileDiff.\ntype FileDiffData = plumbing.FileDiffData\n\n// CachedBlob allows to explicitly cache the binary data associated with the Blob object.\n// Such structs are returned by DependencyBlobCache.\ntype CachedBlob = plumbing.CachedBlob\n\n// SafeYamlString escapes the string so that it can be reliably used in YAML.\nfunc SafeYamlString(str string) string {\n\treturn yaml.SafeString(str)\n}\n\n// PathifyFlagValue changes the type of a string command line argument to \"path\".\nfunc PathifyFlagValue(flag *pflag.Flag) {\n\tcore.PathifyFlagValue(flag)\n}\n\n// EnablePathFlagTypeMasquerade changes the type of all \"path\" command line arguments from \"string\"\n// to \"path\". This operation cannot be canceled and is intended to be used for better --help output.\nfunc EnablePathFlagTypeMasquerade() {\n\tcore.EnablePathFlagTypeMasquerade()\n}\n\n// Logger is the Hercules logging interface\ntype Logger core.Logger\n\n// NewLogger returns an instance of the default Hercules logger\nfunc NewLogger() core.Logger { return core.NewLogger() }\n"
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 2.4638671875,
          "content": "/*\nPackage hercules contains the functions which are needed to gather various statistics\nfrom a Git repository.\n\nThe analysis is expressed in a form of the tree: there are nodes - \"pipeline items\" - which\nrequire some other nodes to be executed prior to selves and in turn provide the data for\ndependent nodes. There are several service items which do not produce any useful\nstatistics but rather provide the requirements for other items. The top-level items\ninclude:\n\n- BurndownAnalysis - line burndown statistics for project, files and developers.\n\n- CouplesAnalysis - coupling statistics for files and developers.\n\n- ShotnessAnalysis - structural hotness and couples, by any Babelfish UAST XPath (functions by default).\n\nThe typical API usage is to initialize the Pipeline class:\n\n  import \"gopkg.in/src-d/go-git.v4\"\n\n  var repository *git.Repository\n  // ...initialize repository...\n  pipeline := hercules.NewPipeline(repository)\n\nThen add the required analysis:\n\n  ba := pipeline.DeployItem(&hercules.BurndownAnalysis{}).(hercules.LeafPipelineItem)\n\nThis call will add all the needed intermediate pipeline items. Then link and execute the analysis tree:\n\n  pipeline.Initialize(nil)\n  result, err := pipeline.Run(pipeline.Commits(false))\n\nFinally extract the result:\n\n  result := result[ba].(hercules.BurndownResult)\n\nThe actual usage example is cmd/hercules/root.go - the command line tool's code.\n\nYou can provide additional options via `facts` on initialization. For example,\nto provide your own logger, enable people-tracking, and set a custom tick size:\n\n  pipe.Initialize(map[string]interface{}{\n    hercules.ConfigLogger:            zap.NewExample().Sugar(),\n    hercules.ConfigTickSize:          12,\n    leaves.ConfigBurndownTrackPeople: true,\n  })\n\nHercules depends heavily on https://github.com/src-d/go-git and leverages the\ndiff algorithm through https://github.com/sergi/go-diff.\n\nBesides, BurndownAnalysis involves File and RBTree. These are low level data structures\nwhich enable incremental blaming. File carries an instance of RBTree and the current line\nburndown state. RBTree implements the red-black balanced binary tree and is\nbased on https://github.com/yasushi-saito/rbtree.\n\nCoupling stats are supposed to be further processed rather than observed directly.\nlabours.py uses Swivel embeddings and visualises them in Tensorflow Projector.\n\nShotness analysis as well as other UAST-featured items relies on\n[Babelfish](https://doc.bblf.sh) and requires the server to be running.\n*/\npackage hercules\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "fix_yaml_unicode.py",
          "type": "blob",
          "size": 0.1435546875,
          "content": "import sys\n\nimport yaml\n\n\nyaml_invalid = yaml.reader.Reader.NON_PRINTABLE\n\nfor line in sys.stdin:\n    sys.stdout.write(yaml_invalid.sub(\"\", line))\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.4921875,
          "content": "module gopkg.in/src-d/hercules.v10\n\ngo 1.12\n\nrequire (\n\tgithub.com/BurntSushi/toml v0.3.1 // indirect\n\tgithub.com/Jeffail/tunny v0.0.0-20180304204616-59cfa8fcb19f\n\tgithub.com/Masterminds/semver v0.0.0-20180807142431-c84ddcca87bf // indirect\n\tgithub.com/Masterminds/sprig v0.0.0-20180725212158-77bb58b7f5e1\n\tgithub.com/antchfx/xpath v0.0.0-20180922041825-3de91f3991a1 // indirect\n\tgithub.com/aokoli/goutils v1.0.1 // indirect\n\tgithub.com/fatih/camelcase v1.0.0\n\tgithub.com/fatih/color v1.7.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.0\n\tgithub.com/google/uuid v0.0.0-20180828181555-e704694aed0e // indirect\n\tgithub.com/grpc-ecosystem/grpc-opentracing v0.0.0-20180507213350-8e809c8a8645 // indirect\n\tgithub.com/huandu/xstrings v0.0.0-20180906151751-8bbcf2f9ccb5 // indirect\n\tgithub.com/imdario/mergo v0.3.6 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.2 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.0-20170510074858-97311d9f7767 // indirect\n\tgithub.com/mcuadros/go-lookup v0.0.0-20171110082742-5650f26be767 // indirect\n\tgithub.com/minio/highwayhash v0.0.0-20180501080913-85fc8a2dacad\n\tgithub.com/mitchellh/go-homedir v1.0.0\n\tgithub.com/neurosnap/sentences v1.0.6 // indirect\n\tgithub.com/opentracing/opentracing-go v1.0.2 // indirect\n\tgithub.com/pkg/errors v0.8.0\n\tgithub.com/sergi/go-diff v1.0.0\n\tgithub.com/smacker/go-tree-sitter v0.0.0-20191127230340-5368dabef05e // indirect\n\tgithub.com/spf13/cobra v0.0.3\n\tgithub.com/spf13/pflag v1.0.3\n\tgithub.com/src-d/enry/v2 v2.1.0\n\tgithub.com/src-d/imports v0.0.0-20191128152346-bf22b73550b0\n\tgithub.com/stretchr/objx v0.2.0 // indirect\n\tgithub.com/stretchr/testify v1.4.0\n\tgithub.com/tensorflow/tensorflow v0.0.0-20180308082300-f73d7c90ed05 // indirect\n\tgolang.org/x/crypto v0.0.0-20180904163835-0709b304e793\n\tgoogle.golang.org/grpc v1.16.0 // indirect\n\tgopkg.in/bblfsh/client-go.v3 v3.2.0\n\tgopkg.in/bblfsh/sdk.v1 v1.17.0 // indirect\n\tgopkg.in/bblfsh/sdk.v2 v2.14.1\n\tgopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 // indirect\n\tgopkg.in/cheggaaa/pb.v1 v1.0.20\n\tgopkg.in/neurosnap/sentences.v1 v1.0.6 // indirect\n\tgopkg.in/src-d/go-billy-siva.v4 v4.3.0\n\tgopkg.in/src-d/go-billy.v4 v4.2.1\n\tgopkg.in/src-d/go-errors.v1 v1.0.0 // indirect\n\tgopkg.in/src-d/go-git.v4 v4.10.0\n\tgopkg.in/src-d/go-siva.v1 v1.4.0 // indirect\n\tgopkg.in/vmarkovtsev/BiDiSentiment.v1 v1.0.0-20180311115214-75f168ddf161\n\tgopkg.in/yaml.v2 v2.2.7 // indirect\n)\n\nreplace github.com/smacker/go-tree-sitter => github.com/dennwc/go-tree-sitter v0.0.0-20191127160809-cea124db9399\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 16.4287109375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1 h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Jeffail/tunny v0.0.0-20180304204616-59cfa8fcb19f h1:oj65D2psW7CqQj2g8W9/0fUjYGAhbMH9M0Spsn/Wb4c=\ngithub.com/Jeffail/tunny v0.0.0-20180304204616-59cfa8fcb19f/go.mod h1:BX3q3G70XX0UmIkDWfDHoDRquDS1xFJA5VTbMf+14wM=\ngithub.com/Masterminds/semver v0.0.0-20180807142431-c84ddcca87bf h1:BMUJnVJI5J506LOcyGHEvbCocMHAmKTRcG6CMAwGFYU=\ngithub.com/Masterminds/semver v0.0.0-20180807142431-c84ddcca87bf/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/Masterminds/sprig v0.0.0-20180725212158-77bb58b7f5e1 h1:KxhCvkM35xYIZiEquS2iPL7kvugRT5FxUEugHqHr3+Y=\ngithub.com/Masterminds/sprig v0.0.0-20180725212158-77bb58b7f5e1/go.mod h1:y6hNFY5UBTIWBxnzTeuNhlNS5hqE0NB0E6fgfo2Br3o=\ngithub.com/alcortesm/tgz v0.0.0-20161220082320-9c5fe88206d7 h1:uSoVVbwJiQipAclBbw+8quDsfcvFjOpI5iCf4p/cqCs=\ngithub.com/alcortesm/tgz v0.0.0-20161220082320-9c5fe88206d7/go.mod h1:6zEj6s6u/ghQa61ZWa/C2Aw3RkjiTBOix7dkqa1VLIs=\ngithub.com/anmitsu/go-shlex v0.0.0-20161002113705-648efa622239 h1:kFOfPq6dUM1hTo4JG6LR5AXSUEsOjtdm0kw0FtQtMJA=\ngithub.com/anmitsu/go-shlex v0.0.0-20161002113705-648efa622239/go.mod h1:2FmKhYUyUczH0OGQWaF5ceTx0UBShxjsH6f8oGKYe2c=\ngithub.com/antchfx/xpath v0.0.0-20180922041825-3de91f3991a1 h1:nt4RMjvM9pJ5HR7WkCeAnDz1pgHbLT2vxICalUTWcJU=\ngithub.com/antchfx/xpath v0.0.0-20180922041825-3de91f3991a1/go.mod h1:Yee4kTMuNiPYJ7nSNorELQMr1J33uOpXDMByNYhvtNk=\ngithub.com/aokoli/goutils v1.0.1 h1:7fpzNGoJ3VA8qcrm++XEE1QUe0mIwNeLa02Nwq7RDkg=\ngithub.com/aokoli/goutils v1.0.1/go.mod h1:SijmP0QR8LtwsmDs8Yii5Z/S4trXFGFC2oO5g9DP+DQ=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dennwc/go-tree-sitter v0.0.0-20191127160809-cea124db9399 h1:s9UkbLl+1Wq+sQf0fe3qFRKB/J6Czag4PCW4Ut+/k4U=\ngithub.com/dennwc/go-tree-sitter v0.0.0-20191127160809-cea124db9399/go.mod h1:EiUuVMUfLQj8Sul+S8aKWJwQy7FRYnJCO2EWzf8F5hk=\ngithub.com/emirpasic/gods v1.9.0 h1:rUF4PuzEjMChMiNsVjdI+SyLu7rEqpQ5reNFnhC7oFo=\ngithub.com/emirpasic/gods v1.9.0/go.mod h1:YfzfFFoVP/catgzJb4IKIqXjX78Ha8FMSDh3ymbK86o=\ngithub.com/fatih/camelcase v1.0.0 h1:hxNvNX/xYBp0ovncs8WyWZrOrpBNub/JfaMvbURyft8=\ngithub.com/fatih/camelcase v1.0.0/go.mod h1:yN2Sb0lFhZJUdVvtELVWefmrXpuZESvPmqwoZc+/fpc=\ngithub.com/fatih/color v1.7.0 h1:DkWD4oS2D8LGGgTQ6IvwJJXSL5Vp2ffcQg58nFV38Ys=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/flynn/go-shlex v0.0.0-20150515145356-3f9db97f8568 h1:BHsljHzVlRcyQhjrss6TZTdY2VfCqZPbv5k3iBFa2ZQ=\ngithub.com/flynn/go-shlex v0.0.0-20150515145356-3f9db97f8568/go.mod h1:xEzjJPgXI435gkrCt3MPfRiAkVrwSbHsst4LCFVfpJc=\ngithub.com/gliderlabs/ssh v0.1.1 h1:j3L6gSLQalDETeEg/Jg0mGY0/y/N6zI2xX1978P0Uqw=\ngithub.com/gliderlabs/ssh v0.1.1/go.mod h1:U7qILu1NlMHj9FlMhZLlkCdDnU1DBEAqr0aevW3Awn0=\ngithub.com/gogo/protobuf v1.3.0 h1:G8O7TerXerS4F6sx9OV7/nRfJdnXgHZu/S/7F2SN+UE=\ngithub.com/gogo/protobuf v1.3.0/go.mod h1:SlYgWuQ5SjCEi6WLHjHCa1yvBfUnHcTbrrZtXPKa29o=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:tluoj9z5200jBnyusfRPU2LqT6J+DAorxEvtC7LHB+E=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/go-cmp v0.2.0 h1:+dTQ8DZQJz0Mb/HjFlkptS1FeQ4cWSnN941F8aEG4SQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/uuid v0.0.0-20180828181555-e704694aed0e h1:6zFQ030QoMIxZB6OutG42h2X3eeDWLx0JHvnq8Rd2+A=\ngithub.com/google/uuid v0.0.0-20180828181555-e704694aed0e/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/grpc-ecosystem/grpc-opentracing v0.0.0-20180507213350-8e809c8a8645 h1:MJG/KsmcqMwFAkh8mTnAwhyKoB+sTAnY4CACC110tbU=\ngithub.com/grpc-ecosystem/grpc-opentracing v0.0.0-20180507213350-8e809c8a8645/go.mod h1:6iZfnjpejD4L/4DwD7NryNaJyCQdzwWwH2MWhCA90Kw=\ngithub.com/huandu/xstrings v0.0.0-20180906151751-8bbcf2f9ccb5 h1:JpFoh6mXPEoUpIgH3hg22MgQg+qwMU1eGdnWUII9csA=\ngithub.com/huandu/xstrings v0.0.0-20180906151751-8bbcf2f9ccb5/go.mod h1:DvyZB1rfVYsBIigL8HwpZgxHwXozlTgGqn63UyNX5k4=\ngithub.com/imdario/mergo v0.3.6 h1:xTNEAn+kxVO7dTZGu0CegyqKZmoWFI0rF8UxjlB2d28=\ngithub.com/imdario/mergo v0.3.6/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=\ngithub.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\ngithub.com/kevinburke/ssh_config v0.0.0-20180830205328-81db2a75821e h1:RgQk53JHp/Cjunrr1WlsXSZpqXn+uREuHvUVcK82CV8=\ngithub.com/kevinburke/ssh_config v0.0.0-20180830205328-81db2a75821e/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/mattn/go-colorable v0.1.2 h1:/bC9yWikZXAL9uJdulbSfyVNIR3n3trXl+v8+1sx8mU=\ngithub.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-isatty v0.0.8 h1:HLtExJ+uU2HOZ+wI0Tt5DtUDrx8yhUqDcp7fYERX4CE=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-runewidth v0.0.0-20170510074858-97311d9f7767 h1:Nk2R0tWpD2RdkQ+53zE6kWnSGuhQyDlnOs2MPiqVubE=\ngithub.com/mattn/go-runewidth v0.0.0-20170510074858-97311d9f7767/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mcuadros/go-lookup v0.0.0-20171110082742-5650f26be767 h1:BrhJNdEFWGuiJk/3/SwsG5Rex3zjFxYsDi2bpd7382Y=\ngithub.com/mcuadros/go-lookup v0.0.0-20171110082742-5650f26be767/go.mod h1:ct+byCpkFokm4J0tiuAvB8cf2ttm6GcCe89Yr25nGKg=\ngithub.com/minio/highwayhash v0.0.0-20180501080913-85fc8a2dacad h1:L+8skVz2lusCbtlalLXmJp+TK8XaGAsZ3utSC3k5Jc0=\ngithub.com/minio/highwayhash v0.0.0-20180501080913-85fc8a2dacad/go.mod h1:NL8wme5P5MoscwAkXfGroz3VgpCdhBw3KYOu5mEsvpU=\ngithub.com/mitchellh/go-homedir v1.0.0 h1:vKb8ShqSby24Yrqr/yDYkuFz8d0WUjys40rvnGC8aR0=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/neurosnap/sentences v1.0.6 h1:iBVUivNtlwGkYsJblWV8GGVFmXzZzak907Ci8aA0VTE=\ngithub.com/neurosnap/sentences v1.0.6/go.mod h1:pg1IapvYpWCJJm/Etxeh0+gtMf1rI1STY9S7eUCPbDc=\ngithub.com/opentracing/opentracing-go v1.0.2 h1:3jA2P6O1F9UOrWVpwrIo17pu01KWvNWg4X946/Y5Zwg=\ngithub.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/pelletier/go-buffruneio v0.2.0 h1:U4t4R6YkofJ5xHm3dJzuRpPZ0mr5MMCoAWooScCR7aA=\ngithub.com/pelletier/go-buffruneio v0.2.0/go.mod h1:JkE26KsDizTr40EUHkXVtNPvgGtbSNq5BcowyYOWdKo=\ngithub.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/smacker/go-tree-sitter v0.0.0-20191120151204-b4adc5db3a99/go.mod h1:EiUuVMUfLQj8Sul+S8aKWJwQy7FRYnJCO2EWzf8F5hk=\ngithub.com/spf13/cobra v0.0.3 h1:ZlrZ4XsMRm04Fr5pSFxBgfND2EBVa1nLpiy1stUsX/8=\ngithub.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\ngithub.com/spf13/pflag v1.0.3 h1:zPAT6CGy6wXeQ7NtTnaTerfKOsV6V6F8agHXFiazDkg=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/src-d/enry/v2 v2.1.0 h1:z1L8t+B8bh3mmjPkJrgOTnVRpFGmTPJsplHX9wAn6BI=\ngithub.com/src-d/enry/v2 v2.1.0/go.mod h1:qQeCMRwzMF3ckeGr+h0tJLdxXnq+NVZsIDMELj0t028=\ngithub.com/src-d/gcfg v1.4.0 h1:xXbNR5AlLSA315x2UO+fTSSAXCDf+Ar38/6oyGbDKQ4=\ngithub.com/src-d/gcfg v1.4.0/go.mod h1:p/UMsR43ujA89BJY9duynAwIpvqEujIH/jFlfL7jWoI=\ngithub.com/src-d/go-oniguruma v1.1.0 h1:EG+Nm5n2JqWUaCjtM0NtutPxU7ZN5Tp50GWrrV8bTww=\ngithub.com/src-d/go-oniguruma v1.1.0/go.mod h1:chVbff8kcVtmrhxtZ3yBVLLquXbzCS6DrxQaAK/CeqM=\ngithub.com/src-d/imports v0.0.0-20191128121413-18ad3ce8f5f3 h1:Zz6PYzQw+Ks72Xj5L+xdfCOzFvAprVYJOu8IK4HpGo0=\ngithub.com/src-d/imports v0.0.0-20191128121413-18ad3ce8f5f3/go.mod h1:ISTW49VJmFByM3SNgvDoC/6iZCWoBGaEpsSw3XCArcg=\ngithub.com/src-d/imports v0.0.0-20191128152346-bf22b73550b0 h1:EAW7jKWZnLYRlBDvXI294w2R8yzXtMSPL+Q8XdJEST0=\ngithub.com/src-d/imports v0.0.0-20191128152346-bf22b73550b0/go.mod h1:ISTW49VJmFByM3SNgvDoC/6iZCWoBGaEpsSw3XCArcg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0 h1:2E4SXV/wtOkTonXsotYi4li6zVWxYlZuYNCXe9XRJyk=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/tensorflow/tensorflow v0.0.0-20180308082300-f73d7c90ed05 h1:s3/JFc2zHAyc2QKv4yb7hbiFjx8g3F8DVr2HaP9kdBY=\ngithub.com/tensorflow/tensorflow v0.0.0-20180308082300-f73d7c90ed05/go.mod h1:itOSERT4trABok4UOoG+X4BoKds9F3rIsySdn+Lvu90=\ngithub.com/toqueteos/trie v1.0.0 h1:8i6pXxNUXNRAqP246iibb7w/pSFquNTQ+uNfriG7vlk=\ngithub.com/toqueteos/trie v1.0.0/go.mod h1:Ywk48QhEqhU1+DwhMkJ2x7eeGxDHiGkAdc9+0DYcbsM=\ngithub.com/xanzy/ssh-agent v0.2.0 h1:Adglfbi5p9Z0BmK2oKU9nTG+zKfniSfnaMYB+ULd+Ro=\ngithub.com/xanzy/ssh-agent v0.2.0/go.mod h1:0NyE30eGUDliuLEHJgYte/zncp2zdTStcOnWhgSqHD8=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793 h1:u+LnwYTOOW7Ukr/fppxEb1Nwz0AtPflrblfvUudpo+I=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd h1:nTDtHvHSdCn1m6ITfMRqtOd/9+7a3s8RBNOZ3eYZzJA=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f h1:wMNYb4v58l5UBM7MYRLPG6ZhfOqbKu7X5eyFl8ZhKvA=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180903190138-2b024373dcd9/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223 h1:DH4skfRX4EBpamg7iV4ZlCpblAHI6s6TDM39bFZumv8=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8 h1:Nw54tB0rB7hY/N0NQvRW8DG4Yk3Q6T9cu9RcFQDu1tc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/grpc v1.16.0 h1:dz5IJGuC2BB7qXR5AyHNwAUBhZscK2xVez7mznh72sY=\ngoogle.golang.org/grpc v1.16.0/go.mod h1:0JHn/cJsOMiMfNA9+DeHDlAU7KAAB5GDlYFpa9MZMio=\ngopkg.in/bblfsh/client-go.v3 v3.2.0 h1:07e26b+ghVCIxc+Kbjs1qOMf/qFDzeDemy8+i1k4VJQ=\ngopkg.in/bblfsh/client-go.v3 v3.2.0/go.mod h1:L6DKtaGVCCp07JL8MO/8OuI6Bsyb2BuhW2hqUksfc8Y=\ngopkg.in/bblfsh/sdk.v1 v1.17.0 h1:Ez/4P0S0Zaq30iZKfiTlhOtqMx6dfQHMTYpqKFvnv4A=\ngopkg.in/bblfsh/sdk.v1 v1.17.0/go.mod h1:C50G07MDlG8LaS4El1h/G7fjz8Ho9VNmH68Dt3cVVnQ=\ngopkg.in/bblfsh/sdk.v2 v2.14.1 h1:QHwUujeUiLtzm+EsPD6+KbVEpSq9QU9IDMjLhkGJ9VE=\ngopkg.in/bblfsh/sdk.v2 v2.14.1/go.mod h1:H/uxybs1j7MNuEEoiht9VzYkuQ7aUUjTtEUBtKfeUkM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/cheggaaa/pb.v1 v1.0.20 h1:kgQVoCjFPiI1fNjdWthabnG1rOAb+/7Z6KeGk2aeZ/w=\ngopkg.in/cheggaaa/pb.v1 v1.0.20/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=\ngopkg.in/neurosnap/sentences.v1 v1.0.6 h1:v7ElyP020iEZQONyLld3fHILHWOPs+ntzuQTNPkul8E=\ngopkg.in/neurosnap/sentences.v1 v1.0.6/go.mod h1:YlK+SN+fLQZj+kY3r8DkGDhDr91+S3JmTb5LSxFRQo0=\ngopkg.in/src-d/go-billy-siva.v4 v4.3.0 h1:bin2telR2qmBfHfTb61SboE4M1LjofSN0g6vn4Tmdck=\ngopkg.in/src-d/go-billy-siva.v4 v4.3.0/go.mod h1:4wKeCzOCSsdyFeM5+58M6ObU6FM+lZT12p7zm7A+9n0=\ngopkg.in/src-d/go-billy.v4 v4.2.1 h1:omN5CrMrMcQ+4I8bJ0wEhOBPanIRWzFC953IiXKdYzo=\ngopkg.in/src-d/go-billy.v4 v4.2.1/go.mod h1:tm33zBoOwxjYHZIE+OV8bxTWFMJLrconzFMd38aARFk=\ngopkg.in/src-d/go-errors.v1 v1.0.0 h1:cooGdZnCjYbeS1zb1s6pVAAimTdKceRrpn7aKOnNIfc=\ngopkg.in/src-d/go-errors.v1 v1.0.0/go.mod h1:q1cBlomlw2FnDBDNGlnh6X0jPihy+QxZfMMNxPCbdYg=\ngopkg.in/src-d/go-git-fixtures.v3 v3.1.1 h1:XWW/s5W18RaJpmo1l0IYGqXKuJITWRFuA45iOf1dKJs=\ngopkg.in/src-d/go-git-fixtures.v3 v3.1.1/go.mod h1:dLBcvytrw/TYZsNTWCnkNF2DSIlzWYqTe3rJR56Ac7g=\ngopkg.in/src-d/go-git.v4 v4.10.0 h1:NWjTJTQnk8UpIGlssuefyDZ6JruEjo5s88vm88uASbw=\ngopkg.in/src-d/go-git.v4 v4.10.0/go.mod h1:Vtut8izDyrM8BUVQnzJ+YvmNcem2J89EmfZYCkLokZk=\ngopkg.in/src-d/go-siva.v1 v1.4.0 h1:OBNXWqhKfEBE3lKkmhGqnp0Y2I2bmgez8NGuc8WhAYw=\ngopkg.in/src-d/go-siva.v1 v1.4.0/go.mod h1:tk1jnIXawd/PTlRNWdr5V5lC0PttNJmu1fv7wt7IZlw=\ngopkg.in/toqueteos/substring.v1 v1.0.2 h1:urLqCeMm6x/eTuQa1oZerNw8N1KNOIp5hD5kGL7lFsE=\ngopkg.in/toqueteos/substring.v1 v1.0.2/go.mod h1:Eb2Z1UYehlVK8LYW2WBVR2rwbujsz3aX8XDrM1vbNew=\ngopkg.in/vmarkovtsev/BiDiSentiment.v1 v1.0.0-20180311115214-75f168ddf161 h1:cWx6/seC2BJsrwWbbEexCLjFb1MFU5n2bjcPt6owexw=\ngopkg.in/vmarkovtsev/BiDiSentiment.v1 v1.0.0-20180311115214-75f168ddf161/go.mod h1:CGBSPZicJmnv2dLqeOUkcvQhWVOfRENoRTsdspc0JZ0=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.7 h1:VUgggvou5XRW9mHwD/yXxIYSMtY0zoKQf/v226p2nyo=\ngopkg.in/yaml.v2 v2.2.7/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\nhonnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "leaves",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.go",
          "type": "blob",
          "size": 0.4345703125,
          "content": "package hercules\n\nimport (\n\t\"reflect\"\n\t\"strconv\"\n\t\"strings\"\n)\n\n// BinaryGitHash is the Git hash of the Hercules binary file which is executing.\nvar BinaryGitHash = \"<unknown>\"\n\n// BinaryVersion is Hercules' API version. It matches the package name.\nvar BinaryVersion = 0\n\ntype versionProbe struct{}\n\nfunc init() {\n\tparts := strings.Split(reflect.TypeOf(versionProbe{}).PkgPath(), \".\")\n\tBinaryVersion, _ = strconv.Atoi(parts[len(parts)-1][1:])\n}\n"
        },
        {
          "name": "version_test.go",
          "type": "blob",
          "size": 0.154296875,
          "content": "package hercules\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestVersion(t *testing.T) {\n\tassert.Equal(t, BinaryVersion, 10) // v10\n}\n"
        }
      ]
    }
  ]
}