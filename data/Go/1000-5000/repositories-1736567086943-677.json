{
  "metadata": {
    "timestamp": 1736567086943,
    "page": 677,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NebulousLabs/Sia",
      "stars": 2705,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# vim\n*.swp\n*.swo\n\n# build artifacts\ncover\nrelease\n\n# pdflatex\ndoc/whitepaper.aux\ndoc/whitepaper.log\ndoc/whitepaper.pdf\n\n# IntelliJ IDEA\n.idea\nsia.iml\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2880859375,
          "content": "language: go\n\nos:\n  - linux\n\ngo:\n  - \"1.10\"\n\ninstall:\n  - make dependencies\n  - test -z \"$(go fmt ./...)\"\n  - glyphcheck ./...\n  - make dev\n\nscript: make test && make test-long && make cover && make bench\n\nsudo: false\n\nbranches:\n  only:\n    - master\n    - staging\n\nnotifications:\n  email: false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.3857421875,
          "content": "Version History\n---------------\n\nMay 2018:\n\nv1.3.3 (patch release)\n- Add Streaming API endpoints\n- Faster contract formation\n- Improved wallet scaling\n\nMarch 2018:\n\nv1.3.2 (patch release)\n- Improve renter throughput and stability\n- Reduce host I/O when idle\n- Add /tpool/confirmed endpoint\n\nDecember 2017:\n\nv1.3.1 (patch release)\n- Add new efficient, reliable contract format\n- Faster and smoother file repairs\n- Fix difficulty adjustment hardfork\n\nJuly 2017:\n\nv1.3.0 (minor release)\n- Add remote file repair\n- Add wallet 'lookahead'\n- Introduce difficulty hardfork\n\nMay 2017:\n\nv1.2.2 (patch release)\n- Faster + smaller wallet database\n- Gracefully handle missing storage folders\n- >2500 lines of new testing + bug fixes\n\nApril 2017:\n\nv1.2.1 (patch release)\n- Faster host upgrading\n- Fix wallet bugs\n- Add siac command to cancel allowance\n\nv1.2.0 (minor release)\n- Host overhaul\n- Wallet overhaul\n- Tons of bug fixes and efficiency improvements\n\nMarch 2017:\n\nv1.1.2 (patch release)\n- Add async download endpoint\n- Fix host storage proof bug\n\nFebruary 2017:\n\nv1.1.1 (patch release)\n- Renter now performs much better at scale\n- Myriad HostDB improvements\n- Add siac command to support storage leaderboard\n\nJanuary 2017:\n\nv1.1.0 (minor release)\n- Greatly improved upload/download speeds\n- Wallet now regularly \"defragments\"\n- Better contract metrics\n\nDecember 2016:\n\nv1.0.4 (LTS release)\n\nOctober 2016:\n\nv1.0.3 (patch release)\n- Greatly improved renter stability\n- Smarter HostDB\n- Numerous minor bug fixes\n\nJuly 2016:\n\nv1.0.1 (patch release)\n- Restricted API address to localhost\n- Fixed renter/host desynchronization\n- Fixed host silently refusing new contracts\n\nJune 2016:\n\nv1.0.0 (major release)\n- Finalized API routes\n- Add optional API authentication\n- Improve automatic contract management\n\nMay 2016:\n\nv0.6.0 (minor release)\n- Switched to long-form renter contracts\n- Added support for multiple hosting folders\n- Hosts are now identified by their public key\n\nJanuary 2016:\n\nv0.5.2 (patch release)\n- Faster initial blockchain download\n- Introduced headers-only broadcasting\n\nv0.5.1 (patch release)\n- Fixed bug severely impacting performance\n- Restored (but deprecated) some siac commands\n- Added modules flag, allowing modules to be disabled\n\nv0.5.0 (minor release)\n- Major API changes to most modules\n- Automatic contract renewal\n- Data on inactive hosts is reuploaded\n- Support for folder structure\n- Smarter host\n\nOctober 2015:\n\nv0.4.8 (patch release)\n- Restored compatibility with v0.4.6\n\nv0.4.7 (patch release)\n- Dropped support for v0.3.3.x\n\nv0.4.6 (patch release)\n- Removed over-aggressive consistency check\n\nv0.4.5 (patch release)\n- Fixed last prominent bug in block database\n- Closed some dangling resource handles\n\nv0.4.4 (patch release)\n- Uploading is much more reliable\n- Price estimations are more accurate\n- Bumped filesize limit to 20 GB\n\nv0.4.3 (patch release)\n- Block database is now faster and more stable\n- Wallet no longer freezes when unlocked during IBD\n- Optimized block encoding/decoding\n\nSeptember 2015:\n\nv0.4.2 (patch release)\n- HostDB is now smarter\n- Tweaked renter contract creation\n\nv0.4.1 (patch release)\n- Added support for loading v0.3.3.x wallets\n- Better pruning of dead nodes\n- Improve database consistency\n\nAugust 2015:\n\nv0.4.0: Second stable currency release.\n- Wallets are encrypted and generated from seed phrases\n- Files are erasure-coded and transferred in parallel\n- The blockchain is now fully on-disk\n- Added UPnP support\n\nJune 2015:\n\nv0.3.3.3 (patch release)\n- Host announcements can be \"forced\"\n- Wallets can be merged\n- Unresponsive addresses are pruned from the node list\n\nv0.3.3.2 (patch release)\n- Siafunds can be loaded and sent\n- Added block explorer\n- Patched two critical security vulnerabilities\n\nv0.3.3.1 (hotfix)\n- Mining API sends headers instead of entire blocks\n- Slashed default hosting price\n\nv0.3.3: First stable currency release.\n- Set release target\n- Added progress bars to uploads\n- Rigorous testing of consensus code\n\nMay 2015:\n\nv0.3.2: Fourth open beta release.\n- Switched encryption from block cipher to stream cipher\n- Updates are now signed\n- Added API calls to support external miners\n\nv0.3.1: Third open beta release.\n- Blocks are now stored on-disk in a database\n- Files can be shared via .sia files or ASCII-encoded data\n- RPCs are now multiplexed over one physical connection\n\nMarch 2015:\n\nv0.3.0: Second open beta release.\n\nJan 2015:\n\nv0.2.0: First open beta release.\n\nDec 2014:\n\nv0.1.0: Closed beta release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Nebulous Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.1591796875,
          "content": "# These variables get inserted into ./build/commit.go\nBUILD_TIME=$(shell date)\nGIT_REVISION=$(shell git rev-parse --short HEAD)\nGIT_DIRTY=$(shell git diff-index --quiet HEAD -- || echo \"âœ—-\")\n\nldflags= -X github.com/NebulousLabs/Sia/build.GitRevision=${GIT_DIRTY}${GIT_REVISION} \\\n-X \"github.com/NebulousLabs/Sia/build.BuildTime=${BUILD_TIME}\"\n\n# all will build and install release binaries\nall: release\n\n# dependencies installs all of the dependencies that are required for building\n# Sia.\ndependencies:\n\t# Consensus Dependencies\n\tgo get -u github.com/NebulousLabs/demotemutex\n\tgo get -u github.com/NebulousLabs/fastrand\n\tgo get -u github.com/NebulousLabs/merkletree\n\tgo get -u github.com/NebulousLabs/bolt\n\tgo get -u golang.org/x/crypto/blake2b\n\tgo get -u golang.org/x/crypto/ed25519\n\t# Module + Daemon Dependencies\n\tgo get -u github.com/NebulousLabs/entropy-mnemonics\n\tgo get -u github.com/NebulousLabs/errors\n\tgo get -u github.com/NebulousLabs/go-upnp\n\tgo get -u github.com/NebulousLabs/ratelimit\n\tgo get -u github.com/NebulousLabs/threadgroup\n\tgo get -u github.com/NebulousLabs/writeaheadlog\n\tgo get -u github.com/klauspost/reedsolomon\n\tgo get -u github.com/julienschmidt/httprouter\n\tgo get -u github.com/inconshreveable/go-update\n\tgo get -u github.com/kardianos/osext\n\tgo get -u github.com/inconshreveable/mousetrap\n\t# Frontend Dependencies\n\tgo get -u golang.org/x/crypto/ssh/terminal\n\tgo get -u github.com/spf13/cobra/...\n\t# Developer Dependencies\n\tgo install -race std\n\tgo get -u github.com/client9/misspell/cmd/misspell\n\tgo get -u github.com/golang/lint/golint\n\tgo get -u github.com/NebulousLabs/glyphcheck\n\n# pkgs changes which packages the makefile calls operate on. run changes which\n# tests are run during testing.\nrun = .\npkgs = ./build ./cmd/siac ./cmd/siad ./compatibility ./crypto ./encoding ./modules ./modules/consensus ./modules/explorer \\\n       ./modules/gateway ./modules/host ./modules/host/contractmanager ./modules/renter ./modules/renter/contractor       \\\n       ./modules/renter/hostdb ./modules/renter/hostdb/hosttree ./modules/renter/proto ./modules/miner ./modules/wallet   \\\n       ./modules/transactionpool ./node ./node/api ./persist ./siatest ./siatest/consensus ./siatest/renter               \\\n       ./siatest/wallet ./node/api/server ./sync ./types\n\n# fmt calls go fmt on all packages.\nfmt:\n\tgofmt -s -l -w $(pkgs)\n\n# vet calls go vet on all packages.\n# NOTE: go vet requires packages to be built in order to obtain type info.\nvet: release-std\n\tgo vet $(pkgs)\n\nlint:\n\tgolint -min_confidence=1.0 -set_exit_status $(pkgs)\n\n# spellcheck checks for misspelled words in comments or strings.\nspellcheck:\n\tmisspell -error .\n\n# debug builds and installs debug binaries.\ndebug:\n\tgo install -tags='debug profile netgo' -ldflags='$(ldflags)' $(pkgs)\ndebug-race:\n\tgo install -race -tags='debug profile netgo' -ldflags='$(ldflags)' $(pkgs)\n\n# dev builds and installs developer binaries.\ndev:\n\tgo install -tags='dev debug profile netgo' -ldflags='$(ldflags)' $(pkgs)\ndev-race:\n\tgo install -race -tags='dev debug profile netgo' -ldflags='$(ldflags)' $(pkgs)\n\n# release builds and installs release binaries.\nrelease:\n\tgo install -tags='netgo' -a -ldflags='-s -w $(ldflags)' $(pkgs)\nrelease-race:\n\tgo install -race -tags='netgo' -a -ldflags='-s -w $(ldflags)' $(pkgs)\n\n# clean removes all directories that get automatically created during\n# development.\nclean:\n\trm -rf cover doc/whitepaper.aux doc/whitepaper.log doc/whitepaper.pdf release \n\ntest:\n\tgo test -short -tags='debug testing netgo' -timeout=5s $(pkgs) -run=$(run)\ntest-v:\n\tgo test -race -v -short -tags='debug testing netgo' -timeout=15s $(pkgs) -run=$(run)\ntest-long: clean fmt vet lint\n\tgo test -v -race -tags='testing debug netgo' -timeout=500s $(pkgs) -run=$(run)\ntest-vlong: clean fmt vet lint\n\tgo test -v -race -tags='testing debug vlong netgo' -timeout=5000s $(pkgs) -run=$(run)\ntest-cpu:\n\tgo test -v -tags='testing debug netgo' -timeout=500s -cpuprofile cpu.prof $(pkgs) -run=$(run)\ntest-mem:\n\tgo test -v -tags='testing debug netgo' -timeout=500s -memprofile mem.prof $(pkgs) -run=$(run)\nbench: clean fmt\n\tgo test -tags='debug testing netgo' -timeout=500s -run=XXX -bench=$(run) $(pkgs)\ncover: clean\n\t@mkdir -p cover\n\t@for package in $(pkgs); do                                                                                                          \\\n\t\tmkdir -p `dirname cover/$$package`                                                                                        \\\n\t\t&& go test -tags='testing debug netgo' -timeout=500s -covermode=atomic -coverprofile=cover/$$package.out ./$$package -run=$(run) \\\n\t\t&& go tool cover -html=cover/$$package.out -o=cover/$$package.html                                                               \\\n\t\t&& rm cover/$$package.out ;                                                                                                      \\\n\tdone\n\n# whitepaper builds the whitepaper from whitepaper.tex. pdflatex has to be\n# called twice because references will not update correctly the first time.\nwhitepaper:\n\t@pdflatex -output-directory=doc whitepaper.tex > /dev/null\n\tpdflatex -output-directory=doc whitepaper.tex\n\n.PHONY: all dependencies fmt install release release-std xc clean test test-v test-long cover cover-integration cover-unit whitepaper\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.1689453125,
          "content": "# [![Sia Logo](http://sia.tech/img/svg/sia-green-logo.svg)](http://sia.tech) v1.3.3 (Capricorn)\n\nThe Sia project has moved to [GitLab](https://gitlab.com/NebulousLabs/Sia).\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.5732421875,
          "content": "version: \"{build}\"\n\nplatform: x64\n\nclone_folder: c:\\GOPATH\\src\\github.com\\NebulousLabs\\Sia\n\nshallow_clone: true\n\nenvironment:\n  GOPATH: c:\\GOPATH\n\nbranches:\n  only:\n    - master\n    - staging\n\ninstall:\n  - set PATH=%GOPATH%\\bin;%PATH%\n  - go version\n  - go env\n  - go get -d ./...\n  - go get github.com/alecthomas/gometalinter\n\nbuild_script:\n  - gometalinter --install\n  - gometalinter --disable-all -E gofmt ./...\n  - go test -tags=\"testing debug\" -short ./...\n  - go test -tags=\"testing debug\" -v -timeout=1200s -race ./...\n  - go test -tags=\"testing debug\" -v -run=XXX -bench=. ./...\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "compatibility",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "encoding",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "persist",
          "type": "tree",
          "content": null
        },
        {
          "name": "profile",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 1.537109375,
          "content": "#!/bin/bash\nset -e\n\n# version and keys are supplied as arguments\nversion=\"$1\"\nkeyfile=\"$2\"\npubkeyfile=\"$3\" # optional\nif [[ -z $version || -z $keyfile ]]; then\n\techo \"Usage: $0 VERSION KEYFILE\"\n\texit 1\nfi\nif [[ -z $pubkeyfile ]]; then\n\techo \"Warning: no public keyfile supplied. Binaries will not be verified.\"\nfi\n\n# check for keyfile before proceeding\nif [ ! -f $keyfile ]; then\n    echo \"Key file not found: $keyfile\"\n    exit 1\nfi\nkeysum=$(shasum -a 256 $keyfile | cut -c -64)\nif [ $keysum != \"735320b4698010500d230c487e970e12776e88f33ad777ab380a493691dadb1b\" ]; then\n    echo \"Wrong key file: checksum does not match developer key file.\"\n    exit 1\nfi\n\n# setup build-time vars\nldflags=\"-s -w -X 'github.com/NebulousLabs/Sia/build.GitRevision=`git rev-parse --short HEAD`' -X 'github.com/NebulousLabs/Sia/build.BuildTime=`date`'\"\n\nfor os in darwin linux windows; do\n\techo Packaging ${os}...\n\t# create workspace\n\tfolder=release/Sia-$version-$os-amd64\n\trm -rf $folder\n\tmkdir -p $folder\n\t# compile and sign binaries\n\tfor pkg in siac siad; do\n\t\tbin=$pkg\n\t\tif [ \"$os\" == \"windows\" ]; then\n\t\t\tbin=${pkg}.exe\n\t\tfi\n\t\tGOOS=${os} go build -a -tags 'netgo' -ldflags=\"$ldflags\" -o $folder/$bin ./cmd/$pkg\n\t\topenssl dgst -sha256 -sign $keyfile -out $folder/${bin}.sig $folder/$bin\n\t\t# verify signature\n\t\tif [[ -n $pubkeyfile ]]; then\n\t\t\topenssl dgst -sha256 -verify $pubkeyfile -signature $folder/${bin}.sig $folder/$bin\n\t\tfi\n\n\tdone\n\t# add other artifacts\n\tcp -r doc LICENSE README.md $folder\n\t# zip\n\t(\n\t\tcd release\n\t\tzip -rq Sia-$version-$os-amd64.zip Sia-$version-$os-amd64\n\t)\ndone\n"
        },
        {
          "name": "siatest",
          "type": "tree",
          "content": null
        },
        {
          "name": "sync",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}