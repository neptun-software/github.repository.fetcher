{
  "metadata": {
    "timestamp": 1736567286968,
    "page": 884,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rancher/local-path-provisioner",
      "stars": 2312,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "./.dapper\n./.cache\n./dist\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": "/.dapper\n/.cache\n/bin\n/dist\n*.swp\n.idea\n.vscode/\nDockerfile.dapper[0-9]*\nlocal-path-provisioner\n"
        },
        {
          "name": ".golangci.json",
          "type": "blob",
          "size": 0.2177734375,
          "content": "{\n\t\"linters\": {\n\t\t\"disable-all\": true,\n\t\t\"enable\": [\n\t\t\t\"gofmt\",\n\t\t\t\"govet\",\n\t\t\t\"goimports\",\n\t\t\t\"revive\",\n\t\t\t\"misspell\",\n\t\t\t\"ineffassign\"\n\t\t]\n\t},\n\t\"run\": {\n\t\t\"skip-files\": [\n\t\t\t\"/zz_generated_\"\n\t\t],\n\t\t\"deadline\": \"5m\"\n\t}\n}\n"
        },
        {
          "name": "Dockerfile.dapper",
          "type": "blob",
          "size": 1.6982421875,
          "content": "FROM golang:1.23.1-alpine\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN apk -U add bash git gcc musl-dev docker vim less file curl wget ca-certificates jq\nRUN rm -rf /go/src /go/pkg\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.41.1; \\\n    fi; \\\n    if [ \"${ARCH}\" == \"amd64\" ] || [ \"${ARCH}\" == \"arm64\" ]; then \\\n        kind_version=$(curl -sL https://api.github.com/repos/kubernetes-sigs/kind/releases/latest | jq -r \".tag_name\") && curl -sL \"https://kind.sigs.k8s.io/dl/${kind_version}/kind-linux-${ARCH}\" -o kind && install kind /usr/local/bin; \\\n        kubectl_version=$(curl -sL https://dl.k8s.io/release/stable.txt) && curl -sLO \"https://dl.k8s.io/release/${kubectl_version}/bin/linux/${ARCH}/kubectl\" && install kubectl /usr/local/bin; \\\n        curl -sL \"https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_${ARCH}.tar.gz\" | tar -zxv -C /usr/local/bin; \\\n    fi\n\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.60.3\n\n# The docker version in dapper is too old to have buildx. Install it manually.\nRUN wget https://github.com/docker/buildx/releases/download/v0.13.1/buildx-v0.13.1.linux-${ARCH} && \\\n    chmod +x buildx-v0.13.1.linux-${ARCH} && \\\n    mv buildx-v0.13.1.linux-${ARCH} /usr/local/bin/buildx\n\nENV DAPPER_ENV REPO TAG DRONE_TAG\nENV DAPPER_SOURCE /go/src/github.com/rancher/local-path-provisioner/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS --network=host\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3046875,
          "content": "TARGETS := $(shell ls scripts)\n\n.dapper:\n\t@echo Downloading dapper\n\t@curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s`-`uname -m` > .dapper.tmp\n\t@@chmod +x .dapper.tmp\n\t@./.dapper.tmp -v\n\t@mv .dapper.tmp .dapper\n\n$(TARGETS): .dapper\n\t./.dapper $@\n\n.DEFAULT_GOAL := default\n\n.PHONY: $(TARGETS)"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.77734375,
          "content": "# Local Path Provisioner\n[![Build Status](https://drone-publish.rancher.io/api/badges/rancher/local-path-provisioner/status.svg)](https://drone-publish.rancher.io/rancher/local-path-provisioner)[![Go Report Card](https://goreportcard.com/badge/github.com/rancher/local-path-provisioner)](https://goreportcard.com/report/github.com/rancher/local-path-provisioner)\n\n## Overview\n\nLocal Path Provisioner provides a way for the Kubernetes users to utilize the local storage in each node. Based on the user configuration, the Local Path Provisioner will create either `hostPath` or `local` based persistent volume on the node automatically. It utilizes the features introduced by Kubernetes [Local Persistent Volume feature](https://kubernetes.io/blog/2018/04/13/local-persistent-volumes-beta/), but makes it a simpler solution than the built-in `local` volume feature in Kubernetes.\n\n## Compare to built-in Local Persistent Volume feature in Kubernetes\n\n### Pros\nDynamic provisioning the volume using [hostPath](https://kubernetes.io/docs/concepts/storage/volumes/#hostpath) or [local](https://kubernetes.io/docs/concepts/storage/volumes/#local).\n* Currently the Kubernetes [Local Volume provisioner](https://github.com/kubernetes-sigs/sig-storage-local-static-provisioner) cannot do dynamic provisioning for the local volumes.\n* Local based persistent volumes are an experimental feature ([example usage](examples/pvc-with-local-volume/pvc.yaml)).\n\n### Cons\n1. No support for the volume capacity limit currently.\n    1. The capacity limit will be ignored for now.\n\n## Requirement\nKubernetes v1.12+.\n\n## Deployment\n\n### Installation\n\nIn this setup, the directory `/opt/local-path-provisioner` will be used across all the nodes as the path for provisioning (a.k.a, store the persistent volume data). The provisioner will be installed in `local-path-storage` namespace by default.\n\n- Stable\n```\nkubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.30/deploy/local-path-storage.yaml\n```\n\n- Development\n```\nkubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml\n```\n\nOr, use `kustomize` to deploy.\n- Stable\n```\nkustomize build \"github.com/rancher/local-path-provisioner/deploy?ref=v0.0.30\" | kubectl apply -f -\n```\n\n- Development\n```\nkustomize build \"github.com/rancher/local-path-provisioner/deploy?ref=master\" | kubectl apply -f -\n```\n\nAfter installation, you should see something like the following:\n```\n$ kubectl -n local-path-storage get pod\nNAME                                     READY     STATUS    RESTARTS   AGE\nlocal-path-provisioner-d744ccf98-xfcbk   1/1       Running   0          7m\n```\n\nCheck and follow the provisioner log using:\n```\nkubectl -n local-path-storage logs -f -l app=local-path-provisioner\n```\n\n## Usage\n\nCreate a `hostPath` backend Persistent Volume and a pod uses it:\n```\nkubectl create -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pvc/pvc.yaml\nkubectl create -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pod/pod.yaml\n```\n\nOr, use `kustomize` to deploy them.\n```\nkustomize build \"github.com/rancher/local-path-provisioner/examples/pod?ref=master\" | kubectl apply -f -\n```\n\nYou should see the PV has been created:\n```\n$ kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                    STORAGECLASS   REASON    AGE\npvc-bc3117d9-c6d3-11e8-b36d-7a42907dda78   2Gi        RWO            Delete           Bound     default/local-path-pvc   local-path               4s\n```\n\nThe PVC has been bound:\n```\n$ kubectl get pvc\nNAME             STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nlocal-path-pvc   Bound     pvc-bc3117d9-c6d3-11e8-b36d-7a42907dda78   2Gi        RWO            local-path     16s\n```\n\nAnd the Pod started running:\n```\n$ kubectl get pod\nNAME          READY     STATUS    RESTARTS   AGE\nvolume-test   1/1       Running   0          3s\n```\n\nWrite something into the pod\n```\nkubectl exec volume-test -- sh -c \"echo local-path-test > /data/test\"\n```\n\nNow delete the pod using\n```\nkubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pod/pod.yaml\n```\n\nAfter confirm that the pod is gone, recreated the pod using\n```\nkubectl create -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pod/pod.yaml\n```\n\nCheck the volume content:\n```\n$ kubectl exec volume-test -- sh -c \"cat /data/test\"\nlocal-path-test\n```\n\nDelete the pod and pvc\n```\nkubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pod/pod.yaml\nkubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/examples/pvc/pvc.yaml\n```\n\nOr, use `kustomize` to delete them.\n```\nkustomize build \"github.com/rancher/local-path-provisioner/examples/pod?ref=master\" | kubectl delete -f -\n```\n\nThe volume content stored on the node will be automatically cleaned up. You can check the log of `local-path-provisioner-xxx` for details.\n\nNow you've verified that the provisioner works as expected.\n\n## Configuration\n\n### Customize the ConfigMap\n\nThe configuration of the provisioner is a json file `config.json`, a Pod template `helperPod.yaml` and two bash scripts `setup` and `teardown`, stored in a config map, e.g.:\n```\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: local-path-config\n  namespace: local-path-storage\ndata:\n  config.json: |-\n        {\n                \"nodePathMap\":[\n                {\n                        \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                        \"paths\":[\"/opt/local-path-provisioner\"]\n                },\n                {\n                        \"node\":\"yasker-lp-dev1\",\n                        \"paths\":[\"/opt/local-path-provisioner\", \"/data1\"]\n                },\n                {\n                        \"node\":\"yasker-lp-dev3\",\n                        \"paths\":[]\n                }\n                ]\n        }\n  setup: |-\n        #!/bin/sh\n        set -eu\n        mkdir -m 0777 -p \"$VOL_DIR\"\n  teardown: |-\n        #!/bin/sh\n        set -eu\n        rm -rf \"$VOL_DIR\"\n  helperPod.yaml: |-\n        apiVersion: v1\n        kind: Pod\n        metadata:\n          name: helper-pod\n        spec:\n          priorityClassName: system-node-critical\n          tolerations:\n            - key: node.kubernetes.io/disk-pressure\n              operator: Exists\n              effect: NoSchedule\n          containers:\n          - name: helper-pod\n            image: busybox\n\n```\n\nThe helperPod is allowed to run on nodes experiencing disk pressure conditions, despite the potential resource constraints. When it runs on such a node, it can carry out specific cleanup tasks, freeing up space in PVCs, and resolving the disk-pressure issue.\n\n#### `config.json`\n\n##### Definition\n`nodePathMap` is the place user can customize where to store the data on each node.\n1. If one node is not listed on the `nodePathMap`, and Kubernetes wants to create volume on it, the paths specified in `DEFAULT_PATH_FOR_NON_LISTED_NODES` will be used for provisioning.\n2. If one node is listed on the `nodePathMap`, the specified paths in `paths` will be used for provisioning.\n    1. If one node is listed but with `paths` set to `[]`, the provisioner will refuse to provision on this node.\n    2. If more than one path was specified, the path would be chosen randomly when provisioning.\n\n`sharedFileSystemPath` allows the provisioner to use a filesystem that is mounted on all nodes at the same time.\nIn this case all access modes are supported: `ReadWriteOnce`, `ReadOnlyMany` and `ReadWriteMany` for storage claims.\n\n`storageClassConfigs` is a map from storage class names to objects containing `nodePathMap` or `sharedFilesystemPath`, as described above.\n\nIn addition `volumeBindingMode: Immediate` can be used in  StorageClass definition.\n\nPlease note that `nodePathMap`, `sharedFileSystemPath`, and `storageClassConfigs` are mutually exclusive. If `sharedFileSystemPath` or `stroageClassConfigs` are used, then `nodePathMap` must be set to `[]`.\n\nThe `setupCommand` and `teardownCommand` allow you to specify the path to binary files in helperPod that will be called when creating or deleting pvc respectively. This can be useful if you need to use distroless images for security reasons. See the examples/distroless directory for an example. A binary file can take the following parameters:\n| Parameter | Description |\n| -------------------- | ----------- |\n| -p | Volume directory that should be created or removed. | -m | -p | Volume directory that should be created or removed. |\n| -m | The PersistentVolume mode (`Block` or `Filesystem`). | -m | The PersistentVolume mode (`Block` or `Filesystem`). |\n| -s | Requested volume size in bytes. | -s | Requested volume size in bytes. |\n| -a | Action type. Can be `create` or `delete` | -a | -a | Action type.\n\nThe `setupCommand` and `teardownCommand` have higher priority than the `setup` and `teardown` scripts from the ConfigMap.  \n\n##### Rules\nThe configuration must obey following rules:\n1. `config.json` must be a valid json file.\n2. A path must start with `/`, a.k.a an absolute path.\n2. Root directory(`/`) is prohibited.\n3. No duplicate paths allowed for one node.\n4. No duplicate node allowed.\n\n#### Scripts `setup` and `teardown` and the `helperPod.yaml` template\n\n* The `setup` script is run before the volume is created, to prepare the volume directory on the node.\n* The `teardown` script is run after the volume is deleted, to cleanup the volume directory on the node.\n* The `helperPod.yaml` template is used to create a helper Pod that runs the `setup` or `teardown` script.\n\nThe scripts receive their input as environment variables:\n\n| Environment variable | Description |\n| -------------------- | ----------- |\n| `VOL_DIR` | Volume directory that should be created or removed. |\n| `VOL_MODE` | The PersistentVolume mode (`Block` or `Filesystem`). |\n| `VOL_SIZE_BYTES` | Requested volume size in bytes. |\n\n#### Reloading\n\nThe provisioner supports automatic configuration reloading. Users can change the configuration using `kubectl apply` or `kubectl edit` with config map `local-path-config`. There is a delay between when the user updates the config map and the provisioner picking it up. In order for this to occur for updates made to the helper pod manifest, the following environment variable must be added to the provisioner container. If not, then the manifest used for the helper pod will be the same as what was in the config map when the provisioner was last restarted/deployed.\n\n```yaml\n- name: CONFIG_MOUNT_PATH\n  value: /etc/config/\n```\n\nWhen the provisioner detects the configuration changes, it will try to load the new configuration. Users can observe it in the log\n>time=\"2018-10-03T05:56:13Z\" level=debug msg=\"Applied config: {\\\"nodePathMap\\\":[{\\\"node\\\":\\\"DEFAULT_PATH_FOR_NON_LISTED_NODES\\\",\\\"paths\\\":[\\\"/opt/local-path-provisioner\\\"]},{\\\"node\\\":\\\"yasker-lp-dev1\\\",\\\"paths\\\":[\\\"/opt\\\",\\\"/data1\\\"]},{\\\"node\\\":\\\"yasker-lp-dev3\\\"}]}\"\n\nIf the reload fails, the provisioner will log the error and **continue using the last valid configuration for provisioning in the meantime**.\n>time=\"2018-10-03T05:19:25Z\" level=error msg=\"failed to load the new config file: fail to load config file /etc/config/config.json: invalid character '#' looking for beginning of object key string\"\n\n>time=\"2018-10-03T05:20:10Z\" level=error msg=\"failed to load the new config file: config canonicalization failed: path must start with / for path opt on node yasker-lp-dev1\"\n\n>time=\"2018-10-03T05:23:35Z\" level=error msg=\"failed to load the new config file: config canonicalization failed: duplicate path /data1 on node yasker-lp-dev1\n\n>time=\"2018-10-03T06:39:28Z\" level=error msg=\"failed to load the new config file: config canonicalization failed: duplicate node yasker-lp-dev3\"\n\n### Volume Types\n\nTo specify the type of volume you want the provisioner to create, add either of the following annotations;\n\n- PVC:\n```yaml\nannotations:\n  volumeType: <local or hostPath>\n```\n\n- StorageClass:\n```yaml\nannotations:\n  defaultVolumeType: <local or hostPath>\n```\n\nA few things to note; the annotation for the `StorageClass` will apply to all volumes using it and is superseded by the annotation on the PVC if one is provided. If neither of the annotations was provided then we default to `hostPath`.\n\n### Storage classes\n\nIf more than one `paths` are specified in the `nodePathMap` the path is chosen randomly. To make the provisioner choose a specific path, use a `storageClass` defined with a parameter called `nodePath`. Note that this path should be defined in the `nodePathMap`.\n\nBy default the volume subdirectory is named using the template `{{ .PVName }}_{{ .PVC.Namespace }}_{{ .PVC.Name }}` which make the directory specific to the PV instance. The template can be changed using the `pathPattern` parameter which is interpreted as a go template. The template has access to the PV name using the `PVName` variable and the PVC metadata object, including labels and annotations, with the `PVC` variable.\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ssd-local-path\nprovisioner: rancher.io/local-path\nparameters:\n  nodePath: /data/ssd\n  pathPattern: \"{{ .PVC.Namespace }}/{{ .PVC.Name }}\"\nvolumeBindingMode: WaitForFirstConsumer\nreclaimPolicy: Delete\n```\n\nHere the provisioner will use the path `/data/ssd` with a subdirectory per namespace and PVC when storage class `ssd-local-path` is used.\n\n## Uninstall\n\nBefore uninstallation, make sure the PVs created by the provisioner have already been deleted. Use `kubectl get pv` and make sure no PV with StorageClass `local-path`.\n\nTo uninstall, execute:\n\n- Stable\n```\nkubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.30/deploy/local-path-storage.yaml\n```\n\n- Development\n```\nkubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml\n```\n\n## Debug\n> it providers a out-of-cluster debug env for developers\n### debug\n```Bash\ngit clone https://github.com/rancher/local-path-provisioner.git\ncd local-path-provisioner\ngo build\nkubectl apply -f debug/config.yaml\n./local-path-provisioner --debug start --service-account-name=default\n```\n\n### example\n[Usage](#usage)\n\n### clear\n```\nkubectl delete -f debug/config.yaml\n```\n\n## License\n\nCopyright (c) 2014-2020  [Rancher Labs, Inc.](http://rancher.com/)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "debug",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.6826171875,
          "content": "module github.com/rancher/local-path-provisioner\n\ngo 1.23.0\n\nrequire (\n\tgithub.com/Sirupsen/logrus v0.11.0\n\tgithub.com/kelseyhightower/envconfig v1.4.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/urfave/cli v1.19.1\n\tk8s.io/api v0.30.0\n\tk8s.io/apimachinery v0.30.0\n\tk8s.io/client-go v0.30.0\n\tk8s.io/klog/v2 v2.120.1\n\tsigs.k8s.io/sig-storage-lib-external-provisioner/v10 v10.0.1\n\tsigs.k8s.io/yaml v1.3.0\n)\n\nrequire (\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.1.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.19.6 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.22.3 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/imdario/mergo v0.3.6 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.1 // indirect\n\tgithub.com/miekg/dns v1.1.29 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_golang v1.11.1 // indirect\n\tgithub.com/prometheus/client_model v0.3.0 // indirect\n\tgithub.com/prometheus/common v0.32.1 // indirect\n\tgithub.com/prometheus/procfs v0.8.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgolang.org/x/crypto v0.25.0 // indirect\n\tgolang.org/x/net v0.27.0 // indirect\n\tgolang.org/x/oauth2 v0.10.0 // indirect\n\tgolang.org/x/sys v0.22.0 // indirect\n\tgolang.org/x/term v0.22.0 // indirect\n\tgolang.org/x/text v0.16.0 // indirect\n\tgolang.org/x/time v0.3.0 // indirect\n\tgoogle.golang.org/appengine v1.6.7 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 // indirect\n\tk8s.io/utils v0.0.0-20230726121419-3b25d923346b // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 56.4150390625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/Sirupsen/logrus v0.11.0 h1:e67CSCQN/h7Iozb0J2qUoCFldk79UIoPL8FbzsW0r0U=\ngithub.com/Sirupsen/logrus v0.11.0/go.mod h1:rmk17hk6i8ZSAJkSDa7nOxamrG+SP4P0mm+DAvExv4U=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.1.2 h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/evanphx/json-patch v5.6.0+incompatible h1:jBYDEEiFBPxA0v50tFdvOzQQTCvpL6mnFh5mB2/l16U=\ngithub.com/evanphx/json-patch v5.6.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3 h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1 h1:K6RDEckDVWvDI9JAJYCmNdQXq6neHJOYx3V6jnqNEec=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.6 h1:xTNEAn+kxVO7dTZGu0CegyqKZmoWFI0rF8UxjlB2d28=\ngithub.com/imdario/mergo v0.3.6/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\ngithub.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1 h1:4hp9jkHxhMHkqkrB3Ix0jegS5sx/RkqARlsWZ6pIwiU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.1.29 h1:xHBEhR+t5RzcFJjBLJlax2daXOrTYtr9z4WdKEfWFzg=\ngithub.com/miekg/dns v1.1.29/go.mod h1:KNUDUusw/aVsxyTYZM1oqvCicbwhgbNgztCETuNZ7xM=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/onsi/ginkgo/v2 v2.15.0 h1:79HwNRBAZHOEwrczrgSOPy+eFTTlIGELKy5as+ClttY=\ngithub.com/onsi/ginkgo/v2 v2.15.0/go.mod h1:HlxMHtYF57y6Dpf+mc5529KKmSq9h2FpCF+/ZkwUxKM=\ngithub.com/onsi/gomega v1.31.0 h1:54UJxxj6cPInHS3a35wm6BK/F9nHYueZ1NVujHDrnXE=\ngithub.com/onsi/gomega v1.31.0/go.mod h1:DW9aCi7U6Yi40wNVAvT6kzFnEVEI5n3DloYBiKiT6zk=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_golang v1.11.1 h1:+4eQaD7vAZ6DsfsxB15hbE0odUjGI5ARs9yskGu1v4s=\ngithub.com/prometheus/client_golang v1.11.1/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.3.0 h1:UBgGFHqYdG/TPFD1B1ogZywDqEkwp3fBMvqdiQ7Xew4=\ngithub.com/prometheus/client_model v0.3.0/go.mod h1:LDGWKZIo7rky3hgvBe+caln+Dr3dPggB5dvjtD7w9+w=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/common v0.32.1 h1:hWIdL3N2HoUx3B8j3YN9mWor0qhY/NlEKZEaXxuIRh4=\ngithub.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.8.0 h1:ODq8ZFEaYeCaZOJlZZdJA2AbQR98dSHSM1KW/You5mo=\ngithub.com/prometheus/procfs v0.8.0/go.mod h1:z7EfXMXOkbkqb9IINtpCn86r/to3BnA0uaxHdg830/4=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/urfave/cli v1.19.1 h1:0mKm4ZoB74PxYmZVua162y1dGt1qc10MyymYRBf3lb8=\ngithub.com/urfave/cli v1.19.1/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.25.0 h1:ypSNr+bnYL2YhwoMt2zPxHFmbAN1KZs/njMG3hxUp30=\ngolang.org/x/crypto v0.25.0/go.mod h1:T+wALwcMOSE0kXgUAnPAHqTLW+XHgcELELW8VaDgm/M=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=\ngolang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.10.0 h1:zHCpF2Khkwy4mMB4bv0U37YtJdTGW8jI0glAApi0Kh8=\ngolang.org/x/oauth2 v0.10.0/go.mod h1:kTpgurOux7LqtuxjuyZa4Gj2gdezIt/jQtGnNFfypQI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.22.0 h1:RI27ohtqKCnwULzJLqkv897zojh5/DwS/ENaMzUOaWI=\ngolang.org/x/sys v0.22.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.22.0 h1:BbsgPEJULsl2fV/AT3v15Mjva5yXKQDyKf+TbDz7QJk=\ngolang.org/x/term v0.22.0/go.mod h1:F3qCibpT5AMpCRfhfT53vVJwhLtIVHhB9XDjfFvnMI4=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216052735-49a3e744a425/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nk8s.io/api v0.30.0 h1:siWhRq7cNjy2iHssOB9SCGNCl2spiF1dO3dABqZ8niA=\nk8s.io/api v0.30.0/go.mod h1:OPlaYhoHs8EQ1ql0R/TsUgaRPhpKNxIMrKQfWUp8QSE=\nk8s.io/apimachinery v0.30.0 h1:qxVPsyDM5XS96NIh9Oj6LavoVFYff/Pon9cZeDIkHHA=\nk8s.io/apimachinery v0.30.0/go.mod h1:iexa2somDaxdnj7bha06bhb43Zpa6eWH8N8dbqVjTUc=\nk8s.io/client-go v0.30.0 h1:sB1AGGlhY/o7KCyCEQ0bPWzYDL0pwOZO4vAtTSh/gJQ=\nk8s.io/client-go v0.30.0/go.mod h1:g7li5O5256qe6TYdAMyX/otJqMhIiGgTapdLchhmOaY=\nk8s.io/klog/v2 v2.120.1 h1:QXU6cPEOIslTGvZaXvFWiP9VKyeet3sawzTOvdXb4Vw=\nk8s.io/klog/v2 v2.120.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 h1:BZqlfIlq5YbRMFko6/PM7FjZpUb45WallggurYhKGag=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340/go.mod h1:yD4MZYeKMBwQKVht279WycxKyM84kkAx2DPrTXaeb98=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/sig-storage-lib-external-provisioner/v10 v10.0.1 h1:uhd7RobUnVmfkRb3gkYQh4tBOiBEBvdwW/nAthG95Rc=\nsigs.k8s.io/sig-storage-lib-external-provisioner/v10 v10.0.1/go.mod h1:mfQ2enu5yAHUhpNWsce9NmkqkRQsk70zQT+7KjZ+JMo=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.3.0 h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 9.2705078125,
          "content": "package main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"syscall\"\n\n\t\"github.com/Sirupsen/logrus\"\n\t\"github.com/pkg/errors\"\n\t\"github.com/urfave/cli\"\n\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\tclientset \"k8s.io/client-go/kubernetes\"\n\t\"k8s.io/client-go/rest\"\n\t\"k8s.io/client-go/tools/clientcmd\"\n\t\"k8s.io/klog/v2\"\n\n\tpvController \"sigs.k8s.io/sig-storage-lib-external-provisioner/v10/controller\"\n)\n\nvar (\n\tVERSION                       = \"0.0.1\"\n\tFlagConfigFile                = \"config\"\n\tFlagProvisionerName           = \"provisioner-name\"\n\tEnvProvisionerName            = \"PROVISIONER_NAME\"\n\tDefaultProvisionerName        = \"rancher.io/local-path\"\n\tFlagNamespace                 = \"namespace\"\n\tEnvNamespace                  = \"POD_NAMESPACE\"\n\tDefaultNamespace              = \"local-path-storage\"\n\tFlagHelperImage               = \"helper-image\"\n\tEnvHelperImage                = \"HELPER_IMAGE\"\n\tDefaultHelperImage            = \"rancher/library-busybox:1.32.1\"\n\tFlagServiceAccountName        = \"service-account-name\"\n\tDefaultServiceAccount         = \"local-path-provisioner-service-account\"\n\tEnvServiceAccountName         = \"SERVICE_ACCOUNT_NAME\"\n\tFlagKubeconfig                = \"kubeconfig\"\n\tDefaultConfigFileKey          = \"config.json\"\n\tDefaultConfigMapName          = \"local-path-config\"\n\tFlagConfigMapName             = \"configmap-name\"\n\tFlagHelperPodFile             = \"helper-pod-file\"\n\tDefaultHelperPodFile          = \"helperPod.yaml\"\n\tFlagWorkerThreads             = \"worker-threads\"\n\tDefaultWorkerThreads          = pvController.DefaultThreadiness\n\tFlagProvisioningRetryCount    = \"provisioning-retry-count\"\n\tDefaultProvisioningRetryCount = pvController.DefaultFailedProvisionThreshold\n\tFlagDeletionRetryCount        = \"deletion-retry-count\"\n\tDefaultDeletionRetryCount     = pvController.DefaultFailedDeleteThreshold\n\tEnvConfigMountPath            = \"CONFIG_MOUNT_PATH\"\n)\n\nfunc cmdNotFound(_ *cli.Context, command string) {\n\tpanic(fmt.Errorf(\"Unrecognized command: %s\", command))\n}\n\nfunc onUsageError(_ *cli.Context, err error, _ bool) error {\n\tpanic(errors.Wrap(err, \"Usage error, please check your command\"))\n}\n\nfunc RegisterShutdownChannel(cancelFn context.CancelFunc) {\n\tsigs := make(chan os.Signal, 1)\n\tsignal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)\n\tgo func() {\n\t\tsig := <-sigs\n\t\tklog.Infof(\"Receive %v to exit\", sig)\n\t\tcancelFn()\n\t}()\n}\n\nfunc StartCmd() cli.Command {\n\treturn cli.Command{\n\t\tName: \"start\",\n\t\tFlags: []cli.Flag{\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  FlagConfigFile,\n\t\t\t\tUsage: \"Required. Provisioner configuration file.\",\n\t\t\t\tValue: \"\",\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:   FlagProvisionerName,\n\t\t\t\tUsage:  \"Required. Specify Provisioner name.\",\n\t\t\t\tEnvVar: EnvProvisionerName,\n\t\t\t\tValue:  DefaultProvisionerName,\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:   FlagNamespace,\n\t\t\t\tUsage:  \"Required. The namespace that Provisioner is running in\",\n\t\t\t\tEnvVar: EnvNamespace,\n\t\t\t\tValue:  DefaultNamespace,\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:   FlagHelperImage,\n\t\t\t\tUsage:  \"Required. The helper image used for create/delete directories on the host\",\n\t\t\t\tEnvVar: EnvHelperImage,\n\t\t\t\tValue:  DefaultHelperImage,\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  FlagKubeconfig,\n\t\t\t\tUsage: \"Paths to a kubeconfig. Only required when it is out-of-cluster.\",\n\t\t\t\tValue: \"\",\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  FlagConfigMapName,\n\t\t\t\tUsage: \"Required. Specify configmap name.\",\n\t\t\t\tValue: DefaultConfigMapName,\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:   FlagServiceAccountName,\n\t\t\t\tUsage:  \"Required. The ServiceAccountName for deployment\",\n\t\t\t\tEnvVar: EnvServiceAccountName,\n\t\t\t\tValue:  DefaultServiceAccount,\n\t\t\t},\n\t\t\tcli.StringFlag{\n\t\t\t\tName:  FlagHelperPodFile,\n\t\t\t\tUsage: \"Paths to the Helper pod yaml file\",\n\t\t\t\tValue: \"\",\n\t\t\t},\n\t\t\tcli.IntFlag{\n\t\t\t\tName:  FlagWorkerThreads,\n\t\t\t\tUsage: \"Number of provisioner worker threads.\",\n\t\t\t\tValue: DefaultWorkerThreads,\n\t\t\t},\n\t\t\tcli.IntFlag{\n\t\t\t\tName:  FlagProvisioningRetryCount,\n\t\t\t\tUsage: \"Number of retries of failed volume provisioning. 0 means retry indefinitely.\",\n\t\t\t\tValue: DefaultProvisioningRetryCount,\n\t\t\t},\n\t\t\tcli.IntFlag{\n\t\t\t\tName:  FlagDeletionRetryCount,\n\t\t\t\tUsage: \"Number of retries of failed volume deletion. 0 means retry indefinitely.\",\n\t\t\t\tValue: DefaultDeletionRetryCount,\n\t\t\t},\n\t\t},\n\t\tAction: func(c *cli.Context) {\n\t\t\tif err := startDaemon(c); err != nil {\n\t\t\t\tlogrus.Fatalf(\"Error starting daemon: %v\", err)\n\t\t\t}\n\t\t},\n\t}\n}\n\nfunc homeDir() string {\n\tif h := os.Getenv(\"HOME\"); h != \"\" {\n\t\treturn h\n\t}\n\treturn os.Getenv(\"USERPROFILE\") // windows\n}\n\nfunc loadConfig(kubeconfig string) (*rest.Config, error) {\n\tif len(kubeconfig) > 0 {\n\t\treturn clientcmd.BuildConfigFromFlags(\"\", kubeconfig)\n\t}\n\n\tkubeconfigPath := os.Getenv(clientcmd.RecommendedConfigPathEnvVar)\n\tif len(kubeconfigPath) > 0 {\n\t\tenvVarFiles := filepath.SplitList(kubeconfigPath)\n\t\tfor _, f := range envVarFiles {\n\t\t\tif _, err := os.Stat(f); err == nil {\n\t\t\t\treturn clientcmd.BuildConfigFromFlags(\"\", f)\n\t\t\t}\n\t\t}\n\t}\n\n\tif c, err := rest.InClusterConfig(); err == nil {\n\t\treturn c, nil\n\t}\n\n\tkubeconfig = filepath.Join(homeDir(), clientcmd.RecommendedHomeDir, clientcmd.RecommendedFileName)\n\treturn clientcmd.BuildConfigFromFlags(\"\", kubeconfig)\n}\n\nfunc findConfigFileFromConfigMap(kubeClient clientset.Interface, namespace, configMapName, key string) (string, error) {\n\tcm, err := kubeClient.CoreV1().ConfigMaps(namespace).Get(context.TODO(), configMapName, metav1.GetOptions{})\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tvalue, ok := cm.Data[key]\n\tif !ok {\n\t\treturn \"\", fmt.Errorf(\"%v is not exist in local-path-config ConfigMap\", key)\n\t}\n\treturn value, nil\n}\n\nfunc startDaemon(c *cli.Context) error {\n\tctx, cancelFn := context.WithCancel(context.TODO())\n\tRegisterShutdownChannel(cancelFn)\n\n\tconfig, err := loadConfig(c.String(FlagKubeconfig))\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"unable to get client config\")\n\t}\n\n\tkubeClient, err := clientset.NewForConfig(config)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"unable to get k8s client\")\n\t}\n\n\tprovisionerName := c.String(FlagProvisionerName)\n\tif provisionerName == \"\" {\n\t\treturn fmt.Errorf(\"invalid empty flag %v\", FlagProvisionerName)\n\t}\n\tnamespace := c.String(FlagNamespace)\n\tif namespace == \"\" {\n\t\treturn fmt.Errorf(\"invalid empty flag %v\", FlagNamespace)\n\t}\n\tconfigMapName := c.String(FlagConfigMapName)\n\tif configMapName == \"\" {\n\t\treturn fmt.Errorf(\"invalid empty flag %v\", FlagConfigMapName)\n\t}\n\tconfigFile := c.String(FlagConfigFile)\n\tif configFile == \"\" {\n\t\tconfigFile, err = findConfigFileFromConfigMap(kubeClient, namespace, configMapName, DefaultConfigFileKey)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"invalid empty flag %v and it also does not exist at ConfigMap %v/%v with err: %v\", FlagConfigFile, namespace, configMapName, err)\n\t\t}\n\t}\n\thelperImage := c.String(FlagHelperImage)\n\tif helperImage == \"\" {\n\t\treturn fmt.Errorf(\"invalid empty flag %v\", FlagHelperImage)\n\t}\n\n\tserviceAccountName := c.String(FlagServiceAccountName)\n\tif serviceAccountName == \"\" {\n\t\treturn fmt.Errorf(\"invalid empty flag %v\", FlagServiceAccountName)\n\t}\n\n\t// if helper pod file is not specified, then find the helper pod by configmap with key = helperPod.yaml\n\t// if helper pod file is specified with flag FlagHelperPodFile, then load the file\n\thelperPodFile := c.String(FlagHelperPodFile)\n\thelperPodYaml := \"\"\n\tif helperPodFile == \"\" {\n\t\thelperPodYaml, err = findConfigFileFromConfigMap(kubeClient, namespace, configMapName, DefaultHelperPodFile)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"invalid empty flag %v and it also does not exist at ConfigMap %v/%v with err: %v\", FlagHelperPodFile, namespace, configMapName, err)\n\t\t}\n\t} else {\n\t\thelperPodYaml, err = loadFile(helperPodFile)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"could not open file %v with err: %v\", helperPodFile, err)\n\t\t}\n\t}\n\n\tprovisioningRetryCount := c.Int(FlagProvisioningRetryCount)\n\tif provisioningRetryCount < 0 {\n\t\treturn fmt.Errorf(\"invalid negative integer flag %v\", FlagProvisioningRetryCount)\n\t}\n\n\tdeletionRetryCount := c.Int(FlagDeletionRetryCount)\n\tif deletionRetryCount < 0 {\n\t\treturn fmt.Errorf(\"invalid negative integer flag %v\", FlagDeletionRetryCount)\n\t}\n\n\tworkerThreads := c.Int(FlagWorkerThreads)\n\tif workerThreads <= 0 {\n\t\treturn fmt.Errorf(\"invalid zero or negative integer flag %v\", FlagWorkerThreads)\n\t}\n\n\tprovisioner, err := NewProvisioner(ctx, kubeClient, configFile, namespace, helperImage, configMapName, serviceAccountName, helperPodYaml)\n\tif err != nil {\n\t\treturn err\n\t}\n\tpc := pvController.NewProvisionController(\n\t\tklog.FromContext(ctx),\n\t\tkubeClient,\n\t\tprovisionerName,\n\t\tprovisioner,\n\t\tpvController.LeaderElection(false),\n\t\tpvController.FailedProvisionThreshold(provisioningRetryCount),\n\t\tpvController.FailedDeleteThreshold(deletionRetryCount),\n\t\tpvController.Threadiness(workerThreads),\n\t)\n\tlogrus.Debug(\"Provisioner started\")\n\tpc.Run(ctx)\n\tlogrus.Debug(\"Provisioner stopped\")\n\treturn nil\n}\n\nfunc main() {\n\tlogrus.SetFormatter(&logrus.TextFormatter{FullTimestamp: true})\n\n\ta := cli.NewApp()\n\ta.Version = VERSION\n\ta.Usage = \"Local Path Provisioner\"\n\n\ta.Before = func(c *cli.Context) error {\n\t\tif c.GlobalBool(\"debug\") {\n\t\t\tlogrus.SetLevel(logrus.DebugLevel)\n\t\t}\n\t\treturn nil\n\t}\n\n\ta.Flags = []cli.Flag{\n\t\tcli.BoolFlag{\n\t\t\tName:   \"debug, d\",\n\t\t\tUsage:  \"enable debug logging level\",\n\t\t\tEnvVar: \"RANCHER_DEBUG\",\n\t\t},\n\t}\n\ta.Commands = []cli.Command{\n\t\tStartCmd(),\n\t}\n\ta.CommandNotFound = cmdNotFound\n\ta.OnUsageError = onUsageError\n\n\tif err := a.Run(os.Args); err != nil {\n\t\tlogrus.Fatalf(\"Critical error: %v\", err)\n\t}\n}\n"
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "provisioner.go",
          "type": "blob",
          "size": 24.591796875,
          "content": "package main\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"reflect\"\n\t\"strconv\"\n\t\"strings\"\n\t\"sync\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/Sirupsen/logrus\"\n\t\"github.com/pkg/errors\"\n\tv1 \"k8s.io/api/core/v1\"\n\tk8serror \"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\tclientset \"k8s.io/client-go/kubernetes\"\n\t\"k8s.io/client-go/rest\"\n\n\tpvController \"sigs.k8s.io/sig-storage-lib-external-provisioner/v10/controller\"\n)\n\ntype ActionType string\n\nconst (\n\tActionTypeCreate = \"create\"\n\tActionTypeDelete = \"delete\"\n)\n\nconst (\n\tKeyNode = \"kubernetes.io/hostname\"\n\n\tNodeDefaultNonListedNodes = \"DEFAULT_PATH_FOR_NON_LISTED_NODES\"\n\n\thelperScriptDir     = \"/script\"\n\thelperDataVolName   = \"data\"\n\thelperScriptVolName = \"script\"\n\n\tenvVolDir  = \"VOL_DIR\"\n\tenvVolMode = \"VOL_MODE\"\n\tenvVolSize = \"VOL_SIZE_BYTES\"\n)\n\nconst (\n\tdefaultCmdTimeoutSeconds = 120\n\tdefaultVolumeType        = \"hostPath\"\n)\n\nconst (\n\tnodeNameAnnotationKey = \"local.path.provisioner/selected-node\"\n)\n\nvar (\n\tConfigFileCheckInterval = 30 * time.Second\n\n\tHelperPodNameMaxLength = 128\n)\n\ntype LocalPathProvisioner struct {\n\tctx                context.Context\n\tkubeClient         *clientset.Clientset\n\tnamespace          string\n\thelperImage        string\n\tserviceAccountName string\n\n\tconfig        *Config\n\tconfigData    *ConfigData\n\tconfigFile    string\n\tconfigMapName string\n\tconfigMutex   *sync.RWMutex\n\thelperPod     *v1.Pod\n}\n\ntype NodePathMapData struct {\n\tNode  string   `json:\"node,omitempty\"`\n\tPaths []string `json:\"paths,omitempty\"`\n}\n\ntype StorageClassConfigData struct {\n\tNodePathMap          []*NodePathMapData `json:\"nodePathMap,omitempty\"`\n\tSharedFileSystemPath string             `json:\"sharedFileSystemPath,omitempty\"`\n}\n\ntype ConfigData struct {\n\tCmdTimeoutSeconds int    `json:\"cmdTimeoutSeconds,omitempty\"`\n\tSetupCommand      string `json:\"setupCommand,omitempty\"`\n\tTeardownCommand   string `json:\"teardownCommand,omitempty\"`\n\tStorageClassConfigData\n\tStorageClassConfigs map[string]StorageClassConfigData `json:\"storageClassConfigs\"`\n}\n\ntype StorageClassConfig struct {\n\tNodePathMap          map[string]*NodePathMap\n\tSharedFileSystemPath string\n}\n\ntype NodePathMap struct {\n\tPaths map[string]struct{}\n}\n\ntype Config struct {\n\tCmdTimeoutSeconds int\n\tSetupCommand      string\n\tTeardownCommand   string\n\tStorageClassConfig\n\tStorageClassConfigs map[string]StorageClassConfig\n}\n\nfunc NewProvisioner(ctx context.Context, kubeClient *clientset.Clientset,\n\tconfigFile, namespace, helperImage, configMapName, serviceAccountName, helperPodYaml string) (*LocalPathProvisioner, error) {\n\tp := &LocalPathProvisioner{\n\t\tctx: ctx,\n\n\t\tkubeClient:         kubeClient,\n\t\tnamespace:          namespace,\n\t\thelperImage:        helperImage,\n\t\tserviceAccountName: serviceAccountName,\n\n\t\t// config will be updated shortly by p.refreshConfig()\n\t\tconfig:        nil,\n\t\tconfigFile:    configFile,\n\t\tconfigData:    nil,\n\t\tconfigMapName: configMapName,\n\t\tconfigMutex:   &sync.RWMutex{},\n\t}\n\tvar err error\n\tp.helperPod, err = loadHelperPodFile(helperPodYaml)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tif err := p.refreshConfig(); err != nil {\n\t\treturn nil, err\n\t}\n\tp.watchAndRefreshConfig()\n\treturn p, nil\n}\n\nfunc (p *LocalPathProvisioner) refreshConfig() error {\n\tp.configMutex.Lock()\n\tdefer p.configMutex.Unlock()\n\n\tconfigData, err := loadConfigFile(p.configFile)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// no need to update\n\tif reflect.DeepEqual(configData, p.configData) {\n\t\treturn nil\n\t}\n\tconfig, err := canonicalizeConfig(configData)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// only update the config if the new config file is valid\n\tp.configData = configData\n\tp.config = config\n\n\toutput, err := json.Marshal(p.configData)\n\tif err != nil {\n\t\treturn err\n\t}\n\tlogrus.Debugf(\"Applied config: %v\", string(output))\n\n\treturn err\n}\n\nfunc (p *LocalPathProvisioner) refreshHelperPod() error {\n\tp.configMutex.Lock()\n\tdefer p.configMutex.Unlock()\n\n\thelperPodFile, envExists := os.LookupEnv(EnvConfigMountPath)\n\tif !envExists {\n\t\treturn nil\n\t}\n\n\thelperPodFile = filepath.Join(helperPodFile, DefaultHelperPodFile)\n\tnewHelperPod, err := loadFile(helperPodFile)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tp.helperPod, err = loadHelperPodFile(newHelperPod)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc (p *LocalPathProvisioner) watchAndRefreshConfig() {\n\tgo func() {\n\t\tticker := time.NewTicker(ConfigFileCheckInterval)\n\t\tdefer ticker.Stop()\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase <-ticker.C:\n\t\t\t\tif err := p.refreshConfig(); err != nil {\n\t\t\t\t\tlogrus.Errorf(\"failed to load the new config file: %v\", err)\n\t\t\t\t}\n\t\t\t\tif err := p.refreshHelperPod(); err != nil {\n\t\t\t\t\tlogrus.Errorf(\"failed to load the new helper pod manifest: %v\", err)\n\t\t\t\t}\n\t\t\tcase <-p.ctx.Done():\n\t\t\t\tlogrus.Infof(\"stop watching config file\")\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}()\n}\n\nfunc (p *LocalPathProvisioner) getPathOnNode(node string, requestedPath string, c *StorageClassConfig) (string, error) {\n\tp.configMutex.RLock()\n\tdefer p.configMutex.RUnlock()\n\n\tif p.config == nil {\n\t\treturn \"\", fmt.Errorf(\"no valid config available\")\n\t}\n\n\tsharedFS, err := p.isSharedFilesystem(c)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tif sharedFS {\n\t\t// we are ignoring 'node' and returning shared FS path\n\t\treturn c.SharedFileSystemPath, nil\n\t}\n\t// we are working with local FS\n\tnpMap := c.NodePathMap[node]\n\tif npMap == nil {\n\t\tnpMap = c.NodePathMap[NodeDefaultNonListedNodes]\n\t\tif npMap == nil {\n\t\t\treturn \"\", fmt.Errorf(\"config doesn't contain node %v, and no %v available\", node, NodeDefaultNonListedNodes)\n\t\t}\n\t\tlogrus.Debugf(\"config doesn't contain node %v, use %v instead\", node, NodeDefaultNonListedNodes)\n\t}\n\tpaths := npMap.Paths\n\tif len(paths) == 0 {\n\t\treturn \"\", fmt.Errorf(\"no local path available on node %v\", node)\n\t}\n\t// if a particular path was requested by storage class\n\tif requestedPath != \"\" {\n\t\tif _, ok := paths[requestedPath]; !ok {\n\t\t\treturn \"\", fmt.Errorf(\"config doesn't contain path %v on node %v\", requestedPath, node)\n\t\t}\n\t\treturn requestedPath, nil\n\t}\n\t// if no particular path was requested, choose a random one\n\tpath := \"\"\n\tfor path = range paths {\n\t\tbreak\n\t}\n\treturn path, nil\n}\n\nfunc (p *LocalPathProvisioner) isSharedFilesystem(c *StorageClassConfig) (bool, error) {\n\tp.configMutex.RLock()\n\tdefer p.configMutex.RUnlock()\n\n\tif p.config == nil {\n\t\treturn false, fmt.Errorf(\"no valid config available\")\n\t}\n\n\tif (c.SharedFileSystemPath != \"\") && (len(c.NodePathMap) != 0) {\n\t\treturn false, fmt.Errorf(\"both nodePathMap and sharedFileSystemPath are defined. Please make sure only one is in use\")\n\t}\n\n\tif len(c.NodePathMap) != 0 {\n\t\treturn false, nil\n\t}\n\n\tif c.SharedFileSystemPath != \"\" {\n\t\treturn true, nil\n\t}\n\n\treturn false, fmt.Errorf(\"both nodePathMap and sharedFileSystemPath are unconfigured\")\n}\n\nfunc (p *LocalPathProvisioner) pickConfig(storageClassName string) (*StorageClassConfig, error) {\n\tif len(p.config.StorageClassConfigs) == 0 {\n\t\treturn &p.config.StorageClassConfig, nil\n\t}\n\tcfg, ok := p.config.StorageClassConfigs[storageClassName]\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"BUG: Got request for unexpected storage class %s\", storageClassName)\n\t}\n\treturn &cfg, nil\n}\n\ntype pvMetadata struct {\n\tPVName string\n\tPVC    metav1.ObjectMeta\n}\n\nfunc pathFromPattern(pattern string, opts pvController.ProvisionOptions) (string, error) {\n\tmetadata := pvMetadata{\n\t\tPVName: opts.PVName,\n\t\tPVC:    opts.PVC.ObjectMeta,\n\t}\n\n\ttpl, err := template.New(\"pathPattern\").Parse(pattern)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tbuf := new(bytes.Buffer)\n\terr = tpl.Execute(buf, metadata)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn buf.String(), nil\n}\n\nfunc (p *LocalPathProvisioner) Provision(_ context.Context, opts pvController.ProvisionOptions) (*v1.PersistentVolume, pvController.ProvisioningState, error) {\n\tcfg, err := p.pickConfig(opts.StorageClass.Name)\n\tif err != nil {\n\t\treturn nil, pvController.ProvisioningFinished, err\n\t}\n\treturn p.provisionFor(opts, cfg)\n}\n\nfunc (p *LocalPathProvisioner) provisionFor(opts pvController.ProvisionOptions, c *StorageClassConfig) (*v1.PersistentVolume, pvController.ProvisioningState, error) {\n\tpvc := opts.PVC\n\tnode := opts.SelectedNode\n\tstorageClass := opts.StorageClass\n\tsharedFS, err := p.isSharedFilesystem(c)\n\tif err != nil {\n\t\treturn nil, pvController.ProvisioningFinished, err\n\t}\n\tif !sharedFS {\n\t\tif pvc.Spec.Selector != nil {\n\t\t\treturn nil, pvController.ProvisioningFinished, fmt.Errorf(\"claim.Spec.Selector is not supported\")\n\t\t}\n\t\tfor _, accessMode := range pvc.Spec.AccessModes {\n\t\t\tif accessMode != v1.ReadWriteOnce && accessMode != v1.ReadWriteOncePod {\n\t\t\t\treturn nil, pvController.ProvisioningFinished, fmt.Errorf(\"NodePath only supports ReadWriteOnce and ReadWriteOncePod (1.22+) access modes\")\n\t\t\t}\n\t\t}\n\t\tif node == nil {\n\t\t\treturn nil, pvController.ProvisioningFinished, fmt.Errorf(\"configuration error, no node was specified\")\n\t\t}\n\t}\n\n\tnodeName := \"\"\n\tif node != nil {\n\t\t// This clause works only with sharedFS\n\t\tnodeName = node.Name\n\t}\n\tvar requestedPath string\n\tif storageClass.Parameters != nil {\n\t\tif _, ok := storageClass.Parameters[\"nodePath\"]; ok {\n\t\t\trequestedPath = storageClass.Parameters[\"nodePath\"]\n\t\t}\n\t}\n\tbasePath, err := p.getPathOnNode(nodeName, requestedPath, c)\n\tif err != nil {\n\t\treturn nil, pvController.ProvisioningFinished, err\n\t}\n\n\tname := opts.PVName\n\tfolderName := strings.Join([]string{name, opts.PVC.Namespace, opts.PVC.Name}, \"_\")\n\n\tpathPattern, exists := opts.StorageClass.Parameters[\"pathPattern\"]\n\tif exists {\n\t\tfolderName, err = pathFromPattern(pathPattern, opts)\n\t\tif err != nil {\n\t\t\terr = errors.Wrapf(err, \"failed to create path from pattern %v\", pathPattern)\n\t\t\treturn nil, pvController.ProvisioningFinished, err\n\t\t}\n\t}\n\n\tpath := filepath.Join(basePath, folderName)\n\tif nodeName == \"\" {\n\t\tlogrus.Infof(\"Creating volume %v at %v\", name, path)\n\t} else {\n\t\tlogrus.Infof(\"Creating volume %v at %v:%v\", name, nodeName, path)\n\t}\n\n\tstorage := pvc.Spec.Resources.Requests[v1.ResourceName(v1.ResourceStorage)]\n\tprovisionCmd := make([]string, 0, 2)\n\tif p.config.SetupCommand == \"\" {\n\t\tprovisionCmd = append(provisionCmd, \"/bin/sh\", \"/script/setup\")\n\t} else {\n\t\tprovisionCmd = append(provisionCmd, p.config.SetupCommand)\n\t}\n\tif err := p.createHelperPod(ActionTypeCreate, provisionCmd, volumeOptions{\n\t\tName:        name,\n\t\tPath:        path,\n\t\tMode:        *pvc.Spec.VolumeMode,\n\t\tSizeInBytes: storage.Value(),\n\t\tNode:        nodeName,\n\t}, c); err != nil {\n\t\treturn nil, pvController.ProvisioningFinished, err\n\t}\n\n\tfs := v1.PersistentVolumeFilesystem\n\n\tvar pvs v1.PersistentVolumeSource\n\tvar volumeType string\n\tif dVal, ok := opts.StorageClass.GetAnnotations()[\"defaultVolumeType\"]; ok {\n\t\tvolumeType = dVal\n\t} else {\n\t\tvolumeType = defaultVolumeType\n\t}\n\tif val, ok := opts.PVC.GetAnnotations()[\"volumeType\"]; ok {\n\t\tvolumeType = val\n\t}\n\tpvs, err = createPersistentVolumeSource(volumeType, path)\n\tif err != nil {\n\t\treturn nil, pvController.ProvisioningFinished, err\n\t}\n\n\tvar nodeAffinity *v1.VolumeNodeAffinity\n\tif sharedFS {\n\t\t// If the same filesystem is mounted across all nodes, we don't need\n\t\t// affinity, as path is accessible from any node\n\t\tnodeAffinity = nil\n\t} else {\n\t\tvalueNode, ok := node.GetLabels()[KeyNode]\n\t\tif !ok {\n\t\t\tvalueNode = nodeName\n\t\t}\n\t\tnodeAffinity = &v1.VolumeNodeAffinity{\n\t\t\tRequired: &v1.NodeSelector{\n\t\t\t\tNodeSelectorTerms: []v1.NodeSelectorTerm{\n\t\t\t\t\t{\n\t\t\t\t\t\tMatchExpressions: []v1.NodeSelectorRequirement{\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tKey:      KeyNode,\n\t\t\t\t\t\t\t\tOperator: v1.NodeSelectorOpIn,\n\t\t\t\t\t\t\t\tValues: []string{\n\t\t\t\t\t\t\t\t\tvalueNode,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}\n\treturn &v1.PersistentVolume{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:        name,\n\t\t\tAnnotations: map[string]string{nodeNameAnnotationKey: nodeName},\n\t\t},\n\t\tSpec: v1.PersistentVolumeSpec{\n\t\t\tPersistentVolumeReclaimPolicy: *opts.StorageClass.ReclaimPolicy,\n\t\t\tAccessModes:                   pvc.Spec.AccessModes,\n\t\t\tVolumeMode:                    &fs,\n\t\t\tCapacity: v1.ResourceList{\n\t\t\t\tv1.ResourceStorage: pvc.Spec.Resources.Requests[v1.ResourceStorage],\n\t\t\t},\n\t\t\tPersistentVolumeSource: pvs,\n\t\t\tNodeAffinity:           nodeAffinity,\n\t\t},\n\t}, pvController.ProvisioningFinished, nil\n}\n\nfunc (p *LocalPathProvisioner) Delete(_ context.Context, pv *v1.PersistentVolume) (err error) {\n\tcfg, err := p.pickConfig(pv.Spec.StorageClassName)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn p.deleteFor(pv, cfg)\n}\n\nfunc (p *LocalPathProvisioner) deleteFor(pv *v1.PersistentVolume, c *StorageClassConfig) (err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"failed to delete volume %v\", pv.Name)\n\t}()\n\n\tpath, node, err := p.getPathAndNodeForPV(pv, c)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif pv.Spec.PersistentVolumeReclaimPolicy != v1.PersistentVolumeReclaimRetain {\n\t\tif node == \"\" {\n\t\t\tlogrus.Infof(\"Deleting volume %v at %v\", pv.Name, path)\n\t\t} else {\n\t\t\tlogrus.Infof(\"Deleting volume %v at %v:%v\", pv.Name, node, path)\n\t\t}\n\t\tstorage := pv.Spec.Capacity[v1.ResourceName(v1.ResourceStorage)]\n\t\tcleanupCmd := make([]string, 0, 2)\n\t\tif p.config.TeardownCommand == \"\" {\n\t\t\tcleanupCmd = append(cleanupCmd, \"/bin/sh\", \"/script/teardown\")\n\t\t} else {\n\t\t\tcleanupCmd = append(cleanupCmd, p.config.TeardownCommand)\n\t\t}\n\t\tif err := p.createHelperPod(ActionTypeDelete, cleanupCmd, volumeOptions{\n\t\t\tName:        pv.Name,\n\t\t\tPath:        path,\n\t\t\tMode:        *pv.Spec.VolumeMode,\n\t\t\tSizeInBytes: storage.Value(),\n\t\t\tNode:        node,\n\t\t}, c); err != nil {\n\t\t\tlogrus.Infof(\"clean up volume %v failed: %v\", pv.Name, err)\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t}\n\tlogrus.Infof(\"Retained volume %v\", pv.Name)\n\treturn nil\n}\n\nfunc (p *LocalPathProvisioner) getPathAndNodeForPV(pv *v1.PersistentVolume, cfg *StorageClassConfig) (path, node string, err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"failed to delete volume %v\", pv.Name)\n\t}()\n\n\tvolumeSource := pv.Spec.PersistentVolumeSource\n\tif volumeSource.HostPath != nil && volumeSource.Local == nil {\n\t\tpath = volumeSource.HostPath.Path\n\t} else if volumeSource.Local != nil && volumeSource.HostPath == nil {\n\t\tpath = volumeSource.Local.Path\n\t} else {\n\t\treturn \"\", \"\", fmt.Errorf(\"no path set\")\n\t}\n\n\tsharedFS, err := p.isSharedFilesystem(cfg)\n\tif err != nil {\n\t\treturn \"\", \"\", err\n\t}\n\n\tif sharedFS {\n\t\t// We don't have affinity and can use any node\n\t\treturn path, \"\", nil\n\t}\n\n\t// Dealing with local filesystem\n\n\tnodeAffinity := pv.Spec.NodeAffinity\n\tif nodeAffinity == nil {\n\t\treturn \"\", \"\", fmt.Errorf(\"no NodeAffinity set\")\n\t}\n\trequired := nodeAffinity.Required\n\tif required == nil {\n\t\treturn \"\", \"\", fmt.Errorf(\"no NodeAffinity.Required set\")\n\t}\n\n\tnode = \"\"\n\tfor _, selectorTerm := range required.NodeSelectorTerms {\n\t\tfor _, expression := range selectorTerm.MatchExpressions {\n\t\t\tif expression.Key == KeyNode && expression.Operator == v1.NodeSelectorOpIn {\n\t\t\t\tif len(expression.Values) != 1 {\n\t\t\t\t\treturn \"\", \"\", fmt.Errorf(\"multiple values for the node affinity\")\n\t\t\t\t}\n\t\t\t\tnode = expression.Values[0]\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif node != \"\" {\n\t\t\tbreak\n\t\t}\n\t}\n\tif node == \"\" {\n\t\treturn \"\", \"\", fmt.Errorf(\"cannot find affinited node\")\n\t}\n\treturn path, node, nil\n}\n\ntype volumeOptions struct {\n\tName        string\n\tPath        string\n\tMode        v1.PersistentVolumeMode\n\tSizeInBytes int64\n\tNode        string\n}\n\nfunc (p *LocalPathProvisioner) createHelperPod(action ActionType, cmd []string, o volumeOptions, cfg *StorageClassConfig) (err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"failed to %v volume %v\", action, o.Name)\n\t}()\n\tsharedFS, err := p.isSharedFilesystem(cfg)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif o.Name == \"\" || o.Path == \"\" || (!sharedFS && o.Node == \"\") {\n\t\treturn fmt.Errorf(\"invalid empty name or path or node\")\n\t}\n\tif !filepath.IsAbs(o.Path) {\n\t\treturn fmt.Errorf(\"volume path %s is not absolute\", o.Path)\n\t}\n\to.Path = filepath.Clean(o.Path)\n\tparentDir, volumeDir := filepath.Split(o.Path)\n\thostPathType := v1.HostPathDirectoryOrCreate\n\tlpvVolumes := []v1.Volume{\n\t\t{\n\t\t\tName: helperDataVolName,\n\t\t\tVolumeSource: v1.VolumeSource{\n\t\t\t\tHostPath: &v1.HostPathVolumeSource{\n\t\t\t\t\tPath: parentDir,\n\t\t\t\t\tType: &hostPathType,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tlpvTolerations := []v1.Toleration{\n\t\t{\n\t\t\tOperator: v1.TolerationOpExists,\n\t\t},\n\t}\n\thelperPod := p.helperPod.DeepCopy()\n\n\tkeyToPathItems := make([]v1.KeyToPath, 0, 2)\n\n\tif p.config.SetupCommand == \"\" {\n\t\tkeyToPathItems = append(keyToPathItems, v1.KeyToPath{\n\t\t\tKey:  \"setup\",\n\t\t\tPath: \"setup\",\n\t\t})\n\t}\n\n\tif p.config.TeardownCommand == \"\" {\n\t\tkeyToPathItems = append(keyToPathItems, v1.KeyToPath{\n\t\t\tKey:  \"teardown\",\n\t\t\tPath: \"teardown\",\n\t\t})\n\t}\n\n\tif len(keyToPathItems) > 0 {\n\t\tlpvVolumes = append(lpvVolumes, v1.Volume{\n\t\t\tName: \"script\",\n\t\t\tVolumeSource: v1.VolumeSource{\n\t\t\t\tConfigMap: &v1.ConfigMapVolumeSource{\n\t\t\t\t\tLocalObjectReference: v1.LocalObjectReference{\n\t\t\t\t\t\tName: p.configMapName,\n\t\t\t\t\t},\n\t\t\t\t\tItems: keyToPathItems,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\n\t\tscriptMount := addVolumeMount(&helperPod.Spec.Containers[0].VolumeMounts, helperScriptVolName, helperScriptDir)\n\t\tscriptMount.MountPath = helperScriptDir\n\t}\n\n\tdataMount := addVolumeMount(&helperPod.Spec.Containers[0].VolumeMounts, helperDataVolName, parentDir)\n\tparentDir = dataMount.MountPath\n\tparentDir = strings.TrimSuffix(parentDir, string(filepath.Separator))\n\tvolumeDir = strings.TrimSuffix(volumeDir, string(filepath.Separator))\n\tif parentDir == \"\" || volumeDir == \"\" || !filepath.IsAbs(parentDir) {\n\t\t// it covers the `/` case\n\t\treturn fmt.Errorf(\"invalid path %v for %v: cannot find parent dir or volume dir or parent dir is relative\", action, o.Path)\n\t}\n\tenv := []v1.EnvVar{\n\t\t{Name: envVolDir, Value: filepath.Join(parentDir, volumeDir)},\n\t\t{Name: envVolMode, Value: string(o.Mode)},\n\t\t{Name: envVolSize, Value: strconv.FormatInt(o.SizeInBytes, 10)},\n\t}\n\n\t// use different name for helper pods\n\t// https://github.com/rancher/local-path-provisioner/issues/154\n\thelperPod.Name = (helperPod.Name + \"-\" + string(action) + \"-\" + o.Name)\n\tif len(helperPod.Name) > HelperPodNameMaxLength {\n\t\thelperPod.Name = helperPod.Name[:HelperPodNameMaxLength]\n\t}\n\thelperPod.Namespace = p.namespace\n\tif o.Node != \"\" {\n\t\thelperPod.Spec.NodeName = o.Node\n\t}\n\thelperPod.Spec.ServiceAccountName = p.serviceAccountName\n\thelperPod.Spec.RestartPolicy = v1.RestartPolicyNever\n\thelperPod.Spec.Tolerations = append(helperPod.Spec.Tolerations, lpvTolerations...)\n\thelperPod.Spec.Volumes = append(helperPod.Spec.Volumes, lpvVolumes...)\n\thelperPod.Spec.Containers[0].Command = cmd\n\thelperPod.Spec.Containers[0].Env = append(helperPod.Spec.Containers[0].Env, env...)\n\thelperPod.Spec.Containers[0].Args = []string{\"-p\", filepath.Join(parentDir, volumeDir),\n\t\t\"-s\", strconv.FormatInt(o.SizeInBytes, 10),\n\t\t\"-m\", string(o.Mode),\n\t\t\"-a\", string(action)}\n\n\t// If it already exists due to some previous errors, the pod will be cleaned up later automatically\n\t// https://github.com/rancher/local-path-provisioner/issues/27\n\tlogrus.Infof(\"create the helper pod %s into %s\", helperPod.Name, p.namespace)\n\tpod, err := p.kubeClient.CoreV1().Pods(p.namespace).Create(context.TODO(), helperPod, metav1.CreateOptions{})\n\tif err != nil && !k8serror.IsAlreadyExists(err) {\n\t\treturn err\n\t}\n\n\tdefer func() {\n\t\t// log helper pod logs to the controller\n\t\tif err := saveHelperPodLogs(pod); err != nil {\n\t\t\tlogrus.Error(err.Error())\n\t\t}\n\t\te := p.kubeClient.CoreV1().Pods(p.namespace).Delete(context.TODO(), helperPod.Name, metav1.DeleteOptions{})\n\t\tif e != nil {\n\t\t\tlogrus.Errorf(\"unable to delete the helper pod: %v\", e)\n\t\t}\n\t}()\n\n\tcompleted := false\n\tfor i := 0; i < p.config.CmdTimeoutSeconds; i++ {\n\t\tif pod, err := p.kubeClient.CoreV1().Pods(p.namespace).Get(context.TODO(), helperPod.Name, metav1.GetOptions{}); err != nil {\n\t\t\treturn err\n\t\t} else if pod.Status.Phase == v1.PodSucceeded {\n\t\t\tcompleted = true\n\t\t\tbreak\n\t\t}\n\t\ttime.Sleep(1 * time.Second)\n\t}\n\tif !completed {\n\t\treturn fmt.Errorf(\"create process timeout after %v seconds\", p.config.CmdTimeoutSeconds)\n\t}\n\n\tif o.Node == \"\" {\n\t\tlogrus.Infof(\"Volume %v has been %vd on %v\", o.Name, action, o.Path)\n\t} else {\n\t\tlogrus.Infof(\"Volume %v has been %vd on %v:%v\", o.Name, action, o.Node, o.Path)\n\t}\n\treturn nil\n}\n\nfunc addVolumeMount(mounts *[]v1.VolumeMount, name, mountPath string) *v1.VolumeMount {\n\tfor i, m := range *mounts {\n\t\tif m.Name == name {\n\t\t\tif m.MountPath == \"\" {\n\t\t\t\t(*mounts)[i].MountPath = mountPath\n\t\t\t}\n\t\t\treturn &(*mounts)[i]\n\t\t}\n\t}\n\t*mounts = append(*mounts, v1.VolumeMount{Name: name, MountPath: mountPath})\n\treturn &(*mounts)[len(*mounts)-1]\n}\n\nfunc isJSONFile(configFile string) bool {\n\treturn strings.HasSuffix(configFile, \".json\")\n}\n\nfunc unmarshalFromString(configFile string) (*ConfigData, error) {\n\tvar data ConfigData\n\tif err := json.Unmarshal([]byte(configFile), &data); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &data, nil\n}\n\nfunc loadConfigFile(configFile string) (cfgData *ConfigData, err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"fail to load config file %v\", configFile)\n\t}()\n\n\tif !isJSONFile(configFile) {\n\t\treturn unmarshalFromString(configFile)\n\t}\n\n\tf, err := os.Open(configFile)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\n\tvar data ConfigData\n\tif err := json.NewDecoder(f).Decode(&data); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &data, nil\n}\n\nfunc canonicalizeConfig(data *ConfigData) (cfg *Config, err error) {\n\tcfg = &Config{}\n\tif len(data.StorageClassConfigs) == 0 {\n\t\tdefaultConfig, err := canonicalizeStorageClassConfig(&data.StorageClassConfigData)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tcfg.StorageClassConfig = *defaultConfig\n\t} else {\n\t\tcfg.StorageClassConfigs = make(map[string]StorageClassConfig, len(data.StorageClassConfigs))\n\t\tfor name, classData := range data.StorageClassConfigs {\n\t\t\tclassCfg, err := canonicalizeStorageClassConfig(&classData)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, errors.Wrap(err, fmt.Sprintf(\"config for class %s is invalid\", name))\n\t\t\t}\n\t\t\tcfg.StorageClassConfigs[name] = *classCfg\n\t\t}\n\t}\n\tcfg.SetupCommand = data.SetupCommand\n\tcfg.TeardownCommand = data.TeardownCommand\n\tif data.CmdTimeoutSeconds > 0 {\n\t\tcfg.CmdTimeoutSeconds = data.CmdTimeoutSeconds\n\t} else {\n\t\tcfg.CmdTimeoutSeconds = defaultCmdTimeoutSeconds\n\t}\n\treturn cfg, nil\n}\n\nfunc canonicalizeStorageClassConfig(data *StorageClassConfigData) (cfg *StorageClassConfig, err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"StorageClass config canonicalization failed\")\n\t}()\n\tcfg = &StorageClassConfig{}\n\tcfg.SharedFileSystemPath = data.SharedFileSystemPath\n\tcfg.NodePathMap = map[string]*NodePathMap{}\n\tfor _, n := range data.NodePathMap {\n\t\tif cfg.NodePathMap[n.Node] != nil {\n\t\t\treturn nil, fmt.Errorf(\"duplicate node %v\", n.Node)\n\t\t}\n\t\tnpMap := &NodePathMap{Paths: map[string]struct{}{}}\n\t\tcfg.NodePathMap[n.Node] = npMap\n\t\tfor _, p := range n.Paths {\n\t\t\tif p[0] != '/' {\n\t\t\t\treturn nil, fmt.Errorf(\"path must start with / for path %v on node %v\", p, n.Node)\n\t\t\t}\n\t\t\tpath, err := filepath.Abs(p)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t\tif path == \"/\" {\n\t\t\t\treturn nil, fmt.Errorf(\"cannot use root ('/') as path on node %v\", n.Node)\n\t\t\t}\n\t\t\tif _, ok := npMap.Paths[path]; ok {\n\t\t\t\treturn nil, fmt.Errorf(\"duplicate path %v on node %v\", p, n.Node)\n\t\t\t}\n\t\t\tnpMap.Paths[path] = struct{}{}\n\t\t}\n\t}\n\n\treturn cfg, nil\n}\n\nfunc createPersistentVolumeSource(volumeType string, path string) (pvs v1.PersistentVolumeSource, err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"failed to create persistent volume source\")\n\t}()\n\n\tswitch strings.ToLower(volumeType) {\n\tcase \"local\":\n\t\tpvs = v1.PersistentVolumeSource{\n\t\t\tLocal: &v1.LocalVolumeSource{\n\t\t\t\tPath: path,\n\t\t\t},\n\t\t}\n\tcase \"hostpath\":\n\t\thostPathType := v1.HostPathDirectoryOrCreate\n\t\tpvs = v1.PersistentVolumeSource{\n\t\t\tHostPath: &v1.HostPathVolumeSource{\n\t\t\t\tPath: path,\n\t\t\t\tType: &hostPathType,\n\t\t\t},\n\t\t}\n\tdefault:\n\t\treturn pvs, fmt.Errorf(\"\\\"%s\\\" is not a recognised volume type\", volumeType)\n\t}\n\n\treturn pvs, nil\n}\n\n// saveHelperPodLogs takes what is in stdout/stderr from the helper\n// pod and logs it to the provisioner's logs. Returns an error if we\n// can't retrieve the helper pod logs.\nfunc saveHelperPodLogs(pod *v1.Pod) (err error) {\n\tdefer func() {\n\t\terr = errors.Wrapf(err, \"failed to save %s logs\", pod.Name)\n\t}()\n\n\t// save helper pod logs\n\tpodLogOpts := v1.PodLogOptions{\n\t\tContainer: \"helper-pod\",\n\t}\n\tconfig, err := rest.InClusterConfig()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to retrieve in cluster config: %s\", err.Error())\n\t}\n\t// creates the clientset\n\tclientset, err := clientset.NewForConfig(config)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to get access to k8s: %s\", err.Error())\n\t}\n\treq := clientset.CoreV1().Pods(pod.Namespace).GetLogs(pod.Name, &podLogOpts)\n\tpodLogs, err := req.Stream(context.TODO())\n\tif err != nil {\n\t\treturn fmt.Errorf(\"error in opening stream: %s\", err.Error())\n\t}\n\n\tbuf := new(bytes.Buffer)\n\t_, err = io.Copy(buf, podLogs)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"error in copying information from podLogs to buf: %s\", err.Error())\n\t}\n\tpodLogs.Close()\n\n\t// log all messages from the helper pod to the controller\n\tlogrus.Infof(\"Start of %s logs\", pod.Name)\n\tbufferStr := buf.String()\n\tif len(bufferStr) > 0 {\n\t\thelperPodLogs := strings.Split(strings.Trim(bufferStr, \"\\n\"), \"\\n\")\n\t\tfor _, log := range helperPodLogs {\n\t\t\tlogrus.Info(log)\n\t\t}\n\t}\n\tlogrus.Infof(\"End of %s logs\", pod.Name)\n\treturn nil\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "util.go",
          "type": "blob",
          "size": 0.8935546875,
          "content": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\t\"sigs.k8s.io/yaml\"\n)\n\nfunc loadFile(filepath string) (string, error) {\n\tf, err := os.Open(filepath)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tdefer f.Close()\n\thelperPodYaml, err := io.ReadAll(f)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn string(helperPodYaml), nil\n}\n\nfunc loadHelperPodFile(helperPodYaml string) (*v1.Pod, error) {\n\thelperPodJSON, err := yaml.YAMLToJSON([]byte(helperPodYaml))\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid YAMLToJSON the helper pod with helperPodYaml: %v\", helperPodYaml)\n\t}\n\tp := v1.Pod{}\n\terr = json.Unmarshal(helperPodJSON, &p)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"invalid unmarshal the helper pod with helperPodJson: %v\", string(helperPodJSON))\n\t}\n\tif len(p.Spec.Containers) == 0 {\n\t\treturn nil, fmt.Errorf(\"helper pod template does not specify any container\")\n\t}\n\treturn &p, nil\n}\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}