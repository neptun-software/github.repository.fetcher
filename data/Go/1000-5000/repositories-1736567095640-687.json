{
  "metadata": {
    "timestamp": 1736567095640,
    "page": 687,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "git-town/git-town",
      "stars": 2687,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gherkin-lintignore",
          "type": "blob",
          "size": 1.0517578125,
          "content": "vendor/**\n\n# this file has an intentionally unusual structure\nfeatures/sync/current_branch/feature_branch/merge_sync_strategy/features/two_collaborators.feature\nfeatures/sync/current_branch/feature_branch/rebase_sync_strategy/features/two_collaborators.feature\nfeatures/sync/all_branches/edge_cases/feature_branch_main_branch_conflict/shipped_changes_conflict_with_existing_feature_branch.feature\nfeatures/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/conflicting_commits.feature\nfeatures/sync/current_branch/feature_branch/mixed_sync_strategies/two_collaborators_different_sync_strategies.feature\nfeatures/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_parallel.feature\nfeatures/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_serial.feature\nfeatures/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/nonconflicting_changes_serial.feature\nfeatures/sync/current_branch/feature_branch/compress_sync_strategy/happy_path.feature\n"
        },
        {
          "name": ".gherkin-lintrc",
          "type": "blob",
          "size": 1.076171875,
          "content": "{\n  \"allowed-tags\": [ \"on\", { \"tags\": [ \"@messyoutput\", \"@skipWindows\", \"@smoke\" ] } ],\n  \"file-name\": [ \"on\", { \"style\": \"snake_case\" } ],\n  \"indentation\": [\n    \"on\",\n    {\n      \"Feature\": 0,\n      \"Background\": 2,\n      \"Scenario\": 2,\n      \"Step\": 4,\n      \"Examples\": 4,\n      \"example\": 6,\n      \"given\": 4,\n      \"when\": 4,\n      \"then\": 4,\n      \"and\": 4,\n      \"but\": 4,\n      \"feature tag\": 0,\n      \"scenario tag\": 2\n    }\n  ],\n  \"keywords-in-logical-order\": \"off\",\n  \"new-line-at-eof\": [ \"on\", \"yes\" ],\n  \"no-background-only-scenario\": \"off\",\n  \"no-dupe-scenario-names\": [ \"on\", \"in-feature\" ],\n  \"no-duplicate-tags\": \"on\",\n  \"no-empty-background\": \"on\",\n  \"no-empty-file\": \"on\",\n  \"no-examples-in-scenarios\": \"on\",\n  \"no-files-without-scenarios\": \"on\",\n  \"no-homogenous-tags\": \"on\",\n  \"no-multiple-empty-lines\": \"on\",\n  \"no-partially-commented-tag-lines\": \"on\",\n  \"no-scenario-outlines-without-examples\": \"on\",\n  \"no-superfluous-tags\": \"on\",\n  \"no-trailing-spaces\": \"on\",\n  \"no-unnamed-features\": \"on\",\n  \"no-unused-variables\": \"on\",\n  \"one-space-between-tags\": \"on\",\n  \"use-and\": \"on\"\n}\n"
        },
        {
          "name": ".git-branches.toml",
          "type": "blob",
          "size": 0.20703125,
          "content": "[branches]\nmain = \"main\"\nperennials = [\"public\"]\n\n[ship]\ndelete-tracking-branch = false\nstrategy = \"fast-forward\"\n\n[sync]\nfeature-strategy = \"merge\"\nperennial-strategy = \"rebase\"\npush-hook = true\nupstream = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3359375,
          "content": "dist/\ngit-town.exe\ngit-town_*\ngo.work.sum\nnode_modules/\nrta.exe\ntools/alphavet*\ntools/depth*\ntools/gofumpt*\ntools/golangci_lint*\ntools/lint_steps/lint_steps\ntools/stats_release/stats_release\ntools/structs_sorted/structs_sorted\ntools/tests_sorted/tests_sorted\ntools/rta*\ntools/scc*\ntools/shellcheck*\ntools/shfmt*\nwebsite/bin/\nwebsite/book/\nwww/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 4.0751953125,
          "content": "linters:\n  enable-all: true\n  disable:\n    - cyclop # we keep a tab on function length ourselves\n    - depguard # we review our dependencies in pull requests\n    - dogsled # nothing we can do about this one\n    - dupl # too many false positives\n    - err113 # this leads to lots of unnecessary allocations and boilerplate\n    - exportloopref # deprecated\n    - exhaustruct # we call this separately from golangci-lint via \"make lint-smoke\"\n    - forbidigo # Git Town prints a lot to the CLI\n    - forcetypeassert\n    - funlen # we keep track of this via code reviews\n    - gci # we prefer keeping import statements as one blocks without empty lines\n    - gocognit # we keep track of this via code reviews\n    - goconst # tests contain a ton of hard-coded test strings, for example branch names\n    - gocyclo # we keep track of this via code reviews\n    - godot # comments don't really need to read like prose, we don't use the godoc web UI\n    - godox # we allow todo comments\n    - inamedparam # we are okay with concise interfaces\n    - lll # we aren't enforcing a line length at this point\n    - maintidx # we keep complexity under check with code reviews\n    - mnd # we keep track of magic numbers through code reviews\n    - musttag # we document JSON serialization via unit tests\n    - nakedret # not useful\n    - nestif # we keep complexity under check with code reviews\n    - nilnil # in our code returning nil, nil makes sense\n    - nonamedreturns # they are useful in too many situations\n    - nlreturn # this forces unnecessary empty lines in function bodies\n    - staticcheck # we run this separately\n    - typecheck # seems buggy\n    - varnamelen # not really useful\n    - wrapcheck # too many false positives for return values defined in internal packages\n    - wsl # this linter creates too many false positives, our policy is to not have any empty lines in code blocks\n\nlinters-settings:\n  ireturn:\n    allow:\n      - error\n      - stdlib\n      - github.com/git-town/git-town/v17/internal/git.FrontendRunner\n      - github.com/git-town/git-town/v17/internal/git.BackendRunner\n  tagliatelle:\n    case:\n      use-field-name: true\n      rules:\n        json: pascal # set to pascal to maintain backwards compatibility\n\nissues:\n  # List of regexps of issue texts to exclude, empty list by default.\n  # But independently from this option we use default exclude patterns,\n  # it can be disabled by `exclude-use-default: false`. To list all\n  # excluded by default patterns, run `golangci-lint run --help`\n  exclude:\n    - Using the variable on range scope `(input|expected)` in function literal\n  exclude-rules:\n    - linters:\n        - gocritic\n      text: \"appendAssign: append result not assigned to the same slice\" # there are legitimate use cases for this, correct appending should be verified by unit tests\n    - linters:\n        - revive\n      text: \"dot-imports: should not use dot imports\"\n    - linters:\n        - stylecheck\n      text: \"ST1001: should not use dot imports\"\n    - linters:\n        - goerr113\n      text: \"do not define dynamic errors\"\n    - linters:\n        - ireturn\n      text: github.com/git-town/git-town/v17/internal/(hosting/hostingdomain.Connector|hosting.Connector)\n    - path: internal/gohacks/cache/cache.go\n      linters:\n        - ireturn\n    - path: internal/gohacks/cache/with_previous.go\n      linters:\n        - ireturn\n    - path: internal/gohacks/slice/first_element_or.go\n      linters:\n        - ireturn\n    - text: receiver name should be a reflection of its identity\n      linters:\n        - stylecheck\n    - text: receiver name should be a reflection of its identity\n      linters:\n        - revive\n    - text: increment-decrement\n      linters:\n        - revive\n    - linters:\n        - predeclared\n      text: package name print has same name as predeclared identifier\n    - path: internal/cli/dialog/git.*_token.go\n      text: Potential hardcoded credentials\n      linters:\n        - gosec\n\n    - path: internal/messages/en.go\n      text: Potential hardcoded credentials\n      linters:\n        - gosec\n    - path: pkg/key_github_token.go\n      text: Potential hardcoded credentials\n      linters:\n        - gosec\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 2.2685546875,
          "content": "archives:\n  - files:\n    format_overrides:\n      - goos: windows\n        format: zip\n    name_template: >-\n      {{- .ProjectName }}_\n      {{- if eq .Os \"darwin\" }}macos\n      {{- else }}{{ .Os }}{{ end }}_\n      {{- if eq .Arch \"amd64\" }}intel_64\n      {{- else if eq .Arch \"arm64\" }}arm_64\n      {{- else }}{{ .Arch }}{{ end }}\n\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    ldflags:\n      - -s -w\n    goarch:\n      - amd64\n      - arm64\n    goos:\n      - darwin\n      - linux\n      - windows\n      - freebsd\n      - netbsd\n\nchangelog:\n  skip: true\n\nchecksum:\n  name_template: \"checksums.txt\"\n\nchocolateys:\n  - name: git-town\n    owners: Kevin Goslar\n    title: Git Town\n    authors: the Git Town authors\n    project_url: https://www.git-town.com\n    license_url: https://github.com/git-town/git-town/blob/main/LICENSE\n    require_license_acceptance: false\n    project_source_url: https://github.com/git-town/git-town\n    docs_url: https://www.git-town.com\n    bug_tracker_url: https://github.com/git-town/git-town/issues\n    tags: \"git command-line workflow productivity\"\n    summary: Git workflow automation to keep branches in sync and reduce merge conflicts.\n    description: |\n      Git Town reduces merge conflicts by keeping Git branches better in sync.\n      Compatible with all major Git workflows including Git Flow, GitHub Flow, GitLab Flow, and trunk-based development.\n    release_notes: \"https://github.com/git-town/git-town/releases/tag/v{{ .Version }}\"\n    url_template: \"https://github.com/git-town/git-town/releases/download/{{ .Tag }}/{{ .ArtifactName }}\"\n    api_key: \"{{ .Env.CHOCOLATEY_API_KEY }}\"\n    source_repo: \"https://push.chocolatey.org/\"\n    skip_publish: false\n\nnfpms:\n  - id: git-town\n    package_name: git-town\n    file_name_template: >-\n      {{- .ProjectName }}_\n      {{- .Os }}_\n      {{- if eq .Arch \"amd64\" }}intel_64\n      {{- else if eq .Arch \"arm64\" }}arm_64\n      {{- else }}{{ .Arch }}{{ end }}\n    vendor: the Git Town authors\n    maintainer: the Git Town authors\n    homepage: https://www.git-town.com\n    description: High-level command-line interface for Git\n    license: MIT\n    formats:\n      - deb\n      - rpm\n      - archlinux\n    dependencies:\n      - git\n\nrelease:\n  draft: true\n  replace_existing_draft: true\n  extra_files:\n    - glob: ./git-town_windows_intel_64.msi\n"
        },
        {
          "name": ".gource.conf",
          "type": "blob",
          "size": 0.396484375,
          "content": "[display]\nfullscreen=true\nviewport=3840x2160\n\n[gource]\nauto-skip-seconds=0.0001\ndate-format=%d %b %Y\nelasticity=0.001\nfile-idle-time=0\nfile-filter=vendor|DS_Store|gitignore|lock|fish|editorconfig|ruby-version|prettier\nfixed-user-size=true\nfont-size=24\nhide=dirnames,filenames,mouse,bloom\nhighlight-users=true\nkey=true\nlogo=website/src/logo-dark.svg\nmax-file-lag=0.001\nseconds-per-day=0.05\nstop-at-end=true\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "vendor/\n"
        },
        {
          "name": ".prettierrc.json",
          "type": "blob",
          "size": 0.111328125,
          "content": "{\n  \"overrides\": [\n    {\n      \"files\": \"*.yml\",\n      \"options\": {\n        \"printWidth\": 120\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".testconfig.json",
          "type": "blob",
          "size": 0.5927734375,
          "content": "{\n  \"actions\": [\n    {\n      \"type\": \"testAll\",\n      \"run\": \"make test-go\"\n    },\n\n    {\n      \"type\": \"testFile\",\n      \"files\": \"**/*.feature\",\n      \"run\": \"go test -- {{file}}\"\n    },\n\n    {\n      \"type\": \"testFileLine\",\n      \"files\": \"**/*.feature\",\n      \"run\": \"make cukethis\"\n    },\n\n    {\n      \"type\": \"testFile\",\n      \"files\": \"**/*_test.go\",\n      \"run\": \"go test {{file}}\"\n    }\n  ],\n  \"options\": {\n    \"beforeRun\": {\n      \"clearScreen\": true\n    },\n    \"afterRun\": {\n      \"newlines\": 1,\n      \"indicatorLines\": 3,\n      \"indicatorBackground\": true,\n      \"printResult\": false\n    }\n  }\n}\n"
        },
        {
          "name": ".tool-versions",
          "type": "blob",
          "size": 0.302734375,
          "content": "actionlint 1.7.4\nalphavet 0.1.0\ndeadcode 0.28.0\ndepth 1.2.1\ndprint 0.48.0\nexhaustruct 3.3.0\nireturn 0.3.1\nghokin 3.7.0\ngofumpt 0.7.0\ngolangci-lint 1.62.2\ngoreleaser 1.26.2\ngovulncheck 1.1.3\nmdbook 0.4.43\nnode 22.12.0\nnpm 22.12.0\nnpx 22.12.0\nscc 3.4.0\nshellcheck system 0.10.0\nshfmt 3.10.0\nstaticcheck 2024.1.1\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 82.4453125,
          "content": "# Git Town Changelog\n\n## 17.2.0 (2024-01-02)\n\n#### New Features\n\n- The new [always-merge ship strategy](https://www.git-town.com/preferences/ship-strategy.html#always-merge) always creates a merge commit when shipping a branch ([#4381](https://github.com/git-town/git-town/issues/4381)).\n- `git town prepend` now has a [--beam](https://www.git-town.com/commands/prepend.html#-b--beam) option. When enabled, it allows the user to choose one or more commits to move into the new branch that is getting prepended ([#4356](https://github.com/git-town/git-town/pull/4356)).\n- `git town prepend` now has a [--propose](https://www.git-town.com/commands/prepend.html#--propose) flag. When enabled, it automatically proposes the new branch. This is meant to be used together with `--beam` ([#4377](https://github.com/git-town/git-town/issues/4377)).\n- Git Town's `hack` command can now make any branch type a feature branch ([#4373](https://github.com/git-town/git-town/issues/4373)).\n- The new [git town status show command](https://www.git-town.com/commands/status-show.html) displays details about the currently interrupted Git Town command ([#4457](https://github.com/git-town/git-town/pull/4457)).\n- Git Town now adds a message to entries it creates on the Git stash. This helps identify which stash entries were created by Git Town ([#4479](https://github.com/git-town/git-town/pull/4479)).\n- If the only problem Git Town encounters is conflicts when running `git stash pop` at the end, it drops the stash entry and no longer returns with an error ([#4480](https://github.com/git-town/git-town/pull/4480)).\n\n#### Bug Fixes\n\n- The setup assistant no longer crashes when run in a brand-new repository ([#4365](https://github.com/git-town/git-town/pull/4365)).\n- `git town status reset` now works ([#4469](https://github.com/git-town/git-town/pull/4469)).\n\n#### Contributors\n\nShoutout to @Crocmagnon, @kevgo, @legeana, @lud-wj, @ruudk, @stephenwade, @wayne-zhan for contributing feedback, ideas, documentation, and code to 104 shipped PRs and 7 resolved issues!\n\n## 17.1.1 (2024-12-20)\n\nGit Town 17.1.1 ships a bug fix that unblocks BitBucket Datacenter users.\n\n#### Bug Fixes\n\n- Fixes a bug in the BitBucket-Datacenter driver ([#4371](https://github.com/git-town/git-town/pull/4371)).\n\n#### Contributors\n\nShoutout to @Crocmagnon, @kevgo, @stephenwade for contributing bug fixes and ideas to 13 shipped PRs.\n\n## 17.1.0 (2024-12-19)\n\nGit Town 17.1 unblocks users who have submitted urgent issues.\n\n#### New Features\n\n- The configuration file can now also be named \".git-town.toml\", in addition to \".git-branches.toml\". This helps users locate it when looking for \"Git Town configuration\". ([#4343](https://github.com/git-town/git-town/issues/4343)).\n- Supports development versions of Git ([#4344](https://github.com/git-town/git-town/pull/4344)).\n- `git town switch` no longer asks for ancestry information. This avoids the risk of accidentally selecting a wrong parent branch when one is under the assumption of selecting a branch to switch to ([#4340](https://github.com/git-town/git-town/issues/4340)).\n- Git Town now uses full-length SHA values to address commits. This improves reliability in very large repositories ([#4339](https://github.com/git-town/git-town/pull/4339)).\n\n#### Bug Fixes\n\n- The setup assistant now allows configuring a \"BitBucket-Datacenter\" setup ([#4360](https://github.com/git-town/git-town/pull/4360)).\n\n#### Contributors\n\nShoutout to @kevgo, @lud-wj, @pratikpc, @ruudk, @stephenwade for contributing feedback, ideas, documentation, and code to 28 shipped PRs and 5 resolved issues!\n\n## 17.0.0 (2024-12-16)\n\nGit Town v17 modernizes some outdated concepts that were already documented. As always with major new Git Town releases, all changes are backwards compatible, so Git Town users don't need to change anything. The major version bump is merely a signal that you might need to update some of your own tooling around Git Town.\n\n#### BREAKING CHANGES\n\n- The configuration setting `create-prototype-branches` gets generalized into `new-branch-type`, which allows giving new branches all available branch types ([#3913](https://github.com/git-town/git-town/issues/3913)).\n- The output of `git town config` now displays data organized in more sections ([#3866](https://github.com/git-town/git-town/issues/3866)).\n- The config file gets generated without comments now, improving its readability ([#4335](https://github.com/git-town/git-town/pull/4335))\n- The output of `git town config` now indicates more precisely whether an configuration setting is not provided or empty ([#4265](https://github.com/git-town/git-town/pull/4265)).\n\n#### New Features\n\n- When removing a branch, `git town sync` and `git town delete` now also remove the changes of those branches from their descendents ([#4189](https://github.com/git-town/git-town/issues/4189)).\n- `git town set-parent` now also removes the changes from former parent branches ([#3473](https://github.com/git-town/git-town/issues/3473)).\n- Git Town can now auto-resolve merge conflicts that include deleted files ([#4289](https://github.com/git-town/git-town/pull/4289)).\n- The name of the Git remote used for development is now configurable ([#4165](https://github.com/git-town/git-town/issues/4165)).\n- The setup assistant (`git town config setup`) now asks for the [sync-prototype-strategy](https://www.git-town.com/preferences/sync-prototype-strategy).\n- `git town config` now displays the [sync-prototype-strategy](https://www.git-town.com/preferences/sync-prototype-strategy).\n\n#### Bug Fixes\n\n- Git Town no longer pops up the editor when continuing a command that got stuck in a rebase in certain situations ([#4285](https://github.com/git-town/git-town/pull/4285)).\n- Now only updates Git aliases when auto-updating of outdated configuration entries that aren't Git Town settings ([#4304](https://github.com/git-town/git-town/pull/4304)).\n\n#### Contributors\n\nShoutout to @Crocmagnon, @WhosNickDoglio, @alphatroya, @avaz, @erik-rw, @kevgo, @koppor, @matthewgonzalez, @mklauer, @nishchay-manwani-glean, @pandvan, @ruudk, @sheldonhull, @smaldored, @stephenwade for contributing feedback, ideas, documentation, and code to 70 shipped PRs and 13 resolved issues!\n\n## 16.7.0 (2024-11-30)\n\n#### New Features\n\n- Support for BitBucket Datacenter ([#4239](https://github.com/git-town/git-town/pull/4239))\n\n#### Bug Fixes\n\n- Fixes a regression where branches shipped at the remote were no longer cleaned up ([#4222](https://github.com/git-town/git-town/issues/4222))\n- Fixes a regression where branches that were shipped at the remote and deleted manually on the local machine were no longer cleaned up ([#4132](https://github.com/git-town/git-town/issues/4132))\n- Correctly handles leading and trailing spaces in Git metadata branch lists ([#4240](https://github.com/git-town/git-town/pull/4240)\n- `git town status reset` now works even if the persisted status is invalid ([#4236](https://github.com/git-town/git-town/pull/4236))\n\n#### Contributors\n\nShoutout to @Crocmagnon, @alexdavid, @kevgo, @ruudk, @stephenwade for contributing feedback, ideas, documentation, and code to 26 shipped pull requests and 6 resolved issues!\n\n## 16.6.1 (2024-11-20)\n\n#### Bug Fixes\n\n- `git town ship` no longer closes child proposals when using the `fast-forward` ship-strategy ([#4210](https://github.com/git-town/git-town/issues/4210))\n- `git town propose` no longer opens the browser when proposing a branch that was deleted at the remote ([#4171](https://github.com/git-town/git-town/issues/4171))\n- Bash-based installer makes the binary executable ([#4231](https://github.com/git-town/git-town/pull/4231))\n- Stability improvements ([#4216](https://github.com/git-town/git-town/pull/4216))\n\n#### Contributors\n\nShoutout to @EngHabu, @kevgo, @stephenwade, @thatch, @tranhl for contributing feedback, ideas, documentation, and code to 20 shipped PRs and 6 resolved issues!\n\n## 16.6.0 (2024-11-12)\n\n#### New Features\n\n- Git Town now auto-resolves phantom merge conflicts for the `merge` and `compress` [sync-feature-strategy](https://www.git-town.com/preferences/sync-feature-strategy) ([#4183](https://github.com/git-town/git-town/pull/4183)). This eliminates the need to manually resolve unnecessary merge conflicts when you ship the oldest branch in a stack and then sync the rest of the stack.\n- The new [git town merge](https://www.git-town.com/commands/merge) command merges two adjacent branches in a branch stack ([#4196](https://github.com/git-town/git-town/pull/4196)).\n\n#### Bug Fixes\n\n- Git Town's new capabilities-driven architecture now only attempts to change proposals if the hosting platform supports it. This reduces error messages by preventing unsupported operations ([#4203](https://github.com/git-town/git-town/pull/4203), [#4200](https://github.com/git-town/git-town/pull/4200)).\n- Git Town now always syncs a branch with its parent branch before syncing with its tracking branch ([#4193](https://github.com/git-town/git-town/pull/4193)).\n\n#### Contributors\n\nBig thanks to @IGassmann, @ceilfors, @heisencoder, @kevgo, @mball-agathos, @stephenwade, @tranhl for contributing invaluable ideas to 30 shipped PRs and 2 resolved issues.\n\n## 16.5.0 (2024-10-25)\n\n#### New Features\n\n- `git town sync` now automatically deletes a local branch if its remote tracking branch is gone, without attempting to sync it first--assuming the branch was in sync before Git Town ran. ([#3641](https://github.com/git-town/git-town/issues/3641)).\n- The new `git town rename` command replaces the current `git town rename-branch` command. The `rename-branch` command is now deprecated and will be removed in a future release. Please update your tooling to use `git town rename` from now on. Existing Git aliases calling `git town rename-branch` get automatically updated to the new commands ([#4038](https://github.com/git-town/git-town/issues/4038)).\n- Same for the new `delete` command, it replaces the now deprecated `kill` command. ([#4039](https://github.com/git-town/git-town/issues/4039)).\n- You can now run `git town branch` in the middle of an unfinished sync ([#4108](https://github.com/git-town/git-town/issues/4108)).\n\n#### Bug Fixes\n\n- `git town ship` is now resilient against concurrently running Git processes ([#4142](https://github.com/git-town/git-town/pull/4142)).\n- `git town propose` now pushes prototype branches after converting them to feature branches ([#4109](https://github.com/git-town/git-town/issues/4109)).\n- `git town propose` now uses the first existing ancestor branch as the parent if the current parent branch was shipped or deleted remotely ([#4135](https://github.com/git-town/git-town/pull/4135)).\n\n#### Contributors\n\nBig thanks to @JamieMcKernanKaizen, @PowerSchill, @bengeois, @kevgo, @ruudk, @sergej-koscejev, @stephenwade, @tranhl, @vectro for contributing to 53 shipped PRs and 12 resolved issues!\n\n## 16.4.1 (2024-10-09)\n\nThanks to @bengeois, @kevgo, @ruudk, @sergej-koscejev, @stephenwade, @tranhl for contributing great feedback, ideas, and code to 14 shipped PRs and 5 resolved issues!\n\n#### Bug Fixes\n\n- disable `rebase.updateRefs` if your Git version supports it ([#4101](https://github.com/git-town/git-town/discussions/4101))\n\n## 16.4.0 (2024-10-03)\n\nGit Town 16.4 improves the usability in busy monorepos as well as the stability and resilience of Git Town in more environments.\n\nMany thanks to @FirelightFlagboy, @JamieMcKernanKaizen, @alexw10, @blaggacao, @charlierudolph, @ericcao52, @ianjsikes, @kevgo, @ruudk, @sheldonhull, @shiv19, @stephenwade, @tranhl, @waldyrious for improving Git Town through 39 shipped PRs and 13 resolved issues!\n\n#### New Features\n\n- Git Town's `append`, `hack`, `prepend`, and `propose` commands now have a `--detached` flag that prevents them from pulling in additional changes from the main branch. This together with the existing `--detached` flag for `git town sync` allows controlling exactly when changes from the main branch get synced into your branch hierarchy ([#4095](https://github.com/git-town/git-town/issues/4059)).\n- New config settings [contribution-regex](https://www.git-town.com/preferences/contribution-regex) and [observed-regex](https://www.git-town.com/preferences/observed-regex) allow marking branches created by external services like Renovate or Dependabot appropriately ([#3985](https://github.com/git-town/git-town/issues/3985)).\n- Git Town is now much more resilient against unexpected Git failures, for example when another Git process is running concurrently, because most Git Town operations are now fully reentrant ([#4082](https://github.com/git-town/git-town/pull/4082)).\n- `git town sync` now syncs branches whose ancestors aren't available locally better: It pulls the tracking branches of all non-local ancestors until it finds a local ancestor ([#3769](https://github.com/git-town/git-town/issues/3769)).\n\n#### Bug Fixes\n\n- `git town hack` no longer panics if the main branch isn't available locally ([#3703](https://github.com/git-town/git-town/issues/3703)).\n- `git town hack` no longer panics when the Git repo has a detached HEAD ([#3694](https://github.com/git-town/git-town/issues/3694)).\n- Git Town now loads all applicable settings from the config file ([#4072](https://github.com/git-town/git-town/issues/4072)).\n\n## 16.3.0 (2024-09-24)\n\nGit Town 16.3 is here, and it's packed with some long-requested features we've been working towards for years!\n\nBig shoutout to @LogvinovLeon, @alexw10, @charlierudolph, @cjol, @ericcao52, @kevgo, @mw00120, @ruudk, @stephenwade, @tranhl, @waldyrious, @zodman for your insightful contributions, feedback, and ideas. Git Town is a much better product thanks to you and the 52 shipped PRs and 6 resolved issues in this release!\n\n#### New Features\n\n- Full integration of proposals ([#2745](https://github.com/git-town/git-town/issues/2745)):\n  - Git Town now updates all affected pull requests when you rename, prepend, or remove a branch or change its parent.\n  - If the parent of a branch is unknown but there's an open PR, Git Town will now grab the PR's base branch as the parent.\n  - `git town undo` now also reverts any changes made to pull requests ([#4049](https://github.com/git-town/git-town/issues/4049)).\n- Full integration with the Bitbucket Cloud API ([#973](https://github.com/git-town/git-town/issues/973)) and the gitea API ([#4044](https://github.com/git-town/git-town/pull/4044)).\n- `git town rename-branch` now maintains the Git configuration and reflog for renamed branches ([#4023](https://github.com/git-town/git-town/issues/4023)).\n- Git Town now logs all API interactions in the CLI, showing details like PR numbers and branch names it retrieves from the APIs. This makes it easier to see where information and possible slowness come from ([#4020](https://github.com/git-town/git-town/pull/4020), [#4026](https://github.com/git-town/git-town/pull/4026)).\n\n## 16.2.1 (2024-09-12)\n\nThanks to @kevgo, @ruudk, @stephenwade, @zodman for reporting and fixing unintuitive behavior that can and should be improved, leading to 13 shipped PRs and 2 resolved issues!\n\n#### Bug Fixes\n\n- `git town switch` no longer asks for the ancestry of unrelated branches ([#4004](https://github.com/git-town/git-town/issues/4004)).\n- `git town branch` no longer prints a redundant newline ([#4011](https://github.com/git-town/git-town/pull/4011)).\n\n## 16.2.0 (2024-09-12)\n\nGit Town 16.2 makes it easier for you to manage the branches in your local repository.\n\nBig thanks to @kevgo, @ruudk, @stephenwade, @zodman for coming up with the ideas for these new features and helping polish them in 38 shipped PRs and 6 resolved issues!\n\n#### New Features\n\n- The new [git town branch](https://www.git-town.com/commands/branch) command displays the local branch hierarchy, and the types of all branches except for main and feature branches ([#3807](https://github.com/git-town/git-town/issues/3807)).\n- `git town switch` can now displays the types of branches (except for the main and feature branches) when called with the [--display-types](https://www.git-town.com/commands/switch#--display-types---d) flag ([#3937](https://github.com/git-town/git-town/issues/3937)).\n- `git town switch` can now filter the branches to switch to via [regular expressions](https://www.git-town.com/commands/switch#positional-arguments) ((#3980)[https://github.com/git-town/git-town/pull/3980/files])\n- You can now use `git town switch` to check out a remote branch using the [--all](https://www.git-town.com/commands/switch#--all---a) flag ([#3941](https://github.com/git-town/git-town/issues/3941))\n\n#### Bug Fixes\n\n- `git town switch` now exits with a nice error message if there are no branches to switch to ([#3979](https://github.com/git-town/git-town/issues/3979))\n- logs of API calls are now capitalized ([#3975](https://github.com/git-town/git-town/issues/3975))\n\n## 16.1.1 (2024-09-09)\n\nGit Town 16.1.1 ships important bug fixes for the new features introduced in v16.1.\n\nThanks to @kevgo, @rbardini, @stephenwade!\n\n#### Bug Fixes\n\n- The setup assistant now always stores `default-branch-type` and `feature-regex` in the Git-based configuration, not in the config file. These settings are typically developer-specific. You can still manually add them to the config file if needed ([#3961](https://github.com/git-town/git-town/pull/3961)).\n- Fixes various documentation errors ([#3953](https://github.com/git-town/git-town/pull/3953)).\n\n## 16.1.0 (2024-09-07)\n\nGit Town 16.1 provides multiple killer features for power users.\n\nBig thanks to @FFdhorkin, @breml, @bryanlarsen, @buscape, @enigma, @heyitsaamir, @kevgo, @rbardini, @ruudk, @stephenwade, @tranhl, @zeronacer for contributing really good ideas, feedback, and code to 39 shipped PRs and 9 resolved issues!\n\n#### New Features\n\n- **Automatic branch detection:** Git Town can now automatically detect feature and contribution or observed branches if you configure the new [default-branch-type](https://www.git-town.com/preferences/default-branch-type) and [feature-regex](https://www.git-town.com/preferences/feature-regex) options ([#3683](https://github.com/git-town/git-town/issues/3683)).\n- **Detached syncing:** Use `git sync --detached` to sync without pulling updates from the main branch. This helps keep development momentum if the main branch receives frequent updates and these updates trigger costly follow-up activities like `npm install` or long-running recompiles ([more info](https://www.git-town.com/commands/sync), [#2657](https://github.com/git-town/git-town/issues/2657)).\n- **More concise branch switching:** Running `git town switch --type=<branch types>` displays only branches of the given type ([more info](https://www.git-town.com/commands/switch), [#3933](https://github.com/git-town/git-town/issues/3933)).\n\n#### Bug Fixes\n\n- Git Town no longer errors if the previously checked out Git branch is active in another worktree ([#3916](https://github.com/git-town/git-town/pull/3916)).\n\n## 16.0.0 (2024-08-30)\n\nGit Town 16 brings the \"git ship\" command back in a big way: Git Town now supports shipping stacked changes without merge conflicts - even on platforms that don't support it natively, like GitHub!\n\nBig thanks to @FFdhorkin, @antoineMoPa, @breml, @bryanlarsen, @buscape, @kevgo, @tranhl, @zeronacer for the great feedback that led to this awesome new solution! This releaese contains 9 shipped PRs and 7 resolved issues.\n\n#### BREAKING CHANGES\n\nThe default behavior of `git ship` tightens. Previously it shipped via the API if an API key is configured, and without an API key it did a local squash-merge. The new default behavior is to ship only via API or not at all. The new default behavior is safer because it only automates what the user would normally do online. You can specify a different behavior for `git ship` via the new `ship-strategy` configuration option (see below).\n\n#### New Features\n\n- You can now configure how Git Town ships branches via the new `ship-strategy` configuration setting. Possible options are:\n  - `api` ships the branch by merging its proposal via the API of your code hosting platform.\n  - `fast-forward` is a new shipping strategy that prevents the false merge conflicts you get when shipping a branch from a stack using squashes or merges. It merges the branch to ship via `git merge --ff-only` into its parent (typically the main branch) on your local machine and then pushes the new commits to the remote main branch.\n  - `squash-merge` as before merges the branch to ship via `git merge --squash` into its parent.\n\n## 15.3.0 (2024-08-26)\n\nGit Town 15.3 brings sweet quality-of-life improvements.\n\nMassive thanks to @ChiefMateStarbuck, @IvanVas, @WhosNickDoglio, @alphatroya, @charlierudolph, @cirego, @erik-rw, @gstamp, @guusw, @kelbyers, @kevgo, @marcelpanse, @nishchay-manwani-glean, @rnystrom, @ruigomeseu, @sergej-koscejev for helping evolve Git Town with useful feedback, ideas, and code contributions to 21 shipped PRs and 14 resolved issues!\n\n#### New Features\n\n- Automatic retry for concurrent Git access: Git Town now waits and retries Git operations if another Git process is running concurrently. Super handy when your IDEs is running Git commands in the background ([#3629](https://github.com/git-town/git-town/issues/3629)).\n- Shell prompt status indicator: If a Git Town command gets interrupted by a merge conflict, you can now add the name of the pending Git Town command to your shell prompt. This reminds you to run `git town continue` to finish the job ([#2208](https://github.com/git-town/git-town/issues/2208)).\n- `git town propose` now takes you directly to the existing proposal's webpage if one already exists ([#2362](https://github.com/git-town/git-town/issues/2362)).\n- API activity logs. Git Town now logs its communication with hosting APIs in the CLI output. This shows you what Git Town is doing and where slowness is coming from ([#3892](https://github.com/git-town/git-town/pull/3892)).\n- `git town kill` no longer asks for the ancestry of branches it is about to delete as long as these branches don't have descendents ([#3870](https://github.com/git-town/git-town/issues/3870)).\n- Setting up shell autocompletion on ZSH is now better documented ([#3889](https://github.com/git-town/git-town/pull/3889)).\n\n#### Bug Fixes\n\n- If you have a merge conflict between your uncommitted changes and branch ancestry, Git Town commands will fail when running `git stash pop` at the end. Previously when running `git town continue` it tried to pop the stash again, causing the same merge conflict to happen again. Now Git Town assumes you have resolved the merge conflicts when running `git town continue` and deletes the stash entry. If you need to re-apply the conflicting stash entry, run `git stash pop` manually before running `git town continue`. This keeps your Git stash clean ([#3886](https://github.com/git-town/git-town/pull/3886)).\n- `git town continue` now re-runs all failed Git operations, helping recover from a wider range of unexpected issues ([#3887](https://github.com/git-town/git-town/pull/3887), [#3885](https://github.com/git-town/git-town/pull/3885)).\n\n## 15.2.0 (2024-08-21)\n\nBig thanks to @kevgo, @mball-agathos, @ruudk, @sergej-koscejev for contributing super useful feedback, ideas, and code to 32 shipped PRs and 5 resolved issues!\n\n#### New Features\n\n- The new \"compress\" sync strategy always compresses branches while syncing them ([#3320](https://github.com/git-town/git-town/issues/3320)).\n- Basic support for integrating Git Town into [lazygit](https://github.com/jesseduffield/lazygit) ([#3872](https://github.com/git-town/git-town/pull/3872)).\n\n#### Bug Fixes\n\n- Renaming branches now keeps their contribution, observed, parked, and prototype status ([#3864](https://github.com/git-town/git-town/issues/3864)).\n- The commands git town contribute, observe, park, and prototype now behave more correct and consistent ([#3880](https://github.com/git-town/git-town/pull/3880)).\n\n## 15.1.0 (2024-08-09)\n\nNumerous thanks to @FirelightFlagboy, @Iron-Ham, @IvanVas, @JaredSharplin, @JustinBis, @TheHolyWaffle, @WhosNickDoglio, @alexus37, @alphatroya, @anikrajc, @blaggacao, @charlierudolph, @cjol, @connected-rmcleod, @cridasilva, @defunctzombie, @erik-rw, @kevgo, @pattiereaves, @sgarfinkel, @stephenwade, @teumas, @zodman for the super useful feedback, ideas, and code contributions to 31 shipped PRs and 19 resolved issues.\n\n#### New Features\n\n- `git repo` can now take the name of a remote to open the repo at that remote ([#1204](https://github.com/git-town/git-town/issues/1204)).\n- The new `sync-tags` config option disables syncing of Git tags ([#3212](https://github.com/git-town/git-town/issues/3212)).\n- `git ship` can now ship into any type of parent branch with the `--to-parent` option ([#2605](https://github.com/git-town/git-town/issues/2605)).\n- `git sync --stack` syncs all branches in the current stack ([#3816](https://github.com/git-town/git-town/pull/3816)).\n\n## 15.0.0 (2024-08-05)\n\nGit Town 15.0 improves Git Town's compatibility with monorepos and removes technical drift.\n\nMajor thanks to @ianjsikes, @kevgo, @ruudk, @seadowg, @stephenwade, @zodman for contributing valuable feedback, ideas, and code to 41 shipped PRs and 8 resolved issues!\n\n#### BREAKING CHANGES\n\n- `git town ship` no longer syncs branches when shipping. From now on it only ships branches that are in sync. This ensures that only fully tested and reviewed changes get shipped ([#3350](https://github.com/git-town/git-town/issues/3350)).\n- This also makes the `sync-before-ship` config option obsolete, it no longer exists ([#3644](https://github.com/git-town/git-town/pull/3644)).\n- `git town prepend` no longer syncs when uncommitted changes are present. This allows committing your uncommitted changes first, then syncing later ([#3778](https://github.com/git-town/git-town/pull/3778)).\n- The term `main development branch` gets shortened to `main branch` since there are no other development branches in Git Town's domain model ([#3643](https://github.com/git-town/git-town/issues/3643)).\n\n#### New Features\n\n- A new branch type called _prototype branches_ syncs only locally, i.e. they don't create or push to a tracking branch until they are proposed. This helps reduce stress on the CI server, allows developers to prototype using sensitive information or potentially problematic code or data that they don't want to share ([#3646](https://github.com/git-town/git-town/issues/3646)).\n- The new `sync-prototype-strategy` setting allows defining a dedicated sync strategy for prototype branches. This allows rebasing your commits while they are local, and switching to merging once other developers can see them ([#3785](https://github.com/git-town/git-town/pull/3785)).\n- The new `create-prototype-branches` setting makes Git Town always create prototype branches ([#3779](https://github.com/git-town/git-town/pull/3779)).\n\n## 14.4.1 (2024-07-29)\n\nMany thanks to @charlierudolph, @ianjsikes, @kevgo, @seadowg, @stephenwade for contributing feedback, ideas, and code to 10 shipped PRs and 4 resolved issues.\n\n### Bug Fixes\n\n- `git town undo` now only undoes changes to branches that the previous Git Town command has touched ([#3765](https://github.com/git-town/git-town/issues/3765))\n- `git town continue` now does not ask for additional lineage information ([#3725](https://github.com/git-town/git-town/issues/3725))\n\n## 14.4.0 (2024-07-26)\n\nGit Town v14.4 ships features suggested by Git Town users and fixes a severe bug in the undo feature.\n\nMany thanks to @ianjsikes, @kevgo, @ruudk, @stephenwade who contributed ideas for great new features and helped identify and solve a severe bug, resulting in 46 shipped PRs and 2 resolved issues.\n\n#### New Features\n\n- Prototype branches are fully synced branches that don't have a tracking branch. They are useful when working with sensitive information or to save on CI minutes ([#3646](https://github.com/git-town/git-town/issues/3646)).\n\n#### Bug Fixes\n\n- Undo only local branches and their tracking branches ([#3764](https://github.com/git-town/git-town/pull/3764)).\n- Use correct parent when deleting shipped observed branches ([#3757](https://github.com/git-town/git-town/pull/3757), [#3756](https://github.com/git-town/git-town/pull/3756), [#3755](https://github.com/git-town/git-town/pull/3755), [#3754](https://github.com/git-town/git-town/pull/3754/files)).\n- Undo for configuration commands now correctly undoes branch changes ([#3741](https://github.com/git-town/git-town/pull/3741/files)).\n\n## 14.3.1 (2024-07-15)\n\n#### Bug Fixes\n\n- `git sync --no-push` now also doesn't push when the `rebase` sync-strategy is configured ([#3271](https://github.com/git-town/git-town/pull/3721))\n- `git town config get-parent` no longer prints an unnecessary empty line ([#3717](https://github.com/git-town/git-town/pull/3717))\n\nMany thanks to @dannykingme, @defunctzombie, @kevgo, @marcosfelt, @nekitk, @opeik, @pcfreak30, @ruudk, and @stephenwade for identifying the issues fixed in this release and providing helpful feedback to resolve them, resulting in 19 shipped PRs and 4 resolved issues!\n\n## 14.3.0 (2024-07-12)\n\nThis release ships a few of the most requested community features.\n\n#### New Features\n\n- `git propose` now supports flags to pre-populate more fields of the pull requests to create:\n  - `--title=<value>` sets the title to the given value\n  - `--body=<value>` sets the body to the given value\n  - `--body-file=<file path>` sets the body to the content of the file with the given path. Providing `-` as the file path reads the body from STDIN ([#3207](https://github.com/git-town/git-town/issues/3207)).\n- a new command `git town config get-parent [branch]` prints the parent of the given branch, or the current branch if no branch is provided ([#3207](https://github.com/git-town/git-town/issues/3207)).\n- the new `--no-push` flag for `git sync` temporarily disables pushing local changes when [sync-feature-strategy](https://www.git-town.com/preferences/sync-feature-strategy) is `merge`. Please note that when sync-feature-strategy is `rebase`, it still force-pushes to avoid keeping outdated commits around, which avoids data loss in edge cases.\n\nHeartfelt thanks to @dannykingme, @defunctzombie, @kevgo, @marcosfelt, @nekitk, @opeik, @pcfreak30, @ruudk, @stephenwade for contributing code, ideas, and feedback to 29 shipped PRs and 9 resolved issues!\n\n## 14.2.3 (2024-06-25)\n\nAnother release with bug fixes and stability improvements.\n\nShoutout to @alexus37, @bb010g, @blaggacao, @bryanlarsen, @charlierudolph, @kelbyers, @kevgo, @kinyat, @ruudk, @stephenwade, @vectro for contributing code, ideas, and feedback to 54 shipped PRs and 9 resolved issues!\n\n#### Bug Fixes\n\n- loads the configuration when calling Git Town from a subfolder in the Git repo ([#3688](https://github.com/git-town/git-town/pull/3688))\n- \"git observe\" no longer panics when given a non-existing branch name ([#3647](https://github.com/git-town/git-town/issues/3647))\n\n## 14.2.2 (2024-06-06)\n\nThis release fixes a few bugs that now get correctly surfaced thanks to stronger type checking introduced in v14.2.1.\n\nMassive thanks to @breml, @bryanlarsen, @edwarbudiman, @FirelightFlagboy, @kelbyers, @kevgo for contributing code, ideas, and feedback to 13 shipped pull requests and 9 resolved issues!\n\n#### Bug Fixes\n\n- follows include directives in the Git configuration ([#3614](https://github.com/git-town/git-town/issues/3614))\n- fixes a panic during git town propose ([#3539](https://github.com/git-town/git-town/issues/3539))\n\n## 14.2.1 (2024-05-30)\n\nThis release brings substantial stability improvements due to much stronger type checking and removing unnecessary optionality and mutability from the codebase.\n\nBig thanks to @breml, @bryanlarsen, @edwarbudiman, @FirelightFlagboy, @kevgo, @shiv19, @SophiaSaiada for contributing code, ideas, and feedback to 191 shipped pull requests and 9 resolved issues!\n\n#### Bug Fixes\n\n- fixes a panic when additional Git remotes are present ([#3537](https://github.com/git-town/git-town/issues/3537))\n- fixes a panic when encountering invalid lineage entries ([#3453](https://github.com/git-town/git-town/issues/3453))\n- fixes a panic if the previous Git branch is checked out in another worktree ([#3297](https://github.com/git-town/git-town/issues/3297))\n\n## 14.2.0 (2024-04-24)\n\n#### New Features\n\n- `git town set-parent` is now a proper Git Town command, with continue and undo ([#3407](https://github.com/git-town/git-town/pull/3407)).\n- Git Town now works if you have [merge.ff-only](https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---ff-only) configured ([#3408](https://github.com/git-town/git-town/pull/3408)).\n\n#### Bug Fixes\n\n- `git town set-parent` now properly defaults to the existing parent ([#3406](https://github.com/git-town/git-town/pull/3406)).\n\nBig thanks to @charlierudolph, @ericyliu, @hammenm, @hmbrg, @kevgo, @KORDayDream, @StevenXL, @vectro, @zifeo for contributing code, ideas, and feedback to 23 shipped PRs and 7 resolved issues!\n\n## 14.1.0 (2024-04-19)\n\nBesides polishing the `git town switch` command, Git Town 14.1 focuses on stability improvements and bashing bugs. We closed out 50% of all open tickets (70 tickets), including many long-standing bugs!\n\nThis version also de-emphasizes `git ship`. Most people should not run `git ship`. The recommended workflow is to ship feature branches using the web UI or merge queue of your code hosting platform. `git ship` is for edge cases like development in [offline mode](https://www.git-town.com/commands/offline).\n\n#### New Features\n\n- `git town switch` now has an `-m` option that checks out the selected branch using [git checkout -m](https://git-scm.com/docs/git-checkout#Documentation/git-checkout.txt--m) ([#3321](https://github.com/git-town/git-town/issues/3321)).\n- `git town switch` now doesn't allow selecting branches that are checked out in other Git worktrees ([#3295](https://github.com/git-town/git-town/issues/3295)).\n- `git town switch` now indicates the existence of uncommitted changes. This helps remember to commit them on the current branch if that was needed ([#3307](https://github.com/git-town/git-town/issues/3307)).\n- Git Town now shuts down gracefully and allows continue and undo when you press `Ctrl-C` to cancel a Git command that runs too long or hangs ([#414](https://github.com/git-town/git-town/issues/414)).\n- Notifications to the user are now highlighted in cyan in the Git Town output, making them easier to spot ([#3353](https://github.com/git-town/git-town/pull/3353)).\n- The setup assistant now also uses `remotes/origin/HEAD` to determine the default main branch if the already used `init.defaultbranch` setting isn't set ([#646](https://github.com/git-town/git-town/issues/646)).\n- Prototypical support for the API of GitHub Enterprise. This is impossible to test for the Git Town team, so please provide bug reports if something doesn't work ([#1179](https://github.com/git-town/git-town/issues/1179)).\n- Improved support for GitLab instances that use a custom SSH port ([#1891](https://github.com/git-town/git-town/issues/1891)).\n- `git ship` now sqash-merges using the `--ff` option. This removes an incompatibility for users who have the `merge.ff` option set to `false` in their Git configuration ([#1097](https://github.com/git-town/git-town/issues/1097)).\n- If a branch is listed as its own parent, Git Town now notifies the user and deletes this invalid lineage entry ([#3393](https://github.com/git-town/git-town/pull/3393)).\n- Improved error messages ([#2949](https://github.com/git-town/git-town/issues/2949)).\n\n#### Bug Fixes\n\n- `git sync` now ends on the previously checked out branch when pruning branches ([#2784](https://github.com/git-town/git-town/issues/2784)).\n- `git sync --all` now syncs in topological order. This ensures all branches in deep stacks get synced ([#3344](https://github.com/git-town/git-town/pull/3344)).\n- `git town switch` no longer displays branches that were deleted manually ([#3361](https://github.com/git-town/git-town/pull/3361)).\n- `git kill` now checks out the main branch when the previous branch also was killed ([#3358](https://github.com/git-town/git-town/pull/3358)).\n\nMassive thanks to @abhijeetbhagat, @aeneasr, @allewun, @alphatroya, @amarpatel, @avaz, @breml, @bryanlarsen, @charlierudolph, @ChrisMM, @cirego, @ericyliu, @grignaak, @hammenm, @hmbrg, @JCB-K, @kevgo, @koppor, @KORDayDream, @martinjaime, @mball-agathos, @mribichich, @ruudk, @sascha-andres, @sheldonhull, @tranhl, @vectro, @WhosNickDoglio, @WurmD, @zeronacer, @zifeo for contributing code, ideas, and feedback to 74 shipped PRs and 70 resolved issues!\n\n## 14.0.0 (2024-04-12)\n\nGit Town 14.0 improves the developer experience around uncommitted and stacked changes.\n\n#### BREAKING CHANGES\n\n`git hack`, `git append`, and `git prepend` no longer sync the branch lineage in the presence of uncommitted changes. This allows you to commit your changes first before pulling in more changes from other developers. They still sync if you call them without uncommitted changes ([#3198](https://github.com/git-town/git-town/issues/3198)).\n\n#### New Features\n\n`git town compress` (aliasable to `git compress` by re-running `git town config setup`) squashes all commits in a branch into a single commit. By default the new commit uses the commit message of the first commit in the branch. You can provide a custom commit message using the `-m` switch the same way as in `git commit`. The `--stack` option compresses all branches in a change stack. Git Town does not compress perennial, observed, contribution, and non-active parked branches ([#1529](https://github.com/git-town/git-town/issues/1529), [#2086](https://github.com/git-town/git-town/issues/2086)).\n\n`git hack`, `git append`, and `git prepend` are faster due to creating and checking out the new branch using a single Git operation ([#3313](https://github.com/git-town/git-town/pull/3313)).\n\nBig thanks to @blaggacao, @breml, @gabyx, @kevgo, @mball-agathos, @nishchay-manwani-glean, @pjh, @ruudk, @tranhl, @utkinn, and @WhosNickDoglio for contributing code, ideas, and feedback to 68 shipped PRs and 7 resolved issues!\n\n## 13.0.2 (2024-03-29)\n\n#### Bug Fixes\n\n- Fixes a serious bug where users who have [branch.sort](https://git-scm.com/docs/git-branch#Documentation/git-branch.txt-branchsort) set might get tracking branches removed ([#3241](https://github.com/git-town/git-town/issues/3241)).\n\n#### Statistics\n\nHeartfelt thanks to @breml and @kevgo for going the extra mile to investigate a tricky bug and contributing to 25 shipped PRs and 4 resolved issues!\n\n## 13.0.1 (2024-03-27)\n\n#### Bug Fixes\n\n- Allows syncing branches with merge conflicts in linked worktrees ([#3230](https://github.com/git-town/git-town/issues/3230)).\n- Fixes the Bash-based installer ([#3234](https://github.com/git-town/git-town/pull/3234)).\n\n#### Statistics\n\nMany thanks to @alexus37, @breml, @bryanlarsen, @kevgo, @tranhl, @vectro, @wederbrand for contributing feedback, ideas, and solutions to 8 shipped PRs and 6 resolved issues!\n\n## 13.0.0 (2024-03-22)\n\nGit Town 13.0 adds better support for syncing feature branches after rebasing your commits and bumps the required Git version.\n\n#### BREAKING CHANGES\n\nWhen the [sync-feature-strategy](https://www.git-town.com/preferences/sync-feature-strategy) is set to `rebase`, Git Town now force-pushes your locally rebased commits to the tracking branch ([#3182](https://github.com/git-town/git-town/issues/3182)). This avoids mixing locally rebased commits with outdated commits on the tracking branch. To not accidentally override new commits on the tracking branch that haven't been integrated into your local commits, Git Town now force-pushes using the [--force-if-includes](https://git-scm.com/docs/git-push#Documentation/git-push.txt---no-force-if-includes) Git flag. This requires raising the minimally required Git version from 2.7 to 2.30. Git 2.30 was released over 2 years ago and should be widely available at this point.\n\n#### New Features\n\n- Git Town now automatically removes lineage entries for branches that were converted from feature branches to perennial branches ([#3218](https://github.com/git-town/git-town/issues/3218)).\n- Git Town documentation and error messages now guide the user to call Git Town as `git town` instead of `git-town` on the CLI ([#3208](https://github.com/git-town/git-town/issues/3208)).\n\n#### Bug Fixes\n\n- Fixes a crash when an ustream HEAD is set ([#2660](https://github.com/git-town/git-town/issues/2660)).\n- Fixes the error message when trying to set the parent of a perennial branch ([#3217](https://github.com/git-town/git-town/issues/3217)).\n\nKudos to @100rab-S, @dgentry, @kevgo, @koppor, @nicksieger, @ruudk, @srstevenson, and @tranhl for contributing code, ideas, and feedback to 18 shipped PRs and 13 resolved issues!\n\n## 12.1.0 (2024-02-29)\n\nGit Town 12.1 implements some of the most requested features by the Git Town community. It also continues the modernization of Git Town's internals. This time we made Git Town's undo engine simpler, more robust, and more reliable by removing all remaining mutable state.\n\n#### New Features\n\n- New options to fine-tune how Git Town syncs branches: `git contribute`, `git observe`, and `git park`. More info at https://www.git-town.com/advanced-syncing and [#3095](https://github.com/git-town/git-town/issues/3095).\n- All branches matching the regular expression in the new configuration setting [branches.perennial-regex](https://www.git-town.com/preferences/perennial-regex) are now also considered perennial, in addition to the ones already listed in `branches.perennials`. This makes it easier to deal with situations where you have many perennial branches with similar sounding names like `release-1`, `release-2`, etc ([#2659](https://github.com/git-town/git-town/issues/2659)).\n\n#### Bug Fixes\n\n- [git town skip](https://www.git-town.com/commands/skip) now works correctly in complex situations ([#2978](https://github.com/git-town/git-town/issues/2978)).\n- Git Town now deletes branches more reliably ([#3097](https://github.com/git-town/git-town/issues/3097)).\n\n#### Statistics\n\nMany thanks to @100rab-S, @harrismcc, @kevgo, @ruudk, @tranhl for contributing feedback, ideas, and solutions to 70 shipped PRs and 11 resolved issues!\n\n## 12.0.2 (2024-02-14)\n\n#### Bug Fixes\n\n- All dialogs that show local branches now paginate ([#3119](https://github.com/git-town/git-town/issues/3119)).\n\n## 12.0.1 (2024-02-12)\n\n#### Bug Fixes\n\n- removes crashes when using a self-hosted platform instance ([#3114](https://github.com/git-town/git-town/pull/3114))\n- improve the CLI output when using a hosting connector ([#3115](https://github.com/git-town/git-town/pull/3115))\n\n## 12.0.0 (2024-02-05)\n\nGit Town 12 continues the effort to make the Git Town user experience more consistent and intuitive by modernizing Git Town's configuration system.\n\n- 294 contributions\n- 31 resolved tickets\n- a heartfelt thanks to the contributors for this release: @alokpr, @brandonaut, @bryanlarsen, @ChrisMM, @eugef, @IGassmann, @Iron-Ham, @jakeleboeuf, @JaKXz, @kevgo, @koppor, @Nezteb, @ruudk, @zeronacer\n\n#### BREAKING CHANGES\n\n- The new setup assistent (see below) replaces the existing CLI and Git commands to change the configuration.\n- Removing the Git Town configuration is now done by running `git town config remove` instead of `git town config reset` ([#3051](https://github.com/git-town/git-town/pull/3051)).\n- More intuitive names for the following configuration options. Git Town automatically updates the configuration, so no action is needed on your end.\n  - `code-hosting-platform` is now `hosting-platform` ([#3054](https://github.com/git-town/git-town/pull/3054))\n  - `code-hosting-origin-hostname` is now `hosting-origin-hostname` ([#3053](https://github.com/git-town/git-town/pull/3053))\n  - `ship-delete-remote-branch` is now `ship-delete-tracking-branch` ([#2929](https://github.com/git-town/git-town/pull/2929))\n- Putting Git Town into offline mode is a top-level command again. Run `git town offline yes` to enable offline mode instead of `git town config offline yes` ([#3049](https://github.com/git-town/git-town/pull/3049)).\n- All visual dialogs have been rewritten using a modern UI framework for a better look and to avoid the rendering issues encountered before ([#2964](https://github.com/git-town/git-town/issues/2964)).\n- Nested feature branches are now called \"stacked changes\" to match the emerging industry term ([#3062](https://github.com/git-town/git-town/pull/3062)).\n\n#### New Features\n\n- Git Town v12 introduces Git Town's setup assistant ([#2941](https://github.com/git-town/git-town/issues/2941)). The setup assistant guides you through all of Git Town's configuration settings, including setting up the shorter aliases for Git Town commands. Run it by executing `git town config setup`. This assistant replaces the old configuration commands under `git town config`, the `alias` command, and the old \"quick configuration\" process.\n- Git Town now supports storing non-confidential configuration entries in a configuration file with name `.git-branches.toml` ([#2748](https://github.com/git-town/git-town/issues/2748)). The best way to create one is the setup assistant. The setup assistant can also migrate your existing Git-based configuration to the config file.\n- All commands now support the `--dry-run` flag to try them out safely ([#2859](https://github.com/git-town/git-town/pull/2859)).\n- You can now install Git Town on Windows using Chocolatey: `choco install git-town` ([#763](https://github.com/git-town/git-town/issues/763))\n- Massive performance improvements (exceeding 200%) on Windows thanks to not executing Git through the CMD shell anymore ([#2881](https://github.com/git-town/git-town/pull/2881)).\n- The undo commands execute faster ([#2863](https://github.com/git-town/git-town/pull/2863)).\n\n#### Bug Fixes\n\n- Fix the `--version` command on Windows ([#2900](https://github.com/git-town/git-town/pull/2900/files)).\n\n## 11.1.0 (2023-12-12)\n\n#### New Features\n\n- Git Town now handles branches checked out in other worktrees correctly ([#2764](https://github.com/git-town/git-town/pull/2764))\n- Git Town now checks out the previous Git branch (\"git checkout -\") after removing a local branch ([#2742](https://github.com/git-town/git-town/pull/2742))\n\n#### Bug Fixes\n\n- `git continue` now correctly handles a manually popped stash after resolving conflicts ([#2758](https://github.com/git-town/git-town/pull/2758))\n- `git continue` retries failing commit, merge-proposal, create-branch, create-proposal, create-tracking-branch, and push-branch operations ([#2756](https://github.com/git-town/git-town/pull/2756))\n- `git continue` ensures there are no untracked files ([#2754](https://github.com/git-town/git-town/pull/2754))\n- `git switch` now allows switching to perennial branches ([#2752](https://github.com/git-town/git-town/pull/2752))\n\n## 11.0.0 (2023-12-06)\n\nGit Town 11 continues the effort to make the Git Town user experience more consistent and intuitive.\n\n#### BREAKING CHANGES\n\n- `git new-pull-request` is now `git propose`. Not all platforms that Git Town supports use the name \"pull request\", so Git Town uses the word \"proposal\" for pull requests, merge requests, etc from now on. Nine fewer characters to type! ([#2691](https://github.com/git-town/git-town/pull/2691))\n- `git abort` is merged into `git undo`. From now on you just run `git undo` after a Git Town command fails or finishes to get back to where you started ([#2719](https://github.com/git-town/git-town/pull/2719)).\n- Many configuration options now have more intuitive names. No action needed on your end, Git Town automatically updates the affected settings on your machine. This means you can't go back to v10 after updating to v11.\n  - `code-hosting-driver` is now `code-hosting-platform` ([#2704](https://github.com/git-town/git-town/pull/2704))\n  - `main-branch-name` is now `main-branch` ([#2703](https://github.com/git-town/git-town/pull/2703))\n  - `perennial-branch-names` is now `perennial-branches` ([#2702](https://github.com/git-town/git-town/pull/2702))\n  - `sync-strategy` is now `sync-feature-strategy` ([#2697](https://github.com/git-town/git-town/pull/2697))\n  - `pull-branch-strategy` is now `sync-perennial-strategy` ([#2693](https://github.com/git-town/git-town/pull/2693))\n- `git ship` by default no longer syncs the branch to ship. Set the `sync-before-ship` flag to restore the old behavior. This allows shipping only when the tests pass ([#2735](https://github.com/git-town/git-town/pull/2735)).\n- Creating proposals on BitBucket uses an updated URL ([#2692](https://github.com/git-town/git-town/pull/2692)).\n- `git town config reset` now also deletes the branch lineage. This helps get you out of more configuration snafus ([#2733](https://github.com/git-town/git-town/pull/2733)).\n\n#### New Features\n\n- The new `sync-before-ship` config option prevents `git ship` from updating the branch it is about to ship. The old behavior makes sense when shipping branches locally but is conflicting with the requirements for tests to pass on CI before shipping via the hosting platform ([#2714](https://github.com/git-town/git-town/pull/2714)).\n\n#### Bug Fixes\n\n- allow renaming local-only branches ([#2710](https://github.com/git-town/git-town/pull/2710))\n- `git repo` and `git propose` always open the browser page at the default port, even if the `origin` remote points to a custom port ([#2730](https://github.com/git-town/git-town/pull/2730))\n\n## 10.0.3 (2023-11-25)\n\n#### Bug Fixes\n\n- Fix killing perennial branches ([#2679](https://github.com/git-town/git-town/pull/2679))\n\n## 10.0.2 (2023-11-7)\n\n#### Bug Fixes\n\n- Fix wrong error message when `status.short` is enabled in Git config ([#2650](https://github.com/git-town/git-town/pull/2650))\n\n## 10.0.1 (2023-11-2)\n\n#### Bug Fixes\n\n- Fix crash if commits contain \"[\" ([#2645](https://github.com/git-town/git-town/pull/2645))\n\n## 10.0.0 (2023-10-27)\n\nGit Town 10 improves support for shipping branches via the code hosting web UI instead of running `git ship`. After merging your branches remotely, run `git sync --all` to sync all local branches and remove the ones shipped at the remote. Don't worry, Git Town ensures that branches which contain unshipped changes won't get deleted. `git undo` brings deleted branches back.\n\nGit Town 10 has improved performance, robustness, and reliability thanks to a large-scale modernization of the Git Town's architecture. Git Town now runs fewer Git commands under the hood to investigate the state of your Git repository. `git undo` now works for all commands thanks to a new undo engine that diffs the before and after state of your Git repo.\n\nGit Town 10 starts a larger effort to remove redundant commands and make Git Town's configuration options more consistent and intuitively named.\n\n#### BREAKING CHANGES\n\n- `git sync` now also removes local branches with a deleted tracking branch, after verifying that those local branches contain no unshipped changes ([#2038](https://github.com/git-town/git-town/pull/2038))\n- `git town prune-branches` has been sunset, run `git sync` instead ([#2579](https://github.com/git-town/git-town/pull/2579))\n- Git Town's statefile on disk has a new format, you might have to run `git town status reset` to avoid runtime errors ([#2446](https://github.com/git-town/git-town/pull/2446))\n- `git ship` no longer ships branches that exist solely at the remote. Moving forward branches to ship must exist on your local machine. Use the web UI of your code hosting service to ship remote branches. ([#2367](https://github.com/git-town/git-town/pull/2367), [#2372](https://github.com/git-town/git-town/pull/2372))\n- `git kill` no longer deletes branches that exist solely at the remote. Delete them by running `git push origin :branchname` or via the web UI of your code hosting service ([#2368](https://github.com/git-town/git-town/pull/2368))\n- `git hack` no longer has the `-p` option. Use `git append` and `git prepend` instead ([#2577](https://github.com/git-town/git-town/pull/2577))\n- Git Town no longer considers it an error if there is nothing to abort or continue ([#2631](https://github.com/git-town/git-town/pull/2631), [#2632](https://github.com/git-town/git-town/pull/2632))\n- querying the version of the installed Git Town binary is now compatible with the way Git does it: `git-town --version` instead of `git-town version` ([#2603](https://github.com/git-town/git-town/pull/2603))\n- v10 renames the `debug` parameter to `verbose` because all it does is print more information ([#2598](https://github.com/git-town/git-town/pull/2598))\n- updated GitLab support, please report regressions\n\n#### New Features\n\n- support for running Git Town on computers that use different language than English ([#2478](https://github.com/git-town/git-town/pull/2478))\n- `git undo` works for all commands now ([#2484](https://github.com/git-town/git-town/pull/2484))\n- CLI output now contains requests to the code hosting API ([#2340](https://github.com/git-town/git-town/pull/2340))\n- CLI output now describes changes the branch ancestry ([#2558](https://github.com/git-town/git-town/pull/2558))\n- `git town switch` now displays the output of the command to switch branches ([#2602](https://github.com/git-town/git-town/pull/2602))\n- environment variables now override all GitHub API operations ([#2593](https://github.com/git-town/git-town/pull/2593))\n- community-contributed installation for BSD via FreshPorts ([#2553](https://github.com/git-town/git-town/pull/2553))\n- less force-deleting of branches ([#2539](https://github.com/git-town/git-town/pull/2539))\n\n#### Bug Fixes\n\n- fix broken version number in release binaries ([#2333](https://github.com/git-town/git-town/pull/2333))\n- fix crash when a configured branch parent is empty ([#2626](https://github.com/git-town/git-town/pull/2626))\n- fix crash when running `set-parent` on large monorepos ([#2623](https://github.com/git-town/git-town/pull/2623))\n- when deleting perennial branches, remove the ancestry information of their children ([#2540](https://github.com/git-town/git-town/pull/2540))\n\n## 9.0.1 (2023-07-29)\n\nGit Town should now run a bit faster because it runs fewer Git commands under the hood.\n\n#### Bug Fixes\n\n- Fix for missing `UpdateProposalTargetStep` ([#2288](https://github.com/git-town/git-town/pull/2288))\n- Print statistics when removing aliases ([#2325](https://github.com/git-town/git-town/pull/2325))\n- Fix broken version information in release binaries ([#2333](https://github.com/git-town/git-town/pull/2333))\n\n## 9.0.0 (2023-04-07)\n\n#### BREAKING CHANGES\n\nGit Town 9.0 supports the new API URLs that become official in GitLab v16. If you use an older version of GitLab, Git Town's integration with GitLab's API might no longer work. The fix is to update your GitLab installation to at least v15 ([#2249](https://github.com/git-town/git-town/pull/2249))\n\n#### New Features\n\n- read the token to use for the GitHub API from environment variables `GITHUB_TOKEN` or `GITHUB_AUTH_TOKEN` in addition to the already existing option to store it in the Git configuration ([#2217](https://github.com/git-town/git-town/pull/2217))\n\n## 8.0.0 (2023-04-07)\n\nSome ergonomics improvements that change existing command names, hence the major version bump. If you use the shorter aliases for Git Town commands, please run `git town aliases add` after updating to v8.0.\n\n#### BREAKING CHANGES\n\n- rename `new-branch-push-flag` command to `push-new-branches` ([#1980](https://github.com/git-town/git-town/pull/1980))\n- all commands that display/update configuration are now subcommands of the `config` command ([#1963](https://github.com/git-town/git-town/pull/1963), [#1976](https://github.com/git-town/git-town/pull/1976))\n- all commands that help install Git Town are now subcommands of the `install` command ([#1969](https://github.com/git-town/git-town/pull/1969))\n- moves the default `git town completion` and `git town completions` commands under `git town install completions` ([#1969](https://github.com/git-town/git-town/pull/1969), [#1970](https://github.com/git-town/git-town/pull/1970))\n- installation of the shorter command aliases changes from `git town alias true` to `git town install aliases add` and `... remove` ([#1965](https://github.com/git-town/git-town/pull/1965), [#1966](https://github.com/git-town/git-town/pull/1966), [#1968](https://github.com/git-town/git-town/pull/1968))\n- renames the `push-verify` configuration option to `push-hook` ([#1989](https://github.com/git-town/git-town/pull/1989))\n- automatically renames old `push-verify` configuration settings to the new `push-hook` ([#2209](https://github.com/git-town/git-town/pull/2209))\n- rename `git set-parent-branch` to `git set-parent` ([#2114](https://github.com/git-town/git-town/pull/2114))\n- stores the runstate in the platform-specific config directory (`~/.config`) instead of the global temp dir ([#2126](https://github.com/git-town/git-town/pull/2126))\n\n#### New Features\n\n- the new `git town switch` command allows switching branches via a UI that visualizes the branch hierarchy ([#2106](https://github.com/git-town/git-town/pull/2106), [#2108](https://github.com/git-town/git-town/pull/2108))\n- aliases `git town diff-parent` to `git diff-parent` ([#2128](https://github.com/git-town/git-town/pull/2128))\n- accepts more formats for boolean configuration values like \"true\", \"yes\", \"on\", \"t\", \"1\" ([#1978](https://github.com/git-town/git-town/pull/1978), [#1979](https://github.com/git-town/git-town/pull/1979))\n- configuration command to set/display the `push-hook` config setting ([#1991](https://github.com/git-town/git-town/pull/1991))\n\n## 7.9.0 (2023-01-22)\n\n#### New Features\n\n- rebase feature branches against their parent branch using the new [sync-strategy option](https://www.git-town.com/preferences/sync-strategy.html) ([#1950](https://github.com/git-town/git-town/pull/1950))\n  - configure using `git town sync-strategy (merge | rebase)`\n- disable Git's `pre-push` hook using the new `push-verify` option ([#1958](https://github.com/git-town/git-town/pull/1958))\n- support for [GitLab subgroups](https://docs.gitlab.com/ee/user/group/subgroups) ([#1943](https://github.com/git-town/git-town/pull/1943))\n\n#### Bug Fixes\n\n- support GitLab SaaS repos whose name contains \"gitlab\" ([#1926](https://github.com/git-town/git-town/pull/1926))\n\n## 7.8.0 (2022-08-07)\n\n#### New Features\n\n- update Regex for hostname extraction to support more ssh usernames ([#1883](https://github.com/git-town/git-town/pull/1883))\n- merge GitLab merge requests when shipping ([#1874](https://github.com/git-town/git-town/pull/1874))\n\n#### Bug Fixes\n\n- fix tests on non-English locales ([#1875](https://github.com/git-town/git-town/pull/1875))\n- fix bug in undo of \"git hack\" in local repo ([#1804](https://github.com/git-town/git-town/pull/1804))\n\n## 7.7.0 (2022-01-22)\n\n#### New Features\n\n- support for Apple Silicon ([#1735](https://github.com/git-town/git-town/pull/1735), [#1736](https://github.com/git-town/git-town/pull/1736))\n- ignore changes in submodules during sync ([#1744](https://github.com/git-town/git-town/pull/1744))\n- improved CLI interface including better shell autocompletions ([#1722](https://github.com/git-town/git-town/pull/1722))\n- shell-based installer for *nix systems ([#1707](https://github.com/git-town/git-town/pull/1707))\n- new website ([#1684](https://github.com/git-town/git-town/pull/1684))\n- Make command shows dependency tree within the codebase ([#1725](https://github.com/git-town/git-town/pull/1725))\n- Go API now has the same major version number as the binary ([#1677](https://github.com/git-town/git-town/pull/1677))\n\n#### Bug Fixes\n\n- fix author not set properly ([1686](https://github.com/git-town/git-town/pull/1686))\n- filenames of assets at GitHub releases are all lowercase now ([#1710](https://github.com/git-town/git-town/pull/1710))\n- option for more compatible shell autocompletion without descriptions ([#1493](https://github.com/git-town/git-town/pull/1493))\n\n## 7.6.0 (2021-11-23)\n\n#### New Features\n\n- print diagnostic information on command failure ([#1667](https://github.com/git-town/git-town/pull/1667))\n\n## 7.5.0 (2021-03-10)\n\n#### New Features\n\n- add log after command that causes auto abort ([#1635](https://github.com/git-town/git-town/pull/1635))\n\n#### Bug Fixes\n\n- fix panic when continuing rebase ([#1615](https://github.com/git-town/git-town/pull/1615))\n- fix panic when continuing a command that includes the fetch upstream step ([#1617](https://github.com/git-town/git-town/pull/1617))\n- fix GitHub API log when shipping with the GitHub driver ([#1622](https://github.com/git-town/git-town/pull/1622))\n- fix panic when aborting a command that includes discard open changes step ([#1631](https://github.com/git-town/git-town/pull/1631))\n- fix continuing sync from subfolder ([#1637](https://github.com/git-town/git-town/pull/1637))\n\n## 7.4.0 (2020-07-05)\n\nVersion 7.4.0 sports a vastly overhauled internal architecture that provides more robust error handling, improved error messages, and a much better developer experience. Ruby is no longer a development dependency.\n\n#### New Features\n\n- improved installation experience: MSI installer for Windows, `.deb` and `.rpm` packages for Linux, archives with properly named binaries for all other use cases ([#1589](https://github.com/git-town/git-town/pull/1589))\n- \"diff-parent\" command ([#1385](https://github.com/git-town/git-town/pull/1518))\n- support for Gitea hosting service ([#1518](https://github.com/git-town/git-town/pull/1518))\n- print URLs to open when browser is not available ([#1318](https://github.com/git-town/git-town/pull/1318))\n- autocompletion for bash, zsh, fish, powershell ([#1492](https://github.com/git-town/git-town/pull/1492))\n- list parent configurations for branches that are children of a branch that does not have its parent configured ([#1436](https://github.com/git-town/git-town/pull/1436))\n\n#### Bug Fixes\n\n- improved error messages\n\n## 7.3.0 (2019-11-05)\n\n#### New Features\n\n- add option to disable auto sync upstream\n\n#### Bug Fixes\n\n- update docs for code-hosting config\n\n## 7.2.1 (2019-05-06)\n\n#### Bug Fixes\n\n- prune branches now properly updates perennial branch config\n- support branch names with special characters\n- fix the prompt on Windows CMD terminals\n- clear the runstate after undo to prevent running `git town undo` twice\n- fix Fish shell autocomplete\n- fix hosting service naming\n\n## 7.2.0 (2018-06-01)\n\n#### New Features\n\n- `git town config`: print perennial branch trees\n- `git town hack`: add `-p` option which prompts for the parent branch instead of using the main branch\n- when fetching the origin repository, fetch tags that are not attached to pulled commits\n\n#### Changes\n\n- fetch only the main branch when fetching the upstream repository\n\n## 7.1.1 (2018-04-09)\n\n#### Bug Fixes\n\n- strip colors from the output of git commands run internally. This caused errors if you had git configured with `color.ui=always`\n\n## 7.1.0 (2018-04-05)\n\n#### New Features\n\n- automatically remove outdated configuration\n\n## 7.0.0 (2018-04-03)\n\n#### BREAKING CHANGES\n\n- `git town config`: `reset` and `setup` are now subcommands instead of flags\n- `--abort`, `--continue`, `--skip`, `--undo` flags removed. Instead there are now top level commands `git town abort`, `git town continue`, `git town skip`, `git town undo`\n\n#### New Features\n\n- Catches when there is an unfinished state from a git town command that hit conflicts. If you try to run another git town command, Git Town will prompt you on how to resolve the unfinished state. The unfinished state can be discarded and there is also a new top level command `git town discard` to delete the state of the last run command.\n\n#### Bug Fixes\n\n- skip perennial branch prompt if there are no options\n\n## 6.0.2 (2018-01-26)\n\n#### Bug Fixes\n\n- fix parsing of git config when a value contains a newline\n\n## 6.0.1 (2018-01-24)\n\n#### Bug Fixes\n\n- fixes displayed version number\n\n## 6.0.0 (2018-01-15)\n\n#### BREAKING CHANGES\n\n- `git town set-parent-branch`: update interface to no longer accept arguments and instead prompt the user for the parent of the current branch\n- `git town perennial-branches`: update the interface to add / remove perennial branches. Run `git town perennial-branch update` to receive the same prompt as initial configuration.\n- Rename `hack-push-flag` to `new-branch-push-flag`. Please reconfigure if you are not using the default.\n\n#### New Features\n\n- `git town new-branch-push-flag`: add `--global` flag to set your default value. Any locally configured value will override.\n- add `--verbose` flag to see all the git commands runs under the hood\n- speed improvement from reducing the number of git commands run under the hood\n\n## 5.1.0 (2017-12-05)\n\n#### New Features\n\n- Nicer prompts from https://github.com/AlecAivazis/survey\n- Parent branch prompt: add option to make the branch a perennial branch\n\n#### Bug Fixes\n\n- `git ship`: fix bug when encountering a merge conflict and using a code hosting driver ([#1060](https://github.com/git-town/git-town/issues/1060))\n\n## 5.0.0 (2017-08-16)\n\n#### BREAKING CHANGES\n\n- `git new-pull-request / repo`: support for ssh identities changed\n  - Before: ssh identity needed to include \"github\", \"gitlab\" or \"bitbucket\"\n  - Now: Run `git config git-town.code-hosting-origin-hostname <hostname>` where hostname matches what is in your ssh config file\n\n#### New Features\n\n- `git new-pull-request / repo`: support for self hosted versions\n  - Run `git config git-town.code-hosting-driver <driver>` where driver is \"bitbucket\", \"github\", or \"gitlab\"\n- `git sync`: add `--dry-run` flag to view the planned commands without running them\n- `git ship`: when merging via the GitHub API, update the default commit message to include the PR title and number\n\n## 4.2.1 (2017-08-16)\n\n#### Bug Fixes\n\n- add missing dependency to vendor folder (required for building on Homebrew)\n\n## 4.2.0 (2017-08-15)\n\n#### New Features\n\n- Update all commands to support offline mode (lack of an internet connection)\n  - Display / update offline mode with `git town offline [(true | false)]`\n- `git ship`\n  - add ability to ship hotfixes to perennial branches\n  - add ability to merge via GitHub API when applicable. See [documentation](website/src/commands/ship.md) for more info.\n\n## 4.1.2 (2017-06-08)\n\n#### Bug Fixes\n\n- temporary file: use operating system temporary directory instead of hardcoding `/tmp`\n\n## 4.1.1 (2017-06-07)\n\n#### Bug Fixes\n\n- temporary file: make parent directories if needed ([#955 comment](https://github.com/git-town/git-town/issues/955#issuecomment-306041043))\n\n## 4.1.0 (2017-06-01)\n\n#### New Features\n\n- `git new-pull-request`, `git repo`: support more commands to open browsers (`cygstart`, `x-www-browser`, `firefox`, `opera`, `mozilla`, `netscape`)\n- Add longer descriptions for commands which appear when running `git town help <command>` or `git town <command> --help`\n\n#### Changes\n\n- make `hack-push-flag` false by default (was true before) ([#929](https://github.com/git-town/git-town/issues/929))\n\n#### Bug Fixes\n\n- replace all non-alpha numeric characters in temporary filename ([#925](https://github.com/git-town/git-town/issues/925))\n- fix spacing in parent branch prompts\n- enforce Git version 2.7.0 or higher\n\n## 4.0.1 (2017-05-21)\n\n#### Bug Fixes\n\n- fix infinite loop when prompting for parent branch and there are perennial branches configured\n- enforce a Git version 2.6.0 or higher\n- fix `ship` when the supplied branch is equal to the current branch and there are open changes\n- allow running `alias` command in non-git directories\n\n## 4.0.0 (2017-05-12)\n\n#### BREAKING CHANGES\n\n- rewrite in go, Git Town is now a single, stand-alone binary\n  - first-class Windows support\n  - This breaks existing aliases. If you have the default aliases setup, reconfigure them with `git town alias true`\n\n## 3.1.0 (2017-03-27)\n\n#### New Features\n\n- `git new-pull-request`, `git repo`:\n  - support `ssh://` urls (thanks to @zhangwei)\n  - add GitLab support (thanks to @dgjnpr)\n\n## 3.0.0 (2017-02-07)\n\n#### BREAKING CHANGES\n\n- `git hack`: no longer accepts a parent branch (functionality moved to `git append`)\n\n#### New Features\n\n- `git append`: create a new branch as a child of the current branch\n- `git prepend`: create a new branch as a parent of the current branch\n- `git rename-branch`: implicitly uses the current branch if only one branch name provided\n\n#### Bug Fixes\n\n- fix incorrectly reported branch loop ([#785](https://github.com/git-town/git-town/issues/785))\n\n## 2.1.0 (2016-12-26)\n\n#### New Features\n\n- support SSH identities ([#739](https://github.com/git-town/git-town/issues/739))\n\n#### Bug Fixes\n\n- update stashing strategy to avoid use of `git stash -u` which can delete ignored files ([#744](https://github.com/git-town/git-town/issues/744))\n- fix merge conflicts resolution that results in no changes ([#753](https://github.com/git-town/git-town/issues/753))\n- `git hack`: prompt for parent branch if unknown ([#760](https://github.com/git-town/git-town/issues/760))\n- prevent parent branch loops ([#751](https://github.com/git-town/git-town/issues/751))\n\n## 2.0.0 (2016-09-18)\n\n#### BREAKING CHANGES\n\n- All commands now have a `town-` prefix. Example `git town-sync`. This is to prevent conflicts with `git-extras` which adds git commands by the same name and `hub` which wants you to alias git to it and adds commands by the same name.\n  - Use [git aliases](https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases) to remove the `town-` prefix if you would like. Run `git town alias true` to add aliases for all `git-town` commands (skips commands which would overwrite existing aliases).\n\n## 1.0.0 (2016-08-05)\n\n#### New Features\n\n- `git town set-parent-branch <child_branch_name> <parent_branch_name>`: to update a parent branch ([#729](https://github.com/git-town/git-town/issues/729))\n\n#### Bug Fixes\n\n- `git sync --all`: don't prompt for parent of perennial branches ([#727](https://github.com/git-town/git-town/issues/727))\n\n## 0.10.1 (2016-06-23)\n\n#### New Features\n\n- `git hack`: add configuration to omit pushing new branches ([#720](https://github.com/git-town/git-town/issues/720))\n\n#### Bug Fixes\n\n- configuration: make branch order consistent\n- `git ship`: update uncommitted changes error message ([#718](https://github.com/git-town/git-town/issues/718))\n\n## 0.10.0 (2016-01-21)\n\n#### BREAKING CHANGES\n\n- `git prune-branches`: new functionality - delete branches whose tracking branch no longer exists ([#702](https://github.com/git-town/git-town/issues/702))\n\n#### New Features\n\n- `git sync`: add configuration option to merge the main branch / perennial branches with their upstream ([#671](https://github.com/git-town/git-town/issues/671))\n- `git hack`, `git ship`: support for running in subfolders\n\n#### Bug Fixes\n\n- internationalize check for undefined function ([#678](https://github.com/git-town/git-town/issues/678))\n- `git new-pull-request`: ability to continue after conflicts ([#700](https://github.com/git-town/git-town/issues/700))\n\n## 0.9.0 (2015-10-17)\n\n#### BREAKING CHANGES\n\n- remove `git sync-fork`\n\n#### New Features\n\n- `git new-pull-request`: support forked repos ([#682](https://github.com/git-town/git-town/issues/682))\n- `git sync`: if there is a remote upstream, syncs the main branch with its upstream counterpart ([#685](https://github.com/git-town/git-town/issues/685))\n\n## 0.8.0 (2015-10-14)\n\n#### BREAKING CHANGES\n\n- removed `git extract`\n- update internal storage of perennial branches\n  - if you have configured more than one perennial branch, you will need to reset your configuration\n    - `git town config --reset`\n    - `git town config --setup` or follow the prompt the next time you run a Git Town command\n\n#### New Features\n\n- configuration prompt: allow user to select branch by number, ability to recover from bad input\n- parent branch prompt: show description and branch list once per command\n- preserve checkout history so that `git checkout -` works as expected alongside Git Town commands ([#65](https://github.com/git-town/git-town/issues/65))\n- `git hack`: pushes the new branch to the remote repository ([#664](https://github.com/git-town/git-town/issues/664))\n- `git new-pull-request`: syncs the branch before creating the pull request ([#367](https://github.com/git-town/git-town/issues/367))\n- `git sync --all`: pushes tags ([#464](https://github.com/git-town/git-town/issues/464))\n- `git town config`: shows branch ancestry ([#651](https://github.com/git-town/git-town/issues/651))\n\n#### Bug Fixes\n\n- `git town version`: Homebrew installs no longer print date and SHA ([#631](https://github.com/git-town/git-town/issues/631))\n\n## 0.7.3 (2015-09-02)\n\n- `git kill`: can remove branches that exist on the remote and not locally ([#380](https://github.com/git-town/git-town/issues/380))\n- `git ship`: prompt when there is more than one author ([#486](https://github.com/git-town/git-town/issues/486))\n\n## 0.7.2 (2015-08-28)\n\n- `git sync --all`: fix parent branch prompt\n- `git ship`: comment out default commit message ([#382](https://github.com/git-town/git-town/issues/382))\n\n## 0.7.1 (2015-08-27)\n\n- `git ship`: add ability to ship remote branches ([#593](https://github.com/git-town/git-town/issues/593))\n- `git new-pull-request`/`git repo`: remove empty line output ([#602](https://github.com/git-town/git-town/issues/602))\n- `git kill`: prompt for unknown parent branch ([#603](https://github.com/git-town/git-town/issues/603))\n- `git sync --all`: prompt for unknown parent branch ([#604](https://github.com/git-town/git-town/issues/604))\n- support branch names with forward slashes (along with any valid branch name) ([#608](https://github.com/git-town/git-town/issues/608))\n\n## 0.7.0 (2015-08-24)\n\n- fix `git ship --undo` ([#550](https://github.com/git-town/git-town/issues/550))\n- rename `non-feature-branches` to `perennial-branches` ([#344](https://github.com/git-town/git-town/issues/344))\n  - configuration is automatically updated to support this\n- support for nested feature branches ([#529](https://github.com/git-town/git-town/issues/529))\n- add `git rename-branch` ([#474](https://github.com/git-town/git-town/issues/474))\n- rename `git pull-request` to `git new-pull-request` ([#413](https://github.com/git-town/git-town/issues/413), [#507](https://github.com/git-town/git-town/issues/507))\n- add SHA and date to output of `git town version` for manual installs\n- show error when trying to continue after a successful command ([#364](https://github.com/git-town/git-town/issues/364))\n\n## 0.6.0 (2015-04-02)\n\n- support for working without a remote repository for **git extract**, **git hack**, **git kill**, **git ship**, and **git sync**\n  - implemented by our newest core committer @ricmatsui\n- **git pr** renamed to **git pull-request**\n  - set up an alias with `git config --global alias.pr pull-request`\n- **git ship**\n  - now accepts all `git commit` options\n  - author with the most commits is automatically set as the author (when not the committer) ([#335](https://github.com/git-town/git-town/issues/335))\n- **git pr/repo**\n  - improved linux compatibility by trying `xdg-open` before `open`\n- improved error messages when run outside a git repository\n- improved setup wizard for initial configuration in a git repository\n- added [contribution guide](/docs/CONTRIBUTING.md)\n- added tutorial\n\n## 0.5.0 (2015-01-08)\n\n- Manual installs need to update their `PATH` to point to the `src` folder within their clone of the repository\n- **git extract:**\n  - errors if branch exists remotely ([#236](https://github.com/git-town/git-town/issues/236))\n  - removed restriction: need to be on a feature branch ([#269](https://github.com/git-town/git-town/issues/269))\n  - added restriction: errors if the current branch does not have any have extractable commits and the user provided no commits (commits not in the main branch) ([#269](https://github.com/git-town/git-town/issues/269))\n- **git hack:** errors if branch exists remotely ([#237](https://github.com/git-town/git-town/issues/237))\n- **git kill:**\n  - optional branch name ([#126](https://github.com/git-town/git-town/issues/126))\n  - does not error if tracking branch is already deleted ([#196](https://github.com/git-town/git-town/issues/196))\n- **git pr:**\n  - linux compatibility ([#232](https://github.com/git-town/git-town/issues/232))\n  - compatible with more variants of specifying a Bitbucket or GitHub remote ([#271](https://github.com/git-town/git-town/issues/271))\n  - compatible with respository names that contain \".git\" ([#305](https://github.com/git-town/git-town/issues/305))\n- **git repo:** view the repository homepage ([#140](https://github.com/git-town/git-town/issues/140))\n- **git sync:**\n  - `--all` option to sync all local branches ([#83](https://github.com/git-town/git-town/issues/83))\n  - abort with correct state after main branch updates and tracking branch conflicts ([#228](https://github.com/git-town/git-town/issues/228))\n- **git town**: view and change Git Town configuration and improved view help page ([#98](https://github.com/git-town/git-town/issues/98))\n- auto-completion for [Fish shell](https://fishshell.com) ([#177](https://github.com/git-town/git-town/issues/177))\n\n## 0.4.1 (2014-12-02)\n\n- **git pr:** create a new pull request ([#138](https://github.com/git-town/git-town/issues/138), [40d22e](https://github.com/git-town/git-town/commit/40d22eb1703ac96a58ac5052e70d20d7bdb9ac73))\n- **git ship:**\n  - empty commit message aborts the command ([#153](https://github.com/git-town/git-town/issues/153), [0bc84e](https://github.com/git-town/git-town/commit/0bc84ee626299896661fe1754cfa227630725bb9))\n  - abort when there are no shippable changes ([#188](https://github.com/git-town/git-town/issues/188), [52fd94](https://github.com/git-town/git-town/commit/52fd94eca05bd3c2db5e7ac36121f08e56b9558b))\n- **git sync:**\n  - can now continue after resolving conflicts (no need to commit or continue rebasing) ([#123](https://github.com/git-town/git-town/issues/123), [1a50ad](https://github.com/git-town/git-town/commit/1a50ad689a752f4eaed663e0ab22184621ee96a2))\n  - restores deleted tracking branch ([#165](https://github.com/git-town/git-town/issues/165), [259464](https://github.com/git-town/git-town/commit/2594646ad853d83a6d697354d66755a374e42b8a))\n- **git extract:** errors if branch already exists ([#128](https://github.com/git-town/git-town/issues/128), [75f498](https://github.com/git-town/git-town/commit/75f498771f19326f03bd1fd1bb70c9d9851b53f3))\n- **git sync-fork:** no longer automatically sets upstream configuration ([865030](https://github.com/git-town/git-town/commit/8650301a3ea40a989562a991960fa0d41b26f7f7))\n- remove needless checkouts for **git-ship**, **git-extract**, and **git-hack** ([#150](https://github.com/git-town/git-town/issues/150), [#155](https://github.com/git-town/git-town/issues/155), [8b385a](https://github.com/git-town/git-town/commit/8b385a745cf7ed28638e0a5c9c24440b7010354c), [35de43](https://github.com/git-town/git-town/commit/35de43156d9c6092840cd73456844b90acc36d8e))\n- linters for shell scripts and ruby tests ([#149](https://github.com/git-town/git-town/issues/149), [076668](https://github.com/git-town/git-town/commit/07666825b5d60e15de274746fc3c26f72bd7aee2), [651c04](https://github.com/git-town/git-town/commit/651c0448309a376eee7d35659d8b06f709b113b5))\n- rake tasks for development ([#170](https://github.com/git-town/git-town/issues/170), [ba74cf](https://github.com/git-town/git-town/commit/ba74cf30c8001941769dcd70410dbd18331f2fe9))\n\n## 0.4.0 (2014-11-13)\n\n- **git kill:** removes a feature branch ([#87](https://github.com/git-town/git-town/issues/87), [edd7d8](https://github.com/git-town/git-town/commit/edd7d8180eb76717fd72e77d2c75edf8e3b6b6ca))\n- **git sync:** pushes tags to the remote when running on the main branch ([#68](https://github.com/git-town/git-town/issues/68), [71b607](https://github.com/git-town/git-town/commit/71b607988c00e6dfc8f2598e9b964cc2ed4cfc39))\n- **non-feature branches:** are not shipped and do not merge main when syncing ([#45](https://github.com/git-town/git-town/issues/45), [31dce1](https://github.com/git-town/git-town/commit/31dce1dfaf11e1e17f17e141a26cb38360ab731a))\n- **git ship:**\n  - merges main into the feature branch before squash merging ([#61](https://github.com/git-town/git-town/issues/61), [82d4d3](https://github.com/git-town/git-town/commit/82d4d3e745732cb397850a4c047826ba485e2bdb))\n  - errors if the feature branch is not ahead of main ([#86](https://github.com/git-town/git-town/issues/86), [a0ace5](https://github.com/git-town/git-town/commit/a0ace5bb5e992c193df8abe4b0aca984c302c323))\n  - git ship takes an optional branch name ([#95](https://github.com/git-town/git-town/issues/95), [cbf020](https://github.com/git-town/git-town/commit/cbf020fc3dd6d0ce49f8814a92f103e243f9cd2b))\n- updated output to show each git command and its output, updated error messages ([8d8973](https://github.com/git-town/git-town/commit/8d8973aaa58394a123ceed2811271606f4e1aaa9), [60e1d8](https://github.com/git-town/git-town/commit/60e1d8299ebbb0e75bdae057e864d17e1f9a3ce7), [408e69](https://github.com/git-town/git-town/commit/408e699e5bdd3af524b2ea64669b81fea3bbe60b))\n- skips unnecessary pushes ([0da896](https://github.com/git-town/git-town/commit/0da8968aef29f9ecb7326e0fafb5976f51789dca))\n- **man pages** ([609e11](https://github.com/git-town/git-town/commit/609e11400818604328885df86c02ee4630410e12), [164f06](https://github.com/git-town/git-town/commit/164f06bc8bf00d9e99ce0416f408cf62959dc833), [27b257](https://github.com/git-town/git-town/commit/27b2573ca5ffa9ae7930f8b5999bbfdd72bd16d9))\n- **git prune-branches** ([#48](https://github.com/git-town/git-town/issues/48), [7a922e](https://github.com/git-town/git-town/commit/7a922ecd9e03d20ed5a0c159022e601cebc80313))\n- **Cucumber:** optional Fuubar output ([7c5402](https://github.com/git-town/git-town/commit/7c540284cf46bd49a7623566c1343285813524c6))\n\n## 0.3 (2014-10-10)\n\n- multi-user support for feature branches ([#35](https://github.com/git-town/git-town/issues/35), [ca0882](https://github.com/git-town/git-town/commit/ca08820c68457bddf6b8fff6c3ef3d430b905d9b))\n- **git sync-fork** ([#22](https://github.com/git-town/git-town/issues/22), [1f1f9f](https://github.com/git-town/git-town/commit/1f1f9f98ffa7288d6a5982ec0c9e571695590fe1))\n- stores configuration in the Git configuration instead of a dedicated file ([8b8695](https://github.com/git-town/git-town/commit/8b86953d7c7c719f28dbc7af6e86d02adaf2053e))\n- removes redundant fetches from the central repo per session ([#15](https://github.com/git-town/git-town/issues/15), [43400a](https://github.com/git-town/git-town/commit/43400a5b968a47eb55484f73e34026f66b1e939a))\n- automatically prunes remote branches when fetching updates ([86100f](https://github.com/git-town/git-town/commit/86100f08866f19a0f4e80f470fe8dcc6996ddc2c))\n- always cleans up abort and continue scripts after using one of them ([3be4c0](https://github.com/git-town/git-town/commit/3be4c06635a943f378287963ba30e4306fcd9802))\n- simpler readme, dedicated RDD document\n- **<a href=\"https://cukes.info\" target=\"_blank\">Cucumber</a>** feature specs (you need Ruby 2.x) ([c9d175](https://github.com/git-town/git-town/commit/c9d175fe2f28fbda3f662454f54ed80306ce2f46))\n- much faster testing thanks to fully local test Git repos ([#25](https://github.com/git-town/git-town/issues/25), [c9d175](https://github.com/git-town/git-town/commit/c9d175fe2f28fbda3f662454f54ed80306ce2f46))\n\n## 0.2.2 (2014-06-10)\n\n- fixes \"unary\" error messages\n- lots of output and documentation improvements\n\n## 0.2.1 (2014-05-31)\n\n- better terminal output\n- Travis CI improvements\n- better documentation\n\n## 0.2.0 (2014-05-29)\n\n- displays the duration of specs\n- pulls the main branch only if it has a remote\n- --abort options to abort failed Git Town operations\n- --continue options to continue some Git Town operations after fixing the underlying issues\n- installation through Homebrew\n- colored test output\n- display summary after tests\n- exit with proper status codes\n- better documentation\n\n## 0.1.0 (2014-05-22)\n\n- git hack, git sync, git extract, git ship\n- basic test framework\n- Travis CI integration\n- self-hosting: uses Git Town for Git Town development\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0673828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2024 the Git Town creators\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.576171875,
          "content": "RTA_VERSION = 0.9.0  # run-that-app version to use\n\n# internal data and state\n.DEFAULT_GOAL := help\nRELEASE_VERSION := \"17.2.0\"\nGO_TEST_ARGS = LANG=C GOGC=off BROWSER=\n\ncuke: install  # runs all end-to-end tests except the ones that mess up the output, best for development\n\t@env $(GO_TEST_ARGS) skipmessyoutput=1 go test -v\n\ncukeall: install  # runs all end-to-end tests\n\t@env $(GO_TEST_ARGS) go test -v\n\ncukethis: install  # runs the end-to-end tests that have a @this tag\n\t@env $(GO_TEST_ARGS) cukethis=1 go test . -v -count=1\n\ncukethiswin:  # runs the end-to-end tests that have a @this tag on Windows\n\tgo install -ldflags \"-X github.com/git-town/git-town/v17/internal/cmd.version=-dev -X github.com/git-town/git-town/v17/internal/cmd.buildDate=1/2/3\"\n\tpowershell -Command '$$env:cukethis=1 ; go test . -v -count=1'\n\ncuke-prof: install  # creates a flamegraph for the end-to-end tests\n\tenv $(GO_TEST_ARGS) go test . -v -cpuprofile=godog.out\n\t@rm git-town.test\n\t@echo Please open https://www.speedscope.app and load the file godog.out\n\ncukewin: install  # runs all end-to-end tests on Windows\n\tgo test . -v -count=1\n\ndependencies: tools/rta@${RTA_VERSION}  # prints the dependencies between the internal Go packages as a tree\n\t@tools/rta depth . | grep git-town\n\ndocs: install tools/node_modules  # tests the documentation\n\t@tools/rta node tools/node_modules/.bin/text-run --offline\n\nfix: tools/rta@${RTA_VERSION}  # runs all linters and auto-fixes\n\tgo run tools/format_unittests/format_unittests.go\n\tgo run tools/format_self/format_self.go\n\ttools/rta gofumpt -l -w .\n\ttools/rta dprint fmt\n\ttools/rta dprint fmt --config dprint-changelog.json\n\ttools/rta shfmt -f . | grep -v tools/node_modules | grep -v '^vendor/' | xargs tools/rta shfmt --write\n\ttools/rta ghokin fmt replace features/\n\nhelp:  # prints all available targets\n\t@grep -h -E '^[a-zA-Z_-]+:.*?# .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?# \"}; {printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}'\n\ninstall:  # builds for the current platform\n\t@go install -ldflags=\"-s -w\"\n\nlint: tools/node_modules tools/rta@${RTA_VERSION}  # lints the main codebase concurrently\n\tmake --no-print-directory lint-smoke\n\t@tools/rta --available alphavet && go vet \"-vettool=$(shell tools/rta --which alphavet)\" $(shell go list ./... | grep -v internal/cmd)\n\tmake --no-print-directory deadcode\n\tmake --no-print-directory lint-structs-sorted\n\tmake --no-print-directory lint-tests-sorted\n\tgit diff --check\n\t(cd tools/lint_steps && go build && ./lint_steps)\n\ttools/rta node tools/node_modules/.bin/gherkin-lint\n\ttools/rta actionlint\n\ttools/rta staticcheck ./...\n\ttools/ensure_no_files_with_dashes.sh\n\ttools/rta shfmt -f . | grep -v 'tools/node_modules' | grep -v '^vendor/' | xargs tools/rta --optional shellcheck\n\ttools/rta golangci-lint cache clean\n\ttools/rta golangci-lint run\n\nlint-all: lint tools/rta@${RTA_VERSION}  # runs all linters\n\ttools/rta govulncheck ./...\n\t@echo lint tools/format_self\n\t@(cd tools/format_self && ../rta golangci-lint run)\n\t@echo lint tools/format_unittests\n\t@(cd tools/format_unittests && ../rta golangci-lint run)\n\t@echo lint tools/stats_release\n\t@(cd tools/stats_release && ../rta golangci-lint run)\n\t@echo lint tools/structs_sorted\n\t@(cd tools/structs_sorted && ../rta golangci-lint run)\n\t@echo lint tools/tests_sorted\n\t@(cd tools/tests_sorted && ../rta golangci-lint run)\n\t@echo lint tools/lint_steps\n\t@(cd tools/lint_steps && ../rta golangci-lint run)\n\nlint-smoke: tools/rta@${RTA_VERSION}  # runs only the essential linters to get quick feedback after refactoring\n\t@tools/rta exhaustruct -test=false \"-i=github.com/git-town/git-town.*\" github.com/git-town/git-town/...\n# @tools/rta ireturn --reject=\"github.com/git-town/git-town/v17/pkg/prelude.Option\" github.com/git-town/git-town/...\n\nlint-structs-sorted:\n\t@(cd tools/structs_sorted && go build) && ./tools/structs_sorted/structs_sorted\n\nlint-tests-sorted:\n\t@(cd tools/tests_sorted && go build) && ./tools/tests_sorted/tests_sorted\n\nsmoke: install  # run the smoke tests\n\t@env $(GO_TEST_ARGS) smoke=1 go test . -v -count=1\n\nsmokewin: install  # runs the Windows smoke tests\n\t@env smoke=1 go test . -v -count=1\n\nstats: tools/rta@${RTA_VERSION}  # shows code statistics\n\t@find . -type f | grep -v './tools/node_modules' | grep -v '\\./vendor/' | grep -v '\\./.git/' | grep -v './website/book' | xargs tools/rta scc\n\nstats-release:  # displays statistics about the changes since the last release\n\t@(cd tools/stats_release && go build && ./stats_release v${RELEASE_VERSION})\n\ntest: fix docs unit lint-all cuke  # runs all the tests\n.PHONY: test\n\ntest-go:  # smoke tests while working on the Go code\n\t@make --no-print-directory install &\n\t@make --no-print-directory unit &\n\t@make --no-print-directory deadcode &\n\t@make --no-print-directory lint\n\ntodo:  # displays all TODO items\n\t@git grep --color=always --line-number TODO ':!vendor' | grep -v Makefile | grep -v internal/hosting/bitbucketdatacenter/connector.go\n\nUNIT_TEST_DIRS = \\\n\t./internal/... \\\n\t./pkg/... \\\n\t./test/... \\\n\t./tools/format_self/... \\\n\t./tools/format_unittests/... \\\n\t./tools/lint_steps/... \\\n\t./tools/stats_release/... \\\n\t./tools/structs_sorted/... \\\n\t./tools/tests_sorted/...\n\nunit: install  # runs only the unit tests for changed code\n\t@env GOGC=off go test -timeout=30s $(UNIT_TEST_DIRS)\n\nunit-all: install  # runs all the unit tests\n\tenv GOGC=off go test -count=1 -shuffle=on -timeout=60s $(UNIT_TEST_DIRS)\n\nunit-race: install  # runs all the unit tests with race detector\n\tenv GOGC=off go test -count=1 -timeout 60s -race $(UNIT_TEST_DIRS)\n\tcd website && make --no-print-directory unit\n\nupdate: tools/rta@${RTA_VERSION}  # updates all dependencies\n\tgo get -u ./...\n\tgo mod tidy\n\tgo work vendor\n\trm -rf tools/node_modules package-lock.json\n\tcd tools && ./rta npx -y npm-check-updates -u\n\tcd tools && ./rta npm install\n\ttools/rta --update\n\ttools/rta dprint config update\n\ttools/rta dprint config update --config dprint-changelog.json\n\n# --- HELPER TARGETS --------------------------------------------------------------------------------------------------------------------------------\n\ndeadcode: tools/rta@${RTA_VERSION}\n\t@tput bold || true\n\t@tput setaf 1 || true\n\t@tools/rta deadcode github.com/git-town/git-town/tools/format_self &\n\t@tools/rta deadcode github.com/git-town/git-town/tools/format_unittests &\n\t@tools/rta deadcode github.com/git-town/git-town/tools/stats_release &\n\t@tools/rta deadcode github.com/git-town/git-town/tools/structs_sorted &\n\t@tools/rta deadcode github.com/git-town/git-town/tools/lint_steps &\n\t@tools/rta deadcode -test github.com/git-town/git-town/v17 \\\n\t\t| grep -v BranchExists \\\n\t\t| grep -v 'Create$$' \\\n\t\t| grep -v CreateFile \\\n\t\t| grep -v CreateGitTown \\\n\t\t| grep -v EditDefaultMessage \\\n\t\t| grep -v EmptyConfigSnapshot \\\n\t\t| grep -v FileExists \\\n\t\t| grep -v FileHasContent \\\n\t\t| grep -v IsGitRepo \\\n\t\t| grep -v Memoized.AsFixture \\\n\t\t| grep -v NewCommitMessages \\\n\t\t| grep -v NewLineageWith \\\n\t\t| grep -v NewSHAs \\\n\t\t| grep -v pkg/prelude/ptr.go \\\n\t\t| grep -v Paniced \\\n\t\t| grep -v Set.Add \\\n\t\t| grep -v UseCustomMessageOr \\\n\t\t| grep -v UseDefaultMessage \\\n\t\t|| true\n\t@tput sgr0 || true\n\ntools/rta@${RTA_VERSION}:\n\t@rm -f tools/rta*\n\t@(cd tools && curl https://raw.githubusercontent.com/kevgo/run-that-app/main/download.sh | sh)\n\t@mv tools/rta tools/rta@${RTA_VERSION}\n\t@ln -s rta@${RTA_VERSION} tools/rta\n\ntools/node_modules: tools/package-lock.json tools/rta@${RTA_VERSION}\n\ttest -f tools/node_modules/.yarn-integrity && rm -rf tools/node_modules || true  # remove node_modules if installed with Yarn (TODO: remove after 2025-01-26)\n\t@echo \"Installing Node based tools\"\n\tcd tools && ./rta npm ci\n\t@touch tools/node_modules  # update timestamp of the node_modules folder so that Make doesn't re-install it on every command\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.26953125,
          "content": "<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/git-town/git-town/main/website/src/logo.svg\">\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/git-town/git-town/main/website/src/logo-dark.svg\">\n    <img alt=\"Git Town logo\" src=\"https://raw.githubusercontent.com/git-town/git-town/main/website/src/logo.svg\">\n  </picture>\n  <br>\n  <img src=\"https://github.com/git-town/git-town/actions/workflows/cuke.yml/badge.svg\" alt=\"end-to-end test status\">\n  <img src=\"https://github.com/git-town/git-town/actions/workflows/unit.yml/badge.svg\" alt=\"unit test status\">\n  <img src=\"https://github.com/git-town/git-town/actions/workflows/lint_docs.yml/badge.svg\" alt=\"linters and documentation test status\">\n  <img src=\"https://github.com/git-town/git-town/actions/workflows/windows.yml/badge.svg\" alt=\"windows tests\">\n  <a href=\"https://goreportcard.com/report/github.com/git-town/git-town\"><img src=\"https://goreportcard.com/badge/github.com/git-town/git-town/v17\" alt=\"Go report card status\"></a>\n  <img src=\"https://api.netlify.com/api/v1/badges/c2ea5505-be48-42e5-bb8a-b807d18d99ed/deploy-status\" alt=\"Netlify deploy status\">\n</p>\n\nGit Town provides additional Git commands that automate the creation,\nsynchronization, shipping, and cleanup of Git branches. Compatible with all\npopular Git workflows like Git Flow, GitHub Flow, GitLab Flow, and trunk-based\ndevelopment. Supports mono-repos and stacked changes. Check out\n[this screencast](https://youtu.be/oLaUsUlFfTo) for an introduction.\n\n#### Basic development commands\n\n- [hack](https://www.git-town.com/commands/hack.html) - create a new up-to-date\n  feature branch off the main branch\n- [sync](https://www.git-town.com/commands/sync.html) - update existing\n  branches, remove shipped branches\n- [switch](https://www.git-town.com/commands/switch.html) - switch between\n  branches via text UI\n- [propose](https://www.git-town.com/commands/propose.html) - create a pull or\n  merge request for a feature branch\n\n#### Stacked changes\n\n- [append](https://www.git-town.com/commands/append.html) - insert a new branch\n  as a child of the current branch\n- [diff-parent](https://www.git-town.com/commands/diff-parent.html) - show the\n  changes committed to a feature branch\n- [merge](https://www.git-town.com/commands/merge.html) - merge two adjacent\n  branches in a stack into one\n- [prepend](https://www.git-town.com/commands/prepend.html) - insert a new\n  branch between the current branch and its parent\n- [set-parent](https://www.git-town.com/commands/set-parent.html) - update the\n  parent of a branch\n\n#### Limit branch syncing\n\n- [contribute](https://www.git-town.com/commands/contribute) - add commits to\n  somebody else's feature branch\n- [observe](https://www.git-town.com/commands/observe) - track somebody else's\n  feature branch without contributing to it\n- [park](https://www.git-town.com/commands/park) - stop syncing one of your\n  feature branches\n- [prototype](https://www.git-town.com/commands/prototype) - sync but don't push\n  a branch\n\n#### Dealing with errors\n\n- [continue](https://www.git-town.com/commands/continue.html) - resume the last\n  run Git Town command after having resolved conflicts\n- [skip](https://www.git-town.com/commands/skip.html) - resume the last run Git\n  Town command by skipping the current branch\n- [status](https://www.git-town.com/commands/status.html) - displays or resets\n  the current suspended Git Town command\n- [undo](https://www.git-town.com/commands/undo.html) - undo the most recent Git\n  Town command\n\n#### Setup and configuration\n\n- [config](https://www.git-town.com/commands/config.html) - display or update\n  your Git Town configuration\n- [config setup](https://www.git-town.com/commands/config-setup) - run the\n  visual setup assistant\n- [offline](https://www.git-town.com/commands/offline.html) - start or stop\n  running in offline mode\n- [completions](https://www.git-town.com/commands/completions) -\n  auto-completions for bash, zsh, fish, and PowerShell\n\n#### Advanced development commands\n\n- [branch](https://www.git-town.com/commands/branch) - display the local branch\n  hierarchy\n- [compress](https://www.git-town.com/commands/compress.html) - squash all\n  commits on feature branches down to a single commit\n- [delete](https://www.git-town.com/commands/delete.html) - remove a feature\n  branch\n- [rename](https://www.git-town.com/commands/rename.html) - rename a branch\n- [repo](https://www.git-town.com/commands/repo.html) - view the repository\n  homepage\n- [ship](https://www.git-town.com/commands/ship.html) - merge a completed\n  feature branch and remove it\n\n## Installation\n\nSee the [installation](https://www.git-town.com/install.html) and\n[configuration](https://www.git-town.com/configuration) instructions.\n\n## Documentation\n\nThe [Git Town website](https://www.git-town.com) provides documentation for Git\nTown users. `git town help [command]` shows help on the CLI.\n\n## Contributing\n\nFound a bug or have an idea for a new feature?\n[Open an issue](https://github.com/git-town/git-town/issues/new) or send a\n[pull request](https://help.github.com/articles/using-pull-requests)! Our\n[developer documentation](docs/DEVELOPMENT.md) helps you get started.\n\n[![Stargazers over time](https://starchart.cc/git-town/git-town.svg)](https://starchart.cc/git-town/git-town)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dprint-changelog.json",
          "type": "blob",
          "size": 0.244140625,
          "content": "{\n  \"incremental\": true,\n  \"includes\": [\"CHANGELOG.md\"],\n  \"excludes\": [\"vendor/**\", \"tools/node_modules/**\", \"website/book/**\"],\n  \"markdown\": {\n    \"textWrap\": \"never\"\n  },\n  \"plugins\": [\n    \"https://plugins.dprint.dev/markdown-0.17.8.wasm\"\n  ]\n}\n"
        },
        {
          "name": "dprint.json",
          "type": "blob",
          "size": 0.4873046875,
          "content": "{\n  \"incremental\": true,\n  \"markdown\": {\n    \"textWrap\": \"always\"\n  },\n  \"includes\": [\"**/*.{js,ts,json,md}\"],\n  \"excludes\": [\"CHANGELOG.md\", \"vendor/**\", \"tools/node_modules/**\", \"website/book/**\"],\n  \"plugins\": [\n    \"https://plugins.dprint.dev/json-0.19.4.wasm\",\n    \"https://plugins.dprint.dev/markdown-0.17.8.wasm\",\n    \"https://plugins.dprint.dev/toml-0.6.3.wasm\",\n    \"https://plugins.dprint.dev/g-plane/pretty_yaml-v0.5.0.wasm\",\n    \"https://plugins.dprint.dev/typescript-0.93.3.wasm\"\n  ]\n}\n"
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.6552734375,
          "content": "module github.com/git-town/git-town/v17\n\ngo 1.23\n\nrequire (\n\tcode.gitea.io/sdk/gitea v0.19.0\n\tgithub.com/BurntSushi/toml v1.4.0\n\tgithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d\n\tgithub.com/carlmjohnson/requests v0.24.3\n\tgithub.com/charmbracelet/bubbles v0.20.0\n\tgithub.com/charmbracelet/bubbletea v1.2.4\n\tgithub.com/cucumber/godog v0.15.0\n\tgithub.com/cucumber/messages/go/v21 v21.0.1\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-github/v58 v58.0.0\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51\n\tgithub.com/kr/pretty v0.3.1\n\tgithub.com/ktrysmt/go-bitbucket v0.9.81\n\tgithub.com/muesli/termenv v0.15.2\n\tgithub.com/sergi/go-diff v1.3.1\n\tgithub.com/shoenig/test v1.12.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/xanzy/go-gitlab v0.114.0\n\tgolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f\n\tgolang.org/x/oauth2 v0.24.0\n)\n\nrequire (\n\tgithub.com/atotto/clipboard v0.1.4 // indirect\n\tgithub.com/aymanbagabas/go-osc52/v2 v2.0.1 // indirect\n\tgithub.com/charmbracelet/lipgloss v1.0.0 // indirect\n\tgithub.com/charmbracelet/x/ansi v0.5.2 // indirect\n\tgithub.com/charmbracelet/x/term v0.2.1 // indirect\n\tgithub.com/cucumber/gherkin/go/v26 v26.2.0 // indirect\n\tgithub.com/davidmz/go-pageant v1.0.2 // indirect\n\tgithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f // indirect\n\tgithub.com/go-fed/httpsig v1.1.0 // indirect\n\tgithub.com/gofrs/uuid v4.4.0+incompatible // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-memdb v1.3.4 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/hashicorp/go-version v1.7.0 // indirect\n\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-localereader v0.0.1 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.16 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 // indirect\n\tgithub.com/muesli/cancelreader v0.2.2 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgolang.org/x/crypto v0.29.0 // indirect\n\tgolang.org/x/net v0.31.0 // indirect\n\tgolang.org/x/sync v0.9.0 // indirect\n\tgolang.org/x/sys v0.27.0 // indirect\n\tgolang.org/x/text v0.20.0 // indirect\n\tgolang.org/x/time v0.8.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 20.3193359375,
          "content": "cloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncode.gitea.io/sdk/gitea v0.19.0 h1:8I6s1s4RHgzxiPHhOQdgim1RWIRcr0LVMbHBjBFXq4Y=\ncode.gitea.io/sdk/gitea v0.19.0/go.mod h1:IG9xZJoltDNeDSW0qiF2Vqx5orMWa7OhVWrjvrd5NpI=\ngithub.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d h1:licZJFw2RwpHMqeKTCYkitsPqHNxTmd4SNR5r94FGM8=\ngithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d/go.mod h1:asat636LX7Bqt5lYEZ27JNDcqxfjdBQuJ/MM4CN/Lzo=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1 h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1/go.mod h1:uYgXzlJ7ZpABp8OJ+exZzJJhRNQ2ASbcXHWsFqH8hp8=\ngithub.com/carlmjohnson/requests v0.24.3 h1:LYcM/jVIVPkioigMjEAnBACXl2vb42TVqiC8EYNoaXQ=\ngithub.com/carlmjohnson/requests v0.24.3/go.mod h1:duYA/jDnyZ6f3xbcF5PpZ9N8clgopubP2nK5i6MVMhU=\ngithub.com/charmbracelet/bubbles v0.20.0 h1:jSZu6qD8cRQ6k9OMfR1WlM+ruM8fkPWkHvQWD9LIutE=\ngithub.com/charmbracelet/bubbles v0.20.0/go.mod h1:39slydyswPy+uVOHZ5x/GjwVAFkCsV8IIVy+4MhzwwU=\ngithub.com/charmbracelet/bubbletea v1.2.4 h1:KN8aCViA0eps9SCOThb2/XPIlea3ANJLUkv3KnQRNCE=\ngithub.com/charmbracelet/bubbletea v1.2.4/go.mod h1:Qr6fVQw+wX7JkWWkVyXYk/ZUQ92a6XNekLXa3rR18MM=\ngithub.com/charmbracelet/lipgloss v1.0.0 h1:O7VkGDvqEdGi93X+DeqsQ7PKHDgtQfF8j8/O2qFMQNg=\ngithub.com/charmbracelet/lipgloss v1.0.0/go.mod h1:U5fy9Z+C38obMs+T+tJqst9VGzlOYGj4ri9reL3qUlo=\ngithub.com/charmbracelet/x/ansi v0.5.2 h1:dEa1x2qdOZXD/6439s+wF7xjV+kZLu/iN00GuXXrU9E=\ngithub.com/charmbracelet/x/ansi v0.5.2/go.mod h1:KBUFw1la39nl0dLl10l5ORDAqGXaeurTQmwyyVKse/Q=\ngithub.com/charmbracelet/x/term v0.2.1 h1:AQeHeLZ1OqSXhrAWpYUtZyX1T3zVxfpZuEQMIQaGIAQ=\ngithub.com/charmbracelet/x/term v0.2.1/go.mod h1:oQ4enTYFV7QN4m0i9mzHrViD7TQKvNEEkHUMCmsxdUg=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cucumber/gherkin/go/v26 v26.2.0 h1:EgIjePLWiPeslwIWmNQ3XHcypPsWAHoMCz/YEBKP4GI=\ngithub.com/cucumber/gherkin/go/v26 v26.2.0/go.mod h1:t2GAPnB8maCT4lkHL99BDCVNzCh1d7dBhCLt150Nr/0=\ngithub.com/cucumber/godog v0.15.0 h1:51AL8lBXF3f0cyA5CV4TnJFCTHpgiy+1x1Hb3TtZUmo=\ngithub.com/cucumber/godog v0.15.0/go.mod h1:FX3rzIDybWABU4kuIXLZ/qtqEe1Ac5RdXmqvACJOces=\ngithub.com/cucumber/messages/go/v21 v21.0.1 h1:wzA0LxwjlWQYZd32VTlAVDTkW6inOFmSM+RuOwHZiMI=\ngithub.com/cucumber/messages/go/v21 v21.0.1/go.mod h1:zheH/2HS9JLVFukdrsPWoPdmUtmYQAQPLk7w5vWsk5s=\ngithub.com/cucumber/messages/go/v22 v22.0.0/go.mod h1:aZipXTKc0JnjCsXrJnuZpWhtay93k7Rn3Dee7iyPJjs=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davidmz/go-pageant v1.0.2 h1:bPblRCh5jGU+Uptpz6LgMZGD5hJoOt7otgT454WvHn0=\ngithub.com/davidmz/go-pageant v1.0.2/go.mod h1:P2EDDnMqIwG5Rrp05dTRITj9z2zpGcD9efWSkTNKLIE=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f h1:Y/CXytFA4m6baUTXGLOoWe4PQhGxaX0KpnayAqC48p4=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f/go.mod h1:vw97MGsxSvLiUE2X8qFplwetxpGLQrlU1Q9AUEIzCaM=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/go-fed/httpsig v1.1.0 h1:9M+hb0jkEICD8/cAiNqEB66R87tTINszBRTjwjQzWcI=\ngithub.com/go-fed/httpsig v1.1.0/go.mod h1:RCMrTZvN1bJYtofsG4rd5NaO5obxQ5xBkdiS7xsT7bM=\ngithub.com/gofrs/uuid v4.2.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gofrs/uuid v4.3.1+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gofrs/uuid v4.4.0+incompatible h1:3qXRTX8/NbyulANqlc0lchS1gqAVxRgsuW1YrTJupqA=\ngithub.com/gofrs/uuid v4.4.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github/v58 v58.0.0 h1:Una7GGERlF/37XfkPwpzYJe0Vp4dt2k1kCjlxwjIvzw=\ngithub.com/google/go-github/v58 v58.0.0/go.mod h1:k4hxDKEfoWpSqFlc8LTpGd9fu2KrV1YAa6Hi6FmDNY4=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix v1.3.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-memdb v1.3.4 h1:XSL3NR682X/cVk2IeV0d70N4DZ9ljI885xAEU8IoK3c=\ngithub.com/hashicorp/go-memdb v1.3.4/go.mod h1:uBTr1oQbtuMgd1SSGoR8YV27eT3sBHbYiNm53bMpgSg=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.2 h1:cfejS+Tpcp13yd5nYHWDI6qVCny6wyX2Mt5SGur2IGE=\ngithub.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-version v1.7.0 h1:5tqGy27NaOTB8yJKUZELlFAS/LTKJkrmONwQKeRZfjY=\ngithub.com/hashicorp/go-version v1.7.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\ngithub.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\ngithub.com/k0kubun/pp v3.0.1+incompatible/go.mod h1:GWse8YhT0p8pT4ir3ZgBbfZild3tgzSScAn6HmfYukg=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/ktrysmt/go-bitbucket v0.9.81 h1:PQxJsFcGdblDOv5PhFA03uNgXMiJfpLo03oYIUdQ2h0=\ngithub.com/ktrysmt/go-bitbucket v0.9.81/go.mod h1:eWIy5+e1l2eDf9xxwCEmK7oPvNKR91vwYocJWIUQISQ=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-localereader v0.0.1 h1:ygSAOl7ZXTx4RdPYinUpg6W99U8jWvWi9Ye2JC/oIi4=\ngithub.com/mattn/go-localereader v0.0.1/go.mod h1:8fBrzywKY7BI3czFoHkuzRoWE9C+EiG4R1k4Cjx5p88=\ngithub.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=\ngithub.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 h1:ZK8zHtRHOkbHy6Mmr5D264iyp3TiX5OmNcI5cIARiQI=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6/go.mod h1:CJlz5H+gyd6CUWT45Oy4q24RdLyn7Md9Vj2/ldJBSIo=\ngithub.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=\ngithub.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/termenv v0.15.2 h1:GohcuySI0QmI3wN8Ok9PtKGkgkFIk7y6Vpb5PvrY+Wo=\ngithub.com/muesli/termenv v0.15.2/go.mod h1:Epx+iuz8sNs7mNKhxzH4fWXGNpZwUaJKRS1noLXviQ8=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/shoenig/test v1.12.0 h1:5gu0WaxkayLUad6B/VCnBWMi5VR7oVYCw/d34SU1ed0=\ngithub.com/shoenig/test v1.12.0/go.mod h1:UxJ6u/x2v/TNs/LoLxBNJRV9DiwBBKYxXSyczsBHFoI=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/xanzy/go-gitlab v0.114.0 h1:0wQr/KBckwrZPfEMjRqpUz0HmsKKON9UhCYv9KDy19M=\ngithub.com/xanzy/go-gitlab v0.114.0/go.mod h1:wKNKh3GkYDMOsGmnfuX+ITCmDuSDWFO0G+C4AygL9RY=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210513164829-c07d793c2f9a/go.mod h1:P+XmwS30IXTQdn5tA2iutPOUgjI07+tq3H3K9MVA1s8=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=\ngolang.org/x/crypto v0.29.0 h1:L5SG1JTTXupVV3n6sUqMTeWbjAyfPwoda2DLX8J8FrQ=\ngolang.org/x/crypto v0.29.0/go.mod h1:+F4F4N5hv6v38hfeYwTdx20oUvLLc+QfrE9Ax9HtgRg=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f h1:XdNn9LlyWAhLVp6P/i8QYBW+hlyhrhei9uErw2B5GJo=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f/go.mod h1:D5SMRVC3C2/4+F/DB1wZsLRnSNimn2Sp/NPsCrsv8ak=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/net v0.31.0 h1:68CPQngjLL0r2AlUKiSxtQFKvzRVbnzLwMUn5SzcLHo=\ngolang.org/x/net v0.31.0/go.mod h1:P4fl1q7dY2hnZFxEk4pPSkDHF+QqjitcnDjUQyMM+pM=\ngolang.org/x/oauth2 v0.20.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.9.0 h1:fEo0HyrW1GIgZdpbhCRO0PkJajUS5H9IFUztCgEo2jQ=\ngolang.org/x/sync v0.9.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.27.0 h1:wBqf8DvsY9Y/2P8gAfPDEYNuS30J4lPHJxXSb/nJZ+s=\ngolang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/term v0.26.0 h1:WEQa6V3Gja/BhNxg540hBip/kkaYtRg3cxg4oXSw4AU=\ngolang.org/x/term v0.26.0/go.mod h1:Si5m1o57C5nBNQo5z1iq+XDijt21BDBDp2bK0QI8e3E=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=\ngolang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "go.work",
          "type": "blob",
          "size": 0.15234375,
          "content": "go 1.23\n\nuse (\n\t.\n\t./tools/format_self\n\t./tools/format_unittests\n\t./tools/lint_steps\n\t./tools/stats_release\n\t./tools/structs_sorted\n\t./tools/tests_sorted\n)\n"
        },
        {
          "name": "installer",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.5126953125,
          "content": "// Git Town - a high-level CLI for Git\n//\n// Git Town adds Git commands that make software development more efficient\n// by keeping Git branches better in sync with each other.\n// This reduces merge conflicts and the number of Git commands you need to run.\npackage main\n\nimport (\n\t\"os\"\n\t\"runtime/debug\"\n\n\t\"github.com/git-town/git-town/v17/internal/cli/print\"\n\t\"github.com/git-town/git-town/v17/internal/cmd\"\n)\n\nfunc main() {\n\tdebug.SetGCPercent(-1)\n\terr := cmd.Execute()\n\tif err != nil {\n\t\tprint.Error(err)\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "main_test.go",
          "type": "blob",
          "size": 1.2861328125,
          "content": "package main_test\n\nimport (\n\t\"os\"\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/cucumber/godog\"\n\t\"github.com/git-town/git-town/v17/test/cucumber\"\n\t\"github.com/spf13/pflag\"\n)\n\nfunc TestMain(_ *testing.M) {\n\toptions := godog.Options{\n\t\tStopOnFailure: true,\n\t\tStrict:        true,\n\t}\n\tgodog.BindCommandLineFlags(\"godog.\", &options)\n\tpflag.Parse()\n\toptions.Paths = pflag.Args()\n\tflagThis := len(os.Getenv(\"cukethis\")) > 0\n\tflagSmoke := len(os.Getenv(\"smoke\")) > 0\n\tflagSkipMessyOutput := len(os.Getenv(\"skipmessyoutput\")) > 0\n\tswitch {\n\tcase flagThis:\n\t\toptions.Format = \"pretty\"\n\tcase len(options.Paths) == 0:\n\t\toptions.Format = \"progress\"\n\tcase strings.HasSuffix(options.Paths[0], \".feature\"):\n\t\toptions.Format = \"pretty\"\n\tdefault:\n\t\toptions.Format = \"progress\"\n\t}\n\t// options.Format = \"pretty\"\n\tif runtime.GOOS == \"windows\" {\n\t\toptions.Tags = \"~@skipWindows\"\n\t\toptions.Concurrency = runtime.NumCPU()\n\t} else {\n\t\toptions.Concurrency = runtime.NumCPU() * 4\n\t}\n\tif flagSkipMessyOutput {\n\t\toptions.Tags = \"~@messyoutput\"\n\t}\n\tif flagSmoke {\n\t\toptions.Tags = \"@smoke\"\n\t}\n\tif flagThis {\n\t\toptions.Tags = \"@this\"\n\t}\n\tsuite := godog.TestSuite{\n\t\tOptions:              &options,\n\t\tScenarioInitializer:  cucumber.InitializeScenario,\n\t\tTestSuiteInitializer: cucumber.InitializeSuite,\n\t}\n\tstatus := suite.Run()\n\tos.Exit(status)\n}\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.0947265625,
          "content": "[build]\n  base = \"website/\"\n  publish = \"book/\"\n  command = \"make build\"\n  ignore = \"/bin/false\"\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.0703125,
          "content": "checks = [\"all\", \"-ST1001\", \"-ST1006\", \"-ST1020\", \"-ST1021\", \"-ST1022\"]\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "text-run.yml",
          "type": "blob",
          "size": 1.384765625,
          "content": "# white-list for files to test\n# This is a glob expression, see https://github.com/isaacs/node-glob#glob-primer\n# The folder \"node_modules\" is already excluded.\n# To exclude the \"vendor\" folder: '{,!(vendor)/**/}*.md'\nfiles: \"**/*.md\"\n\n# black-list of files not to test\n# applied after the white-list above.\nexclude: [\"vendor/\"]\n\n# the formatter to use (detailed, dot, progress, summary)\nformat: dot\n\n# regex patterns for link targets to ignore\nignoreLinkTargets: []\n\n# Define which folders of your Markdown source get compiled to HTML\n# and published under a different URL path.\n#\n# In this example, the public URL \"/blog/foo\"\n# would be hosted as \"post/foo.md\":\n# publications:\n#   - localPath: /posts/\n#     publicPath: /blog\n#     publicExtension: ''\n\n# Name of the default filename in folders.\n# If you set this, and a link points to a folder,\n# Text-Runner assumes the link points to the default file in that folder.\n# defaultFile: index.md\n\n# prefix that makes anchor tags active regions\nregionMarker: type\n\n# whether to display/emit skipped activities\nshowSkipped: false\n\n# whether to run the tests in an external temp directory,\n# uses ./tmp if false,\n# you can also provide a custom directory path here\nsystemTmp: true\n\n# whether to verify online files/links (warning: this makes tests flaky)\nonline: false\n\n# whether to delete all files in the workspace folder before running the tests\nemptyWorkspace: true\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}