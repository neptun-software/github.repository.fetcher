{
  "metadata": {
    "timestamp": 1736566771442,
    "page": 328,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "opencontainers/image-spec",
      "stars": 3589,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.041015625,
          "content": "/oci-validate-examples\noutput\nheader.html\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.4609375,
          "content": "run:\n  timeout: 10m\n\nlinters:\n  disable-all: true\n  enable:\n    - dupl\n    - errorlint\n    - gofmt\n    - goimports\n    - gomodguard\n    - gosimple\n    - govet\n    - ineffassign\n    - misspell\n    - nakedret\n    - revive\n    - unused\n    - staticcheck\n\nlinters-settings:\n  gofmt:\n    simplify: true\n  gomodguard:\n    blocked:\n      modules:\n        - github.com/pkg/errors:\n            recommendations:\n              - errors\n              - fmt\n  dupl:\n    threshold: 400\n"
        },
        {
          "name": ".header",
          "type": "blob",
          "size": 0.583984375,
          "content": "// Copyright 2016 The Linux Foundation\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n"
        },
        {
          "name": ".markdownlint.yml",
          "type": "blob",
          "size": 0.3095703125,
          "content": "# all lists use a `-`\nMD004:\n  style: dash\n\n# allow tabs in code blocks (for Go)\nMD010:\n  code_blocks: false\n\n# disable line length, prefer one sentence per line for PRs\nMD013: false\n\n# emphasis with underscore (`_emphasis_`)\nMD049:\n  style: \"underscore\"\n\n# bold with asterisk (`**bold**`)\nMD050:\n  style: \"asterisk\"\n"
        },
        {
          "name": ".tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.068359375,
          "content": "\n* @jonjohnsonjr @stevvooe @sudo-bmitch @sajayantony @tianon @cyphar\n\n"
        },
        {
          "name": "EMERITUS.md",
          "type": "blob",
          "size": 0.3828125,
          "content": "# Emeritus\n\nWe would like to acknowledge previous OCI image spec maintainers and their huge contributions to our collective success:\n\n- Brandon Philips (@philips)\n- Brendan Burns (@brendandburns)\n- Jason Bouzane (@jbouzane)\n- John Starks (@jstarks)\n- Keyang Xie (@xiekeyang)\n- Vincent Batts (@vbatts)\n- Nell Boulle (@jonboulle)\n\nWe thank these members for their service to the OCI community.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 3.810546875,
          "content": "# Project governance\n\nThe [OCI charter][charter] ยง5.b.viii tasks an OCI Project's maintainers (listed in the repository's MAINTAINERS file and sometimes referred to as \"the TDC\", [ยง5.e][charter]) with:\n\n> Creating, maintaining and enforcing governance guidelines for the TDC, approved by the maintainers, and which shall be posted visibly for the TDC.\n\nThis section describes generic rules and procedures for fulfilling that mandate.\n\n## Proposing a motion\n\nA maintainer SHOULD propose a motion on the <dev@opencontainers.org> mailing list (except [security issues](#security-issues)) with another maintainer as a co-sponsor.\n\n## Voting\n\nVoting on a proposed motion SHOULD happen on the <dev@opencontainers.org> mailing list (except [security issues](#security-issues)) with maintainers posting LGTM or REJECT.\nMaintainers MAY also explicitly not vote by posting ABSTAIN (which is useful to revert a previous vote).\nMaintainers MAY post multiple times (e.g. as they revise their position based on feedback), but only their final post counts in the tally.\nA proposed motion is adopted if two-thirds of votes cast, a quorum having voted, are in favor of the release.\n\nVoting SHOULD remain open for a week to collect feedback from the wider community and allow the maintainers to digest the proposed motion.\nUnder exceptional conditions (e.g. non-major security fix releases) proposals which reach quorum with unanimous support MAY be adopted earlier.\n\nA maintainer MAY choose to reply with REJECT.\nA maintainer posting a REJECT MUST include a list of concerns or links to written documentation for those concerns (e.g. GitHub issues or mailing-list threads).\nThe maintainers SHOULD try to resolve the concerns and wait for the rejecting maintainer to change their opinion to LGTM.\nHowever, a motion MAY be adopted with REJECTs, as outlined in the previous paragraphs.\n\n## Quorum\n\nA quorum is established when at least two-thirds of maintainers have voted.\n\nFor projects that are not specifications, a [motion to release](#proposing-a-motion) MAY be adopted if the tally is at least three LGTMs and no REJECTs, even if three votes does not meet the usual two-thirds quorum.\n\n## Security issues\n\nMotions with sensitive security implications MUST be proposed on the <security@opencontainers.org> mailing list instead of <dev@opencontainers.org>, but should otherwise follow the standard [proposal](#proposing-a-motion) process.\nThe <security@opencontainers.org> mailing list includes all members of the TOB.\nThe TOB will contact the project maintainers and provide a channel for discussing and voting on the motion, but voting will otherwise follow the standard [voting](#voting) and [quorum](#quorum) rules.\nThe TOB and project maintainers will work together to notify affected parties before making an adopted motion public.\n\n## Amendments\n\nThe [project governance](#project-governance) rules and procedures MAY be amended or replaced using the procedures themselves.\nThe MAINTAINERS of this project governance document is the total set of MAINTAINERS from all Open Containers projects (runC, runtime-spec, and image-spec).\n\n## Subject templates\n\nMaintainers are busy and get lots of email.\nTo make project proposals recognizable, proposed motions SHOULD use the following subject templates.\n\n### Proposing a motion template\n\n> [{project} VOTE]: {motion description} (closes {end of voting window})\n\nFor example:\n\n> [image-spec VOTE]: Tag 0647920 as 1.0.0-rc (closes 2016-06-03 20:00 UTC)\n\n### Tallying results template\n\nAfter voting closes, a maintainer SHOULD post a tally to the motion thread with a subject template like:\n\n> [{project} {status}]: {motion description} (+{LGTMs} -{REJECTs} #{ABSTAINs})\n\nWhere `{status}` is either `adopted` or `rejected`.\nFor example:\n\n> [image-spec adopted]: Tag 0647920 as 1.0.0-rc (+6 -0 #3)\n\n[charter]: https://github.com/opencontainers/tob/blob/main/CHARTER.md\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 1.7890625,
          "content": "# Hacking Guide\n\n## Overview\n\nThis guide contains instructions for building artifacts contained in this repository.\n\n### Go\n\nThis spec includes several Go packages, and a command line tool considered to be a reference implementation of the OCI image specification.\n\nPrerequisites:\n\n- Go - latest version is recommended, see the [go.mod](go.mod) file for the minimum requirement\n- make\n\nThe following make targets are relevant for any work involving the Go packages.\n\n### Linting\n\nThe included Go source code is being examined for any linting violations not included in the standard Go compiler.\nLinting is done using [golangci-lint][golangci-lint].\n\nInvocation:\n\n```shell\nmake lint\n```\n\n### Tests\n\nThis target executes all Go based tests.\n\nInvocation:\n\n```shell\nmake test\nmake validate-examples\n```\n\n### JSON schema formatting\n\nThis target auto-formats all JSON files in the `schema` directory using the `jq` tool.\n\nPrerequisites:\n\n- [jq][jq] >=1.5\n\nInvocation:\n\n```shell\nmake fmt\n```\n\n### OCI image specification PDF/HTML documentation files\n\nThis target generates a PDF/HTML version of the OCI image specification.\n\nPrerequisites:\n\n- [Docker][docker]\n\nInvocation:\n\n```shell\nmake docs\n```\n\n### License header check\n\nThis target checks if the source code includes necessary headers.\n\nInvocation:\n\n```shell\nmake check-license\n```\n\n### Clean build artifacts\n\nThis target cleans all generated/compiled artifacts.\n\nInvocation:\n\n```shell\nmake clean\n```\n\n### Create PNG images from dot files\n\nThis target generates PNG image files from DOT source files in the `img` directory.\n\nPrerequisites:\n\n- [graphviz][graphviz]\n\nInvocation:\n\n```shell\nmake img/media-types.png\n```\n\n[docker]: https://www.docker.com/\n[golangci-lint]: https://github.com/golangci/golangci-lint\n[graphviz]: https://www.graphviz.org/\n[jq]: https://stedolan.github.io/jq/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5146484375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2016 The Linux Foundation.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.2802734375,
          "content": "Brandon Mitchell <git@bmitch.net> (@sudo-bmitch)\nJon Johnson <jon.johnson@chainguard.dev> (@jonjohnsonjr)\nSajay Antony <sajaya@microsoft.com> (@sajayantony)\nStephen Day <stevvooe@gmail.com> (@stevvooe)\nTianon Gravi <admwiggin@gmail.com> (@tianon)\nAleksa Sarai <asarai@suse.de> (@cyphar)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.447265625,
          "content": "EPOCH_TEST_COMMIT ?= v0.2.0\n\nDOCKER ?= $(shell command -v docker 2>/dev/null)\nPANDOC ?= $(shell command -v pandoc 2>/dev/null)\n\nGOPATH:=$(shell go env GOPATH)\n\nOUTPUT_DIRNAME\t?= output\nDOC_FILENAME\t?= oci-image-spec\n\nPANDOC_CONTAINER ?= ghcr.io/opencontainers/pandoc:2.9.2.1-8.fc33.x86_64@sha256:5d81ff930a043295a557be8b003ece2a33d14e91b28c50d368413b83372f8d28\nifeq \"$(strip $(PANDOC))\" ''\n\tifneq \"$(strip $(DOCKER))\" ''\n\t\tPANDOC = $(DOCKER) run \\\n\t\t\t--rm \\\n\t\t\t-v $(shell pwd)/:/input/:ro \\\n\t\t\t-v $(shell pwd)/$(OUTPUT_DIRNAME)/:/$(OUTPUT_DIRNAME)/ \\\n\t\t\t-u $(shell id -u) \\\n\t\t\t--workdir /input \\\n\t\t\t$(PANDOC_CONTAINER)\n\t\tPANDOC_SRC := /input/\n\t\tPANDOC_DST := /\n\tendif\nendif\n\n# These docs are in an order that determines how they show up in the PDF/HTML docs.\nDOC_FILES := \\\n\tspec.md \\\n\tmedia-types.md \\\n\tdescriptor.md \\\n\timage-layout.md \\\n\tmanifest.md \\\n\timage-index.md \\\n\tlayer.md \\\n\tconfig.md \\\n\tannotations.md \\\n\tconversion.md \\\n\tconsiderations.md \\\n\timplementations.md\n\nFIGURE_FILES := \\\n\timg/media-types.png\n\nMARKDOWN_LINT_VER?=v0.8.1\n\nTOOLS := gitvalidation\n\ndefault: check-license lint test\n\n.PHONY: fmt\nfmt: ## format the json with indentation\n\tfor i in schema/*.json ; do jq --indent 2 -M . \"$${i}\" > xx && cat xx > \"$${i}\" && rm xx ; done\n\n.PHONY: docs\ndocs: $(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf $(OUTPUT_DIRNAME)/$(DOC_FILENAME).html ## generate a PDF/HTML version of the OCI image specification\n\nifeq \"$(strip $(PANDOC))\" ''\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf: $(DOC_FILES) $(FIGURE_FILES)\n\t$(error cannot build $@ without either pandoc or docker)\nelse\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf: $(DOC_FILES) $(FIGURE_FILES)\n\t@mkdir -p $(OUTPUT_DIRNAME)/ && \\\n\t$(PANDOC) -f gfm -t latex --pdf-engine=xelatex -V geometry:margin=0.5in,bottom=0.8in -V block-headings -o $(PANDOC_DST)$@ $(patsubst %,$(PANDOC_SRC)%,$(DOC_FILES))\n\tls -sh $(realpath $@)\n\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).html: header.html $(DOC_FILES) $(FIGURE_FILES)\n\t@mkdir -p $(OUTPUT_DIRNAME)/ && \\\n\tcp -ap img/ $(shell pwd)/$(OUTPUT_DIRNAME)/&& \\\n\t$(PANDOC) -f gfm -t html5 -H $(PANDOC_SRC)header.html --standalone -o $(PANDOC_DST)$@ $(patsubst %,$(PANDOC_SRC)%,$(DOC_FILES))\n\tls -sh $(realpath $@)\nendif\n\nheader.html: .tool/genheader.go specs-go/version.go\n\tgo run .tool/genheader.go > $@\n\n.PHONY: validate-examples\nvalidate-examples: schema/schema.go ## validate examples in the specification markdown files\n\tgo test -run TestValidate ./schema\n\n.PHONY: check-license\ncheck-license: ## check license headers in source files\n\t@echo \"checking license headers\"\n\t@./.tool/check-license\n\n.PHONY: lint\n\n.PHONY: lint\nlint: lint-go lint-md ## Run all linters\n\n.PHONY: lint-go\nlint-go: .install.lint ## lint check of Go files using golangci-lint\n\t@echo \"checking Go lint\"\n\t@GO111MODULE=on $(GOPATH)/bin/golangci-lint run\n\n.PHONY: lint-md\nlint-md: ## Run linting for markdown\n\tdocker run --rm -v \"$(PWD):/workdir:ro\" docker.io/davidanson/markdownlint-cli2:$(MARKDOWN_LINT_VER) \\\n\t  \"**/*.md\" \"#vendor\"\n\n.PHONY: test\ntest: ## run the unit tests\n\tgo test -race -cover $(shell go list ./... | grep -v /vendor/)\n\nimg/%.png: img/%.dot ## generate PNG from dot file\n\tdot -Tpng $^ > $@\n\n# When this is running in GitHub, it will only check the commit range\n.PHONY: .gitvalidation\n.gitvalidation:\n\t@which git-validation > /dev/null 2>/dev/null || (echo \"ERROR: git-validation not found. Consider 'make install.tools' target\" && false)\nifdef GITHUB_SHA\n\t$(GOPATH)/bin/git-validation -q -run DCO,short-subject,dangling-whitespace -range $(GITHUB_SHA)..HEAD\nelse\n\t$(GOPATH)/bin/git-validation -v -run DCO,short-subject,dangling-whitespace -range $(EPOCH_TEST_COMMIT)..HEAD\nendif\n\n.PHONY: .install.tools\ninstall.tools: $(TOOLS:%=.install.%)\n\n.PHONY: .install.lint\n.install.lint:\n\tcase \"$$(go env GOVERSION)\" in \\\n\tgo1.18.*)\tgo install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.3;; \\\n\tgo1.19.*)\tgo install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.1;; \\\n\tgo1.20.*)\tgo install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2;; \\\n\tgo1.21.*)\tgo install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.59.1;; \\\n\t*) go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest;; \\\n\tesac\n\n.PHONY: .install.gitvalidation\n.install.gitvalidation:\n\tgo install github.com/vbatts/git-validation@latest\n\n.PHONY: clean\nclean: ## clean all generated and compiled artifacts\n\trm -rf *~ $(OUTPUT_DIRNAME) header.html\n\n.PHONY: help\nhelp: # Display help\n\t@awk -F ':|##' '/^[^\\t].+?:.*?##/ { printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$NF }' $(MAKEFILE_LIST)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1826171875,
          "content": "# OCI Image Format Specification\n\n![GitHub Actions for Docs and Linting](https://img.shields.io/github/actions/workflow/status/opencontainers/image-spec/docs-and-linting.yml?branch=main&label=GHA%20docs%20and%20linting)\n![License](https://img.shields.io/github/license/opencontainers/image-spec)\n[![Go Reference](https://pkg.go.dev/badge/github.com/opencontainers/image-spec.svg)](https://pkg.go.dev/github.com/opencontainers/image-spec)\n\nThe OCI Image Format project creates and maintains the software shipping container image format spec (OCI Image Format).\n\n**[The specification can be found here](spec.md).**\n\nThis repository also provides [Go types](specs-go), [intra-blob validation tooling, and JSON Schema](schema).\nThe Go types and validation should be compatible with the current Go release; earlier Go releases are not supported.\n\nAdditional documentation about how this group operates:\n\n- [Code of Conduct][code-of-conduct]\n- [Roadmap](#roadmap)\n- [Releases](RELEASES.md)\n\n## Running an OCI Image\n\nThe OCI Image Format partner project is the [OCI Runtime Spec project](https://github.com/opencontainers/runtime-spec).\nThe Runtime Specification outlines how to run a \"[filesystem bundle](https://github.com/opencontainers/runtime-spec/blob/main/bundle.md)\" that is unpacked on disk.\nAt a high-level an OCI implementation would download an OCI Image then unpack that image into an OCI Runtime filesystem bundle.\nAt this point the OCI Runtime Bundle would be run by an OCI Runtime.\n\nThis entire workflow supports the UX that users have come to expect from container engines like Docker and rkt: primarily, the ability to run an image with no additional arguments:\n\n- docker run example.com/org/app:v1.0.0\n- rkt run example.com/org/app,version=v1.0.0\n\nTo support this UX the OCI Image Format contains sufficient information to launch the application on the target platform (e.g. command, arguments, environment variables, etc).\n\n## Distributing an OCI Image\n\nThe [OCI Distribution Spec Project](https://github.com/opencontainers/distribution-spec/) defines an API protocol to facilitate and standardize the distribution of content.\nThis API includes support for pushing and pulling OCI images to an OCI conformant registry.\n\n## FAQ\n\n**Q: What happens to AppC or Docker Image Formats?**\n\nA: Existing formats can continue to be a proving ground for technologies, as needed.\nThe OCI Image Format project strives to provide a dependable open specification that can be shared between different tools and be evolved for years or decades of compatibility; as the deb and rpm format have.\n\nFind more [FAQ on the OCI site](https://www.opencontainers.org/faq).\n\n## Roadmap\n\nThe [GitHub milestones](https://github.com/opencontainers/image-spec/milestones) lay out the path to the future improvements.\n\n## Contributing\n\nDevelopment happens on GitHub for the spec.\nIssues are used for bugs and actionable items and longer discussions can happen on the [mailing list](#mailing-list).\n\nThe specification and code is licensed under the Apache 2.0 license found in the `LICENSE` file of this repository.\n\n### Discuss your design\n\nThe project welcomes submissions, but please let everyone know what you are working on.\n\nBefore undertaking a nontrivial change to this specification, send mail to the [mailing list](#mailing-list) to discuss what you plan to do.\nThis gives everyone a chance to validate the design, helps prevent duplication of effort, and ensures that the idea fits.\nIt also guarantees that the design is sound before code is written; a GitHub pull-request is not the place for high-level discussions.\n\nTypos and grammatical errors can go straight to a pull-request.\nWhen in doubt, start on the [mailing-list](#mailing-list).\n\n### Meetings\n\nPlease see the [OCI org repository README](https://github.com/opencontainers/org#meetings) for the most up-to-date information on OCI contributor and maintainer meeting schedules.\nYou can also find links to meeting agendas and minutes for all prior meetings.\n\n### Mailing List\n\nYou can subscribe and join the mailing list on [Google Groups](https://groups.google.com/a/opencontainers.org/forum/#!forum/dev).\n\n### Markdown style\n\nTo keep consistency throughout the Markdown files in the Open Container spec all files should be formatted one sentence per line.\nThis fixes two things: it makes diffing easier with git and it resolves fights about line wrapping length.\nFor example, this paragraph will span three lines in the Markdown source.\n\n### Git commit\n\n#### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch, which certifies that you wrote it or otherwise have the right to pass it on as an open-source patch.\nThe rules are pretty simple: if you can certify the below (from [developercertificate.org](https://developercertificate.org/)):\n\n```text\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nthen you just add a line to every git commit message:\n\n```text\nSigned-off-by: Joe Smith <joe@gmail.com>\n```\n\nusing your real name (sorry, no pseudonyms or anonymous contributions.)\n\nYou can add the sign off when creating the git commit via `git commit -s`.\n\n### Commit Style\n\nSimple house-keeping for clean git history.\nRead more on [How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/) or the Discussion section of [`git-commit(1)`](https://git-scm.com/docs/git-commit).\n\n1. Separate the subject from body with a blank line\n2. Limit the subject line to 50 characters\n3. Capitalize the subject line\n4. Do not end the subject line with a period\n5. Use the imperative mood in the subject line\n6. Wrap the body at 72 characters\n7. Use the body to explain what and why vs. how\n   - If there was important/useful/essential conversation or information, copy or include a reference\n8. When possible, one keyword to scope the change in the subject (i.e. \"README: ...\", \"runtime: ...\")\n\n[code-of-conduct]: https://github.com/opencontainers/org/blob/master/CODE_OF_CONDUCT.md\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 6.2724609375,
          "content": "# Releases\n\nThe release process hopes to encourage early, consistent consensus-building during project development.\nThe mechanisms used are regular community communication on the mailing list about progress, scheduled meetings for issue resolution and release triage, and regularly paced and communicated releases.\nReleases are proposed and adopted or rejected using the usual [project governance](GOVERNANCE.md) rules and procedures.\n\nAn anti-pattern that we want to avoid is heavy development or discussions \"late cycle\" around major releases.\nWe want to build a community that is involved and communicates consistently through all releases instead of relying on \"silent periods\" as a judge of stability.\n\n## Parallel releases\n\nA single project MAY consider several motions to release in parallel.\nHowever each motion to release after the initial 0.1.0 MUST be based on a previous release that has already landed.\n\nFor example, runtime-spec maintainers may propose a v1.0.0-rc2 on the 1st of the month and a v0.9.1 bugfix on the 2nd of the month.\nThey may not propose a v1.0.0-rc3 until the v1.0.0-rc2 is accepted (on the 7th if the vote initiated on the 1st passes).\n\n## Specifications\n\nThe OCI maintains three categories of projects: specifications, applications, and conformance-testing tools.\nHowever, specification releases have special restrictions in the [OCI charter][charter]:\n\n- They are the target of backwards compatibility (ยง7.g), and\n- They are subject to the OFWa patent grant (ยง8.d and e).\n\nTo avoid unfortunate side effects (onerous backwards compatibility requirements or Member resignations), the following additional procedures apply to specification releases:\n\n### Planning a release\n\nEvery OCI specification project SHOULD hold meetings that involve maintainers reviewing pull requests, debating outstanding issues, and planning releases.\nThis meeting MUST be advertised on the project README and MAY happen on a phone call, video conference, or on IRC.\nMaintainers MUST send updates to the <dev@opencontainers.org> with results of these meetings.\n\nBefore the specification reaches v1.0.0, the meetings SHOULD be weekly.\nOnce a specification has reached v1.0.0, the maintainers may alter the cadence, but a meeting MUST be held within four weeks of the previous meeting.\n\nThe release plans, corresponding milestones and estimated due dates MUST be published on GitHub (e.g. <https://github.com/opencontainers/image-spec/milestones>).\nGitHub milestones and issues are only used for community organization and all releases MUST follow the [project governance](GOVERNANCE.md) rules and procedures.\n\n### Timelines\n\nSpecifications have a variety of different timelines in their lifecycle.\n\n- Pre-v1.0.0 specifications SHOULD release on a monthly cadence to garner feedback.\n- Major specification releases MUST release at least three release candidates spaced a minimum of one week apart.\n    This means a major release like a v1.0.0 or v2.0.0 release will take 1 month at minimum: one week for rc1, one week for rc2, one week for rc3, and one week for the major release itself.\n    Maintainers SHOULD strive to make zero breaking changes during this cycle of release candidates and SHOULD restart the three-candidate count when a breaking change is introduced.\n    For example if a breaking change is introduced in v1.0.0-rc2 then the series would end with v1.0.0-rc4 and v1.0.0.\n- Minor and patch releases SHOULD be made on an as-needed basis.\n\n## Checklist\n\nReleases usually follow a few steps:\n\n- [ ] prepare a pull-request for the release\n  - [ ] generate a change log:\n    - [ ] `git log --oneline --no-merges --decorate --name-status v1.0.1..HEAD | vim -`\n    - [ ] `:% s/(pr\\/\\(\\d*\\))\\(.*\\)/\\2 (#\\1)/` to move the PR to the end of line and match previous formatting\n    - [ ] review `(^M|^A|^D)` for impact of the commit\n    - [ ] group commits to `Additions:`, `Minor fixes and documentation:`, `Breaking changes:`\n    - [ ] delete the `(^M|^A|^D)` lines, `:%!grep -vE '(^M|^A|^D)'`\n    - [ ] merge multi-commit PRs (so each line has a `(#num)` suffix)\n    - [ ] drop hash and indent, `:'<,'> s/^\\w*  /^I* /`\n  - [ ] a commit for the release:\n    - [ ] bump `./specs-go/version.go` to next version and empty the `VersionDev` variable\n    - [ ] run `.tool/pin-release.sh` to pin the references to other specs\n  - [ ] a commit to revert the main branch for development:\n    - [ ] `git revert -n HEAD`\n    - [ ] bump `./specs-go/version.go` to next version and set the `VersionDev` variable to `+dev`\n- [ ] send email to <dev@opencontainers.org>\n  - [ ] copy the exact commit hash for bumping the version from the pull-request (since master always stays as \"+dev\")\n  - [ ] count the PRs since last release (that this version is tracking, in the cases of multiple branching), like `git log --pretty=oneline --no-merges --decorate $priorTag..$versionBumpCommit  | grep \\(pr\\/ | wc -l`\n  - [ ] get the date for a week from now, like `TZ=UTC date --date='next week'`\n  - [ ] OPTIONAL find a cute animal gif to attach to the email, and subsequently the release description\n  - [ ] subject line like `[image-spec VOTE] tag $versionBumpCommit as $version (closes $dateWeekFromNowUTC)`\n  - [ ] email body like\n\n```text\nHey everyone,\n\nThere have been $numPRs PRs merged since $priorTag release (https://github.com/opencontainers/image-spec/compare/$priorTag...$versionBumpCommit).\n\n$linkToPullRequest\n\nPlease respond LGTM or REJECT (with reasoning).\n\n$sig\n```\n\n- [ ] edit/update the pull-request to link to the VOTE thread, from <https://groups.google.com/a/opencontainers.org/forum/#!forum/dev>\n- [ ] a week later, if the vote passes, merge the PR\n  - [ ] `git tag -s $version $versionBumpCommit`\n  - [ ] `git push --tags`\n- [ ] produce release documents\n  - [ ] git checkout the release tag, like `git checkout $version`\n  - [ ] `make docs`\n  - [ ] rename the output PDF and HTML file to include version, like `mv output/oci-image-spec.pdf output/oci-image-spec-$version.pdf``\n  - [ ] attach these docs to the release on <https://github.com/opencontainers/image-spec/releases>\n  - [ ] link to the the VOTE thread and include the passing vote count\n  - [ ] link to the pull request that merged the release\n- [ ] add release notes to the website <https://github.com/opencontainers/opencontainers.org/tree/main/content/release-notices>\n\n[charter]: https://github.com/opencontainers/tob/blob/main/CHARTER.md\n"
        },
        {
          "name": "annotations.md",
          "type": "blob",
          "size": 5.890625,
          "content": "# Annotations\n\nSeveral components of the specification, like [Image Manifests](manifest.md) and [Descriptors](descriptor.md), feature an optional annotations property, whose format is common and defined in this section.\n\nThis property contains arbitrary metadata.\n\n## Rules\n\n- Annotations MUST be a key-value map where both the key and value MUST be strings.\n- While the value MUST be present, it MAY be an empty string.\n- Keys MUST be unique within this map, and best practice is to namespace the keys.\n- Keys SHOULD be named using a reverse domain notation - e.g. `com.example.myKey`.\n- The prefix `org.opencontainers` is reserved for keys defined in Open Container Initiative (OCI) specifications and MUST NOT be used by other specifications and extensions.\n- Keys using the `org.opencontainers.image` namespace are reserved for use in the OCI Image Specification and MUST NOT be used by other specifications and extensions, including other OCI specifications.\n- If there are no annotations then this property MUST either be absent or be an empty map.\n- Consumers MUST NOT generate an error if they encounter an unknown annotation key.\n\n## Pre-Defined Annotation Keys\n\nThis specification defines the following annotation keys, intended for but not limited to [image index](image-index.md), image [manifest](manifest.md), and [descriptor](descriptor.md) authors.\n\n- **org.opencontainers.image.created** date and time on which the image was built, conforming to [RFC 3339][rfc3339].\n- **org.opencontainers.image.authors** contact details of the people or organization responsible for the image (freeform string)\n- **org.opencontainers.image.url** URL to find more information on the image (string)\n- **org.opencontainers.image.documentation** URL to get documentation on the image (string)\n- **org.opencontainers.image.source** URL to get source code for building the image (string)\n- **org.opencontainers.image.version** version of the packaged software\n  - The version MAY match a label or tag in the source code repository\n  - version MAY be [Semantic versioning-compatible](https://semver.org/)\n- **org.opencontainers.image.revision** Source control revision identifier for the packaged software.\n- **org.opencontainers.image.vendor** Name of the distributing entity, organization or individual.\n- **org.opencontainers.image.licenses** License(s) under which contained software is distributed as an [SPDX License Expression][spdx-license-expression].\n- **org.opencontainers.image.ref.name** Name of the reference for a target (string).\n  - SHOULD only be considered valid when on descriptors on `index.json` within [image layout](image-layout.md).\n  - Character set of the value SHOULD conform to alphanum of `A-Za-z0-9` and separator set of `-._:@/+`\n  - A valid reference matches the following [grammar](considerations.md#ebnf):\n\n    ```ebnf\n    ref       ::= component (\"/\" component)*\n    component ::= alphanum (separator alphanum)*\n    alphanum  ::= [A-Za-z0-9]+\n    separator ::= [-._:@+] | \"--\"\n    ```\n\n- **org.opencontainers.image.title** Human-readable title of the image (string)\n- **org.opencontainers.image.description** Human-readable description of the software packaged in the image (string)\n- **org.opencontainers.image.base.digest** [Digest](descriptor.md#digests) of the image this image is based on (string)\n  - This SHOULD be the immediate image sharing zero-indexed layers with the image, such as from a Dockerfile `FROM` statement.\n  - This SHOULD NOT reference any other images used to generate the contents of the image (e.g., multi-stage Dockerfile builds).\n- **org.opencontainers.image.base.name** Image reference of the image this image is based on (string)\n  - This SHOULD be image references in the format defined by [distribution/distribution][distribution-reference].\n  - This SHOULD be a fully qualified reference name, without any assumed default registry. (e.g., `registry.example.com/my-org/my-image:tag` instead of `my-org/my-image:tag`).\n  - This SHOULD be the immediate image sharing zero-indexed layers with the image, such as from a Dockerfile `FROM` statement.\n  - This SHOULD NOT reference any other images used to generate the contents of the image (e.g., multi-stage Dockerfile builds).\n  - If the `image.base.name` annotation is specified, the `image.base.digest` annotation SHOULD be the digest of the manifest referenced by the `image.ref.name` annotation.\n\n## Back-compatibility with Label Schema\n\n[Label Schema][label-schema] defined a number of conventional labels for container images, and these are now superseded by annotations with keys starting **org.opencontainers.image**.\n\nWhile users are encouraged to use the **org.opencontainers.image** keys, tools MAY choose to support compatible annotations using the **org.label-schema** prefix as follows.\n\n| `org.opencontainers.image` prefix | `org.label-schema` prefix | Compatibility notes |\n|---------------------------|-------------------------|---------------------|\n| `created` | `build-date` | Compatible |\n| `url` | `url` | Compatible |\n| `source` | `vcs-url` | Compatible |\n| `version` | `version` | Compatible |\n| `revision` | `vcs-ref` | Compatible |\n| `vendor` | `vendor` | Compatible |\n| `title` | `name` | Compatible |\n| `description` | `description` | Compatible |\n| `documentation` | `usage` | Value is compatible if the documentation is located by a URL |\n| `authors` |  | No equivalent in Label Schema |\n| `licenses` | | No equivalent in Label Schema |\n| `ref.name` | | No equivalent in Label Schema |\n| | `schema-version`| No equivalent in the OCI Image Spec |\n| | `docker.*`, `rkt.*` | No equivalent in the OCI Image Spec |\n\n[distribution-reference]: https://github.com/distribution/distribution/blob/d0deff9cd6c2b8c82c6f3d1c713af51df099d07b/reference/reference.go\n[label-schema]: https://github.com/label-schema/label-schema.org/blob/gh-pages/rc1.md\n[rfc3339]:     https://tools.ietf.org/html/rfc3339#section-5.6\n[spdx-license-expression]: https://spdx.github.io/spdx-spec/v2.3/SPDX-license-expressions/\n"
        },
        {
          "name": "artifacts-guidance.md",
          "type": "blob",
          "size": 0.5888671875,
          "content": "# Guidance for Artifacts Authors\n\nContent other than OCI container images MAY be packaged using the image manifest.\nWhen this is done, the `config.mediaType` value should not be a known OCI image config [media type](media-types.md).\nHistorically, due to registry limitations, some tools have created non-OCI conformant artifacts using the `application/vnd.oci.image.config.v1+json` value for `config.mediaType` and values specific to the artifact in `layer[*].mediaType`.\nImplementation details and examples are provided in the [image manifest specification](manifest.md#guidelines-for-artifact-usage).\n"
        },
        {
          "name": "config.md",
          "type": "blob",
          "size": 15.1142578125,
          "content": "# OCI Image Configuration\n\nAn OCI _Image_ is an ordered collection of root filesystem changes and the corresponding execution parameters for use within a container runtime.\nThis specification outlines the JSON format describing images for use with a container runtime and execution tool and its relationship to filesystem changesets, described in [Layers](layer.md).\n\nThis section defines the `application/vnd.oci.image.config.v1+json` [media type](media-types.md).\n\n## Terminology\n\nThis specification uses the following terms:\n\n### [Layer](layer.md)\n\n- Image filesystems are composed of _layers_.\n- Each layer represents a set of filesystem changes in a tar-based [layer format](layer.md), recording files to be added, changed, or deleted relative to its parent layer.\n- Layers do not have configuration metadata such as environment variables or default arguments - these are properties of the image as a whole rather than any particular layer.\n- Using a layer-based or union filesystem such as AUFS, or by computing the diff from filesystem snapshots, the filesystem changeset can be used to present a series of image layers as if they were one cohesive filesystem.\n\n### Image JSON\n\n- Each image has an associated JSON structure which describes some basic information about the image such as date created, author, as well as execution/runtime configuration like its entrypoint, default arguments, networking, and volumes.\n- The JSON structure also references a cryptographic hash of each layer used by the image, and provides history information for those layers.\n- This JSON is considered to be immutable, because changing it would change the computed [ImageID](#imageid).\n- Changing it means creating a new derived image, instead of changing the existing image.\n\n### Layer DiffID\n\nA layer DiffID is the digest over the layer's uncompressed tar archive and serialized in the descriptor digest format, e.g., `sha256:a9561eb1b190625c9adb5a9513e72c4dedafc1cb2d4c5236c9a6957ec7dfd5a9`.\nLayers SHOULD be packed and unpacked reproducibly to avoid changing the layer DiffID, for example by using [tar-split][] to save the tar headers.\n\nNOTE: Do not confuse DiffIDs with [layer digests](manifest.md#image-manifest-property-descriptions), often referenced in the manifest, which are digests over compressed or uncompressed content.\n\n### Layer ChainID\n\nFor convenience, it is sometimes useful to refer to a stack of layers with a single identifier.\nWhile a layer's `DiffID` identifies a single changeset, the `ChainID` identifies the subsequent application of those changesets.\nThis ensures that we have handles referring to both the layer itself, as well as the result of the application of a series of changesets.\nUse in combination with `rootfs.diff_ids` while applying layers to a root filesystem to uniquely and safely identify the result.\n\n#### Definition\n\nThe `ChainID` of an applied set of layers is defined with the following recursion:\n\n```text\nChainID(Lโ) =  DiffID(Lโ)\nChainID(Lโ|...|Lโโโ|Lโ) = Digest(ChainID(Lโ|...|Lโโโ) + \" \" + DiffID(Lโ))\n```\n\nFor this, we define the binary `|` operation to be the result of applying the right operand to the left operand.\nFor example, given base layer `A` and a changeset `B`, we refer to the result of applying `B` to `A` as `A|B`.\n\nAbove, we define the `ChainID` for a single layer (`Lโ`) as equivalent to the `DiffID` for that layer.\nOtherwise, the `ChainID` for a set of applied layers (`Lโ|...|Lโโโ|Lโ`) is defined as the recursion `Digest(ChainID(Lโ|...|Lโโโ) + \" \" + DiffID(Lโ))`.\n\n#### Explanation\n\nLet's say we have layers A, B, C, ordered from bottom to top, where A is the base and C is the top.\nDefining `|` as a binary application operator, the root filesystem may be `A|B|C`.\nWhile it is implied that `C` is only useful when applied to `A|B`, the identifier `C` is insufficient to identify this result, as we'd have the equality `C = A|B|C`, which isn't true.\n\nThe main issue is when we have two definitions of `C`, `C = C` and `C = A|B|C`.\nIf this is true (with some handwaving), `C = x|C` where `x = any application`.\nThis means that if an attacker can define `x`, relying on `C` provides no guarantee that the layers were applied in any order.\n\nThe `ChainID` addresses this problem by being defined as a compound hash.\n**We differentiate the changeset `C`, from the order-dependent application `A|B|C` by saying that the resulting rootfs is identified by ChainID(A|B|C), which can be calculated by `ImageConfig.rootfs`.**\n\nLet's expand the definition of `ChainID(A|B|C)` to explore its internal structure:\n\n```text\nChainID(A) = DiffID(A)\nChainID(A|B) = Digest(ChainID(A) + \" \" + DiffID(B))\nChainID(A|B|C) = Digest(ChainID(A|B) + \" \" + DiffID(C))\n```\n\nWe can replace each definition and reduce to a single equality:\n\n```text\nChainID(A|B|C) = Digest(Digest(DiffID(A) + \" \" + DiffID(B)) + \" \" + DiffID(C))\n```\n\nHopefully, the above is illustrative of the _actual_ contents of the `ChainID`.\nMost importantly, we can easily see that `ChainID(C) != ChainID(A|B|C)`, otherwise, `ChainID(C) = DiffID(C)`, which is the base case, could not be true.\n\n### ImageID\n\nEach image's ID is given by the SHA256 hash of its [configuration JSON](#image-json).\nIt is represented as a hexadecimal encoding of 256 bits, e.g., `sha256:a9561eb1b190625c9adb5a9513e72c4dedafc1cb2d4c5236c9a6957ec7dfd5a9`.\nSince the [configuration JSON](#image-json) that gets hashed references hashes of each layer in the image, this formulation of the ImageID makes images content-addressable.\n\n## Properties\n\nNote: Any OPTIONAL field MAY also be set to null, which is equivalent to being absent.\n\n- **created** _string_, OPTIONAL\n\n  An combined date and time at which the image was created, formatted as defined by [RFC 3339, section 5.6][rfc3339-s5.6].\n\n- **author** _string_, OPTIONAL\n\n  Gives the name and/or email address of the person or entity which created and is responsible for maintaining the image.\n\n- **architecture** _string_, REQUIRED\n\n  The CPU architecture which the binaries in this image are built to run on.\n  Configurations SHOULD use, and implementations SHOULD understand, values listed in the Go Language document for [`GOARCH`][go-environment].\n\n- **os** _string_, REQUIRED\n\n  The name of the operating system which the image is built to run on.\n  Configurations SHOULD use, and implementations SHOULD understand, values listed in the Go Language document for [`GOOS`][go-environment].\n\n- **os.version** _string_, OPTIONAL\n\n  This OPTIONAL property specifies the version of the operating system targeted by the referenced blob.\n  Implementations MAY refuse to use manifests where `os.version` is not known to work with the host OS version.\n  Valid values are implementation-defined. e.g. `10.0.14393.1066` on `windows`.\n\n- **os.features** _array of strings_, OPTIONAL\n\n  This OPTIONAL property specifies an array of strings, each specifying a mandatory OS feature.\n  When `os` is `windows`, image indexes SHOULD use, and implementations SHOULD understand the following values:\n\n  - `win32k`: image requires `win32k.sys` on the host (Note: `win32k.sys` is missing on Nano Server)\n\n- **variant** _string_, OPTIONAL\n\n  The variant of the specified CPU architecture.\n  Configurations SHOULD use, and implementations SHOULD understand, `variant` values listed in the [Platform Variants](image-index.md#platform-variants) table.\n\n- **config** _object_, OPTIONAL\n\n  The execution parameters which SHOULD be used as a base when running a container using the image.\n  This field can be `null`, in which case any execution parameters should be specified at creation of the container.\n\n  - **User** _string_, OPTIONAL\n\n    The username or UID which is a platform-specific structure that allows specific control over which user the process run as.\n    This acts as a default value to use when the value is not specified when creating a container.\n    For Linux based systems, all of the following are valid: `user`, `uid`, `user:group`, `uid:gid`, `uid:group`, `user:gid`.\n    If `group`/`gid` is not specified, the default group and supplementary groups of the given `user`/`uid` in `/etc/passwd` and `/etc/group` from the container are applied.\n    If `group`/`gid` is specified, supplementary groups from the container are ignored.\n\n  - **ExposedPorts** _object_, OPTIONAL\n\n    A set of ports to expose from a container running this image.\n    Its keys can be in the format of:\n`port/tcp`, `port/udp`, `port` with the default protocol being `tcp` if not specified.\n    These values act as defaults and are merged with any specified when creating a container.\n    **NOTE:** This JSON structure value is unusual because it is a direct JSON serialization of the Go type `map[string]struct{}` and is represented in JSON as an object mapping its keys to an empty object.\n\n  - **Env** _array of strings_, OPTIONAL\n\n    Entries are in the format of `VARNAME=VARVALUE`.\n    These values act as defaults and are merged with any specified when creating a container.\n\n  - **Entrypoint** _array of strings_, OPTIONAL\n\n    A list of arguments to use as the command to execute when the container starts.\n    These values act as defaults and may be replaced by an entrypoint specified when creating a container.\n\n  - **Cmd** _array of strings_, OPTIONAL\n\n    Default arguments to the entrypoint of the container.\n    These values act as defaults and may be replaced by any specified when creating a container.\n    If an `Entrypoint` value is not specified, then the first entry of the `Cmd` array SHOULD be interpreted as the executable to run.\n\n  - **Volumes** _object_, OPTIONAL\n\n    A set of directories describing where the process is likely to write data specific to a container instance.\n    **NOTE:** This JSON structure value is unusual because it is a direct JSON serialization of the Go type `map[string]struct{}` and is represented in JSON as an object mapping its keys to an empty object.\n\n  - **WorkingDir** _string_, OPTIONAL\n\n    Sets the current working directory of the entrypoint process in the container.\n    This value acts as a default and may be replaced by a working directory specified when creating a container.\n\n  - **Labels** _object_, OPTIONAL\n\n    The field contains arbitrary metadata for the container.\n    This property MUST use the [annotation rules](annotations.md#rules).\n\n  - **StopSignal** _string_, OPTIONAL\n\n    The field contains the system call signal that will be sent to the container to exit. The signal can be a signal name in the format `SIGNAME`, for instance `SIGKILL` or `SIGRTMIN+3`.\n\n  - **ArgsEscaped** _boolean_, OPTIONAL\n\n    `[Deprecated]` - This field is present only for legacy compatibility with Docker and should not be used by new image builders.\n    It is used by Docker for Windows images to indicate that the `Entrypoint` or `Cmd` or both, contains only a single element array, that is a pre-escaped, and combined into a single string `CommandLine`.\n    If `true` the value in `Entrypoint` or `Cmd` should be used as-is to avoid double escaping.\n    Note, the exact behavior of `ArgsEscaped` is complex and subject to implementation details in Moby project.\n\n  - **Memory** _integer_, OPTIONAL\n\n    This property is _reserved_ for use, to [maintain compatibility](media-types.md#compatibility-matrix).\n\n  - **MemorySwap** _integer_, OPTIONAL\n\n    This property is _reserved_ for use, to [maintain compatibility](media-types.md#compatibility-matrix).\n\n  - **CpuShares** _integer_, OPTIONAL\n\n    This property is _reserved_ for use, to [maintain compatibility](media-types.md#compatibility-matrix).\n\n  - **Healthcheck** _object_, OPTIONAL\n\n    This property is _reserved_ for use, to [maintain compatibility](media-types.md#compatibility-matrix).\n\n- **rootfs** _object_, REQUIRED\n\n   The rootfs key references the layer content addresses used by the image.\n   This makes the image config hash depend on the filesystem hash.\n\n  - **type** _string_, REQUIRED\n\n    MUST be set to `layers`.\n    Implementations MUST generate an error if they encounter a unknown value while verifying or unpacking an image.\n\n  - **diff_ids** _array of strings_, REQUIRED\n\n    An array of layer content hashes (`DiffIDs`), in order from first to last.\n\n- **history** _array of objects_, OPTIONAL\n\n  Describes the history of each layer.\n  The array is ordered from first to last.\n  The object has the following fields:\n\n  - **created** _string_, OPTIONAL\n\n    A combined date and time at which the layer was created, formatted as defined by [RFC 3339, section 5.6][rfc3339-s5.6].\n\n  - **author** _string_, OPTIONAL\n\n    The author of the build point.\n\n  - **created_by** _string_, OPTIONAL\n\n    The command which created the layer.\n\n  - **comment** _string_, OPTIONAL\n\n    A custom message set when creating the layer.\n\n  - **empty_layer** _boolean_, OPTIONAL\n\n    This field is used to mark if the history item created a filesystem diff.\n    It is set to true if this history item doesn't correspond to an actual layer in the rootfs section (for example, Dockerfile's [ENV](https://docs.docker.com/engine/reference/builder/#/env) command results in no change to the filesystem).\n\nAny extra fields in the Image JSON struct are considered implementation specific and MUST NOT generate an error by any implementations which are unable to interpret them.\n\nWhitespace is OPTIONAL and implementations MAY have compact JSON with no whitespace.\n\n## Example\n\nHere is an example image configuration JSON document:\n\n```json,title=Image%20JSON&mediatype=application/vnd.oci.image.config.v1%2Bjson\n{\n    \"created\": \"2015-10-31T22:22:56.015925234Z\",\n    \"author\": \"Alyssa P. Hacker <alyspdev@example.com>\",\n    \"architecture\": \"amd64\",\n    \"os\": \"linux\",\n    \"config\": {\n        \"User\": \"alice\",\n        \"ExposedPorts\": {\n            \"8080/tcp\": {}\n        },\n        \"Env\": [\n            \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n            \"FOO=oci_is_a\",\n            \"BAR=well_written_spec\"\n        ],\n        \"Entrypoint\": [\n            \"/bin/my-app-binary\"\n        ],\n        \"Cmd\": [\n            \"--foreground\",\n            \"--config\",\n            \"/etc/my-app.d/default.cfg\"\n        ],\n        \"Volumes\": {\n            \"/var/job-result-data\": {},\n            \"/var/log/my-app-logs\": {}\n        },\n        \"WorkingDir\": \"/home/alice\",\n        \"Labels\": {\n            \"com.example.project.git.url\": \"https://example.com/project.git\",\n            \"com.example.project.git.commit\": \"45a939b2999782a3f005621a8d0f29aa387e1d6b\"\n        }\n    },\n    \"rootfs\": {\n      \"diff_ids\": [\n        \"sha256:c6f988f4874bb0add23a778f753c65efe992244e148a1d2ec2a8b664fb66bbd1\",\n        \"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\"\n      ],\n      \"type\": \"layers\"\n    },\n    \"history\": [\n      {\n        \"created\": \"2015-10-31T22:22:54.690851953Z\",\n        \"created_by\": \"/bin/sh -c #(nop) ADD file:a3bc1e842b69636f9df5256c49c5374fb4eef1e281fe3f282c65fb853ee171c5 in /\"\n      },\n      {\n        \"created\": \"2015-10-31T22:22:55.613815829Z\",\n        \"created_by\": \"/bin/sh -c #(nop) CMD [\\\"sh\\\"]\",\n        \"empty_layer\": true\n      },\n      {\n        \"created\": \"2015-10-31T22:22:56.329850019Z\",\n        \"created_by\": \"/bin/sh -c apk add curl\"\n      }\n    ]\n}\n```\n\n[rfc3339-s5.6]: https://tools.ietf.org/html/rfc3339#section-5.6\n[go-environment]: https://golang.org/doc/install/source#environment\n[tar-split]: https://github.com/vbatts/tar-split\n"
        },
        {
          "name": "considerations.md",
          "type": "blob",
          "size": 5.9775390625,
          "content": "# Considerations\n\n## Extensibility\n\nImplementations storing or copying content MUST NOT modify or alter the content in a way that would change the digest of the content. Examples of these implementations include:\n\n- A [registry implementing the distribution specification][distribution-spec], including local registries, caching proxies\n- An application which copies content to disk or between registries\n\nImplementations processing content SHOULD NOT generate an error if they encounter an unknown property in a known media type. Examples of these implementations include:\n\n- A [runtime implementing the runtime specification][runtime-spec]\n- An implementation using OCI to retrieve and utilize artifacts, e.g.: a WASM runtime\n\n## Canonicalization\n\n- OCI Images are [content-addressable](https://en.wikipedia.org/wiki/Content-addressable_storage). See [descriptors](descriptor.md) for more.\n- One benefit of content-addressable storage is easy deduplication.\n- Many images might depend on a particular [layer](layer.md), but there will only be one blob in the [store](image-layout.md).\n- With a different serialization, that same semantic layer would have a different hash, and if both versions of the layer are referenced there will be two blobs with the same semantic content.\n- To allow efficient storage, implementations serializing content for blobs SHOULD use a canonical serialization.\n- This increases the chance that different implementations can push the same semantic content to the store without creating redundant blobs.\n\n### JSON\n\n[JSON][JSON] content SHOULD be serialized as [canonical JSON][canonical-json].\nOf the [OCI Image Format Specification media types](media-types.md), all the types ending in `+json` contain JSON content.\nImplementations:\n\n- [Go][Go]: [github.com/docker/go][docker-go], which claims to implement [canonical JSON][canonical-json] except for Unicode normalization.\n\n## EBNF\n\nFor field formats described in this specification, we use a limited subset of [Extended Backus-Naur Form][ebnf], similar to that used by the [XML specification][xmlebnf].\nGrammars present in the OCI specification are regular and can be converted to a single regular expressions.\nHowever, regular expressions are avoided to limit ambiguity between regular expression syntax.\nBy defining a subset of EBNF used here, the possibility of variation, misunderstanding or ambiguities from linking to a larger specification can be avoided.\n\nGrammars are made up of rules in the following form:\n\n```ebnf\nsymbol ::= expression\n```\n\nWe can say we have the production identified by symbol if the input is matched by the expression.\nWhitespace is completely ignored in rule definitions.\n\n### Expressions\n\nThe simplest expression is the literal, surrounded by quotes:\n\n```ebnf\nliteral ::= \"matchthis\"\n```\n\nThe above expression defines a symbol, \"literal\", that matches the exact input of \"matchthis\".\nCharacter classes are delineated by brackets (`[]`), describing either a set, range or multiple range of characters:\n\n```ebnf\nset := [abc]\nrange := [A-Z]\n```\n\nThe above symbol \"set\" would match one character of either \"a\", \"b\" or \"c\".\nThe symbol \"range\" would match any character, \"A\" to \"Z\", inclusive.\nCurrently, only matching for 7-bit ascii literals and character classes is defined, as that is all that is required by this specification.\nMultiple character ranges and explicit characters can be specified in a single character classes, as follows:\n\n```ebnf\nmultipleranges := [a-zA-Z=-]\n```\n\nThe above matches the characters in the range `A` to `Z`, `a` to `z` and the individual characters `-` and `=`.\n\nExpressions can be made up of one or more expressions, such that one must be followed by the other.\nThis is known as an implicit concatenation operator.\nFor example, to satisfy the following rule, both `A` and `B` must be matched to satisfy the rule:\n\n```ebnf\nsymbol ::= A B\n```\n\nEach expression must be matched once and only once, `A` followed by `B`.\nTo support the description of repetition and optional match criteria, the postfix operators `*` and `+` are defined.\n`*` indicates that the preceding expression can be matched zero or more times.\n`+` indicates that the preceding expression must be matched one or more times.\nThese appear in the following form:\n\n```ebnf\nzeroormore ::= expression*\noneormore ::= expression+\n```\n\nParentheses are used to group expressions into a larger expression:\n\n```ebnf\ngroup ::= (A B)\n```\n\nLike simpler expressions above, operators can be applied to groups, as well.\nTo allow for alternates, we also define the infix operator `|`.\n\n```ebnf\noneof ::= A | B\n```\n\nThe above indicates that the expression should match one of the expressions, `A` or `B`.\n\n### Precedence\n\nThe operator precedence is in the following order:\n\n- Terminals (literals and character classes)\n- Grouping `()`\n- Unary operators `+*`\n- Concatenation\n- Alternates `|`\n\nThe precedence can be better described using grouping to show equivalents.\nConcatenation has higher precedence than alternates, such `A B | C D` is equivalent to `(A B) | (C D)`.\nUnary operators have higher precedence than alternates and concatenation, such that `A+ | B+` is equivalent to `(A+) | (B+)`.\n\n### Examples\n\nThe following combines the previous definitions to match a simple, relative path name, describing the individual components:\n\n```ebnf\npath      ::= component (\"/\" component)*\ncomponent ::= [a-z]+\n```\n\nThe production \"component\" is one or more lowercase letters.\nA \"path\" is then at least one component, possibly followed by zero or more slash-component pairs.\nThe above can be converted into the following regular expression:\n\n```regex\n[a-z]+(?:/[a-z]+)*\n```\n\n[canonical-json]: https://wiki.laptop.org/go/Canonical_JSON\n[distribution-spec]: https://github.com/opencontainers/distribution-spec/blob/main/spec.md\n[docker-go]: https://github.com/docker/go/\n[ebnf]: https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form\n[Go]: https://golang.org/\n[JSON]: https://json.org/\n[runtime-spec]: https://github.com/opencontainers/runtime-spec/blob/main/spec.md\n[xmlebnf]: https://www.w3.org/TR/REC-xml/#sec-notation\n"
        },
        {
          "name": "conversion.md",
          "type": "blob",
          "size": 9.3974609375,
          "content": "# Conversion to OCI Runtime Configuration\n\nWhen extracting an OCI Image into an [OCI Runtime bundle][oci-runtime-bundle], two orthogonal components of the extraction are relevant:\n\n1. Extraction of the root filesystem from the set of [filesystem layers](layer.md).\n2. Conversion of the [image configuration blob](config.md) to an [OCI Runtime configuration blob][oci-runtime-config].\n\nThis section defines how to convert an `application/vnd.oci.image.config.v1+json` blob to an [OCI runtime configuration blob][oci-runtime-config] (the latter component of extraction).\nThe former component of extraction is defined [elsewhere](layer.md) and is orthogonal to configuration of a runtime bundle.\nThe values of runtime configuration properties not specified by this document are implementation-defined.\n\nA converter MUST rely on the OCI image configuration to build the OCI runtime configuration as described by this document; this will create the \"default generated runtime configuration\".\n\nThe \"default generated runtime configuration\" MAY be overridden or combined with externally provided inputs from the caller.\nIn addition, a converter MAY have its own implementation-defined defaults and extensions which MAY be combined with the \"default generated runtime configuration\".\nThe restrictions in this document refer only to combining implementation-defined defaults with the \"default generated runtime configuration\".\nExternally provided inputs are considered to be a modification of the `application/vnd.oci.image.config.v1+json` used as a source, and such modifications have no restrictions.\n\nFor example, externally provided inputs MAY cause an environment variable to be added, removed or changed.\nHowever an implementation-defined default SHOULD NOT result in an environment variable being removed or changed.\n\n## Verbatim Fields\n\nCertain image configuration fields have an identical counterpart in the runtime configuration.\nSome of these are purely annotation-based fields, and have been extracted into a [separate subsection](#annotation-fields).\nA compliant configuration converter MUST extract the following fields verbatim to the corresponding field in the generated runtime configuration:\n\n| Image Field         | Runtime Field   | Notes |\n| ------------------- | --------------- | ----- |\n| `Config.WorkingDir` | `process.cwd`   |       |\n| `Config.Env`        | `process.env`   | 1     |\n| `Config.Entrypoint` | `process.args`  | 2     |\n| `Config.Cmd`        | `process.args`  | 2     |\n\n1. The converter MAY add additional entries to `process.env` but it SHOULD NOT add entries that have variable names present in `Config.Env`.\n2. If both `Config.Entrypoint` and `Config.Cmd` are specified, the converter MUST append the value of `Config.Cmd` to the value of `Config.Entrypoint` and set `process.args` to that combined value.\n\n### Annotation Fields\n\nThese fields all affect the `annotations` of the runtime configuration, and are thus subject to [precedence](#annotations).\n\n| Image Field         | Runtime Field   | Notes |\n| ------------------- | --------------- | ----- |\n| `os`                | `annotations`   | 1,2   |\n| `architecture`      | `annotations`   | 1,3   |\n| `variant`           | `annotations`   | 1,4   |\n| `os.version`        | `annotations`   | 1,5   |\n| `os.features`       | `annotations`   | 1,6   |\n| `author`            | `annotations`   | 1,7   |\n| `created`           | `annotations`   | 1,8   |\n| `Config.Labels`     | `annotations`   |       |\n| `Config.StopSignal` | `annotations`   | 1,9   |\n\n1. If a user has explicitly specified this annotation with `Config.Labels`, then the value specified in this field takes lower [precedence](#annotations) and the converter MUST instead use the value from `Config.Labels`.\n2. The value of this field MUST be set as the value of `org.opencontainers.image.os` in `annotations`.\n3. The value of this field MUST be set as the value of `org.opencontainers.image.architecture` in `annotations`.\n4. The value of this field MUST be set as the value of `org.opencontainers.image.variant` in `annotations`.\n5. The value of this field MUST be set as the value of `org.opencontainers.image.os.version` in `annotations`.\n6. The value of this field MUST be set as the value of `org.opencontainers.image.os.features` in `annotations`.\n7. The value of this field MUST be set as the value of `org.opencontainers.image.author` in `annotations`.\n8. The value of this field MUST be set as the value of `org.opencontainers.image.created` in `annotations`.\n9. The value of this field MUST be set as the value of `org.opencontainers.image.stopSignal` in `annotations`.\n\n## Parsed Fields\n\nCertain image configuration fields have a counterpart that must first be translated.\nA compliant configuration converter SHOULD parse all of these fields and set the corresponding fields in the generated runtime configuration:\n\n| Image Field         | Runtime Field    |\n| ------------------- | ---------------  |\n| `Config.User`       | `process.user.*` |\n\nThe method of parsing the above image fields are described in the following sections.\n\n### `Config.User`\n\nIf the values of [`user` or `group`](config.md#properties) in `Config.User` are numeric (`uid` or `gid`) then the values MUST be copied verbatim to `process.user.uid` and `process.user.gid` respectively.\nIf the values of [`user` or `group`](config.md#properties) in `Config.User` are not numeric (`user` or `group`) then a converter SHOULD resolve the user information using a method appropriate for the container's context.\nFor Unix-like systems, this MAY involve resolution through NSS or parsing `/etc/passwd` from the extracted container's root filesystem to determine the values of `process.user.uid` and `process.user.gid`.\n\nIn addition, a converter SHOULD set the value of `process.user.additionalGids` to a value corresponding to the user in the container's context described by `Config.User`.\nFor Unix-like systems, this MAY involve resolution through NSS or parsing `/etc/group` and determining the group memberships of the user specified in `process.user.uid`.\nThe converter SHOULD NOT modify `process.user.additionalGids` if the value of [`user`](config.md#properties) in `Config.User` is numeric or if `Config.User` specifies a group.\n\nIf `Config.User` is not defined, the converted `process.user` value is implementation-defined.\nIf `Config.User` does not correspond to a user in the container's context, the converter MUST return an error.\n\n## Optional Fields\n\nCertain image configuration fields are not applicable to all conversion use cases, and thus are optional for configuration converters to implement.\nA compliant configuration converter SHOULD provide a way for users to extract these fields into the generated runtime configuration:\n\n| Image Field           | Runtime Field      | Notes |\n| --------------------- | ------------------ | ----- |\n| `Config.ExposedPorts` | `annotations`      | 1     |\n| `Config.Volumes`      | `mounts`           | 2     |\n\n1. The runtime configuration does not have a corresponding field for this image field.\n   However, converters SHOULD set the [`org.opencontainers.image.exposedPorts` annotation](#configexposedports).\n2. Implementations SHOULD provide mounts for these locations such that application data is not written to the container's root filesystem.\n   If a converter implements conversion for this field using mountpoints, it SHOULD set the `destination` of the mountpoint to the value specified in `Config.Volumes`.\n   An implementation MAY seed the contents of the mount with data in the image at the same location.\n   If a _new_ image is created from a container based on the image described by this configuration, data in these paths SHOULD NOT be included in the _new_ image.\n   The other `mounts` fields are platform and context dependent, and thus are implementation-defined.\n   Note that the implementation of `Config.Volumes` need not use mountpoints, as it is effectively a mask of the filesystem.\n\n### `Config.ExposedPorts`\n\nThe OCI runtime configuration does not provide a way of expressing the concept of \"container exposed ports\".\nHowever, converters SHOULD set the **org.opencontainers.image.exposedPorts** annotation, unless doing so will [cause a conflict](#annotations).\n\n**org.opencontainers.image.exposedPorts** is the list of values that correspond to the [keys defined for `Config.ExposedPorts`](config.md) (string, comma-separated values).\n\n## Annotations\n\nThere are three ways of annotating an OCI image in this specification:\n\n1. `Config.Labels` in the [configuration](config.md) of the image.\n2. `annotations` in the [manifest](manifest.md) of the image.\n3. `annotations` in the [image index](image-index.md) of the image.\n\nIn addition, there are also implicit annotations that are defined by this section which are determined from the values of the image configuration.\nA converter SHOULD NOT attempt to extract annotations from [manifests](manifest.md) or [image indices](image-index.md).\nIf there is a conflict (same key but different value) between an implicit annotation (or annotation in [manifests](manifest.md) or [image indices](image-index.md)) and an explicitly specified annotation in `Config.Labels`, the value specified in `Config.Labels` MUST take precedence.\n\nA converter MAY add annotations which have keys not specified in the image.\nA converter MUST NOT modify the values of annotations specified in the image.\n\n[oci-runtime-bundle]: https://github.com/opencontainers/runtime-spec/blob/main/bundle.md\n[oci-runtime-config]: https://github.com/opencontainers/runtime-spec/blob/main/config.md\n"
        },
        {
          "name": "descriptor.md",
          "type": "blob",
          "size": 11.8671875,
          "content": "# OCI Content Descriptors\n\n- An OCI image consists of several different components, arranged in a [Merkle Directed Acyclic Graph (DAG)](https://en.wikipedia.org/wiki/Merkle_tree).\n- References between components in the graph are expressed through _Content Descriptors_.\n- A Content Descriptor (or simply _Descriptor_) describes the disposition of the targeted content.\n- A Content Descriptor includes the type of the content, a content identifier (_digest_), and the byte-size of the raw content.\n  Optionally, it includes the type of artifact it is describing.\n- Descriptors SHOULD be embedded in other formats to securely reference external content.\n- Other formats SHOULD use descriptors to securely reference external content.\n- When other formats contain multiple descriptors, unless otherwise specified, those descriptors are independent of each other, allowing fields like the `mediaType` and the algorithm for the `digest` to vary within that external content.\n\nThis section defines the `application/vnd.oci.descriptor.v1+json` [media type](media-types.md).\n\n## Properties\n\nA descriptor consists of a set of properties encapsulated in key-value fields.\n\nThe following fields contain the primary properties that constitute a Descriptor:\n\n- **`mediaType`** *string*\n\n  This REQUIRED property contains the media type of the referenced content.\n  Values MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2].\n\n  The OCI image specification defines [several of its own MIME types](media-types.md) for resources defined in the specification.\n\n- **`digest`** *string*\n\n  This REQUIRED property is the _digest_ of the targeted content, conforming to the requirements outlined in [Digests](#digests).\n  Retrieved content SHOULD be verified against this digest when consumed via untrusted sources.\n\n- **`size`** *int64*\n\n  This REQUIRED property specifies the size, in bytes, of the raw content.\n  This property exists so that a client will have an expected size for the content before processing.\n  If the length of the retrieved content does not match the specified length, the content SHOULD NOT be trusted.\n\n- **`urls`** *array of strings*\n\n  This OPTIONAL property specifies a list of URIs from which this object MAY be downloaded.\n  Each entry MUST conform to [RFC 3986][rfc3986].\n  Entries SHOULD use the `http` and `https` schemes, as defined in [RFC 7230][rfc7230-s2.7].\n\n- **`annotations`** *string-string map*\n\n  This OPTIONAL property contains arbitrary metadata for this descriptor.\n  This OPTIONAL property MUST use the [annotation rules](annotations.md#rules).\n\n- **`data`** *string*\n\n  This OPTIONAL property contains an embedded representation of the referenced content.\n  Values MUST conform to the Base 64 encoding, as defined in [RFC 4648][rfc4648-s4].\n  The decoded data MUST be identical to the referenced content and SHOULD be verified against the [`digest`](#digests) and `size` fields by content consumers.\n  See [Embedded Content](#embedded-content) for when this is appropriate.\n\n- **`artifactType`** *string*\n\n  This OPTIONAL property contains the type of an artifact when the descriptor points to an artifact.\n  This is the value of the config descriptor `mediaType` when the descriptor references an [image manifest](manifest.md).\n  If defined, the value MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2], and MAY be registered with [IANA][iana].\n\nDescriptors pointing to [`application/vnd.oci.image.manifest.v1+json`](manifest.md) SHOULD include the extended field `platform`, see [Image Index Property Descriptions](image-index.md#image-index-property-descriptions) for details.\n\n### Reserved\n\nExtended _Descriptor_ field additions proposed in other OCI specifications SHOULD first be considered for addition into this specification.\n\n## Digests\n\nThe _digest_ property of a Descriptor acts as a content identifier, enabling [content addressability](https://en.wikipedia.org/wiki/Content-addressable_storage).\nIt uniquely identifies content by taking a [collision-resistant hash](https://en.wikipedia.org/wiki/Cryptographic_hash_function) of the bytes.\nIf the _digest_ can be communicated in a secure manner, one can verify content from an insecure source by recalculating the digest independently, ensuring the content has not been modified.\n\nThe value of the `digest` property is a string consisting of an _algorithm_ portion and an _encoded_ portion.\nThe _algorithm_ specifies the cryptographic hash function and encoding used for the digest; the _encoded_ portion contains the encoded result of the hash function.\n\nA digest string MUST match the following [grammar](considerations.md#ebnf):\n\n```ebnf\ndigest                ::= algorithm \":\" encoded\nalgorithm             ::= algorithm-component (algorithm-separator algorithm-component)*\nalgorithm-component   ::= [a-z0-9]+\nalgorithm-separator   ::= [+._-]\nencoded               ::= [a-zA-Z0-9=_-]+\n```\n\nNote that _algorithm_ MAY impose algorithm-specific restriction on the grammar of the _encoded_ portion.\nSee also [Registered Algorithms](#registered-algorithms).\n\nSome example digest strings include the following:\n\n| digest                                                                    | algorithm                   | Registered |\n|---------------------------------------------------------------------------|-----------------------------|------------|\n| `sha256:6c3c624b58dbbcd3c0dd82b4c53f04194d1247c6eebdaab7c610cf7d66709b3b` | [SHA-256](#sha-256)         | Yes        |\n| `sha512:401b09eab3c013d4ca54922bb802bec8fd5318192b0a75f201d8b372742...`   | [SHA-512](#sha-512)         | Yes        |\n| `multihash+base58:QmRZxt2b1FVZPNqd8hsiykDL3TdBDeTSPX9Kv46HmX4Gx8`         | Multihash                   | No         |\n| `sha256+b64u:LCa0a2j_xo_5m0U8HTBBNBNCLXBkg7-g-YpeiGJm564`                 | SHA-256 with urlsafe base64 | No         |\n\nPlease see [Registered Algorithms](#registered-algorithms) for a list of registered algorithms.\n\nImplementations SHOULD allow digests with unrecognized algorithms to pass validation if they comply with the above grammar.\nWhile `sha256` will only use hex encoded digests, separators in _algorithm_ and alphanumerics in _encoded_ are included to allow for extensions.\nAs an example, we can parameterize the encoding and algorithm as `multihash+base58:QmRZxt2b1FVZPNqd8hsiykDL3TdBDeTSPX9Kv46HmX4Gx8`, which would be considered valid but unregistered by this specification.\n\n### Verification\n\nBefore consuming content targeted by a descriptor from untrusted sources, the byte content SHOULD be verified against the digest string.\nBefore calculating the digest, the size of the content SHOULD be verified to reduce hash collision space.\nHeavy processing before calculating a hash SHOULD be avoided.\nImplementations MAY employ [canonicalization](considerations.md#canonicalization) of the underlying content to ensure stable content identifiers.\n\n### Digest calculations\n\nA _digest_ is calculated by the following pseudo-code, where `H` is the selected hash algorithm, identified by string `<alg>`:\n\n```text\nlet ID(C) = Descriptor.digest\nlet C = <bytes>\nlet D = '<alg>:' + Encode(H(C))\nlet verified = ID(C) == D\n```\n\nAbove, we define the content identifier as `ID(C)`, extracted from the `Descriptor.digest` field.\nContent `C` is a string of bytes.\nFunction `H` returns the hash of `C` in bytes and is passed to function `Encode` and prefixed with the algorithm to obtain the digest.\nThe result `verified` is true if `ID(C)` is equal to `D`, confirming that `C` is the content identified by `D`.\nAfter verification, the following is true:\n\n```text\nD == ID(C) == '<alg>:' + Encode(H(C))\n```\n\nThe _digest_ is confirmed as the content identifier by independently calculating the _digest_.\n\n### Registered algorithms\n\nWhile the _algorithm_ component of the digest string allows the use of a variety of cryptographic algorithms, compliant implementations SHOULD use [SHA-256](#sha-256).\n\nThe following algorithm identifiers are currently defined by this specification:\n\n| algorithm identifier | algorithm           |\n|----------------------|---------------------|\n| `sha256`             | [SHA-256](#sha-256) |\n| `sha512`             | [SHA-512](#sha-512) |\n\nIf a useful algorithm is not included in the above table, it SHOULD be submitted to this specification for registration.\n\n#### SHA-256\n\n[SHA-256][rfc4634-s4.1] is a collision-resistant hash function, chosen for ubiquity, reasonable size and secure characteristics.\nImplementations MUST implement SHA-256 digest verification for use in descriptors.\n\nWhen the _algorithm identifier_ is `sha256`, the _encoded_ portion MUST match `/[a-f0-9]{64}/`.\nNote that `[A-F]` MUST NOT be used here.\n\n#### SHA-512\n\n[SHA-512][rfc4634-s4.2] is a collision-resistant hash function which [may be more performant][sha256-vs-sha512] than [SHA-256](#sha-256) on some CPUs.\nImplementations MAY implement SHA-512 digest verification for use in descriptors.\n\nWhen the _algorithm identifier_ is `sha512`, the _encoded_ portion MUST match `/[a-f0-9]{128}/`.\nNote that `[A-F]` MUST NOT be used here.\n\n## Embedded Content\n\nIn many contexts, such as when downloading content over a network, resolving a descriptor to its content has a measurable fixed \"roundtrip\" latency cost.\nFor large blobs, the fixed cost is usually inconsequential, as the majority of time will be spent actually fetching the content.\nFor very small blobs, the fixed cost can be quite significant.\n\nImplementations MAY choose to embed small pieces of content directly within a descriptor to avoid roundtrips.\n\nImplementations MUST NOT populate the `data` field in situations where doing so would modify existing content identifiers.\nFor example, a registry MUST NOT arbitrarily populate `data` fields within uploaded manifests, as that would modify the content identifier of those manifests.\nIn contrast, a client MAY populate the `data` field before uploading a manifest, because the manifest would not yet have a content identifier in the registry.\n\nImplementations SHOULD consider portability when deciding whether to embed data, as some providers are known to refuse to accept or parse manifests that exceed a certain size.\n\n## Examples\n\nThe following example describes a [_Manifest_](manifest.md#image-manifest) with a content identifier of \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\" and a size of 7682 bytes:\n\n```json,title=Content%20Descriptor&mediatype=application/vnd.oci.descriptor.v1%2Bjson\n{\n  \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n  \"size\": 7682,\n  \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\"\n}\n```\n\nIn the following example, the descriptor indicates that the referenced manifest is retrievable from a particular URL:\n\n```json,title=Content%20Descriptor&mediatype=application/vnd.oci.descriptor.v1%2Bjson\n{\n  \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n  \"size\": 7682,\n  \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\",\n  \"urls\": [\n    \"https://example.com/example-manifest\"\n  ]\n}\n```\n\nIn the following example, the descriptor indicates the type of artifact it is referencing:\n\n```json,title=Content%20Descriptor&mediatype=application/vnd.oci.descriptor.v1%2Bjson\n{\n  \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n  \"size\": 123,\n  \"digest\": \"sha256:87923725d74f4bfb94c9e86d64170f7521aad8221a5de834851470ca142da630\",\n  \"artifactType\": \"application/vnd.example.sbom.v1\"\n}\n```\n\n[rfc3986]: https://tools.ietf.org/html/rfc3986\n[rfc4634-s4.1]: https://tools.ietf.org/html/rfc4634#section-4.1\n[rfc4634-s4.2]: https://tools.ietf.org/html/rfc4634#section-4.2\n[rfc4648-s4]: https://tools.ietf.org/html/rfc4648#section-4\n[rfc6838]: https://tools.ietf.org/html/rfc6838\n[rfc6838-s4.2]: https://tools.ietf.org/html/rfc6838#section-4.2\n[rfc7230-s2.7]: https://tools.ietf.org/html/rfc7230#section-2.7\n[sha256-vs-sha512]: https://groups.google.com/a/opencontainers.org/forum/#!topic/dev/hsMw7cAwrZE\n[iana]: https://www.iana.org/assignments/media-types/media-types.xhtml\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.4052734375,
          "content": "module github.com/opencontainers/image-spec\n\n// The minimum Go release is only incremented when required by a feature.\n// At least 3 Go releases will be supported by the spec.\n// For example, updating this version to 1.19 first requires Go 1.21 to be released.\ngo 1.18\n\nrequire (\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/russross/blackfriday v1.6.0\n\tgithub.com/santhosh-tekuri/jsonschema/v5 v5.3.1\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0.5556640625,
          "content": "github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/russross/blackfriday v1.6.0 h1:KqfZb0pUVN2lYqZUYRddxF4OR8ZMURnJIG5Y3VRLtww=\ngithub.com/russross/blackfriday v1.6.0/go.mod h1:ti0ldHuxg49ri4ksnFxlkCfN+hvslNlmVHqNRXXJNAY=\ngithub.com/santhosh-tekuri/jsonschema/v5 v5.3.1 h1:lZUw3E0/J3roVtGQ+SCrUrg3ON6NgVqpn3+iol9aGu4=\ngithub.com/santhosh-tekuri/jsonschema/v5 v5.3.1/go.mod h1:uToXkOrWAZ6/Oc07xWQrPOhJotwFIyu2bBVN41fcDUY=\n"
        },
        {
          "name": "identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "image-index.md",
          "type": "blob",
          "size": 8.0927734375,
          "content": "# OCI Image Index Specification\n\nThe image index is a higher-level manifest which points to specific [image manifests](manifest.md), ideal for one or more platforms.\nWhile the use of an image index is OPTIONAL for image providers, image consumers SHOULD be prepared to process them.\n\nThis section defines the `application/vnd.oci.image.index.v1+json` [media type](media-types.md).\n\nFor the media type(s) that this document is compatible with, see the [matrix][matrix].\n\n## _Image Index_ Property Descriptions\n\n- **`schemaVersion`** *int*\n\n  This REQUIRED property specifies the image manifest schema version.\n  For this version of the specification, this MUST be `2` to ensure backward compatibility with older versions of Docker.\n  The value of this field will not change.\n  This field MAY be removed in a future version of the specification.\n\n- **`mediaType`** *string*\n\n  This property SHOULD be used and [remain compatible][matrix] with earlier versions of this specification and with other similar external formats.\n  When used, this field MUST contain the media type `application/vnd.oci.image.index.v1+json`.\n  This field usage differs from the [descriptor](descriptor.md#properties) use of `mediaType`.\n\n- **`artifactType`** *string*\n\n  This OPTIONAL property contains the type of an artifact when the manifest is used for an artifact.\n  If defined, the value MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2], and MAY be registered with [IANA][iana].\n\n- **`manifests`** *array of objects*\n\n  This REQUIRED property contains a list of [manifests](manifest.md) for specific platforms.\n  While this property MUST be present, the size of the array MAY be zero.\n\n  Each object in `manifests` includes a set of [descriptor properties](descriptor.md#properties) with the following additional properties and restrictions:\n\n  - **`mediaType`** *string*\n\n    This [descriptor property](descriptor.md#properties) has additional restrictions for `manifests`.\n    Implementations MUST support at least the following media types:\n\n    - [`application/vnd.oci.image.manifest.v1+json`](manifest.md)\n\n    Also, implementations SHOULD support the following media types:\n\n    - `application/vnd.oci.image.index.v1+json` (nested index)\n\n    Image indexes concerned with portability SHOULD use one of the above media types.\n    Future versions of the spec MAY use a different mediatype (i.e. a new versioned format).\n    An encountered `mediaType` that is unknown to the implementation MUST NOT generate an error.\n\n  - **`platform`** *object*\n\n    This OPTIONAL property describes the minimum runtime requirements of the image.\n    This property SHOULD be present if its target is platform-specific.\n\n    - **`architecture`** *string*\n\n      This REQUIRED property specifies the CPU architecture.\n      Image indexes SHOULD use, and implementations SHOULD understand, values listed in the Go Language document for [`GOARCH`][go-environment2].\n\n    - **`os`** *string*\n\n      This REQUIRED property specifies the operating system.\n      Image indexes SHOULD use, and implementations SHOULD understand, values listed in the Go Language document for [`GOOS`][go-environment2].\n\n    - **`os.version`** *string*\n\n      This OPTIONAL property specifies the version of the operating system targeted by the referenced blob.\n      Implementations MAY refuse to use manifests where `os.version` is not known to work with the host OS version.\n      Valid values are implementation-defined. e.g. `10.0.14393.1066` on `windows`.\n\n    - **`os.features`** *array of strings*\n\n      This OPTIONAL property specifies an array of strings, each specifying a mandatory OS feature.\n      When `os` is `windows`, image indexes SHOULD use, and implementations SHOULD understand the following values:\n\n      - `win32k`: image requires `win32k.sys` on the host (Note: `win32k.sys` is missing on Nano Server)\n\n      When `os` is not `windows`, values are implementation-defined and SHOULD be submitted to this specification for standardization.\n\n    - **`variant`** *string*\n\n      This OPTIONAL property specifies the variant of the CPU.\n      Image indexes SHOULD use, and implementations SHOULD understand, `variant` values listed in the [Platform Variants](#platform-variants) table.\n\n    - **`features`** *array of strings*\n\n        This property is RESERVED for future versions of the specification.\n\n  If multiple manifests match a client or runtime's requirements, the first matching entry SHOULD be used.\n\n- **`subject`** *[descriptor](descriptor.md)*\n\n    This OPTIONAL property specifies a [descriptor](descriptor.md) of another manifest.\n    This value defines a weak association to a separate [Merkle Directed Acyclic Graph (DAG)][dag] structure, and is used by the [`referrers` API][referrers-api] to include this manifest in the list of responses for the subject digest.\n\n- **`annotations`** *string-string map*\n\n    This OPTIONAL property contains arbitrary metadata for the image index.\n    This OPTIONAL property MUST use the [annotation rules](annotations.md#rules).\n\n    See [Pre-Defined Annotation Keys](annotations.md#pre-defined-annotation-keys).\n\n## Platform Variants\n\nWhen the variant of the CPU is not listed in the table, values are implementation-defined and SHOULD be submitted to this specification for standardization.\nThese values SHOULD match (or be similar to) their analog listed in [the Go Language document][go-environment2].\n\n| ISA/ABI    | `architecture` | `variant`             | Go analog   |\n|------------|----------------|-----------------------|-------------|\n| ARM 32-bit | `arm`          | `v6`, `v7`, `v8`      | `GOARM`     |\n| ARM 64-bit | `arm64`        | `v8`, `v8.1`, โฆ       | `GOARM64`   |\n| POWER8+    | `ppc64le`      | `power8`, `power9`, โฆ | `GOPPC64`   |\n| RISC-V     | `riscv64`      | `rva20u64`, โฆ         | `GORISCV64` |\n| x86-64     | `amd64`        | `v1`, `v2`, `v3`, โฆ   | `GOAMD64`   |\n\n## Example Image Index\n\n*Example showing a simple image index pointing to image manifests for two platforms:*\n\n```json,title=Image%20Index&mediatype=application/vnd.oci.image.index.v1%2Bjson\n{\n  \"schemaVersion\": 2,\n  \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:e692418e4cbaf90ca69d05a66403747baa33ee08806650b51fab815ad7fc331f\",\n      \"platform\": {\n        \"architecture\": \"ppc64le\",\n        \"os\": \"linux\"\n      }\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7682,\n      \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\",\n      \"platform\": {\n        \"architecture\": \"amd64\",\n        \"os\": \"linux\"\n      }\n    }\n  ],\n  \"annotations\": {\n    \"com.example.key1\": \"value1\",\n    \"com.example.key2\": \"value2\"\n  }\n}\n```\n\n## Example Image Index with multiple media types\n\n*Example showing an image index pointing to manifests with multiple media types:*\n\n```json,title=Image%20Index&mediatype=application/vnd.oci.image.index.v1%2Bjson\n{\n  \"schemaVersion\": 2,\n  \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:e692418e4cbaf90ca69d05a66403747baa33ee08806650b51fab815ad7fc331f\",\n      \"platform\": {\n        \"architecture\": \"ppc64le\",\n        \"os\": \"linux\"\n      }\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n      \"size\": 7682,\n      \"digest\": \"sha256:601570aaff1b68a61eb9c85b8beca1644e698003e0cdb5bce960f193d265a8b7\"\n    }\n  ],\n  \"annotations\": {\n    \"com.example.key1\": \"value1\",\n    \"com.example.key2\": \"value2\"\n  }\n}\n```\n\n[dag]:             https://en.wikipedia.org/wiki/Merkle_tree\n[go-environment2]: https://golang.org/doc/install/source#environment\n[iana]:            https://www.iana.org/assignments/media-types/media-types.xhtml\n[matrix]:          media-types.md#compatibility-matrix\n[referrers-api]:   https://github.com/opencontainers/distribution-spec/blob/main/spec.md#listing-referrers\n[rfc6838]:         https://tools.ietf.org/html/rfc6838\n[rfc6838-s4.2]:    https://tools.ietf.org/html/rfc6838#section-4.2\n"
        },
        {
          "name": "image-layout.md",
          "type": "blob",
          "size": 8.5732421875,
          "content": "# OCI Image Layout Specification\n\n- The OCI Image Layout is the directory structure for OCI content-addressable blobs and [location-addressable](https://en.wikipedia.org/wiki/Content-addressable_storage#Content-addressed_vs._location-addressed) references (refs).\n- This layout MAY be used in a variety of different transport mechanisms: archive formats (e.g. tar, zip), shared filesystem environments (e.g. nfs), or networked file fetching (e.g. http, ftp, rsync).\n\nGiven an image layout and a ref, a tool can create an [OCI Runtime Specification bundle](https://github.com/opencontainers/runtime-spec/blob/main/bundle.md) by:\n\n- Following the ref to find a [manifest](manifest.md#image-manifest), possibly via an [image index](image-index.md)\n- [Applying the filesystem layers](layer.md#applying) in the specified order\n- Converting the [image configuration](config.md) into an [OCI Runtime Specification `config.json`](https://github.com/opencontainers/runtime-spec/blob/main/config.md)\n\n## Content\n\nThe image layout is as follows:\n\n- `blobs` directory\n  - Contains content-addressable blobs\n  - A blob has no schema and SHOULD be considered opaque\n  - Directory MUST exist and MAY be empty\n  - See [blobs](#blobs) section\n- `oci-layout` file\n  - It MUST exist\n  - It MUST be a JSON object\n  - It MUST contain an `imageLayoutVersion` field\n  - See [oci-layout file](#oci-layout-file) section\n  - It MAY include additional fields\n- `index.json` file\n  - It MUST exist\n  - It MUST be an [image index](image-index.md) JSON object.\n  - See [index.json](#indexjson-file) section\n\n**Implementor's Note:**\nFor extensibility and future expansion, additional files may be included in the directory.\nImplementations should not error when encountering unknown files.\nA common usage includes the `manifest.json` file associated with a backwards compatible `docker save` format.\n\n## Example Layout\n\nThis is an example image layout:\n\n```shell\n$ cd example.com/app/\n$ find . -type f\n./index.json\n./oci-layout\n./blobs/sha256/3588d02542238316759cbf24502f4344ffcc8a60c803870022f335d1390c13b4\n./blobs/sha256/4b0bc1c4050b03c95ef2a8e36e25feac42fd31283e8c30b3ee5df6b043155d3c\n./blobs/sha256/7968321274dc6b6171697c33df7815310468e694ac5be0ec03ff053bb135e768\n```\n\nBlobs are named by their contents:\n\n```shell\n$ shasum -a 256 ./blobs/sha256/afff3924849e458c5ef237db5f89539274d5e609db5db935ed3959c90f1f2d51\nafff3924849e458c5ef237db5f89539274d5e609db5db935ed3959c90f1f2d51 ./blobs/sha256/afff3924849e458c5ef237db5f89539274d5e609db5db935ed3959c90f1f2d51\n```\n\n## Blobs\n\n- Object names in the `blobs` subdirectories are composed of a directory for each hash algorithm, the children of which will contain the actual content.\n- The content of `blobs/<alg>/<encoded>` MUST match the digest `<alg>:<encoded>` (referenced per [descriptor](descriptor.md#digests)). For example, the content of `blobs/sha256/da39a3ee5e6b4b0d3255bfef95601890afd80709` MUST match the digest `sha256:da39a3ee5e6b4b0d3255bfef95601890afd80709`.\n- The character set of the entry name for `<alg>` and `<encoded>` MUST match the respective grammar elements described in [descriptor](descriptor.md#digests).\n- The blobs directory MAY contain blobs which are not referenced by any of the [refs](#indexjson-file).\n- The blobs directory MAY be missing referenced blobs, in which case the missing blobs SHOULD be fulfilled by an external blob store.\n\n### Example Blobs\n\n```shell\n$ cat ./blobs/sha256/9b97579de92b1c195b85bb42a11011378ee549b02d7fe9c17bf2a6b35d5cb079 | jq\n{\n  \"schemaVersion\": 2,\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:afff3924849e458c5ef237db5f89539274d5e609db5db935ed3959c90f1f2d51\",\n      \"platform\": {\n        \"architecture\": \"ppc64le\",\n        \"os\": \"linux\"\n      }\n    },\n...\n```\n\n```shell\n$ cat ./blobs/sha256/afff3924849e458c5ef237db5f89539274d5e609db5db935ed3959c90f1f2d51 | jq\n{\n  \"schemaVersion\": 2,\n  \"config\": {\n    \"mediaType\": \"application/vnd.oci.image.config.v1+json\",\n    \"size\": 7023,\n    \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\"\n  },\n  \"layers\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\",\n      \"size\": 32654,\n      \"digest\": \"sha256:9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\"\n    },\n...\n```\n\n```shell\n$ cat ./blobs/sha256/5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270 | jq\n{\n  \"architecture\": \"amd64\",\n  \"author\": \"Alyssa P. Hacker <alyspdev@example.com>\",\n  \"config\": {\n    \"Hostname\": \"8dfe43d80430\",\n    \"Domainname\": \"\",\n    \"User\": \"\",\n    \"AttachStdin\": false,\n    \"AttachStdout\": false,\n    \"AttachStderr\": false,\n    \"Tty\": false,\n    \"OpenStdin\": false,\n    \"StdinOnce\": false,\n    \"Env\": [\n      \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n    ],\n    \"Cmd\": null,\n    \"Image\": \"sha256:6986ae504bbf843512d680cc959484452034965db15f75ee8bdd1b107f61500b\",\n...\n```\n\n```shell\n$ cat ./blobs/sha256/9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\n[gzipped tar stream]\n```\n\n## oci-layout file\n\nThis JSON object serves as a marker for the base of an Open Container Image Layout and to provide the version of the image-layout in use.\nThe `imageLayoutVersion` value will align with the OCI Image Specification version at the time changes to the layout are made, and will pin a given version until changes to the image layout are required.\nThis section defines the `application/vnd.oci.layout.header.v1+json` [media type](media-types.md).\n\n### oci-layout Example\n\n```json,title=OCI%20Layout&mediatype=application/vnd.oci.layout.header.v1%2Bjson\n{\n    \"imageLayoutVersion\": \"1.0.0\"\n}\n```\n\n## index.json file\n\nThis REQUIRED file is the entry point for references and descriptors of the image-layout.\nThe [image index](image-index.md) is a multi-descriptor entry point.\n\nThis index provides an established path (`/index.json`) to have an entry point for an image-layout and to discover auxiliary descriptors.\n\n- No semantic restriction is given for the \"org.opencontainers.image.ref.name\" annotation of descriptors.\n- In general the `mediaType` of each [descriptor][descriptors] object in the `manifests` field will be either `application/vnd.oci.image.index.v1+json` or `application/vnd.oci.image.manifest.v1+json`.\n- Future versions of the spec MAY use a different mediatype (i.e. a new versioned format).\n- An encountered `mediaType` that is unknown MUST NOT generate an error.\n\n**Implementor's Note:**\nA common use case of descriptors with a \"org.opencontainers.image.ref.name\" annotation is representing a \"tag\" for a container image.\nFor example, an image may have a tag for different versions or builds of the software.\nIn the wild you often see \"tags\" like \"v1.0.0-vendor.0\", \"2.0.0-debug\", etc.\nThose tags will often be represented in an image-layout repository with matching \"org.opencontainers.image.ref.name\" annotations like \"v1.0.0-vendor.0\", \"2.0.0-debug\", etc.\n\n### Index Example\n\n```json,title=Image%20Index&mediatype=application/vnd.oci.image.index.v1%2Bjson\n{\n  \"schemaVersion\": 2,\n  \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n  \"manifests\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.index.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:0228f90e926ba6b96e4f39cf294b2586d38fbb5a1e385c05cd1ee40ea54fe7fd\",\n      \"annotations\": {\n        \"org.opencontainers.image.ref.name\": \"stable-release\"\n      }\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n      \"size\": 7143,\n      \"digest\": \"sha256:e692418e4cbaf90ca69d05a66403747baa33ee08806650b51fab815ad7fc331f\",\n      \"platform\": {\n        \"architecture\": \"ppc64le\",\n        \"os\": \"linux\"\n      },\n      \"annotations\": {\n        \"org.opencontainers.image.ref.name\": \"v1.0\"\n      }\n    },\n    {\n      \"mediaType\": \"application/xml\",\n      \"size\": 7143,\n      \"digest\": \"sha256:b3d63d132d21c3ff4c35a061adf23cf43da8ae054247e32faa95494d904a007e\",\n      \"annotations\": {\n        \"org.freedesktop.specifications.metainfo.version\": \"1.0\",\n        \"org.freedesktop.specifications.metainfo.type\": \"AppStream\"\n      }\n    }\n  ],\n  \"annotations\": {\n    \"com.example.index.revision\": \"r124356\"\n  }\n}\n```\n\nThis illustrates an index that provides two named references and an auxiliary mediatype for this image layout.\n\nThe first named reference (`stable-release`) points to another index that might contain multiple references with distinct platforms and annotations.\nNote that the [`org.opencontainers.image.ref.name` annotation](annotations.md) SHOULD only be considered valid when on descriptors on `index.json`.\n\nThe second named reference (`v1.0`) points to a manifest that is specific to the linux/ppc64le platform.\n\n[descriptors]: ./descriptor.md\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "implementations.md",
          "type": "blob",
          "size": 2.31640625,
          "content": "# OCI Image Implementations\n\nProjects or Companies currently adopting the OCI Image Specification\n\n- [projectatomic/skopeo](https://github.com/projectatomic/skopeo)\n- [Amazon Elastic Container Registry (ECR)](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-manifest-formats.html) ([announcement](https://aws.amazon.com/about-aws/whats-new/2017/01/amazon-ecr-supports-docker-image-manifest-v2-schema-2/))\n- [Azure Container Registry (ACR)](https://docs.microsoft.com/azure/container-registry/container-registry-image-formats#oci-images)\n- [openSUSE/umoci](https://github.com/openSUSE/umoci)\n- [cloudfoundry/grootfs](https://github.com/cloudfoundry/grootfs) ([source](https://github.com/cloudfoundry/grootfs/blob/c3da26e1e463b51be1add289032f3dca6698b335/fetcher/remote/docker_src.go))\n- [Mesos plans](https://issues.apache.org/jira/browse/MESOS-5011) ([design doc](https://docs.google.com/document/d/1Pus7D-inIBoLSIPyu3rl_apxvUhtp3rp0_b0Ttr2Xww/edit#heading=h.hrvk2wboog4p))\n- [Docker](https://github.com/docker)\n  - [docker/docker (`docker save/load` WIP)](https://github.com/docker/docker/pull/26369)\n  - [distribution/distribution (registry PR)](https://github.com/distribution/distribution/pull/2076)\n- [containerd/containerd](https://github.com/containerd/containerd)\n- [Containers](https://github.com/containers/)\n  - [containers/build](https://github.com/containers/build)\n  - [containers/image](https://github.com/containers/image)\n  - [containers/oci-spec-rs](https://github.com/containers/oci-spec-rs)\n  - [containers/libocispec](https://github.com/containers/libocispec)\n- [krustlet/oci-distribution](https://github.com/krustlet/oci-distribution)\n- [box-builder/box](https://github.com/box-builder/box)\n- [coolljt0725/docker2oci](https://github.com/coolljt0725/docker2oci)\n- [regclient/regclient](https://github.com/regclient/regclient)\n- [ORAS](https://oras.land/)\n  - [oras-project/oras](https://github.com/oras-project/oras/)\n  - [oras-project/oras-go](https://github.com/oras-project/oras-go)\n\n## Former Projects\n\nOCI would like to recognize the following projects that are no longer actively maintained but have contributed to the adoption of OCI\n\n- [coreos/rkt](https://github.com/coreos/rkt) - Project ended and archived on Feb 25, 2020\n\n_(to add your project please open a [pull-request](https://github.com/opencontainers/image-spec/pulls))_\n"
        },
        {
          "name": "layer.md",
          "type": "blob",
          "size": 14.857421875,
          "content": "# Image Layer Filesystem Changeset\n\nThis document describes how to serialize a filesystem and filesystem changes like removed files into a blob called a layer.\nOne or more layers are applied on top of each other to create a complete filesystem.\nThis document will use a concrete example to illustrate how to create and consume these filesystem layers.\n\nThis section defines the `application/vnd.oci.image.layer.v1.tar`, `application/vnd.oci.image.layer.v1.tar+gzip`, `application/vnd.oci.image.layer.v1.tar+zstd`, `application/vnd.oci.image.layer.nondistributable.v1.tar`, `application/vnd.oci.image.layer.nondistributable.v1.tar+gzip`, and `application/vnd.oci.image.layer.nondistributable.v1.tar+zstd` [media types](media-types.md).\n\n## `+gzip` Media Types\n\n- The media type `application/vnd.oci.image.layer.v1.tar+gzip` represents an `application/vnd.oci.image.layer.v1.tar` payload which has been compressed with [gzip][rfc1952_2].\n- The media type `application/vnd.oci.image.layer.nondistributable.v1.tar+gzip` represents an `application/vnd.oci.image.layer.nondistributable.v1.tar` payload ([deprecation notice](#non-distributable-layers)) which has been compressed with [gzip][rfc1952_2].\n\n## `+zstd` Media Types\n\n- The media type `application/vnd.oci.image.layer.v1.tar+zstd` represents an `application/vnd.oci.image.layer.v1.tar` payload which has been compressed with [zstd][rfc8478].\n- The media type `application/vnd.oci.image.layer.nondistributable.v1.tar+zstd` represents an `application/vnd.oci.image.layer.nondistributable.v1.tar` payload ([deprecation notice](#non-distributable-layers)) which has been compressed with [zstd][rfc8478].\n\n## Distributable Format\n\n- Layer Changesets for the [media type](media-types.md) `application/vnd.oci.image.layer.v1.tar` MUST be packaged in [tar archive][tar-archive].\n- Layer Changesets for the [media type](media-types.md) `application/vnd.oci.image.layer.v1.tar` MUST NOT include duplicate entries for file paths in the resulting [tar archive][tar-archive].\n\n## Change Types\n\nTypes of changes that can occur in a changeset are:\n\n- Additions\n- Modifications\n- Removals\n\nAdditions and Modifications are represented the same in the changeset tar archive.\n\nRemovals are represented using \"[whiteout](#whiteouts)\" file entries (See [Representing Changes](#representing-changes)).\n\n### File Types\n\nThroughout this document section, the use of word \"files\" or \"entries\" includes the following, where supported:\n\n- regular files\n- directories\n- sockets\n- symbolic links\n- block devices\n- character devices\n- FIFOs\n\n### File Attributes\n\nWhere supported, MUST include file attributes for Additions and Modifications include:\n\n- Modification Time (`mtime`)\n- User ID (`uid`)\n  - User Name (`uname`) should be ignored on platforms that support User ID (`uid`)\n- Group ID (`gid`)\n  - Group Name (`gname`) should be ignored on platforms that support Group ID (`gid`)\n- Mode (`mode`)\n- Extended Attributes (`xattrs`)\n- Symlink reference (`linkname` + symbolic link type)\n- [Hardlink](#hardlinks) reference (`linkname`)\n\n[Sparse files](https://en.wikipedia.org/wiki/Sparse_file) SHOULD NOT be used because they lack consistent support across tar implementations.\n\n#### Hardlinks\n\n- Hardlinks are a [POSIX concept](https://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html) for having one or more directory entries for the same file on the same device.\n- Not all filesystems support hardlinks (e.g. [FAT](https://en.wikipedia.org/wiki/File_Allocation_Table)).\n- Hardlinks are possible with all [file types](#file-types) except `directories`.\n- Non-directory files are considered \"hardlinked\" when their link count is greater than 1.\n- Hardlinked files are on a same device (i.e. comparing Major:Minor pair) and have the same inode.\n- The corresponding files that share the link with the > 1 linkcount may be outside the directory that the changeset is being produced from, in which case the `linkname` is not recorded in the changeset.\n- Union filesystem implementations may have limited or no support for hardlinks, particularly when a change is made to a hardlinked file or a hardlink is created to a file in a lower filesystem. (See the [overlay specification](https://docs.kernel.org/filesystems/overlayfs.html#index) for more details.)\n- Extracting a layer with hardlink references to files outside of the layer may fail.\n- Hardlinks are stored in a tar archive with type of a `1` char, per the [GNU Basic Tar Format][gnu-tar-standard] and [libarchive tar(5)][libarchive-tar].\n- While approaches to deriving new or changed hardlinks may vary, a possible approach is:\n\n```text\nSET LinkMap to map[< Major:Minor String >]map[< inode integer >]< path string >\nSET LinkNames to map[< src path string >]< dest path string >\nFOR each path in root path\n  IF path type is directory\n    CONTINUE\n  ENDIF\n  SET filestat to stat(path)\n  IF filestat num of links == 1\n    CONTINUE\n  ENDIF\n  IF LinkMap[filestat device][filestat inode] is not empty\n    SET LinkNames[path] to LinkMap[filestat device][filestat inode]\n  ELSE\n    SET LinkMap[filestat device][filestat inode] to path\n  ENDIF\nEND FOR\n```\n\nWith this approach, the link map and links names of a directory could be compared against that of another directory to derive additions and changes to hardlinks.\n\n#### Platform-specific attributes\n\nImplementations on Windows MUST support these additional attributes, encoded in [PAX vendor\nextensions](https://github.com/libarchive/libarchive/wiki/ManPageTar5#pax-interchange-format) as follows:\n\n- [Windows file attributes](https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx) (`MSWINDOWS.fileattr`)\n- [Security descriptor](https://msdn.microsoft.com/en-us/library/cc230366.aspx) (`MSWINDOWS.rawsd`): base64-encoded self-relative binary security descriptor\n- Mount points (`MSWINDOWS.mountpoint`): if present on a directory symbolic link, then the link should be created as a [directory junction](https://en.wikipedia.org/wiki/NTFS_junction_point)\n- Creation time (`LIBARCHIVE.creationtime`)\n\n## Creating\n\n### Initial Root Filesystem\n\nThe initial root filesystem is the base or parent layer.\n\nFor this example, an image root filesystem has an initial state as an empty directory.\nThe name of the directory is not relevant to the layer itself, only for the purpose of producing comparisons.\n\nHere is an initial empty directory structure for a changeset, with a unique directory name `rootfs-c9d-v1`.\n\n```text\nrootfs-c9d-v1/\n```\n\n### Populate Initial Filesystem\n\nFiles and directories are then created:\n\n```text\nrootfs-c9d-v1/\n  etc/\n    my-app-config\n  bin/\n    my-app-binary\n    my-app-tools\n```\n\nThe `rootfs-c9d-v1` directory is then created as a plain [tar archive][tar-archive] with relative path to `rootfs-c9d-v1`.\nEntries for the following files:\n\n```text\n./\n./etc/\n./etc/my-app-config\n./bin/\n./bin/my-app-binary\n./bin/my-app-tools\n```\n\n### Populate a Comparison Filesystem\n\nCreate a new directory and initialize it with a copy or snapshot of the prior root filesystem.\nExample commands that can preserve [file attributes](#file-attributes) to make this copy are:\n\n- [cp(1)](https://linux.die.net/man/1/cp): `cp -a rootfs-c9d-v1/ rootfs-c9d-v1.s1/`\n- [rsync(1)](https://linux.die.net/man/1/rsync):  `rsync -aHAX rootfs-c9d-v1/ rootfs-c9d-v1.s1/`\n- [tar(1)](https://linux.die.net/man/1/tar): `mkdir rootfs-c9d-v1.s1 && tar --acls --xattrs -C rootfs-c9d-v1/ -c . | tar -C rootfs-c9d-v1.s1/ --acls --xattrs -x` (including `--selinux` where supported)\n\nAny [changes](#change-types) to the snapshot MUST NOT change or affect the directory it was copied from.\n\nFor example `rootfs-c9d-v1.s1` is an identical snapshot of `rootfs-c9d-v1`.\nIn this way `rootfs-c9d-v1.s1` is prepared for updates and alterations.\n\n**Implementor's Note**: *a copy-on-write or union filesystem can efficiently make directory snapshots*\n\nInitial layout of the snapshot:\n\n```text\nrootfs-c9d-v1.s1/\n  etc/\n    my-app-config\n  bin/\n    my-app-binary\n    my-app-tools\n```\n\nSee [Change Types](#change-types) for more details on changes.\n\nFor example, add a directory at `/etc/my-app.d` containing a default config file, removing the existing config file.\nAlso a change (in attribute or file content) to `./bin/my-app-tools` binary to handle the config layout change.\n\nFollowing these changes, the representation of the `rootfs-c9d-v1.s1` directory:\n\n```text\nrootfs-c9d-v1.s1/\n  etc/\n    my-app.d/\n      default.cfg\n  bin/\n    my-app-binary\n    my-app-tools\n```\n\n### Determining Changes\n\nWhen two directories are compared, the relative root is the top-level directory.\nThe directories are compared, looking for files that have been [added, modified, or removed](#change-types).\n\nFor this example, `rootfs-c9d-v1/` and `rootfs-c9d-v1.s1/` are recursively compared, each as relative root path.\n\nThe following changeset is found:\n\n```text\nAdded:      /etc/my-app.d/\nAdded:      /etc/my-app.d/default.cfg\nModified:   /bin/my-app-tools\nDeleted:    /etc/my-app-config\n```\n\nThis reflects the removal of `/etc/my-app-config` and creation of a file and directory at `/etc/my-app.d/default.cfg`.\n`/bin/my-app-tools` has also been replaced with an updated version.\n\n### Representing Changes\n\nA [tar archive][tar-archive] is then created which contains _only_ this changeset:\n\n- Added and modified files and directories in their entirety\n- Deleted files or directories marked with a [whiteout file](#whiteouts)\n\nThe resulting tar archive for `rootfs-c9d-v1.s1` has the following entries:\n\n```text\n./etc/my-app.d/\n./etc/my-app.d/default.cfg\n./bin/my-app-tools\n./etc/.wh.my-app-config\n```\n\nTo signify that the resource `./etc/my-app-config` MUST be removed when the changeset is applied, the basename of the entry is prefixed with `.wh.`.\n\n## Applying Changesets\n\n- Layer Changesets of [media type](media-types.md) `application/vnd.oci.image.layer.v1.tar` are _applied_, rather than simply extracted as tar archives.\n- Applying a layer changeset requires special consideration for the [whiteout](#whiteouts) files.\n- In the absence of any [whiteout](#whiteouts) files in a layer changeset, the archive is extracted like a regular tar archive.\n\n### Changeset over existing files\n\nThis section specifies applying an entry from a layer changeset if the target path already exists.\n\nIf the entry and the existing path are both directories, then the existing path's attributes MUST be replaced by those of the entry in the changeset.\nIn all other cases, the implementation MUST do the semantic equivalent of the following:\n\n- removing the file path (e.g. [`unlink(2)`](https://linux.die.net/man/2/unlink) on Linux systems)\n- recreating the file path, based on the contents and attributes of the changeset entry\n\n## Whiteouts\n\n- A whiteout file is an empty file with a special filename that signifies a path should be deleted.\n- A whiteout filename consists of the prefix `.wh.` plus the basename of the path to be deleted.\n- As files prefixed with `.wh.` are special whiteout markers, it is not possible to create a filesystem which has a file or directory with a name beginning with `.wh.`.\n- Once a whiteout is applied, the whiteout itself MUST also be hidden.\n- Whiteout files MUST only apply to resources in lower/parent layers.\n- Files that are present in the same layer as a whiteout file can only be hidden by whiteout files in subsequent layers.\n\nThe following is a base layer with several resources:\n\n```text\nfile1\na/file2\nb/\nc/file3\n```\n\nIf we then delete `file1`, `file2`, and `b/`, while leaving `file3` and adding `file4, the next layer looks like:\n\n```text\n.wh.file1\na/.wh.file2\n.wh.b\nfile4\n```\n\nNote that regardless of the path being deleted, the whiteout file is a regular file in the archive.\n\nImplementations SHOULD generate layers such that the whiteout files appear before sibling directory entries.\n\n### Opaque Whiteout\n\n- In addition to expressing that a single entry should be removed from a lower layer, layers may remove all of the children using an opaque whiteout entry.\n- An opaque whiteout entry is a file with the name `.wh..wh..opq` indicating that all siblings are hidden in the lower layer.\n\nLet's take the following base layer as an example:\n\n```text\netc/\n  my-app-config\nbin/\n  my-app-binary\n  my-app-tools\n  tools/\n    my-app-tool-one\n```\n\nIf all children of `bin/` are removed, the next layer would have the following:\n\n```text\nbin/\n  .wh..wh..opq\n```\n\nThis is called _opaque whiteout_ format.\nAn _opaque whiteout_ file hides _all_ children of the `bin/` including sub-directories and all descendants.\nUsing _explicit whiteout_ files, this would be equivalent to the following:\n\n```text\nbin/\n  .wh.my-app-binary\n  .wh.my-app-tools\n  .wh.tools\n```\n\nIn this case, a unique whiteout file is generated for each entry.\nIf there were more children of `bin/` in the base layer, there would be an entry for each.\nNote that this opaque file will apply to _all_ children, including sub-directories, other resources and all descendants.\n\nImplementations SHOULD generate layers using _explicit whiteout_ files, but MUST accept both.\n\nAs another example, consider the following base layer:\n\n```text\na/\na/b/\na/b/c/\na/b/c/bar\n```\n\nWhen the next layer is created, the original `a/b` directory is deleted and recreated with `a/b/c/foo`:\n\n```text\na/\na/.wh..wh..opq\na/b/\na/b/c/\na/b/c/foo\n```\n\nWhen processing the second layer, `a/.wh..wh..opq` is applied first, before creating the new version of `a/b`, regardless of the ordering in which the whiteout file was encountered.\nFor example, the following layer is equivalent to the layer above:\n\n```text\na/\na/b/\na/b/c/\na/b/c/foo\na/.wh..wh..opq\n```\n\nAny given image is likely to be composed of several of these Image Filesystem Changeset tar archives.\n\n## Non-Distributable Layers\n\n> **NOTE**: Non-distributable layers are deprecated, and not recommended for future use.\n> Implementations SHOULD NOT produce new non-distributable layers.\n> Implementations are expected to support preexisting images with non-distributable layers.\n\nDue to legal requirements, certain layers may not be regularly distributable.\nSuch \"non-distributable\" layers are typically downloaded directly from a distributor but never uploaded.\n\nNon-distributable layers SHOULD be tagged with an alternative mediatype of `application/vnd.oci.image.layer.nondistributable.v1.tar`, `application/vnd.oci.image.layer.nondistributable.v1.tar+gzip`, or `application/vnd.oci.image.layer.nondistributable.v1.tar+zstd`.\nImplementations SHOULD NOT upload layers tagged with this media type; however, such a media type SHOULD NOT affect whether an implementation downloads the layer.\n\n[Descriptors](descriptor.md) referencing non-distributable layers MAY include `urls` for downloading these layers directly; however, the presence of the `urls` field SHOULD NOT be used to determine whether or not a layer is non-distributable.\n\n[libarchive-tar]: https://github.com/libarchive/libarchive/wiki/ManPageTar5#POSIX_ustar_Archives\n[gnu-tar-standard]: https://www.gnu.org/software/tar/manual/html_node/Standard.html\n[rfc1952_2]: https://tools.ietf.org/html/rfc1952\n[tar-archive]: https://en.wikipedia.org/wiki/Tar_(computing)\n[rfc8478]: https://tools.ietf.org/html/rfc8478\n"
        },
        {
          "name": "manifest.md",
          "type": "blob",
          "size": 13.6796875,
          "content": "# OCI Image Manifest Specification\n\nThere are three main goals of the Image Manifest Specification.\nThe first goal is content-addressable images, by supporting an image model where the image's configuration can be hashed to generate a unique ID for the image and its components.\nThe second goal is to allow multi-architecture images, through a \"fat manifest\" which references image manifests for platform-specific versions of an image.\nIn OCI, this is codified in an [image index](image-index.md).\nThe third goal is to be [translatable](conversion.md) to the [OCI Runtime Specification](https://github.com/opencontainers/runtime-spec).\n\nThis section defines the `application/vnd.oci.image.manifest.v1+json` [media type](media-types.md).\nFor the media type(s) that this is compatible with see the [matrix](media-types.md#compatibility-matrix).\n\n## Image Manifest\n\nUnlike the [image index](image-index.md), which contains information about a set of images that can span a variety of architectures and operating systems, an image manifest provides a configuration and set of layers for a single container image for a specific architecture and operating system.\n\n## _Image Manifest_ Property Descriptions\n\n- **`schemaVersion`** *int*\n\n  This REQUIRED property specifies the image manifest schema version.\n  For this version of the specification, this MUST be `2` to ensure backward compatibility with older versions of Docker. The value of this field will not change. This field MAY be removed in a future version of the specification.\n\n- **`mediaType`** *string*\n\n  This property SHOULD be used and [remain compatible](media-types.md#compatibility-matrix) with earlier versions of this specification and with other similar external formats.\n  When used, this field MUST contain the media type `application/vnd.oci.image.manifest.v1+json`.\n  This field usage differs from the [descriptor](descriptor.md#properties) use of `mediaType`.\n\n- **`artifactType`** *string*\n\n  This OPTIONAL property contains the type of an artifact when the manifest is used for an artifact.\n  This MUST be set when `config.mediaType` is set to the [empty value](#guidance-for-an-empty-descriptor).\n  If defined, the value MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2], and MAY be registered with [IANA][iana].\n  Implementations storing or copying image manifests MUST NOT error on encountering an `artifactType` that is unknown to the implementation.\n\n- **`config`** *[descriptor](descriptor.md)*\n\n  This REQUIRED property references a configuration object for a container, by digest.\n  Beyond the [descriptor requirements](descriptor.md#properties), the value has the following additional restrictions:\n\n  - **`mediaType`** *string*\n\n    This [descriptor property](descriptor.md#properties) has additional restrictions for `config`.\n\n    Implementations MUST NOT attempt to parse the referenced content if this media type is unknown and instead consider the referenced content as arbitrary binary data (e.g.: as `application/octet-stream`).\n\n    Implementations storing or copying image manifests MUST NOT error on encountering a value that is unknown to the implementation.\n\n    Implementations MUST support at least the following media types:\n\n    - [`application/vnd.oci.image.config.v1+json`](config.md)\n\n    Manifests for container images concerned with portability SHOULD use one of the above media types.\n    Manifests for artifacts concerned with portability SHOULD use `config.mediaType` as described in [Guidelines for Artifact Usage](#guidelines-for-artifact-usage).\n\n    If the manifest uses a different media type than the above, it MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2], and MAY be registered with [IANA][iana].\n\n  To set an effectively null or empty config and maintain portability see the [guidance for an empty descriptor](#guidance-for-an-empty-descriptor) below, and `DescriptorEmptyJSON` of the reference code.\n\n  If this image manifest will be \"runnable\" by a runtime of some kind, it is strongly recommended to ensure it includes enough data to be unique (such as the `rootfs` and `diff_ids` included in `application/vnd.oci.image.config.v1+json`) so that it has a unique [`ImageID`](config.md#imageid).\n\n- **`layers`** *array of objects*\n\n  Each item in the array MUST be a [descriptor](descriptor.md).\n  For portability, `layers` SHOULD have at least one entry.\n  See the [guidance for an empty descriptor](#guidance-for-an-empty-descriptor) below, and `DescriptorEmptyJSON` of the reference code.\n\n  When the `config.mediaType` is set to `application/vnd.oci.image.config.v1+json`, the following additional restrictions apply:\n\n  - The array MUST have the base layer at index 0.\n  - Subsequent layers MUST then follow in stack order (i.e. from `layers[0]` to `layers[len(layers)-1]`).\n  - The final filesystem layout MUST match the result of [applying](layer.md#applying-changesets) the layers to an empty directory.\n  - The [ownership, mode, and other attributes](layer.md#file-attributes) of the initial empty directory are unspecified.\n\n  Beyond the [descriptor requirements](descriptor.md#properties), the value has the following additional restrictions:\n\n  - **`mediaType`** *string*\n\n    This [descriptor property](descriptor.md#properties) has additional restrictions for `layers[]`.\n    Implementations MUST support at least the following media types:\n\n    - [`application/vnd.oci.image.layer.v1.tar`](layer.md)\n    - [`application/vnd.oci.image.layer.v1.tar+gzip`](layer.md#gzip-media-types)\n    - [`application/vnd.oci.image.layer.nondistributable.v1.tar`](layer.md#non-distributable-layers) ([deprecation notice](./layer.md#non-distributable-layers))\n    - [`application/vnd.oci.image.layer.nondistributable.v1.tar+gzip`](layer.md#gzip-media-types) ([deprecation notice](./layer.md#non-distributable-layers))\n\n    Manifests concerned with portability SHOULD use one of the above media types.\n    Entries in this field will frequently use the `+gzip` types.\n\n    Implementations SHOULD also support the following media types:\n\n    - [`application/vnd.oci.image.layer.v1.tar+zstd`](layer.md#zstd-media-types)\n\n    Implementations storing or copying image manifests MUST NOT error on encountering a `mediaType` that is unknown to the implementation.\n\n    If the manifest uses a different media type than the above, it MUST comply with [RFC 6838][rfc6838], including the [naming requirements in its section 4.2][rfc6838-s4.2], and MAY be registered with [IANA][iana].\n\n  See [Guidelines for Artifact Usage](#guidelines-for-artifact-usage) for other uses of the `layers`.\n\n- **`subject`** *[descriptor](descriptor.md)*\n\n  This OPTIONAL property specifies a [descriptor](descriptor.md) of another manifest.\n  This value defines a weak association to a separate [Merkle Directed Acyclic Graph (DAG)][dag] structure, and is used by the [`referrers` API][referrers-api] to include this manifest in the list of responses for the subject digest.\n\n- **`annotations`** *string-string map*\n\n  This OPTIONAL property contains arbitrary metadata for the image manifest.\n  This OPTIONAL property MUST use the [annotation rules](annotations.md#rules).\n\n  See [Pre-Defined Annotation Keys](annotations.md#pre-defined-annotation-keys).\n\n## Example Image Manifest\n\n*Example showing an image manifest:*\n\n```json,title=Manifest&mediatype=application/vnd.oci.image.manifest.v1%2Bjson\n{\n  \"schemaVersion\": 2,\n  \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n  \"config\": {\n    \"mediaType\": \"application/vnd.oci.image.config.v1+json\",\n    \"digest\": \"sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f432a537bc7\",\n    \"size\": 7023\n  },\n  \"layers\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\",\n      \"digest\": \"sha256:9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09af107ee8f0\",\n      \"size\": 32654\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\",\n      \"digest\": \"sha256:3c3a4604a545cdc127456d94e421cd355bca5b528f4a9c1905b15da2eb4a4c6b\",\n      \"size\": 16724\n    },\n    {\n      \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\",\n      \"digest\": \"sha256:ec4b8955958665577945c89419d1af06b5f7636b4ac3da7f12184802ad867736\",\n      \"size\": 73109\n    }\n  ],\n  \"subject\": {\n    \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n    \"digest\": \"sha256:5b0bcabd1ed22e9fb1310cf6c2dec7cdef19f0ad69efa1f392e94a4333501270\",\n    \"size\": 7682\n  },\n  \"annotations\": {\n    \"com.example.key1\": \"value1\",\n    \"com.example.key2\": \"value2\"\n  }\n}\n```\n\n## Guidance for an Empty Descriptor\n\n*Implementers note*: The following is considered GUIDANCE for portability.\n\nParts of the spec necessitate including a descriptor to a blob where some implementations of artifacts do not have associated content.\nWhile an empty blob (`size` of 0) may be preferable, practice has shown that not to be ubiquitously supported.\nThe media type `application/vnd.oci.empty.v1+json` (`MediaTypeEmptyJSON`) has been specified for a descriptor that has no content for the implementation.\nThe blob payload is the most minimal content that is still a valid JSON object: `{}` (`size` of 2).\nThe blob digest of `{}` is `sha256:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a`.\nThe data field is optional, and if included is the base64 encoding of `{}`: `e30=`.\n\nThe resulting descriptor shown here is also defined in reference code as `DescriptorEmptyJSON`:\n\n```json,title=empty%20config&mediatype=application/vnd.oci.descriptor.v1%2Bjson\n{\n  \"mediaType\": \"application/vnd.oci.empty.v1+json\",\n  \"digest\": \"sha256:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a\",\n  \"size\": 2,\n  \"data\": \"e30=\"\n}\n```\n\n## Guidelines for Artifact Usage\n\nContent other than OCI container images MAY be packaged using the image manifest.\nWhen this is done, the `config.mediaType` value MUST be set to a value specific to the artifact type or the [empty value](#guidance-for-an-empty-descriptor).\nIf the `config.mediaType` is set to the empty value, the `artifactType` MUST be defined.\nIf the artifact does not need layers, a single layer SHOULD be included with a non-zero size.\nThe suggested content for an unused `layers` array is the [empty descriptor](#guidance-for-an-empty-descriptor).\n\nThe design of the artifact depends on what content is being packaged with the artifact.\nThe decision tree below and the associated examples MAY be used to design new artifacts:\n\n1. Does the artifact consist of at least one file or blob?\n   If yes, continue to 2.\n   If no, specify the `artifactType`, and set the `config` and a single `layers` element to the empty descriptor value.\n   Here is an example of this with annotations included:\n\n   ```json,title=Minimal%20artifact&mediatype=application/vnd.oci.image.manifest.v1%2Bjson\n   {\n     \"schemaVersion\": 2,\n     \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n     \"artifactType\": \"application/vnd.example+type\",\n     \"config\": {\n       \"mediaType\": \"application/vnd.oci.empty.v1+json\",\n       \"digest\": \"sha256:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a\",\n       \"size\": 2\n     },\n     \"layers\": [\n       {\n         \"mediaType\": \"application/vnd.oci.empty.v1+json\",\n         \"digest\": \"sha256:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a\",\n         \"size\": 2\n       }\n     ],\n     \"annotations\": {\n       \"oci.opencontainers.image.created\": \"2023-01-02T03:04:05Z\",\n       \"com.example.data\": \"payload\"\n     }\n   }\n   ```\n\n2. Does the artifact have additional JSON formatted metadata as configuration?\n   If yes, continue to 3.\n   If no, specify the `artifactType`, include the artifact in the `layers`, and set `config` to the empty descriptor value.\n   Here is an example of this with a single layer:\n\n   ```json,title=Artifact%20without%20config&mediatype=application/vnd.oci.image.manifest.v1%2Bjson\n   {\n     \"schemaVersion\": 2,\n     \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n     \"artifactType\": \"application/vnd.example+type\",\n     \"config\": {\n       \"mediaType\": \"application/vnd.oci.empty.v1+json\",\n       \"digest\": \"sha256:44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a\",\n       \"size\": 2\n     },\n     \"layers\": [\n       {\n         \"mediaType\": \"application/vnd.example+type\",\n         \"digest\": \"sha256:e258d248fda94c63753607f7c4494ee0fcbe92f1a76bfdac795c9d84101eb317\",\n         \"size\": 1234\n       }\n     ]\n   }\n   ```\n\n3. For artifacts with a config blob, specify the `artifactType` to a common value for your artifact tooling, specify the `config` with the metadata for this artifact, and include the artifact in the `layers`.\n   Here is an example of this:\n\n   ```json,title=Artifact%20with%20config&mediatype=application/vnd.oci.image.manifest.v1%2Bjson\n   {\n     \"schemaVersion\": 2,\n     \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n     \"artifactType\": \"application/vnd.example+type\",\n     \"config\": {\n       \"mediaType\": \"application/vnd.example.config.v1+json\",\n       \"digest\": \"sha256:5891b5b522d5df086d0ff0b110fbd9d21bb4fc7163af34d08286a2e846f6be03\",\n       \"size\": 123\n     },\n     \"layers\": [\n       {\n         \"mediaType\": \"application/vnd.example.data.v1.tar+gzip\",\n         \"digest\": \"sha256:e258d248fda94c63753607f7c4494ee0fcbe92f1a76bfdac795c9d84101eb317\",\n         \"size\": 1234\n       }\n     ]\n   }\n   ```\n\n_Implementers note:_ artifacts have historically been created without an `artifactType` field, and tooling to work with artifacts should fallback to the `config.mediaType` value.\n\n[dag]:           https://en.wikipedia.org/wiki/Merkle_tree\n[iana]:          https://www.iana.org/assignments/media-types/media-types.xhtml\n[referrers-api]: https://github.com/opencontainers/distribution-spec/blob/main/spec.md#listing-referrers\n[rfc6838]:       https://tools.ietf.org/html/rfc6838\n[rfc6838-s4.2]:  https://tools.ietf.org/html/rfc6838#section-4.2\n"
        },
        {
          "name": "media-types.md",
          "type": "blob",
          "size": 5.3076171875,
          "content": "# OCI Image Media Types\n\nThe following media types identify the formats described here and their referenced resources:\n\n- `application/vnd.oci.descriptor.v1+json`: [Content Descriptor](descriptor.md)\n- `application/vnd.oci.layout.header.v1+json`: [OCI Layout](image-layout.md#oci-layout-file)\n- `application/vnd.oci.image.index.v1+json`: [Image Index](image-index.md)\n- `application/vnd.oci.image.manifest.v1+json`: [Image manifest](manifest.md#image-manifest)\n- `application/vnd.oci.image.config.v1+json`: [Image config](config.md)\n- `application/vnd.oci.image.layer.v1.tar`: [\"Layer\", as a tar archive](layer.md)\n- `application/vnd.oci.image.layer.v1.tar+gzip`: [\"Layer\", as a tar archive](layer.md#gzip-media-types) compressed with [gzip][rfc1952]\n- `application/vnd.oci.image.layer.v1.tar+zstd`: [\"Layer\", as a tar archive](layer.md#zstd-media-types) compressed with [zstd][rfc8478]\n- `application/vnd.oci.empty.v1+json`: [Empty for unused descriptors](manifest.md#guidance-for-an-empty-descriptor)\n\nThe following media types identify a [\"Layer\" with distribution restrictions](layer.md#non-distributable-layers), but are **deprecated** and not recommended for future use:\n\n- `application/vnd.oci.image.layer.nondistributable.v1.tar`: \"Layer\", as a tar archive\n- `application/vnd.oci.image.layer.nondistributable.v1.tar+gzip`: [\"Layer\", as a tar archive with distribution restrictions](layer.md#gzip-media-types) compressed with [gzip][rfc1952]\n- `application/vnd.oci.image.layer.nondistributable.v1.tar+zstd`: [\"Layer\", as a tar archive with distribution restrictions](layer.md#zstd-media-types) compressed with [zstd][rfc8478]\n\n## Media Type Conflicts\n\n[Blob](image-layout.md) retrieval methods MAY return media type metadata.\nFor example, a HTTP response might return a manifest with the Content-Type header set to `application/vnd.oci.image.manifest.v1+json`.\nImplementations MAY also have expectations for the blob's media type and digest (e.g. from a [descriptor](descriptor.md) referencing the blob).\n\n- Implementations that do not have an expected media type for the blob SHOULD respect the returned media type.\n- Implementations that have an expected media type which matches the returned media type SHOULD respect the matched media type.\n- Implementations that have an expected media type which does not match the returned media type SHOULD:\n  - Respect the expected media type if the blob matches the expected digest.\n    Implementations MAY warn about the media type mismatch.\n  - Return an error if the blob does not match the expected digest (as [recommended for descriptors](descriptor.md#properties)).\n  - Return an error if they do not have an expected digest.\n\n## Compatibility Matrix\n\nThe OCI Image Specification strives to be backwards and forwards compatible when possible.\nBreaking compatibility with existing systems creates a burden on users whether they are build systems, distribution systems, container engines, etc.\nThis section shows where the OCI Image Specification is compatible with formats external to the OCI Image and different versions of this specification.\n\n### application/vnd.oci.image.index.v1+json\n\nSimilar/related schema:\n\n- [application/vnd.docker.distribution.manifest.list.v2+json](https://github.com/distribution/distribution/blob/v2.8.3/docs/spec/manifest-v2-2.md#manifest-list)\n  - `.annotations`: only present in OCI\n  - `.[]manifests.annotations`: only present in OCI\n  - `.[]manifests.urls`: only present in OCI\n\n### application/vnd.oci.image.manifest.v1+json\n\nSimilar/related schema:\n\n- [application/vnd.docker.distribution.manifest.v2+json](https://github.com/distribution/distribution/blob/v2.8.3/docs/spec/manifest-v2-2.md#image-manifest)\n  - `.annotations`: only present in OCI\n  - `.config.annotations`: only present in OCI\n  - `.config.urls`: only present in OCI\n  - `.[]layers.annotations`: only present in OCI\n\n### application/vnd.oci.image.layer.v1.tar+gzip\n\nInterchangeable and fully compatible mime-types:\n\n- [application/vnd.docker.image.rootfs.diff.tar.gzip](https://github.com/moby/moby/blob/v20.10.8/image/spec/v1.2.md#creating-an-image-filesystem-changeset)\n\n### application/vnd.oci.image.config.v1+json\n\nSimilar/related schema:\n\n- [application/vnd.docker.container.image.v1+json](https://github.com/moby/moby/blob/v20.10.8/image/spec/v1.2.md#image-json-description) (Docker Image Spec v1.2)\n  - `.config.Memory`: only present in Docker, and reserved in OCI\n  - `.config.MemorySwap`: only present in Docker, and reserved in OCI\n  - `.config.CpuShares`: only present in Docker, and reserved in OCI\n  - `.config.Healthcheck`: only present in Docker, and reserved in OCI\n- [Moby/Docker](https://github.com/moby/moby)\n  - `.config.ArgsEscaped`: Windows-specific Moby/Docker extension, deprecated in OCI, available for compatibility with older images.\n\n`.config.StopSignal` and `.config.Labels` are accidentally undocumented in Docker Image Spec v1.2, but these fields are not OCI-specific concepts.\n\n## Relations\n\nThe following figure shows how the above media types reference each other:\n\n![media types](img/media-types.png)\n\n[Descriptors](descriptor.md) are used for all references.\nThe image-index being a \"fat manifest\" references a list of image manifests per target platform. An image manifest references exactly one target configuration and possibly many layers.\n\n[rfc1952]: https://tools.ietf.org/html/rfc1952\n[rfc8478]: https://tools.ietf.org/html/rfc8478\n"
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec.md",
          "type": "blob",
          "size": 4.1474609375,
          "content": "# Open Container Initiative\n\n## Image Format Specification\n\nThis specification defines an OCI Image, consisting of an [image manifest](manifest.md), an [image index](image-index.md) (optional), a set of [filesystem layers](layer.md), and a [configuration](config.md).\n\nThe goal of this specification is to enable the creation of interoperable tools for building, transporting, and preparing a container image to run.\n\n### Table of Contents\n\n- [Notational Conventions](#notational-conventions)\n- [Overview](#overview)\n  - [Understanding the Specification](#understanding-the-specification)\n  - [Media Types](media-types.md)\n- [Content Descriptors](descriptor.md)\n- [Image Layout](image-layout.md)\n- [Image Manifest](manifest.md)\n- [Image Index](image-index.md)\n- [Filesystem Layers](layer.md)\n- [Image Configuration](config.md)\n- [Annotations](annotations.md)\n- [Conversion](conversion.md)\n- [Considerations](considerations.md)\n  - [Extensibility](considerations.md#extensibility)\n  - [Canonicalization](considerations.md#canonicalization)\n\n## Notational Conventions\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as described in [RFC 2119](https://tools.ietf.org/html/rfc2119) (Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997).\n\nThe key words \"unspecified\", \"undefined\", and \"implementation-defined\" are to be interpreted as described in the [rationale for the C99 standard][c99-unspecified].\n\nAn implementation is not compliant if it fails to satisfy one or more of the MUST, MUST NOT, REQUIRED, SHALL, or SHALL NOT requirements for the protocols it implements.\nAn implementation is compliant if it satisfies all the MUST, MUST NOT, REQUIRED, SHALL, and SHALL NOT requirements for the protocols it implements.\n\n## Overview\n\nAt a high level the image manifest contains metadata about the contents and dependencies of the image including the content-addressable identity of one or more [filesystem layer changeset](layer.md) archives that will be unpacked to make up the final runnable filesystem.\nThe image configuration includes information such as application arguments, environments, etc.\nThe image index is a higher-level manifest which points to a list of manifests and descriptors.\nTypically, these manifests may provide different implementations of the image, possibly varying by platform or other attributes.\n\n![build diagram](img/build-diagram.png)\n\nOnce built the OCI Image can then be discovered by name, downloaded, verified by hash, trusted through a signature, and unpacked into an [OCI Runtime Bundle](https://github.com/opencontainers/runtime-spec/blob/main/bundle.md).\n\n![runtime diagram](img/run-diagram.png)\n\n### Understanding the Specification\n\nThe [OCI Image Media Types](media-types.md) document is a starting point to understanding the overall structure of the specification.\n\nThe high-level components of the spec include:\n\n- [Image Manifest](manifest.md) - a document describing the components that make up a container image\n- [Image Index](image-index.md) - an annotated list of manifests\n- [Image Layout](image-layout.md) - a filesystem layout representing the contents of an image\n- [Filesystem Layer](layer.md) - a changeset that describes a container's filesystem\n- [Image Configuration](config.md) - a document determining layer ordering and configuration of the image suitable for translation into a [runtime bundle][runtime-spec]\n- [Conversion](conversion.md) - a document describing how this translation should occur\n- [Artifacts Guidance](artifacts-guidance.md) - a document describing how to use the spec for packaging content other than OCI images\n- [Descriptor](descriptor.md) - a reference that describes the type, metadata and content address of referenced content\n\nFuture versions of this specification may include the following OPTIONAL features:\n\n- Signatures that are based on signing image content address\n- Naming that is federated based on DNS and can be delegated\n\n[c99-unspecified]: https://www.open-std.org/jtc1/sc22/wg14/www/C99RationaleV5.10.pdf#page=18\n[runtime-spec]: https://github.com/opencontainers/runtime-spec\n"
        },
        {
          "name": "specs-go",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}