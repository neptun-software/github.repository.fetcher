{
  "metadata": {
    "timestamp": 1736566899235,
    "page": 469,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iron-io/functions",
      "stars": 3189,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2255859375,
          "content": ".idea/\n*.sublime*\n*.swp\nfunctions\niron.json\ndj.config.json\ndj.cluster.*.json\nscript.tar.gz\napp.zip\n/app\nvendor/\n/microgateway\n/gateway\n/functions\n/functions-alpine\n/functions.exe\nbolt.db\n.glide/\n/fnctl\n\nprivate.sh\n.env\n*.pem\ndata/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.875,
          "content": "## v0.2.0 (unreleased)\n\n### Release Notes\n\n### Features\n\n- [#428](https://github.com/iron-io/functions/issues/428): Change update route from PUT to PATCH.\n- [#368](https://github.com/iron-io/functions/issues/368): fn: support route headers tweaks.\n- [#316](https://github.com/iron-io/functions/issues/316): fnctl: Add rustlang support.\n- [#313](https://github.com/iron-io/functions/issues/313): fnctl: Add .NET core support?.\n- [#310](https://github.com/iron-io/functions/issues/310): fnctl: Add python support.\n- [#69](https://github.com/iron-io/functions/issues/69): Long(er) running containers for better performance aka Hot Containers.\n- [#472](https://github.com/iron-io/functions/pull/472): Add global lru for routes with keys being the appname + path.\n- [#484](https://github.com/iron-io/functions/pull/484): Add triggers example for OpenStack project Picasso.\n- [#487](https://github.com/iron-io/functions/pull/487): Add initial load balancer.\n\n### Bugfixes\n\n- [#483](https://github.com/iron-io/functions/pull/483): Listen for PORT before running async/sync workers in order to prevent errors.\n- [#479](https://github.com/iron-io/functions/pull/478): Add routes config set/unset back\n- [#429](https://github.com/iron-io/functions/issues/429): Broken docs after merge.\n- [#422](https://github.com/iron-io/functions/issues/422): The headers field in func.yaml expects an array of values for each header key.\n- [#421](https://github.com/iron-io/functions/issues/421): Can't update a route and show better error message.\n- [#420](https://github.com/iron-io/functions/issues/420): `fn` tool install script not being updated to new releases.\n- [#419](https://github.com/iron-io/functions/issues/419): --runtime flag on init doesn't work area/fn .\n- [#414](https://github.com/iron-io/functions/issues/414): make run-docker is buggy on linux .\n- [#413](https://github.com/iron-io/functions/issues/413): fnctl: Creating routes ignores the route path and assigns function name.\n- [#403](https://github.com/iron-io/functions/issues/403): Route update (HTTP PUT) modifies datastore entity by making it inconsistent.\n- [#393](https://github.com/iron-io/functions/issues/393): Add documentation on how to use hot containers.\n- [#384](https://github.com/iron-io/functions/issues/384): Multiple routines use non-threadsafe cache.\n- [#381](https://github.com/iron-io/functions/issues/381): Unable to update route path through HTTP PUT area/api bug.\n- [#380](https://github.com/iron-io/functions/issues/380): Unable to update app name.\n- [#373](https://github.com/iron-io/functions/issues/373): fn build should fail if no version in func.yaml.\n- [#369](https://github.com/iron-io/functions/issues/369): Add documentation related to SpecialHandlers.\n- [#366](https://github.com/iron-io/functions/issues/366): Documentation lagging behind after Hot Containers.\n- [#365](https://github.com/iron-io/functions/issues/365): Documentation lagging behind on AppListeners.\n- [#364](https://github.com/iron-io/functions/issues/364): Remove app_name from per function endpoints.\n- [#363](https://github.com/iron-io/functions/issues/363): Update CONTRIBUTING with some rules of PRs.\n- [#360](https://github.com/iron-io/functions/issues/360): HTTP route /version is not described in swagger doc.\n- [#352](https://github.com/iron-io/functions/issues/352): Improve `fn publish` command .\n- [#345](https://github.com/iron-io/functions/issues/345): Check and fix for potential goroutine leak in api/runner.\n- [#339](https://github.com/iron-io/functions/issues/339): Unable to run sync route execution longer than 60 seconds.\n- [#320](https://github.com/iron-io/functions/issues/320): Change cli tool name to `fn`?.\n- [#319](https://github.com/iron-io/functions/issues/319): Update docs to link to client libraries.\n- [#304](https://github.com/iron-io/functions/issues/304): Create an fnctl dns entry and enable ssl for install of the cli tool.\n- [#302](https://github.com/iron-io/functions/issues/302): Placement of app name in fnctl seems inconsistent .\n- [#301](https://github.com/iron-io/functions/issues/301): can add a route with /hello but canâ€™t delete it with /hello .. have to delete it with just hello.\n- [#299](https://github.com/iron-io/functions/issues/299): More obvious USAGE line for where to include app name.\n- [#298](https://github.com/iron-io/functions/issues/298): deleting a route that doesn't exist says it's deleted.\n- [#296](https://github.com/iron-io/functions/issues/296): Better error messages for error on creating app.\n- [#293](https://github.com/iron-io/functions/issues/293): fn: auto release for fn.\n- [#288](https://github.com/iron-io/functions/issues/288): api: add upsert entrypoint for route updates.\n- [#284](https://github.com/iron-io/functions/issues/284): Update iron/node image.\n- [#275](https://github.com/iron-io/functions/issues/275): Functions API /tasks returns only one task ignoring query parameter `n`.\n- [#274](https://github.com/iron-io/functions/issues/274): Support app deletion API .\n- [#254](https://github.com/iron-io/functions/issues/254): HTTP POST to /apps/{app}/routes is not returning HTTP 409 in case of existing similar route.\n- [#253](https://github.com/iron-io/functions/issues/253): HTTP POST to /app for app creation should return HTTP 409 if app already exists.\n- [#252](https://github.com/iron-io/functions/issues/252): HTTP PUT to /apps/{app} creates new app instead of modifying initial.\n- [#251](https://github.com/iron-io/functions/issues/251): Maybe drop the CONFIG_ prefix on user defined config vars?.\n- [#235](https://github.com/iron-io/functions/issues/235): Docs: Missing Redis docs.\n- [#229](https://github.com/iron-io/functions/issues/229): fnctl change suggestions.\n- [#218](https://github.com/iron-io/functions/issues/218): Copy s3 event example from iron-io/lambda.\n- [#216](https://github.com/iron-io/functions/issues/216): fnclt lambda commands need to automatically detect region from the AWS config.\n- [#197](https://github.com/iron-io/functions/issues/197): Create an fnctl dns entry and enable ssl for install of the cli tool.\n- [#182](https://github.com/iron-io/functions/issues/182): Remove error in logs when image not found.\n- [#161](https://github.com/iron-io/functions/issues/161): Example slackbot - Copy guppy example over.\n- [#134](https://github.com/iron-io/functions/issues/134): Dynamic runners scaling.\n- [#126](https://github.com/iron-io/functions/issues/126): Detect OS and disable Memory profiling if needed.\n- [#72](https://github.com/iron-io/functions/issues/72): Should the input stream include a headers section, just like HTTP?.\n- [#69](https://github.com/iron-io/functions/issues/69): How to run on Openstack.\n- [#20](https://github.com/iron-io/functions/issues/20): Make function testing framework.\n- [#3](https://github.com/iron-io/functions/issues/3): Make \"function tool\" in ironcli.\n- [#2](https://github.com/iron-io/functions/issues/2): Allow setting content-type on a route, then use that when responding.\n\n## v0.1.0 [2016-11-18]\n\nAlpha 1 Release"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2451171875,
          "content": "# Contributing to IronFunctions\n\nWe welcome all contributions!\n\n## How to contribute\n\n* Fork the repo\n* Fix an issue or create an issue and fix it\n* Create a Pull Request that fixes the issue\n* Sign the CLA\n* Good Job! Thanks for being awesome!\n\n## Documentation\n\nWhen creating a Pull Request, make sure that you also update the documentation\naccordingly.\n\nMost of the times, when making some behavior more explicit or adding a feature,\na documentation update is necessary.\n\nYou will either update a file inside docs/ or create one. Prefer the former over\nthe latter. If you are unsure, do not hesitate in open the PR with a comment\nasking for suggestions on how to address the documentation part.\n\n## How to build and get up and running\n\n### Build\n\nThe first time after you fork or after dependencies get updated, run:\n\n```sh\nmake dep\n```\n\nThen after every change, run:\n\n```sh\nmake build\n```\n\nto build the `functions` binary.\n\n### Run\n\n```sh\n./functions\n```\n\nwill start IronFunctions using an embedded `Bolt` database running on port `8080`.\n\n### Test\n\n```sh\nmake test\n```\n\n#### Run in Docker\n\n```sh\nmake docker-run\n```\n\nwill start IronFunctions inside a Docker container.\n\n## Tests in Docker\n\n```sh\nmake docker-test\n\n```\n\nwill test IronFunctions inside a Docker container.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.0849609375,
          "content": "FROM iron/dind\n\nWORKDIR /app\n\nADD functions-alpine /app/functions\n\nCMD [\"./functions\"]\n"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 14.0771484375,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  branch = \"master\"\n  name = \"code.cloudfoundry.org/bytefmt\"\n  packages = [\".\"]\n  revision = \"f4415fafc5619dd75599a54a7c91fb3948ad58bd\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/Azure/go-ansiterm\"\n  packages = [\".\",\"winterm\"]\n  revision = \"fa152c58bc15761d0200cb75fe958b89a9d4888e\"\n\n[[projects]]\n  name = \"github.com/Microsoft/go-winio\"\n  packages = [\".\"]\n  revision = \"f533f7a102197536779ea3a8cb881d639e21ec5a\"\n  version = \"v0.4.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/Nvveen/Gotty\"\n  packages = [\".\"]\n  revision = \"cd527374f1e5bff4938207604a14f2e38a9cf512\"\n\n[[projects]]\n  name = \"github.com/PuerkitoBio/purell\"\n  packages = [\".\"]\n  revision = \"0bcb03f4b4d0a9428594752bd2a3b9aa0a9d4bd4\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/PuerkitoBio/urlesc\"\n  packages = [\".\"]\n  revision = \"bbf7a2afc14f93e1e0a5c06df524fbd75e5031e5\"\n\n[[projects]]\n  name = \"github.com/Sirupsen/logrus\"\n  packages = [\".\",\"hooks/syslog\"]\n  revision = \"ba1b36c82c5e05c4f912a88eab0dcd91a171688f\"\n  version = \"v0.11.5\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/amir/raidman\"\n  packages = [\".\",\"proto\"]\n  revision = \"1ccc43bfb9c93cb401a4025e49c64ba71e5e668b\"\n\n[[projects]]\n  name = \"github.com/asaskevich/govalidator\"\n  packages = [\".\"]\n  revision = \"4918b99a7cb949bb295f3c7bbaf24b577d806e35\"\n  version = \"v6\"\n\n[[projects]]\n  name = \"github.com/aws/aws-sdk-go\"\n  packages = [\"aws\",\"aws/awserr\",\"aws/awsutil\",\"aws/client\",\"aws/client/metadata\",\"aws/corehandlers\",\"aws/credentials\",\"aws/credentials/ec2rolecreds\",\"aws/credentials/endpointcreds\",\"aws/credentials/stscreds\",\"aws/defaults\",\"aws/ec2metadata\",\"aws/endpoints\",\"aws/request\",\"aws/session\",\"aws/signer/v4\",\"private/protocol\",\"private/protocol/json/jsonutil\",\"private/protocol/jsonrpc\",\"private/protocol/query\",\"private/protocol/query/queryutil\",\"private/protocol/rest\",\"private/protocol/restjson\",\"private/protocol/xml/xmlutil\",\"service/lambda\",\"service/sts\"]\n  revision = \"e0cdae7a65ba3a5e66a0af747a7b3967ddac099c\"\n  version = \"v1.8.30\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/boltdb/bolt\"\n  packages = [\".\"]\n  revision = \"e9cf4fae01b5a8ff89d0ec6b32f0d9c9f79aefdd\"\n\n[[projects]]\n  name = \"github.com/cactus/go-statsd-client\"\n  packages = [\"statsd\"]\n  revision = \"91c326c3f7bd20f0226d3d1c289dd9f8ce28d33d\"\n  version = \"v3.1.0\"\n\n[[projects]]\n  name = \"github.com/cenkalti/backoff\"\n  packages = [\".\"]\n  revision = \"32cd0c5b3aef12c76ed64aaf678f6c79736be7dc\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  name = \"github.com/coreos/go-semver\"\n  packages = [\"semver\"]\n  revision = \"8ab6407b697782a06568d4b7f1db25550ec2e4c6\"\n  version = \"v0.2.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/dghubble/go-twitter\"\n  packages = [\"twitter\"]\n  revision = \"d7141a7cba567120d53d0a136fce068864b43f8c\"\n\n[[projects]]\n  name = \"github.com/dghubble/oauth1\"\n  packages = [\".\"]\n  revision = \"70562a5920ad9b6ff03ef697c0f90ae569abbd2b\"\n  version = \"v0.4.0\"\n\n[[projects]]\n  name = \"github.com/dghubble/sling\"\n  packages = [\".\"]\n  revision = \"eb56e89ac5088bebb12eef3cb4b293300f43608b\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  name = \"github.com/dgrijalva/jwt-go\"\n  packages = [\".\",\"request\"]\n  revision = \"d2709f9f1f31ebcda9651b03077758c1f3a0018c\"\n  version = \"v3.0.0\"\n\n[[projects]]\n  name = \"github.com/docker/distribution\"\n  packages = [\".\",\"context\",\"digest\",\"manifest\",\"manifest/schema1\",\"manifest/schema2\",\"reference\",\"uuid\"]\n  revision = \"a25b9ef0c9fe242ac04bb20d3a028442b7d266b6\"\n  version = \"v2.6.1\"\n\n[[projects]]\n  name = \"github.com/docker/docker\"\n  packages = [\"api/types\",\"api/types/blkiodev\",\"api/types/container\",\"api/types/filters\",\"api/types/mount\",\"api/types/network\",\"api/types/registry\",\"api/types/strslice\",\"api/types/swarm\",\"api/types/versions\",\"opts\",\"pkg/archive\",\"pkg/fileutils\",\"pkg/homedir\",\"pkg/idtools\",\"pkg/ioutils\",\"pkg/jsonlog\",\"pkg/jsonmessage\",\"pkg/longpath\",\"pkg/pools\",\"pkg/promise\",\"pkg/stdcopy\",\"pkg/system\",\"pkg/term\",\"pkg/term/windows\"]\n  revision = \"90d35abf7b3535c1c319c872900fbd76374e521c\"\n  version = \"v17.05.0-ce-rc3\"\n\n[[projects]]\n  name = \"github.com/docker/go-connections\"\n  packages = [\"nat\"]\n  revision = \"990a1a1a70b0da4c4cb70e117971a4f0babfbf1a\"\n  version = \"v0.2.1\"\n\n[[projects]]\n  name = \"github.com/docker/go-units\"\n  packages = [\".\"]\n  revision = \"f2d77a61e3c169b43402a0a1e84f06daf29b8190\"\n  version = \"v0.3.1\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/docker/libtrust\"\n  packages = [\".\"]\n  revision = \"aabc10ec26b754e797f9028f4589c5b7bd90dc20\"\n\n[[projects]]\n  name = \"github.com/fsnotify/fsnotify\"\n  packages = [\".\"]\n  revision = \"629574ca2a5df945712d3079857300b5e4da0236\"\n  version = \"v1.4.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/fsouza/go-dockerclient\"\n  packages = [\".\"]\n  revision = \"c933ed18bef34ec2955de03de8ef9a3bb996e3df\"\n\n[[projects]]\n  name = \"github.com/garyburd/redigo\"\n  packages = [\"internal\",\"redis\"]\n  revision = \"433969511232c397de61b1442f9fd49ec06ae9ba\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  name = \"github.com/giantswarm/semver-bump\"\n  packages = [\"bump\",\"storage\"]\n  revision = \"88e6c9f2fe390c48839eaba32490fd09cb3b581c\"\n  version = \"1.1.1\"\n\n[[projects]]\n  name = \"github.com/gin-gonic/gin\"\n  packages = [\".\",\"binding\",\"render\"]\n  revision = \"e2212d40c62a98b388a5eb48ecbdcf88534688ba\"\n  version = \"v1.1.4\"\n\n[[projects]]\n  name = \"github.com/go-ini/ini\"\n  packages = [\".\"]\n  revision = \"36da989cdc560b989d8f195aec46214d33665d20\"\n  version = \"v1.27.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/analysis\"\n  packages = [\".\"]\n  revision = \"0473cb67199f68b8b7d90e641afd9e79ad36b851\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/errors\"\n  packages = [\".\"]\n  revision = \"03cfca65330da08a5a440053faf994a3c682b5bf\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/jsonpointer\"\n  packages = [\".\"]\n  revision = \"779f45308c19820f1a69e9a4cd965f496e0da10f\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/jsonreference\"\n  packages = [\".\"]\n  revision = \"36d33bfe519efae5632669801b180bf1a245da3b\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/loads\"\n  packages = [\".\",\"fmts\"]\n  revision = \"a80dea3052f00e5f032e860dd7355cd0cc67e24d\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/runtime\"\n  packages = [\".\",\"client\"]\n  revision = \"2e9e988df6c290425033bacd425e008950c96be6\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/spec\"\n  packages = [\".\"]\n  revision = \"e51c28f07047ad90caff03f6450908720d337e0c\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/strfmt\"\n  packages = [\".\"]\n  revision = \"93a31ef21ac23f317792fff78f9539219dd74619\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/swag\"\n  packages = [\".\"]\n  revision = \"e43299b4afa7bc7f22e5e82e3d48607230e4c177\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/validate\"\n  packages = [\".\"]\n  revision = \"035dcd74f1f61e83debe1c22950dc53556e7e4b2\"\n\n[[projects]]\n  name = \"github.com/go-resty/resty\"\n  packages = [\".\"]\n  revision = \"7a8134d8718193eb857994adee49d73a302e7718\"\n  version = \"v0.12\"\n\n[[projects]]\n  name = \"github.com/go-sql-driver/mysql\"\n  packages = [\".\"]\n  revision = \"a0583e0143b1624142adab07e0e97fe106d99561\"\n  version = \"v1.3\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/golang/groupcache\"\n  packages = [\"consistenthash\",\"singleflight\"]\n  revision = \"b710c8433bd175204919eb38776e944233235d03\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/golang/protobuf\"\n  packages = [\"proto\"]\n  revision = \"9f174c986221c608fb5143bd623b6076a71feae3\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/google/btree\"\n  packages = [\".\"]\n  revision = \"316fb6d3f031ae8f4d457c6c5186b9e3ded70435\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/google/go-querystring\"\n  packages = [\"query\"]\n  revision = \"53e6ce116135b80d037921a7fdd5138cf32d7a8a\"\n\n[[projects]]\n  name = \"github.com/gorilla/context\"\n  packages = [\".\"]\n  revision = \"1ea25387ff6f684839d82767c1733ff4d4d15d0a\"\n  version = \"v1.1\"\n\n[[projects]]\n  name = \"github.com/gorilla/mux\"\n  packages = [\".\"]\n  revision = \"bcd8bc72b08df0f70df986b97f95590779502d31\"\n  version = \"v1.4.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/hashicorp/go-cleanhttp\"\n  packages = [\".\"]\n  revision = \"3573b8b52aa7b37b9358d966a898feb387f62437\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/hashicorp/hcl\"\n  packages = [\".\",\"hcl/ast\",\"hcl/parser\",\"hcl/scanner\",\"hcl/strconv\",\"hcl/token\",\"json/parser\",\"json/scanner\",\"json/token\"]\n  revision = \"392dba7d905ed5d04a5794ba89f558b27e2ba1ca\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/heroku/docker-registry-client\"\n  packages = [\"registry\"]\n  revision = \"95467b6cacee2a06f112a3cf7e47a70fad6000cf\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/iron-io/functions_go\"\n  packages = [\".\",\"client\",\"client/apps\",\"client/routes\",\"client/tasks\",\"client/version\",\"models\"]\n  revision = \"c17755329668826e1e8571b0b5d965e14ec3a85b\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/iron-io/iron_go3\"\n  packages = [\"api\",\"config\",\"mq\"]\n  revision = \"830335d420db87fc84cbff7f0d1348a46b499946\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/iron-io/runner\"\n  packages = [\"common\",\"common/stats\",\"drivers\",\"drivers/docker\",\"drivers/mock\"]\n  revision = \"0f2736fbfb404bdc882c70fd0c498176afc020a7\"\n\n[[projects]]\n  name = \"github.com/jmespath/go-jmespath\"\n  packages = [\".\"]\n  revision = \"3433f3ea46d9f8019119e7dd41274e112a2359a9\"\n  version = \"0.2.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/jmoiron/jsonq\"\n  packages = [\".\"]\n  revision = \"e874b168d07ecc7808bc950a17998a8aa3141d82\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/juju/errgo\"\n  packages = [\"errors\"]\n  revision = \"08cceb5d0b5331634b9826762a8fd53b29b86ad8\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/lib/pq\"\n  packages = [\".\",\"oid\"]\n  revision = \"2704adc878c21e1329f46f6e56a1c387d788ff94\"\n\n[[projects]]\n  name = \"github.com/magiconair/properties\"\n  packages = [\".\"]\n  revision = \"f917359f079a3759162704eaa8caeec3d01d9f91\"\n  version = \"v1.7.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/mailru/easyjson\"\n  packages = [\"buffer\",\"jlexer\",\"jwriter\"]\n  revision = \"44c0351a5bc860bcb2608d54aa03ea686c4e7b25\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/manucorporat/sse\"\n  packages = [\".\"]\n  revision = \"ee05b128a739a0fb76c7ebd3ae4810c1de808d6d\"\n\n[[projects]]\n  name = \"github.com/mattn/go-isatty\"\n  packages = [\".\"]\n  revision = \"fc9e8d8ef48496124e79ae0df75490096eccf6fe\"\n  version = \"v0.0.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/mitchellh/mapstructure\"\n  packages = [\".\"]\n  revision = \"d0303fe809921458f417bcf828397a65db30a7e4\"\n\n[[projects]]\n  name = \"github.com/moby/moby\"\n  packages = [\"cli/config/configfile\"]\n  revision = \"90d35abf7b3535c1c319c872900fbd76374e521c\"\n  version = \"v17.05.0-ce-rc3\"\n\n[[projects]]\n  name = \"github.com/opencontainers/runc\"\n  packages = [\"libcontainer/system\",\"libcontainer/user\"]\n  revision = \"baf6536d6259209c3edfa2b22237af82942d3dfa\"\n  version = \"v0.1.1\"\n\n[[projects]]\n  name = \"github.com/pelletier/go-buffruneio\"\n  packages = [\".\"]\n  revision = \"c37440a7cf42ac63b919c752ca73a85067e05992\"\n  version = \"v0.2.0\"\n\n[[projects]]\n  name = \"github.com/pelletier/go-toml\"\n  packages = [\".\"]\n  revision = \"13d49d4606eb801b8f01ae542b4afc4c6ee3d84a\"\n  version = \"v0.5.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/petar/GoLLRB\"\n  packages = [\"llrb\"]\n  revision = \"53be0d36a84c2a886ca057d34b6aa4468df9ccb4\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/pkg/errors\"\n  packages = [\".\"]\n  revision = \"c605e284fe17294bda444b34710735b29d1a9d90\"\n\n[[projects]]\n  name = \"github.com/satori/go.uuid\"\n  packages = [\".\"]\n  revision = \"879c5887cd475cd7864858769793b2ceb0d44feb\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/spf13/afero\"\n  packages = [\".\",\"mem\"]\n  revision = \"9be650865eab0c12963d8753212f4f9c66cdcf12\"\n\n[[projects]]\n  name = \"github.com/spf13/cast\"\n  packages = [\".\"]\n  revision = \"acbeb36b902d72a7a4c18e8f3241075e7ab763e4\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/spf13/jwalterweatherman\"\n  packages = [\".\"]\n  revision = \"0efa5202c04663c757d84f90f5219c1250baf94f\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/spf13/pflag\"\n  packages = [\".\"]\n  revision = \"e57e3eeb33f795204c1ca35f56c44f83227c6e66\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/spf13/viper\"\n  packages = [\".\"]\n  revision = \"0967fc9aceab2ce9da34061253ac10fb99bba5b2\"\n\n[[projects]]\n  name = \"github.com/ucirello/supervisor\"\n  packages = [\".\"]\n  revision = \"f1f5037005c3f2655a1419fe78242583ca60132c\"\n  version = \"v0.5.2\"\n\n[[projects]]\n  name = \"github.com/urfave/cli\"\n  packages = [\".\"]\n  revision = \"0bdeddeeb0f650497d603c4ad7b20cfe685682f6\"\n  version = \"v1.19.1\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n  packages = [\"bcrypt\",\"blowfish\"]\n  revision = \"7e9105388ebff089b3f99f0ef676ea55a6da3a7e\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/net\"\n  packages = [\"context\",\"context/ctxhttp\",\"idna\",\"proxy\",\"publicsuffix\"]\n  revision = \"3da985ce5951d99de868be4385f21ea6c2b22f24\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/sys\"\n  packages = [\"unix\",\"windows\"]\n  revision = \"b90f89a1e7a9c1f6b918820b3daa7f08488c8594\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/text\"\n  packages = [\"internal/gen\",\"internal/triegen\",\"internal/ucd\",\"secure/bidirule\",\"transform\",\"unicode/bidi\",\"unicode/cldr\",\"unicode/norm\",\"unicode/rangetable\",\"width\"]\n  revision = \"19e51611da83d6be54ddafce4a4af510cb3e9ea4\"\n\n[[projects]]\n  name = \"gopkg.in/go-playground/validator.v8\"\n  packages = [\".\"]\n  revision = \"5f57d2222ad794d0dffb07e664ea05e2ee07d60c\"\n  version = \"v8.18.1\"\n\n[[projects]]\n  branch = \"v2\"\n  name = \"gopkg.in/mgo.v2\"\n  packages = [\".\",\"bson\",\"internal/json\",\"internal/sasl\",\"internal/scram\"]\n  revision = \"3f83fa5005286a7fe593b055f0d7771a7dce4655\"\n\n[[projects]]\n  branch = \"v2\"\n  name = \"gopkg.in/yaml.v2\"\n  packages = [\".\"]\n  revision = \"cd8b52f8269e0feb286dfeef29f8fe4d5b397e0b\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  inputs-digest = \"ef62003d4ceb634fb5518324069e8f30e46dd1df5ec5de8527789f2acf0a1c72\"\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 4.701171875,
          "content": "\n## Gopkg.toml example (these lines may be deleted)\n\n## \"required\" lists a set of packages (not projects) that must be included in\n## Gopkg.lock. This list is merged with the set of packages imported by the current\n## project. Use it when your project needs a package it doesn't explicitly import -\n## including \"main\" packages.\n# required = [\"github.com/user/thing/cmd/thing\"]\n\n## \"ignored\" lists a set of packages (not projects) that are ignored when\n## dep statically analyzes source code. Ignored packages can be in this project,\n## or in a dependency.\n# ignored = [\"github.com/user/project/badpkg\"]\n\n## Dependencies define constraints on dependent projects. They are respected by\n## dep whether coming from the Gopkg.toml of the current project or a dependency.\n# [[dependencies]]\n## Required: the root import path of the project being constrained.\n# name = \"github.com/user/project\"\n#\n## Recommended: the version constraint to enforce for the project.\n## Only one of \"branch\", \"version\" or \"revision\" can be specified.\n# version = \"1.0.0\"\n# branch = \"master\"\n# revision = \"abc123\"\n#\n## Optional: an alternate location (URL or import path) for the project's source.\n# source = \"https://github.com/myfork/package.git\"\n\n## Overrides have the same structure as [[dependencies]], but supercede all\n## [[dependencies]] declarations from all projects. Only the current project's\n## [[overrides]] are applied.\n##\n## Overrides are a sledgehammer. Use them only as a last resort.\n# [[overrides]]\n## Required: the root import path of the project being constrained.\n# name = \"github.com/user/project\"\n#\n## Optional: specifying a version constraint override will cause all other\n## constraints on this project to be ignored; only the overriden constraint\n## need be satisfied.\n## Again, only one of \"branch\", \"version\" or \"revision\" can be specified.\n# version = \"1.0.0\"\n# branch = \"master\"\n# revision = \"abc123\"\n#\n## Optional: specifying an alternate source location as an override will\n## enforce that the alternate location is used for that project, regardless of\n## what source location any dependent projects specify.\n# source = \"https://github.com/myfork/package.git\"\n\n\n\n[[dependencies]]\n  name = \"github.com/Sirupsen/logrus\"\n  version = \"^0.11.5\"\n\n[[dependencies]]\n  name = \"github.com/aws/aws-sdk-go\"\n  version = \"^1.8.30\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/boltdb/bolt\"\n\n[[dependencies]]\n  name = \"github.com/ucirello/supervisor\"\n  version = \"^0.5.3\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/dghubble/go-twitter\"\n\n[[dependencies]]\n  name = \"github.com/dghubble/oauth1\"\n  version = \"^0.4.0\"\n\n[[dependencies]]\n  name = \"github.com/dgrijalva/jwt-go\"\n  version = \"^3.0.0\"\n\n[[dependencies]]\n  name = \"github.com/docker/docker\"\n  version = \"^17.5.0-ce-rc3\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/fsouza/go-dockerclient\"\n\n[[dependencies]]\n  name = \"github.com/garyburd/redigo\"\n  version = \"^1.1.0\"\n\n[[dependencies]]\n  name = \"github.com/giantswarm/semver-bump\"\n  version = \"^1.1.1\"\n\n[[dependencies]]\n  name = \"github.com/gin-gonic/gin\"\n  version = \"^1.1.4\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/errors\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/loads\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/runtime\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/spec\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/strfmt\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/swag\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/go-openapi/validate\"\n\n[[dependencies]]\n  name = \"github.com/go-sql-driver/mysql\"\n  version = \"^1.3.0\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/golang/groupcache\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/google/btree\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/iron-io/functions_go\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/iron-io/iron_go3\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/iron-io/runner\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/jmoiron/jsonq\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/lib/pq\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/pkg/errors\"\n\n[[dependencies]]\n  name = \"github.com/satori/go.uuid\"\n  version = \"^1.1.0\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"github.com/spf13/viper\"\n\n[[dependencies]]\n  name = \"github.com/urfave/cli\"\n  version = \"^1.19.1\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n\n[[dependencies]]\n  branch = \"master\"\n  name = \"golang.org/x/sys\"\n\n[[dependencies]]\n  branch = \"v2\"\n  name = \"gopkg.in/mgo.v2\"\n\n[[dependencies]]\n  branch = \"v2\"\n  name = \"gopkg.in/yaml.v2\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 Iron.io\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.470703125,
          "content": "# Just builds\n.PHONY: all test dep build\n\ndep:\n\tdep ensure\n\nbuild:\n\tgo build -o functions\n\nclean-db:\n\trm -f /tmp/bolt_fn_*.db\n\ntest: clean-db\n\tgo test -v $(shell go list ./... | grep -v vendor | grep -v examples | grep -v tool | grep -v fn)\n\tcd fn && $(MAKE) test\n\ntest-tag: clean-db\n\tgo test -v $(shell go list ./... | grep -v vendor | grep -v examples | grep -v tool | grep -v fn) -tags=$(TAG)\n\ntest-datastore:\n\tcd api/datastore && go test -v ./...\n\ntest-build-arm:\n    GOARCH=arm GOARM=5 $(MAKE) build\n    GOARCH=arm GOARM=6 $(MAKE) build\n    GOARCH=arm GOARM=7 $(MAKE) build\n    GOARCH=arm64 $(MAKE) build\n\nrun:\n\t./functions\n\ndocker-build:\n\tdocker run --rm -v ${CURDIR}:/go/src/github.com/iron-io/functions -w /go/src/github.com/iron-io/functions iron/go:dev go build -o functions-alpine\n\tdocker build -t iron/functions:latest .\n\ndocker-run: docker-build\n\tdocker run --rm --privileged -it -e LOG_LEVEL=debug -e \"DB_URL=bolt:///app/data/bolt.db\" -v ${CURDIR}/data:/app/data -p 8080:8080 iron/functions\n\ndocker-test:\n\tdocker run -ti --privileged --rm -e LOG_LEVEL=debug \\\n\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v ${CURDIR}:/go/src/github.com/iron-io/functions \\\n\t-w /go/src/github.com/iron-io/functions iron/go:dev go test \\\n\t-v $(shell docker run -ti -v ${CURDIR}:/go/src/github.com/iron-io/functions -w /go/src/github.com/iron-io/functions -e GOPATH=/go golang:alpine sh -c 'go list ./... | grep -v vendor | grep -v examples | grep -v tool | grep -v fn | grep -v datastore')\n\nall: dep build\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.0849609375,
          "content": "![IronFunctions](docs/assets/logo-black-400w.png)\n\n[![CircleCI](https://circleci.com/gh/iron-io/functions.svg?style=svg)](https://circleci.com/gh/iron-io/functions)\n[![GoDoc](https://godoc.org/github.com/iron-io/functions?status.svg)](https://godoc.org/github.com/iron-io/functions)\n\nWelcome to IronFunctions! The open source serverless platform.\n\n## What is IronFunctions?\n\nIronFunctions is an open source serverless platform, or as we like to refer to it, Functions as a\nService (FaaS) platform that you can run anywhere.\n\n* Write once\n  * [Any language](docs/faq.md#which-languages-are-supported)\n  * [AWS Lambda format supported](docs/lambda/README.md)\n* [Run anywhere](docs/faq.md#where-can-i-run-ironfunctions)\n  * Public, private and hybrid cloud\n  * [Import functions directly from Lambda](docs/lambda/import.md) and run them wherever you want\n* Easy to use [for developers](docs/README.md#for-developers)\n* Easy to manage [for operators](docs/README.md#for-operators)\n* Written in [Go](https://golang.org)\n\n## What is Serverless/FaaS?\n\nServerless is a new paradigm in computing that enables simplicity, efficiency and scalability for both developers\nand operators. It's important to distinguish the two, because the benefits differ:\n\n### Benefits for developers\n\nThe main benefits that most people refer to are on the developer side and they include:\n\n* No servers to manage (serverless) -- you just upload your code and the platform deals with the infrastructure\n* Super simple coding -- no more monoliths! Just simple little bits of code\n* Pay by the milliseconds your code is executing -- unlike a typical application that runs 24/7, and you're paying\n  24/7, functions only run when needed\n\nSince you'll be running IronFunctions yourself, the paying part may not apply, but it does apply to\ncost savings on your infrastructure bills as you'll read below.\n\n### Benefits for operators\n\nIf you will be operating IronFunctions (the person who has to manage the servers behind the serverless),\nthen the benefits are different, but related.\n\n* Extremely efficient use of resources\n  * Unlike an app/API/microservice that consumes resources 24/7 whether they\n    are in use or not, functions are time sliced across your infrastructure and only consume resources while they are\n    actually doing something\n* Easy to manage and scale\n  * Single system for code written in any language or any technology\n  * Single system to monitor\n  * Scaling is the same for all functions, you don't scale each app independently\n  * Scaling is simply adding more IronFunctions nodes\n\nThere is a lot more reading you can do on the topic, just search for [\"what is serverless\"](https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=what%20is%20serverless)\nand you'll find plenty of information. We have pretty thorough post on the Iron.io blog called\n[What is Serverless Computing and Why is it Important](https://www.iron.io/what-is-serverless-computing/).\n\n## Join Our Community\n\nJoin our Slack community to get help and give feedback.\n\n[![Slack Status](https://iron-functions-slack.herokuapp.com/badge.svg)](\nhttp://get.iron.io/functions-slack)\n\n## Quickstart\n\nThis guide will get you up and running in a few minutes.\n\n### Prequisites\n\n* Docker 1.12 or later installed and running\n* Logged into Docker Hub (`docker login`)\n\n### Run IronFunctions\n\nTo get started quickly with IronFunctions, just fire up an `iron/functions` container:\n\n```sh\ndocker run --rm -it --name functions -v ${PWD}/data:/app/data -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 iron/functions\n```\n\n*where ${PWD}/data is the directory where the functions application data files will be stored*\n\nThis will start IronFunctions in single server mode, using an embedded database and message queue. You can find all the\nconfiguration options [here](docs/operating/options.md). If you are on Windows, check [here](docs/operating/windows.md).\n\n### CLI tool\n\nInstall the IronFunctions CLI tool:\n\n```sh\ncurl -LSs git.io/ironfn | sh\n```\n\nThis will download a shell script and execute it.  If the script asks for a password, that is because it invokes sudo.\n\nOnce installed close and re-open the terminal so the installed command `fn` is in your path.\n\n#### on OSX with HomeBrew:\n\n```sh\nbrew install iron-functions\n```\n\n### Write a Function\n\nFunctions are small, bite sized bits of code that do one simple thing. Forget about monoliths when using functions,\njust focus on the task that you want the function to perform.\n\nThe following is a Go function that just returns \"Hello ${NAME}!\":\n\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n)\n\ntype Person struct {\n\tName string\n}\n\nfunc main() {\n\tp := &Person{Name: \"World\"}\n\tjson.NewDecoder(os.Stdin).Decode(p)\n\tfmt.Printf(\"Hello %v!\", p.Name)\n}\n```\n\nMake a new folder and cd into that folder then copy and paste the code above into a file called `func.go`. From that folder run the following commands to build your function and deploy it:\n\n```sh\n# create func.yaml file, replace $USERNAME with your Docker Hub username.\nfn init $USERNAME/hello\n# build the function\nfn build\n# test it - you can pass data into it too by piping it in, eg: `cat hello.payload.json | fn run`\nfn run\n# Once it's ready, build and push it to Docker Hub\nfn build && fn push\n# create an app - you only do this once per app\nfn apps create myapp\n# create a route that maps /hello to your new function\nfn routes create myapp /hello\n```\n\nNow you can call your function:\n\n```sh\ncurl http://localhost:8080/r/myapp/hello\n```\n\nOr surf to it: http://localhost:8080/r/myapp/hello\n\nTo update your function:\n\n```sh\n# update a function with a new version and push it\nfn bump && fn build && fn push\n# then update the route\nfn routes update myapp /hello\n```\n\nSee below for more details. And you can find a bunch of examples in various languages in the [examples](examples/) directory. You can also\nwrite your functions in AWS's [Lambda format](docs/lambda/README.md).\n\n## Usage\n\nThis is a more detailed explanation of the main commands you'll use in IronFunctions as a developer.\n\n### Create an Application\n\nAn application is essentially a grouping of functions, that put together, form an API. Here's how to create an app.\n\n```sh\nfn apps create myapp\n```\n\nOr using a cURL:\n\n```sh\ncurl -H \"Content-Type: application/json\" -X POST -d '{\n    \"app\": { \"name\":\"myapp\" }\n}' http://localhost:8080/v1/apps\n```\n\n[More on apps](docs/apps.md).\n\nNow that we have an app, we can route endpoints to functions.\n\n### Add a Route\n\nA route is a way to define a path in your application that maps to a function. In this example, we'll map\n`/hello` to a simple `Hello World!` function called `iron/hello` which is a function we already made that you\ncan use -- yes, you can share functions! The source code for this function is in the [examples directory](examples/hello/go).\nYou can read more about [writing your own functions here](docs/writing.md).\n\n```sh\nfn routes create myapp /hello -i iron/hello\n```\n\nOr using cURL:\n\n```sh\ncurl -H \"Content-Type: application/json\" -X POST -d '{\n    \"route\": {\n        \"path\":\"/hello\",\n        \"image\":\"iron/hello\"\n    }\n}' http://localhost:8080/v1/apps/myapp/routes\n```\n\n[More on routes](docs/operating/routes.md).\n\n### Authentication\n\nIron Functions API supports two levels of Authentication in two seperate scopes, service level authentication,\n(Which authenticates all requests made to the server from any client) and route level authentication.\nRoute level authentication is applied whenever a function call made to a specific route.\n\nPlease check [Authentication](docs/authentication.md) documentation for more information.\n\n### Calling your Function\n\nCalling your function is as simple as requesting a URL. Each app has its own namespace and each route mapped to the app.\nThe app `myapp` that we created above along with the `/hello` route we added would be called via the following\nURL: http://localhost:8080/r/myapp/hello\n\nEither surf to it in your browser or use `fn`:\n\n```sh\nfn call myapp /hello\n```\n\nOr using a cURL:\n\n```sh\ncurl http://localhost:8080/r/myapp/hello\n```\n\n### Passing data into a function\n\nYour function will get the body of the HTTP request via STDIN, and the headers of the request will be passed in\nas env vars. You can test a function with the CLI tool:\n\n```sh\necho '{\"name\":\"Johnny\"}' | fn call myapp /hello\n```\n\nOr using cURL:\n\n```sh\ncurl -H \"Content-Type: application/json\" -X POST -d '{\n    \"name\":\"Johnny\"\n}' http://localhost:8080/r/myapp/hello\n```\n\nYou should see it say `Hello Johnny!` now instead of `Hello World!`.\n\n### Add an asynchronous function\n\nIronFunctions supports synchronous function calls like we just tried above, and asynchronous for background processing.\n\nAsynchronous function calls are great for tasks that are CPU heavy or take more than a few seconds to complete.\nFor instance, image processing, video processing, data processing, ETL, etc.\nArchitecturally, the main difference between synchronous and asynchronous is that requests\nto asynchronous functions are put in a queue and executed on upon resource availability so that they do not interfere with the fast synchronous responses required for an API.\nAlso, since it uses a message queue, you can queue up millions of function calls without worrying about capacity as requests will\njust be queued up and run at some point in the future.\n\nTo add an asynchronous function, create another route with the `\"type\":\"async\"`, for example:\n\n```sh\ncurl -H \"Content-Type: application/json\" -X POST -d '{\n    \"route\": {\n        \"type\": \"async\",\n        \"path\":\"/hello-async\",\n        \"image\":\"iron/hello\"\n    }\n}' http://localhost:8080/v1/apps/myapp/routes\n```\n\nNow if you request this route:\n\n```sh\ncurl -H \"Content-Type: application/json\" -X POST -d '{\n    \"name\":\"Johnny\"\n}' http://localhost:8080/r/myapp/hello-async\n```\n\nYou will get a `call_id` in the response:\n\n```json\n{\"call_id\":\"572415fd-e26e-542b-846f-f1f5870034f2\"}\n```\n\nIf you watch the logs, you will see the function actually runs in the background:\n\n![async log](docs/assets/async-log.png)\n\nRead more on [logging](docs/logging.md).\n\n## Functions UI\n\n```sh\ndocker run --rm -it --link functions:api -p 4000:4000 -e \"API_URL=http://api:8080\" iron/functions-ui\n```\n\nFor more information, see: https://github.com/iron-io/functions-ui\n\n## Writing Functions\n\nSee [Writing Functions](docs/writing.md).\n\nAnd you can find a bunch of examples in the [/examples](/examples) directory.\n\n## More Documentation\n\nSee [docs/](docs/README.md) for full documentation.\n\n## Roadmap\n\nThese are the high level roadmap goals. See [milestones](https://github.com/iron-io/functions/milestones) for detailed issues.\n\n* ~~Alpha 1 - November 2016~~\n  * Initial release of base framework\n  * Lambda support\n* ~~Alpha 2 - December 2016~~\n  * Streaming input for hot functions #214\n  * Logging endpoint(s) for per function debugging #263\n* Beta 1 - January 2017\n  * Smart Load Balancer #151\n* Beta 2 - February 2017\n  * Cron like scheduler #100\n* GA - March 2017\n\n## Support\n\nYou can get community support via:\n\n* [Stack Overflow](http://stackoverflow.com/questions/tagged/ironfunctions)\n* [Slack](http://get.iron.io/functions-slack)\n\nYou can get commercial support by contacting [Iron.io](https://iron.io/contact)\n\n## Want to contribute to IronFunctions?\n\nSee [contributing](CONTRIBUTING.md).\n"
        },
        {
          "name": "THIRD_PARTY",
          "type": "blob",
          "size": 0.263671875,
          "content": "This software uses third-party software.\n\nFor: api/server/tree.go\nCopyright 2013 Julien Schmidt. All rights reserved. BSD-license\n\nFor: api/server/internal/routecache/lru.go\nFor: api/server/singleflight.go\nCopyright 2012 Google Inc. All rights reserved. Apache 2 license"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.9755859375,
          "content": "# Build script for PowerShell\n$ErrorActionPreference = \"Stop\"\n\n$cmd = $args[0]\nWrite-Host \"cmd: $cmd\"\n\n\nfunction quick() {\n     try {\n        go build\n        if (-not $?) {\n            Write-Host \"build failed!\" # WTH, error handling in powershell sucks\n            exit\n        }\n    } catch {\n        # This try/catch thing doesn't work, the above if statement does work though\n        Write-Host \"build failed 2!\"\n        exit\n    }\n    ./functions\n}\n\nfunction build () {\n    docker run --rm -v ${pwd}:/go/src/github.com/iron-io/functions -w /go/src/github.com/iron-io/functions iron/go:dev go build -o functions-alpine\n    docker build -t iron/functions:latest .\n}\n\nfunction run () {\n    docker run --rm --name functions -it -v /var/run/docker.sock:/var/run/docker.sock -e LOG_LEVEL=debug -e \"DB_URL=bolt:///app/data/bolt.db\" -v $PWD/data:/app/data -p 8080:8080 iron/functions\n}\n\nswitch ($cmd)\n{\n    \"quick\" {quick}\n    \"build\" { build }\n    \"run\" {run}\n    default {\"Invalid command: $cmd\"}\n}\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 1.330078125,
          "content": "machine:\n  environment:\n    CHECKOUT_DIR: $HOME/$CIRCLE_PROJECT_REPONAME\n    GOPATH: $HOME/go\n    GOROOT: $HOME/golang/go\n    PATH: $GOROOT/bin:$GOPATH/bin:/$PATH\n    GH_IRON: $GOPATH/src/github.com/iron-io\n    GO_PROJECT: ../go/src/github.com/iron-io/$CIRCLE_PROJECT_REPONAME\n  services:\n    - docker\n\ncheckout:\n  post:\n    - mkdir -p \"$GH_IRON\"\n    - cp -R \"$CHECKOUT_DIR\" \"$GH_IRON/$CIRCLE_PROJECT_REPONAME\"\n\ndependencies:\n  pre:\n    - wget https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz\n    - mkdir -p $HOME/golang\n    - tar -C $HOME/golang -xvzf go1.8.linux-amd64.tar.gz\n    - go get -u github.com/golang/dep/...\n  override:\n    - which go && go version\n    - make dep:\n        pwd: $GO_PROJECT\n\ntest:\n  override:\n    - make test:\n        pwd: $GO_PROJECT\n    - make test-tag TAG=integration:\n        pwd: $GO_PROJECT\n    - make test-tag TAG=server:\n        pwd: $GO_PROJECT\n    - make test-build-arm:\n        pwd: $GO_PROJECT\n    - go build:\n        pwd: $GO_PROJECT/examples/middleware\n    - go build:\n        pwd: $GO_PROJECT/examples/extensions\n\ndeployment:\n  release:\n    branch: master\n    owner: iron-io\n    commands:\n      - git config --global user.email \"circleci@iron.io\"\n      - git config --global user.name \"CircleCI\"\n      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS\n      - cd $GO_PROJECT && ./release.sh\n"
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.7919921875,
          "content": "/*\nIronFunctions daemon\n\nRefer to detailed documentation at https://github.com/iron-io/functions/tree/master/docs\n\nEnvironment Variables:\nDB_URL\nThe database URL to use in URL format. See [Databases](databases/README.md) for more information. Default: BoltDB in current working directory `bolt.db`.\n\nMQ_URL\nThe message queue to use in URL format. See [Message Queues](mqs/README.md) for more information. Default: BoltDB in current working directory `queue.db`.\n\nAPI_URL\nThe primary IronFunctions API URL to that this instance will talk to. In a production environment, this would be your load balancer URL.\n\nPORT\nSets the port to run on. Default: `8080`.\n\nNUM_ASYNC\nThe number of async runners in the functions process (default 1).\n\nLOG_LEVEL\nSet to `DEBUG` to enable debugging. Default: INFO.\n*/\npackage main\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fn",
          "type": "tree",
          "content": null
        },
        {
          "name": "lb",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.2373046875,
          "content": "package main\n\nimport (\n\t\"context\"\n\n\t\"github.com/iron-io/functions/api/server\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\n\tfuncServer := server.NewFromEnv(ctx)\n\t// Setup your custom extensions, listeners, etc here\n\n\tfuncServer.Start(ctx)\n}\n"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 0.841796875,
          "content": "#!/bin/bash\nset -ex\n\nuser=\"iron\"\nservice=\"functions\"\nversion_file=\"api/version/version.go\"\ntag=\"latest\"\n\nif [ -z $(grep -m1 -Eo \"[0-9]+\\.[0-9]+\\.[0-9]+\" $version_file) ]; then\n  echo \"did not find semantic version in $version_file\"\n  exit 1\nfi\n\nperl -i -pe 's/\\d+\\.\\d+\\.\\K(\\d+)/$1+1/e' $version_file\nversion=$(grep -m1 -Eo \"[0-9]+\\.[0-9]+\\.[0-9]+\" $version_file)\necho \"Version: $version\"\n\nmake docker-build\n\nsed \"s/release=.*/release=\\\"$version\\\"/g\" fn/install.sh > fn/install.sh.tmp\nmv fn/install.sh.tmp fn/install.sh\n\ngit add -u\ngit commit -m \"$service: $version release [skip ci]\"\ngit tag -f -a \"$version\" -m \"version $version\"\ngit push\ngit push origin $version\n\n# Finally tag and push docker images\ndocker tag $user/$service:$tag $user/$service:$version\n\ndocker push $user/$service:$version\ndocker push $user/$service:$tag\n\ncd fn\n./release.sh $version\ncd ..\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}