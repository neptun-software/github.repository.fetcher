{
  "metadata": {
    "timestamp": 1736566774544,
    "page": 331,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/trillian",
      "stars": 3576,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2763671875,
          "content": "*.iml\n*.swo\n*.swp\n*.tfstate\n*.tfstate.backup\n*~\n/.idea\n/bazel-*\n/commit_log\n/coverage.txt\n/createtree\n/ct_hammer\n/ct_server\n/dump_tree\n/licenses\n/loglb\n/maphammer\n/mapreplay\n/mdmtest\n/protoc\n/trillian_log_server\n/trillian_log_signer\n/trillian_map_server\ndefault.etcd\ncockroach-data/\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 1.0224609375,
          "content": "run:\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  deadline: 90s\n  skip-files:\n    - types/internal/tls/tls.go\n\nlinters-settings:\n  gocyclo:\n    # minimal code complexity to report, 30 by default (but we recommend 10-20)\n    # TODO(mhutchinson): lower this again after reworking interceptor\n    min-complexity: 26\n  depguard:\n    list-type: blacklist\n    packages:\n      - golang.org/x/net/context\n      - github.com/gogo/protobuf/proto\n\nissues:\n  # Don't turn off any checks by default. We can do this explicitly if needed.\n  exclude-use-default: false\n\n  exclude-rules:\n    # The following grpc linters are excluded because grpc.Dial, grpc.DialContext and grpc.WithBlock will be supported throughout 1.x.\n    - linters: [staticcheck]\n      text: 'SA1019: grpc.Dial is deprecated: use NewClient instead'\n    - linters: [staticcheck]\n      text: 'SA1019: grpc.DialContext is deprecated: use NewClient instead'\n    - linters: [staticcheck]\n      text: 'SA1019: grpc.WithBlock is deprecated: this DialOption is not supported by NewClient'\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.4580078125,
          "content": "# This is the official list of benchmark authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n#\n# Names should be added to this file as:\n#\tName or Organization <email address>\n# The email address is not required for organizations.\n#\n# Please keep the list sorted.\n\nAntonio Marcedone <a.marcedone@gmail.com>\nGoogle LLC\nInternet Security Research Group\nSectigo Limited\nVishal Kuo <vishalkuo@gmail.com>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 118.94921875,
          "content": "# TRILLIAN Changelog\n\n## HEAD\n\n## v1.7.1\n\n### Storage\n\n* For PostgreSQL, explicitly create index on SequencedLeafData(TreeId, LeafIdentityHash) by @robstradling in https://github.com/google/trillian/pull/3695\n\n### Misc\n\n* Relaxed go.mod version requirements to `1.22.x`\n\n## v1.7.0\n\n### Storage\n\n* Add PostgreSQL quota manager and storage backend by @robstradling in https://github.com/google/trillian/pull/3644\n* PostgreSQL deployment example by @robstradling in https://github.com/google/trillian/pull/3675\n* PostgreSQL documentation / consistency fixes by @robstradling in https://github.com/google/trillian/pull/3676\n* Use a PostgreSQL service container in the GitHub workflow by @robstradling in https://github.com/google/trillian/pull/3680\n* Correct hostname and 'root' user in PostgreSQL deployment example by @robstradling in https://github.com/google/trillian/pull/3682\n\n### Misc\n\n* Updated batchmap docs by @mhutchinson in https://github.com/google/trillian/pull/3649\n* Documented using the Prism runner by @mhutchinson in https://github.com/google/trillian/pull/3656\n* [Dependabot] Use multi-directory config for docker by @mhutchinson in https://github.com/google/trillian/pull/3671\n* Removed unused/unreferenced Dockerfile by @mhutchinson in https://github.com/google/trillian/pull/3674\n* Control included quota and storage providers via build tags by @robstradling in https://github.com/google/trillian/pull/3664\n* Pin Docker container images by hash by @roger2hk in https://github.com/google/trillian/pull/3678\n* Add postgresql Docker image to Dependabot by @roger2hk in https://github.com/google/trillian/pull/3677\n* Sensible default quota and storage systems when MySQL support unavailable by @robstradling in https://github.com/google/trillian/pull/3679\n\n### Dependency updates\n\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3610\n* Bump go from 1.22.6 to 1.22.7 by @roger2hk in https://github.com/google/trillian/pull/3618\n* Bump golang from 1.23.0-bookworm to 1.23.1-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3614\n* Bump google-auth-library from 9.14.0 to 9.14.1 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3611\n* Bump the npm_and_yarn group in /scripts/gcb2slack with 2 updates by @dependabot in https://github.com/google/trillian/pull/3619\n* Bump the go-deps group across 1 directory with 9 updates by @dependabot in https://github.com/google/trillian/pull/3617\n* Bump alpine from `0a4eaa0` to `beefdbd` in /examples/deployment/docker/envsubst in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3615\n* Bump the docker-deps group in /examples/deployment/docker/log_server with 2 updates by @dependabot in https://github.com/google/trillian/pull/3616\n* Bump golang from 1.23.0-bookworm to 1.23.1-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3613\n* Bump the docker-deps group in /examples/deployment/docker/log_signer with 2 updates by @dependabot in https://github.com/google/trillian/pull/3612\n* Bump the npm_and_yarn group in /scripts/gcb2slack with 2 updates by @dependabot in https://github.com/google/trillian/pull/3623\n* Bump body-parser from 1.20.2 to 1.20.3 in /scripts/gcb2slack in the npm_and_yarn group by @dependabot in https://github.com/google/trillian/pull/3624\n* Bump the go-deps group with 7 updates by @dependabot in https://github.com/google/trillian/pull/3621\n* Bump github/codeql-action from 3.26.6 to 3.26.7 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3620\n* Bump the go-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3625\n* Bump github/codeql-action from 3.26.7 to 3.26.8 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3626\n* Bump distroless/base-debian12 from `c925d12` to `88e0a2a` in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3627\n* Bump distroless/base-debian12 from `c925d12` to `88e0a2a` in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3629\n* Bump ubuntu from `adbb901` to `58b8789` in /examples/deployment/kubernetes/mysql/image in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3628\n* Bump google.golang.org/grpc from 1.66.2 to 1.67.0 in the go-deps group by @dependabot in https://github.com/google/trillian/pull/3630\n* Bump the go-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3635\n* Bump the docker-deps group in /examples/deployment/docker/log_signer with 2 updates by @dependabot in https://github.com/google/trillian/pull/3632\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3633\n* Bump the docker-deps group in /examples/deployment/docker/log_server with 2 updates by @dependabot in https://github.com/google/trillian/pull/3631\n* Bump golang from `1a5326b` to `dba79eb` in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3634\n* Bump golang from `1a5326b` to `dba79eb` in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3636\n* Bump the github-actions-deps group with 5 updates by @dependabot in https://github.com/google/trillian/pull/3641\n* Bump golang from 1.23.1-bookworm to 1.23.2-bookworm in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3638\n* Bump golang from 1.23.1-bookworm to 1.23.2-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3639\n* Bump golang from 1.23.1-bookworm to 1.23.2-bookworm in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3642\n* Bump the npm_and_yarn group in /scripts/gcb2slack with 2 updates by @dependabot in https://github.com/google/trillian/pull/3645\n* Bump golang from 1.23.1-bookworm to 1.23.2-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3640\n* Bump the go-deps group with 6 updates by @dependabot in https://github.com/google/trillian/pull/3643\n* Bump the go-deps group with 5 updates by @dependabot in https://github.com/google/trillian/pull/3647\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3646\n* Bump google-auth-library from 9.14.1 to 9.14.2 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3648\n* Bump golang from `18d2f94` to `2341ddf` in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3650\n* Bump the go-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3655\n* Bump golang from `18d2f94` to `2341ddf` in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3654\n* Bump golang from `18d2f94` to `2341ddf` in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3651\n* Bump the go-deps group with 4 updates by @dependabot in https://github.com/google/trillian/pull/3658\n* Bump distroless/base-debian12 from `6ae5fe6` to `8fe31fb` in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3660\n* Bump ubuntu from `58b8789` to `0e5e4a5` in /examples/deployment/kubernetes/mysql/image in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3652\n* Bump the docker-deps group across 1 directory with 2 updates by @dependabot in https://github.com/google/trillian/pull/3661\n* Bump the github-actions-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3659\n* Bump github.com/golang-jwt/jwt/v4 from 4.5.0 to 4.5.1 in the go_modules group by @dependabot in https://github.com/google/trillian/pull/3663\n* Bump golang from 1.23.2-bookworm to 1.23.3-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3665\n* Bump golang from 1.23.2-bookworm to 1.23.3-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3666\n* Bump the github-actions-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3670\n* Bump golang from 1.23.2-bookworm to 1.23.3-bookworm in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3668\n* Bump the docker-deps group across 5 directories with 2 updates by @dependabot in https://github.com/google/trillian/pull/3672\n* Bump the go-deps group across 1 directory with 10 updates by @dependabot in https://github.com/google/trillian/pull/3669\n* Bump github/codeql-action from 3.27.1 to 3.27.2 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3673\n* Bump github/codeql-action from 3.27.2 to 3.27.4 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3685\n* Bump google-auth-library from 9.14.2 to 9.15.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3683\n* Bump the docker-deps group across 3 directories with 2 updates by @dependabot in https://github.com/google/trillian/pull/3686\n* Bump the go-deps group with 10 updates by @dependabot in https://github.com/google/trillian/pull/3684\n* Bump github/codeql-action from 3.27.4 to 3.27.5 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3688\n* Bump the go-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3687\n\n## v1.6.1\n\n* Recommended go version for development: 1.22\n  * This is the version used by the cloudbuild presubmits. Using a\n    different version can lead to presubmits failing due to unexpected\n    diffs.\n\n### MySQL\n\n* Add TLS support for MySQL by @fghanmi in https://github.com/google/trillian/pull/3593\n  * `--mysql_tls_ca`: users can provide a CA certificate, that is used to establish a secure communication with MySQL server. \n  * `--mysql_server_name`: users can provide the name of the MySQL server to be used as the Server Name in the TLS configuration.\n* dedup leafidentityhash values ahead of SQL lookup of existing leaves by @bobcallaway in https://github.com/google/trillian/pull/3607\n\n### Documentation\n\n* Add instructions for using docker to regen derived files by @mhutchinson in https://github.com/google/trillian/pull/3489\n\n### Misc\n\n* Fix invalid Go toolchain version by @roger2hk in https://github.com/google/trillian/pull/3491\n* Replace deprecated `prune-whitelist` flag with `prune-allowlist` for `kubectl` command by @roger2hk in https://github.com/google/trillian/pull/3307\n* Remove @pphaneuf from CODEOWNERS by @roger2hk in https://github.com/google/trillian/pull/3516\n* Don't bump to MySQL 9 until we explicitly choose to by @mhutchinson in https://github.com/google/trillian/pull/3560\n* Don't update to MySQL 9.0 by @mhutchinson in https://github.com/google/trillian/pull/3584\n\n### Dependency updates\n* Bump google.golang.org/api from 0.155.0 to 0.156.0 by @dependabot in https://github.com/google/trillian/pull/3290\n* Bump golang from `688ad7f` to `cbee5d2` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3286\n* Bump golang from `688ad7f` to `cbee5d2` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3287\n* Bump golang from `688ad7f` to `cbee5d2` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3289\n* Bump golang from `688ad7f` to `cbee5d2` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3288\n* Bump actions/upload-artifact from 4.0.0 to 4.1.0 by @dependabot in https://github.com/google/trillian/pull/3292\n* Bump golang.org/x/tools from 0.16.1 to 0.17.0 by @dependabot in https://github.com/google/trillian/pull/3291\n* Bump go 1.20 -> 1.21 by @mhutchinson in https://github.com/google/trillian/pull/3293\n* Bump github.com/apache/beam/sdks/v2 from 2.52.0 to 2.53.0 by @dependabot in https://github.com/google/trillian/pull/3281\n* Bump CockroachDB to 22.2.17 by @roger2hk in https://github.com/google/trillian/pull/3301\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.3.5 to 2.3.6 by @dependabot in https://github.com/google/trillian/pull/3305\n* Bump actions/upload-artifact from 4.1.0 to 4.2.0 by @dependabot in https://github.com/google/trillian/pull/3302\n* Bump k8s.io/klog/v2 from 2.120.0 to 2.120.1 by @dependabot in https://github.com/google/trillian/pull/3303\n* Bump google.golang.org/api from 0.156.0 to 0.157.0 by @dependabot in https://github.com/google/trillian/pull/3304\n* Bump golang from `cbee5d2` to `c4b696f` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3298\n* Bump ubuntu from `6042500` to `e6173d4` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3299\n* Bump golang from `cbee5d2` to `c4b696f` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3295\n* Bump golang from `cbee5d2` to `c4b696f` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3297\n* Bump golang from `cbee5d2` to `c4b696f` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3296\n* Bump mysql from 8.2 to 8.3 in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3306\n* Bump golang from `c4b696f` to `d8c365d` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3308\n* Bump actions/upload-artifact from 4.2.0 to 4.3.0 by @dependabot in https://github.com/google/trillian/pull/3309\n* Bump golang from `c4b696f` to `d8c365d` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3310\n* Bump golang from `c4b696f` to `d8c365d` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3311\n* Bump golang from `c4b696f` to `d8c365d` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3312\n* Bump google.golang.org/grpc from 1.60.1 to 1.61.0 by @dependabot in https://github.com/google/trillian/pull/3314\n* Bump google.golang.org/api from 0.157.0 to 0.158.0 by @dependabot in https://github.com/google/trillian/pull/3315\n* Bump google-auth-library from 9.4.2 to 9.5.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3316\n* Bump google.golang.org/api from 0.158.0 to 0.159.0 by @dependabot in https://github.com/google/trillian/pull/3317\n* Bump google-auth-library from 9.5.0 to 9.6.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3319\n* Bump google.golang.org/api from 0.159.0 to 0.160.0 by @dependabot in https://github.com/google/trillian/pull/3320\n* Bump alpine from `51b6726` to `c5b1261` in /examples/deployment/docker/envsubst by @dependabot in https://github.com/google/trillian/pull/3321\n* Bump cloud.google.com/go/spanner from 1.55.0 to 1.56.0 by @dependabot in https://github.com/google/trillian/pull/3322\n* Bump go.etcd.io/etcd/v3 from 3.5.11 to 3.5.12 by @dependabot in https://github.com/google/trillian/pull/3327\n* Bump google.golang.org/api from 0.160.0 to 0.161.0 by @dependabot in https://github.com/google/trillian/pull/3323\n* Bump nick-fields/retry from 2.9.0 to 3.0.0 by @dependabot in https://github.com/google/trillian/pull/3328\n* Bump golang from `d8c365d` to `3efef61` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3329\n* Bump golang from `d8c365d` to `3efef61` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3331\n* Bump golang from `d8c365d` to `3efef61` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3330\n* Bump golang from `d8c365d` to `3efef61` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3332\n* Bump google-auth-library from 9.6.0 to 9.6.1 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3333\n* Bump google-auth-library from 9.6.1 to 9.6.2 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3334\n* Bump ubuntu from `e6173d4` to `e9569c2` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3335\n* Bump distroless/base-debian12 from `0a93daa` to `f47fa3d` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3336\n* Bump distroless/base-debian12 from `0a93daa` to `f47fa3d` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3337\n* Bump google.golang.org/api from 0.161.0 to 0.162.0 by @dependabot in https://github.com/google/trillian/pull/3340\n* Bump actions/upload-artifact from 4.3.0 to 4.3.1 by @dependabot in https://github.com/google/trillian/pull/3342\n* Bump kaniko to v1.20.0 to fix #3338 by @AlCutter in https://github.com/google/trillian/pull/3339\n* Bump golang.org/x/crypto from 0.18.0 to 0.19.0 by @dependabot in https://github.com/google/trillian/pull/3347\n* Bump golang from 1.21.6-bookworm to 1.22.0-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3346\n* Bump google-auth-library from 9.6.2 to 9.6.3 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3352\n* Bump golang from 1.21.6-bookworm to 1.22.0-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3351\n* Bump golang from 1.21.6-bookworm to 1.22.0-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3350\n* Bump golang from 1.21.6-bookworm to 1.22.0-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3349\n* Bump golangci/golangci-lint-action from 3.7.0 to 3.7.1 by @dependabot in https://github.com/google/trillian/pull/3354\n* Bump google.golang.org/api from 0.162.0 to 0.163.0 by @dependabot in https://github.com/google/trillian/pull/3353\n* Bump distroless/base-debian12 from `f47fa3d` to `2102ce1` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3355\n* Bump distroless/base-debian12 from `f47fa3d` to `2102ce1` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3356\n* Bump golang from `874c267` to `925fe3f` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3361\n* Bump cloud.google.com/go/spanner from 1.56.0 to 1.57.0 by @dependabot in https://github.com/google/trillian/pull/3358\n* Bump github.com/apache/beam/sdks/v2 from 2.53.0 to 2.54.0 by @dependabot in https://github.com/google/trillian/pull/3365\n* Bump google.golang.org/api from 0.163.0 to 0.165.0 by @dependabot in https://github.com/google/trillian/pull/3366\n* Bump golang from `874c267` to `925fe3f` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3357\n* Bump golang from `874c267` to `925fe3f` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3362\n* Bump golang.org/x/tools from 0.17.0 to 0.18.0 by @dependabot in https://github.com/google/trillian/pull/3360\n* Bump google.golang.org/grpc from 1.61.0 to 1.61.1 by @dependabot in https://github.com/google/trillian/pull/3364\n* Bump golang from `874c267` to `925fe3f` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3363\n* Bump github.com/prometheus/client_model from 0.5.0 to 0.6.0 by @dependabot in https://github.com/google/trillian/pull/3367\n* Bump ubuntu from `e9569c2` to `f9d633f` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3368\n* Bump golang/govulncheck-action from 1.0.1 to 1.0.2 by @dependabot in https://github.com/google/trillian/pull/3369\n* Bump google.golang.org/api from 0.165.0 to 0.166.0 by @dependabot in https://github.com/google/trillian/pull/3370\n* Bump google.golang.org/grpc from 1.61.1 to 1.62.0 by @dependabot in https://github.com/google/trillian/pull/3371\n* Bump google.golang.org/api from 0.166.0 to 0.167.0 by @dependabot in https://github.com/google/trillian/pull/3374\n* Bump distroless/base-debian12 from `2102ce1` to `5eae9ef` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3373\n* Bump distroless/base-debian12 from `2102ce1` to `5eae9ef` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3372\n* Bump golang.org/x/crypto from 0.19.0 to 0.20.0 by @dependabot in https://github.com/google/trillian/pull/3375\n* Bump distroless/base-debian12 from `5eae9ef` to `f9b0e86` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3377\n* Bump github.com/prometheus/client_golang from 1.18.0 to 1.19.0 by @dependabot in https://github.com/google/trillian/pull/3376\n* Bump distroless/base-debian12 from `f9b0e86` to `5eae9ef` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3379\n* Bump golang.org/x/crypto from 0.20.0 to 0.21.0 by @dependabot in https://github.com/google/trillian/pull/3380\n* Bump google.golang.org/api from 0.167.0 to 0.168.0 by @dependabot in https://github.com/google/trillian/pull/3382\n* Bump go-version-input from 1.21.6 to 1.21.8 in govulncheck and bump google.golang.org/protobuf from 1.32.0 to 1.33.0 and bump github.com/golang/protobuf from 1.5.3 to 1.5.4 by @roger2hk in https://github.com/google/trillian/pull/3393\n* Bump google.golang.org/grpc from 1.62.0 to 1.62.1 by @dependabot in https://github.com/google/trillian/pull/3385\n* Bump golang.org/x/tools from 0.18.0 to 0.19.0 by @dependabot in https://github.com/google/trillian/pull/3383\n* Bump cloud.google.com/go/spanner from 1.57.0 to 1.58.0 by @dependabot in https://github.com/google/trillian/pull/3391\n* Bump golang from 1.22.0-bookworm to 1.22.1-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3389\n* Bump ubuntu from `f9d633f` to `77906da` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3392\n* Bump golang from 1.22.0-bookworm to 1.22.1-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3387\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.3.6 to 2.3.7 by @dependabot in https://github.com/google/trillian/pull/3390\n* Bump golang from 1.22.0-bookworm to 1.22.1-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3388\n* Bump golang from 1.22.0-bookworm to 1.22.1-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3386\n* Bump google.golang.org/api from 0.168.0 to 0.169.0 by @dependabot in https://github.com/google/trillian/pull/3394\n* Bump distroless/base-debian12 from `5eae9ef` to `28a7f1f` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3396\n* Bump github.com/go-sql-driver/mysql from 1.7.1 to 1.8.0 by @dependabot in https://github.com/google/trillian/pull/3395\n* Bump distroless/base-debian12 from `5eae9ef` to `28a7f1f` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3397\n* Bump github.com/jackc/pgx/v4 from 4.18.1 to 4.18.2 by @dependabot in https://github.com/google/trillian/pull/3398\n* Bump actions/checkout from 4.1.1 to 4.1.2 by @dependabot in https://github.com/google/trillian/pull/3401\n* Bump golang from `6699d28` to `d996c64` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3399\n* Bump golang from `6699d28` to `d996c64` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3403\n* Bump golang from `6699d28` to `d996c64` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3402\n* Bump golang from `6699d28` to `d996c64` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3400\n* Bump google-auth-library from 9.6.3 to 9.7.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3404\n* Bump cloud.google.com/go/spanner from 1.58.0 to 1.59.0 by @dependabot in https://github.com/google/trillian/pull/3405\n* Bump google.golang.org/api from 0.169.0 to 0.170.0 by @dependabot in https://github.com/google/trillian/pull/3406\n* Bump follow-redirects from 1.15.4 to 1.15.6 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3407\n* Bump cloud.google.com/go/spanner from 1.59.0 to 1.60.0 by @dependabot in https://github.com/google/trillian/pull/3408\n* Bump github.com/docker/docker from 24.0.7+incompatible to 24.0.9+incompatible by @dependabot in https://github.com/google/trillian/pull/3409\n* Bump google.golang.org/api from 0.170.0 to 0.171.0 by @dependabot in https://github.com/google/trillian/pull/3410\n* Bump github.com/go-sql-driver/mysql from 1.8.0 to 1.8.1 by @dependabot in https://github.com/google/trillian/pull/3412\n* Bump express from 4.18.2 to 4.19.2 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3413\n* Bump github.com/apache/beam/sdks/v2 from 2.54.0 to 2.55.0 by @dependabot in https://github.com/google/trillian/pull/3411\n* Bump go.etcd.io/etcd/v3 from 3.5.12 to 3.5.13 by @dependabot in https://github.com/google/trillian/pull/3415\n* Bump google.golang.org/api from 0.171.0 to 0.172.0 by @dependabot in https://github.com/google/trillian/pull/3414\n* Bump distroless/base-debian12 from `28a7f1f` to `611d30d` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3419\n* Bump distroless/base-debian12 from `28a7f1f` to `611d30d` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3420\n* Bump golang from 1.22.1-bookworm to 1.22.2-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3421\n* update govulncheck go version from 1.21.8 to 1.21.9 and bump golang.org/x/net from v0.22.0 to v0.23.0 by @phbnf in https://github.com/google/trillian/pull/3427\n* Bump golang from 1.22.1-bookworm to 1.22.2-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3426\n* Bump github.com/prometheus/client_model from 0.6.0 to 0.6.1 by @dependabot in https://github.com/google/trillian/pull/3422\n* Bump golang.org/x/sys from 0.18.0 to 0.19.0 by @dependabot in https://github.com/google/trillian/pull/3428\n* Bump golang from 1.22.1-bookworm to 1.22.2-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3424\n* Bump golang from 1.22.1-bookworm to 1.22.2-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3425\n* Bump golang.org/x/crypto from 0.21.0 to 0.22.0 by @dependabot in https://github.com/google/trillian/pull/3429\n* Bump golang.org/x/tools from 0.19.0 to 0.20.0 by @dependabot in https://github.com/google/trillian/pull/3432\n* Bump github.com/apache/beam/sdks/v2 from 2.55.0 to 2.55.1 by @dependabot in https://github.com/google/trillian/pull/3433\n* Bump google.golang.org/grpc from 1.62.1 to 1.63.2 by @dependabot in https://github.com/google/trillian/pull/3434\n* Bump golang from `48b942a` to `3c7ad81` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3437\n* Bump golang from `48b942a` to `3c7ad81` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3435\n* Bump golang from `48b942a` to `3c7ad81` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3436\n* Bump golang from `48b942a` to `fb54c61` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3439\n* Bump golang from `3c7ad81` to `b03f3ba` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3440\n* Bump golang from `3c7ad81` to `b03f3ba` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3442\n* Bump golang from `3c7ad81` to `b03f3ba` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3441\n* Bump golang from `fb54c61` to `b03f3ba` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3443\n* Bump google-auth-library from 9.7.0 to 9.8.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3444\n* Bump google.golang.org/api from 0.172.0 to 0.173.0 by @dependabot in https://github.com/google/trillian/pull/3445\n* Bump ubuntu from `77906da` to `1b8d8ff` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3446\n* Bump google.golang.org/api from 0.173.0 to 0.174.0 by @dependabot in https://github.com/google/trillian/pull/3447\n* Bump actions/upload-artifact from 4.3.1 to 4.3.2 by @dependabot in https://github.com/google/trillian/pull/3448\n* Bump google.golang.org/api from 0.174.0 to 0.175.0 by @dependabot in https://github.com/google/trillian/pull/3449\n* Bump actions/checkout from 4.1.2 to 4.1.3 by @dependabot in https://github.com/google/trillian/pull/3450\n* Bump actions/upload-artifact from 4.3.2 to 4.3.3 by @dependabot in https://github.com/google/trillian/pull/3451\n* Bump google.golang.org/api from 0.175.0 to 0.176.0 by @dependabot in https://github.com/google/trillian/pull/3452\n* Bump google.golang.org/api from 0.176.0 to 0.176.1 by @dependabot in https://github.com/google/trillian/pull/3453\n* Bump actions/checkout from 4.1.3 to 4.1.4 by @dependabot in https://github.com/google/trillian/pull/3455\n* Bump golangci/golangci-lint-action from 4.0.0 to 5.0.0 by @dependabot in https://github.com/google/trillian/pull/3460\n* Bump google-auth-library from 9.8.0 to 9.9.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3456\n* Bump golang from `b03f3ba` to `d0902ba` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3454\n* Bump golang from `b03f3ba` to `d0902ba` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3457\n* Bump ubuntu from `1b8d8ff` to `6d7b5d3` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3461\n* Bump golang from `b03f3ba` to `d0902ba` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3459\n* Bump golang from `b03f3ba` to `d0902ba` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3458\n* Bump distroless/base-debian12 from `611d30d` to `d8d01e2` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3463\n* Bump distroless/base-debian12 from `611d30d` to `d8d01e2` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3464\n* Bump cloud.google.com/go/spanner from 1.60.0 to 1.61.0 by @dependabot in https://github.com/google/trillian/pull/3468\n* Bump golangci/golangci-lint-action from 5.0.0 to 5.1.0 by @dependabot in https://github.com/google/trillian/pull/3462\n* Bump @google-cloud/functions-framework from 3.3.0 to 3.4.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3465\n* Bump mysql from 8.3 to 8.4 in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3469\n* Bump actions/setup-go from 5.0.0 to 5.0.1 by @dependabot in https://github.com/google/trillian/pull/3470\n* Bump ubuntu from `6d7b5d3` to `a6d2b38` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3471\n* Bump github.com/apache/beam/sdks/v2 from 2.55.1 to 2.56.0 by @dependabot in https://github.com/google/trillian/pull/3472\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.3.7 to 2.3.8 by @dependabot in https://github.com/google/trillian/pull/3473\n* Bump distroless/base-debian12 from `d8d01e2` to `786007f` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3474\n* Bump golangci/golangci-lint-action from 5.1.0 to 5.3.0 by @dependabot in https://github.com/google/trillian/pull/3479\n* Bump golang.org/x/crypto from 0.22.0 to 0.23.0 by @dependabot in https://github.com/google/trillian/pull/3476\n* Bump distroless/base-debian12 from `d8d01e2` to `786007f` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3480\n* Bump golang from 1.22.2-bookworm to 1.22.3-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3482\n* Bump golang from 1.22.2-bookworm to 1.22.3-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3481\n* Bump `go-version-input` to 1.21.10 in govulncheck.yml by @roger2hk in https://github.com/google/trillian/pull/3488\n* Bump google.golang.org/protobuf from 1.33.0 to 1.34.1 by @dependabot in https://github.com/google/trillian/pull/3475\n* Bump google.golang.org/api from 0.176.1 to 0.178.0 by @dependabot in https://github.com/google/trillian/pull/3484\n* Bump github.com/fullstorydev/grpcurl from 1.8.9 to 1.9.1 by @dependabot in https://github.com/google/trillian/pull/3438\n* Bump actions/checkout from 4.1.4 to 4.1.5 by @dependabot in https://github.com/google/trillian/pull/3478\n* Bump golang.org/x/tools from 0.20.0 to 0.21.0 by @dependabot in https://github.com/google/trillian/pull/3485\n* Bump golang from 1.22.2-bookworm to 1.22.3-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3487\n* Bump golang from 1.22.2-bookworm to 1.22.3-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3483\n* Bump golangci/golangci-lint-action from 5.3.0 to 6.0.1 by @dependabot in https://github.com/google/trillian/pull/3490\n* Bump ossf/scorecard-action from 2.3.1 to 2.3.3 by @dependabot in https://github.com/google/trillian/pull/3492\n* Bump github.com/prometheus/client_golang from 1.19.0 to 1.19.1 by @dependabot in https://github.com/google/trillian/pull/3493\n* Bump google.golang.org/api from 0.178.0 to 0.180.0 by @dependabot in https://github.com/google/trillian/pull/3494\n* Bump google-auth-library from 9.9.0 to 9.10.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3495\n* Bump golang from `6d71b7c` to `c2bc4ef` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3496\n* Bump golang from `6d71b7c` to `c2bc4ef` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3497\n* Bump golang from `6d71b7c` to `c2bc4ef` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3498\n* Bump golang from `6d71b7c` to `c2bc4ef` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3499\n* Bump golang from `c2bc4ef` to `ef27a3c` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3501\n* Bump golang from `c2bc4ef` to `ef27a3c` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3500\n* Bump golang from `c2bc4ef` to `ef27a3c` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3505\n* Bump golang from `c2bc4ef` to `ef27a3c` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3502\n* Bump cloud.google.com/go/spanner from 1.61.0 to 1.62.0 by @dependabot in https://github.com/google/trillian/pull/3504\n* Bump google.golang.org/api from 0.180.0 to 0.181.0 by @dependabot in https://github.com/google/trillian/pull/3506\n* Bump actions/checkout from 4.1.5 to 4.1.6 by @dependabot in https://github.com/google/trillian/pull/3508\n* Bump golang from `ef27a3c` to `5c56bd4` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3507\n* Bump golang from `ef27a3c` to `5c56bd4` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3510\n* Bump golang from `ef27a3c` to `5c56bd4` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3511\n* Bump github/codeql-action from 2.13.4 to 3.25.5 by @dependabot in https://github.com/google/trillian/pull/3512\n* Bump golang from `ef27a3c` to `5c56bd4` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3509\n* Bump github/codeql-action from 3.25.5 to 3.25.6 by @dependabot in https://github.com/google/trillian/pull/3513\n* Bump alpine from 3.19 to 3.20 in /examples/deployment/docker/envsubst by @dependabot in https://github.com/google/trillian/pull/3514\n* Bump google.golang.org/grpc from 1.63.2 to 1.64.0 by @dependabot in https://github.com/google/trillian/pull/3503\n* Bump cloud.google.com/go/spanner from 1.62.0 to 1.63.0 by @dependabot in https://github.com/google/trillian/pull/3515\n* Bump google.golang.org/api from 0.181.0 to 0.182.0 by @dependabot in https://github.com/google/trillian/pull/3517\n* Bump go.etcd.io/etcd/v3 from 3.5.13 to 3.5.14 by @dependabot in https://github.com/google/trillian/pull/3520\n* Bump github/codeql-action from 3.25.6 to 3.25.7 by @dependabot in https://github.com/google/trillian/pull/3523\n* Bump golang/govulncheck-action from 1.0.2 to 1.0.3 by @dependabot in https://github.com/google/trillian/pull/3524\n* Bump the version of go used by the vuln scanner by @mhutchinson in https://github.com/google/trillian/pull/3536\n* Group dependabot updates together by @mhutchinson in https://github.com/google/trillian/pull/3535\n* Bump ubuntu from `a6d2b38` to `19478ce` in /examples/deployment/kubernetes/mysql/image in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3537\n* Bump the go-deps group with 8 updates by @dependabot in https://github.com/google/trillian/pull/3538\n* Bump github/codeql-action from 3.25.7 to 3.25.8 by @dependabot in https://github.com/google/trillian/pull/3534\n* Bump golang from 1.22.3-bookworm to 1.22.4-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3533\n* Bump golang from 1.22.3-bookworm to 1.22.4-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3526\n* Bump golang from 1.22.3-bookworm to 1.22.4-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3528\n* Bump golang from 1.22.3-bookworm to 1.22.4-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3527\n* Bump golang from `aec4784` to `9678844` in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3545\n* Bump golang from `aec4784` to `9678844` in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3544\n* Bump golang from `aec4784` to `9678844` in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3543\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3540\n* Bump google-auth-library from 9.10.0 to 9.11.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3539\n* Bump golang from `aec4784` to `9678844` in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3542\n* Bump alpine from `77726ef` to `b89d9c9` in /examples/deployment/docker/envsubst in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3546\n* Bump the go-deps group across 1 directory with 7 updates by @dependabot in https://github.com/google/trillian/pull/3547\n* Bump the go-deps group with 5 updates by @dependabot in https://github.com/google/trillian/pull/3550\n* Bump github/codeql-action from 3.25.10 to 3.25.11 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3549\n* Bump the version of go, and make vuln check share version by @mhutchinson in https://github.com/google/trillian/pull/3551\n* Bump golang from 1.22.4-bookworm to 1.22.5-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3552\n* Bump actions/upload-artifact from 4.3.3 to 4.3.4 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3556\n* Bump golang from 1.22.4-bookworm to 1.22.5-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3559\n* Bump the docker-deps group in /examples/deployment/docker/log_signer with 2 updates by @dependabot in https://github.com/google/trillian/pull/3554\n* Bump ubuntu from `19478ce` to `340d9b0` in /examples/deployment/kubernetes/mysql/image in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3558\n* Bump the docker-deps group in /examples/deployment/docker/log_server with 2 updates by @dependabot in https://github.com/google/trillian/pull/3555\n* Bump the go-deps group with 5 updates by @dependabot in https://github.com/google/trillian/pull/3557\n* Bump the go-deps group with 4 updates by @dependabot in https://github.com/google/trillian/pull/3564\n* Bump @google-cloud/functions-framework from 3.4.0 to 3.4.1 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3563\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3562\n* Bump the go-deps group with 7 updates by @dependabot in https://github.com/google/trillian/pull/3565\n* Bump alpine from `b89d9c9` to `a59bbcb` in /examples/deployment/docker/envsubst in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3567\n* Bump github/codeql-action from 3.25.12 to 3.25.13 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3566\n* Bump golang from `6c27802` to `af9b40f` in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3569\n* Bump golang from `6c27802` to `af9b40f` in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3576\n* Bump alpine from `a59bbcb` to `0a4eaa0` in /examples/deployment/docker/envsubst in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3571\n* Bump golang from `6c27802` to `af9b40f` in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3573\n* Bump the go-deps group with 3 updates by @dependabot in https://github.com/google/trillian/pull/3568\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3572\n* Bump @google-cloud/functions-framework from 3.4.1 to 3.4.2 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3574\n* Bump golang from `6c27802` to `af9b40f` in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3570\n* Bump google-auth-library from 9.11.0 to 9.12.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3575\n* Upgrade to go-licenses v2 by @mhutchinson in https://github.com/google/trillian/pull/3578\n* Bump github.com/docker/docker from 25.0.5+incompatible to 25.0.6+incompatible in the go_modules group by @dependabot in https://github.com/google/trillian/pull/3579\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3582\n* Bump google-auth-library from 9.12.0 to 9.13.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3583\n* Bump the go-deps group with 6 updates by @dependabot in https://github.com/google/trillian/pull/3580\n* Bump golang from 1.22.5-bookworm to 1.22.6-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3586\n* Bump the go-deps group with 6 updates by @dependabot in https://github.com/google/trillian/pull/3590\n* Bump golang from 1.22.5-bookworm to 1.22.6-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3588\n* Bump the github-actions-deps group with 2 updates by @dependabot in https://github.com/google/trillian/pull/3587\n* Bump golang from 1.22.5-bookworm to 1.22.6-bookworm in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3589\n* Bump golang from 1.22.5-bookworm to 1.22.6-bookworm in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3591\n* Bump ubuntu from `340d9b0` to `adbb901` in /examples/deployment/kubernetes/mysql/image in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3595\n* Bump golang from 1.22.6-bookworm to 1.23.0-bookworm in /integration/cloudbuild/testbase in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3601\n* Bump golang from 1.22.6-bookworm to 1.23.0-bookworm in /examples/deployment/docker/db_client in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3594\n* Bump @slack/webhook from 7.0.2 to 7.0.3 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3596\n* Bump github/codeql-action from 3.26.0 to 3.26.3 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3599\n* Bump golang from 1.22.6-bookworm to 1.23.0-bookworm in /examples/deployment/docker/log_server in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3598\n* Bump golang from 1.22.6-bookworm to 1.23.0-bookworm in /examples/deployment/docker/log_signer in the docker-deps group by @dependabot in https://github.com/google/trillian/pull/3600\n* Bump the go-deps group with 4 updates by @dependabot in https://github.com/google/trillian/pull/3597\n* Bump go version to 1.22.6 by @roger2hk in https://github.com/google/trillian/pull/3602\n* Bump the go-deps group with 6 updates by @dependabot in https://github.com/google/trillian/pull/3606\n* Bump google-auth-library from 9.13.0 to 9.14.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3604\n* Bump github/codeql-action from 3.26.3 to 3.26.5 in the github-actions-deps group by @dependabot in https://github.com/google/trillian/pull/3605\n\n## v1.6.0 (Jan 2024)\n\n### MySQL: Changes to Subtree Revisions\n\nSupport for skipping subtree revisions to increase read performance and reduce disk usage: added in #3201\n\nTL;DR: existing trees will continue to be stored and queried as they were before, but new trees\ncreated with the MySQL storage layer will be stored and queried in a way that uses less space\nand allows for simpler and faster queries. No schema changes are required by log operators.\n\nThe Trillian MySQL implementation stores the internal state of the log as Subtrees in the database.\nThese are essentially tiles as described by [tlog: Tiling a log](https://research.swtch.com/tlog).\nTrees created with previous versions of Trillian stored a different revision of each Subtree when\nthe tree was updated. This is somewhat redundant for append-only logs because an earlier version\nof a Subtree can always be derived from a later one by simply removing entries from the right of\nthe Subtree. PR #3201 removes this Subtree revision history, and updates Subtrees in place when\nthey are updated.\n\nMeasurements from @n-canter show that revisionless storage saves around 75% storage costs for the\nSubtree table, and queries over this table are more than 15% faster.\n\nThe same schema is used for both revisioned and unrevisioned subtrees. The difference is that we\nalways write a revision of 0 in the unrevisioned case, which still means that there will only be\na single entry per subtree.\n\nSupport is maintained for the old way of revisioning Subtrees in order to avoid breaking changes\nto existing trees. There is no simple code change that would safely allow a previously revisioned\ntree to start becoming a revisionless tree. This new revisionless Subtree feature is only available\nfor trees created with new versions of Trillian.\n\nUsers with legacy revisioned trees that wish to take advantage of smaller storage costs and faster\nqueries of the new revisionless storage should come speak to us on\n[transparency-dev Slack](https://join.slack.com/t/transparency-dev/shared_invite/zt-27pkqo21d-okUFhur7YZ0rFoJVIOPznQ).\nThe safest option we have available is to use [migrillian](https://github.com/google/certificate-transparency-go/tree/master/trillian/migrillian) to create a new copy of trees, but this will be quite a manual\nprocess and will only work for CT logs.\nOther migration options are conceivable and we're eager to work with the community to develop\nand test tools for upgrading trees in place.\n\n## Notable Changes\n\n* CI now runs with MySQL 8.2 instead of MySQL 5.7\n* Bump golangci-lint from 1.51.1 to 1.55.1 (developers should update to this version)\n\n## All Changes (ignoring dependabot)\n\n* Strip unused docker image manipulation from cloudbuild by @mhutchinson in https://github.com/google/trillian/pull/3278\n* Switch from using unmaintained Google Cloud mysql db image to dockerhub official image by @patflynn in https://github.com/google/trillian/pull/3272\n* Disable the OS package patches to bypass the mysql8 gpg key rotation issue by @roger2hk in https://github.com/google/trillian/pull/3270\n* Disable race condition checking for beam code by @mhutchinson in https://github.com/google/trillian/pull/3249\n* Make uninitializedBegin test accurately test its intention by @mhutchinson in https://github.com/google/trillian/pull/3244\n* Fix deadlock in log_client by @n-canter in https://github.com/google/trillian/pull/3236\n* Bump go-version-input from 1.20.11 to 1.20.12 in govulncheck.yml by @roger2hk in https://github.com/google/trillian/pull/3237\n* Inlined storage/sql.go into both implementations that use it by @mhutchinson in https://github.com/google/trillian/pull/3235\n* Support for skipping subtree revisions to increase read performance and reduce disk usage by @mhutchinson in https://github.com/google/trillian/pull/3201\n* Updated Slack channel details by @mhutchinson in https://github.com/google/trillian/pull/3214\n* Skip SELECTing revision that isn't used by @mhutchinson in https://github.com/google/trillian/pull/3207\n* Increase some timeouts in integration tests by @mhutchinson in https://github.com/google/trillian/pull/3203\n* Do vuln scanning with a version of Go not subject to GO-2023-2185 by @mhutchinson in https://github.com/google/trillian/pull/3202\n* Bump MariaDB image from 10.3 to 11.1 in Cloud Build by @roger2hk in https://github.com/google/trillian/pull/3189\n* Move golangci-lint from Cloud Build to GitHub Action by @roger2hk in https://github.com/google/trillian/pull/3188\n* Updated all MySQL deps to 8.0 #3182 by @mhutchinson in https://github.com/google/trillian/pull/3183\n* Bump golangci-lint from 1.51.1 to 1.55.1 by @roger2hk in https://github.com/google/trillian/pull/3177\n\nThe above was generated with the following command:\n```bash\ngh pr list -s closed -S \"NOT dependabot\" --json url,title,author  -t '{{range .}}* {{.title}} by @{{.author.login}} in {{.url}}\n{{end}}'\n```\n\n## v1.5.3\n\n* Recommended go version for development: 1.20\n  * This is the version used by the cloudbuild presubmits. Using a\n    different version can lead to presubmits failing due to unexpected\n    diffs.\n\n### Storage\n\n#### MySQL\n\n* mysql: check for error when getting subtrees by @jsha in https://github.com/google/trillian/pull/3173\n\n### Documentation\n\n* Added comments to show how snippets were generated by @mhutchinson in https://github.com/google/trillian/pull/3048\n\n### Misc\n\n* Export logserver read counter metric together with logIDs by @phbnf in https://github.com/google/trillian/pull/3077\n* Register DoFns by @AlCutter in https://github.com/google/trillian/pull/3083\n* Add docker package-ecosystem to Dependabot config by @roger2hk in https://github.com/google/trillian/pull/3038\n* Fix CVE vulnerabilities in mysql base Docker image by @roger2hk in https://github.com/google/trillian/pull/3037\n* Fix db_server Docker image vulnerabilities by @roger2hk in https://github.com/google/trillian/pull/3049\n* Add missing docker and npm Dependabot configs by @roger2hk in https://github.com/google/trillian/pull/3062\n* Add govulncheck GitHub action by @roger2hk in https://github.com/google/trillian/pull/3089\n* Pin Dockerfile base images by hash by @roger2hk in https://github.com/google/trillian/pull/3090\n* Pin golang/govulncheck-action by hash by @roger2hk in https://github.com/google/trillian/pull/3091\n* Pin Dockerfile base images by hash by @roger2hk in https://github.com/google/trillian/pull/3093\n* Add top level read-only permission in govulncheck.yml by @roger2hk in https://github.com/google/trillian/pull/3092\n\n### Dependency updates\n\n* Bump go.etcd.io/etcd/etcdctl/v3 from 3.5.8 to 3.5.9 by @dependabot in https://github.com/google/trillian/pull/3003\n* Bump google.golang.org/api from 0.121.0 to 0.122.0 by @dependabot in https://github.com/google/trillian/pull/3006\n* Bump golang.org/x/tools from 0.8.0 to 0.9.1 by @dependabot in https://github.com/google/trillian/pull/3005\n* Bump github.com/apache/beam/sdks/v2 from 2.47.0-RC3 to 2.47.0 by @dependabot in https://github.com/google/trillian/pull/3000\n* Bump golang.org/x/crypto from 0.8.0 to 0.9.0 by @dependabot in https://github.com/google/trillian/pull/3007\n* Bump go.etcd.io/etcd/v3 from 3.5.8 to 3.5.9 by @dependabot in https://github.com/google/trillian/pull/3004\n* Bump actions/setup-go from 4.0.0 to 4.0.1 by @dependabot in https://github.com/google/trillian/pull/3008\n* Bump google.golang.org/api from 0.122.0 to 0.123.0 by @dependabot in https://github.com/google/trillian/pull/3010\n* Bump github/codeql-action from 2.3.3 to 2.3.5 by @dependabot in https://github.com/google/trillian/pull/3013\n* Bump github/codeql-action from 2.3.5 to 2.3.6 by @dependabot in https://github.com/google/trillian/pull/3020\n* Bump golang.org/x/tools from 0.9.1 to 0.9.3 by @dependabot in https://github.com/google/trillian/pull/3016\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.3.3 to 2.3.4 by @dependabot in https://github.com/google/trillian/pull/3017\n* Bump golangci/golangci-lint-action from 3.4.0 to 3.5.0 by @dependabot in https://github.com/google/trillian/pull/3021\n* Bump golang.org/x/sys from 0.8.0 to 0.9.0 by @dependabot in https://github.com/google/trillian/pull/3025\n* Bump golangci/golangci-lint-action from 3.5.0 to 3.6.0 by @dependabot in https://github.com/google/trillian/pull/3027\n* Bump github/codeql-action from 2.3.6 to 2.13.4 by @dependabot in https://github.com/google/trillian/pull/3026\n* Bump actions/checkout from 3.5.2 to 3.5.3 by @dependabot in https://github.com/google/trillian/pull/3028\n* Bump golang.org/x/tools from 0.9.3 to 0.10.0 by @dependabot in https://github.com/google/trillian/pull/3029\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.3.4 to 2.3.5 by @dependabot in https://github.com/google/trillian/pull/3035\n* Bump github.com/prometheus/client_golang from 1.15.1 to 1.16.0 by @dependabot in https://github.com/google/trillian/pull/3030\n* Update mysql Dockerfile base image from ubuntu:trusty to ubuntu:jammy by @roger2hk in https://github.com/google/trillian/pull/3036\n* Bump golang.org/x/tools from 0.10.0 to 0.11.0 by @dependabot in https://github.com/google/trillian/pull/3044\n* Bump ossf/scorecard-action from 2.1.3 to 2.2.0 by @dependabot in https://github.com/google/trillian/pull/3039\n* Bump google.golang.org/protobuf from 1.30.0 to 1.31.0 by @dependabot in https://github.com/google/trillian/pull/3041\n* Bump golang.org/x/tools from 0.11.0 to 0.12.0 by @dependabot in https://github.com/google/trillian/pull/3055\n* Bump actions/setup-go from 4.0.1 to 4.1.0 by @dependabot in https://github.com/google/trillian/pull/3059\n* Bump google-auth-library from 8.7.0 to 9.0.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3069\n* Bump golang from 1.19-buster to 1.20-buster in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3064\n* Bump alpine from 3.8 to 3.18 in /examples/deployment/docker/envsubst by @dependabot in https://github.com/google/trillian/pull/3067\n* Bump golang from 1.19-buster to 1.20-buster in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3065\n* Bump golangci/golangci-lint-action from 3.6.0 to 3.7.0 by @dependabot in https://github.com/google/trillian/pull/3063\n* Bump golang from 1.19-buster to 1.20-buster in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3066\n* Bump golang from 1.19-buster to 1.20-buster in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3071\n* Bump actions/checkout from 3.5.3 to 3.6.0 by @dependabot in https://github.com/google/trillian/pull/3076\n* Bump go from 1.19 to 1.20 by @mhutchinson in https://github.com/google/trillian/pull/3080\n* Bump golang.org/x/sys from 0.11.0 to 0.12.0 by @dependabot in https://github.com/google/trillian/pull/3081\n* Bump actions/checkout from 3.6.0 to 4.0.0 by @dependabot in https://github.com/google/trillian/pull/3082\n* Bump golang.org/x/crypto from 0.12.0 to 0.13.0 by @dependabot in https://github.com/google/trillian/pull/3084\n* Bump golang.org/x/tools from 0.12.0 to 0.13.0 by @dependabot in https://github.com/google/trillian/pull/3086\n* Bump actions/upload-artifact from 3.1.2 to 3.1.3 by @dependabot in https://github.com/google/trillian/pull/3085\n* Bump Go version in Docker base images to 1.20.8-bookworm by @roger2hk in https://github.com/google/trillian/pull/3094\n* Bump golang from 1.20.8-bookworm to 1.21.1-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3100\n* Bump gcr.io/kaniko-project/executor from 1.6.0 to 1.15.0 by @roger2hk in https://github.com/google/trillian/pull/3095\n* Bump golang from 1.20.8-bookworm to 1.21.1-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3098\n* Bump golang from 1.20.8-bookworm to 1.21.1-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3097\n* Bump golang from 1.20.8-bookworm to 1.21.1-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3099\n* Bump golang from `d3114db` to `a0b3bc4` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3104\n* Bump golang from `d3114db` to `a0b3bc4` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3105\n* Bump golang from `d3114db` to `a0b3bc4` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3106\n* Bump golang from `d3114db` to `a0b3bc4` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3107\n* Bump golang from `e06b3a4` to `114b9cc` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3108\n* Bump trillian-opensource-ci/mysql5 from `51cc6df` to `edf7def` in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3110\n* Bump golang from `a0b3bc4` to `114b9cc` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3109\n* Bump golang from `a0b3bc4` to `114b9cc` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3111\n* Bump actions/checkout from 4.0.0 to 4.1.0 by @dependabot in https://github.com/google/trillian/pull/3117\n* Bump golang from `114b9cc` to `9c7ea4a` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3116\n* Bump golang from `114b9cc` to `9c7ea4a` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3114\n* Bump golang from `114b9cc` to `9c7ea4a` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3115\n* Bump nick-fields/retry from 2.8.3 to 2.9.0 by @dependabot in https://github.com/google/trillian/pull/3119\n* Bump trillian-opensource-ci/mysql5 from `edf7def` to `f45c849` in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3120\n* Bump golang from `9c7ea4a` to `61f84bc` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3121\n* Bump golang from `9c7ea4a` to `61f84bc` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3124\n* Bump golang from `9c7ea4a` to `61f84bc` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3122\n* Bump alpine from `7144f7b` to `eece025` in /examples/deployment/docker/envsubst by @dependabot in https://github.com/google/trillian/pull/3125\n* Bump golang from `9c7ea4a` to `61f84bc` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3123\n* Bump ubuntu from `aabed32` to `9b8dec3` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3127\n* Bump distroless/base-debian12 from `d64f548` to `cc22d6d` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3128\n* Bump distroless/base-debian12 from `d64f548` to `cc22d6d` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3129\n* Bump golang from 1.21.1-bookworm to 1.21.2-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3134\n* Bump golang from 1.21.1-bookworm to 1.21.2-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3135\n* Bump golang from 1.21.1-bookworm to 1.21.2-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3136\n* Bump golang from `0bd76fd` to `a44d05d` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3137\n* Bump ossf/scorecard-action from 2.2.0 to 2.3.0 by @dependabot in https://github.com/google/trillian/pull/3139\n* Bump golang from 1.21.1-bookworm to 1.21.2-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3138\n* Bump distroless/base-debian12 from `cc22d6d` to `5be49de` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3141\n* Bump distroless/base-debian12 from `cc22d6d` to `5be49de` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3142\n* Bump trillian-opensource-ci/mysql5 from `f45c849` to `99d6043` in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3143\n* Bump golang from 1.21.2-bookworm to 1.21.3-bookworm in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3147\n* Bump golang from 1.21.2-bookworm to 1.21.3-bookworm in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3145\n* Bump golang from 1.21.2-bookworm to 1.21.3-bookworm in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3148\n* Bump golang from 1.21.2-bookworm to 1.21.3-bookworm in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3144\n* Bump go-version-input from 1.20.8 to 1.20.10 in govulncheck by @roger2hk in https://github.com/google/trillian/pull/3151\n* Bump golang.org/x/net from 0.15.0 to 0.17.0 by @dependabot in https://github.com/google/trillian/pull/3150\n* Bump @slack/webhook from 5.0.4 to 7.0.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3130\n* Bump google-auth-library from 9.0.0 to 9.1.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3126\n* Bump golang from `efde471` to `5cc7ddc` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3156\n* Bump golang from `efde471` to `5cc7ddc` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3155\n* Bump golang from `efde471` to `20f9ab5` in /examples/deployment/docker/db_client by @dependabot in https://github.com/google/trillian/pull/3152\n* Bump golang from `efde471` to `20f9ab5` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3154\n* Bump golang from `5cc7ddc` to `20f9ab5` in /integration/cloudbuild/testbase by @dependabot in https://github.com/google/trillian/pull/3158\n* Bump ubuntu from `9b8dec3` to `2b7412e` in /examples/deployment/kubernetes/mysql/image by @dependabot in https://github.com/google/trillian/pull/3157\n* Bump actions/checkout from 4.1.0 to 4.1.1 by @dependabot in https://github.com/google/trillian/pull/3160\n* Bump ossf/scorecard-action from 2.3.0 to 2.3.1 by @dependabot in https://github.com/google/trillian/pull/3164\n* Bump google.golang.org/grpc to 1.59.0 fixing CVE-2023-44487 (https://github.com/advisories/GHSA-qppj-fm5r-hxr3) by @cpanato in https://github.com/google/trillian/pull/3166\n* Bump distroless/base-debian12 from `5be49de` to `1dfdb5e` in /examples/deployment/docker/log_server by @dependabot in https://github.com/google/trillian/pull/3167\n* Bump google-auth-library from 9.1.0 to 9.2.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3168\n* Bump distroless/base-debian12 from `5be49de` to `1dfdb5e` in /examples/deployment/docker/log_signer by @dependabot in https://github.com/google/trillian/pull/3169\n* Bump trillian-opensource-ci/mysql5 from `99d6043` to `c079e4e` in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3161\n* Bump github.com/docker/docker from 24.0.6+incompatible to 24.0.7+incompatible by @dependabot in https://github.com/google/trillian/pull/3170\n* Bump trillian-opensource-ci/mysql5 from `c079e4e` to `3f355be` in /examples/deployment/docker/db_server by @dependabot in https://github.com/google/trillian/pull/3171\n* Bump @slack/webhook from 7.0.0 to 7.0.1 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3172\n* Bump @google-cloud/functions-framework from 1.3.2 to 3.3.0 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/3072\n\n## v1.5.2\n\n* Recommended go version for development: 1.19\n  * This is the version used by the cloudbuild presubmits. Using a\n    different version can lead to presubmits failing due to unexpected\n    diffs.\n\n### Storage\n\n#### CloudSpanner\n\n* Removed use of the `--cloudspanner_write_sessions` flag.\n  This was related to preparing some fraction of CloudSpanner sessionpool entries with\n  Read/Write transactions, however this functionality is no longer supported by the client\n  library.\n\n### Repo config\n* Enable all lint checks in trillian repo by @mhutchinson in https://github.com/google/trillian/pull/2979\n\n### Dependency updates\n\n* Bump contrib.go.opencensus.io/exporter/stackdriver from 0.13.12 to 0.13.14 by @samuelattwood in https://github.com/google/trillian/pull/2950\n* Bump Go version from 1.17 to 1.19.\n* Updated golangci-lint to v1.51.1 (developers should update to this version)\n* Update transparency-dev/merkle to v0.0.2\n\n## v1.5.1\n\n### Storage\n\n* A new storage driver for CockroachDB has been added. It's currently in alpha stage \n  with support provided by Equinix Metal.\n\n### Misc\n\n* Fix log server not exiting properly on SIGINT\n\n### Dependency updates\n\n* Switch from glog to klog by @jdolitsky in https://github.com/google/trillian/pull/2787\n* Bump google.golang.org/api from 0.92.0 to 0.93.0 by @dependabot in https://github.com/google/trillian/pull/2800\n* Bump cloud.google.com/go/spanner from 1.36.0 to 1.37.0 by @dependabot in https://github.com/google/trillian/pull/2803\n* Bump google.golang.org/grpc from 1.48.0 to 1.49.0 by @dependabot in https://github.com/google/trillian/pull/2804\n* Bump google.golang.org/api from 0.93.0 to 0.94.0 by @dependabot in https://github.com/google/trillian/pull/2802\n* Bump cloud.google.com/go/spanner from 1.37.0 to 1.38.0 by @dependabot in https://github.com/google/trillian/pull/2806\n* Bump k8s.io/klog/v2 from 2.70.1 to 2.80.0 by @dependabot in https://github.com/google/trillian/pull/2807\n* Bump k8s.io/klog/v2 from 2.80.0 to 2.80.1 by @dependabot in https://github.com/google/trillian/pull/2808\n* Bump github.com/google/go-cmp from 0.5.8 to 0.5.9 by @dependabot in https://github.com/google/trillian/pull/2809\n* Bump google.golang.org/api from 0.94.0 to 0.95.0 by @dependabot in https://github.com/google/trillian/pull/2810\n* Bump go.etcd.io/etcd/etcdctl/v3 from 3.5.4 to 3.5.5 by @dependabot in https://github.com/google/trillian/pull/2812\n* Bump go.etcd.io/etcd/v3 from 3.5.4 to 3.5.5 by @dependabot in https://github.com/google/trillian/pull/2816\n* Bump google.golang.org/api from 0.95.0 to 0.96.0 by @dependabot in https://github.com/google/trillian/pull/2813\n* Bump google.golang.org/api from 0.96.0 to 0.97.0 by @dependabot in https://github.com/google/trillian/pull/2819\n* Bump cloud.google.com/go/spanner from 1.38.0 to 1.39.0 by @dependabot in https://github.com/google/trillian/pull/2818\n* Bump google.golang.org/api from 0.97.0 to 0.98.0 by @dependabot in https://github.com/google/trillian/pull/2820\n* Bump google.golang.org/grpc from 1.49.0 to 1.50.0 by @dependabot in https://github.com/google/trillian/pull/2821\n* Bump google.golang.org/grpc from 1.50.0 to 1.50.1 by @dependabot in https://github.com/google/trillian/pull/2823\n* Bump google.golang.org/api from 0.98.0 to 0.99.0 by @dependabot in https://github.com/google/trillian/pull/2822\n* Bump google.golang.org/api from 0.99.0 to 0.100.0 by @dependabot in https://github.com/google/trillian/pull/2824\n* Bump github.com/prometheus/client_model from 0.2.0 to 0.3.0 by @dependabot in https://github.com/google/trillian/pull/2825\n* Bump golang.org/x/tools from 0.1.12 to 0.2.0 by @dependabot in https://github.com/google/trillian/pull/2826\n* Bump google.golang.org/api from 0.100.0 to 0.101.0 by @dependabot in https://github.com/google/trillian/pull/2827\n* Bump github.com/prometheus/client_golang from 1.13.0 to 1.13.1 by @dependabot in https://github.com/google/trillian/pull/2828\n* Bump golang.org/x/sys from 0.1.0 to 0.2.0 by @dependabot in https://github.com/google/trillian/pull/2829\n* Bump google.golang.org/api from 0.101.0 to 0.102.0 by @dependabot in https://github.com/google/trillian/pull/2830\n* Bump go.opencensus.io from 0.23.0 to 0.24.0 by @dependabot in https://github.com/google/trillian/pull/2832\n* Bump cloud.google.com/go/spanner from 1.39.0 to 1.40.0 by @dependabot in https://github.com/google/trillian/pull/2831\n* Bump github.com/prometheus/client_golang from 1.13.1 to 1.14.0 by @dependabot in https://github.com/google/trillian/pull/2838\n* Bump google.golang.org/api from 0.102.0 to 0.103.0 by @dependabot in https://github.com/google/trillian/pull/2839\n* Bump golang.org/x/crypto from 0.1.0 to 0.2.0 by @dependabot in https://github.com/google/trillian/pull/2841\n* Bump golang.org/x/tools from 0.2.0 to 0.3.0 by @dependabot in https://github.com/google/trillian/pull/2840\n* Dependabot: Also keep GitHub actions up-to-date by @JAORMX in https://github.com/google/trillian/pull/2842\n* Bump actions/upload-artifact from 3.1.0 to 3.1.1 by @dependabot in https://github.com/google/trillian/pull/2843\n* Bump golang.org/x/crypto from 0.2.0 to 0.3.0 by @dependabot in https://github.com/google/trillian/pull/2847\n* Bump google.golang.org/grpc from 1.50.1 to 1.51.0 by @dependabot in https://github.com/google/trillian/pull/2845\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.2.16 to 2.2.18 by @dependabot in https://github.com/google/trillian/pull/2846\n* Bump go.etcd.io/etcd/v3 from 3.5.5 to 3.5.6 by @dependabot in https://github.com/google/trillian/pull/2849\n* Bump github.com/cockroachdb/cockroach-go/v2 from 2.2.18 to 2.2.19 by @dependabot in https://github.com/google/trillian/pull/2856\n* Bump golang.org/x/sys from 0.2.0 to 0.3.0 by @dependabot in https://github.com/google/trillian/pull/2858\n* Bump cloud.google.com/go/spanner from 1.40.0 to 1.41.0 by @dependabot in https://github.com/google/trillian/pull/2857\n* Bump actions/setup-go from 3.3.1 to 3.4.0 by @dependabot in https://github.com/google/trillian/pull/2862\n* Bump github/codeql-action from 2.1.34 to 2.1.35 by @dependabot in https://github.com/google/trillian/pull/2861\n* Bump golangci/golangci-lint-action from 3.3.0 to 3.3.1 by @dependabot in https://github.com/google/trillian/pull/2860\n* Bump github.com/go-sql-driver/mysql from 1.6.0 to 1.7.0 by @dependabot in https://github.com/google/trillian/pull/2859\n* Bump qs, body-parser and express in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/2867\n* Bump minimist from 1.2.0 to 1.2.7 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/2864\n* Bump axios and @slack/webhook in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/2868\n* Bump json-bigint and google-auth-library in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/2869\n* Bump node-fetch from 2.6.0 to 2.6.7 in /scripts/gcb2slack by @dependabot in https://github.com/google/trillian/pull/2866\n* Bump golang.org/x/tools from 0.3.0 to 0.4.0 by @dependabot in https://github.com/google/trillian/pull/2870\n* Bump github/codeql-action from 2.1.35 to 2.1.36 by @dependabot in https://github.com/google/trillian/pull/2874\n* Bump actions/checkout from 3.1.0 to 3.2.0 by @dependabot in https://github.com/google/trillian/pull/2873\n* Bump golang.org/x/crypto from 0.3.0 to 0.4.0 by @dependabot in https://github.com/google/trillian/pull/2872\n* Bump google.golang.org/api from 0.103.0 to 0.104.0 by @dependabot in https://github.com/google/trillian/pull/2871\n* Bump cloud.google.com/go/spanner from 1.41.0 to 1.42.0 by @dependabot in https://github.com/google/trillian/pull/2877\n\n\n## v.1.5.0\n\n### Storage\n\n* Ephemeral nodes are no-longer written for any tree by default (and have not been read since the v1.4.0 release), the corresponding `--tree_ids_with_no_ephemeral_nodes` flag is now deprecated (and will be removed in a future release).\n  \n### Cleanup\n* Format code according to go1.19rc2 by @mhutchinson in https://github.com/google/trillian/pull/2785\n* Delete merkle package, use [github.com/transparency-dev/merkle](https://pkg.go.dev/github.com/transparency-dev/merkle) instead.\n\n### Misc\n* Fix order-dependent test by @hickford in https://github.com/google/trillian/pull/2792\n\n### Dependency updates\n* Updated golangci-lint to v1.47.3 (developers should update to this version) by @mhutchinson in https://github.com/google/trillian/pull/2791\n* Bump google.golang.org/api from 0.87.0 to 0.88.0 by @dependabot in https://github.com/google/trillian/pull/2783\n* Bump cloud.google.com/go/spanner from 1.35.0 to 1.36.0 by @dependabot in https://github.com/google/trillian/pull/2784\n* Bump google.golang.org/api from 0.88.0 to 0.90.0 by @dependabot in https://github.com/google/trillian/pull/2789\n* Bump golang.org/x/tools from 0.1.11 to 0.1.12 by @dependabot in https://github.com/google/trillian/pull/2790\n* Bump google.golang.org/protobuf from 1.28.0 to 1.28.1 by @dependabot in https://github.com/google/trillian/pull/2788\n* Bump google.golang.org/api from 0.90.0 to 0.91.0 by @dependabot in https://github.com/google/trillian/pull/2796\n* Bump github.com/prometheus/client_golang from 1.12.2 to 1.13.0 by @dependabot in https://github.com/google/trillian/pull/2795\n* Bump github.com/fullstorydev/grpcurl from 1.8.6 to 1.8.7 by @dependabot in https://github.com/google/trillian/pull/2794\n* Bump google.golang.org/api from 0.91.0 to 0.92.0 by @dependabot in https://github.com/google/trillian/pull/2798\n\n## v1.4.2\n\n* #2568: Allow disabling the writes of ephemeral nodes to storage via the\n  `--tree_ids_with_no_ephemeral_nodes` flag to the sequencer.\n* #2748: `--cloudspanner_max_burst_sessions` deprecated (it hasn't had any\n  effect for a while, now it's more explicit)\n* #2768: update go.mod to use 1.17 compatibility from 1.13.\n\n### Dependency updates\n\n* Updated golangci-lint to v1.46.1 (developers should update to this version)\n* Removed dependency on certificate-transparency-go\n\n### Developer updates\n\n* #2765 copies the required protos from `googleapis` into `third_party` in this\n  repository. This simplifies the preconditions in order to compile the proto\n  definitions, and removes a big dependency on `$GOPATH/src` which was archaic;\n  `$GOPATH/src/github.com/googleapis/googleapis` is no longer required.\n\n## v1.4.1\n\n* `countFromInformationSchema` function to add support for MySQL 8.\n\n### Removals\n\n * #2710: Unused `storage/tools/dumplib` was removed. The useful storage format\n  regression test moved to `integration/format`.\n * #2711: Unused `storage/tools/hasher` removed.\n * #2715: Packages under `merkle` are deprecated and to be removed. Use\n   https://github.com/transparency-dev/merkle instead.\n\n### Misc improvements\n\n * #2712: Fix MySQL world-writable config warning.\n * #2726: Check the tile height invariant stricter. No changes required.\n\n### Dependency updates\n * #2731: Update `protoc` from `v3.12.4` to `v3.20.1`\n\n## v1.4.0\n\n* Recommended go version for development: 1.17\n  * This is the version used by the cloudbuild presubmits. Using a\n    different version can lead to presubmits failing due to unexpected\n    diffs.\n* GCP terraform script updated. GKE 1.19 and updated CPU type to E2\n\n### Dependency updates\nMany dep updates, including:\n * Upgraded to etcd v3 in order to allow grpc to be upgraded (#2195)\n   * etcd was `v0.5.0-alpha.5`, now `v3.5.0`\n * grpc upgraded from `v1.29.1` to `v1.40.0`\n * certificate-transparency-go from `v1.0.21` to\n   `v1.1.2-0.20210512142713-bed466244fa6`\n * protobuf upgraded from `v1` to `v2`\n * MySQL driver from `1.5.0` to `1.6.0`\n\n### Cleanup\n * **Removed signatures from LogRoot and EntryTimestamps returned by RPCs** (reflecting that\n   there should not be a trust boundary between Trillian and the personality.)\n * Removed the deprecated crypto.NewSHA256Signer function.\n * Finish removing the `LogMetadata.GetUnsequencedCounts()` method.\n * Removed the following APIs:\n   - `TrillianLog.GetLeavesByHash`\n   - `TrillianLog.GetLeavesByIndex`\n   - `TrillianLog.QueueLeaves`\n * Removed the incomplete Postgres storage backend (#1298).\n * Deprecated `LogRootV1.Revision` field.\n * Moved `rfc6962` hasher one directory up to eliminate empty leftover package.\n * Removed unused `log_client` tool.\n * Various tidyups and improvements to merke & proof generation code.\n * Remove some remnants of experimental map.\n\n### Storage refactoring\n * `NodeReader.GetMerkleNodes` does not accept revisions anymore. The\n   implementations must use the transaction's `ReadRevision` instead.\n * `TreeStorage` migrated to using `compact.NodeID` type suitable for logs.\n * Removed the tree storage `ReadRevision` and `WriteRevision` methods.\n   Revisions are now an implementation detail of the current storages. The\n   change allows log implementations which don't need revisions.\n * Removed `Rollback` methods from storage interfaces, as `Close` is enough to\n   cover the use-case.\n * Removed the unused `IsOpen` and `IsClosed` methods from transaction\n   interfaces.\n * Removed the `ReadOnlyLogTX` interface, and put its only used\n   `GetActiveLogIDs` method to `LogStorage`.\n * Inlined the `LogMetadata` interface to `ReadOnlyLogStorage`.\n * Inlined the `TreeStorage` interfaces to `LogStorage`.\n * Removed the need for the storage layer to return ephemeral node hashes. The\n   application layer always requests for complete subtree nodes comprising the\n   compact ranges corresponding to the requests.\n * Removed the single-tile callback from `SubtreeCache`, it uses only\n   `GetSubtreesFunc` now.\n * Removed `SetSubtreesFunc` callback from `SubtreeCache`. The tiles should be\n   written by the caller now, i.e. the caller must invoke the callback.\n\n## v1.3.13\n[Published 2021-02-16](https://github.com/google/trillian/releases/tag/v1.3.13)\n\n### Cleanup\n * Removed the experimental map API.\n\n## v1.3.12\n[Published 2021-02-16](https://github.com/google/trillian/releases/tag/v1.3.12)\n\n### Misc improvements\n\n * Removed unused `PeekTokens` method from the `quota.Manager` interface.\n * Ensure goroutines never block in the subtree cache (#2272).\n * Breaking unnecessary dependencies for Trillian clients:\n   * Moved verifiers from `merkle` into `merkle/{log,map}verifier`sub-pacakges,\n     reducing the amount of extra baggage inadvertently pulled in by clients.\n  * Concrete hashers have been moved into subpackages, separating them from their\n    registration code, allowing clients to directly pull just the hasher they're\n    interested in and avoid the Trillian/hasher registry+protobuf deps.\n * Moved some packages intended for internal-only use into `internal` packages:\n   * InMemoryMerkleTree (indended to only be used by Trillian tests)\n * Removed wrapper for etcd client (#2288).\n * Moved `--quota_system` and `--storage_system` flags to `main.go` so that they\n   are initialised properly. It might break depending builds relying on these\n   flags. Suggested fix: add the flags to `main.go`.\n * Made signer tolerate mastership election failures [#1150].\n * `testdb` no longer accepts the `--test_mysql_uri` flag, and instead honours the\n   `TEST_MYSQL_URI` ENV var. This makes it easier to blanket configure tests to use a\n   specific test DB instance.\n * Removed experimental Skylog folder (#2297).\n * Fixed a race condition in the operation manager that should only affect tests\n   (#2302).\n * Run gofumpt formatter on the whole repository (#2315).\n * Refactor signer operation loop (#2294).\n\n### Upgrades\n * Dockerfiles are now based on Go 1.13 image.\n * The etcd is now pinned to v3.4.12.\n * The golangci-lint suite is now at v1.36.0.\n * CI/CD has migrated from Travis to Google Cloud Build.\n * prometheus from 1.7.1 to 1.9.0 (#2239, #2270).\n * go-cmp from 0.5.2 to 0.5.4 (#2262).\n * apache/beam from 2.26.0+incompatible to 2.27.0+incompatible (#2273).\n * lib/pq from 1.8.0 to 1.9.0 (#2264).\n * go-redis from 6.15.8+incompatible to 6.15.9+incompatible (#2215).\n\n\n### Process\n * Recognise that we do not follow strict semantic versioning practices.\n\n## v1.3.11\n[Published 2020-10-06](https://github.com/google/trillian/releases/tag/v1.3.11)\n\n### Documentation\n\nAdded docs which describe the Claimant Model of transparency, a useful\nframework for reasoning about the design and architecture of transparent\nsystems.\n\n### Misc improvements\n\n * Fixed int to string conversion warnings for golang 1.15\n * Metric improvements for fetched leaf counts\n * Move tools.go into its own directory to help with dependencies\n\n### Dependency updates\n * go-grpc-middleware from 1.2.0 to 1.2.2 (#2219, #2229)\n * stackdriver from 0.13.2 to 0.13.4 (#2220, #2223)\n * Google api from 0.28.0 to 0.29.0 (#2193)\n\n\n## v1.3.10\n[Published 2020-07-02](https://github.com/google/trillian/releases/tag/v1.3.10)\n\n### Storage\n\nThe StorageProvider type and helpers have been moved from the server package to\nstorage. Aliases for the old types/functions are created for backward\ncompatibility, but the new code should not use them as we will remove them with\nthe next major version bump. The individual storage providers have been moved to\nthe corresponding packages, and are now required to be imported explicitly by\nthe main file in order to be registered. We are including only MySQL and\ncloudspanner providers by default, since these are the ones that we support.\n\nThe cloudspanner storage is supported for logs only, while the Map storage API\nis being polished and decoupled from the log storage API. We may return the\nsupport when the new API is tested.\n\nSupport for storage of Ed25519 signatures has been added to the mysql and\npostgres storage drivers (only applicable in new installations) and bugs\npreventing correct usage of that algorithm have been fixed.\n\n#### Storage TX Interfaces\n- `QueueLeaves` has been removed from the `LogTreeTX` interface because\n  `QueueLeaves` is not transactional.  All callers use the\n  `QueueLeaves` function in the `LogStorage` interface.\n- `AddSequencedLeaves` has been removed from the `LogTreeTX`.\n\n\n### Log Changes\n\n#### Monitoring & Metrics\n\nThe `queued_leaves` metric is removed, and replaced by `added_leaves` which\ncovers both `QueueLeaves` and `AddSequencedLeaves`, and is labeled by log ID.\n\n#### MySQL Dequeueing Change #2159\nmysql will now remove leaves from the queue inside of `UpdateLeaves` rather\nthan directly inside of `Dequeue`.\nThis change brings the behavior of the mysql storage implementation into line\nwith the spanner implementation and makes consistent testing possible.\n\n\n### Map Changes\n\n**The verifiable map is still experimental.**\nAPIs, such as SetLeaves, have been deprecated and will be deleted in the near\nfuture. The semantics of WriteLeaves have become stricter: now it always\nrequires the caller to specify the write revision. These changes will not\naffect the Trillian module semantic version due to the experimental status of\nthe Map.\n\nMap API has been extended with Layout, GetTiles and SetTiles calls which allow\nfor more direct processing of sparse Merkle tree tiles in the application layer.\nMap storage implementations are simpler, and no longer use the SubtreeCache.\n\nThe map client has been updated so that GetAndVerifyMapLeaves and\nGetAndVerifyMapLeavesByRevision return the MapRoot for the revision at which the\nleaves were fetched. Without this callers of GetAndVerifyMapLeaves in particular\nwere unable to reason about which map revision they were seeing. The\nSetAndVerifyMapLeaves method was deleted.\n\n\n\n## v1.3.9\n[Published 2020-06-22](https://github.com/google/trillian/releases/tag/v1.3.9)\n\n### Selected Dependency Updates\n* etcd from v3.3.18 to 3.4.7 (#2090)\n* etcd-operator from v0.9.1 to v0.9.4\n* upgraded protoc version to latest (#2088)\n* github.com/golang/protobuf to v1.4.1 (#2111)\n* google.golang.org/grpc from v1.26 to 1.29.1 (#2108)\n\n\n## v1.3.8\n[Published 2020-05-12](https://github.com/google/trillian/releases/tag/v1.3.8)\n\n### HTTP APIs\n\nThe HTTP/JSON APIs have been removed in favor of a pure gRPC intereface.\n[grpcurl](https://github.com/fullstorydev/grpcurl) is the recommended way\nof interacting with the gRPC API from the commandline.\n\n\n## v1.3.7\n[Published 2020-05-12](https://github.com/google/trillian/releases/tag/v1.3.7)\n\n### Server Binaries\n\nThe `trillian_log_server`, `trillian_log_signer` and `trillian_map_server`\nbinaries have moved from `github.com/google/trillian/server/` to\n`github.com/google/trillian/cmd`. A subset of the `server` package has also\nmoved and has been split into `cmd/internal/serverutil`, `quota/etcd` and\n`quota/mysqlqm` packages.\n\n\n## v1.3.6\n[Published 2020-05-12](https://github.com/google/trillian/releases/tag/v1.3.6)\n\n### Deployments\n\nThe Kubernetes configs will now provision 5 nodes for Trillian's Etcd cluster,\ninstead of 3 nodes.\n[This makes the Etcd cluster more resilient](https://etcd.io/docs/v3.2.17/faq/#what-is-failure-tolerance)\nto nodes becoming temporarily unavailable, such as during updates (it can now\ntolerate 2 nodes being unavailable, instead of just 1).\n\n### Monitoring & Metrics\n\nA count of the total number of individual leaves the logserver attempts to\nfetch via the GetEntries.* API methods has been added.\n\n\n## v1.3.5\n[Published 2020-05-12](https://github.com/google/trillian/releases/tag/v1.3.5)\n\n### Log Changes\n\n#### Potential sequencer hang fixed\nA potential deadlock condition in the log sequencer when the process is\nattempting to exit has been addressed.\n\n### Quota\n\n#### New Features\n\nAn experimental Redis-based `quota.Manager` implementation has been added.\n\n#### Behaviour Changes\n\nQuota used to be refunded for all failed requests. For uses of quota that were\nto protect against abuse or fair utilization, this could allow infinite QPS in\nsituations that really should have the requests throttled. Refunds are now only\nperformed for tokens in `Global` buckets, which prevents tokens being leaked if\nduplicate leaves are queued.\n\n### Tools\n\nThe `licenses` tool has been moved from \"scripts/licenses\" to [a dedicated\nrepository](https://github.com/google/go-licenses).\n\n### Bazel Changes\n\nPython support is disabled unless we hear that the community cares about this\nbeing re-enabled. This was broken by a downstream change and without a signal\nfrom the Trillian community to say this is needed, the pragmatic action is to\nnot spend time investigating this issue.\n\n\n## v1.3.4 - Invalid release, do not use.\n[Published 2020-05-12](https://github.com/google/trillian/releases/tag/v1.3.4)\n\n\n## v1.3.3 - Module fixes\n\nPublished 2019-10-31 17:30:00 +0000 UTC\n\nPatch release to address Go Module issue. Removes `replace` directives in our\ngo.mod file now that our dependencies have fixed their invalid pseudo-version\nissues.\n\n## v1.3.2 - Module fixes\n\nPublished 2019-09-05 17:30:00 +0000 UTC\n\nPatch release to address Go Module issue. Some dependencies use invalid pseudo-\nversions in their go.mod files that Go 1.13 rejects. We've added `replace`\ndirectives to our go.mod file to fix these invalid pseudo-versions.\n\n## v1.3.1 - Module and Bazel fixes\n\nPublished 2019-08-16 15:00:00 +0000 UTC\n\nPatch release primarily to address Go Module issue. v1.3.0 declared a dependency\non github.com/russross/blackfriday/v2 v2.0.1+incompatible which made downstream\ndependencies suffer.\n\n## v1.3.0\n\nPublished 2019-07-17 15:00:00 +0000 UTC\n\n### Storage APIs GetSignedLogRoot / SetSignedLogRoot now take pointers\n\nThis at the storage layer and does not affect the log server API.\nThis is part of work to fix proto buffer usages where they are passed\nby value or compared by generic code like `reflect.DeepEquals()`. Passing\nthem by value creates shallow copies that can share internal state. As the\ngenerated structs contain additional exported `XXX_` fields generic\ncomparisons using all fields can produce incorrect results.\n\n### Storage Commit takes context.Context\n\nTo support passing a context down to `NodeStorage.SetLeaves`, and remove various `context.TODO()`s,\nthe following functions have been modified to accept a `context.Context` parameter:\n\n- `storage/cache.NodeStorage.SetLeaves`\n- `storage/cache.SetSubtreesFunc`\n- `storage/cache.SubtreeCache.Flush`\n- `storage.ReadonlyLogTX.Commit`\n\n### Go Module Support\n\nGo Module support has been enabled. Please use GO111MODULE=on to build Trillian.\nUpdating dependencies no longer requires updating the vendor directory.\n\n### TrillianMapWrite API\nNew API service for writing to the Trillian Map. This allows APIs such as\nGetLeavesByRevisionNoProof to be removed from the read API, and these methods to\nbe tuned & provisioned differently for read vs write performance.\n\n### GetLeavesByRevisionNoProof API\nAllow map clients to forgo fetching inclusion proofs.\nThis dramatically speeds things up for clients that don't need verifiability.\nThis situation occurs in some situation where a Trillian personality is\ninteracting directly with the Trillian Map.\n\n### GetMapLeafByRevision API\nNew GetMapLeafByRevision API for fetching a single map leaf. This allows there\nto be a separate API end point for fetching a single leaf vs. the batch\nGetMapLeavesByRevision API which is much slower when many leaves are requested.\nThis supports separate monitoring and alerting for different traffic patterns.\n\n### Add Profiling Flags to Binaries\n\nThe `trillian_log_server`, `trillian_log_signer` and `trillian_map_server`\nbinaries now have CPU and heap profiling flags. Profiling is off by default.\nFor more details see the\n[Go Blog](https://blog.golang.org/profiling-go-programs).\n### Map performance tweaks\n\nThe map mode has had some performance tweaks added:\n* A workaround for locking issues which affect the map when it's used in\n  single-transaction mode.\n\n### Introduce BatchInclusionProof function\n\nAdded a batch version of the Merkle Tree InclusionProof function.\n\nUpdated the map RPC for getLeaves to use the new batch function to improve\nefficiency.\n\n### Google Cloud Spanner support\n\nGoogle Cloud Spanner is now a supported storage backend for maps.\n\nThe admin API calls to list trees backed by Cloud Spanner trees are fixed.\n\n### RPC Server Transaction Leaks Fixed\n\nThere were some cases where the Log RPC server could leak storage transactions\nin error situations. These have now been fixed. If you have a custom storage\nimplementation review the fixes made to the MySQL Log storage to see if they\nneed to be applied to your code (`storage/mysql/log_storage.go`). The Map\nserver had similar issues but these were fixed without requiring changes to\nstorage code.\n\n### GetLatestSignedLogRoot With Consistency Proof\n\n`GetLatestSignedLogRoot` in the LogServer will return a consistency proof if\n`first_tree_size` > 0. This reduces the number of RPC calls from logClient from\n2 to 1 in `client.getAndVerifyLatestRoot`.\n\n### Testing\n\nSupport has been added for testing against a locally running mysql docker image,\nin addition to a locally running mysql instance.\n\n### Deprecated Fields Removed From SignedLogRoot Proto\n\n*Important Note*: For use in Certificate Transparency this version of the\nlogserver binary won't work properly with an older CTFE. Make sure to update the\nCTFE servers to a current version (built from a git checkout after March 20th\n2019) before deploying logservers that include this change or deploy them\ntogether with this release. Failure to do this can result in 5XX errors being\nreturned to clients when the old handler code tries to access fields in\nresponses that no longer exist.\n\nAll the fields marked as deprecated in this proto have been removed. All the\nsame fields are available via the TLS marshalled log root in the proto. Updating\naffected code is straightforward.\n\nNormally, clients will want to verify that the signed root is correctly signed.\nThis is the preferred way to interact with the root data.\n\nThere is a utility function provided that will verify the signature and unpack\nthe TLS data. It works well in conjunction with a `LogVerifier`. The public key\nof the server is required.\n\n```go\nverifier := client.NewLogVerifier(rfc6962.DefaultHasher, pk, crypto.SHA256)\nroot, err := crypto.VerifySignedLogRoot(verifier.PubKey, verifier.SigHash, resp.SignedLogRoot)\nif err != nil {\n  // Signature verified and unmarshalled correctly. The struct may now\n  // be used.\n  if root.TreeSize > 0 {\n    // Non empty tree.\n  }\n}\n```\n\n### MySQL changes\n\n#### Configurable number of connections for MySQL\n\nTwo new flags have been added that limit connections to MySQL database servers:\n\n-   `--mysql_max_conns` - limits the total number of database connections\n-   `--mysql_max_idle_conns` - limits the number of idle database connections\n\nBy default, there is no maximum number of database connections. However, the\ndatabase server will likely impose limits on the number of connections. The\ndefault limit on idle connections is controlled by\n[Go's `sql` package](https://golang.org/pkg/database/sql/#DB.SetMaxIdleConns).\n\n#### Enfored no concurrent use of MySQL tx\n\nConcurrently using a single MySQL transaction can cause the driver to error\nout, so we now attempt to prevent this from happening.\n\n### Removal of length limits for a tree's `display_name` and `description`\n\nPreviously, these were restricted to 20 bytes and 200 bytes respectively. These\nlimits have been removed. However, the underlying storage implementation may\nstill impose its own limitations.\n\n### Server validation of leaf hashes\n\nThe log server now checks that leaf hashes are the correct length and returns\nan InvalidArgument error if they are not. Previously, GetLeavesByHash would\nsimply not return any matching leaves for invalid hashes, and\nGetInclusionProofByHash would return a NotFound error.\n\n### Map client\n\nA [MapClient](client/map_client.go) has been added to simplify interacting with\nthe map server.\n\n### Database Schema\n\nThis version includes a change to the MySQL and Postgres database schemas to add\nan index on the `SequencedLeafData` table. This improves performance for\ninclusion proof queries.\n\n### Deployments\n\nThe Trillian Docker images now accept GOFLAGS and GO111MODULE arguments\nand set them as environment variables inside the Docker container.\n\nThe [db\\_server Docker image](examples/deployment/docker/db_server/Dockerfile)\nis now based on\n[the MySQL 5.7 image from the Google Cloud Marketplace](https://console.cloud.google.com/marketplace/details/google/mysql5),\nrather than the [official MySQL 5.7 image](https://hub.docker.com/_/mysql).\nThis Dockerfile supercedes Dockerfile.db, which has been removed.\n\nThere is now a [mysql.cnf file](examples/deployment/docker/db_server/mysql.cnf)\nalongside the Dockerfile that makes it easy to build the image with a custom\nconfiguration, e.g. to allow MySQL to use more memory.\n\nThe `trillian-log-service` and `trillian-log-signer` Kubernetes services will\nnow have load balancers configured for them that expose those services outside\nof the Kubernetes cluster. This makes it easier to access their APIs. When\ndeployed on Google Cloud, these will be\n[Internal Load Balancers](https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing).\nNote that this change **cannot be applied to an existing deployment**; delete\nthe existing Kubernetes services and redeploy them, otherwise you'll see an\nerror similar to `The Service \"trillian-log-service\" is invalid: spec.clusterIP:\nInvalid value: \"\": field is immutable`.\n\nA working [Docker Compose](https://docs.docker.com/compose/) configuration is\nnow available and can be used to bring up a local Trillian deployment for\ntesting and experimental purposes:\n\n```shell\ndocker-compose -f examples/deployment/docker-compose.yml up\n```\n\nDocker Compose v3.1 or higher is required.\n\nThe Terraform, Kubernetes and Docker configuration files, as well as various\nscripts, all now use the same, consistently-named environment variables for\nMySQL-related data (e.g. `MYSQL_DATABASE`). The variable names are based on\nthose for the\n[MySQL Docker image](https://hub.docker.com/_/mysql#environment-variables).\n\nDocker images have been upgraded from Go 1.9 to 1.11. They now use [\"Distroless\"\nbase images](https://github.com/GoogleContainerTools/distroless).\n\n### Dropped metrics\n\nQuota metrics with specs of the form `users/<user>/read` and\n`users/<user>/write` are no longer exported by the Trillian binaries (as they\nlead to excessive storage requirements for Trillian metrics).\n\n### Resilience improvements in `log_signer`\n\n#### Add timeout to sequencing loop\n\nAdded a timeout to the context in the sequencing loop, with a default of 60s.\n\n#### Fix Operation Loop Hang\n\nResolved a bug that would hide errors and cause the `OperationLoop` to hang\nuntil process exit if any error occurred.\n\n### Linting toolchain migration\n\ngometalinter has been replaced with golangci-lint for improved performance and\nGo module support.\n\n### Compact Merkle tree data structures\n\n`CompactMerkleTree` has been removed from `github.com/google/trillian/merkle`,\nand a new package `github.com/google/trillian/merkle/compact` was introduced.  A\nnew powerful data structure named \"compact range\" has been added to that\npackage, and is now used throughout the repository instead of the compact tree.\nIt is a generalization of the previous structure, as it allows manipulating\narbitrary sub-ranges of leaves rather than only prefixes.\n\n### Storage API changes\n\nThe internal storage API is modified so that the ReadOnlyTreeTX.ReadRevision and\nTreeWriter.WriteRevision entrypoints take a context.Context parameter and return\nan optional error.\n\nThe `SubtreeCache.GetNodeHash()` method is no longer exported.\n\nThe memory storage provider has been refactored to make it more consistent with\nthe other storage providers.\n\nThe `LogMetadata.GetUnsequencedCounts()` method has been removed.\n\n`NodeReader.GetMerkleNodes` now must return `Node` objects in the same order as\nnode IDs requested. Storage implementations known to us already adhere to this\nrequirement.\n\n### Maphammer improvements\n\nThe maphammer test tool for the experimental Trillian Map has been enhanced.\n\n### Default values changed for some signer flags\n\nThe following flags for the signer have new default values:\n\n-   `--sequencer_interval`: changed from 10 seconds to 100 milliseconds\n-   `--batch_size`: changed from 50 to 1000\n\nThese changes improve the signer's throughput and latency under typical\nconditions.\n\n### Master election refactoring\n\nThe `--resign_odds` flag in `logsigner` is removed, in favor of a more generic\n`--master_hold_jitter` flag. Operators using this flag are advised to set the\njitter to `master_check_interval * resign_odds * 2` to achieve similar behavior.\n\nThe `--master_check_interval` flag is removed from `logsigner`.\n\n`logsigner` switched to using a new master election interface contained in\n`util/election2` package. The interfaces in `util/election` are removed.\n\n### `CONIKS_SHA256` hash strategy added\n\nSupport has been added for a CONIKS sparse tree hasher with SHA256 as the hash\nalgorithm. Set a tree's `hash_strategy` to `CONIKS_SHA256` to use it.\n\n### Performance\n\nThe performance of `SetLeaves` requests on the Map has been slightly improved.\nThe performance of `GetConsistencyProof` requests has been improved when using\nMySQL.\n\n### Logging\n\nSome warning-level logging has been removed from the sequencer in favour of\nreturning the same information via the returned error. The caller may still\nchoose to log this information. This allows storage implementations that retry\ntransactions to suppress warnings when a transaction initially fails but a retry\nsucceeds.\n\nSome incorrectly-formatted log messages have been fixed.\n\n### Documentation\n\n[API documentation in Markdown format](docs/api.md) is now available.\n\n### Other\n\nThe `TimeSource` type (and other time utils) moved to a separate `util/clock`\npackage, extended with a new `Timer` interface that allows mocking `time.Timer`.\n\nThe `Sequencer.SignRoot()` method has been removed.\n\n## v1.2.1 - Map race fixed. TLS client support. LogClient improvements\n\nPublished 2018-08-20 10:31:00 +0000 UTC\n\n### Servers\n\nA race condition was fixed that affected sparse Merkle trees as served by the\nmap server.\n\n### Utilities / Binaries\n\nThe `maphammer` uses a consistent empty check, fixing spurious failures in some\ntests.\n\nThe `createtree` etc. set of utilities now support TLS via the `-tls-cert-file`\nflag. This support is also available as a client module.\n\n### Log Client\n\n`GetAndVerifyInclusionAtIndex` no longer updates the clients root on every\naccess as this was an unexpected side effect. Clients now have explicit control\nof when the root is updated by calling `UpdateRoot`.\n\nA root parameter is now required when log clients are constructed.\n\nThe client will now only retry requests that fail with the following errors:\n\n-   Aborted\n-   DeadlineExceeded\n-   ResourceExhausted\n-   Unavailable\n\nThere is one exception - it will also retry InitLog/InitMap requests that fail\ndue to a FailedPrecondition error.\n\n### Other\n\nThe Travis build script has been updated for newer versions of MySQL (5.7\nthrough MySQL 8) and will no longer work with 5.6.\n\nCommit\n[f3eaa887163bb4d2ea4b4458cb4e7c5c2f346bc6](https://api.github.com/repos/google/trillian/commits/f3eaa887163bb4d2ea4b4458cb4e7c5c2f346bc6)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.2.1)\n\n## v1.2.0 - Signer / Quota fixes. Error mapping fix. K8 improvements\n\nPublished 2018-06-25 10:42:52 +0000 UTC\n\nThe Log Signer now tries to avoid creating roots older than ones that already\nexist. This issue has been seen occurring on a test system. Important note: If\nrunning this code in production allowing clocks to drift out of sync between\nnodes can cause other problems including for clustering and database\nreplication.\n\nThe Log Signer now publishes metrics for the logs that it is actively signing.\nIn a clustered environment responsibility can be expected to move around between\nsigner instances over time.\n\nThe Log API now allows personalities to explicitly list a vector of identifiers\nwhich should be charged for `User` quota. This allows a more nuanced application\nof request rate limiting across multiple dimensions. Some fixes have also been\nmade to quota handling e.g. batch requests were not reserving the appropriate\nquota. Consult the corresponding PRs for more details.\n\nFor the log RPC server APIs `GetLeavesByIndex` and `GetLeavesByRange` MySQL\nstorage has been modified to return status codes that match CloudSpanner.\nPreviously some requests with out of range parameters were receiving 5xx error\nstatus rather than 4xx when errors were mapped to the HTTP space by CTFE.\n\nThe Kubernetes deployment scripts continue to evolve and improve.\n\nCommit\n[aef10347dba1bd86a0fcb152b47989d0b51ba1fa](https://api.github.com/repos/google/trillian/commits/aef10347dba1bd86a0fcb152b47989d0b51ba1fa)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.2.0)\n\n## v1.1.1 - CloudSpanner / Tracing / Health Checks\n\nPublished 2018-05-08 12:55:34 +0000 UTC\n\nMore improvements have been made to the CloudSpanner storage code. CloudSpanner\nstorage has now been tested up to ~3.1 billion log entries.\n\nExplicit health checks have been added to the gRPC Log and Map servers (and the\nlog signer). The HTTP endpoint must be enabled and the checks will serve on\n`/healthz` where a non 200 response means the server is unhealthy. The example\nKubernetes deployment configuration has been updated to include them. Other\nimprovements have been made to the Kubernetes deployment scripts and docs.\n\nThe gRPC Log and Map servers have been instrumented for tracing with\n[OpenCensus](https://opencensus.io/). For GCP it just requires the `--tracing`\nflag to be added and results will be available in the GCP console under\nStackDriver -> Trace.\n\nCommit\n[3a68a845f0febdd36937c15f1d97a3a0f9509440](https://api.github.com/repos/google/trillian/commits/3a68a845f0febdd36937c15f1d97a3a0f9509440)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.1.1)\n\n## v1.1.0 - CloudSpanner Improvements & Log Root structure changes etc.\n\nPublished 2018-04-17 08:02:50 +0000 UTC\n\nChanges are in progress (e.g. see #1037) to rework the internal signed root\nformat used by the log RPC server to be more useful / interoperable. Currently\nthey are mostly internal API changes to the log and map servers. However, the\n`signature` and `log_id` fields in SignedLogRoot have been deleted and users\nmust unpack the serialized structure to access these now. This change is not\nbackwards compatible.\n\nChanges have been made to log server APIs and CT frontends for when a request\nhits a server that has an earlier version of the tree than is needed to satisfy\nthe request. In these cases the log server used to return an error but now\nreturns an empty proof along with the current STH it has available. This allows\nclients to detect these cases and handle them appropriately.\n\nThe CloudSpanner schema has changed. If you have a database instance you'll need\nto recreate it with the new schema. Performance has been noticeably improved\nsince the previous release and we have tested it to approx one billion log\nentries. Note: This code is still being developed and further changes are\npossible.\n\nSupport for `sqlite` in unit tests has been removed because of ongoing issues\nwith flaky tests. These were caused by concurrent accesses to the same database,\nwhich it doesn't support. The use of `sqlite` in production has never been\nsupported and it should not be used for this.\n\nCommit\n[9a5dc6223bab0e1061b66b49757c2418c47b9f29](https://api.github.com/repos/google/trillian/commits/9a5dc6223bab0e1061b66b49757c2418c47b9f29)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.1.0)\n\n## v1.0.8 - Docker Updates / Freezing Logs / CloudSpanner Options\n\nPublished 2018-03-08 13:42:11 +0000 UTC\n\nThe Docker image files have been updated and the database has been changed to\n`MariaDB 10.1`.\n\nA `ReadOnlyStaleness` option has been added to the experimental CloudSpanner\nstorage. This allows for tuning that might increase performance in some\nscenarios by issuing read transactions with the `exact_staleness` option set\nrather than `strong_read`. For more details see the\n[CloudSpanner TransactionOptions](https://cloud.google.com/spanner/docs/reference/rest/v1/TransactionOptions)\ndocumentation.\n\nThe `LogVerifier` interface has been removed from the log client, though the\nfunctionality is still available. It is unlikely that there were implementations\nby third-parties.\n\nA new `TreeState DRAINING` has been added for trees with `TreeType LOG`. This is\nto support logs being cleanly frozen. A log tree in this state will not accept\nnew entries via `QueueLeaves` but will continue to integrate any that were\npreviously queued. When the queue of pending entries has been emptied the tree\ncan be set to the `FROZEN` state safely. For MySQL storage this requires a\nschema update to add `'DRAINING'` to the enum of valid states.\n\nA command line utility `updatetree` has been added to allow tree states to be\nchanged. This is also to support cleanly freezing logs.\n\nA 'howto' document has been added that explains how to freeze a log tree using\nthe features added in this release.\n\nCommit\n[0e6d950b872d19e42320f4714820f0fe793b9913](https://api.github.com/repos/google/trillian/commits/0e6d950b872d19e42320f4714820f0fe793b9913)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.8)\n\n## v1.0.7 - Storage API Changes, Schema Tweaks\n\nPublished 2018-03-01 11:16:32 +0000 UTC\n\nNote: A large number of storage related API changes have been made in this\nrelease. These will probably only affect developers writing their own storage\nimplementations.\n\nA new tree type `ORDERED_LOG` has been added for upcoming mirror support. This\nrequires a schema change before it can be used. This change can be made when\nconvenient and can be deferred until the functionality is available and needed.\nThe definition of the `TreeType` column enum should be changed to `ENUM('LOG',\n'MAP', 'PREORDERED_LOG') NOT NULL`\n\nSome storage interfaces were removed in #977 as they only had one\nimplementation. We think this won't cause any impact on third parties and are\nwilling to reconsider this change if it does.\n\nThe gRPC Log and Map server APIs have new methods `InitLog` and `InitMap` which\nprepare newly created trees for use. Attempting to use trees that have not been\ninitialized will return the `FAILED_PRECONDITION` error\n`storage.ErrTreeNeedsInit`.\n\nThe gRPC Log server API has new methods `AddSequencedLeaf` and\n`AddSequencedLeaves`. These are intended to support mirroring applications and\nare not yet implemented.\n\nStorage APIs have been added such as `ReadWriteTransaction` which allows the\nunderlying storage to manage the transaction and optionally retry until success\nor timeout. This is a more natural fit for some types of storage API such as\n[CloudSpanner](https://cloud.google.com/spanner/docs/transactions) and possibly\nother environments with managed transactions.\n\nThe older `BeginXXX` methods were removed from the APIs. It should be fairly\neasy to convert a custom storage implementation to the new API format as can be\nseen from the changes made to the MySQL storage.\n\nThe `GetOpts` options are no longer used by storage. This fixed the strange\nsituation of storage code having to pass manufactured dummy instances to\n`GetTree`, which was being called in all the layers involved in request\nprocessing. Various internal APIs were modified to take a `*trillian.Tree`\ninstead of an `int64`.\n\nA new storage implementation has been added for CloudSpanner. This is currently\nexperimental and does not yet support Map trees. We have also added Docker\nexamples for running Trillian in Google Cloud with CloudSpanner.\n\nThe maximum size of a `VARBINARY` column in MySQL is too small to properly\nsupport Map storage. The type has been changed in the schema to `MEDIUMBLOB`.\nThis can be done in place with an `ALTER TABLE` command but this could very be\nslow for large databases as it is a change to the physical row layout. Note:\nThere is no need to make this change to the database if you are only using it\nfor Log storage e.g. for Certificate Transparency servers.\n\nThe obsolete programs `queue_leaves` and `fetch_leaves` have been deleted.\n\nCommit\n[7d73671537ca2a4745dc94da3dc93d32d7ce91f1](https://api.github.com/repos/google/trillian/commits/7d73671537ca2a4745dc94da3dc93d32d7ce91f1)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.7)\n\n## v1.0.6 - GetLeavesByRange. 403 Permission Errors. Signer Metrics.\n\nPublished 2018-02-05 16:00:26 +0000 UTC\n\nA new log server RPC API has been added to get leaves in a range. This is a more\nnatural fit for CT type applications as it more closely follows the CT HTTP API.\n\nThe server now returns 403 for permission denied where it used to return 500\nerrors. This follows the behaviour of the C++ implementation.\n\nThe log signer binary now reports metrics for the number it has signed and the\nnumber of errors that have occurred. This is intended to give more insight into\nthe state of the queue and integration processing.\n\nCommit\n[b20b3109af7b68227c83c5d930271eaa4f0be771](https://api.github.com/repos/google/trillian/commits/b20b3109af7b68227c83c5d930271eaa4f0be771)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.6)\n\n## v1.0.5 - TLS, Merge Delay Metrics, Easier Admin Tests\n\nPublished 2018-02-07 09:41:08 +0000 UTC\n\nThe API protos have been rebuilt with gRPC 1.3.\n\nTimestamps have been added to the log leaves in the MySQL database. Before\nupgrading to this version you **must** make the following schema changes:\n\n*   Add the following column to the `LeafData` table. If you have existing data\n    in the queue you might have to remove the NOT NULL clause:\n    `QueueTimestampNanos BIGINT NOT NULL`\n\n*   Add the following column to the `SequencedLeafData` table:\n    `IntegrateTimestampNanos BIGINT NOT NULL`\n\nThe above timestamps are used to export metrics via monitoring that give the\nmerge delay for each tree that is in use. This is a good metric to use for\nalerting on.\n\nThe Log and Map RPC servers now support TLS.\n\nAdminServer tests have been improved.\n\nCommit\n[dec673baf984c3d22d7b314011d809258ec36821](https://api.github.com/repos/google/trillian/commits/dec673baf984c3d22d7b314011d809258ec36821)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.5)\n\n## v1.0.4 - Fix election issue. Large vendor updates.\n\nPublished 2018-02-05 15:42:25 +0000 UTC\n\nAn issue has been fixed where the master for a log could resign from the\nelection while it was in the process of integrating a batch of leaves. We do not\nbelieve this could cause any issues with data integrity because of the versioned\ntree storage.\n\nThis release includes a large number of vendor commits merged to catch up with\netcd 3.2.10 and gRPC v1.3.\n\nCommit\n[1713865ecca0dc8f7b4a8ed830a48ae250fd943b](https://api.github.com/repos/google/trillian/commits/1713865ecca0dc8f7b4a8ed830a48ae250fd943b)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.4)\n\n## v1.0.3 - Auth API. Interceptor fixes. Request validation + More\n\nPublished 2018-02-05 15:33:08 +0000 UTC\n\nAn authorization API has been added to the interceptors. This is intended for\nfuture development and integration.\n\nIssues where the interceptor would not time out on `PutTokens` have been fixed.\nThis should make the quota system more robust.\n\nA bug has been fixed where the interceptor did not pass the context deadline\nthrough to other requests it made. This would cause some failing requests to do\nso after longer than the deadline with a misleading reason in the log. It did\nnot cause request failures if they would otherwise succeed.\n\nMetalinter has been added and the code has been cleaned up where appropriate.\n\nDocker and Kubernetes scripts have been available and images are now built with\nGo 1.9.\n\nSqlite has been introduced for unit tests where possible. Note that it is not\nmulti threaded and cannot support all our testing scenarios. We still require\nMySQL for integration tests. Please note that Sqlite **must not** be used for\nproduction deployments as RPC servers are multi threaded database clients.\n\nThe Log RPC server now applies tighter validation to request parameters than\nbefore. It's possible that some requests will be rejected. This should not\naffect valid requests.\n\nThe admin server will only create trees for the log type it is hosted in. For\nexample the admin server running in the Log server will not create Map trees.\nThis may be reviewed in future as applications can legitimately use both tree\ntypes.\n\nCommit\n[9d08b330ab4270a8e984072076c0b3e84eb4601b](https://api.github.com/repos/google/trillian/commits/9d08b330ab4270a8e984072076c0b3e84eb4601b)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.3)\n\n## v1.0.2 - TreeGC, Go 1.9, Update Private Keys.\n\nPublished 2018-02-05 15:18:40 +0000 UTC\n\nGo 1.9 is required.\n\nIt is now possible to update private keys via the admin API and this was added\nto the available field masks. The key storage format has not changed so we\nbelieve this change is transparent.\n\nDeleted trees are now garbage collected after an interval. This hard deletes\nthem and they cannot be recovered. Be aware of this before upgrading if you have\nany that are in a soft deleted state.\n\nThe Admin RPC API has been extended to allow trees to be undeleted - up to the\npoint where they are hard deleted as set out above.\n\nCommit\n[442511ad82108654033c9daa4e72f8a79691dd32](https://api.github.com/repos/google/trillian/commits/442511ad82108654033c9daa4e72f8a79691dd32)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.2)\n\n## v1.0.1 - Batched Queue Option Added\n\nPublished 2018-02-05 14:49:33 +0000 UTC\n\nApart from fixes this release includes the option for a batched queue. This has\nbeen reported to allow faster sequencing but is not enabled by default.\n\nIf you want to switch to this you must build the code with the `--tags\nbatched_queue` option. You must then also apply a schema change if you are\nrunning with a previous version of the database. Add the following column to the\n`Unsequenced` table:\n\n`QueueID VARBINARY(32) DEFAULT NULL`\n\nIf you don't plan to switch to the `batched_queue` mode then you don't need to\nmake the above change.\n\nCommit\n[afd178f85c963f56ad2ae7d4721d139b1d6050b4](https://api.github.com/repos/google/trillian/commits/afd178f85c963f56ad2ae7d4721d139b1d6050b4)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0.1)\n\n## v1.0 - First Log version we believe was ready for use. To support CT.\n\nPublished 2018-02-05 13:51:55 +0000 UTC\n\nQuota metrics published. Quota admin api + server implemented. Improvements to\nlocal / AWS deployment. Map fixes and further development. ECDSA key handling\nimprovements. Key factory improvements. Code coverage added. Quota integration\ntest added. Etcd quota support in log and map connected up. Incompatibility with\nC++ code fixed where consistency proof requests for first == second == 0 were\nrejected.\n\nCommit\n[a6546d092307f6e0d396068066033b434203824d](https://api.github.com/repos/google/trillian/commits/a6546d092307f6e0d396068066033b434203824d)\nDownload [zip](https://api.github.com/repos/google/trillian/zipball/v1.0)\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.931640625,
          "content": "# See https://help.github.com/articles/about-codeowners/\n# for more info about CODEOWNERS file\n\n# It uses the same pattern rule for gitignore file\n# https://git-scm.com/docs/gitignore#_pattern_format\n#\n# These owners will be the default owners for everything in\n# the repo. Unless a later match takes precedence,\n# @google/trillian-team will be requested for\n# review when someone opens a pull request.\n*                                @google/trillian-team\n\n/*.proto                         @mhutchinson @AlCutter\n/storage/storagepb/storage.proto @mhutchinson @AlCutter\n\n# Mitigation for https://github.com/google/trillian/issues/1297\n# Folks to watch out for hanges to DB schemas and ensure that\n# there's a note added in a sensible location about how to\n# upgrade schema instances.\n/storage/mysql/schema/*          @mhutchinson @AlCutter\n/storage/cloudspanner/spanner.sdl @mhutchinson @AlCutter\n/storage/postgresql/schema/*     @mhutchinson @AlCutter\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.4267578125,
          "content": "# How to contribute #\n\nWe'd love to accept your patches and contributions to this project.  There are\na just a few small guidelines you need to follow.\n\n\n## Contributor License Agreement ##\n\nContributions to any Google project must be accompanied by a Contributor\nLicense Agreement.  This is not a copyright **assignment**, it simply gives\nGoogle permission to use and redistribute your contributions as part of the\nproject.\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual\n    CLA][].\n\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA][].\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n[individual CLA]: https://developers.google.com/open-source/cla/individual\n[corporate CLA]: https://developers.google.com/open-source/cla/corporate\n\nOnce your CLA is submitted (or if you already submitted one for\nanother Google project), make a commit adding yourself to the\n[AUTHORS][] and [CONTRIBUTORS][] files. This commit can be part\nof your first [pull request][].\n\n[AUTHORS]: AUTHORS\n[CONTRIBUTORS]: CONTRIBUTORS\n\n\n## Submitting a patch ##\n\n  1. It's generally best to start by opening a new issue describing the bug or\n     feature you're intending to fix.  Even if you think it's relatively minor,\n     it's helpful to know what people are working on.  Mention in the initial\n     issue that you are planning to work on that bug or feature so that it can\n     be assigned to you.\n\n  1. Follow the normal process of [forking][] the project, and setup a new\n     branch to work in.  It's important that each group of changes be done in\n     separate branches in order to ensure that a pull request only includes the\n     commits related to that bug or feature.\n\n  1. Do your best to have [well-formed commit messages][] for each change.\n     This provides consistency throughout the project, and ensures that commit\n     messages are able to be formatted properly by various git tools.\n\n  1. Finally, push the commits to your fork and submit a [pull request][].\n\n[forking]: https://help.github.com/articles/fork-a-repo\n[well-formed commit messages]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n[pull request]: https://help.github.com/articles/creating-a-pull-request\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.6044921875,
          "content": "# People who have agreed to one of the CLAs and can contribute patches.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# Names should be added to this file only after verifying that\n# the individual or the individual's organization has agreed to\n# the appropriate Contributor License Agreement, found here:\n#\n# https://developers.google.com/open-source/cla/individual\n# https://developers.google.com/open-source/cla/corporate\n#\n# The agreement for individuals can be filled out on the web.\n#\n# When adding J Random Contributor's name to this file,\n# either J's name or J's organization's name should be\n# added to the AUTHORS file, depending on whether the\n# individual or corporate CLA was used.\n#\n# Names should be added to this file as:\n#     Name <email address>\n#\n# Please keep the list sorted.\n\nAl Cutter <al@google.com> <al@9600.org>\nAlan Parra <alanparra@google.com>\nAntonio Marcedone <a.marcedone@gmail.com>\nBen Laurie <benl@google.com> <ben@links.org>\nDavid Drysdale <drysdale@google.com>\nGary Belvin <gbelvin@google.com>\nRoland Shoemaker <roland@letsencrypt.org>\nMartin Smith <mhs@google.com>\nMartin Hutchinson <mhutchinson@google.com> <mhutchinson@gmail.com>\nPaul Hadfield <hadfieldp@google.com> <paul@phad.org.uk>\nPavel Kalinnikov <pkalinnikov@google.com> <pavelkalinnikov@gmail.com>\nPierre Phaneuf <pphaneuf@google.com> <pphaneuf@gmail.com>\nRob Percival <robpercival@google.com>\nRob Stradling <rob@sectigo.com>\nRoger Ng <rogerng@google.com> <roger2hk@gmail.com>\nVishal Kuo <vishalkuo@gmail.com>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.6083984375,
          "content": "<!---\nDescribe your changes in detail here.\nIf this fixes an issue, please write \"Fixes #123\", substituting the issue number.\n-->\n\n### Checklist\n\n<!---\nGo over all the following points, and put an `x` in all the boxes that apply.\nFeel free to not tick any boxes that don't apply to this PR (e.g. refactoring may not need a CHANGELOG update).\nIf you're unsure about any of these, don't hesitate to ask. We're here to help!\n-->\n\n- [ ] I have updated the [CHANGELOG](CHANGELOG.md).\n- [ ] I have updated [documentation](docs/) accordingly (including the [feature implementation matrix](docs/Feature_Implementation_Matrix.md)).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.1083984375,
          "content": "# Trillian: General Transparency\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/google/trillian)](https://goreportcard.com/report/github.com/google/trillian)\n[![codecov](https://codecov.io/gh/google/trillian/branch/master/graph/badge.svg?token=QwofUwmvAs)](https://codecov.io/gh/google/trillian)\n[![GoDoc](https://godoc.org/github.com/google/trillian?status.svg)](https://godoc.org/github.com/google/trillian)\n[![Slack Status](https://img.shields.io/badge/Slack-Chat-blue.svg)](https://transparency-dev.slack.com/)\n\n> [!NOTE]\n> Trillian is in maintenance mode.\n> The next generation of transparency logs uses [Tiled APIs](ttps://c2sp.org/tlog-tiles)\n> and are better supported by [Trillian Tessera](https://github.com/transparency-dev/trillian-tessera).\n> We recommend that any new log operators first try Tessera.\n>\n> Community contributions to Trillian are still welcome!\n\n - [Overview](#overview)\n - [Support](#support)\n - [Using the Code](#using-the-code)\n     - [MySQL Setup](#mysql-setup)\n     - [Integration Tests](#integration-tests)\n - [Working on the Code](#working-on-the-code)\n     - [Rebuilding Generated Code](#rebuilding-generated-code)\n     - [Updating Dependencies](#updating-dependencies)\n     - [Running Codebase Checks](#running-codebase-checks)\n - [Design](#design)\n     - [Design Overview](#design-overview)\n     - [Personalities](#personalities)\n     - [Log Mode](#log-mode)\n - [Use Cases](#use-cases)\n     - [Certificate Transparency Log](#certificate-transparency-log)\n\n\n## Overview\n\nTrillian is an implementation of the concepts described in the\n[Verifiable Data Structures](docs/papers/VerifiableDataStructures.pdf) white paper,\nwhich in turn is an extension and generalisation of the ideas which underpin\n[Certificate Transparency](https://certificate-transparency.org).\n\nTrillian implements a [Merkle tree](https://en.wikipedia.org/wiki/Merkle_tree)\nwhose contents are served from a data storage layer, to allow scalability to\nextremely large trees.  On top of this Merkle tree, Trillian provides the\nfollowing:\n\n - An append-only **Log** mode, analogous to the original\n   [Certificate Transparency](https://certificate-transparency.org) logs.  In\n   this mode, the Merkle tree is effectively filled up from the left, giving a\n   *dense* Merkle tree.\n\nNote that Trillian requires particular applications to provide their own\n[personalities](#personalities) on top of the core transparent data store\nfunctionality.\n\n[Certificate Transparency (CT)](https://tools.ietf.org/html/rfc6962)\nis the most well-known and widely deployed transparency application, and an implementation of CT as a Trillian personality is available in the\n[certificate-transparency-go repo](https://github.com/google/certificate-transparency-go/blob/master/trillian).\n\nOther examples of Trillian personalities are available in the\n[trillian-examples](https://github.com/google/trillian-examples) repo.\n\n\n## Support\n\n- Mailing list: https://groups.google.com/forum/#!forum/trillian-transparency\n- Slack: https://transparency-dev.slack.com/ ([invitation](https://join.slack.com/t/transparency-dev/shared_invite/zt-27pkqo21d-okUFhur7YZ0rFoJVIOPznQ))\n\n\n## Using the Code\n\nThe Trillian codebase is stable and is used in production by multiple\norganizations, including many large-scale \n[Certificate Transparency](https://certificate.transparency.dev) log\noperators.\n\nGiven this, we do not plan to add any new features to this version of Trillian,\nand will try to avoid any further incompatible code and schema changes but\ncannot guarantee that they will never be necessary.\n\nThe current state of feature implementation is recorded in the\n[Feature implementation matrix](docs/Feature_Implementation_Matrix.md).\n\nTo build and test Trillian you need:\n\n - Go 1.22 or later (go 1.22 matches cloudbuild, and is preferred for developers\n   that will be submitting PRs to this project).\n\nTo run many of the tests (and production deployment) you need:\n\n - [MySQL](https://www.mysql.com/) or [MariaDB](https://mariadb.org/) to provide\n   the data storage layer; see the [MySQL Setup](#mysql-setup) section.\n\nNote that this repository uses Go modules to manage dependencies; Go will fetch\nand install them automatically upon build/test.\n\nTo fetch the code, dependencies, and build Trillian, run the following:\n\n```bash\ngit clone https://github.com/google/trillian.git\ncd trillian\n\ngo build ./...\n```\n\nTo build slimmer Trillian binaries that only include the storage and quota\nimplementations that you need, consider specifying\n[build tags](/storage/README.md#build-tags).\n\nTo build and run tests, use:\n\n```bash\ngo test ./...\n```\n\n\nThe repository also includes multi-process integration tests, described in the\n[Integration Tests](#integration-tests) section below.\n\n\n### MySQL Setup\n\nTo run Trillian's integration tests you need to have an instance of MySQL\nrunning and configured to:\n\n - listen on the standard MySQL port 3306 (so `mysql --host=127.0.0.1\n   --port=3306` connects OK)\n - not require a password for the `root` user\n\nYou can then set up the [expected tables](storage/mysql/schema/storage.sql) in a\n`test` database like so:\n\n```bash\n./scripts/resetdb.sh\nWarning: about to destroy and reset database 'test'\nAre you sure? y\n> Resetting DB...\n> Reset Complete\n```\n\n### Integration Tests\n\nTrillian includes an integration test suite to confirm basic end-to-end\nfunctionality, which can be run with:\n\n```bash\n./integration/integration_test.sh\n```\n\nThis runs a multi-process test:\n\n - A [test](integration/log_integration_test.go) that starts a Trillian server\n   in Log mode, together with a signer, logs many leaves, and checks they are\n   integrated correctly.\n \n### Deployment\n\nYou can find instructions on how to deploy Trillian in [deployment](/deployment)\nand [examples/deployment](/examples/deployment) directories.\n\n## Working on the Code\n\nDevelopers who want to make changes to the Trillian codebase need some\nadditional dependencies and tools, described in the following sections. The\n[Cloud Build configuration](cloudbuild.yaml) and the scripts it depends on are\nalso a useful reference for the required tools and scripts, as it may be more\nup-to-date than this document.\n\nAnyone wanting to add a new storage and/or quota implementation should\nunderstand how Trillian uses [build tags](/storage/README.md#build-tags).\n\n### Rebuilding Generated Code\n\nSome of the Trillian Go code is autogenerated from other files:\n\n - [gRPC](http://www.grpc.io/) message structures are originally provided as\n   [protocol buffer](https://developers.google.com/protocol-buffers/) message\n   definitions. See also, https://grpc.io/docs/protoc-installation/.\n - Some unit tests use mock implementations of interfaces; these are created\n   from the real implementations by [GoMock](https://github.com/golang/mock).\n - Some enums have string-conversion methods (satisfying the `fmt.Stringer`\n   interface) created using the\n   [stringer](https://godoc.org/golang.org/x/tools/cmd/stringer) tool (`go get\n   golang.org/x/tools/cmd/stringer`).\n\nRe-generating mock or protobuffer files is only needed if you're changing\nthe original files. The recommended way to do this is by using the Docker\nimage used by the Cloud Build:\n\n```shell\ndocker build -f ./integration/cloudbuild/testbase/Dockerfile -t trillian-builder .\ndocker run -it --mount type=bind,src=\"$(pwd)\",target=/src trillian-builder /bin/bash -c \"cd /src; ./scripts/install_deps.sh; go generate -x ./...\"\n```\n\nThese commands first create a docker image from the Dockerfile in this repo, and\nthen launch a container based on this image with the local directory mounted. The\ncorrect versions of the tools are determined using the `go.mod` file in this repo,\nand these tools are installed. Finally, all of the generated files are regenerated\nand Docker exits.\n\nAlternatively, you can install the prerequisites locally:\n\n  - a series of tools, using `go install` to ensure that the versions are\n    compatible and tested:\n\n    ```\n    cd $(go list -f '{{ .Dir }}' github.com/google/trillian); \\\n    go install github.com/golang/mock/mockgen; \\\n    go install google.golang.org/protobuf/proto; \\\n    go install google.golang.org/protobuf/cmd/protoc-gen-go; \\\n    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc; \\\n    go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc; \\\n    go install golang.org/x/tools/cmd/stringer\n    ```\n\nand run the following:\n\n```bash\ngo generate -x ./...  # hunts for //go:generate comments and runs them\n```\n\n### Updating Dependencies\n\nThe Trillian codebase uses go.mod to declare fixed versions of its dependencies. \nWith Go modules, updating a dependency simply involves running `go get`:\n\n```bash\ngo get package/path       # Fetch the latest published version\ngo get package/path@X.Y.Z # Fetch a specific published version\ngo get package/path@HEAD  # Fetch the latest commit \n```\n\nTo update ALL dependencies to the latest version run `go get -u`. \nBe warned however, that this may undo any selected versions that resolve issues in other non-module repos. \n\nWhile running `go build` and `go test`, go will add any ambiguous transitive dependencies to `go.mod`\nTo clean these up run:\n\n```bash\ngo mod tidy\n```\n\n### Running Codebase Checks\n\nThe [`scripts/presubmit.sh`](scripts/presubmit.sh) script runs various tools\nand tests over the codebase.\n\n#### Install [golangci-lint](https://github.com/golangci/golangci-lint#local-installation).\n\n```bash\ngo install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.1\n```\n\n#### Run code generation, build, test and linters\n\n```bash\n./scripts/presubmit.sh\n```\n\n#### Or just run the linters alone\n\n```bash\ngolangci-lint run\n```\n\n## Design\n\n### Design Overview\n\nTrillian is primarily implemented as a\n[gRPC service](http://www.grpc.io/docs/guides/concepts.html#service-definition);\nthis service receives get/set requests over gRPC and retrieves the corresponding\nMerkle tree data from a separate storage layer (currently using MySQL), ensuring\nthat the cryptographic properties of the tree are preserved along the way.\n\nThe Trillian service is multi-tenanted – a single Trillian installation can\nsupport multiple Merkle trees in parallel, distinguished by their `TreeId` – and\neach tree operates in one of two modes:\n\n - **Log** mode: an append-only collection of items; this has two sub-modes:\n   - normal Log mode, where the Trillian service assigns sequence numbers to\n     new tree entries as they arrive\n   - 'preordered' Log mode, where the unique sequence number for entries in\n     the Merkle tree is externally specified\n\nIn either case, Trillian's key transparency property is that cryptographic\nproofs of inclusion/consistency are available for data items added to the\nservice.\n\n\n### Personalities\n\nTo build a complete transparent application, the Trillian core service needs\nto be paired with additional code, known as a *personality*, that provides\nfunctionality that is specific to the particular application.\n\nIn particular, the personality is responsible for:\n\n * **Admission Criteria** – ensuring that submissions comply with the\n   overall purpose of the application.\n * **Canonicalization** – ensuring that equivalent versions of the same\n   data get the same canonical identifier, so they can be de-duplicated by\n   the Trillian core service.\n * **External Interface** – providing an API for external users,\n   including any practical constraints (ACLs, load-balancing, DoS protection,\n   etc.)\n\nThis is\n[described in more detail in a separate document](docs/Personalities.md).\nGeneral\n[design considerations for transparent Log applications](docs/TransparentLogging.md)\nare also discussed separately.\n\n### Log Mode\n\nWhen running in Log mode, Trillian provides a gRPC API whose operations are\nsimilar to those available for Certificate Transparency logs\n(cf. [RFC 6962](https://tools.ietf.org/html/6962)). These include:\n\n - `GetLatestSignedLogRoot` returns information about the current root of the\n   Merkle tree for the log, including the tree size, hash value, timestamp and\n   signature.\n - `GetLeavesByRange` returns leaf information for particular leaves,\n   specified by their index in the log.\n - `QueueLeaf` requests inclusion of the specified item into the log.\n     - For a pre-ordered log, `AddSequencedLeaves` requests the inclusion of\n       specified items into the log at specified places in the tree.\n - `GetInclusionProof`, `GetInclusionProofByHash` and `GetConsistencyProof`\n    return inclusion and consistency proof data.\n\nIn Log mode (whether normal or pre-ordered), Trillian includes an additional\nSigner component; this component periodically processes pending items and\nadds them to the Merkle tree, creating a new signed tree head as a result.\n\n![Log components](docs/images/LogDesign.png)\n\n(Note that each of the components in this diagram can be\n[distributed](https://github.com/google/certificate-transparency-go/blob/master/trillian/docs/ManualDeployment.md#distribution),\nfor scalability and resilience.)\n\n\nUse Cases\n---------\n\n### Certificate Transparency Log\n\nThe most obvious application for Trillian in Log mode is to provide a\nCertificate Transparency (RFC 6962) Log.  To do this, the CT Log personality\nneeds to include all of the certificate-specific processing – in particular,\nchecking that an item that has been suggested for inclusion is indeed a valid\ncertificate that chains to an accepted root.\n\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 5.037109375,
          "content": "# This file contains Google Cloud Build configuration for presubmit checks, unit\n# and integration tests, triggered by pull requests and commits to branches.\n\ntimeout: 1800s\nsubstitutions:\n  _CODECOV_TOKEN: \"\" # The auth token for uploading coverage to Codecov.\noptions:\n  machineType: E2_HIGHCPU_32\n  volumes:\n  # A shared volume for caching Go modules between steps.\n  - name: go-modules\n    path: /go\n  env:\n    - GOPATH=/go\n    - GOLANG_PROTOBUF_REGISTRATION_CONFLICT=ignore # Temporary work-around v1.proto already registered error.\n    - DOCKER_CLIENT_TIMEOUT=120\n    - COMPOSE_HTTP_TIMEOUT=120\n\n# Cache the testbase image in Container Regisrty, to be reused by subsequent\n# builds. The technique is described here:\n# https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_a_cached_docker_image\n#\n# TODO(pavelkalinnikov): Consider pushing this image only on commits to master.\nimages: ['gcr.io/$PROJECT_ID/trillian_testbase:latest']\n\n# Cloud Build logs sent to GCS bucket\nlogsBucket: 'gs://trillian-cloudbuild-logs'\n\nsteps:\n\n# Try to pull the testbase image from Container Registry.\n- name: 'gcr.io/cloud-builders/docker'\n  entrypoint: 'bash'\n  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/trillian_testbase:latest || exit 0']\n# Build the testbase image reusing as much of the cached image as possible.\n- name: 'gcr.io/cloud-builders/docker'\n  args: [\n    'build',\n    '-t', 'gcr.io/$PROJECT_ID/trillian_testbase:latest',\n    '--cache-from', 'gcr.io/$PROJECT_ID/trillian_testbase:latest',\n    '-f', './integration/cloudbuild/testbase/Dockerfile',\n    '.'\n  ]\n\n# Set up tools and any other common steps which should not be part of Docker image.\n- id: prepare\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/prepare.sh\n\n# Run porcelain checks, make sure the diff is empty and no files need\n# to be updated. This includes gofmt, go mod tidy, go mod generate\n# and a few more.\n- id: check\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./scripts/presubmit.sh\n  args:\n    - --no-build\n    - --no-linters\n    - --fix\n    - --no-mod-tidy\n    - --empty-diff\n  waitFor:\n    - prepare\n\n# Presubmit\n- id: presubmit\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_presubmit.sh\n  args:\n    - --no-linters\n    - --no-generate\n  env:\n    - GOFLAGS=-race\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - check\n\n# Codecov\n- id: codecov\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_presubmit.sh\n  args:\n    - --coverage\n    - --no-linters\n    - --no-generate\n  env:\n    - GOFLAGS=-race\n    - GO_TEST_TIMEOUT=20m\n    - CODECOV_TOKEN=${_CODECOV_TOKEN}\n  waitFor:\n    - check\n\n# Presubmit (Batched queue)\n- id: presubmit_batched\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_presubmit.sh\n  args:\n    - --no-linters\n    - --no-generate\n  env:\n    - GOFLAGS=-race --tags=batched_queue\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - check\n\n# Presubmit (PKCS11)\n- id: presubmit_pkcs11\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_presubmit.sh\n  args:\n    - --no-linters\n    - --no-generate\n  env:\n    - GOFLAGS=-race --tags=pkcs11\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - check\n\n# Try to spread the load a bit, we'll wait for all the presubmit.* steps\n# to finish before starting the integration.* ones.\n# Having too many \"big\" things running concurrently leads to problems\n# with timeouts and mysql issues.\n- id: presubmits_done\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: /bin/true\n  waitFor:\n    - codecov\n    - presubmit\n    - presubmit_batched\n    - presubmit_pkcs11\n\n# Integration\n- id: integration\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_integration.sh\n  env:\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - presubmits_done\n\n# Integration (Docker)\n- id: integration_docker\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/docker_compose_integration_test.sh\n  waitFor:\n    - presubmits_done\n\n# Integration (etcd)\n- id: integration_etcd\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_integration.sh\n  env:\n    - ETCD_DIR=/go/bin\n    - GOFLAGS=-race\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - presubmits_done\n\n# Integration (Batched queue)\n- id: integration_batched\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_integration.sh\n  env:\n    - GOFLAGS=-race -tags=batched_queue\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - presubmits_done\n\n# Integration (PKCS11)\n- id: integration_pkcs11\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_integration.sh\n  env:\n    - GOFLAGS=-race -tags=pkcs11\n    - GO_TEST_TIMEOUT=20m\n  waitFor:\n    - presubmits_done\n\n# Integration (MariaDB)\n- id: integration_mariadb\n  name: 'gcr.io/${PROJECT_ID}/trillian_testbase'\n  entrypoint: ./integration/cloudbuild/run_integration.sh\n  env:\n    - GO_TEST_TIMEOUT=20m\n    - MYSQLD_IMAGE=mariadb:11.1\n  waitFor:\n    - presubmits_done\n"
        },
        {
          "name": "cloudbuild_master.yaml",
          "type": "blob",
          "size": 4.3935546875,
          "content": "timeout: 1800s\nsubstitutions:\n  _CLUSTER_NAME: trillian-opensource-ci\n  _MASTER_ZONE: us-central1-a\n  _MYSQL_TAG: \"8.0\"\n  _MYSQL_ROOT_PASSWORD: \"\"\n  _MYSQL_PASSWORD: \"\"\noptions:\n  machineType: E2_HIGHCPU_32\nsteps:\n- id: build_db_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/db_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/db_server:${COMMIT_SHA}\n  - --destination=gcr.io/${PROJECT_ID}/db_server:latest\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n- id: build_log_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_server:${COMMIT_SHA}\n  - --destination=gcr.io/${PROJECT_ID}/log_server:latest\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: [\"-\"]\n- id: build_log_signer\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_signer/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_signer:${COMMIT_SHA}\n  - --destination=gcr.io/${PROJECT_ID}/log_signer:latest\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: [\"-\"]\n- id: build_envsubst\n  name: gcr.io/cloud-builders/docker\n  args:\n  - build\n  - examples/deployment/docker/envsubst\n  - -t\n  - envsubst\n  waitFor: [\"-\"]\n# etcd-operator requires that a ClusterRole has been created for it already.\n# Do this manually using examples/deployment/kubernetes/etcd-role*.yaml.\n- id: apply_k8s_cfgs_for_clusterwide_etcd_operator\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - -f=examples/deployment/kubernetes/etcd-deployment.yaml\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor: [\"-\"]\n- id: copy_k8s_cfgs_for_spanner\n  name: busybox\n  entrypoint: cp\n  args:\n  - -r\n  - examples/deployment/kubernetes/\n  - envsubst-spanner/\n  waitFor: ['-']\n- id: envsubst_k8s_cfgs_for_spanner\n  name: envsubst\n  args:\n  - envsubst-spanner/etcd-cluster.yaml\n  - envsubst-spanner/trillian-ci-spanner.yaml\n  - envsubst-spanner/trillian-log-deployment.yaml\n  - envsubst-spanner/trillian-log-service.yaml\n  - envsubst-spanner/trillian-log-signer-deployment.yaml\n  - envsubst-spanner/trillian-log-signer-service.yaml\n  env:\n  - PROJECT_ID=${PROJECT_ID}\n  - IMAGE_TAG=${COMMIT_SHA}\n  waitFor:\n  - build_envsubst\n  - copy_k8s_cfgs_for_spanner\n- id: apply_k8s_cfgs_for_spanner\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - -f=envsubst-spanner/etcd-cluster.yaml\n  - -f=envsubst-spanner/trillian-ci-spanner.yaml\n  - -f=envsubst-spanner/trillian-log-deployment.yaml\n  - -f=envsubst-spanner/trillian-log-service.yaml\n  - -f=envsubst-spanner/trillian-log-signer-deployment.yaml\n  - -f=envsubst-spanner/trillian-log-signer-service.yaml\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor:\n  - envsubst_k8s_cfgs_for_spanner\n  - build_log_server\n  - build_log_signer\n- id: copy_k8s_cfgs_for_mysql\n  name: busybox\n  entrypoint: cp\n  args:\n  - -r\n  - examples/deployment/kubernetes/\n  - envsubst-mysql/\n  waitFor: ['-']\n- id: envsubst_k8s_cfgs_for_mysql\n  name: envsubst\n  args:\n  - envsubst-mysql/etcd-cluster.yaml\n  - envsubst-mysql/trillian-ci-mysql.yaml\n  - envsubst-mysql/trillian-mysql.yaml\n  - envsubst-mysql/trillian-log-deployment.yaml\n  - envsubst-mysql/trillian-log-service.yaml\n  - envsubst-mysql/trillian-log-signer-deployment.yaml\n  - envsubst-mysql/trillian-log-signer-service.yaml\n  env:\n  - PROJECT_ID=${PROJECT_ID}\n  - IMAGE_TAG=${COMMIT_SHA}\n  - MYSQL_ROOT_PASSWORD=${_MYSQL_ROOT_PASSWORD}\n  - MYSQL_USER=trillian\n  - MYSQL_PASSWORD=${_MYSQL_PASSWORD}\n  - MYSQL_DATABASE=trillian\n  waitFor:\n  - build_envsubst\n  - copy_k8s_cfgs_for_mysql\n- id: apply_k8s_cfgs_for_mysql\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - --namespace=mysql\n  - -f=envsubst-mysql/etcd-cluster.yaml\n  - -f=envsubst-mysql/trillian-ci-mysql.yaml\n  - -f=envsubst-mysql/trillian-mysql.yaml\n  - -f=envsubst-mysql/trillian-log-deployment.yaml\n  - -f=envsubst-mysql/trillian-log-service.yaml\n  - -f=envsubst-mysql/trillian-log-signer-deployment.yaml\n  - -f=envsubst-mysql/trillian-log-signer-service.yaml\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor:\n  - envsubst_k8s_cfgs_for_mysql\n  - build_db_server\n  - build_log_server\n  - build_log_signer\n"
        },
        {
          "name": "cloudbuild_pr.yaml",
          "type": "blob",
          "size": 4.337890625,
          "content": "# This file contains configuration for Cloud Builds triggered by pull requests\n# to this repository.\n\ntimeout: 1800s\nsubstitutions:\n  _CLUSTER_NAME: trillian-opensource-ci\n  _MASTER_ZONE: us-central1-a\n  _MYSQL_TAG: \"8.0\"\n  _MYSQL_ROOT_PASSWORD: \"\"\n  _MYSQL_PASSWORD: \"\"\noptions:\n  machineType: E2_HIGHCPU_32\n\nsteps:\n\n- id: build_db_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/db_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/db_server:${COMMIT_SHA}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry.\n\n- id: build_log_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_server:${COMMIT_SHA}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: ['-']\n- id: build_log_signer\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_signer/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_signer:${COMMIT_SHA}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: ['-']\n\n- id: build_envsubst\n  name: gcr.io/cloud-builders/docker\n  args:\n  - build\n  - examples/deployment/docker/envsubst\n  - -t\n  - envsubst\n  waitFor: [\"-\"]\n- id: apply_k8s_cfgs_for_clusterwide_etcd_operator_dryrun\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - --dry-run=server\n  - -f=examples/deployment/kubernetes/etcd-deployment.yaml\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor: ['-']\n- id: copy_k8s_cfgs_for_spanner\n  name: busybox\n  entrypoint: cp\n  args:\n  - -r\n  - examples/deployment/kubernetes/\n  - envsubst-spanner/\n  waitFor: ['-']\n- id: envsubst_k8s_cfgs_for_spanner\n  name: envsubst\n  args:\n  - envsubst-spanner/etcd-cluster.yaml\n  - envsubst-spanner/trillian-ci-spanner.yaml\n  - envsubst-spanner/trillian-log-deployment.yaml\n  - envsubst-spanner/trillian-log-service.yaml\n  - envsubst-spanner/trillian-log-signer-deployment.yaml\n  - envsubst-spanner/trillian-log-signer-service.yaml\n  env:\n  - PROJECT_ID=${PROJECT_ID}\n  - IMAGE_TAG=${COMMIT_SHA}\n  waitFor:\n  - build_envsubst\n  - copy_k8s_cfgs_for_spanner\n- id: apply_k8s_cfgs_for_spanner_dryrun\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - --dry-run=server\n  - -f=envsubst-spanner/etcd-cluster.yaml\n  - -f=envsubst-spanner/trillian-ci-spanner.yaml\n  - -f=envsubst-spanner/trillian-log-deployment.yaml\n  - -f=envsubst-spanner/trillian-log-service.yaml\n  - -f=envsubst-spanner/trillian-log-signer-deployment.yaml\n  - -f=envsubst-spanner/trillian-log-signer-service.yaml\n  - --prune\n  - --all\n  - --prune-allowlist=core/v1/ConfigMap\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor:\n  - envsubst_k8s_cfgs_for_spanner\n  - build_log_server\n  - build_log_signer\n- id: copy_k8s_cfgs_for_mysql\n  name: busybox\n  entrypoint: cp\n  args:\n  - -r\n  - examples/deployment/kubernetes/\n  - envsubst-mysql/\n  waitFor: ['-']\n- id: envsubst_k8s_cfgs_for_mysql\n  name: envsubst\n  args:\n  - envsubst-mysql/etcd-cluster.yaml\n  - envsubst-mysql/trillian-ci-mysql.yaml\n  - envsubst-mysql/trillian-mysql.yaml\n  - envsubst-mysql/trillian-log-deployment.yaml\n  - envsubst-mysql/trillian-log-service.yaml\n  - envsubst-mysql/trillian-log-signer-deployment.yaml\n  - envsubst-mysql/trillian-log-signer-service.yaml\n  env:\n  - PROJECT_ID=${PROJECT_ID}\n  - IMAGE_TAG=${COMMIT_SHA}\n  - MYSQL_ROOT_PASSWORD=${_MYSQL_ROOT_PASSWORD}\n  - MYSQL_PASSWORD=${_MYSQL_PASSWORD}\n  waitFor:\n  - build_envsubst\n  - copy_k8s_cfgs_for_mysql\n- id: apply_k8s_cfgs_for_mysql_dryrun\n  name: gcr.io/cloud-builders/kubectl\n  args:\n  - apply\n  - --dry-run=server\n  - --namespace=mysql\n  - -f=envsubst-mysql/etcd-cluster.yaml\n  - -f=envsubst-mysql/trillian-ci-mysql.yaml\n  - -f=envsubst-mysql/trillian-mysql.yaml\n  - -f=envsubst-mysql/trillian-log-deployment.yaml\n  - -f=envsubst-mysql/trillian-log-service.yaml\n  - -f=envsubst-mysql/trillian-log-signer-deployment.yaml\n  - -f=envsubst-mysql/trillian-log-signer-service.yaml\n  - --prune\n  - --all\n  - --prune-allowlist=core/v1/ConfigMap\n  env:\n  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}\n  waitFor:\n  - envsubst_k8s_cfgs_for_mysql\n  - build_db_server\n  - build_log_server\n  - build_log_signer\n"
        },
        {
          "name": "cloudbuild_tag.yaml",
          "type": "blob",
          "size": 0.943359375,
          "content": "timeout: 1800s\nsubstitutions:\n  _MYSQL_TAG: \"8.0\"\noptions:\n  machineType: E2_HIGHCPU_32\nsteps:\n- id: build_db_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/db_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/db_server:${TAG_NAME}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n- id: build_log_server\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_server/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_server:${TAG_NAME}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: [\"-\"]\n- id: build_log_signer\n  name: gcr.io/kaniko-project/executor:v1.20.0\n  args:\n  - --dockerfile=examples/deployment/docker/log_signer/Dockerfile\n  - --destination=gcr.io/${PROJECT_ID}/log_signer:${TAG_NAME}\n  - --cache=true\n  - --cache-dir= # Cache is in Google Container Registry\n  waitFor: [\"-\"]\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.5478515625,
          "content": "# Customizations to codecov for Trillian repo. This will be merged into\n# the team / default codecov yaml file.\n#\n# Validate changes with:\n# curl --data-binary @codecov.yml https://codecov.io/validate\n\n# Exclude code that's for testing, demos or utilities that aren't really\n# part of production releases.\nignore:\n  - \"**/mock_*.go\"\n  - \"**/testonly\"\n  - \"docs\"\n  - \"examples\"\n  - \"integration\"\n  - \"testonly\"\n\ncoverage:\n  status:\n    project:\n      default:\n        # Allow 1% coverage drop without complaining, to avoid being too noisy.\n        threshold: 1%\n"
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen.go",
          "type": "blob",
          "size": 1.2958984375,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Package trillian contains the generated protobuf code for the Trillian API.\npackage trillian\n\n//go:generate protoc -I=. -I=third_party/googleapis --go_out=paths=source_relative:. --go-grpc_out=paths=source_relative:. --go-grpc_opt=require_unimplemented_servers=false trillian_log_api.proto trillian_admin_api.proto trillian.proto --doc_out=markdown,api.md:./docs/\n//go:generate protoc -I=. --go_out=paths=source_relative:. crypto/keyspb/keyspb.proto\n\n//go:generate mockgen -package tmock -destination testonly/tmock/mock_log_server.go  github.com/google/trillian TrillianLogServer\n//go:generate mockgen -package tmock -destination testonly/tmock/mock_admin_server.go github.com/google/trillian TrillianAdminServer\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 8.8408203125,
          "content": "module github.com/google/trillian\n\ngo 1.22.0\n\ntoolchain go1.22.10\n\nrequire (\n\tbitbucket.org/creachadair/shell v0.0.8\n\tcloud.google.com/go/spanner v1.73.0\n\tcontrib.go.opencensus.io/exporter/stackdriver v0.13.14\n\tgithub.com/apache/beam/sdks/v2 v2.61.0\n\tgithub.com/cockroachdb/cockroach-go/v2 v2.3.8\n\tgithub.com/fullstorydev/grpcurl v1.9.2\n\tgithub.com/go-redis/redis v6.15.9+incompatible\n\tgithub.com/go-sql-driver/mysql v1.8.1\n\tgithub.com/golang/mock v1.6.0\n\tgithub.com/google/btree v1.1.3\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-licenses/v2 v2.0.0-alpha.1\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/jackc/pgerrcode v0.0.0-20240316143900-6e2875d9b438\n\tgithub.com/jackc/pgx/v5 v5.7.2\n\tgithub.com/letsencrypt/pkcs11key/v4 v4.0.0\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/pseudomuto/protoc-gen-doc v1.5.1\n\tgithub.com/transparency-dev/merkle v0.0.2\n\tgo.etcd.io/etcd/client/v3 v3.5.17\n\tgo.etcd.io/etcd/etcdctl/v3 v3.5.17\n\tgo.etcd.io/etcd/server/v3 v3.5.17\n\tgo.etcd.io/etcd/v3 v3.5.17\n\tgo.opencensus.io v0.24.0\n\tgolang.org/x/crypto v0.32.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.29.0\n\tgolang.org/x/tools v0.29.0\n\tgoogle.golang.org/api v0.214.0\n\tgoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241113202542-65e8d215514f\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576\n\tgoogle.golang.org/grpc v1.69.2\n\tgoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1\n\tgoogle.golang.org/protobuf v1.36.1\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/klog/v2 v2.130.1\n)\n\nrequire (\n\tcel.dev/expr v0.16.2 // indirect\n\tcloud.google.com/go v0.116.0 // indirect\n\tcloud.google.com/go/auth v0.13.0 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.6 // indirect\n\tcloud.google.com/go/compute/metadata v0.6.0 // indirect\n\tcloud.google.com/go/iam v1.2.2 // indirect\n\tcloud.google.com/go/longrunning v0.6.2 // indirect\n\tcloud.google.com/go/monitoring v1.21.2 // indirect\n\tcloud.google.com/go/profiler v0.4.1 // indirect\n\tcloud.google.com/go/storage v1.45.0 // indirect\n\tcloud.google.com/go/trace v1.11.2 // indirect\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/GoogleCloudPlatform/grpc-gcp-go/grpcgcp v1.5.0 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.2 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver v1.5.0 // indirect\n\tgithub.com/Masterminds/sprig v2.22.0+incompatible // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/avast/retry-go/v4 v4.6.0 // indirect\n\tgithub.com/aws/aws-sdk-go v1.51.8 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bgentry/speakeasy v0.1.0 // indirect\n\tgithub.com/bufbuild/protocompile v0.10.0 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 // indirect\n\tgithub.com/coreos/go-semver v0.3.1 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.4 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/docker v27.3.1+incompatible // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/envoyproxy/go-control-plane v0.13.1 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gofrs/flock v0.8.1 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/licenseclassifier/v2 v2.0.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20240528025155-186aa0362fba // indirect\n\tgithub.com/google/s2a-go v0.1.8 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.14.0 // indirect\n\tgithub.com/gorilla/websocket v1.5.1 // indirect\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway v1.16.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1 // indirect\n\tgithub.com/huandu/xstrings v1.2.0 // indirect\n\tgithub.com/imdario/mergo v0.3.16 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jackc/chunkreader/v2 v2.0.1 // indirect\n\tgithub.com/jackc/pgconn v1.14.3 // indirect\n\tgithub.com/jackc/pgio v1.0.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgproto3/v2 v2.3.3 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 // indirect\n\tgithub.com/jackc/pgtype v1.14.3 // indirect\n\tgithub.com/jackc/pgx/v4 v4.18.3 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.2 // indirect\n\tgithub.com/jhump/protoreflect v1.16.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.1-0.20220621161143-b0104c826a24 // indirect\n\tgithub.com/jonboulle/clockwork v0.4.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.13 // indirect\n\tgithub.com/miekg/pkcs11 v1.1.1 // indirect\n\tgithub.com/mitchellh/copystructure v1.0.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.1 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mwitkow/go-proto-validators v0.2.0 // indirect\n\tgithub.com/olekukonko/tablewriter v0.0.5 // indirect\n\tgithub.com/onsi/ginkgo v1.16.5 // indirect\n\tgithub.com/onsi/gomega v1.29.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/otiai10/copy v1.14.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/prometheus/prometheus v0.51.0 // indirect\n\tgithub.com/pseudomuto/protokit v0.2.0 // indirect\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/sergi/go-diff v1.3.1 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/soheilhy/cmux v0.1.5 // indirect\n\tgithub.com/spf13/cobra v1.8.1 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/tmc/grpc-websocket-proxy v0.0.0-20220101234140-673ab2c3ae75 // indirect\n\tgithub.com/urfave/cli v1.22.14 // indirect\n\tgithub.com/xiang90/probing v0.0.0-20221125231312-a49e3df8f510 // indirect\n\tgo.etcd.io/bbolt v1.3.11 // indirect\n\tgo.etcd.io/etcd/api/v3 v3.5.17 // indirect\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.17 // indirect\n\tgo.etcd.io/etcd/client/v2 v2.305.17 // indirect\n\tgo.etcd.io/etcd/etcdutl/v3 v3.5.17 // indirect\n\tgo.etcd.io/etcd/pkg/v3 v3.5.17 // indirect\n\tgo.etcd.io/etcd/raft/v3 v3.5.17 // indirect\n\tgo.etcd.io/etcd/tests/v3 v3.5.17 // indirect\n\tgo.opentelemetry.io/contrib/detectors/gcp v1.31.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.31.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.1.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo.uber.org/zap v1.27.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/net v0.34.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.8.0 // indirect\n\tgopkg.in/cheggaaa/pb.v1 v1.0.28 // indirect\n\tgopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 197.2021484375,
          "content": "bitbucket.org/creachadair/shell v0.0.8 h1:3yM6JcAfaGWzjzcCamTblzSIWXm/YSs0PFGIzBm2HTo=\nbitbucket.org/creachadair/shell v0.0.8/go.mod h1:vINzudofoUXZSJ5tREgpy+Etyjsag3ait5WOWImEVZ0=\ncel.dev/expr v0.16.2 h1:RwRhoH17VhAu9U5CMvMhH1PDVgf0tuz9FT+24AfMLfU=\ncel.dev/expr v0.16.2/go.mod h1:gXngZQMkWJoSbE8mOzehJlXQyubn/Vg0vR9/F3W7iw8=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.44.3/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=\ncloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=\ncloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=\ncloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=\ncloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=\ncloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=\ncloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=\ncloud.google.com/go v0.99.0/go.mod h1:w0Xx2nLzqWJPuozYQX+hFfCSI8WioryfRDzkoI/Y2ZA=\ncloud.google.com/go v0.100.1/go.mod h1:fs4QogzfH5n2pBXBP9vRiU+eCny7lD2vmFZy79Iuw1U=\ncloud.google.com/go v0.100.2/go.mod h1:4Xra9TjzAeYHrl5+oeLlzbM2k3mjVhZh4UqTZ//w99A=\ncloud.google.com/go v0.102.0/go.mod h1:oWcCzKlqJ5zgHQt9YsaeTY9KzIvjyy0ArmiBUgpQ+nc=\ncloud.google.com/go v0.102.1/go.mod h1:XZ77E9qnTEnrgEOvr4xzfdX5TRo7fB4T2F4O6+34hIU=\ncloud.google.com/go v0.104.0/go.mod h1:OO6xxXdJyvuJPcEPBLN9BJPD+jep5G1+2U5B5gkRYtA=\ncloud.google.com/go v0.105.0/go.mod h1:PrLgOJNe5nfE9UMxKxgXj4mD3voiP+YQ6gdt6KMFOKM=\ncloud.google.com/go v0.107.0/go.mod h1:wpc2eNrD7hXUTy8EKS10jkxpZBjASrORK7goS+3YX2I=\ncloud.google.com/go v0.110.0/go.mod h1:SJnCLqQ0FCFGSZMUNUf84MV3Aia54kn7pi8st7tMzaY=\ncloud.google.com/go v0.116.0 h1:B3fRrSDkLRt5qSHWe40ERJvhvnQwdZiHu0bJOpldweE=\ncloud.google.com/go v0.116.0/go.mod h1:cEPSRWPzZEswwdr9BxE6ChEn01dWlTaF05LiC2Xs70U=\ncloud.google.com/go/accessapproval v1.4.0/go.mod h1:zybIuC3KpDOvotz59lFe5qxRZx6C75OtwbisN56xYB4=\ncloud.google.com/go/accessapproval v1.5.0/go.mod h1:HFy3tuiGvMdcd/u+Cu5b9NkO1pEICJ46IR82PoUdplw=\ncloud.google.com/go/accessapproval v1.6.0/go.mod h1:R0EiYnwV5fsRFiKZkPHr6mwyk2wxUJ30nL4j2pcFY2E=\ncloud.google.com/go/accesscontextmanager v1.3.0/go.mod h1:TgCBehyr5gNMz7ZaH9xubp+CE8dkrszb4oK9CWyvD4o=\ncloud.google.com/go/accesscontextmanager v1.4.0/go.mod h1:/Kjh7BBu/Gh83sv+K60vN9QE5NJcd80sU33vIe2IFPE=\ncloud.google.com/go/accesscontextmanager v1.6.0/go.mod h1:8XCvZWfYw3K/ji0iVnp+6pu7huxoQTLmxAbVjbloTtM=\ncloud.google.com/go/accesscontextmanager v1.7.0/go.mod h1:CEGLewx8dwa33aDAZQujl7Dx+uYhS0eay198wB/VumQ=\ncloud.google.com/go/aiplatform v1.22.0/go.mod h1:ig5Nct50bZlzV6NvKaTwmplLLddFx0YReh9WfTO5jKw=\ncloud.google.com/go/aiplatform v1.24.0/go.mod h1:67UUvRBKG6GTayHKV8DBv2RtR1t93YRu5B1P3x99mYY=\ncloud.google.com/go/aiplatform v1.27.0/go.mod h1:Bvxqtl40l0WImSb04d0hXFU7gDOiq9jQmorivIiWcKg=\ncloud.google.com/go/aiplatform v1.35.0/go.mod h1:7MFT/vCaOyZT/4IIFfxH4ErVg/4ku6lKv3w0+tFTgXQ=\ncloud.google.com/go/aiplatform v1.36.1/go.mod h1:WTm12vJRPARNvJ+v6P52RDHCNe4AhvjcIZ/9/RRHy/k=\ncloud.google.com/go/aiplatform v1.37.0/go.mod h1:IU2Cv29Lv9oCn/9LkFiiuKfwrRTq+QQMbW+hPCxJGZw=\ncloud.google.com/go/analytics v0.11.0/go.mod h1:DjEWCu41bVbYcKyvlws9Er60YE4a//bK6mnhWvQeFNI=\ncloud.google.com/go/analytics v0.12.0/go.mod h1:gkfj9h6XRf9+TS4bmuhPEShsh3hH8PAZzm/41OOhQd4=\ncloud.google.com/go/analytics v0.17.0/go.mod h1:WXFa3WSym4IZ+JiKmavYdJwGG/CvpqiqczmL59bTD9M=\ncloud.google.com/go/analytics v0.18.0/go.mod h1:ZkeHGQlcIPkw0R/GW+boWHhCOR43xz9RN/jn7WcqfIE=\ncloud.google.com/go/analytics v0.19.0/go.mod h1:k8liqf5/HCnOUkbawNtrWWc+UAzyDlW89doe8TtoDsE=\ncloud.google.com/go/apigateway v1.3.0/go.mod h1:89Z8Bhpmxu6AmUxuVRg/ECRGReEdiP3vQtk4Z1J9rJk=\ncloud.google.com/go/apigateway v1.4.0/go.mod h1:pHVY9MKGaH9PQ3pJ4YLzoj6U5FUDeDFBllIz7WmzJoc=\ncloud.google.com/go/apigateway v1.5.0/go.mod h1:GpnZR3Q4rR7LVu5951qfXPJCHquZt02jf7xQx7kpqN8=\ncloud.google.com/go/apigeeconnect v1.3.0/go.mod h1:G/AwXFAKo0gIXkPTVfZDd2qA1TxBXJ3MgMRBQkIi9jc=\ncloud.google.com/go/apigeeconnect v1.4.0/go.mod h1:kV4NwOKqjvt2JYR0AoIWo2QGfoRtn/pkS3QlHp0Ni04=\ncloud.google.com/go/apigeeconnect v1.5.0/go.mod h1:KFaCqvBRU6idyhSNyn3vlHXc8VMDJdRmwDF6JyFRqZ8=\ncloud.google.com/go/apigeeregistry v0.4.0/go.mod h1:EUG4PGcsZvxOXAdyEghIdXwAEi/4MEaoqLMLDMIwKXY=\ncloud.google.com/go/apigeeregistry v0.5.0/go.mod h1:YR5+s0BVNZfVOUkMa5pAR2xGd0A473vA5M7j247o1wM=\ncloud.google.com/go/apigeeregistry v0.6.0/go.mod h1:BFNzW7yQVLZ3yj0TKcwzb8n25CFBri51GVGOEUcgQsc=\ncloud.google.com/go/apikeys v0.4.0/go.mod h1:XATS/yqZbaBK0HOssf+ALHp8jAlNHUgyfprvNcBIszU=\ncloud.google.com/go/apikeys v0.5.0/go.mod h1:5aQfwY4D+ewMMWScd3hm2en3hCj+BROlyrt3ytS7KLI=\ncloud.google.com/go/apikeys v0.6.0/go.mod h1:kbpXu5upyiAlGkKrJgQl8A0rKNNJ7dQ377pdroRSSi8=\ncloud.google.com/go/appengine v1.4.0/go.mod h1:CS2NhuBuDXM9f+qscZ6V86m1MIIqPj3WC/UoEuR1Sno=\ncloud.google.com/go/appengine v1.5.0/go.mod h1:TfasSozdkFI0zeoxW3PTBLiNqRmzraodCWatWI9Dmak=\ncloud.google.com/go/appengine v1.6.0/go.mod h1:hg6i0J/BD2cKmDJbaFSYHFyZkgBEfQrDg/X0V5fJn84=\ncloud.google.com/go/appengine v1.7.0/go.mod h1:eZqpbHFCqRGa2aCdope7eC0SWLV1j0neb/QnMJVWx6A=\ncloud.google.com/go/appengine v1.7.1/go.mod h1:IHLToyb/3fKutRysUlFO0BPt5j7RiQ45nrzEJmKTo6E=\ncloud.google.com/go/area120 v0.5.0/go.mod h1:DE/n4mp+iqVyvxHN41Vf1CR602GiHQjFPusMFW6bGR4=\ncloud.google.com/go/area120 v0.6.0/go.mod h1:39yFJqWVgm0UZqWTOdqkLhjoC7uFfgXRC8g/ZegeAh0=\ncloud.google.com/go/area120 v0.7.0/go.mod h1:a3+8EUD1SX5RUcCs3MY5YasiO1z6yLiNLRiFrykbynY=\ncloud.google.com/go/area120 v0.7.1/go.mod h1:j84i4E1RboTWjKtZVWXPqvK5VHQFJRF2c1Nm69pWm9k=\ncloud.google.com/go/artifactregistry v1.6.0/go.mod h1:IYt0oBPSAGYj/kprzsBjZ/4LnG/zOcHyFHjWPCi6SAQ=\ncloud.google.com/go/artifactregistry v1.7.0/go.mod h1:mqTOFOnGZx8EtSqK/ZWcsm/4U8B77rbcLP6ruDU2Ixk=\ncloud.google.com/go/artifactregistry v1.8.0/go.mod h1:w3GQXkJX8hiKN0v+at4b0qotwijQbYUqF2GWkZzAhC0=\ncloud.google.com/go/artifactregistry v1.9.0/go.mod h1:2K2RqvA2CYvAeARHRkLDhMDJ3OXy26h3XW+3/Jh2uYc=\ncloud.google.com/go/artifactregistry v1.11.1/go.mod h1:lLYghw+Itq9SONbCa1YWBoWs1nOucMH0pwXN1rOBZFI=\ncloud.google.com/go/artifactregistry v1.11.2/go.mod h1:nLZns771ZGAwVLzTX/7Al6R9ehma4WUEhZGWV6CeQNQ=\ncloud.google.com/go/artifactregistry v1.12.0/go.mod h1:o6P3MIvtzTOnmvGagO9v/rOjjA0HmhJ+/6KAXrmYDCI=\ncloud.google.com/go/artifactregistry v1.13.0/go.mod h1:uy/LNfoOIivepGhooAUpL1i30Hgee3Cu0l4VTWHUC08=\ncloud.google.com/go/asset v1.5.0/go.mod h1:5mfs8UvcM5wHhqtSv8J1CtxxaQq3AdBxxQi2jGW/K4o=\ncloud.google.com/go/asset v1.7.0/go.mod h1:YbENsRK4+xTiL+Ofoj5Ckf+O17kJtgp3Y3nn4uzZz5s=\ncloud.google.com/go/asset v1.8.0/go.mod h1:mUNGKhiqIdbr8X7KNayoYvyc4HbbFO9URsjbytpUaW0=\ncloud.google.com/go/asset v1.9.0/go.mod h1:83MOE6jEJBMqFKadM9NLRcs80Gdw76qGuHn8m3h8oHQ=\ncloud.google.com/go/asset v1.10.0/go.mod h1:pLz7uokL80qKhzKr4xXGvBQXnzHn5evJAEAtZiIb0wY=\ncloud.google.com/go/asset v1.11.1/go.mod h1:fSwLhbRvC9p9CXQHJ3BgFeQNM4c9x10lqlrdEUYXlJo=\ncloud.google.com/go/asset v1.12.0/go.mod h1:h9/sFOa4eDIyKmH6QMpm4eUK3pDojWnUhTgJlk762Hg=\ncloud.google.com/go/asset v1.13.0/go.mod h1:WQAMyYek/b7NBpYq/K4KJWcRqzoalEsxz/t/dTk4THw=\ncloud.google.com/go/assuredworkloads v1.5.0/go.mod h1:n8HOZ6pff6re5KYfBXcFvSViQjDwxFkAkmUFffJRbbY=\ncloud.google.com/go/assuredworkloads v1.6.0/go.mod h1:yo2YOk37Yc89Rsd5QMVECvjaMKymF9OP+QXWlKXUkXw=\ncloud.google.com/go/assuredworkloads v1.7.0/go.mod h1:z/736/oNmtGAyU47reJgGN+KVoYoxeLBoj4XkKYscNI=\ncloud.google.com/go/assuredworkloads v1.8.0/go.mod h1:AsX2cqyNCOvEQC8RMPnoc0yEarXQk6WEKkxYfL6kGIo=\ncloud.google.com/go/assuredworkloads v1.9.0/go.mod h1:kFuI1P78bplYtT77Tb1hi0FMxM0vVpRC7VVoJC3ZoT0=\ncloud.google.com/go/assuredworkloads v1.10.0/go.mod h1:kwdUQuXcedVdsIaKgKTp9t0UJkE5+PAVNhdQm4ZVq2E=\ncloud.google.com/go/auth v0.13.0 h1:8Fu8TZy167JkW8Tj3q7dIkr2v4cndv41ouecJx0PAHs=\ncloud.google.com/go/auth v0.13.0/go.mod h1:COOjD9gwfKNKz+IIduatIhYJQIc0mG3H102r/EMxX6Q=\ncloud.google.com/go/auth/oauth2adapt v0.2.6 h1:V6a6XDu2lTwPZWOawrAa9HUK+DB2zfJyTuciBG5hFkU=\ncloud.google.com/go/auth/oauth2adapt v0.2.6/go.mod h1:AlmsELtlEBnaNTL7jCj8VQFLy6mbZv0s4Q7NGBeQ5E8=\ncloud.google.com/go/automl v1.5.0/go.mod h1:34EjfoFGMZ5sgJ9EoLsRtdPSNZLcfflJR39VbVNS2M0=\ncloud.google.com/go/automl v1.6.0/go.mod h1:ugf8a6Fx+zP0D59WLhqgTDsQI9w07o64uf/Is3Nh5p8=\ncloud.google.com/go/automl v1.7.0/go.mod h1:RL9MYCCsJEOmt0Wf3z9uzG0a7adTT1fe+aObgSpkCt8=\ncloud.google.com/go/automl v1.8.0/go.mod h1:xWx7G/aPEe/NP+qzYXktoBSDfjO+vnKMGgsApGJJquM=\ncloud.google.com/go/automl v1.12.0/go.mod h1:tWDcHDp86aMIuHmyvjuKeeHEGq76lD7ZqfGLN6B0NuU=\ncloud.google.com/go/baremetalsolution v0.3.0/go.mod h1:XOrocE+pvK1xFfleEnShBlNAXf+j5blPPxrhjKgnIFc=\ncloud.google.com/go/baremetalsolution v0.4.0/go.mod h1:BymplhAadOO/eBa7KewQ0Ppg4A4Wplbn+PsFKRLo0uI=\ncloud.google.com/go/baremetalsolution v0.5.0/go.mod h1:dXGxEkmR9BMwxhzBhV0AioD0ULBmuLZI8CdwalUxuss=\ncloud.google.com/go/batch v0.3.0/go.mod h1:TR18ZoAekj1GuirsUsR1ZTKN3FC/4UDnScjT8NXImFE=\ncloud.google.com/go/batch v0.4.0/go.mod h1:WZkHnP43R/QCGQsZ+0JyG4i79ranE2u8xvjq/9+STPE=\ncloud.google.com/go/batch v0.7.0/go.mod h1:vLZN95s6teRUqRQ4s3RLDsH8PvboqBK+rn1oevL159g=\ncloud.google.com/go/beyondcorp v0.2.0/go.mod h1:TB7Bd+EEtcw9PCPQhCJtJGjk/7TC6ckmnSFS+xwTfm4=\ncloud.google.com/go/beyondcorp v0.3.0/go.mod h1:E5U5lcrcXMsCuoDNyGrpyTm/hn7ne941Jz2vmksAxW8=\ncloud.google.com/go/beyondcorp v0.4.0/go.mod h1:3ApA0mbhHx6YImmuubf5pyW8srKnCEPON32/5hj+RmM=\ncloud.google.com/go/beyondcorp v0.5.0/go.mod h1:uFqj9X+dSfrheVp7ssLTaRHd2EHqSL4QZmH4e8WXGGU=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/bigquery v1.42.0/go.mod h1:8dRTJxhtG+vwBKzE5OseQn/hiydoQN3EedCaOdYmxRA=\ncloud.google.com/go/bigquery v1.43.0/go.mod h1:ZMQcXHsl+xmU1z36G2jNGZmKp9zNY5BUua5wDgmNCfw=\ncloud.google.com/go/bigquery v1.44.0/go.mod h1:0Y33VqXTEsbamHJvJHdFmtqHvMIY28aK1+dFsvaChGc=\ncloud.google.com/go/bigquery v1.47.0/go.mod h1:sA9XOgy0A8vQK9+MWhEQTY6Tix87M/ZurWFIxmF9I/E=\ncloud.google.com/go/bigquery v1.48.0/go.mod h1:QAwSz+ipNgfL5jxiaK7weyOhzdoAy1zFm0Nf1fysJac=\ncloud.google.com/go/bigquery v1.49.0/go.mod h1:Sv8hMmTFFYBlt/ftw2uN6dFdQPzBlREY9yBh7Oy7/4Q=\ncloud.google.com/go/bigquery v1.50.0/go.mod h1:YrleYEh2pSEbgTBZYMJ5SuSr0ML3ypjRB1zgf7pvQLU=\ncloud.google.com/go/billing v1.4.0/go.mod h1:g9IdKBEFlItS8bTtlrZdVLWSSdSyFUZKXNS02zKMOZY=\ncloud.google.com/go/billing v1.5.0/go.mod h1:mztb1tBc3QekhjSgmpf/CV4LzWXLzCArwpLmP2Gm88s=\ncloud.google.com/go/billing v1.6.0/go.mod h1:WoXzguj+BeHXPbKfNWkqVtDdzORazmCjraY+vrxcyvI=\ncloud.google.com/go/billing v1.7.0/go.mod h1:q457N3Hbj9lYwwRbnlD7vUpyjq6u5U1RAOArInEiD5Y=\ncloud.google.com/go/billing v1.12.0/go.mod h1:yKrZio/eu+okO/2McZEbch17O5CB5NpZhhXG6Z766ss=\ncloud.google.com/go/billing v1.13.0/go.mod h1:7kB2W9Xf98hP9Sr12KfECgfGclsH3CQR0R08tnRlRbc=\ncloud.google.com/go/binaryauthorization v1.1.0/go.mod h1:xwnoWu3Y84jbuHa0zd526MJYmtnVXn0syOjaJgy4+dM=\ncloud.google.com/go/binaryauthorization v1.2.0/go.mod h1:86WKkJHtRcv5ViNABtYMhhNWRrD1Vpi//uKEy7aYEfI=\ncloud.google.com/go/binaryauthorization v1.3.0/go.mod h1:lRZbKgjDIIQvzYQS1p99A7/U1JqvqeZg0wiI5tp6tg0=\ncloud.google.com/go/binaryauthorization v1.4.0/go.mod h1:tsSPQrBd77VLplV70GUhBf/Zm3FsKmgSqgm4UmiDItk=\ncloud.google.com/go/binaryauthorization v1.5.0/go.mod h1:OSe4OU1nN/VswXKRBmciKpo9LulY41gch5c68htf3/Q=\ncloud.google.com/go/certificatemanager v1.3.0/go.mod h1:n6twGDvcUBFu9uBgt4eYvvf3sQ6My8jADcOVwHmzadg=\ncloud.google.com/go/certificatemanager v1.4.0/go.mod h1:vowpercVFyqs8ABSmrdV+GiFf2H/ch3KyudYQEMM590=\ncloud.google.com/go/certificatemanager v1.6.0/go.mod h1:3Hh64rCKjRAX8dXgRAyOcY5vQ/fE1sh8o+Mdd6KPgY8=\ncloud.google.com/go/channel v1.8.0/go.mod h1:W5SwCXDJsq/rg3tn3oG0LOxpAo6IMxNa09ngphpSlnk=\ncloud.google.com/go/channel v1.9.0/go.mod h1:jcu05W0my9Vx4mt3/rEHpfxc9eKi9XwsdDL8yBMbKUk=\ncloud.google.com/go/channel v1.11.0/go.mod h1:IdtI0uWGqhEeatSB62VOoJ8FSUhJ9/+iGkJVqp74CGE=\ncloud.google.com/go/channel v1.12.0/go.mod h1:VkxCGKASi4Cq7TbXxlaBezonAYpp1GCnKMY6tnMQnLU=\ncloud.google.com/go/cloudbuild v1.3.0/go.mod h1:WequR4ULxlqvMsjDEEEFnOG5ZSRSgWOywXYDb1vPE6U=\ncloud.google.com/go/cloudbuild v1.4.0/go.mod h1:5Qwa40LHiOXmz3386FrjrYM93rM/hdRr7b53sySrTqA=\ncloud.google.com/go/cloudbuild v1.6.0/go.mod h1:UIbc/w9QCbH12xX+ezUsgblrWv+Cv4Tw83GiSMHOn9M=\ncloud.google.com/go/cloudbuild v1.7.0/go.mod h1:zb5tWh2XI6lR9zQmsm1VRA+7OCuve5d8S+zJUul8KTg=\ncloud.google.com/go/cloudbuild v1.9.0/go.mod h1:qK1d7s4QlO0VwfYn5YuClDGg2hfmLZEb4wQGAbIgL1s=\ncloud.google.com/go/clouddms v1.3.0/go.mod h1:oK6XsCDdW4Ib3jCCBugx+gVjevp2TMXFtgxvPSee3OM=\ncloud.google.com/go/clouddms v1.4.0/go.mod h1:Eh7sUGCC+aKry14O1NRljhjyrr0NFC0G2cjwX0cByRk=\ncloud.google.com/go/clouddms v1.5.0/go.mod h1:QSxQnhikCLUw13iAbffF2CZxAER3xDGNHjsTAkQJcQA=\ncloud.google.com/go/cloudtasks v1.5.0/go.mod h1:fD92REy1x5woxkKEkLdvavGnPJGEn8Uic9nWuLzqCpY=\ncloud.google.com/go/cloudtasks v1.6.0/go.mod h1:C6Io+sxuke9/KNRkbQpihnW93SWDU3uXt92nu85HkYI=\ncloud.google.com/go/cloudtasks v1.7.0/go.mod h1:ImsfdYWwlWNJbdgPIIGJWC+gemEGTBK/SunNQQNCAb4=\ncloud.google.com/go/cloudtasks v1.8.0/go.mod h1:gQXUIwCSOI4yPVK7DgTVFiiP0ZW/eQkydWzwVMdHxrI=\ncloud.google.com/go/cloudtasks v1.9.0/go.mod h1:w+EyLsVkLWHcOaqNEyvcKAsWp9p29dL6uL9Nst1cI7Y=\ncloud.google.com/go/cloudtasks v1.10.0/go.mod h1:NDSoTLkZ3+vExFEWu2UJV1arUyzVDAiZtdWcsUyNwBs=\ncloud.google.com/go/compute v0.1.0/go.mod h1:GAesmwr110a34z04OlxYkATPBEfVhkymfTBXtfbBFow=\ncloud.google.com/go/compute v1.3.0/go.mod h1:cCZiE1NHEtai4wiufUhW8I8S1JKkAnhnQJWM7YD99wM=\ncloud.google.com/go/compute v1.5.0/go.mod h1:9SMHyhJlzhlkJqrPAc839t2BZFTSk6Jdj6mkzQJeu0M=\ncloud.google.com/go/compute v1.6.0/go.mod h1:T29tfhtVbq1wvAPo0E3+7vhgmkOYeXjhFvz/FMzPu0s=\ncloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=\ncloud.google.com/go/compute v1.7.0/go.mod h1:435lt8av5oL9P3fv1OEzSbSUe+ybHXGMPQHHZWZxy9U=\ncloud.google.com/go/compute v1.10.0/go.mod h1:ER5CLbMxl90o2jtNbGSbtfOpQKR0t15FOtRsugnLrlU=\ncloud.google.com/go/compute v1.12.0/go.mod h1:e8yNOBcBONZU1vJKCvCoDw/4JQsA0dpM4x/6PIIOocU=\ncloud.google.com/go/compute v1.12.1/go.mod h1:e8yNOBcBONZU1vJKCvCoDw/4JQsA0dpM4x/6PIIOocU=\ncloud.google.com/go/compute v1.13.0/go.mod h1:5aPTS0cUNMIc1CE546K+Th6weJUNQErARyZtRXDJ8GE=\ncloud.google.com/go/compute v1.14.0/go.mod h1:YfLtxrj9sU4Yxv+sXzZkyPjEyPBZfXHUvjxega5vAdo=\ncloud.google.com/go/compute v1.15.1/go.mod h1:bjjoF/NtFUrkD/urWfdHaKuOPDR5nWIs63rR+SXhcpA=\ncloud.google.com/go/compute v1.18.0/go.mod h1:1X7yHxec2Ga+Ss6jPyjxRxpu2uu7PLgsOVXvgU0yacs=\ncloud.google.com/go/compute v1.19.0/go.mod h1:rikpw2y+UMidAe9tISo04EHNOIf42RLYF/q8Bs93scU=\ncloud.google.com/go/compute v1.19.1/go.mod h1:6ylj3a05WF8leseCdIf77NK0g1ey+nj5IKd5/kvShxE=\ncloud.google.com/go/compute/metadata v0.1.0/go.mod h1:Z1VN+bulIf6bt4P/C37K4DyZYZEXYonfTBHHFPO/4UU=\ncloud.google.com/go/compute/metadata v0.2.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncloud.google.com/go/compute/metadata v0.2.1/go.mod h1:jgHgmJd2RKBGzXqF5LR2EZMGxBkeanZ9wwa75XHJgOM=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/compute/metadata v0.6.0 h1:A6hENjEsCDtC1k8byVsgwvVcioamEHvZ4j01OwKxG9I=\ncloud.google.com/go/compute/metadata v0.6.0/go.mod h1:FjyFAW1MW0C203CEOMDTu3Dk1FlqW3Rga40jzHL4hfg=\ncloud.google.com/go/contactcenterinsights v1.3.0/go.mod h1:Eu2oemoePuEFc/xKFPjbTuPSj0fYJcPls9TFlPNnHHY=\ncloud.google.com/go/contactcenterinsights v1.4.0/go.mod h1:L2YzkGbPsv+vMQMCADxJoT9YiTTnSEd6fEvCeHTYVck=\ncloud.google.com/go/contactcenterinsights v1.6.0/go.mod h1:IIDlT6CLcDoyv79kDv8iWxMSTZhLxSCofVV5W6YFM/w=\ncloud.google.com/go/container v1.6.0/go.mod h1:Xazp7GjJSeUYo688S+6J5V+n/t+G5sKBTFkKNudGRxg=\ncloud.google.com/go/container v1.7.0/go.mod h1:Dp5AHtmothHGX3DwwIHPgq45Y8KmNsgN3amoYfxVkLo=\ncloud.google.com/go/container v1.13.1/go.mod h1:6wgbMPeQRw9rSnKBCAJXnds3Pzj03C4JHamr8asWKy4=\ncloud.google.com/go/container v1.14.0/go.mod h1:3AoJMPhHfLDxLvrlVWaK57IXzaPnLaZq63WX59aQBfM=\ncloud.google.com/go/container v1.15.0/go.mod h1:ft+9S0WGjAyjDggg5S06DXj+fHJICWg8L7isCQe9pQA=\ncloud.google.com/go/containeranalysis v0.5.1/go.mod h1:1D92jd8gRR/c0fGMlymRgxWD3Qw9C1ff6/T7mLgVL8I=\ncloud.google.com/go/containeranalysis v0.6.0/go.mod h1:HEJoiEIu+lEXM+k7+qLCci0h33lX3ZqoYFdmPcoO7s4=\ncloud.google.com/go/containeranalysis v0.7.0/go.mod h1:9aUL+/vZ55P2CXfuZjS4UjQ9AgXoSw8Ts6lemfmxBxI=\ncloud.google.com/go/containeranalysis v0.9.0/go.mod h1:orbOANbwk5Ejoom+s+DUCTTJ7IBdBQJDcSylAx/on9s=\ncloud.google.com/go/datacatalog v1.3.0/go.mod h1:g9svFY6tuR+j+hrTw3J2dNcmI0dzmSiyOzm8kpLq0a0=\ncloud.google.com/go/datacatalog v1.5.0/go.mod h1:M7GPLNQeLfWqeIm3iuiruhPzkt65+Bx8dAKvScX8jvs=\ncloud.google.com/go/datacatalog v1.6.0/go.mod h1:+aEyF8JKg+uXcIdAmmaMUmZ3q1b/lKLtXCmXdnc0lbc=\ncloud.google.com/go/datacatalog v1.7.0/go.mod h1:9mEl4AuDYWw81UGc41HonIHH7/sn52H0/tc8f8ZbZIE=\ncloud.google.com/go/datacatalog v1.8.0/go.mod h1:KYuoVOv9BM8EYz/4eMFxrr4DUKhGIOXxZoKYF5wdISM=\ncloud.google.com/go/datacatalog v1.8.1/go.mod h1:RJ58z4rMp3gvETA465Vg+ag8BGgBdnRPEMMSTr5Uv+M=\ncloud.google.com/go/datacatalog v1.12.0/go.mod h1:CWae8rFkfp6LzLumKOnmVh4+Zle4A3NXLzVJ1d1mRm0=\ncloud.google.com/go/datacatalog v1.13.0/go.mod h1:E4Rj9a5ZtAxcQJlEBTLgMTphfP11/lNaAshpoBgemX8=\ncloud.google.com/go/dataflow v0.6.0/go.mod h1:9QwV89cGoxjjSR9/r7eFDqqjtvbKxAK2BaYU6PVk9UM=\ncloud.google.com/go/dataflow v0.7.0/go.mod h1:PX526vb4ijFMesO1o202EaUmouZKBpjHsTlCtB4parQ=\ncloud.google.com/go/dataflow v0.8.0/go.mod h1:Rcf5YgTKPtQyYz8bLYhFoIV/vP39eL7fWNcSOyFfLJE=\ncloud.google.com/go/dataform v0.3.0/go.mod h1:cj8uNliRlHpa6L3yVhDOBrUXH+BPAO1+KFMQQNSThKo=\ncloud.google.com/go/dataform v0.4.0/go.mod h1:fwV6Y4Ty2yIFL89huYlEkwUPtS7YZinZbzzj5S9FzCE=\ncloud.google.com/go/dataform v0.5.0/go.mod h1:GFUYRe8IBa2hcomWplodVmUx/iTL0FrsauObOM3Ipr0=\ncloud.google.com/go/dataform v0.6.0/go.mod h1:QPflImQy33e29VuapFdf19oPbE4aYTJxr31OAPV+ulA=\ncloud.google.com/go/dataform v0.7.0/go.mod h1:7NulqnVozfHvWUBpMDfKMUESr+85aJsC/2O0o3jWPDE=\ncloud.google.com/go/datafusion v1.4.0/go.mod h1:1Zb6VN+W6ALo85cXnM1IKiPw+yQMKMhB9TsTSRDo/38=\ncloud.google.com/go/datafusion v1.5.0/go.mod h1:Kz+l1FGHB0J+4XF2fud96WMmRiq/wj8N9u007vyXZ2w=\ncloud.google.com/go/datafusion v1.6.0/go.mod h1:WBsMF8F1RhSXvVM8rCV3AeyWVxcC2xY6vith3iw3S+8=\ncloud.google.com/go/datalabeling v0.5.0/go.mod h1:TGcJ0G2NzcsXSE/97yWjIZO0bXj0KbVlINXMG9ud42I=\ncloud.google.com/go/datalabeling v0.6.0/go.mod h1:WqdISuk/+WIGeMkpw/1q7bK/tFEZxsrFJOJdY2bXvTQ=\ncloud.google.com/go/datalabeling v0.7.0/go.mod h1:WPQb1y08RJbmpM3ww0CSUAGweL0SxByuW2E+FU+wXcM=\ncloud.google.com/go/dataplex v1.3.0/go.mod h1:hQuRtDg+fCiFgC8j0zV222HvzFQdRd+SVX8gdmFcZzA=\ncloud.google.com/go/dataplex v1.4.0/go.mod h1:X51GfLXEMVJ6UN47ESVqvlsRplbLhcsAt0kZCCKsU0A=\ncloud.google.com/go/dataplex v1.5.2/go.mod h1:cVMgQHsmfRoI5KFYq4JtIBEUbYwc3c7tXmIDhRmNNVQ=\ncloud.google.com/go/dataplex v1.6.0/go.mod h1:bMsomC/aEJOSpHXdFKFGQ1b0TDPIeL28nJObeO1ppRs=\ncloud.google.com/go/dataproc v1.7.0/go.mod h1:CKAlMjII9H90RXaMpSxQ8EU6dQx6iAYNPcYPOkSbi8s=\ncloud.google.com/go/dataproc v1.8.0/go.mod h1:5OW+zNAH0pMpw14JVrPONsxMQYMBqJuzORhIBfBn9uI=\ncloud.google.com/go/dataproc v1.12.0/go.mod h1:zrF3aX0uV3ikkMz6z4uBbIKyhRITnxvr4i3IjKsKrw4=\ncloud.google.com/go/dataqna v0.5.0/go.mod h1:90Hyk596ft3zUQ8NkFfvICSIfHFh1Bc7C4cK3vbhkeo=\ncloud.google.com/go/dataqna v0.6.0/go.mod h1:1lqNpM7rqNLVgWBJyk5NF6Uen2PHym0jtVJonplVsDA=\ncloud.google.com/go/dataqna v0.7.0/go.mod h1:Lx9OcIIeqCrw1a6KdO3/5KMP1wAmTc0slZWwP12Qq3c=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/datastore v1.10.0/go.mod h1:PC5UzAmDEkAmkfaknstTYbNpgE49HAgW2J1gcgUfmdM=\ncloud.google.com/go/datastore v1.11.0/go.mod h1:TvGxBIHCS50u8jzG+AW/ppf87v1of8nwzFNgEZU1D3c=\ncloud.google.com/go/datastream v1.2.0/go.mod h1:i/uTP8/fZwgATHS/XFu0TcNUhuA0twZxxQ3EyCUQMwo=\ncloud.google.com/go/datastream v1.3.0/go.mod h1:cqlOX8xlyYF/uxhiKn6Hbv6WjwPPuI9W2M9SAXwaLLQ=\ncloud.google.com/go/datastream v1.4.0/go.mod h1:h9dpzScPhDTs5noEMQVWP8Wx8AFBRyS0s8KWPx/9r0g=\ncloud.google.com/go/datastream v1.5.0/go.mod h1:6TZMMNPwjUqZHBKPQ1wwXpb0d5VDVPl2/XoS5yi88q4=\ncloud.google.com/go/datastream v1.6.0/go.mod h1:6LQSuswqLa7S4rPAOZFVjHIG3wJIjZcZrw8JDEDJuIs=\ncloud.google.com/go/datastream v1.7.0/go.mod h1:uxVRMm2elUSPuh65IbZpzJNMbuzkcvu5CjMqVIUHrww=\ncloud.google.com/go/deploy v1.4.0/go.mod h1:5Xghikd4VrmMLNaF6FiRFDlHb59VM59YoDQnOUdsH/c=\ncloud.google.com/go/deploy v1.5.0/go.mod h1:ffgdD0B89tToyW/U/D2eL0jN2+IEV/3EMuXHA0l4r+s=\ncloud.google.com/go/deploy v1.6.0/go.mod h1:f9PTHehG/DjCom3QH0cntOVRm93uGBDt2vKzAPwpXQI=\ncloud.google.com/go/deploy v1.8.0/go.mod h1:z3myEJnA/2wnB4sgjqdMfgxCA0EqC3RBTNcVPs93mtQ=\ncloud.google.com/go/dialogflow v1.15.0/go.mod h1:HbHDWs33WOGJgn6rfzBW1Kv807BE3O1+xGbn59zZWI4=\ncloud.google.com/go/dialogflow v1.16.1/go.mod h1:po6LlzGfK+smoSmTBnbkIZY2w8ffjz/RcGSS+sh1el0=\ncloud.google.com/go/dialogflow v1.17.0/go.mod h1:YNP09C/kXA1aZdBgC/VtXX74G/TKn7XVCcVumTflA+8=\ncloud.google.com/go/dialogflow v1.18.0/go.mod h1:trO7Zu5YdyEuR+BhSNOqJezyFQ3aUzz0njv7sMx/iek=\ncloud.google.com/go/dialogflow v1.19.0/go.mod h1:JVmlG1TwykZDtxtTXujec4tQ+D8SBFMoosgy+6Gn0s0=\ncloud.google.com/go/dialogflow v1.29.0/go.mod h1:b+2bzMe+k1s9V+F2jbJwpHPzrnIyHihAdRFMtn2WXuM=\ncloud.google.com/go/dialogflow v1.31.0/go.mod h1:cuoUccuL1Z+HADhyIA7dci3N5zUssgpBJmCzI6fNRB4=\ncloud.google.com/go/dialogflow v1.32.0/go.mod h1:jG9TRJl8CKrDhMEcvfcfFkkpp8ZhgPz3sBGmAUYJ2qE=\ncloud.google.com/go/dlp v1.6.0/go.mod h1:9eyB2xIhpU0sVwUixfBubDoRwP+GjeUoxxeueZmqvmM=\ncloud.google.com/go/dlp v1.7.0/go.mod h1:68ak9vCiMBjbasxeVD17hVPxDEck+ExiHavX8kiHG+Q=\ncloud.google.com/go/dlp v1.9.0/go.mod h1:qdgmqgTyReTz5/YNSSuueR8pl7hO0o9bQ39ZhtgkWp4=\ncloud.google.com/go/documentai v1.7.0/go.mod h1:lJvftZB5NRiFSX4moiye1SMxHx0Bc3x1+p9e/RfXYiU=\ncloud.google.com/go/documentai v1.8.0/go.mod h1:xGHNEB7CtsnySCNrCFdCyyMz44RhFEEX2Q7UD0c5IhU=\ncloud.google.com/go/documentai v1.9.0/go.mod h1:FS5485S8R00U10GhgBC0aNGrJxBP8ZVpEeJ7PQDZd6k=\ncloud.google.com/go/documentai v1.10.0/go.mod h1:vod47hKQIPeCfN2QS/jULIvQTugbmdc0ZvxxfQY1bg4=\ncloud.google.com/go/documentai v1.16.0/go.mod h1:o0o0DLTEZ+YnJZ+J4wNfTxmDVyrkzFvttBXXtYRMHkM=\ncloud.google.com/go/documentai v1.18.0/go.mod h1:F6CK6iUH8J81FehpskRmhLq/3VlwQvb7TvwOceQ2tbs=\ncloud.google.com/go/domains v0.6.0/go.mod h1:T9Rz3GasrpYk6mEGHh4rymIhjlnIuB4ofT1wTxDeT4Y=\ncloud.google.com/go/domains v0.7.0/go.mod h1:PtZeqS1xjnXuRPKE/88Iru/LdfoRyEHYA9nFQf4UKpg=\ncloud.google.com/go/domains v0.8.0/go.mod h1:M9i3MMDzGFXsydri9/vW+EWz9sWb4I6WyHqdlAk0idE=\ncloud.google.com/go/edgecontainer v0.1.0/go.mod h1:WgkZ9tp10bFxqO8BLPqv2LlfmQF1X8lZqwW4r1BTajk=\ncloud.google.com/go/edgecontainer v0.2.0/go.mod h1:RTmLijy+lGpQ7BXuTDa4C4ssxyXT34NIuHIgKuP4s5w=\ncloud.google.com/go/edgecontainer v0.3.0/go.mod h1:FLDpP4nykgwwIfcLt6zInhprzw0lEi2P1fjO6Ie0qbc=\ncloud.google.com/go/edgecontainer v1.0.0/go.mod h1:cttArqZpBB2q58W/upSG++ooo6EsblxDIolxa3jSjbY=\ncloud.google.com/go/errorreporting v0.3.0/go.mod h1:xsP2yaAp+OAW4OIm60An2bbLpqIhKXdWR/tawvl7QzU=\ncloud.google.com/go/essentialcontacts v1.3.0/go.mod h1:r+OnHa5jfj90qIfZDO/VztSFqbQan7HV75p8sA+mdGI=\ncloud.google.com/go/essentialcontacts v1.4.0/go.mod h1:8tRldvHYsmnBCHdFpvU+GL75oWiBKl80BiqlFh9tp+8=\ncloud.google.com/go/essentialcontacts v1.5.0/go.mod h1:ay29Z4zODTuwliK7SnX8E86aUF2CTzdNtvv42niCX0M=\ncloud.google.com/go/eventarc v1.7.0/go.mod h1:6ctpF3zTnaQCxUjHUdcfgcA1A2T309+omHZth7gDfmc=\ncloud.google.com/go/eventarc v1.8.0/go.mod h1:imbzxkyAU4ubfsaKYdQg04WS1NvncblHEup4kvF+4gw=\ncloud.google.com/go/eventarc v1.10.0/go.mod h1:u3R35tmZ9HvswGRBnF48IlYgYeBcPUCjkr4BTdem2Kw=\ncloud.google.com/go/eventarc v1.11.0/go.mod h1:PyUjsUKPWoRBCHeOxZd/lbOOjahV41icXyUY5kSTvVY=\ncloud.google.com/go/filestore v1.3.0/go.mod h1:+qbvHGvXU1HaKX2nD0WEPo92TP/8AQuCVEBXNY9z0+w=\ncloud.google.com/go/filestore v1.4.0/go.mod h1:PaG5oDfo9r224f8OYXURtAsY+Fbyq/bLYoINEK8XQAI=\ncloud.google.com/go/filestore v1.5.0/go.mod h1:FqBXDWBp4YLHqRnVGveOkHDf8svj9r5+mUDLupOWEDs=\ncloud.google.com/go/filestore v1.6.0/go.mod h1:di5unNuss/qfZTw2U9nhFqo8/ZDSc466dre85Kydllg=\ncloud.google.com/go/firestore v1.9.0/go.mod h1:HMkjKHNTtRyZNiMzu7YAsLr9K3X2udY2AMwDaMEQiiE=\ncloud.google.com/go/functions v1.6.0/go.mod h1:3H1UA3qiIPRWD7PeZKLvHZ9SaQhR26XIJcC0A5GbvAk=\ncloud.google.com/go/functions v1.7.0/go.mod h1:+d+QBcWM+RsrgZfV9xo6KfA1GlzJfxcfZcRPEhDDfzg=\ncloud.google.com/go/functions v1.8.0/go.mod h1:RTZ4/HsQjIqIYP9a9YPbU+QFoQsAlYgrwOXJWHn1POY=\ncloud.google.com/go/functions v1.9.0/go.mod h1:Y+Dz8yGguzO3PpIjhLTbnqV1CWmgQ5UwtlpzoyquQ08=\ncloud.google.com/go/functions v1.10.0/go.mod h1:0D3hEOe3DbEvCXtYOZHQZmD+SzYsi1YbI7dGvHfldXw=\ncloud.google.com/go/functions v1.12.0/go.mod h1:AXWGrF3e2C/5ehvwYo/GH6O5s09tOPksiKhz+hH8WkA=\ncloud.google.com/go/functions v1.13.0/go.mod h1:EU4O007sQm6Ef/PwRsI8N2umygGqPBS/IZQKBQBcJ3c=\ncloud.google.com/go/gaming v1.5.0/go.mod h1:ol7rGcxP/qHTRQE/RO4bxkXq+Fix0j6D4LFPzYTIrDM=\ncloud.google.com/go/gaming v1.6.0/go.mod h1:YMU1GEvA39Qt3zWGyAVA9bpYz/yAhTvaQ1t2sK4KPUA=\ncloud.google.com/go/gaming v1.7.0/go.mod h1:LrB8U7MHdGgFG851iHAfqUdLcKBdQ55hzXy9xBJz0+w=\ncloud.google.com/go/gaming v1.8.0/go.mod h1:xAqjS8b7jAVW0KFYeRUxngo9My3f33kFmua++Pi+ggM=\ncloud.google.com/go/gaming v1.9.0/go.mod h1:Fc7kEmCObylSWLO334NcO+O9QMDyz+TKC4v1D7X+Bc0=\ncloud.google.com/go/gkebackup v0.2.0/go.mod h1:XKvv/4LfG829/B8B7xRkk8zRrOEbKtEam6yNfuQNH60=\ncloud.google.com/go/gkebackup v0.3.0/go.mod h1:n/E671i1aOQvUxT541aTkCwExO/bTer2HDlj4TsBRAo=\ncloud.google.com/go/gkebackup v0.4.0/go.mod h1:byAyBGUwYGEEww7xsbnUTBHIYcOPy/PgUWUtOeRm9Vg=\ncloud.google.com/go/gkeconnect v0.5.0/go.mod h1:c5lsNAg5EwAy7fkqX/+goqFsU1Da/jQFqArp+wGNr/o=\ncloud.google.com/go/gkeconnect v0.6.0/go.mod h1:Mln67KyU/sHJEBY8kFZ0xTeyPtzbq9StAVvEULYK16A=\ncloud.google.com/go/gkeconnect v0.7.0/go.mod h1:SNfmVqPkaEi3bF/B3CNZOAYPYdg7sU+obZ+QTky2Myw=\ncloud.google.com/go/gkehub v0.9.0/go.mod h1:WYHN6WG8w9bXU0hqNxt8rm5uxnk8IH+lPY9J2TV7BK0=\ncloud.google.com/go/gkehub v0.10.0/go.mod h1:UIPwxI0DsrpsVoWpLB0stwKCP+WFVG9+y977wO+hBH0=\ncloud.google.com/go/gkehub v0.11.0/go.mod h1:JOWHlmN+GHyIbuWQPl47/C2RFhnFKH38jH9Ascu3n0E=\ncloud.google.com/go/gkehub v0.12.0/go.mod h1:djiIwwzTTBrF5NaXCGv3mf7klpEMcST17VBTVVDcuaw=\ncloud.google.com/go/gkemulticloud v0.3.0/go.mod h1:7orzy7O0S+5kq95e4Hpn7RysVA7dPs8W/GgfUtsPbrA=\ncloud.google.com/go/gkemulticloud v0.4.0/go.mod h1:E9gxVBnseLWCk24ch+P9+B2CoDFJZTyIgLKSalC7tuI=\ncloud.google.com/go/gkemulticloud v0.5.0/go.mod h1:W0JDkiyi3Tqh0TJr//y19wyb1yf8llHVto2Htf2Ja3Y=\ncloud.google.com/go/grafeas v0.2.0/go.mod h1:KhxgtF2hb0P191HlY5besjYm6MqTSTj3LSI+M+ByZHc=\ncloud.google.com/go/gsuiteaddons v1.3.0/go.mod h1:EUNK/J1lZEZO8yPtykKxLXI6JSVN2rg9bN8SXOa0bgM=\ncloud.google.com/go/gsuiteaddons v1.4.0/go.mod h1:rZK5I8hht7u7HxFQcFei0+AtfS9uSushomRlg+3ua1o=\ncloud.google.com/go/gsuiteaddons v1.5.0/go.mod h1:TFCClYLd64Eaa12sFVmUyG62tk4mdIsI7pAnSXRkcFo=\ncloud.google.com/go/iam v0.1.0/go.mod h1:vcUNEa0pEm0qRVpmWepWaFMIAI8/hjB9mO8rNCJtF6c=\ncloud.google.com/go/iam v0.3.0/go.mod h1:XzJPvDayI+9zsASAFO68Hk07u3z+f+JrT2xXNdp4bnY=\ncloud.google.com/go/iam v0.5.0/go.mod h1:wPU9Vt0P4UmCux7mqtRu6jcpPAb74cP1fh50J3QpkUc=\ncloud.google.com/go/iam v0.6.0/go.mod h1:+1AH33ueBne5MzYccyMHtEKqLE4/kJOibtffMHDMFMc=\ncloud.google.com/go/iam v0.7.0/go.mod h1:H5Br8wRaDGNc8XP3keLc4unfUUZeyH3Sfl9XpQEYOeg=\ncloud.google.com/go/iam v0.8.0/go.mod h1:lga0/y3iH6CX7sYqypWJ33hf7kkfXJag67naqGESjkE=\ncloud.google.com/go/iam v0.11.0/go.mod h1:9PiLDanza5D+oWFZiH1uG+RnRCfEGKoyl6yo4cgWZGY=\ncloud.google.com/go/iam v0.12.0/go.mod h1:knyHGviacl11zrtZUoDuYpDgLjvr28sLQaG0YB2GYAY=\ncloud.google.com/go/iam v0.13.0/go.mod h1:ljOg+rcNfzZ5d6f1nAUJ8ZIxOaZUVoS14bKCtaLZ/D0=\ncloud.google.com/go/iam v1.2.2 h1:ozUSofHUGf/F4tCNy/mu9tHLTaxZFLOUiKzjcgWHGIA=\ncloud.google.com/go/iam v1.2.2/go.mod h1:0Ys8ccaZHdI1dEUilwzqng/6ps2YB6vRsjIe00/+6JY=\ncloud.google.com/go/iap v1.4.0/go.mod h1:RGFwRJdihTINIe4wZ2iCP0zF/qu18ZwyKxrhMhygBEc=\ncloud.google.com/go/iap v1.5.0/go.mod h1:UH/CGgKd4KyohZL5Pt0jSKE4m3FR51qg6FKQ/z/Ix9A=\ncloud.google.com/go/iap v1.6.0/go.mod h1:NSuvI9C/j7UdjGjIde7t7HBz+QTwBcapPE07+sSRcLk=\ncloud.google.com/go/iap v1.7.0/go.mod h1:beqQx56T9O1G1yNPph+spKpNibDlYIiIixiqsQXxLIo=\ncloud.google.com/go/iap v1.7.1/go.mod h1:WapEwPc7ZxGt2jFGB/C/bm+hP0Y6NXzOYGjpPnmMS74=\ncloud.google.com/go/ids v1.1.0/go.mod h1:WIuwCaYVOzHIj2OhN9HAwvW+DBdmUAdcWlFxRl+KubM=\ncloud.google.com/go/ids v1.2.0/go.mod h1:5WXvp4n25S0rA/mQWAg1YEEBBq6/s+7ml1RDCW1IrcY=\ncloud.google.com/go/ids v1.3.0/go.mod h1:JBdTYwANikFKaDP6LtW5JAi4gubs57SVNQjemdt6xV4=\ncloud.google.com/go/iot v1.3.0/go.mod h1:r7RGh2B61+B8oz0AGE+J72AhA0G7tdXItODWsaA2oLs=\ncloud.google.com/go/iot v1.4.0/go.mod h1:dIDxPOn0UvNDUMD8Ger7FIaTuvMkj+aGk94RPP0iV+g=\ncloud.google.com/go/iot v1.5.0/go.mod h1:mpz5259PDl3XJthEmh9+ap0affn/MqNSP4My77Qql9o=\ncloud.google.com/go/iot v1.6.0/go.mod h1:IqdAsmE2cTYYNO1Fvjfzo9po179rAtJeVGUvkLN3rLE=\ncloud.google.com/go/kms v1.4.0/go.mod h1:fajBHndQ+6ubNw6Ss2sSd+SWvjL26RNo/dr7uxsnnOA=\ncloud.google.com/go/kms v1.5.0/go.mod h1:QJS2YY0eJGBg3mnDfuaCyLauWwBJiHRboYxJ++1xJNg=\ncloud.google.com/go/kms v1.6.0/go.mod h1:Jjy850yySiasBUDi6KFUwUv2n1+o7QZFyuUJg6OgjA0=\ncloud.google.com/go/kms v1.8.0/go.mod h1:4xFEhYFqvW+4VMELtZyxomGSYtSQKzM178ylFW4jMAg=\ncloud.google.com/go/kms v1.9.0/go.mod h1:qb1tPTgfF9RQP8e1wq4cLFErVuTJv7UsSC915J8dh3w=\ncloud.google.com/go/kms v1.10.0/go.mod h1:ng3KTUtQQU9bPX3+QGLsflZIHlkbn8amFAMY63m8d24=\ncloud.google.com/go/kms v1.10.1/go.mod h1:rIWk/TryCkR59GMC3YtHtXeLzd634lBbKenvyySAyYI=\ncloud.google.com/go/language v1.4.0/go.mod h1:F9dRpNFQmJbkaop6g0JhSBXCNlO90e1KWx5iDdxbWic=\ncloud.google.com/go/language v1.6.0/go.mod h1:6dJ8t3B+lUYfStgls25GusK04NLh3eDLQnWM3mdEbhI=\ncloud.google.com/go/language v1.7.0/go.mod h1:DJ6dYN/W+SQOjF8e1hLQXMF21AkH2w9wiPzPCJa2MIE=\ncloud.google.com/go/language v1.8.0/go.mod h1:qYPVHf7SPoNNiCL2Dr0FfEFNil1qi3pQEyygwpgVKB8=\ncloud.google.com/go/language v1.9.0/go.mod h1:Ns15WooPM5Ad/5no/0n81yUetis74g3zrbeJBE+ptUY=\ncloud.google.com/go/lifesciences v0.5.0/go.mod h1:3oIKy8ycWGPUyZDR/8RNnTOYevhaMLqh5vLUXs9zvT8=\ncloud.google.com/go/lifesciences v0.6.0/go.mod h1:ddj6tSX/7BOnhxCSd3ZcETvtNr8NZ6t/iPhY2Tyfu08=\ncloud.google.com/go/lifesciences v0.8.0/go.mod h1:lFxiEOMqII6XggGbOnKiyZ7IBwoIqA84ClvoezaA/bo=\ncloud.google.com/go/logging v1.6.1/go.mod h1:5ZO0mHHbvm8gEmeEUHrmDlTDSu5imF6MUP9OfilNXBw=\ncloud.google.com/go/logging v1.7.0/go.mod h1:3xjP2CjkM3ZkO73aj4ASA5wRPGGCRrPIAeNqVNkzY8M=\ncloud.google.com/go/logging v1.12.0 h1:ex1igYcGFd4S/RZWOCU51StlIEuey5bjqwH9ZYjHibk=\ncloud.google.com/go/logging v1.12.0/go.mod h1:wwYBt5HlYP1InnrtYI0wtwttpVU1rifnMT7RejksUAM=\ncloud.google.com/go/longrunning v0.1.1/go.mod h1:UUFxuDWkv22EuY93jjmDMFT5GPQKeFVJBIF6QlTqdsE=\ncloud.google.com/go/longrunning v0.3.0/go.mod h1:qth9Y41RRSUE69rDcOn6DdK3HfQfsUI0YSmW3iIlLJc=\ncloud.google.com/go/longrunning v0.4.1/go.mod h1:4iWDqhBZ70CvZ6BfETbvam3T8FMvLK+eFj0E6AaRQTo=\ncloud.google.com/go/longrunning v0.6.2 h1:xjDfh1pQcWPEvnfjZmwjKQEcHnpz6lHjfy7Fo0MK+hc=\ncloud.google.com/go/longrunning v0.6.2/go.mod h1:k/vIs83RN4bE3YCswdXC5PFfWVILjm3hpEUlSko4PiI=\ncloud.google.com/go/managedidentities v1.3.0/go.mod h1:UzlW3cBOiPrzucO5qWkNkh0w33KFtBJU281hacNvsdE=\ncloud.google.com/go/managedidentities v1.4.0/go.mod h1:NWSBYbEMgqmbZsLIyKvxrYbtqOsxY1ZrGM+9RgDqInM=\ncloud.google.com/go/managedidentities v1.5.0/go.mod h1:+dWcZ0JlUmpuxpIDfyP5pP5y0bLdRwOS4Lp7gMni/LA=\ncloud.google.com/go/maps v0.1.0/go.mod h1:BQM97WGyfw9FWEmQMpZ5T6cpovXXSd1cGmFma94eubI=\ncloud.google.com/go/maps v0.6.0/go.mod h1:o6DAMMfb+aINHz/p/jbcY+mYeXBoZoxTfdSQ8VAJaCw=\ncloud.google.com/go/maps v0.7.0/go.mod h1:3GnvVl3cqeSvgMcpRlQidXsPYuDGQ8naBis7MVzpXsY=\ncloud.google.com/go/mediatranslation v0.5.0/go.mod h1:jGPUhGTybqsPQn91pNXw0xVHfuJ3leR1wj37oU3y1f4=\ncloud.google.com/go/mediatranslation v0.6.0/go.mod h1:hHdBCTYNigsBxshbznuIMFNe5QXEowAuNmmC7h8pu5w=\ncloud.google.com/go/mediatranslation v0.7.0/go.mod h1:LCnB/gZr90ONOIQLgSXagp8XUW1ODs2UmUMvcgMfI2I=\ncloud.google.com/go/memcache v1.4.0/go.mod h1:rTOfiGZtJX1AaFUrOgsMHX5kAzaTQ8azHiuDoTPzNsE=\ncloud.google.com/go/memcache v1.5.0/go.mod h1:dk3fCK7dVo0cUU2c36jKb4VqKPS22BTkf81Xq617aWM=\ncloud.google.com/go/memcache v1.6.0/go.mod h1:XS5xB0eQZdHtTuTF9Hf8eJkKtR3pVRCcvJwtm68T3rA=\ncloud.google.com/go/memcache v1.7.0/go.mod h1:ywMKfjWhNtkQTxrWxCkCFkoPjLHPW6A7WOTVI8xy3LY=\ncloud.google.com/go/memcache v1.9.0/go.mod h1:8oEyzXCu+zo9RzlEaEjHl4KkgjlNDaXbCQeQWlzNFJM=\ncloud.google.com/go/metastore v1.5.0/go.mod h1:2ZNrDcQwghfdtCwJ33nM0+GrBGlVuh8rakL3vdPY3XY=\ncloud.google.com/go/metastore v1.6.0/go.mod h1:6cyQTls8CWXzk45G55x57DVQ9gWg7RiH65+YgPsNh9s=\ncloud.google.com/go/metastore v1.7.0/go.mod h1:s45D0B4IlsINu87/AsWiEVYbLaIMeUSoxlKKDqBGFS8=\ncloud.google.com/go/metastore v1.8.0/go.mod h1:zHiMc4ZUpBiM7twCIFQmJ9JMEkDSyZS9U12uf7wHqSI=\ncloud.google.com/go/metastore v1.10.0/go.mod h1:fPEnH3g4JJAk+gMRnrAnoqyv2lpUCqJPWOodSaf45Eo=\ncloud.google.com/go/monitoring v1.7.0/go.mod h1:HpYse6kkGo//7p6sT0wsIC6IBDET0RhIsnmlA53dvEk=\ncloud.google.com/go/monitoring v1.8.0/go.mod h1:E7PtoMJ1kQXWxPjB6mv2fhC5/15jInuulFdYYtlcvT4=\ncloud.google.com/go/monitoring v1.12.0/go.mod h1:yx8Jj2fZNEkL/GYZyTLS4ZtZEZN8WtDEiEqG4kLK50w=\ncloud.google.com/go/monitoring v1.13.0/go.mod h1:k2yMBAB1H9JT/QETjNkgdCGD9bPF712XiLTVr+cBrpw=\ncloud.google.com/go/monitoring v1.21.2 h1:FChwVtClH19E7pJ+e0xUhJPGksctZNVOk2UhMmblmdU=\ncloud.google.com/go/monitoring v1.21.2/go.mod h1:hS3pXvaG8KgWTSz+dAdyzPrGUYmi2Q+WFX8g2hqVEZU=\ncloud.google.com/go/networkconnectivity v1.4.0/go.mod h1:nOl7YL8odKyAOtzNX73/M5/mGZgqqMeryi6UPZTk/rA=\ncloud.google.com/go/networkconnectivity v1.5.0/go.mod h1:3GzqJx7uhtlM3kln0+x5wyFvuVH1pIBJjhCpjzSt75o=\ncloud.google.com/go/networkconnectivity v1.6.0/go.mod h1:OJOoEXW+0LAxHh89nXd64uGG+FbQoeH8DtxCHVOMlaM=\ncloud.google.com/go/networkconnectivity v1.7.0/go.mod h1:RMuSbkdbPwNMQjB5HBWD5MpTBnNm39iAVpC3TmsExt8=\ncloud.google.com/go/networkconnectivity v1.10.0/go.mod h1:UP4O4sWXJG13AqrTdQCD9TnLGEbtNRqjuaaA7bNjF5E=\ncloud.google.com/go/networkconnectivity v1.11.0/go.mod h1:iWmDD4QF16VCDLXUqvyspJjIEtBR/4zq5hwnY2X3scM=\ncloud.google.com/go/networkmanagement v1.4.0/go.mod h1:Q9mdLLRn60AsOrPc8rs8iNV6OHXaGcDdsIQe1ohekq8=\ncloud.google.com/go/networkmanagement v1.5.0/go.mod h1:ZnOeZ/evzUdUsnvRt792H0uYEnHQEMaz+REhhzJRcf4=\ncloud.google.com/go/networkmanagement v1.6.0/go.mod h1:5pKPqyXjB/sgtvB5xqOemumoQNB7y95Q7S+4rjSOPYY=\ncloud.google.com/go/networksecurity v0.5.0/go.mod h1:xS6fOCoqpVC5zx15Z/MqkfDwH4+m/61A3ODiDV1xmiQ=\ncloud.google.com/go/networksecurity v0.6.0/go.mod h1:Q5fjhTr9WMI5mbpRYEbiexTzROf7ZbDzvzCrNl14nyU=\ncloud.google.com/go/networksecurity v0.7.0/go.mod h1:mAnzoxx/8TBSyXEeESMy9OOYwo1v+gZ5eMRnsT5bC8k=\ncloud.google.com/go/networksecurity v0.8.0/go.mod h1:B78DkqsxFG5zRSVuwYFRZ9Xz8IcQ5iECsNrPn74hKHU=\ncloud.google.com/go/notebooks v1.2.0/go.mod h1:9+wtppMfVPUeJ8fIWPOq1UnATHISkGXGqTkxeieQ6UY=\ncloud.google.com/go/notebooks v1.3.0/go.mod h1:bFR5lj07DtCPC7YAAJ//vHskFBxA5JzYlH68kXVdk34=\ncloud.google.com/go/notebooks v1.4.0/go.mod h1:4QPMngcwmgb6uw7Po99B2xv5ufVoIQ7nOGDyL4P8AgA=\ncloud.google.com/go/notebooks v1.5.0/go.mod h1:q8mwhnP9aR8Hpfnrc5iN5IBhrXUy8S2vuYs+kBJ/gu0=\ncloud.google.com/go/notebooks v1.7.0/go.mod h1:PVlaDGfJgj1fl1S3dUwhFMXFgfYGhYQt2164xOMONmE=\ncloud.google.com/go/notebooks v1.8.0/go.mod h1:Lq6dYKOYOWUCTvw5t2q1gp1lAp0zxAxRycayS0iJcqQ=\ncloud.google.com/go/optimization v1.1.0/go.mod h1:5po+wfvX5AQlPznyVEZjGJTMr4+CAkJf2XSTQOOl9l4=\ncloud.google.com/go/optimization v1.2.0/go.mod h1:Lr7SOHdRDENsh+WXVmQhQTrzdu9ybg0NecjHidBq6xs=\ncloud.google.com/go/optimization v1.3.1/go.mod h1:IvUSefKiwd1a5p0RgHDbWCIbDFgKuEdB+fPPuP0IDLI=\ncloud.google.com/go/orchestration v1.3.0/go.mod h1:Sj5tq/JpWiB//X/q3Ngwdl5K7B7Y0KZ7bfv0wL6fqVA=\ncloud.google.com/go/orchestration v1.4.0/go.mod h1:6W5NLFWs2TlniBphAViZEVhrXRSMgUGDfW7vrWKvsBk=\ncloud.google.com/go/orchestration v1.6.0/go.mod h1:M62Bevp7pkxStDfFfTuCOaXgaaqRAga1yKyoMtEoWPQ=\ncloud.google.com/go/orgpolicy v1.4.0/go.mod h1:xrSLIV4RePWmP9P3tBl8S93lTmlAxjm06NSm2UTmKvE=\ncloud.google.com/go/orgpolicy v1.5.0/go.mod h1:hZEc5q3wzwXJaKrsx5+Ewg0u1LxJ51nNFlext7Tanwc=\ncloud.google.com/go/orgpolicy v1.10.0/go.mod h1:w1fo8b7rRqlXlIJbVhOMPrwVljyuW5mqssvBtU18ONc=\ncloud.google.com/go/osconfig v1.7.0/go.mod h1:oVHeCeZELfJP7XLxcBGTMBvRO+1nQ5tFG9VQTmYS2Fs=\ncloud.google.com/go/osconfig v1.8.0/go.mod h1:EQqZLu5w5XA7eKizepumcvWx+m8mJUhEwiPqWiZeEdg=\ncloud.google.com/go/osconfig v1.9.0/go.mod h1:Yx+IeIZJ3bdWmzbQU4fxNl8xsZ4amB+dygAwFPlvnNo=\ncloud.google.com/go/osconfig v1.10.0/go.mod h1:uMhCzqC5I8zfD9zDEAfvgVhDS8oIjySWh+l4WK6GnWw=\ncloud.google.com/go/osconfig v1.11.0/go.mod h1:aDICxrur2ogRd9zY5ytBLV89KEgT2MKB2L/n6x1ooPw=\ncloud.google.com/go/oslogin v1.4.0/go.mod h1:YdgMXWRaElXz/lDk1Na6Fh5orF7gvmJ0FGLIs9LId4E=\ncloud.google.com/go/oslogin v1.5.0/go.mod h1:D260Qj11W2qx/HVF29zBg+0fd6YCSjSqLUkY/qEenQU=\ncloud.google.com/go/oslogin v1.6.0/go.mod h1:zOJ1O3+dTU8WPlGEkFSh7qeHPPSoxrcMbbK1Nm2iX70=\ncloud.google.com/go/oslogin v1.7.0/go.mod h1:e04SN0xO1UNJ1M5GP0vzVBFicIe4O53FOfcixIqTyXo=\ncloud.google.com/go/oslogin v1.9.0/go.mod h1:HNavntnH8nzrn8JCTT5fj18FuJLFJc4NaZJtBnQtKFs=\ncloud.google.com/go/phishingprotection v0.5.0/go.mod h1:Y3HZknsK9bc9dMi+oE8Bim0lczMU6hrX0UpADuMefr0=\ncloud.google.com/go/phishingprotection v0.6.0/go.mod h1:9Y3LBLgy0kDTcYET8ZH3bq/7qni15yVUoAxiFxnlSUA=\ncloud.google.com/go/phishingprotection v0.7.0/go.mod h1:8qJI4QKHoda/sb/7/YmMQ2omRLSLYSu9bU0EKCNI+Lk=\ncloud.google.com/go/policytroubleshooter v1.3.0/go.mod h1:qy0+VwANja+kKrjlQuOzmlvscn4RNsAc0e15GGqfMxg=\ncloud.google.com/go/policytroubleshooter v1.4.0/go.mod h1:DZT4BcRw3QoO8ota9xw/LKtPa8lKeCByYeKTIf/vxdE=\ncloud.google.com/go/policytroubleshooter v1.5.0/go.mod h1:Rz1WfV+1oIpPdN2VvvuboLVRsB1Hclg3CKQ53j9l8vw=\ncloud.google.com/go/policytroubleshooter v1.6.0/go.mod h1:zYqaPTsmfvpjm5ULxAyD/lINQxJ0DDsnWOP/GZ7xzBc=\ncloud.google.com/go/privatecatalog v0.5.0/go.mod h1:XgosMUvvPyxDjAVNDYxJ7wBW8//hLDDYmnsNcMGq1K0=\ncloud.google.com/go/privatecatalog v0.6.0/go.mod h1:i/fbkZR0hLN29eEWiiwue8Pb+GforiEIBnV9yrRUOKI=\ncloud.google.com/go/privatecatalog v0.7.0/go.mod h1:2s5ssIFO69F5csTXcwBP7NPFTZvps26xGzvQ2PQaBYg=\ncloud.google.com/go/privatecatalog v0.8.0/go.mod h1:nQ6pfaegeDAq/Q5lrfCQzQLhubPiZhSaNhIgfJlnIXs=\ncloud.google.com/go/profiler v0.4.1 h1:Q7+lOvikTGMJ/IAWocpYYGit4SIIoILmVZfEEWTORSY=\ncloud.google.com/go/profiler v0.4.1/go.mod h1:LBrtEX6nbvhv1w/e5CPZmX9ajGG9BGLtGbv56Tg4SHs=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/pubsub v1.26.0/go.mod h1:QgBH3U/jdJy/ftjPhTkyXNj543Tin1pRYcdcPRnFIRI=\ncloud.google.com/go/pubsub v1.27.1/go.mod h1:hQN39ymbV9geqBnfQq6Xf63yNhUAhv9CZhzp5O6qsW0=\ncloud.google.com/go/pubsub v1.28.0/go.mod h1:vuXFpwaVoIPQMGXqRyUQigu/AX1S3IWugR9xznmcXX8=\ncloud.google.com/go/pubsub v1.30.0/go.mod h1:qWi1OPS0B+b5L+Sg6Gmc9zD1Y+HaM0MdUr7LsupY1P4=\ncloud.google.com/go/pubsub v1.45.1 h1:ZC/UzYcrmK12THWn1P72z+Pnp2vu/zCZRXyhAfP1hJY=\ncloud.google.com/go/pubsub v1.45.1/go.mod h1:3bn7fTmzZFwaUjllitv1WlsNMkqBgGUb3UdMhI54eCc=\ncloud.google.com/go/pubsublite v1.5.0/go.mod h1:xapqNQ1CuLfGi23Yda/9l4bBCKz/wC3KIJ5gKcxveZg=\ncloud.google.com/go/pubsublite v1.6.0/go.mod h1:1eFCS0U11xlOuMFV/0iBqw3zP12kddMeCbj/F3FSj9k=\ncloud.google.com/go/pubsublite v1.7.0/go.mod h1:8hVMwRXfDfvGm3fahVbtDbiLePT3gpoiJYJY+vxWxVM=\ncloud.google.com/go/recaptchaenterprise v1.3.1/go.mod h1:OdD+q+y4XGeAlxRaMn1Y7/GveP6zmq76byL6tjPE7d4=\ncloud.google.com/go/recaptchaenterprise/v2 v2.1.0/go.mod h1:w9yVqajwroDNTfGuhmOjPDN//rZGySaf6PtFVcSCa7o=\ncloud.google.com/go/recaptchaenterprise/v2 v2.2.0/go.mod h1:/Zu5jisWGeERrd5HnlS3EUGb/D335f9k51B/FVil0jk=\ncloud.google.com/go/recaptchaenterprise/v2 v2.3.0/go.mod h1:O9LwGCjrhGHBQET5CA7dd5NwwNQUErSgEDit1DLNTdo=\ncloud.google.com/go/recaptchaenterprise/v2 v2.4.0/go.mod h1:Am3LHfOuBstrLrNCBrlI5sbwx9LBg3te2N6hGvHn2mE=\ncloud.google.com/go/recaptchaenterprise/v2 v2.5.0/go.mod h1:O8LzcHXN3rz0j+LBC91jrwI3R+1ZSZEWrfL7XHgNo9U=\ncloud.google.com/go/recaptchaenterprise/v2 v2.6.0/go.mod h1:RPauz9jeLtB3JVzg6nCbe12qNoaa8pXc4d/YukAmcnA=\ncloud.google.com/go/recaptchaenterprise/v2 v2.7.0/go.mod h1:19wVj/fs5RtYtynAPJdDTb69oW0vNHYDBTbB4NvMD9c=\ncloud.google.com/go/recommendationengine v0.5.0/go.mod h1:E5756pJcVFeVgaQv3WNpImkFP8a+RptV6dDLGPILjvg=\ncloud.google.com/go/recommendationengine v0.6.0/go.mod h1:08mq2umu9oIqc7tDy8sx+MNJdLG0fUi3vaSVbztHgJ4=\ncloud.google.com/go/recommendationengine v0.7.0/go.mod h1:1reUcE3GIu6MeBz/h5xZJqNLuuVjNg1lmWMPyjatzac=\ncloud.google.com/go/recommender v1.5.0/go.mod h1:jdoeiBIVrJe9gQjwd759ecLJbxCDED4A6p+mqoqDvTg=\ncloud.google.com/go/recommender v1.6.0/go.mod h1:+yETpm25mcoiECKh9DEScGzIRyDKpZ0cEhWGo+8bo+c=\ncloud.google.com/go/recommender v1.7.0/go.mod h1:XLHs/W+T8olwlGOgfQenXBTbIseGclClff6lhFVe9Bs=\ncloud.google.com/go/recommender v1.8.0/go.mod h1:PkjXrTT05BFKwxaUxQmtIlrtj0kph108r02ZZQ5FE70=\ncloud.google.com/go/recommender v1.9.0/go.mod h1:PnSsnZY7q+VL1uax2JWkt/UegHssxjUVVCrX52CuEmQ=\ncloud.google.com/go/redis v1.7.0/go.mod h1:V3x5Jq1jzUcg+UNsRvdmsfuFnit1cfe3Z/PGyq/lm4Y=\ncloud.google.com/go/redis v1.8.0/go.mod h1:Fm2szCDavWzBk2cDKxrkmWBqoCiL1+Ctwq7EyqBCA/A=\ncloud.google.com/go/redis v1.9.0/go.mod h1:HMYQuajvb2D0LvMgZmLDZW8V5aOC/WxstZHiy4g8OiA=\ncloud.google.com/go/redis v1.10.0/go.mod h1:ThJf3mMBQtW18JzGgh41/Wld6vnDDc/F/F35UolRZPM=\ncloud.google.com/go/redis v1.11.0/go.mod h1:/X6eicana+BWcUda5PpwZC48o37SiFVTFSs0fWAJ7uQ=\ncloud.google.com/go/resourcemanager v1.3.0/go.mod h1:bAtrTjZQFJkiWTPDb1WBjzvc6/kifjj4QBYuKCCoqKA=\ncloud.google.com/go/resourcemanager v1.4.0/go.mod h1:MwxuzkumyTX7/a3n37gmsT3py7LIXwrShilPh3P1tR0=\ncloud.google.com/go/resourcemanager v1.5.0/go.mod h1:eQoXNAiAvCf5PXxWxXjhKQoTMaUSNrEfg+6qdf/wots=\ncloud.google.com/go/resourcemanager v1.6.0/go.mod h1:YcpXGRs8fDzcUl1Xw8uOVmI8JEadvhRIkoXXUNVYcVo=\ncloud.google.com/go/resourcemanager v1.7.0/go.mod h1:HlD3m6+bwhzj9XCouqmeiGuni95NTrExfhoSrkC/3EI=\ncloud.google.com/go/resourcesettings v1.3.0/go.mod h1:lzew8VfESA5DQ8gdlHwMrqZs1S9V87v3oCnKCWoOuQU=\ncloud.google.com/go/resourcesettings v1.4.0/go.mod h1:ldiH9IJpcrlC3VSuCGvjR5of/ezRrOxFtpJoJo5SmXg=\ncloud.google.com/go/resourcesettings v1.5.0/go.mod h1:+xJF7QSG6undsQDfsCJyqWXyBwUoJLhetkRMDRnIoXA=\ncloud.google.com/go/retail v1.8.0/go.mod h1:QblKS8waDmNUhghY2TI9O3JLlFk8jybHeV4BF19FrE4=\ncloud.google.com/go/retail v1.9.0/go.mod h1:g6jb6mKuCS1QKnH/dpu7isX253absFl6iE92nHwlBUY=\ncloud.google.com/go/retail v1.10.0/go.mod h1:2gDk9HsL4HMS4oZwz6daui2/jmKvqShXKQuB2RZ+cCc=\ncloud.google.com/go/retail v1.11.0/go.mod h1:MBLk1NaWPmh6iVFSz9MeKG/Psyd7TAgm6y/9L2B4x9Y=\ncloud.google.com/go/retail v1.12.0/go.mod h1:UMkelN/0Z8XvKymXFbD4EhFJlYKRx1FGhQkVPU5kF14=\ncloud.google.com/go/run v0.2.0/go.mod h1:CNtKsTA1sDcnqqIFR3Pb5Tq0usWxJJvsWOCPldRU3Do=\ncloud.google.com/go/run v0.3.0/go.mod h1:TuyY1+taHxTjrD0ZFk2iAR+xyOXEA0ztb7U3UNA0zBo=\ncloud.google.com/go/run v0.8.0/go.mod h1:VniEnuBwqjigv0A7ONfQUaEItaiCRVujlMqerPPiktM=\ncloud.google.com/go/run v0.9.0/go.mod h1:Wwu+/vvg8Y+JUApMwEDfVfhetv30hCG4ZwDR/IXl2Qg=\ncloud.google.com/go/scheduler v1.4.0/go.mod h1:drcJBmxF3aqZJRhmkHQ9b3uSSpQoltBPGPxGAWROx6s=\ncloud.google.com/go/scheduler v1.5.0/go.mod h1:ri073ym49NW3AfT6DZi21vLZrG07GXr5p3H1KxN5QlI=\ncloud.google.com/go/scheduler v1.6.0/go.mod h1:SgeKVM7MIwPn3BqtcBntpLyrIJftQISRrYB5ZtT+KOk=\ncloud.google.com/go/scheduler v1.7.0/go.mod h1:jyCiBqWW956uBjjPMMuX09n3x37mtyPJegEWKxRsn44=\ncloud.google.com/go/scheduler v1.8.0/go.mod h1:TCET+Y5Gp1YgHT8py4nlg2Sew8nUHMqcpousDgXJVQc=\ncloud.google.com/go/scheduler v1.9.0/go.mod h1:yexg5t+KSmqu+njTIh3b7oYPheFtBWGcbVUYF1GGMIc=\ncloud.google.com/go/secretmanager v1.6.0/go.mod h1:awVa/OXF6IiyaU1wQ34inzQNc4ISIDIrId8qE5QGgKA=\ncloud.google.com/go/secretmanager v1.8.0/go.mod h1:hnVgi/bN5MYHd3Gt0SPuTPPp5ENina1/LxM+2W9U9J4=\ncloud.google.com/go/secretmanager v1.9.0/go.mod h1:b71qH2l1yHmWQHt9LC80akm86mX8AL6X1MA01dW8ht4=\ncloud.google.com/go/secretmanager v1.10.0/go.mod h1:MfnrdvKMPNra9aZtQFvBcvRU54hbPD8/HayQdlUgJpU=\ncloud.google.com/go/security v1.5.0/go.mod h1:lgxGdyOKKjHL4YG3/YwIL2zLqMFCKs0UbQwgyZmfJl4=\ncloud.google.com/go/security v1.7.0/go.mod h1:mZklORHl6Bg7CNnnjLH//0UlAlaXqiG7Lb9PsPXLfD0=\ncloud.google.com/go/security v1.8.0/go.mod h1:hAQOwgmaHhztFhiQ41CjDODdWP0+AE1B3sX4OFlq+GU=\ncloud.google.com/go/security v1.9.0/go.mod h1:6Ta1bO8LXI89nZnmnsZGp9lVoVWXqsVbIq/t9dzI+2Q=\ncloud.google.com/go/security v1.10.0/go.mod h1:QtOMZByJVlibUT2h9afNDWRZ1G96gVywH8T5GUSb9IA=\ncloud.google.com/go/security v1.12.0/go.mod h1:rV6EhrpbNHrrxqlvW0BWAIawFWq3X90SduMJdFwtLB8=\ncloud.google.com/go/security v1.13.0/go.mod h1:Q1Nvxl1PAgmeW0y3HTt54JYIvUdtcpYKVfIB8AOMZ+0=\ncloud.google.com/go/securitycenter v1.13.0/go.mod h1:cv5qNAqjY84FCN6Y9z28WlkKXyWsgLO832YiWwkCWcU=\ncloud.google.com/go/securitycenter v1.14.0/go.mod h1:gZLAhtyKv85n52XYWt6RmeBdydyxfPeTrpToDPw4Auc=\ncloud.google.com/go/securitycenter v1.15.0/go.mod h1:PeKJ0t8MoFmmXLXWm41JidyzI3PJjd8sXWaVqg43WWk=\ncloud.google.com/go/securitycenter v1.16.0/go.mod h1:Q9GMaLQFUD+5ZTabrbujNWLtSLZIZF7SAR0wWECrjdk=\ncloud.google.com/go/securitycenter v1.18.1/go.mod h1:0/25gAzCM/9OL9vVx4ChPeM/+DlfGQJDwBy/UC8AKK0=\ncloud.google.com/go/securitycenter v1.19.0/go.mod h1:LVLmSg8ZkkyaNy4u7HCIshAngSQ8EcIRREP3xBnyfag=\ncloud.google.com/go/servicecontrol v1.4.0/go.mod h1:o0hUSJ1TXJAmi/7fLJAedOovnujSEvjKCAFNXPQ1RaU=\ncloud.google.com/go/servicecontrol v1.5.0/go.mod h1:qM0CnXHhyqKVuiZnGKrIurvVImCs8gmqWsDoqe9sU1s=\ncloud.google.com/go/servicecontrol v1.10.0/go.mod h1:pQvyvSRh7YzUF2efw7H87V92mxU8FnFDawMClGCNuAA=\ncloud.google.com/go/servicecontrol v1.11.0/go.mod h1:kFmTzYzTUIuZs0ycVqRHNaNhgR+UMUpw9n02l/pY+mc=\ncloud.google.com/go/servicecontrol v1.11.1/go.mod h1:aSnNNlwEFBY+PWGQ2DoM0JJ/QUXqV5/ZD9DOLB7SnUk=\ncloud.google.com/go/servicedirectory v1.4.0/go.mod h1:gH1MUaZCgtP7qQiI+F+A+OpeKF/HQWgtAddhTbhL2bs=\ncloud.google.com/go/servicedirectory v1.5.0/go.mod h1:QMKFL0NUySbpZJ1UZs3oFAmdvVxhhxB6eJ/Vlp73dfg=\ncloud.google.com/go/servicedirectory v1.6.0/go.mod h1:pUlbnWsLH9c13yGkxCmfumWEPjsRs1RlmJ4pqiNjVL4=\ncloud.google.com/go/servicedirectory v1.7.0/go.mod h1:5p/U5oyvgYGYejufvxhgwjL8UVXjkuw7q5XcG10wx1U=\ncloud.google.com/go/servicedirectory v1.8.0/go.mod h1:srXodfhY1GFIPvltunswqXpVxFPpZjf8nkKQT7XcXaY=\ncloud.google.com/go/servicedirectory v1.9.0/go.mod h1:29je5JjiygNYlmsGz8k6o+OZ8vd4f//bQLtvzkPPT/s=\ncloud.google.com/go/servicemanagement v1.4.0/go.mod h1:d8t8MDbezI7Z2R1O/wu8oTggo3BI2GKYbdG4y/SJTco=\ncloud.google.com/go/servicemanagement v1.5.0/go.mod h1:XGaCRe57kfqu4+lRxaFEAuqmjzF0r+gWHjWqKqBvKFo=\ncloud.google.com/go/servicemanagement v1.6.0/go.mod h1:aWns7EeeCOtGEX4OvZUWCCJONRZeFKiptqKf1D0l/Jc=\ncloud.google.com/go/servicemanagement v1.8.0/go.mod h1:MSS2TDlIEQD/fzsSGfCdJItQveu9NXnUniTrq/L8LK4=\ncloud.google.com/go/serviceusage v1.3.0/go.mod h1:Hya1cozXM4SeSKTAgGXgj97GlqUvF5JaoXacR1JTP/E=\ncloud.google.com/go/serviceusage v1.4.0/go.mod h1:SB4yxXSaYVuUBYUml6qklyONXNLt83U0Rb+CXyhjEeU=\ncloud.google.com/go/serviceusage v1.5.0/go.mod h1:w8U1JvqUqwJNPEOTQjrMHkw3IaIFLoLsPLvsE3xueec=\ncloud.google.com/go/serviceusage v1.6.0/go.mod h1:R5wwQcbOWsyuOfbP9tGdAnCAc6B9DRwPG1xtWMDeuPA=\ncloud.google.com/go/shell v1.3.0/go.mod h1:VZ9HmRjZBsjLGXusm7K5Q5lzzByZmJHf1d0IWHEN5X4=\ncloud.google.com/go/shell v1.4.0/go.mod h1:HDxPzZf3GkDdhExzD/gs8Grqk+dmYcEjGShZgYa9URw=\ncloud.google.com/go/shell v1.6.0/go.mod h1:oHO8QACS90luWgxP3N9iZVuEiSF84zNyLytb+qE2f9A=\ncloud.google.com/go/spanner v1.41.0/go.mod h1:MLYDBJR/dY4Wt7ZaMIQ7rXOTLjYrmxLE/5ve9vFfWos=\ncloud.google.com/go/spanner v1.44.0/go.mod h1:G8XIgYdOK+Fbcpbs7p2fiprDw4CaZX63whnSMLVBxjk=\ncloud.google.com/go/spanner v1.45.0/go.mod h1:FIws5LowYz8YAE1J8fOS7DJup8ff7xJeetWEo5REA2M=\ncloud.google.com/go/spanner v1.73.0 h1:0bab8QDn6MNj9lNK6XyGAVFhMlhMU2waePPa6GZNoi8=\ncloud.google.com/go/spanner v1.73.0/go.mod h1:mw98ua5ggQXVWwp83yjwggqEmW9t8rjs9Po1ohcUGW4=\ncloud.google.com/go/speech v1.6.0/go.mod h1:79tcr4FHCimOp56lwC01xnt/WPJZc4v3gzyT7FoBkCM=\ncloud.google.com/go/speech v1.7.0/go.mod h1:KptqL+BAQIhMsj1kOP2la5DSEEerPDuOP/2mmkhHhZQ=\ncloud.google.com/go/speech v1.8.0/go.mod h1:9bYIl1/tjsAnMgKGHKmBZzXKEkGgtU+MpdDPTE9f7y0=\ncloud.google.com/go/speech v1.9.0/go.mod h1:xQ0jTcmnRFFM2RfX/U+rk6FQNUF6DQlydUSyoooSpco=\ncloud.google.com/go/speech v1.14.1/go.mod h1:gEosVRPJ9waG7zqqnsHpYTOoAS4KouMRLDFMekpJ0J0=\ncloud.google.com/go/speech v1.15.0/go.mod h1:y6oH7GhqCaZANH7+Oe0BhgIogsNInLlz542tg3VqeYI=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncloud.google.com/go/storage v1.14.0/go.mod h1:GrKmX003DSIwi9o29oFT7YDnHYwZoctc3fOKtUw0Xmo=\ncloud.google.com/go/storage v1.22.1/go.mod h1:S8N1cAStu7BOeFfE8KAQzmyyLkK8p/vmRq6kuBTW58Y=\ncloud.google.com/go/storage v1.23.0/go.mod h1:vOEEDNFnciUMhBeT6hsJIn3ieU5cFRmzeLgDvXzfIXc=\ncloud.google.com/go/storage v1.27.0/go.mod h1:x9DOL8TK/ygDUMieqwfhdpQryTeEkhGKMi80i/iqR2s=\ncloud.google.com/go/storage v1.28.1/go.mod h1:Qnisd4CqDdo6BGs2AD5LLnEsmSQ80wQ5ogcBBKhU86Y=\ncloud.google.com/go/storage v1.29.0/go.mod h1:4puEjyTKnku6gfKoTfNOU/W+a9JyuVNxjpS5GBrB8h4=\ncloud.google.com/go/storage v1.45.0 h1:5av0QcIVj77t+44mV4gffFC/LscFRUhto6UBMB5SimM=\ncloud.google.com/go/storage v1.45.0/go.mod h1:wpPblkIuMP5jCB/E48Pz9zIo2S/zD8g+ITmxKkPCITE=\ncloud.google.com/go/storagetransfer v1.5.0/go.mod h1:dxNzUopWy7RQevYFHewchb29POFv3/AaBgnhqzqiK0w=\ncloud.google.com/go/storagetransfer v1.6.0/go.mod h1:y77xm4CQV/ZhFZH75PLEXY0ROiS7Gh6pSKrM8dJyg6I=\ncloud.google.com/go/storagetransfer v1.7.0/go.mod h1:8Giuj1QNb1kfLAiWM1bN6dHzfdlDAVC9rv9abHot2W4=\ncloud.google.com/go/storagetransfer v1.8.0/go.mod h1:JpegsHHU1eXg7lMHkvf+KE5XDJ7EQu0GwNJbbVGanEw=\ncloud.google.com/go/talent v1.1.0/go.mod h1:Vl4pt9jiHKvOgF9KoZo6Kob9oV4lwd/ZD5Cto54zDRw=\ncloud.google.com/go/talent v1.2.0/go.mod h1:MoNF9bhFQbiJ6eFD3uSsg0uBALw4n4gaCaEjBw9zo8g=\ncloud.google.com/go/talent v1.3.0/go.mod h1:CmcxwJ/PKfRgd1pBjQgU6W3YBwiewmUzQYH5HHmSCmM=\ncloud.google.com/go/talent v1.4.0/go.mod h1:ezFtAgVuRf8jRsvyE6EwmbTK5LKciD4KVnHuDEFmOOA=\ncloud.google.com/go/talent v1.5.0/go.mod h1:G+ODMj9bsasAEJkQSzO2uHQWXHHXUomArjWQQYkqK6c=\ncloud.google.com/go/texttospeech v1.4.0/go.mod h1:FX8HQHA6sEpJ7rCMSfXuzBcysDAuWusNNNvN9FELDd8=\ncloud.google.com/go/texttospeech v1.5.0/go.mod h1:oKPLhR4n4ZdQqWKURdwxMy0uiTS1xU161C8W57Wkea4=\ncloud.google.com/go/texttospeech v1.6.0/go.mod h1:YmwmFT8pj1aBblQOI3TfKmwibnsfvhIBzPXcW4EBovc=\ncloud.google.com/go/tpu v1.3.0/go.mod h1:aJIManG0o20tfDQlRIej44FcwGGl/cD0oiRyMKG19IQ=\ncloud.google.com/go/tpu v1.4.0/go.mod h1:mjZaX8p0VBgllCzF6wcU2ovUXN9TONFLd7iz227X2Xg=\ncloud.google.com/go/tpu v1.5.0/go.mod h1:8zVo1rYDFuW2l4yZVY0R0fb/v44xLh3llq7RuV61fPM=\ncloud.google.com/go/trace v1.3.0/go.mod h1:FFUE83d9Ca57C+K8rDl/Ih8LwOzWIV1krKgxg6N0G28=\ncloud.google.com/go/trace v1.4.0/go.mod h1:UG0v8UBqzusp+z63o7FK74SdFE+AXpCLdFb1rshXG+Y=\ncloud.google.com/go/trace v1.8.0/go.mod h1:zH7vcsbAhklH8hWFig58HvxcxyQbaIqMarMg9hn5ECA=\ncloud.google.com/go/trace v1.9.0/go.mod h1:lOQqpE5IaWY0Ixg7/r2SjixMuc6lfTFeO4QGM4dQWOk=\ncloud.google.com/go/trace v1.11.2 h1:4ZmaBdL8Ng/ajrgKqY5jfvzqMXbrDcBsUGXOT9aqTtI=\ncloud.google.com/go/trace v1.11.2/go.mod h1:bn7OwXd4pd5rFuAnTrzBuoZ4ax2XQeG3qNgYmfCy0Io=\ncloud.google.com/go/translate v1.3.0/go.mod h1:gzMUwRjvOqj5i69y/LYLd8RrNQk+hOmIXTi9+nb3Djs=\ncloud.google.com/go/translate v1.4.0/go.mod h1:06Dn/ppvLD6WvA5Rhdp029IX2Mi3Mn7fpMRLPvXT5Wg=\ncloud.google.com/go/translate v1.5.0/go.mod h1:29YDSYveqqpA1CQFD7NQuP49xymq17RXNaUDdc0mNu0=\ncloud.google.com/go/translate v1.6.0/go.mod h1:lMGRudH1pu7I3n3PETiOB2507gf3HnfLV8qlkHZEyos=\ncloud.google.com/go/translate v1.7.0/go.mod h1:lMGRudH1pu7I3n3PETiOB2507gf3HnfLV8qlkHZEyos=\ncloud.google.com/go/video v1.8.0/go.mod h1:sTzKFc0bUSByE8Yoh8X0mn8bMymItVGPfTuUBUyRgxk=\ncloud.google.com/go/video v1.9.0/go.mod h1:0RhNKFRF5v92f8dQt0yhaHrEuH95m068JYOvLZYnJSw=\ncloud.google.com/go/video v1.12.0/go.mod h1:MLQew95eTuaNDEGriQdcYn0dTwf9oWiA4uYebxM5kdg=\ncloud.google.com/go/video v1.13.0/go.mod h1:ulzkYlYgCp15N2AokzKjy7MQ9ejuynOJdf1tR5lGthk=\ncloud.google.com/go/video v1.14.0/go.mod h1:SkgaXwT+lIIAKqWAJfktHT/RbgjSuY6DobxEp0C5yTQ=\ncloud.google.com/go/video v1.15.0/go.mod h1:SkgaXwT+lIIAKqWAJfktHT/RbgjSuY6DobxEp0C5yTQ=\ncloud.google.com/go/videointelligence v1.6.0/go.mod h1:w0DIDlVRKtwPCn/C4iwZIJdvC69yInhW0cfi+p546uU=\ncloud.google.com/go/videointelligence v1.7.0/go.mod h1:k8pI/1wAhjznARtVT9U1llUaFNPh7muw8QyOUpavru4=\ncloud.google.com/go/videointelligence v1.8.0/go.mod h1:dIcCn4gVDdS7yte/w+koiXn5dWVplOZkE+xwG9FgK+M=\ncloud.google.com/go/videointelligence v1.9.0/go.mod h1:29lVRMPDYHikk3v8EdPSaL8Ku+eMzDljjuvRs105XoU=\ncloud.google.com/go/videointelligence v1.10.0/go.mod h1:LHZngX1liVtUhZvi2uNS0VQuOzNi2TkY1OakiuoUOjU=\ncloud.google.com/go/vision v1.2.0/go.mod h1:SmNwgObm5DpFBme2xpyOyasvBc1aPdjvMk2bBk0tKD0=\ncloud.google.com/go/vision/v2 v2.2.0/go.mod h1:uCdV4PpN1S0jyCyq8sIM42v2Y6zOLkZs+4R9LrGYwFo=\ncloud.google.com/go/vision/v2 v2.3.0/go.mod h1:UO61abBx9QRMFkNBbf1D8B1LXdS2cGiiCRx0vSpZoUo=\ncloud.google.com/go/vision/v2 v2.4.0/go.mod h1:VtI579ll9RpVTrdKdkMzckdnwMyX2JILb+MhPqRbPsY=\ncloud.google.com/go/vision/v2 v2.5.0/go.mod h1:MmaezXOOE+IWa+cS7OhRRLK2cNv1ZL98zhqFFZaaH2E=\ncloud.google.com/go/vision/v2 v2.6.0/go.mod h1:158Hes0MvOS9Z/bDMSFpjwsUrZ5fPrdwuyyvKSGAGMY=\ncloud.google.com/go/vision/v2 v2.7.0/go.mod h1:H89VysHy21avemp6xcf9b9JvZHVehWbET0uT/bcuY/0=\ncloud.google.com/go/vmmigration v1.2.0/go.mod h1:IRf0o7myyWFSmVR1ItrBSFLFD/rJkfDCUTO4vLlJvsE=\ncloud.google.com/go/vmmigration v1.3.0/go.mod h1:oGJ6ZgGPQOFdjHuocGcLqX4lc98YQ7Ygq8YQwHh9A7g=\ncloud.google.com/go/vmmigration v1.5.0/go.mod h1:E4YQ8q7/4W9gobHjQg4JJSgXXSgY21nA5r8swQV+Xxc=\ncloud.google.com/go/vmmigration v1.6.0/go.mod h1:bopQ/g4z+8qXzichC7GW1w2MjbErL54rk3/C843CjfY=\ncloud.google.com/go/vmwareengine v0.1.0/go.mod h1:RsdNEf/8UDvKllXhMz5J40XxDrNJNN4sagiox+OI208=\ncloud.google.com/go/vmwareengine v0.2.2/go.mod h1:sKdctNJxb3KLZkE/6Oui94iw/xs9PRNC2wnNLXsHvH8=\ncloud.google.com/go/vmwareengine v0.3.0/go.mod h1:wvoyMvNWdIzxMYSpH/R7y2h5h3WFkx6d+1TIsP39WGY=\ncloud.google.com/go/vpcaccess v1.4.0/go.mod h1:aQHVbTWDYUR1EbTApSVvMq1EnT57ppDmQzZ3imqIk4w=\ncloud.google.com/go/vpcaccess v1.5.0/go.mod h1:drmg4HLk9NkZpGfCmZ3Tz0Bwnm2+DKqViEpeEpOq0m8=\ncloud.google.com/go/vpcaccess v1.6.0/go.mod h1:wX2ILaNhe7TlVa4vC5xce1bCnqE3AeH27RV31lnmZes=\ncloud.google.com/go/webrisk v1.4.0/go.mod h1:Hn8X6Zr+ziE2aNd8SliSDWpEnSS1u4R9+xXZmFiHmGE=\ncloud.google.com/go/webrisk v1.5.0/go.mod h1:iPG6fr52Tv7sGk0H6qUFzmL3HHZev1htXuWDEEsqMTg=\ncloud.google.com/go/webrisk v1.6.0/go.mod h1:65sW9V9rOosnc9ZY7A7jsy1zoHS5W9IAXv6dGqhMQMc=\ncloud.google.com/go/webrisk v1.7.0/go.mod h1:mVMHgEYH0r337nmt1JyLthzMr6YxwN1aAIEc2fTcq7A=\ncloud.google.com/go/webrisk v1.8.0/go.mod h1:oJPDuamzHXgUc+b8SiHRcVInZQuybnvEW72PqTc7sSg=\ncloud.google.com/go/websecurityscanner v1.3.0/go.mod h1:uImdKm2wyeXQevQJXeh8Uun/Ym1VqworNDlBXQevGMo=\ncloud.google.com/go/websecurityscanner v1.4.0/go.mod h1:ebit/Fp0a+FWu5j4JOmJEV8S8CzdTkAS77oDsiSqYWQ=\ncloud.google.com/go/websecurityscanner v1.5.0/go.mod h1:Y6xdCPy81yi0SQnDY1xdNTNpfY1oAgXUlcfN3B3eSng=\ncloud.google.com/go/workflows v1.6.0/go.mod h1:6t9F5h/unJz41YqfBmqSASJSXccBLtD1Vwf+KmJENM0=\ncloud.google.com/go/workflows v1.7.0/go.mod h1:JhSrZuVZWuiDfKEFxU0/F1PQjmpnpcoISEXH2bcHC3M=\ncloud.google.com/go/workflows v1.8.0/go.mod h1:ysGhmEajwZxGn1OhGOGKsTXc5PyxOc0vfKf5Af+to4M=\ncloud.google.com/go/workflows v1.9.0/go.mod h1:ZGkj1aFIOd9c8Gerkjjq7OW7I5+l6cSvT3ujaO/WwSA=\ncloud.google.com/go/workflows v1.10.0/go.mod h1:fZ8LmRmZQWacon9UCX1r/g/DfAXx5VcPALq2CxzdePw=\ncontrib.go.opencensus.io/exporter/stackdriver v0.13.14 h1:zBakwHardp9Jcb8sQHcHpXy/0+JIb1M8KjigCJzx7+4=\ncontrib.go.opencensus.io/exporter/stackdriver v0.13.14/go.mod h1:5pSSGY0Bhuk7waTHuDf4aQ8D2DrhgETRo9fy6k3Xlzc=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngioui.org v0.0.0-20210308172011-57750fc8a0a6/go.mod h1:RSH6KIUZ0p2xy5zHDxgAM4zumjgTw83q2ge/PI+yyw8=\ngit.sr.ht/~sbinet/gg v0.3.1/go.mod h1:KGYtlADtqsqANL9ueOFkWymvzUvLMQllU5Ixo+8v3pc=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/GoogleCloudPlatform/grpc-gcp-go/grpcgcp v1.5.0 h1:oVLqHXhnYtUwM89y9T1fXGaK9wTkXHgNp8/ZNMQzUxE=\ngithub.com/GoogleCloudPlatform/grpc-gcp-go/grpcgcp v1.5.0/go.mod h1:dppbR7CwXD4pgtV9t3wD1812RaLDcBjtblcDF5f1vI0=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.2 h1:cZpsGsWTIFKymTA0je7IIvi1O7Es7apb9CF3EQlOcfE=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.2/go.mod h1:itPGVDKf9cC/ov4MdvJ2QZ0khw4bfoo9jzwTJlaxy2k=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 h1:UQ0AhxogsIRZDkElkblfnwjc3IaltCm2HUMvezQaL7s=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1/go.mod h1:jyqM3eLpJ3IbIFDTKVz2rF9T/xWGW0rIriGwnz8l9Tk=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1 h1:oTX4vsorBZo/Zdum6OKPA4o7544hm6smoRv1QjpTwGo=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1/go.mod h1:0wEl7vrAD8mehJyohS9HZy+WyEOaQO2mJx86Cvh93kM=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 h1:8nn+rsCvTq9axyEh382S0PFLBeaFwNsT43IrPWzctRU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1/go.mod h1:viRWSEhtMZqz1rhwmOVKkWl6SwmVowfL9O2YR5gI2PE=\ngithub.com/JohnCGriffin/overflow v0.0.0-20211019200055-46fa312c352c/go.mod h1:X0CRv0ky0k6m906ixxpzmDRLvX58TFUKS2eePweuyxk=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Masterminds/sprig v2.22.0+incompatible h1:z4yfnGrZ7netVz+0EDJ0Wi+5VZCSYp4Z0m2dk6cEM60=\ngithub.com/Masterminds/sprig v2.22.0+incompatible/go.mod h1:y6hNFY5UBTIWBxnzTeuNhlNS5hqE0NB0E6fgfo2Br3o=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/ajstarks/deck v0.0.0-20200831202436-30c9fc6549a9/go.mod h1:JynElWSGnm/4RlzPXRlREEwqTHAN3T56Bv2ITsFT3gY=\ngithub.com/ajstarks/deck/generate v0.0.0-20210309230005-c3f852c02e19/go.mod h1:T13YZdzov6OU0A1+RfKZiZN9ca6VeKdBdyDV+BY97Tk=\ngithub.com/ajstarks/svgo v0.0.0-20180226025133-644b8db467af/go.mod h1:K08gAheRH3/J6wwsYMMT4xOr94bZjxIelGM0+d/wbFw=\ngithub.com/ajstarks/svgo v0.0.0-20211024235047-1546f124cd8b/go.mod h1:1KcenG0jGWcpt8ov532z81sp/kMMUG485J2InIOyADM=\ngithub.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/apache/arrow/go/v10 v10.0.1/go.mod h1:YvhnlEePVnBS4+0z3fhPfUy7W1Ikj0Ih0vcRo/gZ1M0=\ngithub.com/apache/arrow/go/v11 v11.0.0/go.mod h1:Eg5OsL5H+e299f7u5ssuXsuHQVEGC4xei5aX110hRiI=\ngithub.com/apache/beam/sdks/v2 v2.61.0 h1:94uHmVBPt18c0aHqe93MOi5apWG85A+VfajoyHUk2Gs=\ngithub.com/apache/beam/sdks/v2 v2.61.0/go.mod h1:OpXQ4Iu9Erk0sTfPVrD++0FuJz2hL12lG+ky5RyM+JE=\ngithub.com/apache/thrift v0.16.0/go.mod h1:PHK3hniurgQaNMZYaCLEqXKsYK8upmhPbmdP2FXSqgU=\ngithub.com/avast/retry-go/v4 v4.6.0 h1:K9xNA+KeB8HHc2aWFuLb25Offp+0iVRXEvFx8IinRJA=\ngithub.com/avast/retry-go/v4 v4.6.0/go.mod h1:gvWlPhBVsvBbLkVGDg/KwvBv0bEkCOLRRSHKIr2PyOE=\ngithub.com/aws/aws-sdk-go v1.51.8 h1:tD7gQq5XKuKdhA6UMEH26ZNQH0s+HbL95rzv/ACz5TQ=\ngithub.com/aws/aws-sdk-go v1.51.8/go.mod h1:LF8svs817+Nz+DmiMQKTO3ubZ/6IaTpq3TjupRn3Eqk=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0 h1:ByYyxL9InA1OWqxJqqp2A5pYHUrCiAL6K3J+LKSsQkY=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/boombuler/barcode v1.0.0/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/bufbuild/protocompile v0.10.0 h1:+jW/wnLMLxaCEG8AX9lD0bQ5v9h1RUiMKOBOT5ll9dM=\ngithub.com/bufbuild/protocompile v0.10.0/go.mod h1:G9qQIQo0xZ6Uyj6CMNz0saGmx2so+KONo8/KrELABiY=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.3.0/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\ngithub.com/cncf/udpa/go v0.0.0-20220112060539-c52dc94e7fbe/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\ngithub.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20220314180256-7f1daf1720fc/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20230105202645-06c439db220b/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 h1:QVw89YDxXxEe+l8gU8ETbOasdwEV+avkR75ZzsVV9WI=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/cockroachdb/apd v1.1.0 h1:3LFP3629v+1aKXU5Q37mxmRxX/pIu1nijXydLShEq5I=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/cockroachdb/cockroach-go/v2 v2.3.8 h1:53yoUo4+EtrC1NrAEgnnad4AS3ntNvGup1PAXZ7UmpE=\ngithub.com/cockroachdb/cockroach-go/v2 v2.3.8/go.mod h1:9uH5jK4yQ3ZQUT9IXe4I2fHzMIF5+JC/oOdzTRgJYJk=\ngithub.com/cockroachdb/datadriven v1.0.2 h1:H9MtNqVoVhvd9nCBwOyDjUEdZCREqbIdCJD93PBm/jA=\ngithub.com/cockroachdb/datadriven v1.0.2/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/docker v27.3.1+incompatible h1:KttF0XoteNTicmUtBO0L2tP+J7FGRFTjaEF4k6WdhfI=\ngithub.com/docker/docker v27.3.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815/go.mod h1:WwZ+bS3ebgob9U8Nd0kOddGdZWjyMGR8Wziv+TBNwSE=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=\ngithub.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=\ngithub.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=\ngithub.com/envoyproxy/go-control-plane v0.10.3/go.mod h1:fJJn/j26vwOu972OllsvAgJJM//w9BV6Fxbg2LuVd34=\ngithub.com/envoyproxy/go-control-plane v0.11.1-0.20230524094728-9239064ad72f/go.mod h1:sfYdkwUW4BA3PbKjySwjJy+O4Pu0h62rlqCMHNk+K+Q=\ngithub.com/envoyproxy/go-control-plane v0.13.1 h1:vPfJZCkob6yTMEgS+0TwfTUfbHjfy/6vOJ8hUWX/uXE=\ngithub.com/envoyproxy/go-control-plane v0.13.1/go.mod h1:X45hY0mufo6Fd0KW3rqsGvQMw58jvjymeCzBU3mWyHw=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v0.6.7/go.mod h1:dyJXwwfPK2VSqiB9Klm1J6romD608Ba7Hij42vrOBCo=\ngithub.com/envoyproxy/protoc-gen-validate v0.9.1/go.mod h1:OKNgG7TCp5pF4d6XftA0++PMirau2/yoOwVac3AbF2w=\ngithub.com/envoyproxy/protoc-gen-validate v0.10.1/go.mod h1:DRjgyB0I43LtJapqN6NiRwroiAU2PaFuvk/vjgh61ss=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/fatih/color v1.15.0 h1:kOqh6YHBtK8aywxGerMG2Eq3H6Qgoqeo13Bk2Mv/nBs=\ngithub.com/fatih/color v1.15.0/go.mod h1:0h5ZqXfHYED7Bhv2ZJamyIOUej9KtShiJESRwBDUSsw=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/fogleman/gg v1.3.0/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/fsouza/fake-gcs-server v1.49.2 h1:fukDqzEQM50QkA0jAbl6cLqeDu3maQjwZBuys759TR4=\ngithub.com/fsouza/fake-gcs-server v1.49.2/go.mod h1:17SYzJEXRcaAA5ATwwvgBkSIqIy7r1icnGM0y/y4foY=\ngithub.com/fullstorydev/grpcurl v1.9.2 h1:ObqVQTZW7aFnhuqQoppUrvep2duMBanB0UYK2Mm8euo=\ngithub.com/fullstorydev/grpcurl v1.9.2/go.mod h1:jLfcF55HAz6TYIJY9xFFWgsl0D7o2HlxA5Z4lUG0Tdo=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-fonts/dejavu v0.1.0/go.mod h1:4Wt4I4OU2Nq9asgDCteaAaWZOV24E+0/Pwo0gppep4g=\ngithub.com/go-fonts/latin-modern v0.2.0/go.mod h1:rQVLdDMK+mK1xscDwsqM5J8U2jrRa3T0ecnM9pNujks=\ngithub.com/go-fonts/liberation v0.1.1/go.mod h1:K6qoJYypsmfVjWg8KOVDQhLc8UDgIK2HYqyqAO9z7GY=\ngithub.com/go-fonts/liberation v0.2.0/go.mod h1:K6qoJYypsmfVjWg8KOVDQhLc8UDgIK2HYqyqAO9z7GY=\ngithub.com/go-fonts/stix v0.1.0/go.mod h1:w/c1f0ldAUlJmLBvlbkvVXLAD+tAMqobIIQpmnUIzUY=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-latex/latex v0.0.0-20210118124228-b3d85cf34e07/go.mod h1:CO1AlKB2CSIqUrmQPqA0gdRIlnLEY0gK5JGjh37zN5U=\ngithub.com/go-latex/latex v0.0.0-20210823091927-c0d11ff05a81/go.mod h1:SX0U8uGpxhq9o2S/CELCSUxEWWAuoCUcVCQWv7G2OCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-pdf/fpdf v0.5.0/go.mod h1:HzcnA+A23uwogo0tp9yU+l3V+KXhiESpt1PMayhOh5M=\ngithub.com/go-pdf/fpdf v0.6.0/go.mod h1:HzcnA+A23uwogo0tp9yU+l3V+KXhiESpt1PMayhOh5M=\ngithub.com/go-redis/redis v6.15.9+incompatible h1:K0pv1D7EQUjfyoMql+r/jZqCLizCGKFlFgcHWWmHQjg=\ngithub.com/go-redis/redis v6.15.9+incompatible/go.mod h1:NAIEuMOZ/fxfXJIrKDQDz8wamY7mA7PouImQ2Jvg6kA=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/goccy/go-json v0.9.11/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.8.1 h1:+gYjHKf32LDeiEEFhQaotPbLuUXjY5ZqxKgXy7n59aw=\ngithub.com/gofrs/flock v0.8.1/go.mod h1:F1TvTiK9OcQqauNUHlbJvyl9Qa1QvF/gOUDKA14jxHU=\ngithub.com/gofrs/uuid v4.0.0+incompatible h1:1SD/1F5pU8p29ybwgQSwpQk+mwdRrXCYuPhW6m+TnJw=\ngithub.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gogo/protobuf v1.3.0/go.mod h1:SlYgWuQ5SjCEi6WLHjHCa1yvBfUnHcTbrrZtXPKa29o=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.0.0/go.mod h1:EWib/APOK0SL3dFbYqvxE3UYd8E6s1ouQ7iEp/0LWV4=\ngithub.com/golang/glog v1.1.0/go.mod h1:pfYeQZ3JWZoXTV5sFc986z3HTpwQs9At6P4ImfuP3NQ=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/flatbuffers v2.0.8+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-licenses/v2 v2.0.0-alpha.1 h1:2EMzW/1PWYvgOxBXsWl7b350vI0c/kf5Fh7z4AR1skM=\ngithub.com/google/go-licenses/v2 v2.0.0-alpha.1/go.mod h1:HlMUpsa+mbs8EqdlY0BDfCn0ZK7Y7NQoRCGYhNoox64=\ngithub.com/google/go-replayers/httpreplay v1.2.0 h1:VM1wEyyjaoU53BwrOnaf9VhAyQQEEioJvFYxYcLRKzk=\ngithub.com/google/go-replayers/httpreplay v1.2.0/go.mod h1:WahEFFZZ7a1P4VM1qEeHy+tME4bwyqPcwWbNlUI1Mcg=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/licenseclassifier/v2 v2.0.0 h1:1Y57HHILNf4m0ABuMVb6xk4vAJYEUO0gDxNpog0pyeA=\ngithub.com/google/licenseclassifier/v2 v2.0.0/go.mod h1:cOjbdH0kyC9R22sdQbYsFkto4NGCAc+ZSwbeThazEtM=\ngithub.com/google/martian v2.1.0+incompatible h1:/CP5g8u/VJHijgedC/Legn3BAbAaWPgecwXBIDzw5no=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/martian/v3 v3.3.2/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20240528025155-186aa0362fba h1:ql1qNgCyOB7iAEk8JTNM+zJrgIbnyCKX/wdlyPufP5g=\ngithub.com/google/pprof v0.0.0-20240528025155-186aa0362fba/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=\ngithub.com/google/renameio v0.1.0 h1:GOZbcHa3HfsPKPlmyPyN2KEohoMXOhdMbHrvbpl2QaA=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/renameio/v2 v2.0.0 h1:UifI23ZTGY8Tt29JbYFiuyIU3eX+RNFtUwefq9qAhxg=\ngithub.com/google/renameio/v2 v2.0.0/go.mod h1:BtmJXm5YlszgC+TD4HOEEUFgkJP3nLxehU6hfe7jRt4=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.0.0-20220520183353-fd19c99a87aa/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=\ngithub.com/googleapis/enterprise-certificate-proxy v0.1.0/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.0/go.mod h1:8C0jb7/mgJe/9KK8Lm7X9ctZC2t60YyIpYEI16jx0Qg=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.1/go.mod h1:AwSRAtLfXpU5Nm3pW+v7rGDHp09LsPtGY9MduiEsR9k=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.3/go.mod h1:AwSRAtLfXpU5Nm3pW+v7rGDHp09LsPtGY9MduiEsR9k=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/gax-go/v2 v2.1.0/go.mod h1:Q3nei7sK6ybPYH7twZdmQpAd1MKb7pfu6SK+H1/DsU0=\ngithub.com/googleapis/gax-go/v2 v2.1.1/go.mod h1:hddJymUZASv3XPyGkUpKj8pPO47Rmb0eJc8R6ouapiM=\ngithub.com/googleapis/gax-go/v2 v2.2.0/go.mod h1:as02EH8zWkzwUoLbBaFeQ+arQaj/OthfcblKl4IGNaM=\ngithub.com/googleapis/gax-go/v2 v2.3.0/go.mod h1:b8LNqSzNabLiUpXKkY7HAR5jr6bIT99EXz9pXxye9YM=\ngithub.com/googleapis/gax-go/v2 v2.4.0/go.mod h1:XOTVJ59hdnfJLIP/dh8n5CGryZR2LxK9wbMD5+iXC6c=\ngithub.com/googleapis/gax-go/v2 v2.5.1/go.mod h1:h6B0KMMFNtI2ddbGJn3T3ZbwkeT6yqEF02fYlzkUCyo=\ngithub.com/googleapis/gax-go/v2 v2.6.0/go.mod h1:1mjbznJAPHFpesgE5ucqfYEscaz5kMdcIDwU/6+DDoY=\ngithub.com/googleapis/gax-go/v2 v2.7.0/go.mod h1:TEop28CZZQ2y+c0VxMUmu1lV+fQx57QpBWsYpwqHJx8=\ngithub.com/googleapis/gax-go/v2 v2.7.1/go.mod h1:4orTrqY6hXxxaUL4LHIPl6lGo8vAE38/qKbhSAKP6QI=\ngithub.com/googleapis/gax-go/v2 v2.14.0 h1:f+jMrjBPl+DL9nI4IQzLUxMq7XrAqFYB7hBPqMNIe8o=\ngithub.com/googleapis/gax-go/v2 v2.14.0/go.mod h1:lhBCnjdLrWRaPvLWhmc8IS24m9mr07qSYnHncrgo+zk=\ngithub.com/googleapis/go-type-adapters v1.0.0/go.mod h1:zHW75FOG2aur7gAO2B+MLby+cLsWGBF62rFAi7WjWO4=\ngithub.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\ngithub.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.7.0/go.mod h1:hgWBS7lorOAVIJEQMi4ZsPv9hVvWI6+ch50m39Pf2Ks=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.11.3/go.mod h1:o//XUCC/F+yRGJoPO/VU0GSB0f8Nhgmxx0VIRUvaC0w=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1 h1:/c3QmbOGMGTOumP2iT/rCwB7b0QDGLKzqOmktBjT+Is=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1/go.mod h1:5SN9VR2LTsRFsrEC6FHgRbTWrTHu6tqPeKxEQv15giM=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/huandu/xstrings v1.2.0 h1:yPeWdRnmynF7p+lLYz0H2tthW9lqhMJrQV/U7yy4wX0=\ngithub.com/huandu/xstrings v1.2.0/go.mod h1:DvyZB1rfVYsBIigL8HwpZgxHwXozlTgGqn63UyNX5k4=\ngithub.com/iancoleman/strcase v0.2.0/go.mod h1:iwCmte+B7n89clKwxIoIXy/HfoL7AsD47ZCWhYzw7ho=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.16 h1:wwQJbIsHYGMUyLSPrEq1CT16AhnhNJQ51+4fdHUnCl4=\ngithub.com/imdario/mergo v0.3.16/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=\ngithub.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/chunkreader/v2 v2.0.1 h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=\ngithub.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=\ngithub.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=\ngithub.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=\ngithub.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=\ngithub.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=\ngithub.com/jackc/pgconn v1.9.1-0.20210724152538-d89c8390a530/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=\ngithub.com/jackc/pgconn v1.14.3 h1:bVoTr12EGANZz66nZPkMInAV/KHD2TxH9npjXXgiB3w=\ngithub.com/jackc/pgconn v1.14.3/go.mod h1:RZbme4uasqzybK2RK5c65VsHxoyaml09lx3tXOcO/VM=\ngithub.com/jackc/pgerrcode v0.0.0-20240316143900-6e2875d9b438 h1:Dj0L5fhJ9F82ZJyVOmBx6msDp/kfd1t9GRfny/mfJA0=\ngithub.com/jackc/pgerrcode v0.0.0-20240316143900-6e2875d9b438/go.mod h1:a/s9Lp5W7n/DD0VrVoyJ00FbP2ytTPDVOivvn2bMlds=\ngithub.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\ngithub.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=\ngithub.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=\ngithub.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65 h1:DadwsjnMwFjfWc9y5Wi/+Zz7xoE5ALHsRQlOctkOiHc=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65/go.mod h1:5R2h2EEX+qri8jOWMbJCtaPWkrrNc7OHwsp2TCqp7ak=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.3.3 h1:1HLSx5H+tXR9pW3in3zaztoEwQYRC9SQaYUHjTSUOag=\ngithub.com/jackc/pgproto3/v2 v2.3.3/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 h1:iCEnooe7UlwOQYpKFhBabPMi4aNAfoODPEFNiAnClxo=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=\ngithub.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=\ngithub.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=\ngithub.com/jackc/pgtype v1.8.1-0.20210724151600-32e20a603178/go.mod h1:C516IlIV9NKqfsMCXTdChteoXmwgUceqaLfjg2e3NlM=\ngithub.com/jackc/pgtype v1.14.0/go.mod h1:LUMuVrfsFfdKGLw+AFFVv6KtHOFMwRgDDzBt76IqCA4=\ngithub.com/jackc/pgtype v1.14.3 h1:h6W9cPuHsRWQFTWUZMAKMgG5jSwQI0Zurzdvlx3Plus=\ngithub.com/jackc/pgtype v1.14.3/go.mod h1:aKeozOde08iifGosdJpz9MBZonJOUJxqNpPBcMJTlVA=\ngithub.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=\ngithub.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=\ngithub.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=\ngithub.com/jackc/pgx/v4 v4.12.1-0.20210724153913-640aa07df17c/go.mod h1:1QD0+tgSXP7iUjYm9C1NxKhny7lq6ee99u/z+IHFcgs=\ngithub.com/jackc/pgx/v4 v4.18.2/go.mod h1:Ey4Oru5tH5sB6tV7hDmfWFahwF15Eb7DNXlRKx2CkVw=\ngithub.com/jackc/pgx/v4 v4.18.3 h1:dE2/TrEsGX3RBprb3qryqSV9Y60iZN1C6i8IrmW9/BA=\ngithub.com/jackc/pgx/v4 v4.18.3/go.mod h1:Ey4Oru5tH5sB6tV7hDmfWFahwF15Eb7DNXlRKx2CkVw=\ngithub.com/jackc/pgx/v5 v5.7.2 h1:mLoDLV6sonKlvjIEsV56SkWNCnuNv531l94GaIzO+XI=\ngithub.com/jackc/pgx/v5 v5.7.2/go.mod h1:ncY89UGWxg82EykZUwSpUKEfccBGGYq1xjrOpsbsfGQ=\ngithub.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.3.0 h1:eHK/5clGOatcjX3oWGBO/MpxpbHzSwud5EWTSCI+MX0=\ngithub.com/jackc/puddle v1.3.0/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle/v2 v2.2.2 h1:PR8nw+E/1w0GLuRFSmiioY6UooMp6KJv0/61nB7icHo=\ngithub.com/jackc/puddle/v2 v2.2.2/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jhump/protoreflect v1.16.0 h1:54fZg+49widqXYQ0b+usAFHbMkBGR4PpXrsHc8+TBDg=\ngithub.com/jhump/protoreflect v1.16.0/go.mod h1:oYPd7nPvcBw/5wlDfm/AVmU9zH9BgqGCI469pGxfj/8=\ngithub.com/jmespath/go-jmespath v0.4.1-0.20220621161143-b0104c826a24 h1:liMMTbpW34dhU4az1GN0pTPADwNmvoRSeoZ6PItiqnY=\ngithub.com/jmespath/go-jmespath v0.4.1-0.20220621161143-b0104c826a24/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/jonboulle/clockwork v0.4.0 h1:p4Cf1aMWXnXAUh8lVfewRBx1zaTSYKrKMF2g3ST4RZ4=\ngithub.com/jonboulle/clockwork v0.4.0/go.mod h1:xgRqUGwRcjKCO1vbZUEtSLrqKoPSsUpK7fnezOII0kc=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jung-kurt/gofpdf v1.0.0/go.mod h1:7Id9E/uU8ce6rXgefFLlgrJj/GYY22cpxn+r32jIOes=\ngithub.com/jung-kurt/gofpdf v1.0.3-0.20190309125859-24315acbbda5/go.mod h1:7Id9E/uU8ce6rXgefFLlgrJj/GYY22cpxn+r32jIOes=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/asmfmt v1.3.2/go.mod h1:AG8TuvYojzulgDAMCnYn50l/5QV3Bs/tp6j0HLHbNSE=\ngithub.com/klauspost/compress v1.15.9/go.mod h1:PhcZ0MbTNciWF3rruxRgKxI5NkcHHrHUDtV4Yw2GlzU=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/letsencrypt/pkcs11key/v4 v4.0.0 h1:qLc/OznH7xMr5ARJgkZCCWk+EomQkiNTOoOF5LAgagc=\ngithub.com/letsencrypt/pkcs11key/v4 v4.0.0/go.mod h1:EFUvBDay26dErnNb70Nd0/VW3tJiIbETBPTl9ATXQag=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lyft/protoc-gen-star v0.6.0/go.mod h1:TGAoBVkt8w7MPG72TrKIu85MIdXwDuzJYeZuUPFPNwA=\ngithub.com/lyft/protoc-gen-star v0.6.1/go.mod h1:TGAoBVkt8w7MPG72TrKIu85MIdXwDuzJYeZuUPFPNwA=\ngithub.com/lyft/protoc-gen-star/v2 v2.0.1/go.mod h1:RcCdONR2ScXaYnQC5tUzxzlpA3WVYF7/opLeUgcQs/o=\ngithub.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.13 h1:lTGmDsbAYt5DmK6OnoV7EuIF1wEIFAcxld6ypU4OSgU=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.14.14/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/miekg/pkcs11 v1.0.2/go.mod h1:XsNlhZGX73bx86s2hdc/FuaLm2CPZJemRLMA+WTFxgs=\ngithub.com/miekg/pkcs11 v1.1.1 h1:Ugu9pdy6vAYku5DEpVWVFPYnzV+bxB+iRdbuFSu7TvU=\ngithub.com/miekg/pkcs11 v1.1.1/go.mod h1:XsNlhZGX73bx86s2hdc/FuaLm2CPZJemRLMA+WTFxgs=\ngithub.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8/go.mod h1:mC1jAcsrzbxHt8iiaC+zU4b1ylILSosueou12R++wfY=\ngithub.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3/go.mod h1:RagcQ7I8IeTMnF8JTXieKnO4Z6JCsikNEzj0DwauVzE=\ngithub.com/mitchellh/copystructure v1.0.0 h1:Laisrj+bAB6b/yJwB5Bt3ITZhGJdqmxquMKeZ+mmkFQ=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mitchellh/reflectwalk v1.0.1 h1:FVzMWA5RllMAKIdUSC8mdWo3XtwoecrH79BY70sEEpE=\ngithub.com/mitchellh/reflectwalk v1.0.1/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-proto-validators v0.2.0 h1:F6LFfmgVnfULfaRsQWBbe7F7ocuHCr9+7m+GAeDzNbQ=\ngithub.com/mwitkow/go-proto-validators v0.2.0/go.mod h1:ZfA1hW+UH/2ZHOWvQ3HnQaU0DtnpXu850MZiy+YUgcc=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.29.0 h1:KIA/t2t5UBzoirT4H9tsML45GEbo3ouUnBHsCfD2tVg=\ngithub.com/onsi/gomega v1.29.0/go.mod h1:9sxs+SwGrKI0+PWe4Fxa9tFQQBG5xSsSbMXOI8PPpoQ=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/otiai10/copy v1.14.0 h1:dCI/t1iTdYGtkvCuBG2BgR6KZa83PTclw4U5n2wAllU=\ngithub.com/otiai10/copy v1.14.0/go.mod h1:ECfuL02W+/FkTWZWgQqXPWZgW9oeKCSQ5qVfSc4qc4w=\ngithub.com/otiai10/mint v1.5.1 h1:XaPLeE+9vGbuyEHem1JNk3bYc7KKqyI/na0/mLd/Kks=\ngithub.com/otiai10/mint v1.5.1/go.mod h1:MJm72SBthJjz8qhefc4z1PYEieWmy8Bku7CjcAqyUSM=\ngithub.com/phpdave11/gofpdf v1.4.2/go.mod h1:zpO6xFn9yxo3YLyMvW8HcKWVdbNqgIfOOp2dXMnm1mY=\ngithub.com/phpdave11/gofpdi v1.0.12/go.mod h1:vBmVV0Do6hSBHC8uKUQ71JGW+ZGQq74llk/7bXwjDoI=\ngithub.com/phpdave11/gofpdi v1.0.13/go.mod h1:vBmVV0Do6hSBHC8uKUQ71JGW+ZGQq74llk/7bXwjDoI=\ngithub.com/pierrec/lz4/v4 v4.1.15/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=\ngithub.com/pkg/xattr v0.4.9 h1:5883YPCtkSd8LFbs13nXplj9g9tlrwoJRjgpgMu1/fE=\ngithub.com/pkg/xattr v0.4.9/go.mod h1:di8WF84zAKk8jzR1UBTEWh9AUlIZZ7M/JNt8e9B6ktU=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.3.0/go.mod h1:LDGWKZIo7rky3hgvBe+caln+Dr3dPggB5dvjtD7w9+w=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/prometheus/prometheus v0.51.0 h1:aRdjTnmHLved29ILtdzZN2GNvOjWATtA/z+3fYuexOc=\ngithub.com/prometheus/prometheus v0.51.0/go.mod h1:yv4MwOn3yHMQ6MZGHPg/U7Fcyqf+rxqiZfSur6myVtc=\ngithub.com/pseudomuto/protoc-gen-doc v1.5.1 h1:Ah259kcrio7Ix1Rhb6u8FCaOkzf9qRBqXnvAufg061w=\ngithub.com/pseudomuto/protoc-gen-doc v1.5.1/go.mod h1:XpMKYg6zkcpgfpCfQ8GcWBDRtRxOmMR5w7pz4Xo+dYM=\ngithub.com/pseudomuto/protokit v0.2.0 h1:hlnBDcy3YEDXH7kc9gV+NLaN0cDzhDvD1s7Y6FZ8RpM=\ngithub.com/pseudomuto/protokit v0.2.0/go.mod h1:2PdH30hxVHsup8KpBTOXTBeMVhJZVio3Q8ViKSAXT0Q=\ngithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.4 h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=\ngithub.com/rivo/uniseg v0.4.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\ngithub.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=\ngithub.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ruudk/golang-pdf417 v0.0.0-20181029194003-1af4ab5afa58/go.mod h1:6lfFZQK844Gfx8o5WFuvpxWRwnSoipWe/p622j1v06w=\ngithub.com/ruudk/golang-pdf417 v0.0.0-20201230142125-a7e3863a1245/go.mod h1:pQAZKsJ8yyVxGRWYNEm9oFB8ieLgKFnamEyDmSA0BRk=\ngithub.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=\ngithub.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/soheilhy/cmux v0.1.5 h1:jjzc5WVemNEDTLwv9tlmemhC73tI08BNOIGwBOo10Js=\ngithub.com/soheilhy/cmux v0.1.5/go.mod h1:T7TcVDs9LWfQgPlPsdngu6I6QIoyIFZDDC6sNE1GqG0=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.3.3/go.mod h1:5KUK8ByomD5Ti5Artl0RtHeI5pTF7MIDuXL3yY520V4=\ngithub.com/spf13/afero v1.6.0/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/afero v1.9.2/go.mod h1:iUV7ddyEEZPO5gA3zD4fJt6iStLlL+Lg4m2cihcDf8Y=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20220101234140-673ab2c3ae75 h1:6fotK7otjonDflCTK0BCfls4SPy3NcCVb5dqqmbRknE=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20220101234140-673ab2c3ae75/go.mod h1:KO6IkyS8Y3j8OdNO85qEYBsRPuteD+YciPomcXdrMnk=\ngithub.com/transparency-dev/merkle v0.0.2 h1:Q9nBoQcZcgPamMkGn7ghV8XiTZ/kRxn1yCG81+twTK4=\ngithub.com/transparency-dev/merkle v0.0.2/go.mod h1:pqSy+OXefQ1EDUVmAJ8MUhHB9TXGuzVAT58PqBoHz1A=\ngithub.com/urfave/cli v1.22.14 h1:ebbhrRiGK2i4naQJr+1Xj92HXZCrK7MsyTS/ob3HnAk=\ngithub.com/urfave/cli v1.22.14/go.mod h1:X0eDS6pD6Exaclxm99NJ3FiCDRED7vIHpx2mDOHLvkA=\ngithub.com/xiang90/probing v0.0.0-20221125231312-a49e3df8f510 h1:S2dVYn90KE98chqDkyE9Z4N61UnQd+KOfgp5Iu53llk=\ngithub.com/xiang90/probing v0.0.0-20221125231312-a49e3df8f510/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.1/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/zeebo/assert v1.3.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/xxh3 v1.0.2/go.mod h1:5NWz9Sef7zIDm2JHfFlcQvNekmcEl9ekUZQQKCYaDcA=\ngithub.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=\ngo.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\ngo.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\ngo.etcd.io/etcd/api/v3 v3.5.17 h1:cQB8eb8bxwuxOilBpMJAEo8fAONyrdXTHUNcMd8yT1w=\ngo.etcd.io/etcd/api/v3 v3.5.17/go.mod h1:d1hvkRuXkts6PmaYk2Vrgqbv7H4ADfAKhyJqHNLJCB4=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17 h1:XxnDXAWq2pnxqx76ljWwiQ9jylbpC4rvkAeRVOUKKVw=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17/go.mod h1:4DqK1TKacp/86nJk4FLQqo6Mn2vvQFBmruW3pP14H/w=\ngo.etcd.io/etcd/client/v2 v2.305.17 h1:ajFukQfI//xY5VuSeuUw4TJ4WnNR2kAFfV/P0pDdPMs=\ngo.etcd.io/etcd/client/v2 v2.305.17/go.mod h1:EttKgEgvwikmXN+b7pkEWxDZr6sEaYsqCiS3k4fa/Vg=\ngo.etcd.io/etcd/client/v3 v3.5.17 h1:o48sINNeWz5+pjy/Z0+HKpj/xSnBkuVhVvXkjEXbqZY=\ngo.etcd.io/etcd/client/v3 v3.5.17/go.mod h1:j2d4eXTHWkT2ClBgnnEPm/Wuu7jsqku41v9DZ3OtjQo=\ngo.etcd.io/etcd/etcdctl/v3 v3.5.17 h1:7AY/i9YX+VEImkc6XVo0vWvJVvVwHl8LcyMLl5OwHSM=\ngo.etcd.io/etcd/etcdctl/v3 v3.5.17/go.mod h1:hi2+hb1cNP9l7yChat5tJYUUiJqCpEs7s7ng/fTesiE=\ngo.etcd.io/etcd/etcdutl/v3 v3.5.17 h1:0n52V1aN9IsLa+9W3RBoGYbZ+OZeFyFXF5CboO40mt4=\ngo.etcd.io/etcd/etcdutl/v3 v3.5.17/go.mod h1:fZqAusrGkVzKthDRgzXTKcvrlbnBlJRutpx2snJacms=\ngo.etcd.io/etcd/pkg/v3 v3.5.17 h1:1k2wZ+oDp41jrk3F9o15o8o7K3/qliBo0mXqxo1PKaE=\ngo.etcd.io/etcd/pkg/v3 v3.5.17/go.mod h1:FrztuSuaJG0c7RXCOzT08w+PCugh2kCQXmruNYCpCGA=\ngo.etcd.io/etcd/raft/v3 v3.5.17 h1:wHPW/b1oFBw/+HjDAQ9vfr17OIInejTIsmwMZpK1dNo=\ngo.etcd.io/etcd/raft/v3 v3.5.17/go.mod h1:uapEfOMPaJ45CqBYIraLO5+fqyIY2d57nFfxzFwy4D4=\ngo.etcd.io/etcd/server/v3 v3.5.17 h1:xykBwLZk9IdDsB8z8rMdCCPRvhrG+fwvARaGA0TRiyc=\ngo.etcd.io/etcd/server/v3 v3.5.17/go.mod h1:40sqgtGt6ZJNKm8nk8x6LexZakPu+NDl/DCgZTZ69Cc=\ngo.etcd.io/etcd/tests/v3 v3.5.17 h1:Va0z/8w9fI8iedLgtxPiRCiIIWHmgqS609ZYNXkygZs=\ngo.etcd.io/etcd/tests/v3 v3.5.17/go.mod h1:y3RTU0exZyj92+ZaG/wgUIMXXlnJlfNpni87t08IJeo=\ngo.etcd.io/etcd/v3 v3.5.17 h1:eqK0/iYyq2OUXVYfzqUvB5kHuoBDx+hxIfCcUuZ75gs=\ngo.etcd.io/etcd/v3 v3.5.17/go.mod h1:eL6ktWWJRCZ/C5Ak8SFCOfMUQcZjzasSKEtzkpSB6aM=\ngo.etcd.io/gofail v0.2.0 h1:p19drv16FKK345a09a1iubchlw/vmRuksmRzgBIGjcA=\ngo.etcd.io/gofail v0.2.0/go.mod h1:nL3ILMGfkXTekKI3clMBNazKnjUZjYLKmBHzsVAnC1o=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/detectors/gcp v1.31.0 h1:G1JQOreVrfhRkner+l4mrGxmfqYCAuy76asTDAo0xsA=\ngo.opentelemetry.io/contrib/detectors/gcp v1.31.0/go.mod h1:tzQL6E1l+iV44YFTkcAeNQqzXUiekSYP9jjJjXwEd00=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.24.0 h1:t6wl9SPayj+c7lEIFgm4ooDBZVb01IhLB4InpomhRw8=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.24.0/go.mod h1:iSDOcsnSA5INXzZtwaBPrKp/lWu/V14Dd+llD0oI2EA=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.24.0 h1:Mw5xcxMwlqoJd97vwPxA8isEaIoxsta9/Q51+TTJLGE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.24.0/go.mod h1:CQNu9bj7o7mC6U7+CA/schKEYakYXWr79ucDHTMGhCM=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.24.0 h1:Xw8U6u2f8DK2XAkGRFV7BBLENgnTGX9i4rQRxJf+/vs=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.24.0/go.mod h1:6KW1Fm6R/s6Z3PGXwSJN2K4eT6wQB3vXX6CVnYX9NmM=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngo.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=\ngo.opentelemetry.io/proto/otlp v0.15.0/go.mod h1:H7XAot3MsfNsj7EXtrA2q5xSNQ10UqI405h3+duxN4U=\ngo.opentelemetry.io/proto/otlp v0.19.0/go.mod h1:H7XAot3MsfNsj7EXtrA2q5xSNQ10UqI405h3+duxN4U=\ngo.opentelemetry.io/proto/otlp v1.1.0 h1:2Di21piLrCqJ3U3eXGCTPHE9R8Nh+0uglSnOyxikMeI=\ngo.opentelemetry.io/proto/otlp v1.1.0/go.mod h1:GpBHCBWiqvVLDqmHZsoMM3C5ySeKTC7ej/RNTae6MdY=\ngo.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.20.0/go.mod h1:Xwo95rrVNIoSMx9wa1JroENMToLWn3RNVrTBpLHgZPQ=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190125153040-c74c464bbbf2/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191002040644-a1355ae1e2c3/go.mod h1:NOZ3BPKG0ec/BKJQgnvsSFpcKLM5xXVWnvZS97DWHgE=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/exp v0.0.0-20220827204233-334a2380cb91/go.mod h1:cyybsKvd6eL0RnXn6p/Grxp8F5bW7iYuBgsNCOHpMYE=\ngolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8 h1:aAcj0Da7eBAtrTp03QXWvm88pSyOt+UgdZw2BFZ+lEw=\ngolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8/go.mod h1:CQ1k9gNrJ50XIzaKCRR2hssIjF07kZFEiieALBM/ARQ=\ngolang.org/x/image v0.0.0-20180708004352-c73c2afc3b81/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20190910094157-69e4b8554b2a/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20200119044424-58c23975cae1/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20200430140353-33d19683fad8/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20200618115811-c13761719519/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20201208152932-35266b937fa6/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20210216034530-4410531fe030/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20210607152325-775e3b0c77b9/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/image v0.0.0-20210628002857-a66eb6448b8d/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/image v0.0.0-20211028202545-6944b10bf410/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/image v0.0.0-20220302094943-723b81ca9867/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.5.0/go.mod h1:5OXOZSfqPIIbmVBIIKWRFfZjPR0E5r58TLhUjH0a2Ro=\ngolang.org/x/mod v0.5.1/go.mod h1:5OXOZSfqPIIbmVBIIKWRFfZjPR0E5r58TLhUjH0a2Ro=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.9.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201202161906-c7110b5ffcbb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20210813160813-60bc85c4be6d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211123203042-d83791d6bcd9/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220607020251-c690dde0001d/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220617184016-355a448f1bc9/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220624214902-1bab6f366d9e/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220909164309-bea034e7d591/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\ngolang.org/x/net v0.0.0-20221012135044-0b7e1fb9d458/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\ngolang.org/x/net v0.0.0-20221014081412-f15817d10f9b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.4.0/go.mod h1:MBQ8lrhLObU/6UmLb4fmbmk5OcyYmqtbGd/9yIeKjEE=\ngolang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210805134026-6f1e6394065a/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210819190943-2bc19b11175f/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.0.0-20220608161450-d0670ef3b1eb/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=\ngolang.org/x/oauth2 v0.0.0-20220622183110-fd043fe589d2/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=\ngolang.org/x/oauth2 v0.0.0-20220822191816-0ebed06d0094/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=\ngolang.org/x/oauth2 v0.0.0-20220909003341-f21342109be1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=\ngolang.org/x/oauth2 v0.0.0-20221006150949-b44042a4b9c1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=\ngolang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=\ngolang.org/x/oauth2 v0.4.0/go.mod h1:RznEsdpjGAINPTOF0UH/t+xJ75L18YO3Ho6Pyn+uRec=\ngolang.org/x/oauth2 v0.5.0/go.mod h1:9/XBHVqLaWO3/BRHs5jbpYCnOZVjj5V0ndyaAM7KB4I=\ngolang.org/x/oauth2 v0.6.0/go.mod h1:ycmewcwgD4Rpr3eZJLSB4Kyyljb3qDh40vJ8STE5HKw=\ngolang.org/x/oauth2 v0.7.0/go.mod h1:hPLQkd9LyjfXTiRohC/41GhcFqxisoUQ99sCUOHO9x4=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220601150217-0de741cfad7f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220819030929-7fc1605a5dde/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220929204114-8fcdb60fdcc0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210304124612-50617c2ba197/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423185535-09eb48e85fd7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603125802-9665404d3644/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210816183151-1e6c022a8912/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211210111614-af8b64212486/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220502124256-b6088ccd6cba/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220610221304-9f5ed59c137d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220615213510-4f61da869c0c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220624220833-87e55d714810/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220829200755-d48e67d00261/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.3.0/go.mod h1:q750SLmJuPmVoN1blW3UFBPREJfb1KmY3vwxfr+nFDA=\ngolang.org/x/term v0.4.0/go.mod h1:9P2UbLfCdcvo3p/nzKvsmas4TnlujnuoV9hGgYzW1lQ=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.5.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20220922220347-f3bd1da661af/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.1.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180525024113-a5b4c53f6e8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190927191325-030b2cf1153e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201124115921-2c860bdd6e78/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.9/go.mod h1:nABZi5QlRsZVlzPpHl034qft6wpY4eDcsTt5AaioBiU=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.3.0/go.mod h1:/rWhSS2+zyEVwoJf8YAX6L2f0ntZ7Kn/mGgAWcipA5k=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.7.0/go.mod h1:4pg6aUX35JBAogB10C9AtvVL+qowtN4pT3CGSQex14s=\ngolang.org/x/tools v0.29.0 h1:Xx0h3TtM9rzQpQuR4dKLrdglAmCEN5Oi+P74JdhdzXE=\ngolang.org/x/tools v0.29.0/go.mod h1:KMQVMRsVxU6nHCFXrBPhDB8XncLNLM0lIy/F14RP588=\ngolang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngolang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngonum.org/v1/gonum v0.0.0-20180816165407-929014505bf4/go.mod h1:Y+Yx5eoAFn32cQvJDxZx5Dpnq+c3wtXuadVZAcxbbBo=\ngonum.org/v1/gonum v0.8.2/go.mod h1:oe/vMfY3deqTw+1EZJhuvEW2iwGF1bW9wwu7XCu0+v0=\ngonum.org/v1/gonum v0.9.3/go.mod h1:TZumC3NeyVQskjXqmyWt4S3bINhy7B4eYwW69EbyX+0=\ngonum.org/v1/gonum v0.11.0/go.mod h1:fSG4YDCxxUZQJ7rKsQrj0gMOg00Il0Z96/qMA4bVQhA=\ngonum.org/v1/netlib v0.0.0-20190313105609-8cb42192e0e0/go.mod h1:wa6Ws7BG/ESfp6dHfk7C6KdzKA7wR7u/rKwOGE66zvw=\ngonum.org/v1/plot v0.0.0-20190515093506-e2840ee46a6b/go.mod h1:Wt8AAjI+ypCyYX3nZBvf6cAIx93T+c/OS2HFAYskSZc=\ngonum.org/v1/plot v0.9.0/go.mod h1:3Pcqqmp6RHvJI72kgb8fThyUnav364FOsdDo2aGW5lY=\ngonum.org/v1/plot v0.10.1/go.mod h1:VZW5OlhkL1mysU9vaqNHnsy86inf6Ot+jB3r+BczCEo=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.47.0/go.mod h1:Wbvgpq1HddcWVtzsVLyfLp8lDg6AA241LmgIL59tHXo=\ngoogle.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=\ngoogle.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=\ngoogle.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=\ngoogle.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=\ngoogle.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\ngoogle.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\ngoogle.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=\ngoogle.golang.org/api v0.61.0/go.mod h1:xQRti5UdCmoCEqFxcz93fTl338AVqDgyaDRuOZ3hg9I=\ngoogle.golang.org/api v0.63.0/go.mod h1:gs4ij2ffTRXwuzzgJl/56BdwJaA194ijkfn++9tDuPo=\ngoogle.golang.org/api v0.67.0/go.mod h1:ShHKP8E60yPsKNw/w8w+VYaj9H6buA5UqDp8dhbQZ6g=\ngoogle.golang.org/api v0.70.0/go.mod h1:Bs4ZM2HGifEvXwd50TtW70ovgJffJYw2oRCOFU/SkfA=\ngoogle.golang.org/api v0.71.0/go.mod h1:4PyU6e6JogV1f9eA4voyrTY2batOLdgZ5qZ5HOCc4j8=\ngoogle.golang.org/api v0.74.0/go.mod h1:ZpfMZOVRMywNyvJFeqL9HRWBgAuRfSjJFpe9QtRRyDs=\ngoogle.golang.org/api v0.75.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=\ngoogle.golang.org/api v0.77.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=\ngoogle.golang.org/api v0.78.0/go.mod h1:1Sg78yoMLOhlQTeF+ARBoytAcH1NNyyl390YMy6rKmw=\ngoogle.golang.org/api v0.80.0/go.mod h1:xY3nI94gbvBrE0J6NHXhxOmW97HG7Khjkku6AFB3Hyg=\ngoogle.golang.org/api v0.84.0/go.mod h1:NTsGnUFJMYROtiquksZHBWtHfeMC7iYthki7Eq3pa8o=\ngoogle.golang.org/api v0.85.0/go.mod h1:AqZf8Ep9uZ2pyTvgL+x0D3Zt0eoT9b5E8fmzfu6FO2g=\ngoogle.golang.org/api v0.90.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=\ngoogle.golang.org/api v0.93.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=\ngoogle.golang.org/api v0.95.0/go.mod h1:eADj+UBuxkh5zlrSntJghuNeg8HwQ1w5lTKkuqaETEI=\ngoogle.golang.org/api v0.96.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=\ngoogle.golang.org/api v0.97.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=\ngoogle.golang.org/api v0.98.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=\ngoogle.golang.org/api v0.99.0/go.mod h1:1YOf74vkVndF7pG6hIHuINsM7eWwpVTAfNMNiL91A08=\ngoogle.golang.org/api v0.100.0/go.mod h1:ZE3Z2+ZOr87Rx7dqFsdRQkRBk36kDtp/h+QpHbB7a70=\ngoogle.golang.org/api v0.102.0/go.mod h1:3VFl6/fzoA+qNuS1N1/VfXY4LjoXN/wzeIp7TweWwGo=\ngoogle.golang.org/api v0.103.0/go.mod h1:hGtW6nK1AC+d9si/UBhw8Xli+QMOf6xyNAyJw4qU9w0=\ngoogle.golang.org/api v0.106.0/go.mod h1:2Ts0XTHNVWxypznxWOYUeI4g3WdP9Pk2Qk58+a/O9MY=\ngoogle.golang.org/api v0.107.0/go.mod h1:2Ts0XTHNVWxypznxWOYUeI4g3WdP9Pk2Qk58+a/O9MY=\ngoogle.golang.org/api v0.108.0/go.mod h1:2Ts0XTHNVWxypznxWOYUeI4g3WdP9Pk2Qk58+a/O9MY=\ngoogle.golang.org/api v0.110.0/go.mod h1:7FC4Vvx1Mooxh8C5HWjzZHcavuS2f6pmJpZx60ca7iI=\ngoogle.golang.org/api v0.111.0/go.mod h1:qtFHvU9mhgTJegR31csQ+rwxyUTHOKFqCKWp1J0fdw0=\ngoogle.golang.org/api v0.114.0/go.mod h1:ifYI2ZsFK6/uGddGfAD5BMxlnkBqCmqHSDUVi45N5Yg=\ngoogle.golang.org/api v0.214.0 h1:h2Gkq07OYi6kusGOaT/9rnNljuXmqPnaig7WGPmKbwA=\ngoogle.golang.org/api v0.214.0/go.mod h1:bYPpLG8AyeMWwDU6NXoB00xC0DFkikVvd5MfwoxjLqE=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210329143202-679c6ae281ee/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=\ngoogle.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\ngoogle.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\ngoogle.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\ngoogle.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\ngoogle.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=\ngoogle.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210909211513-a8c4777a87af/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211206160659-862468c7d6e0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211221195035-429b39de9b1c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220126215142-9970aeb2e350/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220207164111-0872dc986b00/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220218161850-94dd64e39d7c/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220222213610-43724f9ea8cf/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220304144024-325a89244dc8/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220310185008-1973136f34c6/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220324131243-acbaeb5b85eb/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=\ngoogle.golang.org/genproto v0.0.0-20220329172620-7be39ac1afc7/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220407144326-9054f6ed7bac/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220413183235-5e96e2839df9/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220414192740-2d67ff6cf2b4/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220421151946-72621c1f0bd3/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220429170224-98d788798c3e/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220502173005-c8bf987b8c21/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/genproto v0.0.0-20220505152158-f39f71e6c8f3/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/genproto v0.0.0-20220518221133-4f43b3371335/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/genproto v0.0.0-20220523171625-347a074981d8/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/genproto v0.0.0-20220608133413-ed9918b62aac/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=\ngoogle.golang.org/genproto v0.0.0-20220616135557-88e70c0c3a90/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=\ngoogle.golang.org/genproto v0.0.0-20220617124728-180714bec0ad/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=\ngoogle.golang.org/genproto v0.0.0-20220624142145-8cd45d7dbd1f/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=\ngoogle.golang.org/genproto v0.0.0-20220628213854-d9e0b6570c03/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=\ngoogle.golang.org/genproto v0.0.0-20220722212130-b98a9ff5e252/go.mod h1:GkXuJDJ6aQ7lnJcRF+SJVgFdQhypqgl3LB1C9vabdRE=\ngoogle.golang.org/genproto v0.0.0-20220801145646-83ce21fca29f/go.mod h1:iHe1svFLAZg9VWz891+QbRMwUv9O/1Ww+/mngYeThbc=\ngoogle.golang.org/genproto v0.0.0-20220815135757-37a418bb8959/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=\ngoogle.golang.org/genproto v0.0.0-20220817144833-d7fd3f11b9b1/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=\ngoogle.golang.org/genproto v0.0.0-20220822174746-9e6da59bd2fc/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=\ngoogle.golang.org/genproto v0.0.0-20220829144015-23454907ede3/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=\ngoogle.golang.org/genproto v0.0.0-20220829175752-36a9c930ecbf/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=\ngoogle.golang.org/genproto v0.0.0-20220913154956-18f8339a66a5/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=\ngoogle.golang.org/genproto v0.0.0-20220914142337-ca0e39ece12f/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=\ngoogle.golang.org/genproto v0.0.0-20220915135415-7fd63a7952de/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=\ngoogle.golang.org/genproto v0.0.0-20220916172020-2692e8806bfa/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=\ngoogle.golang.org/genproto v0.0.0-20220919141832-68c03719ef51/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=\ngoogle.golang.org/genproto v0.0.0-20220920201722-2b89144ce006/go.mod h1:ht8XFiar2npT/g4vkk7O0WYS1sHOHbdujxbEp7CJWbw=\ngoogle.golang.org/genproto v0.0.0-20220926165614-551eb538f295/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=\ngoogle.golang.org/genproto v0.0.0-20220926220553-6981cbe3cfce/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=\ngoogle.golang.org/genproto v0.0.0-20221010155953-15ba04fc1c0e/go.mod h1:3526vdqwhZAwq4wsRUaVG555sVgsNmIjRtO7t/JH29U=\ngoogle.golang.org/genproto v0.0.0-20221014173430-6e2ab493f96b/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=\ngoogle.golang.org/genproto v0.0.0-20221014213838-99cd37c6964a/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=\ngoogle.golang.org/genproto v0.0.0-20221024153911-1573dae28c9c/go.mod h1:9qHF0xnpdSfF6knlcsnpzUu5y+rpwgbvsyGAZPBMg4s=\ngoogle.golang.org/genproto v0.0.0-20221024183307-1bc688fe9f3e/go.mod h1:9qHF0xnpdSfF6knlcsnpzUu5y+rpwgbvsyGAZPBMg4s=\ngoogle.golang.org/genproto v0.0.0-20221027153422-115e99e71e1c/go.mod h1:CGI5F/G+E5bKwmfYo09AXuVN4dD894kIKUFmVbP2/Fo=\ngoogle.golang.org/genproto v0.0.0-20221109142239-94d6d90a7d66/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221114212237-e4508ebdbee1/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221117204609-8f9c96812029/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221118155620-16455021b5e6/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221201164419-0e50fba7f41c/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221201204527-e3fa12d562f3/go.mod h1:rZS5c/ZVYMaOGBfO68GWtjOw/eLaZM1X6iVtgjZ+EWg=\ngoogle.golang.org/genproto v0.0.0-20221202195650-67e5cbc046fd/go.mod h1:cTsE614GARnxrLsqKREzmNYJACSWWpAWdNMwnD7c2BE=\ngoogle.golang.org/genproto v0.0.0-20221227171554-f9683d7f8bef/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230110181048-76db0878b65f/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230112194545-e10362b5ecf9/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230113154510-dbe35b8444a5/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230123190316-2c411cf9d197/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230124163310-31e0e69b6fc2/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230125152338-dcaf20b6aeaa/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230127162408-596548ed4efa/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230209215440-0dfe4f8abfcc/go.mod h1:RGgjbofJ8xD9Sq1VVhDM1Vok1vRONV+rg+CjzG4SZKM=\ngoogle.golang.org/genproto v0.0.0-20230216225411-c8e22ba71e44/go.mod h1:8B0gmkoRebU8ukX6HP+4wrVQUY1+6PkQ44BSyIlflHA=\ngoogle.golang.org/genproto v0.0.0-20230222225845-10f96fb3dbec/go.mod h1:3Dl5ZL0q0isWJt+FVcfpQyirqemEuLAK/iFvg1UP1Hw=\ngoogle.golang.org/genproto v0.0.0-20230223222841-637eb2293923/go.mod h1:3Dl5ZL0q0isWJt+FVcfpQyirqemEuLAK/iFvg1UP1Hw=\ngoogle.golang.org/genproto v0.0.0-20230303212802-e74f57abe488/go.mod h1:TvhZT5f700eVlTNwND1xoEZQeWTB2RY/65kplwl/bFA=\ngoogle.golang.org/genproto v0.0.0-20230306155012-7f2fa6fef1f4/go.mod h1:NWraEVixdDnqcqQ30jipen1STv2r/n24Wb7twVTGR4s=\ngoogle.golang.org/genproto v0.0.0-20230320184635-7606e756e683/go.mod h1:NWraEVixdDnqcqQ30jipen1STv2r/n24Wb7twVTGR4s=\ngoogle.golang.org/genproto v0.0.0-20230323212658-478b75c54725/go.mod h1:UUQDJDOlWu4KYeJZffbWgBkS1YFobzKbLVfK69pe0Ak=\ngoogle.golang.org/genproto v0.0.0-20230330154414-c0448cd141ea/go.mod h1:UUQDJDOlWu4KYeJZffbWgBkS1YFobzKbLVfK69pe0Ak=\ngoogle.golang.org/genproto v0.0.0-20230331144136-dcfb400f0633/go.mod h1:UUQDJDOlWu4KYeJZffbWgBkS1YFobzKbLVfK69pe0Ak=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1/go.mod h1:nKE/iIaLqn2bQwXBg8f1g2Ylh6r5MN5CmZvuzZCgsCU=\ngoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697 h1:ToEetK57OidYuqD4Q5w+vfEnPvPpuTwedCNVohYJfNk=\ngoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697/go.mod h1:JJrvXBWRZaFMxBufik1a4RpFw4HhgVtBBWQeQgUj2cc=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241113202542-65e8d215514f h1:M65LEviCfuZTfrfzwwEoxVtgvfkFkBUbFnRbxCXuXhU=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241113202542-65e8d215514f/go.mod h1:Yo94eF2nj7igQt+TiJ49KxjIH8ndLYPZMIRSiRcEbg0=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576 h1:8ZmaLZE4XWrtU3MyClkYqqtl6Oegr3235h7jxsDyqCY=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576/go.mod h1:5uTbfoYQed2U9p3KIj2/Zzm02PYhndfdmML0qC3q3FU=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.37.1/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.39.0/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\ngoogle.golang.org/grpc v1.39.1/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\ngoogle.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\ngoogle.golang.org/grpc v1.40.1/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\ngoogle.golang.org/grpc v1.42.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=\ngoogle.golang.org/grpc v1.44.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=\ngoogle.golang.org/grpc v1.45.0/go.mod h1:lN7owxKUQEqMfSyQikvvk5tf/6zMPsrK+ONuO11+0rQ=\ngoogle.golang.org/grpc v1.46.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.46.2/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.47.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.48.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.49.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=\ngoogle.golang.org/grpc v1.50.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=\ngoogle.golang.org/grpc v1.50.1/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=\ngoogle.golang.org/grpc v1.51.0/go.mod h1:wgNDFcnuBGmxLKI/qn4T+m5BtEBYXJPvibbUPsAIPww=\ngoogle.golang.org/grpc v1.52.3/go.mod h1:pu6fVzoFb+NBYNAvQL08ic+lvB2IojljRYuun5vorUY=\ngoogle.golang.org/grpc v1.53.0/go.mod h1:OnIrk0ipVdj4N5d9IUoFUx72/VlD7+jUsHwZgwSMQpw=\ngoogle.golang.org/grpc v1.54.0/go.mod h1:PUSEXI6iWghWaB6lXM4knEgpJNu2qUcKfDtNci3EC2g=\ngoogle.golang.org/grpc v1.56.3/go.mod h1:I9bI3vqKfayGqPUAwGdOSu7kt6oIJLixfffKrpXqQ9s=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1 h1:F29+wU6Ee6qgu9TddPgooOdaqsxTMunOoj8KA5yuS5A=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1/go.mod h1:5KF+wpkbTSbGcR9zteSqZV6fqFOWBl4Yde8En8MryZA=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.29.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/cheggaaa/pb.v1 v1.0.28 h1:n1tBJnnK2r7g9OW2btFH91V92STTUevLXYFb8gy9EMk=\ngopkg.in/cheggaaa/pb.v1 v1.0.28/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.0.3 h1:4AuOwCGf4lLR9u3YOe2awrHygurzhO/HeQ6laiA6Sx0=\ngotest.tools/v3 v3.0.3/go.mod h1:Z7Lb0S5l+klDB31fvDQX8ss/FlKDxtlFlw3Oa8Ymbl8=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.1.3/go.mod h1:NgwopIslSNH47DimFoV78dnkksY2EFtX0ajyb3K/las=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nlukechampine.com/uint128 v1.1.1/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nlukechampine.com/uint128 v1.2.0/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nmodernc.org/cc/v3 v3.36.0/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/cc/v3 v3.36.2/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/cc/v3 v3.36.3/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/ccgo/v3 v3.0.0-20220428102840-41399a37e894/go.mod h1:eI31LL8EwEBKPpNpA4bU1/i+sKOwOrQy8D87zWUcRZc=\nmodernc.org/ccgo/v3 v3.0.0-20220430103911-bc99d88307be/go.mod h1:bwdAnOoaIt8Ax9YdWGjxWsdkPcZyRPHqrOvJxaKAKGw=\nmodernc.org/ccgo/v3 v3.16.4/go.mod h1:tGtX0gE9Jn7hdZFeU88slbTh1UtCYKusWOoCJuvkWsQ=\nmodernc.org/ccgo/v3 v3.16.6/go.mod h1:tGtX0gE9Jn7hdZFeU88slbTh1UtCYKusWOoCJuvkWsQ=\nmodernc.org/ccgo/v3 v3.16.8/go.mod h1:zNjwkizS+fIFDrDjIAgBSCLkWbJuHF+ar3QRn+Z9aws=\nmodernc.org/ccgo/v3 v3.16.9/go.mod h1:zNMzC9A9xeNUepy6KuZBbugn3c0Mc9TeiJO4lgvkJDo=\nmodernc.org/ccorpus v1.11.6/go.mod h1:2gEUTrWqdpH2pXsmTM1ZkjeSrUWDpjMu2T6m29L/ErQ=\nmodernc.org/httpfs v1.0.6/go.mod h1:7dosgurJGp0sPaRanU53W4xZYKh14wfzX420oZADeHM=\nmodernc.org/libc v0.0.0-20220428101251-2d5f3daf273b/go.mod h1:p7Mg4+koNjc8jkqwcoFBJx7tXkpj00G77X7A72jXPXA=\nmodernc.org/libc v1.16.0/go.mod h1:N4LD6DBE9cf+Dzf9buBlzVJndKr/iJHG97vGLHYnb5A=\nmodernc.org/libc v1.16.1/go.mod h1:JjJE0eu4yeK7tab2n4S1w8tlWd9MxXLRzheaRnAKymU=\nmodernc.org/libc v1.16.17/go.mod h1:hYIV5VZczAmGZAnG15Vdngn5HSF5cSkbvfz2B7GRuVU=\nmodernc.org/libc v1.16.19/go.mod h1:p7Mg4+koNjc8jkqwcoFBJx7tXkpj00G77X7A72jXPXA=\nmodernc.org/libc v1.17.0/go.mod h1:XsgLldpP4aWlPlsjqKRdHPqCxCjISdHfM/yeWC5GyW0=\nmodernc.org/libc v1.17.1/go.mod h1:FZ23b+8LjxZs7XtFMbSzL/EhPxNbfZbErxEHc7cbD9s=\nmodernc.org/mathutil v1.2.2/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.4.1/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/memory v1.1.1/go.mod h1:/0wo5ibyrQiaoUoH7f9D8dnglAmILJ5/cxZlRECf+Nw=\nmodernc.org/memory v1.2.0/go.mod h1:/0wo5ibyrQiaoUoH7f9D8dnglAmILJ5/cxZlRECf+Nw=\nmodernc.org/memory v1.2.1/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=\nmodernc.org/opt v0.1.1/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/sqlite v1.18.1/go.mod h1:6ho+Gow7oX5V+OiOQ6Tr4xeqbx13UZ6t+Fw9IRUG4d4=\nmodernc.org/strutil v1.1.1/go.mod h1:DE+MQQ/hjKBZS2zNInV5hhcipt5rLPWkmpbGeW5mmdw=\nmodernc.org/strutil v1.1.3/go.mod h1:MEHNA7PdEnEwLvspRMtWTNnp2nnyvMfkimT1NKNAGbw=\nmodernc.org/tcl v1.13.1/go.mod h1:XOLfOwzhkljL4itZkK6T72ckMgvj0BDsnKNdZVUOecw=\nmodernc.org/token v1.0.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\nmodernc.org/z v1.5.1/go.mod h1:eWFB510QWW5Th9YGZT81s+LwvaAs3Q2yr4sP0rmLkv8=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "merkle",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "quota",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "testonly",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "trees",
          "type": "tree",
          "content": null
        },
        {
          "name": "trillian.pb.go",
          "type": "blob",
          "size": 29.3349609375,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.1\n// \tprotoc        v3.20.1\n// source: trillian.proto\n\npackage trillian\n\nimport (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\tanypb \"google.golang.org/protobuf/types/known/anypb\"\n\tdurationpb \"google.golang.org/protobuf/types/known/durationpb\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// LogRootFormat specifies the fields that are covered by the\n// SignedLogRoot signature, as well as their ordering and formats.\ntype LogRootFormat int32\n\nconst (\n\tLogRootFormat_LOG_ROOT_FORMAT_UNKNOWN LogRootFormat = 0\n\tLogRootFormat_LOG_ROOT_FORMAT_V1      LogRootFormat = 1\n)\n\n// Enum value maps for LogRootFormat.\nvar (\n\tLogRootFormat_name = map[int32]string{\n\t\t0: \"LOG_ROOT_FORMAT_UNKNOWN\",\n\t\t1: \"LOG_ROOT_FORMAT_V1\",\n\t}\n\tLogRootFormat_value = map[string]int32{\n\t\t\"LOG_ROOT_FORMAT_UNKNOWN\": 0,\n\t\t\"LOG_ROOT_FORMAT_V1\":      1,\n\t}\n)\n\nfunc (x LogRootFormat) Enum() *LogRootFormat {\n\tp := new(LogRootFormat)\n\t*p = x\n\treturn p\n}\n\nfunc (x LogRootFormat) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (LogRootFormat) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_trillian_proto_enumTypes[0].Descriptor()\n}\n\nfunc (LogRootFormat) Type() protoreflect.EnumType {\n\treturn &file_trillian_proto_enumTypes[0]\n}\n\nfunc (x LogRootFormat) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use LogRootFormat.Descriptor instead.\nfunc (LogRootFormat) EnumDescriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{0}\n}\n\n// Defines the way empty / node / leaf hashes are constructed incorporating\n// preimage protection, which can be application specific.\ntype HashStrategy int32\n\nconst (\n\t// Hash strategy cannot be determined. Included to enable detection of\n\t// mismatched proto versions being used. Represents an invalid value.\n\tHashStrategy_UNKNOWN_HASH_STRATEGY HashStrategy = 0\n\t// Certificate Transparency strategy: leaf hash prefix = 0x00, node prefix =\n\t// 0x01, empty hash is digest([]byte{}), as defined in the specification.\n\tHashStrategy_RFC6962_SHA256 HashStrategy = 1\n\t// Sparse Merkle Tree strategy:  leaf hash prefix = 0x00, node prefix = 0x01,\n\t// empty branch is recursively computed from empty leaf nodes.\n\t// NOT secure in a multi tree environment. For testing only.\n\tHashStrategy_TEST_MAP_HASHER HashStrategy = 2\n\t// Append-only log strategy where leaf nodes are defined as the ObjectHash.\n\t// All other properties are equal to RFC6962_SHA256.\n\tHashStrategy_OBJECT_RFC6962_SHA256 HashStrategy = 3\n\t// The CONIKS sparse tree hasher with SHA512_256 as the hash algorithm.\n\tHashStrategy_CONIKS_SHA512_256 HashStrategy = 4\n\t// The CONIKS sparse tree hasher with SHA256 as the hash algorithm.\n\tHashStrategy_CONIKS_SHA256 HashStrategy = 5\n)\n\n// Enum value maps for HashStrategy.\nvar (\n\tHashStrategy_name = map[int32]string{\n\t\t0: \"UNKNOWN_HASH_STRATEGY\",\n\t\t1: \"RFC6962_SHA256\",\n\t\t2: \"TEST_MAP_HASHER\",\n\t\t3: \"OBJECT_RFC6962_SHA256\",\n\t\t4: \"CONIKS_SHA512_256\",\n\t\t5: \"CONIKS_SHA256\",\n\t}\n\tHashStrategy_value = map[string]int32{\n\t\t\"UNKNOWN_HASH_STRATEGY\": 0,\n\t\t\"RFC6962_SHA256\":        1,\n\t\t\"TEST_MAP_HASHER\":       2,\n\t\t\"OBJECT_RFC6962_SHA256\": 3,\n\t\t\"CONIKS_SHA512_256\":     4,\n\t\t\"CONIKS_SHA256\":         5,\n\t}\n)\n\nfunc (x HashStrategy) Enum() *HashStrategy {\n\tp := new(HashStrategy)\n\t*p = x\n\treturn p\n}\n\nfunc (x HashStrategy) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (HashStrategy) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_trillian_proto_enumTypes[1].Descriptor()\n}\n\nfunc (HashStrategy) Type() protoreflect.EnumType {\n\treturn &file_trillian_proto_enumTypes[1]\n}\n\nfunc (x HashStrategy) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use HashStrategy.Descriptor instead.\nfunc (HashStrategy) EnumDescriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{1}\n}\n\n// State of the tree.\ntype TreeState int32\n\nconst (\n\t// Tree state cannot be determined. Included to enable detection of\n\t// mismatched proto versions being used. Represents an invalid value.\n\tTreeState_UNKNOWN_TREE_STATE TreeState = 0\n\t// Active trees are able to respond to both read and write requests.\n\tTreeState_ACTIVE TreeState = 1\n\t// Frozen trees are only able to respond to read requests, writing to a frozen\n\t// tree is forbidden. Trees should not be frozen when there are entries\n\t// in the queue that have not yet been integrated. See the DRAINING\n\t// state for this case.\n\tTreeState_FROZEN TreeState = 2\n\t// Deprecated: now tracked in Tree.deleted.\n\t//\n\t// Deprecated: Marked as deprecated in trillian.proto.\n\tTreeState_DEPRECATED_SOFT_DELETED TreeState = 3\n\t// Deprecated: now tracked in Tree.deleted.\n\t//\n\t// Deprecated: Marked as deprecated in trillian.proto.\n\tTreeState_DEPRECATED_HARD_DELETED TreeState = 4\n\t// A tree that is draining will continue to integrate queued entries.\n\t// No new entries should be accepted.\n\tTreeState_DRAINING TreeState = 5\n)\n\n// Enum value maps for TreeState.\nvar (\n\tTreeState_name = map[int32]string{\n\t\t0: \"UNKNOWN_TREE_STATE\",\n\t\t1: \"ACTIVE\",\n\t\t2: \"FROZEN\",\n\t\t3: \"DEPRECATED_SOFT_DELETED\",\n\t\t4: \"DEPRECATED_HARD_DELETED\",\n\t\t5: \"DRAINING\",\n\t}\n\tTreeState_value = map[string]int32{\n\t\t\"UNKNOWN_TREE_STATE\":      0,\n\t\t\"ACTIVE\":                  1,\n\t\t\"FROZEN\":                  2,\n\t\t\"DEPRECATED_SOFT_DELETED\": 3,\n\t\t\"DEPRECATED_HARD_DELETED\": 4,\n\t\t\"DRAINING\":                5,\n\t}\n)\n\nfunc (x TreeState) Enum() *TreeState {\n\tp := new(TreeState)\n\t*p = x\n\treturn p\n}\n\nfunc (x TreeState) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (TreeState) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_trillian_proto_enumTypes[2].Descriptor()\n}\n\nfunc (TreeState) Type() protoreflect.EnumType {\n\treturn &file_trillian_proto_enumTypes[2]\n}\n\nfunc (x TreeState) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use TreeState.Descriptor instead.\nfunc (TreeState) EnumDescriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{2}\n}\n\n// Type of the tree.\ntype TreeType int32\n\nconst (\n\t// Tree type cannot be determined. Included to enable detection of mismatched\n\t// proto versions being used. Represents an invalid value.\n\tTreeType_UNKNOWN_TREE_TYPE TreeType = 0\n\t// Tree represents a verifiable log.\n\tTreeType_LOG TreeType = 1\n\t// Tree represents a verifiable pre-ordered log, i.e., a log whose entries are\n\t// placed according to sequence numbers assigned outside of Trillian.\n\tTreeType_PREORDERED_LOG TreeType = 3\n)\n\n// Enum value maps for TreeType.\nvar (\n\tTreeType_name = map[int32]string{\n\t\t0: \"UNKNOWN_TREE_TYPE\",\n\t\t1: \"LOG\",\n\t\t3: \"PREORDERED_LOG\",\n\t}\n\tTreeType_value = map[string]int32{\n\t\t\"UNKNOWN_TREE_TYPE\": 0,\n\t\t\"LOG\":               1,\n\t\t\"PREORDERED_LOG\":    3,\n\t}\n)\n\nfunc (x TreeType) Enum() *TreeType {\n\tp := new(TreeType)\n\t*p = x\n\treturn p\n}\n\nfunc (x TreeType) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n\nfunc (TreeType) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_trillian_proto_enumTypes[3].Descriptor()\n}\n\nfunc (TreeType) Type() protoreflect.EnumType {\n\treturn &file_trillian_proto_enumTypes[3]\n}\n\nfunc (x TreeType) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use TreeType.Descriptor instead.\nfunc (TreeType) EnumDescriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{3}\n}\n\n// Represents a tree.\n// Readonly attributes are assigned at tree creation, after which they may not\n// be modified.\n//\n// Note: Many APIs within the rest of the code require these objects to\n// be provided. For safety they should be obtained via Admin API calls and\n// not created dynamically.\ntype Tree struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// ID of the tree.\n\t// Readonly.\n\tTreeId int64 `protobuf:\"varint,1,opt,name=tree_id,json=treeId,proto3\" json:\"tree_id,omitempty\"`\n\t// State of the tree.\n\t// Trees are ACTIVE after creation. At any point the tree may transition\n\t// between ACTIVE, DRAINING and FROZEN states.\n\tTreeState TreeState `protobuf:\"varint,2,opt,name=tree_state,json=treeState,proto3,enum=trillian.TreeState\" json:\"tree_state,omitempty\"`\n\t// Type of the tree.\n\t// Readonly after Tree creation. Exception: Can be switched from\n\t// PREORDERED_LOG to LOG if the Tree is and remains in the FROZEN state.\n\tTreeType TreeType `protobuf:\"varint,3,opt,name=tree_type,json=treeType,proto3,enum=trillian.TreeType\" json:\"tree_type,omitempty\"`\n\t// Display name of the tree.\n\t// Optional.\n\tDisplayName string `protobuf:\"bytes,8,opt,name=display_name,json=displayName,proto3\" json:\"display_name,omitempty\"`\n\t// Description of the tree,\n\t// Optional.\n\tDescription string `protobuf:\"bytes,9,opt,name=description,proto3\" json:\"description,omitempty\"`\n\t// Storage-specific settings.\n\t// Varies according to the storage implementation backing Trillian.\n\tStorageSettings *anypb.Any `protobuf:\"bytes,13,opt,name=storage_settings,json=storageSettings,proto3\" json:\"storage_settings,omitempty\"`\n\t// Interval after which a new signed root is produced even if there have been\n\t// no submission.  If zero, this behavior is disabled.\n\tMaxRootDuration *durationpb.Duration `protobuf:\"bytes,15,opt,name=max_root_duration,json=maxRootDuration,proto3\" json:\"max_root_duration,omitempty\"`\n\t// Time of tree creation.\n\t// Readonly.\n\tCreateTime *timestamppb.Timestamp `protobuf:\"bytes,16,opt,name=create_time,json=createTime,proto3\" json:\"create_time,omitempty\"`\n\t// Time of last tree update.\n\t// Readonly (automatically assigned on updates).\n\tUpdateTime *timestamppb.Timestamp `protobuf:\"bytes,17,opt,name=update_time,json=updateTime,proto3\" json:\"update_time,omitempty\"`\n\t// If true, the tree has been deleted.\n\t// Deleted trees may be undeleted during a certain time window, after which\n\t// they're permanently deleted (and unrecoverable).\n\t// Readonly.\n\tDeleted bool `protobuf:\"varint,19,opt,name=deleted,proto3\" json:\"deleted,omitempty\"`\n\t// Time of tree deletion, if any.\n\t// Readonly.\n\tDeleteTime    *timestamppb.Timestamp `protobuf:\"bytes,20,opt,name=delete_time,json=deleteTime,proto3\" json:\"delete_time,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Tree) Reset() {\n\t*x = Tree{}\n\tmi := &file_trillian_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Tree) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Tree) ProtoMessage() {}\n\nfunc (x *Tree) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Tree.ProtoReflect.Descriptor instead.\nfunc (*Tree) Descriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{0}\n}\n\nfunc (x *Tree) GetTreeId() int64 {\n\tif x != nil {\n\t\treturn x.TreeId\n\t}\n\treturn 0\n}\n\nfunc (x *Tree) GetTreeState() TreeState {\n\tif x != nil {\n\t\treturn x.TreeState\n\t}\n\treturn TreeState_UNKNOWN_TREE_STATE\n}\n\nfunc (x *Tree) GetTreeType() TreeType {\n\tif x != nil {\n\t\treturn x.TreeType\n\t}\n\treturn TreeType_UNKNOWN_TREE_TYPE\n}\n\nfunc (x *Tree) GetDisplayName() string {\n\tif x != nil {\n\t\treturn x.DisplayName\n\t}\n\treturn \"\"\n}\n\nfunc (x *Tree) GetDescription() string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn \"\"\n}\n\nfunc (x *Tree) GetStorageSettings() *anypb.Any {\n\tif x != nil {\n\t\treturn x.StorageSettings\n\t}\n\treturn nil\n}\n\nfunc (x *Tree) GetMaxRootDuration() *durationpb.Duration {\n\tif x != nil {\n\t\treturn x.MaxRootDuration\n\t}\n\treturn nil\n}\n\nfunc (x *Tree) GetCreateTime() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreateTime\n\t}\n\treturn nil\n}\n\nfunc (x *Tree) GetUpdateTime() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdateTime\n\t}\n\treturn nil\n}\n\nfunc (x *Tree) GetDeleted() bool {\n\tif x != nil {\n\t\treturn x.Deleted\n\t}\n\treturn false\n}\n\nfunc (x *Tree) GetDeleteTime() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.DeleteTime\n\t}\n\treturn nil\n}\n\n// SignedLogRoot represents a commitment by a Log to a particular tree.\n//\n// Note that the signature itself is no-longer provided by Trillian since\n// https://github.com/google/trillian/pull/2452 .\n// This functionality was intended to support a niche-use case but added\n// significant complexity and was prone to causing confusion and\n// misunderstanding for personality authors.\ntype SignedLogRoot struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// log_root holds the TLS-serialization of the following structure (described\n\t// in RFC5246 notation):\n\t//\n\t// enum { v1(1), (65535)} Version;\n\t//\n\t//\tstruct {\n\t//\t  uint64 tree_size;\n\t//\t  opaque root_hash<0..128>;\n\t//\t  uint64 timestamp_nanos;\n\t//\t  uint64 revision;\n\t//\t  opaque metadata<0..65535>;\n\t//\t} LogRootV1;\n\t//\n\t//\tstruct {\n\t//\t  Version version;\n\t//\t  select(version) {\n\t//\t    case v1: LogRootV1;\n\t//\t  }\n\t//\t} LogRoot;\n\t//\n\t// A serialized v1 log root will therefore be laid out as:\n\t//\n\t// +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+\n\t// | ver=1 |          tree_size            |len|    root_hash      |\n\t// +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+\n\t//\n\t// +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\t// |        timestamp_nanos        |      revision                 |\n\t// +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\t//\n\t// +---+---+---+---+---+-....---+\n\t// |  len  |    metadata        |\n\t// +---+---+---+---+---+-....---+\n\t//\n\t// (with all integers encoded big-endian).\n\tLogRoot       []byte `protobuf:\"bytes,8,opt,name=log_root,json=logRoot,proto3\" json:\"log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *SignedLogRoot) Reset() {\n\t*x = SignedLogRoot{}\n\tmi := &file_trillian_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *SignedLogRoot) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*SignedLogRoot) ProtoMessage() {}\n\nfunc (x *SignedLogRoot) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignedLogRoot.ProtoReflect.Descriptor instead.\nfunc (*SignedLogRoot) Descriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{1}\n}\n\nfunc (x *SignedLogRoot) GetLogRoot() []byte {\n\tif x != nil {\n\t\treturn x.LogRoot\n\t}\n\treturn nil\n}\n\n// Proof holds a consistency or inclusion proof for a Merkle tree, as returned\n// by the API.\ntype Proof struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// leaf_index indicates the requested leaf index when this message is used for\n\t// a leaf inclusion proof.  This field is set to zero when this message is\n\t// used for a consistency proof.\n\tLeafIndex     int64    `protobuf:\"varint,1,opt,name=leaf_index,json=leafIndex,proto3\" json:\"leaf_index,omitempty\"`\n\tHashes        [][]byte `protobuf:\"bytes,3,rep,name=hashes,proto3\" json:\"hashes,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *Proof) Reset() {\n\t*x = Proof{}\n\tmi := &file_trillian_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *Proof) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*Proof) ProtoMessage() {}\n\nfunc (x *Proof) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use Proof.ProtoReflect.Descriptor instead.\nfunc (*Proof) Descriptor() ([]byte, []int) {\n\treturn file_trillian_proto_rawDescGZIP(), []int{2}\n}\n\nfunc (x *Proof) GetLeafIndex() int64 {\n\tif x != nil {\n\t\treturn x.LeafIndex\n\t}\n\treturn 0\n}\n\nfunc (x *Proof) GetHashes() [][]byte {\n\tif x != nil {\n\t\treturn x.Hashes\n\t}\n\treturn nil\n}\n\nvar File_trillian_proto protoreflect.FileDescriptor\n\nvar file_trillian_proto_rawDesc = []byte{\n\t0x0a, 0x0e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,\n\t0x12, 0x08, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,\n\t0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,\n\t0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,\n\t0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,\n\t0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,\n\t0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,\n\t0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x05, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12,\n\t0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,\n\t0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x72, 0x65, 0x65,\n\t0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x74,\n\t0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74,\n\t0x65, 0x52, 0x09, 0x74, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x09,\n\t0x74, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,\n\t0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x54,\n\t0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,\n\t0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,\n\t0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,\n\t0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,\n\t0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,\n\t0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,\n\t0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,\n\t0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,\n\t0x6e, 0x79, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,\n\t0x6e, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f,\n\t0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,\n\t0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,\n\t0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x52, 0x6f,\n\t0x6f, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,\n\t0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,\n\t0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,\n\t0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,\n\t0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,\n\t0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,\n\t0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,\n\t0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,\n\t0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,\n\t0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3b,\n\t0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20,\n\t0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,\n\t0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,\n\t0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x04, 0x10,\n\t0x08, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0d, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f, 0x4a, 0x04, 0x08,\n\t0x12, 0x10, 0x13, 0x52, 0x1e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,\n\t0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x70,\n\t0x6f, 0x63, 0x68, 0x52, 0x10, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x70,\n\t0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x6f,\n\t0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x61,\n\t0x74, 0x65, 0x67, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,\n\t0x79, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x52, 0x13, 0x73,\n\t0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,\n\t0x68, 0x6d, 0x52, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x69,\n\t0x70, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x52, 0x1e, 0x75, 0x70, 0x64, 0x61,\n\t0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x73,\n\t0x69, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x53,\n\t0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08,\n\t0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,\n\t0x6c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x08, 0x4a, 0x04, 0x08,\n\t0x09, 0x10, 0x0a, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x6c,\n\t0x6f, 0x67, 0x5f, 0x69, 0x64, 0x52, 0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f,\n\t0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f,\n\t0x68, 0x61, 0x73, 0x68, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,\n\t0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73,\n\t0x52, 0x0d, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,\n\t0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x50, 0x0a, 0x05, 0x50, 0x72,\n\t0x6f, 0x6f, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,\n\t0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64,\n\t0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,\n\t0x28, 0x0c, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,\n\t0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2a, 0x44, 0x0a, 0x0d,\n\t0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a,\n\t0x17, 0x4c, 0x4f, 0x47, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,\n\t0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4f,\n\t0x47, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x56, 0x31,\n\t0x10, 0x01, 0x2a, 0x97, 0x01, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x68, 0x53, 0x74, 0x72, 0x61, 0x74,\n\t0x65, 0x67, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x48,\n\t0x41, 0x53, 0x48, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x10, 0x00, 0x12, 0x12,\n\t0x0a, 0x0e, 0x52, 0x46, 0x43, 0x36, 0x39, 0x36, 0x32, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,\n\t0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x48,\n\t0x41, 0x53, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x42, 0x4a, 0x45, 0x43,\n\t0x54, 0x5f, 0x52, 0x46, 0x43, 0x36, 0x39, 0x36, 0x32, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,\n\t0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x49, 0x4b, 0x53, 0x5f, 0x53, 0x48, 0x41,\n\t0x35, 0x31, 0x32, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e,\n\t0x49, 0x4b, 0x53, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x05, 0x2a, 0x8b, 0x01, 0x0a,\n\t0x09, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e,\n\t0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,\n\t0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0a,\n\t0x0a, 0x06, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x17, 0x44, 0x45,\n\t0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x4f, 0x46, 0x54, 0x5f, 0x44, 0x45,\n\t0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x1f, 0x0a, 0x17, 0x44,\n\t0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x44,\n\t0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0c, 0x0a, 0x08,\n\t0x44, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x2a, 0x49, 0x0a, 0x08, 0x54, 0x72,\n\t0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,\n\t0x4e, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a,\n\t0x03, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x45, 0x4f, 0x52, 0x44,\n\t0x45, 0x52, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x03, 0x22, 0x04, 0x08, 0x02, 0x10, 0x02,\n\t0x2a, 0x03, 0x4d, 0x41, 0x50, 0x42, 0x48, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,\n\t0x67, 0x6c, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f,\n\t0x74, 0x6f, 0x42, 0x0d, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x74,\n\t0x6f, 0x50, 0x01, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,\n\t0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x62,\n\t0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,\n}\n\nvar (\n\tfile_trillian_proto_rawDescOnce sync.Once\n\tfile_trillian_proto_rawDescData = file_trillian_proto_rawDesc\n)\n\nfunc file_trillian_proto_rawDescGZIP() []byte {\n\tfile_trillian_proto_rawDescOnce.Do(func() {\n\t\tfile_trillian_proto_rawDescData = protoimpl.X.CompressGZIP(file_trillian_proto_rawDescData)\n\t})\n\treturn file_trillian_proto_rawDescData\n}\n\nvar file_trillian_proto_enumTypes = make([]protoimpl.EnumInfo, 4)\nvar file_trillian_proto_msgTypes = make([]protoimpl.MessageInfo, 3)\nvar file_trillian_proto_goTypes = []any{\n\t(LogRootFormat)(0),            // 0: trillian.LogRootFormat\n\t(HashStrategy)(0),             // 1: trillian.HashStrategy\n\t(TreeState)(0),                // 2: trillian.TreeState\n\t(TreeType)(0),                 // 3: trillian.TreeType\n\t(*Tree)(nil),                  // 4: trillian.Tree\n\t(*SignedLogRoot)(nil),         // 5: trillian.SignedLogRoot\n\t(*Proof)(nil),                 // 6: trillian.Proof\n\t(*anypb.Any)(nil),             // 7: google.protobuf.Any\n\t(*durationpb.Duration)(nil),   // 8: google.protobuf.Duration\n\t(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp\n}\nvar file_trillian_proto_depIdxs = []int32{\n\t2, // 0: trillian.Tree.tree_state:type_name -> trillian.TreeState\n\t3, // 1: trillian.Tree.tree_type:type_name -> trillian.TreeType\n\t7, // 2: trillian.Tree.storage_settings:type_name -> google.protobuf.Any\n\t8, // 3: trillian.Tree.max_root_duration:type_name -> google.protobuf.Duration\n\t9, // 4: trillian.Tree.create_time:type_name -> google.protobuf.Timestamp\n\t9, // 5: trillian.Tree.update_time:type_name -> google.protobuf.Timestamp\n\t9, // 6: trillian.Tree.delete_time:type_name -> google.protobuf.Timestamp\n\t7, // [7:7] is the sub-list for method output_type\n\t7, // [7:7] is the sub-list for method input_type\n\t7, // [7:7] is the sub-list for extension type_name\n\t7, // [7:7] is the sub-list for extension extendee\n\t0, // [0:7] is the sub-list for field type_name\n}\n\nfunc init() { file_trillian_proto_init() }\nfunc file_trillian_proto_init() {\n\tif File_trillian_proto != nil {\n\t\treturn\n\t}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_trillian_proto_rawDesc,\n\t\t\tNumEnums:      4,\n\t\t\tNumMessages:   3,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   0,\n\t\t},\n\t\tGoTypes:           file_trillian_proto_goTypes,\n\t\tDependencyIndexes: file_trillian_proto_depIdxs,\n\t\tEnumInfos:         file_trillian_proto_enumTypes,\n\t\tMessageInfos:      file_trillian_proto_msgTypes,\n\t}.Build()\n\tFile_trillian_proto = out.File\n\tfile_trillian_proto_rawDesc = nil\n\tfile_trillian_proto_goTypes = nil\n\tfile_trillian_proto_depIdxs = nil\n}\n"
        },
        {
          "name": "trillian.proto",
          "type": "blob",
          "size": 7.76953125,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\noption java_multiple_files = true;\noption java_package = \"com.google.trillian.proto\";\noption java_outer_classname = \"TrillianProto\";\noption go_package = \"github.com/google/trillian\";\n\npackage trillian;\n\nimport \"google/protobuf/any.proto\";\nimport \"google/protobuf/duration.proto\";\nimport \"google/protobuf/timestamp.proto\";\n\n// LogRootFormat specifies the fields that are covered by the\n// SignedLogRoot signature, as well as their ordering and formats.\nenum LogRootFormat {\n  LOG_ROOT_FORMAT_UNKNOWN = 0;\n  LOG_ROOT_FORMAT_V1 = 1;\n}\n\n// What goes in here?\n// Things which are exposed through the public trillian APIs.\n\n// Defines the way empty / node / leaf hashes are constructed incorporating\n// preimage protection, which can be application specific.\nenum HashStrategy {\n  // Hash strategy cannot be determined. Included to enable detection of\n  // mismatched proto versions being used. Represents an invalid value.\n  UNKNOWN_HASH_STRATEGY = 0;\n\n  // Certificate Transparency strategy: leaf hash prefix = 0x00, node prefix =\n  // 0x01, empty hash is digest([]byte{}), as defined in the specification.\n  RFC6962_SHA256 = 1;\n\n  // Sparse Merkle Tree strategy:  leaf hash prefix = 0x00, node prefix = 0x01,\n  // empty branch is recursively computed from empty leaf nodes.\n  // NOT secure in a multi tree environment. For testing only.\n  TEST_MAP_HASHER = 2;\n\n  // Append-only log strategy where leaf nodes are defined as the ObjectHash.\n  // All other properties are equal to RFC6962_SHA256.\n  OBJECT_RFC6962_SHA256 = 3;\n\n  // The CONIKS sparse tree hasher with SHA512_256 as the hash algorithm.\n  CONIKS_SHA512_256 = 4;\n\n  // The CONIKS sparse tree hasher with SHA256 as the hash algorithm.\n  CONIKS_SHA256 = 5;\n}\n\n// State of the tree.\nenum TreeState {\n  // Tree state cannot be determined. Included to enable detection of\n  // mismatched proto versions being used. Represents an invalid value.\n  UNKNOWN_TREE_STATE = 0;\n\n  // Active trees are able to respond to both read and write requests.\n  ACTIVE = 1;\n\n  // Frozen trees are only able to respond to read requests, writing to a frozen\n  // tree is forbidden. Trees should not be frozen when there are entries\n  // in the queue that have not yet been integrated. See the DRAINING\n  // state for this case.\n  FROZEN = 2;\n\n  // Deprecated: now tracked in Tree.deleted.\n  DEPRECATED_SOFT_DELETED = 3 [deprecated = true];\n\n  // Deprecated: now tracked in Tree.deleted.\n  DEPRECATED_HARD_DELETED = 4 [deprecated = true];\n\n  // A tree that is draining will continue to integrate queued entries.\n  // No new entries should be accepted.\n  DRAINING = 5;\n}\n\n// Type of the tree.\nenum TreeType {\n  // Tree type cannot be determined. Included to enable detection of mismatched\n  // proto versions being used. Represents an invalid value.\n  UNKNOWN_TREE_TYPE = 0;\n\n  // Tree represents a verifiable log.\n  LOG = 1;\n\n  // Tree represents a verifiable pre-ordered log, i.e., a log whose entries are\n  // placed according to sequence numbers assigned outside of Trillian.\n  PREORDERED_LOG = 3;\n\n  reserved 2;\n  reserved \"MAP\";\n}\n\n// Represents a tree.\n// Readonly attributes are assigned at tree creation, after which they may not\n// be modified.\n//\n// Note: Many APIs within the rest of the code require these objects to\n// be provided. For safety they should be obtained via Admin API calls and\n// not created dynamically.\nmessage Tree {\n  // ID of the tree.\n  // Readonly.\n  int64 tree_id = 1;\n\n  // State of the tree.\n  // Trees are ACTIVE after creation. At any point the tree may transition\n  // between ACTIVE, DRAINING and FROZEN states.\n  TreeState tree_state = 2;\n\n  // Type of the tree.\n  // Readonly after Tree creation. Exception: Can be switched from\n  // PREORDERED_LOG to LOG if the Tree is and remains in the FROZEN state.\n  TreeType tree_type = 3;\n\n  // Display name of the tree.\n  // Optional.\n  string display_name = 8;\n\n  // Description of the tree,\n  // Optional.\n  string description = 9;\n\n  // Storage-specific settings.\n  // Varies according to the storage implementation backing Trillian.\n  google.protobuf.Any storage_settings = 13;\n\n  // Interval after which a new signed root is produced even if there have been\n  // no submission.  If zero, this behavior is disabled.\n  google.protobuf.Duration max_root_duration = 15;\n\n  // Time of tree creation.\n  // Readonly.\n  google.protobuf.Timestamp create_time = 16;\n\n  // Time of last tree update.\n  // Readonly (automatically assigned on updates).\n  google.protobuf.Timestamp update_time = 17;\n\n  // If true, the tree has been deleted.\n  // Deleted trees may be undeleted during a certain time window, after which\n  // they're permanently deleted (and unrecoverable).\n  // Readonly.\n  bool deleted = 19;\n\n  // Time of tree deletion, if any.\n  // Readonly.\n  google.protobuf.Timestamp delete_time = 20;\n\n  reserved 4 to 7, 10 to 12, 14, 18;\n  reserved \"create_time_millis_since_epoch\";\n  reserved \"duplicate_policy\";\n  reserved \"hash_algorithm\";\n  reserved \"hash_strategy\";\n  reserved \"private_key\";\n  reserved \"public_key\";\n  reserved \"signature_algorithm\";\n  reserved \"signature_cipher_suite\";\n  reserved \"update_time_millis_since_epoch\";\n}\n\n// SignedLogRoot represents a commitment by a Log to a particular tree.\n// \n// Note that the signature itself is no-longer provided by Trillian since\n// https://github.com/google/trillian/pull/2452 .\n// This functionality was intended to support a niche-use case but added\n// significant complexity and was prone to causing confusion and\n// misunderstanding for personality authors. \nmessage SignedLogRoot {\n  // log_root holds the TLS-serialization of the following structure (described\n  // in RFC5246 notation):\n  //\n  // enum { v1(1), (65535)} Version;\n  // struct {\n  //   uint64 tree_size;\n  //   opaque root_hash<0..128>;\n  //   uint64 timestamp_nanos;\n  //   uint64 revision;\n  //   opaque metadata<0..65535>;\n  // } LogRootV1;\n  // struct {\n  //   Version version;\n  //   select(version) {\n  //     case v1: LogRootV1;\n  //   }\n  // } LogRoot;\n  //\n  // A serialized v1 log root will therefore be laid out as:\n  //\n  // +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+\n  // | ver=1 |          tree_size            |len|    root_hash      |\n  // +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+\n  //\n  // +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n  // |        timestamp_nanos        |      revision                 |\n  // +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n  //\n  // +---+---+---+---+---+-....---+\n  // |  len  |    metadata        |\n  // +---+---+---+---+---+-....---+\n  //\n  // (with all integers encoded big-endian).\n  bytes log_root = 8;\n\n  reserved 1 to 7, 9;\n  reserved \"key_hint\";\n  reserved \"log_id\";\n  reserved \"log_root_signature\";\n  reserved \"root_hash\";\n  reserved \"signature\";\n  reserved \"timestamp_nanos\";\n  reserved \"tree_revision\";\n  reserved \"tree_size\";\n}\n\n// Proof holds a consistency or inclusion proof for a Merkle tree, as returned\n// by the API.\nmessage Proof {\n  // leaf_index indicates the requested leaf index when this message is used for\n  // a leaf inclusion proof.  This field is set to zero when this message is\n  // used for a consistency proof.\n  int64 leaf_index = 1;\n  repeated bytes hashes = 3;\n\n  reserved 2;\n  reserved \"proof_node\";\n}\n"
        },
        {
          "name": "trillian_admin_api.pb.go",
          "type": "blob",
          "size": 19.7138671875,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.1\n// \tprotoc        v3.20.1\n// source: trillian_admin_api.proto\n\npackage trillian\n\nimport (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\tfieldmaskpb \"google.golang.org/protobuf/types/known/fieldmaskpb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// ListTrees request.\n// No filters or pagination options are provided.\ntype ListTreesRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// If true, deleted trees are included in the response.\n\tShowDeleted   bool `protobuf:\"varint,1,opt,name=show_deleted,json=showDeleted,proto3\" json:\"show_deleted,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *ListTreesRequest) Reset() {\n\t*x = ListTreesRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *ListTreesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*ListTreesRequest) ProtoMessage() {}\n\nfunc (x *ListTreesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use ListTreesRequest.ProtoReflect.Descriptor instead.\nfunc (*ListTreesRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{0}\n}\n\nfunc (x *ListTreesRequest) GetShowDeleted() bool {\n\tif x != nil {\n\t\treturn x.ShowDeleted\n\t}\n\treturn false\n}\n\n// ListTrees response.\n// No pagination is provided, all trees the requester has access to are\n// returned.\ntype ListTreesResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Trees matching the list request filters.\n\tTree          []*Tree `protobuf:\"bytes,1,rep,name=tree,proto3\" json:\"tree,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *ListTreesResponse) Reset() {\n\t*x = ListTreesResponse{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *ListTreesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*ListTreesResponse) ProtoMessage() {}\n\nfunc (x *ListTreesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use ListTreesResponse.ProtoReflect.Descriptor instead.\nfunc (*ListTreesResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{1}\n}\n\nfunc (x *ListTreesResponse) GetTree() []*Tree {\n\tif x != nil {\n\t\treturn x.Tree\n\t}\n\treturn nil\n}\n\n// GetTree request.\ntype GetTreeRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// ID of the tree to retrieve.\n\tTreeId        int64 `protobuf:\"varint,1,opt,name=tree_id,json=treeId,proto3\" json:\"tree_id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetTreeRequest) Reset() {\n\t*x = GetTreeRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetTreeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetTreeRequest) ProtoMessage() {}\n\nfunc (x *GetTreeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetTreeRequest.ProtoReflect.Descriptor instead.\nfunc (*GetTreeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{2}\n}\n\nfunc (x *GetTreeRequest) GetTreeId() int64 {\n\tif x != nil {\n\t\treturn x.TreeId\n\t}\n\treturn 0\n}\n\n// CreateTree request.\ntype CreateTreeRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Tree to be created. See Tree and CreateTree for more details.\n\tTree          *Tree `protobuf:\"bytes,1,opt,name=tree,proto3\" json:\"tree,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *CreateTreeRequest) Reset() {\n\t*x = CreateTreeRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *CreateTreeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*CreateTreeRequest) ProtoMessage() {}\n\nfunc (x *CreateTreeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use CreateTreeRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateTreeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{3}\n}\n\nfunc (x *CreateTreeRequest) GetTree() *Tree {\n\tif x != nil {\n\t\treturn x.Tree\n\t}\n\treturn nil\n}\n\n// UpdateTree request.\ntype UpdateTreeRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Tree to be updated.\n\tTree *Tree `protobuf:\"bytes,1,opt,name=tree,proto3\" json:\"tree,omitempty\"`\n\t// Fields modified by the update request.\n\t// For example: \"tree_state\", \"display_name\", \"description\".\n\tUpdateMask    *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *UpdateTreeRequest) Reset() {\n\t*x = UpdateTreeRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *UpdateTreeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*UpdateTreeRequest) ProtoMessage() {}\n\nfunc (x *UpdateTreeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use UpdateTreeRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateTreeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{4}\n}\n\nfunc (x *UpdateTreeRequest) GetTree() *Tree {\n\tif x != nil {\n\t\treturn x.Tree\n\t}\n\treturn nil\n}\n\nfunc (x *UpdateTreeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {\n\tif x != nil {\n\t\treturn x.UpdateMask\n\t}\n\treturn nil\n}\n\n// DeleteTree request.\ntype DeleteTreeRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// ID of the tree to delete.\n\tTreeId        int64 `protobuf:\"varint,1,opt,name=tree_id,json=treeId,proto3\" json:\"tree_id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *DeleteTreeRequest) Reset() {\n\t*x = DeleteTreeRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *DeleteTreeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*DeleteTreeRequest) ProtoMessage() {}\n\nfunc (x *DeleteTreeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use DeleteTreeRequest.ProtoReflect.Descriptor instead.\nfunc (*DeleteTreeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{5}\n}\n\nfunc (x *DeleteTreeRequest) GetTreeId() int64 {\n\tif x != nil {\n\t\treturn x.TreeId\n\t}\n\treturn 0\n}\n\n// UndeleteTree request.\ntype UndeleteTreeRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// ID of the tree to undelete.\n\tTreeId        int64 `protobuf:\"varint,1,opt,name=tree_id,json=treeId,proto3\" json:\"tree_id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *UndeleteTreeRequest) Reset() {\n\t*x = UndeleteTreeRequest{}\n\tmi := &file_trillian_admin_api_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *UndeleteTreeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*UndeleteTreeRequest) ProtoMessage() {}\n\nfunc (x *UndeleteTreeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_admin_api_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use UndeleteTreeRequest.ProtoReflect.Descriptor instead.\nfunc (*UndeleteTreeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_admin_api_proto_rawDescGZIP(), []int{6}\n}\n\nfunc (x *UndeleteTreeRequest) GetTreeId() int64 {\n\tif x != nil {\n\t\treturn x.TreeId\n\t}\n\treturn 0\n}\n\nvar File_trillian_admin_api_proto protoreflect.FileDescriptor\n\nvar file_trillian_admin_api_proto_rawDesc = []byte{\n\t0x0a, 0x18, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,\n\t0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x69, 0x6c,\n\t0x6c, 0x69, 0x61, 0x6e, 0x1a, 0x0e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x70,\n\t0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,\n\t0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,\n\t0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,\n\t0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68,\n\t0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,\n\t0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x37, 0x0a,\n\t0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,\n\t0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,\n\t0x32, 0x0e, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65,\n\t0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65,\n\t0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65,\n\t0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49,\n\t0x64, 0x22, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52,\n\t0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01,\n\t0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e,\n\t0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,\n\t0x52, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x22, 0x74, 0x0a, 0x11, 0x55, 0x70,\n\t0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,\n\t0x22, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x74,\n\t0x72, 0x65, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,\n\t0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,\n\t0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,\n\t0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,\n\t0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65,\n\t0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64,\n\t0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x22, 0x2e,\n\t0x0a, 0x13, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65,\n\t0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64,\n\t0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x32, 0x86,\n\t0x03, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x6e,\n\t0x12, 0x46, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x73, 0x12, 0x1a, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65,\n\t0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x6c,\n\t0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x73, 0x52, 0x65,\n\t0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54,\n\t0x72, 0x65, 0x65, 0x12, 0x18, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47,\n\t0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12,\n\t0x3b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,\n\t0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x69,\n\t0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a,\n\t0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x72, 0x69,\n\t0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65,\n\t0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x44, 0x65, 0x6c,\n\t0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,\n\t0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e,\n\t0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65,\n\t0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61,\n\t0x6e, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65,\n\t0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e,\n\t0x2e, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x42, 0x50, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x67,\n\t0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x70,\n\t0x72, 0x6f, 0x74, 0x6f, 0x42, 0x15, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x41, 0x64,\n\t0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1a, 0x67,\n\t0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,\n\t0x2f, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,\n\t0x33,\n}\n\nvar (\n\tfile_trillian_admin_api_proto_rawDescOnce sync.Once\n\tfile_trillian_admin_api_proto_rawDescData = file_trillian_admin_api_proto_rawDesc\n)\n\nfunc file_trillian_admin_api_proto_rawDescGZIP() []byte {\n\tfile_trillian_admin_api_proto_rawDescOnce.Do(func() {\n\t\tfile_trillian_admin_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_trillian_admin_api_proto_rawDescData)\n\t})\n\treturn file_trillian_admin_api_proto_rawDescData\n}\n\nvar file_trillian_admin_api_proto_msgTypes = make([]protoimpl.MessageInfo, 7)\nvar file_trillian_admin_api_proto_goTypes = []any{\n\t(*ListTreesRequest)(nil),      // 0: trillian.ListTreesRequest\n\t(*ListTreesResponse)(nil),     // 1: trillian.ListTreesResponse\n\t(*GetTreeRequest)(nil),        // 2: trillian.GetTreeRequest\n\t(*CreateTreeRequest)(nil),     // 3: trillian.CreateTreeRequest\n\t(*UpdateTreeRequest)(nil),     // 4: trillian.UpdateTreeRequest\n\t(*DeleteTreeRequest)(nil),     // 5: trillian.DeleteTreeRequest\n\t(*UndeleteTreeRequest)(nil),   // 6: trillian.UndeleteTreeRequest\n\t(*Tree)(nil),                  // 7: trillian.Tree\n\t(*fieldmaskpb.FieldMask)(nil), // 8: google.protobuf.FieldMask\n}\nvar file_trillian_admin_api_proto_depIdxs = []int32{\n\t7,  // 0: trillian.ListTreesResponse.tree:type_name -> trillian.Tree\n\t7,  // 1: trillian.CreateTreeRequest.tree:type_name -> trillian.Tree\n\t7,  // 2: trillian.UpdateTreeRequest.tree:type_name -> trillian.Tree\n\t8,  // 3: trillian.UpdateTreeRequest.update_mask:type_name -> google.protobuf.FieldMask\n\t0,  // 4: trillian.TrillianAdmin.ListTrees:input_type -> trillian.ListTreesRequest\n\t2,  // 5: trillian.TrillianAdmin.GetTree:input_type -> trillian.GetTreeRequest\n\t3,  // 6: trillian.TrillianAdmin.CreateTree:input_type -> trillian.CreateTreeRequest\n\t4,  // 7: trillian.TrillianAdmin.UpdateTree:input_type -> trillian.UpdateTreeRequest\n\t5,  // 8: trillian.TrillianAdmin.DeleteTree:input_type -> trillian.DeleteTreeRequest\n\t6,  // 9: trillian.TrillianAdmin.UndeleteTree:input_type -> trillian.UndeleteTreeRequest\n\t1,  // 10: trillian.TrillianAdmin.ListTrees:output_type -> trillian.ListTreesResponse\n\t7,  // 11: trillian.TrillianAdmin.GetTree:output_type -> trillian.Tree\n\t7,  // 12: trillian.TrillianAdmin.CreateTree:output_type -> trillian.Tree\n\t7,  // 13: trillian.TrillianAdmin.UpdateTree:output_type -> trillian.Tree\n\t7,  // 14: trillian.TrillianAdmin.DeleteTree:output_type -> trillian.Tree\n\t7,  // 15: trillian.TrillianAdmin.UndeleteTree:output_type -> trillian.Tree\n\t10, // [10:16] is the sub-list for method output_type\n\t4,  // [4:10] is the sub-list for method input_type\n\t4,  // [4:4] is the sub-list for extension type_name\n\t4,  // [4:4] is the sub-list for extension extendee\n\t0,  // [0:4] is the sub-list for field type_name\n}\n\nfunc init() { file_trillian_admin_api_proto_init() }\nfunc file_trillian_admin_api_proto_init() {\n\tif File_trillian_admin_api_proto != nil {\n\t\treturn\n\t}\n\tfile_trillian_proto_init()\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_trillian_admin_api_proto_rawDesc,\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   7,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_trillian_admin_api_proto_goTypes,\n\t\tDependencyIndexes: file_trillian_admin_api_proto_depIdxs,\n\t\tMessageInfos:      file_trillian_admin_api_proto_msgTypes,\n\t}.Build()\n\tFile_trillian_admin_api_proto = out.File\n\tfile_trillian_admin_api_proto_rawDesc = nil\n\tfile_trillian_admin_api_proto_goTypes = nil\n\tfile_trillian_admin_api_proto_depIdxs = nil\n}\n"
        },
        {
          "name": "trillian_admin_api.proto",
          "type": "blob",
          "size": 3.10546875,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\noption java_multiple_files = true;\noption java_package = \"com.google.trillian.proto\";\noption java_outer_classname = \"TrillianAdminApiProto\";\noption go_package = \"github.com/google/trillian\";\n\npackage trillian;\n\nimport \"trillian.proto\";\nimport \"google/protobuf/field_mask.proto\";\n\n// ListTrees request.\n// No filters or pagination options are provided.\nmessage ListTreesRequest {\n  // If true, deleted trees are included in the response.\n  bool show_deleted = 1;\n}\n\n// ListTrees response.\n// No pagination is provided, all trees the requester has access to are\n// returned.\nmessage ListTreesResponse {\n  // Trees matching the list request filters.\n  repeated Tree tree = 1;\n}\n\n// GetTree request.\nmessage GetTreeRequest {\n  // ID of the tree to retrieve.\n  int64 tree_id = 1;\n}\n\n// CreateTree request.\nmessage CreateTreeRequest {\n  // Tree to be created. See Tree and CreateTree for more details.\n  Tree tree = 1;\n\n  reserved 2;\n  reserved \"key_spec\";\n}\n\n// UpdateTree request.\nmessage UpdateTreeRequest {\n  // Tree to be updated.\n  Tree tree = 1;\n\n  // Fields modified by the update request.\n  // For example: \"tree_state\", \"display_name\", \"description\".\n  google.protobuf.FieldMask update_mask = 2;\n}\n\n// DeleteTree request.\nmessage DeleteTreeRequest {\n  // ID of the tree to delete.\n  int64 tree_id = 1;\n}\n\n// UndeleteTree request.\nmessage UndeleteTreeRequest {\n  // ID of the tree to undelete.\n  int64 tree_id = 1;\n}\n\n// Trillian Administrative interface.\n// Allows creation and management of Trillian trees.\nservice TrillianAdmin {\n  // Lists all trees the requester has access to.\n  rpc ListTrees(ListTreesRequest) returns (ListTreesResponse) {}\n\n  // Retrieves a tree by ID.\n  rpc GetTree(GetTreeRequest) returns (Tree) {}\n\n  // Creates a new tree.\n  // System-generated fields are not required and will be ignored if present,\n  // e.g.: tree_id, create_time and update_time.\n  // Returns the created tree, with all system-generated fields assigned.\n  rpc CreateTree(CreateTreeRequest) returns (Tree) {}\n\n  // Updates a tree.\n  // See Tree for details. Readonly fields cannot be updated.\n  rpc UpdateTree(UpdateTreeRequest) returns (Tree) {}\n\n  // Soft-deletes a tree.\n  // A soft-deleted tree may be undeleted for a certain period, after which\n  // it'll be permanently deleted.\n  rpc DeleteTree(DeleteTreeRequest) returns (Tree) {}\n\n  // Undeletes a soft-deleted a tree.\n  // A soft-deleted tree may be undeleted for a certain period, after which\n  // it'll be permanently deleted.\n  rpc UndeleteTree(UndeleteTreeRequest) returns (Tree) {}\n}\n"
        },
        {
          "name": "trillian_admin_api_grpc.pb.go",
          "type": "blob",
          "size": 13.8056640625,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.20.1\n// source: trillian_admin_api.proto\n\npackage trillian\n\nimport (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\n\nconst (\n\tTrillianAdmin_ListTrees_FullMethodName    = \"/trillian.TrillianAdmin/ListTrees\"\n\tTrillianAdmin_GetTree_FullMethodName      = \"/trillian.TrillianAdmin/GetTree\"\n\tTrillianAdmin_CreateTree_FullMethodName   = \"/trillian.TrillianAdmin/CreateTree\"\n\tTrillianAdmin_UpdateTree_FullMethodName   = \"/trillian.TrillianAdmin/UpdateTree\"\n\tTrillianAdmin_DeleteTree_FullMethodName   = \"/trillian.TrillianAdmin/DeleteTree\"\n\tTrillianAdmin_UndeleteTree_FullMethodName = \"/trillian.TrillianAdmin/UndeleteTree\"\n)\n\n// TrillianAdminClient is the client API for TrillianAdmin service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\n//\n// Trillian Administrative interface.\n// Allows creation and management of Trillian trees.\ntype TrillianAdminClient interface {\n\t// Lists all trees the requester has access to.\n\tListTrees(ctx context.Context, in *ListTreesRequest, opts ...grpc.CallOption) (*ListTreesResponse, error)\n\t// Retrieves a tree by ID.\n\tGetTree(ctx context.Context, in *GetTreeRequest, opts ...grpc.CallOption) (*Tree, error)\n\t// Creates a new tree.\n\t// System-generated fields are not required and will be ignored if present,\n\t// e.g.: tree_id, create_time and update_time.\n\t// Returns the created tree, with all system-generated fields assigned.\n\tCreateTree(ctx context.Context, in *CreateTreeRequest, opts ...grpc.CallOption) (*Tree, error)\n\t// Updates a tree.\n\t// See Tree for details. Readonly fields cannot be updated.\n\tUpdateTree(ctx context.Context, in *UpdateTreeRequest, opts ...grpc.CallOption) (*Tree, error)\n\t// Soft-deletes a tree.\n\t// A soft-deleted tree may be undeleted for a certain period, after which\n\t// it'll be permanently deleted.\n\tDeleteTree(ctx context.Context, in *DeleteTreeRequest, opts ...grpc.CallOption) (*Tree, error)\n\t// Undeletes a soft-deleted a tree.\n\t// A soft-deleted tree may be undeleted for a certain period, after which\n\t// it'll be permanently deleted.\n\tUndeleteTree(ctx context.Context, in *UndeleteTreeRequest, opts ...grpc.CallOption) (*Tree, error)\n}\n\ntype trillianAdminClient struct {\n\tcc grpc.ClientConnInterface\n}\n\nfunc NewTrillianAdminClient(cc grpc.ClientConnInterface) TrillianAdminClient {\n\treturn &trillianAdminClient{cc}\n}\n\nfunc (c *trillianAdminClient) ListTrees(ctx context.Context, in *ListTreesRequest, opts ...grpc.CallOption) (*ListTreesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(ListTreesResponse)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_ListTrees_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianAdminClient) GetTree(ctx context.Context, in *GetTreeRequest, opts ...grpc.CallOption) (*Tree, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(Tree)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_GetTree_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianAdminClient) CreateTree(ctx context.Context, in *CreateTreeRequest, opts ...grpc.CallOption) (*Tree, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(Tree)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_CreateTree_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianAdminClient) UpdateTree(ctx context.Context, in *UpdateTreeRequest, opts ...grpc.CallOption) (*Tree, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(Tree)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_UpdateTree_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianAdminClient) DeleteTree(ctx context.Context, in *DeleteTreeRequest, opts ...grpc.CallOption) (*Tree, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(Tree)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_DeleteTree_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianAdminClient) UndeleteTree(ctx context.Context, in *UndeleteTreeRequest, opts ...grpc.CallOption) (*Tree, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(Tree)\n\terr := c.cc.Invoke(ctx, TrillianAdmin_UndeleteTree_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\n// TrillianAdminServer is the server API for TrillianAdmin service.\n// All implementations should embed UnimplementedTrillianAdminServer\n// for forward compatibility.\n//\n// Trillian Administrative interface.\n// Allows creation and management of Trillian trees.\ntype TrillianAdminServer interface {\n\t// Lists all trees the requester has access to.\n\tListTrees(context.Context, *ListTreesRequest) (*ListTreesResponse, error)\n\t// Retrieves a tree by ID.\n\tGetTree(context.Context, *GetTreeRequest) (*Tree, error)\n\t// Creates a new tree.\n\t// System-generated fields are not required and will be ignored if present,\n\t// e.g.: tree_id, create_time and update_time.\n\t// Returns the created tree, with all system-generated fields assigned.\n\tCreateTree(context.Context, *CreateTreeRequest) (*Tree, error)\n\t// Updates a tree.\n\t// See Tree for details. Readonly fields cannot be updated.\n\tUpdateTree(context.Context, *UpdateTreeRequest) (*Tree, error)\n\t// Soft-deletes a tree.\n\t// A soft-deleted tree may be undeleted for a certain period, after which\n\t// it'll be permanently deleted.\n\tDeleteTree(context.Context, *DeleteTreeRequest) (*Tree, error)\n\t// Undeletes a soft-deleted a tree.\n\t// A soft-deleted tree may be undeleted for a certain period, after which\n\t// it'll be permanently deleted.\n\tUndeleteTree(context.Context, *UndeleteTreeRequest) (*Tree, error)\n}\n\n// UnimplementedTrillianAdminServer should be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedTrillianAdminServer struct{}\n\nfunc (UnimplementedTrillianAdminServer) ListTrees(context.Context, *ListTreesRequest) (*ListTreesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method ListTrees not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) GetTree(context.Context, *GetTreeRequest) (*Tree, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetTree not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) CreateTree(context.Context, *CreateTreeRequest) (*Tree, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method CreateTree not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) UpdateTree(context.Context, *UpdateTreeRequest) (*Tree, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method UpdateTree not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) DeleteTree(context.Context, *DeleteTreeRequest) (*Tree, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method DeleteTree not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) UndeleteTree(context.Context, *UndeleteTreeRequest) (*Tree, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method UndeleteTree not implemented\")\n}\nfunc (UnimplementedTrillianAdminServer) testEmbeddedByValue() {}\n\n// UnsafeTrillianAdminServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to TrillianAdminServer will\n// result in compilation errors.\ntype UnsafeTrillianAdminServer interface {\n\tmustEmbedUnimplementedTrillianAdminServer()\n}\n\nfunc RegisterTrillianAdminServer(s grpc.ServiceRegistrar, srv TrillianAdminServer) {\n\t// If the following call pancis, it indicates UnimplementedTrillianAdminServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&TrillianAdmin_ServiceDesc, srv)\n}\n\nfunc _TrillianAdmin_ListTrees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(ListTreesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).ListTrees(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_ListTrees_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).ListTrees(ctx, req.(*ListTreesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianAdmin_GetTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetTreeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).GetTree(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_GetTree_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).GetTree(ctx, req.(*GetTreeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianAdmin_CreateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateTreeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).CreateTree(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_CreateTree_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).CreateTree(ctx, req.(*CreateTreeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianAdmin_UpdateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateTreeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).UpdateTree(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_UpdateTree_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).UpdateTree(ctx, req.(*UpdateTreeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianAdmin_DeleteTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(DeleteTreeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).DeleteTree(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_DeleteTree_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).DeleteTree(ctx, req.(*DeleteTreeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianAdmin_UndeleteTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UndeleteTreeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianAdminServer).UndeleteTree(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianAdmin_UndeleteTree_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianAdminServer).UndeleteTree(ctx, req.(*UndeleteTreeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// TrillianAdmin_ServiceDesc is the grpc.ServiceDesc for TrillianAdmin service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar TrillianAdmin_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"trillian.TrillianAdmin\",\n\tHandlerType: (*TrillianAdminServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"ListTrees\",\n\t\t\tHandler:    _TrillianAdmin_ListTrees_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetTree\",\n\t\t\tHandler:    _TrillianAdmin_GetTree_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"CreateTree\",\n\t\t\tHandler:    _TrillianAdmin_CreateTree_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"UpdateTree\",\n\t\t\tHandler:    _TrillianAdmin_UpdateTree_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"DeleteTree\",\n\t\t\tHandler:    _TrillianAdmin_DeleteTree_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"UndeleteTree\",\n\t\t\tHandler:    _TrillianAdmin_UndeleteTree_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"trillian_admin_api.proto\",\n}\n"
        },
        {
          "name": "trillian_log_api.pb.go",
          "type": "blob",
          "size": 73.8984375,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.1\n// \tprotoc        v3.20.1\n// source: trillian_log_api.proto\n\npackage trillian\n\nimport (\n\tstatus \"google.golang.org/genproto/googleapis/rpc/status\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n\n// ChargeTo describes the user(s) associated with the request whose quota should\n// be checked and charged.\ntype ChargeTo struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// user is a list of personality-defined strings.\n\t// Trillian will treat them as /User/%{user}/... keys when checking and\n\t// charging quota.\n\t// If one or more of the specified users has insufficient quota, the\n\t// request will be denied.\n\t//\n\t// As an example, a Certificate Transparency frontend might set the following\n\t// user strings when sending a QueueLeaf request to the Trillian log:\n\t//   - The requesting IP address.\n\t//     This would limit the number of requests per IP.\n\t//   - The \"intermediate-<hash>\" for each of the intermediate certificates in\n\t//     the submitted chain.\n\t//     This would have the effect of limiting the rate of submissions under\n\t//     a given intermediate/root.\n\tUser          []string `protobuf:\"bytes,1,rep,name=user,proto3\" json:\"user,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *ChargeTo) Reset() {\n\t*x = ChargeTo{}\n\tmi := &file_trillian_log_api_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *ChargeTo) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*ChargeTo) ProtoMessage() {}\n\nfunc (x *ChargeTo) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use ChargeTo.ProtoReflect.Descriptor instead.\nfunc (*ChargeTo) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{0}\n}\n\nfunc (x *ChargeTo) GetUser() []string {\n\tif x != nil {\n\t\treturn x.User\n\t}\n\treturn nil\n}\n\ntype QueueLeafRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tLeaf          *LogLeaf               `protobuf:\"bytes,2,opt,name=leaf,proto3\" json:\"leaf,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,3,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *QueueLeafRequest) Reset() {\n\t*x = QueueLeafRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *QueueLeafRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*QueueLeafRequest) ProtoMessage() {}\n\nfunc (x *QueueLeafRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use QueueLeafRequest.ProtoReflect.Descriptor instead.\nfunc (*QueueLeafRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{1}\n}\n\nfunc (x *QueueLeafRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *QueueLeafRequest) GetLeaf() *LogLeaf {\n\tif x != nil {\n\t\treturn x.Leaf\n\t}\n\treturn nil\n}\n\nfunc (x *QueueLeafRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype QueueLeafResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// queued_leaf describes the leaf which is or will be incorporated into the\n\t// Log.  If the submitted leaf was already present in the Log (as indicated by\n\t// its leaf identity hash), then the returned leaf will be the pre-existing\n\t// leaf entry rather than the submitted leaf.\n\tQueuedLeaf    *QueuedLogLeaf `protobuf:\"bytes,2,opt,name=queued_leaf,json=queuedLeaf,proto3\" json:\"queued_leaf,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *QueueLeafResponse) Reset() {\n\t*x = QueueLeafResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *QueueLeafResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*QueueLeafResponse) ProtoMessage() {}\n\nfunc (x *QueueLeafResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use QueueLeafResponse.ProtoReflect.Descriptor instead.\nfunc (*QueueLeafResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{2}\n}\n\nfunc (x *QueueLeafResponse) GetQueuedLeaf() *QueuedLogLeaf {\n\tif x != nil {\n\t\treturn x.QueuedLeaf\n\t}\n\treturn nil\n}\n\ntype GetInclusionProofRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tLeafIndex     int64                  `protobuf:\"varint,2,opt,name=leaf_index,json=leafIndex,proto3\" json:\"leaf_index,omitempty\"`\n\tTreeSize      int64                  `protobuf:\"varint,3,opt,name=tree_size,json=treeSize,proto3\" json:\"tree_size,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,4,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetInclusionProofRequest) Reset() {\n\t*x = GetInclusionProofRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetInclusionProofRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetInclusionProofRequest) ProtoMessage() {}\n\nfunc (x *GetInclusionProofRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetInclusionProofRequest.ProtoReflect.Descriptor instead.\nfunc (*GetInclusionProofRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{3}\n}\n\nfunc (x *GetInclusionProofRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetInclusionProofRequest) GetLeafIndex() int64 {\n\tif x != nil {\n\t\treturn x.LeafIndex\n\t}\n\treturn 0\n}\n\nfunc (x *GetInclusionProofRequest) GetTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.TreeSize\n\t}\n\treturn 0\n}\n\nfunc (x *GetInclusionProofRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype GetInclusionProofResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The proof field may be empty if the requested tree_size was larger\n\t// than that available at the server (e.g. because there is skew between\n\t// server instances, and an earlier client request was processed by a\n\t// more up-to-date instance).  In this case, the signed_log_root\n\t// field will indicate the tree size that the server is aware of, and\n\t// the proof field will be empty.\n\tProof         *Proof         `protobuf:\"bytes,2,opt,name=proof,proto3\" json:\"proof,omitempty\"`\n\tSignedLogRoot *SignedLogRoot `protobuf:\"bytes,3,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetInclusionProofResponse) Reset() {\n\t*x = GetInclusionProofResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetInclusionProofResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetInclusionProofResponse) ProtoMessage() {}\n\nfunc (x *GetInclusionProofResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetInclusionProofResponse.ProtoReflect.Descriptor instead.\nfunc (*GetInclusionProofResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{4}\n}\n\nfunc (x *GetInclusionProofResponse) GetProof() *Proof {\n\tif x != nil {\n\t\treturn x.Proof\n\t}\n\treturn nil\n}\n\nfunc (x *GetInclusionProofResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\ntype GetInclusionProofByHashRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\t// The leaf hash field provides the Merkle tree hash of the leaf entry\n\t// to be retrieved.\n\tLeafHash        []byte    `protobuf:\"bytes,2,opt,name=leaf_hash,json=leafHash,proto3\" json:\"leaf_hash,omitempty\"`\n\tTreeSize        int64     `protobuf:\"varint,3,opt,name=tree_size,json=treeSize,proto3\" json:\"tree_size,omitempty\"`\n\tOrderBySequence bool      `protobuf:\"varint,4,opt,name=order_by_sequence,json=orderBySequence,proto3\" json:\"order_by_sequence,omitempty\"`\n\tChargeTo        *ChargeTo `protobuf:\"bytes,5,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n\nfunc (x *GetInclusionProofByHashRequest) Reset() {\n\t*x = GetInclusionProofByHashRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetInclusionProofByHashRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetInclusionProofByHashRequest) ProtoMessage() {}\n\nfunc (x *GetInclusionProofByHashRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetInclusionProofByHashRequest.ProtoReflect.Descriptor instead.\nfunc (*GetInclusionProofByHashRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{5}\n}\n\nfunc (x *GetInclusionProofByHashRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetInclusionProofByHashRequest) GetLeafHash() []byte {\n\tif x != nil {\n\t\treturn x.LeafHash\n\t}\n\treturn nil\n}\n\nfunc (x *GetInclusionProofByHashRequest) GetTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.TreeSize\n\t}\n\treturn 0\n}\n\nfunc (x *GetInclusionProofByHashRequest) GetOrderBySequence() bool {\n\tif x != nil {\n\t\treturn x.OrderBySequence\n\t}\n\treturn false\n}\n\nfunc (x *GetInclusionProofByHashRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype GetInclusionProofByHashResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Logs can potentially contain leaves with duplicate hashes so it's possible\n\t// for this to return multiple proofs.  If the leaf index for a particular\n\t// instance of the requested Merkle leaf hash is beyond the requested tree\n\t// size, the corresponding proof entry will be missing.\n\tProof         []*Proof       `protobuf:\"bytes,2,rep,name=proof,proto3\" json:\"proof,omitempty\"`\n\tSignedLogRoot *SignedLogRoot `protobuf:\"bytes,3,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetInclusionProofByHashResponse) Reset() {\n\t*x = GetInclusionProofByHashResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetInclusionProofByHashResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetInclusionProofByHashResponse) ProtoMessage() {}\n\nfunc (x *GetInclusionProofByHashResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetInclusionProofByHashResponse.ProtoReflect.Descriptor instead.\nfunc (*GetInclusionProofByHashResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{6}\n}\n\nfunc (x *GetInclusionProofByHashResponse) GetProof() []*Proof {\n\tif x != nil {\n\t\treturn x.Proof\n\t}\n\treturn nil\n}\n\nfunc (x *GetInclusionProofByHashResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\ntype GetConsistencyProofRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId          int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tFirstTreeSize  int64                  `protobuf:\"varint,2,opt,name=first_tree_size,json=firstTreeSize,proto3\" json:\"first_tree_size,omitempty\"`\n\tSecondTreeSize int64                  `protobuf:\"varint,3,opt,name=second_tree_size,json=secondTreeSize,proto3\" json:\"second_tree_size,omitempty\"`\n\tChargeTo       *ChargeTo              `protobuf:\"bytes,4,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n\nfunc (x *GetConsistencyProofRequest) Reset() {\n\t*x = GetConsistencyProofRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetConsistencyProofRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetConsistencyProofRequest) ProtoMessage() {}\n\nfunc (x *GetConsistencyProofRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetConsistencyProofRequest.ProtoReflect.Descriptor instead.\nfunc (*GetConsistencyProofRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{7}\n}\n\nfunc (x *GetConsistencyProofRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetConsistencyProofRequest) GetFirstTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.FirstTreeSize\n\t}\n\treturn 0\n}\n\nfunc (x *GetConsistencyProofRequest) GetSecondTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.SecondTreeSize\n\t}\n\treturn 0\n}\n\nfunc (x *GetConsistencyProofRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype GetConsistencyProofResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The proof field may be empty if the requested tree_size was larger\n\t// than that available at the server (e.g. because there is skew between\n\t// server instances, and an earlier client request was processed by a\n\t// more up-to-date instance).  In this case, the signed_log_root\n\t// field will indicate the tree size that the server is aware of, and\n\t// the proof field will be empty.\n\tProof         *Proof         `protobuf:\"bytes,2,opt,name=proof,proto3\" json:\"proof,omitempty\"`\n\tSignedLogRoot *SignedLogRoot `protobuf:\"bytes,3,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetConsistencyProofResponse) Reset() {\n\t*x = GetConsistencyProofResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetConsistencyProofResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetConsistencyProofResponse) ProtoMessage() {}\n\nfunc (x *GetConsistencyProofResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetConsistencyProofResponse.ProtoReflect.Descriptor instead.\nfunc (*GetConsistencyProofResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{8}\n}\n\nfunc (x *GetConsistencyProofResponse) GetProof() *Proof {\n\tif x != nil {\n\t\treturn x.Proof\n\t}\n\treturn nil\n}\n\nfunc (x *GetConsistencyProofResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\ntype GetLatestSignedLogRootRequest struct {\n\tstate    protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId    int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tChargeTo *ChargeTo              `protobuf:\"bytes,2,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\t// If first_tree_size is non-zero, the response will include a consistency\n\t// proof between first_tree_size and the new tree size (if not smaller).\n\tFirstTreeSize int64 `protobuf:\"varint,3,opt,name=first_tree_size,json=firstTreeSize,proto3\" json:\"first_tree_size,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetLatestSignedLogRootRequest) Reset() {\n\t*x = GetLatestSignedLogRootRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetLatestSignedLogRootRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetLatestSignedLogRootRequest) ProtoMessage() {}\n\nfunc (x *GetLatestSignedLogRootRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetLatestSignedLogRootRequest.ProtoReflect.Descriptor instead.\nfunc (*GetLatestSignedLogRootRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{9}\n}\n\nfunc (x *GetLatestSignedLogRootRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetLatestSignedLogRootRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\nfunc (x *GetLatestSignedLogRootRequest) GetFirstTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.FirstTreeSize\n\t}\n\treturn 0\n}\n\ntype GetLatestSignedLogRootResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tSignedLogRoot *SignedLogRoot         `protobuf:\"bytes,2,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\t// proof is filled in with a consistency proof if first_tree_size in\n\t// GetLatestSignedLogRootRequest is non-zero (and within the tree size\n\t// available at the server).\n\tProof         *Proof `protobuf:\"bytes,3,opt,name=proof,proto3\" json:\"proof,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetLatestSignedLogRootResponse) Reset() {\n\t*x = GetLatestSignedLogRootResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetLatestSignedLogRootResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetLatestSignedLogRootResponse) ProtoMessage() {}\n\nfunc (x *GetLatestSignedLogRootResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetLatestSignedLogRootResponse.ProtoReflect.Descriptor instead.\nfunc (*GetLatestSignedLogRootResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{10}\n}\n\nfunc (x *GetLatestSignedLogRootResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\nfunc (x *GetLatestSignedLogRootResponse) GetProof() *Proof {\n\tif x != nil {\n\t\treturn x.Proof\n\t}\n\treturn nil\n}\n\ntype GetEntryAndProofRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tLeafIndex     int64                  `protobuf:\"varint,2,opt,name=leaf_index,json=leafIndex,proto3\" json:\"leaf_index,omitempty\"`\n\tTreeSize      int64                  `protobuf:\"varint,3,opt,name=tree_size,json=treeSize,proto3\" json:\"tree_size,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,4,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetEntryAndProofRequest) Reset() {\n\t*x = GetEntryAndProofRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetEntryAndProofRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetEntryAndProofRequest) ProtoMessage() {}\n\nfunc (x *GetEntryAndProofRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetEntryAndProofRequest.ProtoReflect.Descriptor instead.\nfunc (*GetEntryAndProofRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{11}\n}\n\nfunc (x *GetEntryAndProofRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetEntryAndProofRequest) GetLeafIndex() int64 {\n\tif x != nil {\n\t\treturn x.LeafIndex\n\t}\n\treturn 0\n}\n\nfunc (x *GetEntryAndProofRequest) GetTreeSize() int64 {\n\tif x != nil {\n\t\treturn x.TreeSize\n\t}\n\treturn 0\n}\n\nfunc (x *GetEntryAndProofRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype GetEntryAndProofResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tProof         *Proof                 `protobuf:\"bytes,2,opt,name=proof,proto3\" json:\"proof,omitempty\"`\n\tLeaf          *LogLeaf               `protobuf:\"bytes,3,opt,name=leaf,proto3\" json:\"leaf,omitempty\"`\n\tSignedLogRoot *SignedLogRoot         `protobuf:\"bytes,4,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetEntryAndProofResponse) Reset() {\n\t*x = GetEntryAndProofResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetEntryAndProofResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetEntryAndProofResponse) ProtoMessage() {}\n\nfunc (x *GetEntryAndProofResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetEntryAndProofResponse.ProtoReflect.Descriptor instead.\nfunc (*GetEntryAndProofResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{12}\n}\n\nfunc (x *GetEntryAndProofResponse) GetProof() *Proof {\n\tif x != nil {\n\t\treturn x.Proof\n\t}\n\treturn nil\n}\n\nfunc (x *GetEntryAndProofResponse) GetLeaf() *LogLeaf {\n\tif x != nil {\n\t\treturn x.Leaf\n\t}\n\treturn nil\n}\n\nfunc (x *GetEntryAndProofResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\ntype InitLogRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,2,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *InitLogRequest) Reset() {\n\t*x = InitLogRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *InitLogRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*InitLogRequest) ProtoMessage() {}\n\nfunc (x *InitLogRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use InitLogRequest.ProtoReflect.Descriptor instead.\nfunc (*InitLogRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{13}\n}\n\nfunc (x *InitLogRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *InitLogRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype InitLogResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCreated       *SignedLogRoot         `protobuf:\"bytes,1,opt,name=created,proto3\" json:\"created,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *InitLogResponse) Reset() {\n\t*x = InitLogResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *InitLogResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*InitLogResponse) ProtoMessage() {}\n\nfunc (x *InitLogResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use InitLogResponse.ProtoReflect.Descriptor instead.\nfunc (*InitLogResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{14}\n}\n\nfunc (x *InitLogResponse) GetCreated() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.Created\n\t}\n\treturn nil\n}\n\ntype AddSequencedLeavesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tLeaves        []*LogLeaf             `protobuf:\"bytes,2,rep,name=leaves,proto3\" json:\"leaves,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,4,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *AddSequencedLeavesRequest) Reset() {\n\t*x = AddSequencedLeavesRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *AddSequencedLeavesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*AddSequencedLeavesRequest) ProtoMessage() {}\n\nfunc (x *AddSequencedLeavesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use AddSequencedLeavesRequest.ProtoReflect.Descriptor instead.\nfunc (*AddSequencedLeavesRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{15}\n}\n\nfunc (x *AddSequencedLeavesRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *AddSequencedLeavesRequest) GetLeaves() []*LogLeaf {\n\tif x != nil {\n\t\treturn x.Leaves\n\t}\n\treturn nil\n}\n\nfunc (x *AddSequencedLeavesRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype AddSequencedLeavesResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Same number and order as in the corresponding request.\n\tResults       []*QueuedLogLeaf `protobuf:\"bytes,2,rep,name=results,proto3\" json:\"results,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *AddSequencedLeavesResponse) Reset() {\n\t*x = AddSequencedLeavesResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *AddSequencedLeavesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*AddSequencedLeavesResponse) ProtoMessage() {}\n\nfunc (x *AddSequencedLeavesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use AddSequencedLeavesResponse.ProtoReflect.Descriptor instead.\nfunc (*AddSequencedLeavesResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{16}\n}\n\nfunc (x *AddSequencedLeavesResponse) GetResults() []*QueuedLogLeaf {\n\tif x != nil {\n\t\treturn x.Results\n\t}\n\treturn nil\n}\n\ntype GetLeavesByRangeRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tLogId         int64                  `protobuf:\"varint,1,opt,name=log_id,json=logId,proto3\" json:\"log_id,omitempty\"`\n\tStartIndex    int64                  `protobuf:\"varint,2,opt,name=start_index,json=startIndex,proto3\" json:\"start_index,omitempty\"`\n\tCount         int64                  `protobuf:\"varint,3,opt,name=count,proto3\" json:\"count,omitempty\"`\n\tChargeTo      *ChargeTo              `protobuf:\"bytes,4,opt,name=charge_to,json=chargeTo,proto3\" json:\"charge_to,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetLeavesByRangeRequest) Reset() {\n\t*x = GetLeavesByRangeRequest{}\n\tmi := &file_trillian_log_api_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetLeavesByRangeRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetLeavesByRangeRequest) ProtoMessage() {}\n\nfunc (x *GetLeavesByRangeRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetLeavesByRangeRequest.ProtoReflect.Descriptor instead.\nfunc (*GetLeavesByRangeRequest) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{17}\n}\n\nfunc (x *GetLeavesByRangeRequest) GetLogId() int64 {\n\tif x != nil {\n\t\treturn x.LogId\n\t}\n\treturn 0\n}\n\nfunc (x *GetLeavesByRangeRequest) GetStartIndex() int64 {\n\tif x != nil {\n\t\treturn x.StartIndex\n\t}\n\treturn 0\n}\n\nfunc (x *GetLeavesByRangeRequest) GetCount() int64 {\n\tif x != nil {\n\t\treturn x.Count\n\t}\n\treturn 0\n}\n\nfunc (x *GetLeavesByRangeRequest) GetChargeTo() *ChargeTo {\n\tif x != nil {\n\t\treturn x.ChargeTo\n\t}\n\treturn nil\n}\n\ntype GetLeavesByRangeResponse struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Returned log leaves starting from the `start_index` of the request, in\n\t// order. There may be fewer than `request.count` leaves returned, if the\n\t// requested range extended beyond the size of the tree or if the server opted\n\t// to return fewer leaves than requested.\n\tLeaves        []*LogLeaf     `protobuf:\"bytes,1,rep,name=leaves,proto3\" json:\"leaves,omitempty\"`\n\tSignedLogRoot *SignedLogRoot `protobuf:\"bytes,2,opt,name=signed_log_root,json=signedLogRoot,proto3\" json:\"signed_log_root,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *GetLeavesByRangeResponse) Reset() {\n\t*x = GetLeavesByRangeResponse{}\n\tmi := &file_trillian_log_api_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *GetLeavesByRangeResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*GetLeavesByRangeResponse) ProtoMessage() {}\n\nfunc (x *GetLeavesByRangeResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use GetLeavesByRangeResponse.ProtoReflect.Descriptor instead.\nfunc (*GetLeavesByRangeResponse) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{18}\n}\n\nfunc (x *GetLeavesByRangeResponse) GetLeaves() []*LogLeaf {\n\tif x != nil {\n\t\treturn x.Leaves\n\t}\n\treturn nil\n}\n\nfunc (x *GetLeavesByRangeResponse) GetSignedLogRoot() *SignedLogRoot {\n\tif x != nil {\n\t\treturn x.SignedLogRoot\n\t}\n\treturn nil\n}\n\n// QueuedLogLeaf provides the result of submitting an entry to the log.\n// TODO(pavelkalinnikov): Consider renaming it to AddLogLeafResult or the like.\ntype QueuedLogLeaf struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// The leaf as it was stored by Trillian. Empty unless `status.code` is:\n\t//   - `google.rpc.OK`: the `leaf` data is the same as in the request.\n\t//   - `google.rpc.ALREADY_EXISTS` or 'google.rpc.FAILED_PRECONDITION`: the\n\t//     `leaf` is the conflicting one already in the log.\n\tLeaf *LogLeaf `protobuf:\"bytes,1,opt,name=leaf,proto3\" json:\"leaf,omitempty\"`\n\t// The status of adding the leaf.\n\t//   - `google.rpc.OK`: successfully added.\n\t//   - `google.rpc.ALREADY_EXISTS`: the leaf is a duplicate of an already\n\t//     existing one. Either `leaf_identity_hash` is the same in the `LOG`\n\t//     mode, or `leaf_index` in the `PREORDERED_LOG`.\n\t//   - `google.rpc.FAILED_PRECONDITION`: A conflicting entry is already\n\t//     present in the log, e.g., same `leaf_index` but different `leaf_data`.\n\tStatus        *status.Status `protobuf:\"bytes,2,opt,name=status,proto3\" json:\"status,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n\nfunc (x *QueuedLogLeaf) Reset() {\n\t*x = QueuedLogLeaf{}\n\tmi := &file_trillian_log_api_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *QueuedLogLeaf) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*QueuedLogLeaf) ProtoMessage() {}\n\nfunc (x *QueuedLogLeaf) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use QueuedLogLeaf.ProtoReflect.Descriptor instead.\nfunc (*QueuedLogLeaf) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{19}\n}\n\nfunc (x *QueuedLogLeaf) GetLeaf() *LogLeaf {\n\tif x != nil {\n\t\treturn x.Leaf\n\t}\n\treturn nil\n}\n\nfunc (x *QueuedLogLeaf) GetStatus() *status.Status {\n\tif x != nil {\n\t\treturn x.Status\n\t}\n\treturn nil\n}\n\n// LogLeaf describes a leaf in the Log's Merkle tree, corresponding to a single log entry.\n// Each leaf has a unique leaf index in the scope of this tree.  Clients submitting new\n// leaf entries should only set the following fields:\n//   - leaf_value\n//   - extra_data (optionally)\n//   - leaf_identity_hash (optionally)\n//   - leaf_index (iff the log is a PREORDERED_LOG)\ntype LogLeaf struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// merkle_leaf_hash holds the Merkle leaf hash over leaf_value.  This is\n\t// calculated by the Trillian server when leaves are added to the tree, using\n\t// the defined hashing algorithm and strategy for the tree; as such, the client\n\t// does not need to set it on leaf submissions.\n\tMerkleLeafHash []byte `protobuf:\"bytes,1,opt,name=merkle_leaf_hash,json=merkleLeafHash,proto3\" json:\"merkle_leaf_hash,omitempty\"`\n\t// leaf_value holds the data that forms the value of the Merkle tree leaf.\n\t// The client should set this field on all leaf submissions, and is\n\t// responsible for ensuring its validity (the Trillian server treats it as an\n\t// opaque blob).\n\tLeafValue []byte `protobuf:\"bytes,2,opt,name=leaf_value,json=leafValue,proto3\" json:\"leaf_value,omitempty\"`\n\t// extra_data holds additional data associated with the Merkle tree leaf.\n\t// The client may set this data on leaf submissions, and the Trillian server\n\t// will return it on subsequent read operations. However, the contents of\n\t// this field are not covered by and do not affect the Merkle tree hash\n\t// calculations.\n\tExtraData []byte `protobuf:\"bytes,3,opt,name=extra_data,json=extraData,proto3\" json:\"extra_data,omitempty\"`\n\t// leaf_index indicates the index of this leaf in the Merkle tree.\n\t// This field is returned on all read operations, but should only be\n\t// set for leaf submissions in PREORDERED_LOG mode (for a normal log\n\t// the leaf index is assigned by Trillian when the submitted leaf is\n\t// integrated into the Merkle tree).\n\tLeafIndex int64 `protobuf:\"varint,4,opt,name=leaf_index,json=leafIndex,proto3\" json:\"leaf_index,omitempty\"`\n\t// leaf_identity_hash provides a hash value that indicates the client's\n\t// concept of which leaf entries should be considered identical.\n\t//\n\t// This mechanism allows the client personality to indicate that two leaves\n\t// should be considered \"duplicates\" even though their `leaf_value`s differ.\n\t//\n\t// If this is not set on leaf submissions, the Trillian server will take its\n\t// value to be the same as merkle_leaf_hash (and thus only leaves with\n\t// identical leaf_value contents will be considered identical).\n\t//\n\t// For example, in Certificate Transparency each certificate submission is\n\t// associated with a submission timestamp, but subsequent submissions of the\n\t// same certificate should be considered identical.  This is achieved\n\t// by setting the leaf identity hash to a hash over (just) the certificate,\n\t// whereas the Merkle leaf hash encompasses both the certificate and its\n\t// submission time -- allowing duplicate certificates to be detected.\n\t//\n\t// Continuing the CT example, for a CT mirror personality (which must allow\n\t// dupes since the source log could contain them), the part of the\n\t// personality which fetches and submits the entries might set\n\t// `leaf_identity_hash` to `H(leaf_index||cert)`.\n\t//\n\t// TODO(pavelkalinnikov): Consider instead using `H(cert)` and allowing\n\t// identity hash dupes in `PREORDERED_LOG` mode, for it can later be\n\t// upgraded to `LOG` which will need to correctly detect duplicates with\n\t// older entries when new ones get queued.\n\tLeafIdentityHash []byte `protobuf:\"bytes,5,opt,name=leaf_identity_hash,json=leafIdentityHash,proto3\" json:\"leaf_identity_hash,omitempty\"`\n\t// queue_timestamp holds the time at which this leaf was queued for\n\t// inclusion in the Log, or zero if the entry was submitted without\n\t// queuing. Clients should not set this field on submissions.\n\tQueueTimestamp *timestamppb.Timestamp `protobuf:\"bytes,6,opt,name=queue_timestamp,json=queueTimestamp,proto3\" json:\"queue_timestamp,omitempty\"`\n\t// integrate_timestamp holds the time at which this leaf was integrated into\n\t// the tree.  Clients should not set this field on submissions.\n\tIntegrateTimestamp *timestamppb.Timestamp `protobuf:\"bytes,7,opt,name=integrate_timestamp,json=integrateTimestamp,proto3\" json:\"integrate_timestamp,omitempty\"`\n\tunknownFields      protoimpl.UnknownFields\n\tsizeCache          protoimpl.SizeCache\n}\n\nfunc (x *LogLeaf) Reset() {\n\t*x = LogLeaf{}\n\tmi := &file_trillian_log_api_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n\nfunc (x *LogLeaf) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n\nfunc (*LogLeaf) ProtoMessage() {}\n\nfunc (x *LogLeaf) ProtoReflect() protoreflect.Message {\n\tmi := &file_trillian_log_api_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use LogLeaf.ProtoReflect.Descriptor instead.\nfunc (*LogLeaf) Descriptor() ([]byte, []int) {\n\treturn file_trillian_log_api_proto_rawDescGZIP(), []int{20}\n}\n\nfunc (x *LogLeaf) GetMerkleLeafHash() []byte {\n\tif x != nil {\n\t\treturn x.MerkleLeafHash\n\t}\n\treturn nil\n}\n\nfunc (x *LogLeaf) GetLeafValue() []byte {\n\tif x != nil {\n\t\treturn x.LeafValue\n\t}\n\treturn nil\n}\n\nfunc (x *LogLeaf) GetExtraData() []byte {\n\tif x != nil {\n\t\treturn x.ExtraData\n\t}\n\treturn nil\n}\n\nfunc (x *LogLeaf) GetLeafIndex() int64 {\n\tif x != nil {\n\t\treturn x.LeafIndex\n\t}\n\treturn 0\n}\n\nfunc (x *LogLeaf) GetLeafIdentityHash() []byte {\n\tif x != nil {\n\t\treturn x.LeafIdentityHash\n\t}\n\treturn nil\n}\n\nfunc (x *LogLeaf) GetQueueTimestamp() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.QueueTimestamp\n\t}\n\treturn nil\n}\n\nfunc (x *LogLeaf) GetIntegrateTimestamp() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.IntegrateTimestamp\n\t}\n\treturn nil\n}\n\nvar File_trillian_log_api_proto protoreflect.FileDescriptor\n\nvar file_trillian_log_api_proto_rawDesc = []byte{\n\t0x0a, 0x16, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x61,\n\t0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,\n\t0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,\n\t0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f,\n\t0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08,\n\t0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,\n\t0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x81, 0x01, 0x0a,\n\t0x10, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,\n\t0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,\n\t0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66,\n\t0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61,\n\t0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12,\n\t0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,\n\t0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68,\n\t0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f,\n\t0x22, 0x4d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73,\n\t0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f,\n\t0x6c, 0x65, 0x61, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x69,\n\t0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x4c,\n\t0x65, 0x61, 0x66, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x66, 0x22,\n\t0x9e, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,\n\t0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,\n\t0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f,\n\t0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,\n\t0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64,\n\t0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,\n\t0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,\n\t0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,\n\t0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68,\n\t0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f,\n\t0x22, 0x83, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,\n\t0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,\n\t0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05,\n\t0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,\n\t0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,\n\t0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,\n\t0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c,\n\t0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e,\n\t0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x79, 0x48, 0x61,\n\t0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67,\n\t0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64,\n\t0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,\n\t0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x66, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a,\n\t0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,\n\t0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72,\n\t0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,\n\t0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x53, 0x65,\n\t0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,\n\t0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c,\n\t0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63,\n\t0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49,\n\t0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x79, 0x48,\n\t0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70,\n\t0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x69,\n\t0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f,\n\t0x6f, 0x66, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67,\n\t0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52,\n\t0x6f, 0x6f, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x69,\n\t0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,\n\t0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,\n\t0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x72,\n\t0x73, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,\n\t0x28, 0x03, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a,\n\t0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65,\n\t0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x63,\n\t0x6f, 0x6e, 0x64, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x63,\n\t0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,\n\t0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,\n\t0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x22, 0x85, 0x01, 0x0a,\n\t0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50,\n\t0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05,\n\t0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72,\n\t0x6f, 0x6f, 0x66, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f,\n\t0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,\n\t0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f,\n\t0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x52, 0x6f, 0x6f, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,\n\t0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52,\n\t0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64,\n\t0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x2f, 0x0a,\n\t0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,\n\t0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72,\n\t0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x12, 0x26,\n\t0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a,\n\t0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72,\n\t0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x61,\n\t0x74, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f,\n\t0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x69, 0x67,\n\t0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,\n\t0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69,\n\t0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x67,\n\t0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72,\n\t0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x69, 0x6c,\n\t0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f,\n\t0x66, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e,\n\t0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,\n\t0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,\n\t0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64,\n\t0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x6e,\n\t0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,\n\t0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65,\n\t0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20,\n\t0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43,\n\t0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,\n\t0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e,\n\t0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,\n\t0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05,\n\t0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x03, 0x20,\n\t0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x4c,\n\t0x6f, 0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12, 0x3f, 0x0a, 0x0f,\n\t0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,\n\t0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e,\n\t0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d,\n\t0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x58, 0x0a,\n\t0x0e, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,\n\t0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,\n\t0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,\n\t0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c,\n\t0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63,\n\t0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x22, 0x44, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x4c,\n\t0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72,\n\t0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x52, 0x6f, 0x6f, 0x74, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8e, 0x01,\n\t0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x65,\n\t0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c,\n\t0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67,\n\t0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,\n\t0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x4c, 0x6f,\n\t0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x2f, 0x0a,\n\t0x09, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,\n\t0x32, 0x12, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72,\n\t0x67, 0x65, 0x54, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x22, 0x4f,\n\t0x0a, 0x1a, 0x41, 0x64, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x65,\n\t0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,\n\t0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4c,\n\t0x6f, 0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,\n\t0x98, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x42, 0x79, 0x52,\n\t0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c,\n\t0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67,\n\t0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,\n\t0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,\n\t0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,\n\t0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61,\n\t0x72, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,\n\t0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f,\n\t0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47,\n\t0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,\n\t0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x76, 0x65,\n\t0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x76,\n\t0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67,\n\t0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x52, 0x6f, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52,\n\t0x6f, 0x6f, 0x74, 0x22, 0x62, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x4c, 0x65, 0x61, 0x66, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x01, 0x20, 0x01,\n\t0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x4c, 0x6f,\n\t0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12, 0x2a, 0x0a, 0x06, 0x73,\n\t0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,\n\t0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,\n\t0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c,\n\t0x65, 0x61, 0x66, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x6c, 0x65,\n\t0x61, 0x66, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6d,\n\t0x65, 0x72, 0x6b, 0x6c, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a,\n\t0x0a, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,\n\t0x0c, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a,\n\t0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,\n\t0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,\n\t0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,\n\t0x09, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x65,\n\t0x61, 0x66, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68,\n\t0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x64, 0x65, 0x6e,\n\t0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x43, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75,\n\t0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,\n\t0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,\n\t0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x71,\n\t0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4b, 0x0a,\n\t0x13, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,\n\t0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,\n\t0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,\n\t0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,\n\t0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xdb, 0x06, 0x0a, 0x0b, 0x54,\n\t0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x46, 0x0a, 0x09, 0x51, 0x75,\n\t0x65, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75,\n\t0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x51,\n\t0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,\n\t0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,\n\t0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50,\n\t0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73,\n\t0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,\n\t0x22, 0x00, 0x12, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,\n\t0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c,\n\t0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68,\n\t0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69,\n\t0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50,\n\t0x72, 0x6f, 0x6f, 0x66, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,\n\t0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x69,\n\t0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x24, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73,\n\t0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,\n\t0x74, 0x1a, 0x25, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74,\n\t0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66,\n\t0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65,\n\t0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67,\n\t0x52, 0x6f, 0x6f, 0x74, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e,\n\t0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c,\n\t0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,\n\t0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x6f, 0x6f, 0x74, 0x52,\n\t0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65, 0x74,\n\t0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x21, 0x2e,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72,\n\t0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,\n\t0x1a, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45,\n\t0x6e, 0x74, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70,\n\t0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f,\n\t0x67, 0x12, 0x18, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x69,\n\t0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x72,\n\t0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,\n\t0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53,\n\t0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x23,\n\t0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x71,\n\t0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,\n\t0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x41,\n\t0x64, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65,\n\t0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x47,\n\t0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,\n\t0x21, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,\n\t0x61, 0x76, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,\n\t0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e, 0x47, 0x65,\n\t0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,\n\t0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4e, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e,\n\t0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x2e,\n\t0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x13, 0x54, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x4c,\n\t0x6f, 0x67, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1a, 0x67, 0x69,\n\t0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,\n\t0x74, 0x72, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,\n}\n\nvar (\n\tfile_trillian_log_api_proto_rawDescOnce sync.Once\n\tfile_trillian_log_api_proto_rawDescData = file_trillian_log_api_proto_rawDesc\n)\n\nfunc file_trillian_log_api_proto_rawDescGZIP() []byte {\n\tfile_trillian_log_api_proto_rawDescOnce.Do(func() {\n\t\tfile_trillian_log_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_trillian_log_api_proto_rawDescData)\n\t})\n\treturn file_trillian_log_api_proto_rawDescData\n}\n\nvar file_trillian_log_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)\nvar file_trillian_log_api_proto_goTypes = []any{\n\t(*ChargeTo)(nil),                        // 0: trillian.ChargeTo\n\t(*QueueLeafRequest)(nil),                // 1: trillian.QueueLeafRequest\n\t(*QueueLeafResponse)(nil),               // 2: trillian.QueueLeafResponse\n\t(*GetInclusionProofRequest)(nil),        // 3: trillian.GetInclusionProofRequest\n\t(*GetInclusionProofResponse)(nil),       // 4: trillian.GetInclusionProofResponse\n\t(*GetInclusionProofByHashRequest)(nil),  // 5: trillian.GetInclusionProofByHashRequest\n\t(*GetInclusionProofByHashResponse)(nil), // 6: trillian.GetInclusionProofByHashResponse\n\t(*GetConsistencyProofRequest)(nil),      // 7: trillian.GetConsistencyProofRequest\n\t(*GetConsistencyProofResponse)(nil),     // 8: trillian.GetConsistencyProofResponse\n\t(*GetLatestSignedLogRootRequest)(nil),   // 9: trillian.GetLatestSignedLogRootRequest\n\t(*GetLatestSignedLogRootResponse)(nil),  // 10: trillian.GetLatestSignedLogRootResponse\n\t(*GetEntryAndProofRequest)(nil),         // 11: trillian.GetEntryAndProofRequest\n\t(*GetEntryAndProofResponse)(nil),        // 12: trillian.GetEntryAndProofResponse\n\t(*InitLogRequest)(nil),                  // 13: trillian.InitLogRequest\n\t(*InitLogResponse)(nil),                 // 14: trillian.InitLogResponse\n\t(*AddSequencedLeavesRequest)(nil),       // 15: trillian.AddSequencedLeavesRequest\n\t(*AddSequencedLeavesResponse)(nil),      // 16: trillian.AddSequencedLeavesResponse\n\t(*GetLeavesByRangeRequest)(nil),         // 17: trillian.GetLeavesByRangeRequest\n\t(*GetLeavesByRangeResponse)(nil),        // 18: trillian.GetLeavesByRangeResponse\n\t(*QueuedLogLeaf)(nil),                   // 19: trillian.QueuedLogLeaf\n\t(*LogLeaf)(nil),                         // 20: trillian.LogLeaf\n\t(*Proof)(nil),                           // 21: trillian.Proof\n\t(*SignedLogRoot)(nil),                   // 22: trillian.SignedLogRoot\n\t(*status.Status)(nil),                   // 23: google.rpc.Status\n\t(*timestamppb.Timestamp)(nil),           // 24: google.protobuf.Timestamp\n}\nvar file_trillian_log_api_proto_depIdxs = []int32{\n\t20, // 0: trillian.QueueLeafRequest.leaf:type_name -> trillian.LogLeaf\n\t0,  // 1: trillian.QueueLeafRequest.charge_to:type_name -> trillian.ChargeTo\n\t19, // 2: trillian.QueueLeafResponse.queued_leaf:type_name -> trillian.QueuedLogLeaf\n\t0,  // 3: trillian.GetInclusionProofRequest.charge_to:type_name -> trillian.ChargeTo\n\t21, // 4: trillian.GetInclusionProofResponse.proof:type_name -> trillian.Proof\n\t22, // 5: trillian.GetInclusionProofResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t0,  // 6: trillian.GetInclusionProofByHashRequest.charge_to:type_name -> trillian.ChargeTo\n\t21, // 7: trillian.GetInclusionProofByHashResponse.proof:type_name -> trillian.Proof\n\t22, // 8: trillian.GetInclusionProofByHashResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t0,  // 9: trillian.GetConsistencyProofRequest.charge_to:type_name -> trillian.ChargeTo\n\t21, // 10: trillian.GetConsistencyProofResponse.proof:type_name -> trillian.Proof\n\t22, // 11: trillian.GetConsistencyProofResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t0,  // 12: trillian.GetLatestSignedLogRootRequest.charge_to:type_name -> trillian.ChargeTo\n\t22, // 13: trillian.GetLatestSignedLogRootResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t21, // 14: trillian.GetLatestSignedLogRootResponse.proof:type_name -> trillian.Proof\n\t0,  // 15: trillian.GetEntryAndProofRequest.charge_to:type_name -> trillian.ChargeTo\n\t21, // 16: trillian.GetEntryAndProofResponse.proof:type_name -> trillian.Proof\n\t20, // 17: trillian.GetEntryAndProofResponse.leaf:type_name -> trillian.LogLeaf\n\t22, // 18: trillian.GetEntryAndProofResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t0,  // 19: trillian.InitLogRequest.charge_to:type_name -> trillian.ChargeTo\n\t22, // 20: trillian.InitLogResponse.created:type_name -> trillian.SignedLogRoot\n\t20, // 21: trillian.AddSequencedLeavesRequest.leaves:type_name -> trillian.LogLeaf\n\t0,  // 22: trillian.AddSequencedLeavesRequest.charge_to:type_name -> trillian.ChargeTo\n\t19, // 23: trillian.AddSequencedLeavesResponse.results:type_name -> trillian.QueuedLogLeaf\n\t0,  // 24: trillian.GetLeavesByRangeRequest.charge_to:type_name -> trillian.ChargeTo\n\t20, // 25: trillian.GetLeavesByRangeResponse.leaves:type_name -> trillian.LogLeaf\n\t22, // 26: trillian.GetLeavesByRangeResponse.signed_log_root:type_name -> trillian.SignedLogRoot\n\t20, // 27: trillian.QueuedLogLeaf.leaf:type_name -> trillian.LogLeaf\n\t23, // 28: trillian.QueuedLogLeaf.status:type_name -> google.rpc.Status\n\t24, // 29: trillian.LogLeaf.queue_timestamp:type_name -> google.protobuf.Timestamp\n\t24, // 30: trillian.LogLeaf.integrate_timestamp:type_name -> google.protobuf.Timestamp\n\t1,  // 31: trillian.TrillianLog.QueueLeaf:input_type -> trillian.QueueLeafRequest\n\t3,  // 32: trillian.TrillianLog.GetInclusionProof:input_type -> trillian.GetInclusionProofRequest\n\t5,  // 33: trillian.TrillianLog.GetInclusionProofByHash:input_type -> trillian.GetInclusionProofByHashRequest\n\t7,  // 34: trillian.TrillianLog.GetConsistencyProof:input_type -> trillian.GetConsistencyProofRequest\n\t9,  // 35: trillian.TrillianLog.GetLatestSignedLogRoot:input_type -> trillian.GetLatestSignedLogRootRequest\n\t11, // 36: trillian.TrillianLog.GetEntryAndProof:input_type -> trillian.GetEntryAndProofRequest\n\t13, // 37: trillian.TrillianLog.InitLog:input_type -> trillian.InitLogRequest\n\t15, // 38: trillian.TrillianLog.AddSequencedLeaves:input_type -> trillian.AddSequencedLeavesRequest\n\t17, // 39: trillian.TrillianLog.GetLeavesByRange:input_type -> trillian.GetLeavesByRangeRequest\n\t2,  // 40: trillian.TrillianLog.QueueLeaf:output_type -> trillian.QueueLeafResponse\n\t4,  // 41: trillian.TrillianLog.GetInclusionProof:output_type -> trillian.GetInclusionProofResponse\n\t6,  // 42: trillian.TrillianLog.GetInclusionProofByHash:output_type -> trillian.GetInclusionProofByHashResponse\n\t8,  // 43: trillian.TrillianLog.GetConsistencyProof:output_type -> trillian.GetConsistencyProofResponse\n\t10, // 44: trillian.TrillianLog.GetLatestSignedLogRoot:output_type -> trillian.GetLatestSignedLogRootResponse\n\t12, // 45: trillian.TrillianLog.GetEntryAndProof:output_type -> trillian.GetEntryAndProofResponse\n\t14, // 46: trillian.TrillianLog.InitLog:output_type -> trillian.InitLogResponse\n\t16, // 47: trillian.TrillianLog.AddSequencedLeaves:output_type -> trillian.AddSequencedLeavesResponse\n\t18, // 48: trillian.TrillianLog.GetLeavesByRange:output_type -> trillian.GetLeavesByRangeResponse\n\t40, // [40:49] is the sub-list for method output_type\n\t31, // [31:40] is the sub-list for method input_type\n\t31, // [31:31] is the sub-list for extension type_name\n\t31, // [31:31] is the sub-list for extension extendee\n\t0,  // [0:31] is the sub-list for field type_name\n}\n\nfunc init() { file_trillian_log_api_proto_init() }\nfunc file_trillian_log_api_proto_init() {\n\tif File_trillian_log_api_proto != nil {\n\t\treturn\n\t}\n\tfile_trillian_proto_init()\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_trillian_log_api_proto_rawDesc,\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   21,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_trillian_log_api_proto_goTypes,\n\t\tDependencyIndexes: file_trillian_log_api_proto_depIdxs,\n\t\tMessageInfos:      file_trillian_log_api_proto_msgTypes,\n\t}.Build()\n\tFile_trillian_log_api_proto = out.File\n\tfile_trillian_log_api_proto_rawDesc = nil\n\tfile_trillian_log_api_proto_goTypes = nil\n\tfile_trillian_log_api_proto_depIdxs = nil\n}\n"
        },
        {
          "name": "trillian_log_api.proto",
          "type": "blob",
          "size": 14.57421875,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\npackage trillian;\n\noption go_package = \"github.com/google/trillian\";\noption java_multiple_files = true;\noption java_outer_classname = \"TrillianLogApiProto\";\noption java_package = \"com.google.trillian.proto\";\n\nimport \"google/protobuf/timestamp.proto\";\nimport \"google/rpc/status.proto\";\nimport \"trillian.proto\";\n\n// The TrillianLog service provides access to an append-only Log data structure\n// as described in the [Verifiable Data\n// Structures](docs/papers/VerifiableDataStructures.pdf) paper.\n//\n// The API supports adding new entries to the Merkle tree for a specific Log\n// instance (identified by its log_id) in two modes:\n//  - For a normal log, new leaf entries are queued up for subsequent\n//    inclusion in the log, and the leaves are assigned consecutive leaf_index\n//    values as part of that integration process.\n//  - For a 'pre-ordered log', new entries have an already-defined leaf\n//    ordering, and leaves are only integrated into the Merkle tree when a\n//    contiguous range of leaves is available.\n//\n// The API also supports read operations to retrieve leaf contents, and to\n// provide cryptographic proofs of leaf inclusion and of the append-only nature\n// of the Log.\n//\n// Each API request also includes a charge_to field, which allows API users\n// to provide quota identifiers that should be \"charged\" for each API request\n// (and potentially rejected with codes.ResourceExhausted).\n//\n// Various operations on the API also allows for 'server skew', which can occur\n// when different API requests happen to be handled by different server instances\n// that may not all be up to date.  An API request that is relative to a specific\n// tree size may reach a server instance that is not yet aware of this tree size;\n// in this case the server will typically return an OK response that contains:\n//  - a signed log root that indicates the tree size that it is aware of\n//  - an empty response otherwise.\nservice TrillianLog {\n  // QueueLeaf adds a single leaf to the queue of pending leaves for a normal\n  // log.\n  rpc QueueLeaf(QueueLeafRequest) returns (QueueLeafResponse) {}\n\n  // GetInclusionProof returns an inclusion proof for a leaf with a given index\n  // in a particular tree.\n  //\n  // If the requested tree_size is larger than the server is aware of, the\n  // response will include the latest known log root and an empty proof.\n  rpc GetInclusionProof(GetInclusionProofRequest)\n      returns (GetInclusionProofResponse) {}\n\n  // GetInclusionProofByHash returns an inclusion proof for any leaves that have\n  // the given Merkle hash in a particular tree.\n  //\n  // If any of the leaves that match the given Merkle has have a leaf index that\n  // is beyond the requested tree size, the corresponding proof entry will be empty.\n  rpc GetInclusionProofByHash(GetInclusionProofByHashRequest)\n      returns (GetInclusionProofByHashResponse) {}\n\n  // GetConsistencyProof returns a consistency proof between different sizes of\n  // a particular tree.\n  //\n  // If the requested tree size is larger than the server is aware of,\n  // the response will include the latest known log root and an empty proof.\n  rpc GetConsistencyProof(GetConsistencyProofRequest)\n      returns (GetConsistencyProofResponse) {}\n\n  // GetLatestSignedLogRoot returns the latest log root for a given tree,\n  // and optionally also includes a consistency proof from an earlier tree size\n  // to the new size of the tree.\n  //\n  // If the earlier tree size is larger than the server is aware of,\n  // an InvalidArgument error is returned.\n  rpc GetLatestSignedLogRoot(GetLatestSignedLogRootRequest)\n      returns (GetLatestSignedLogRootResponse) {}\n\n  // GetEntryAndProof returns a log leaf and the corresponding inclusion proof\n  // to a specified tree size, for a given leaf index in a particular tree.\n  //\n  // If the requested tree size is unavailable but the leaf is\n  // in scope for the current tree, the returned proof will be for the\n  // current tree size rather than the requested tree size.\n  rpc GetEntryAndProof(GetEntryAndProofRequest)\n      returns (GetEntryAndProofResponse) {}\n\n  // InitLog initializes a particular tree, creating the initial signed log\n  // root (which will be of size 0).\n  rpc InitLog(InitLogRequest) returns (InitLogResponse) {}\n\n\n  // AddSequencedLeaves adds a batch of leaves with assigned sequence numbers\n  // to a pre-ordered log.  The indices of the provided leaves must be contiguous.\n  rpc AddSequencedLeaves(AddSequencedLeavesRequest)\n      returns (AddSequencedLeavesResponse) {}\n\n  // GetLeavesByRange returns a batch of leaves whose leaf indices are in a\n  // sequential range.\n  rpc GetLeavesByRange(GetLeavesByRangeRequest)\n      returns (GetLeavesByRangeResponse) {}\n}\n\n// ChargeTo describes the user(s) associated with the request whose quota should\n// be checked and charged.\nmessage ChargeTo {\n  // user is a list of personality-defined strings.\n  // Trillian will treat them as /User/%{user}/... keys when checking and\n  // charging quota.\n  // If one or more of the specified users has insufficient quota, the\n  // request will be denied.\n  //\n  // As an example, a Certificate Transparency frontend might set the following\n  // user strings when sending a QueueLeaf request to the Trillian log:\n  //   - The requesting IP address.\n  //     This would limit the number of requests per IP.\n  //   - The \"intermediate-<hash>\" for each of the intermediate certificates in\n  //     the submitted chain.\n  //     This would have the effect of limiting the rate of submissions under\n  //     a given intermediate/root.\n  repeated string user = 1;\n}\n\nmessage QueueLeafRequest {\n  int64 log_id = 1;\n  LogLeaf leaf = 2;\n  ChargeTo charge_to = 3;\n}\n\nmessage QueueLeafResponse {\n  // queued_leaf describes the leaf which is or will be incorporated into the\n  // Log.  If the submitted leaf was already present in the Log (as indicated by\n  // its leaf identity hash), then the returned leaf will be the pre-existing\n  // leaf entry rather than the submitted leaf.\n  QueuedLogLeaf queued_leaf = 2;\n}\n\nmessage GetInclusionProofRequest {\n  int64 log_id = 1;\n  int64 leaf_index = 2;\n  int64 tree_size = 3;\n  ChargeTo charge_to = 4;\n}\n\nmessage GetInclusionProofResponse {\n  // The proof field may be empty if the requested tree_size was larger\n  // than that available at the server (e.g. because there is skew between\n  // server instances, and an earlier client request was processed by a\n  // more up-to-date instance).  In this case, the signed_log_root\n  // field will indicate the tree size that the server is aware of, and\n  // the proof field will be empty.\n  Proof proof = 2;\n  SignedLogRoot signed_log_root = 3;\n}\n\nmessage GetInclusionProofByHashRequest {\n  int64 log_id = 1;\n  // The leaf hash field provides the Merkle tree hash of the leaf entry\n  // to be retrieved.\n  bytes leaf_hash = 2;\n  int64 tree_size = 3;\n  bool order_by_sequence = 4;\n  ChargeTo charge_to = 5;\n}\n\nmessage GetInclusionProofByHashResponse {\n  // Logs can potentially contain leaves with duplicate hashes so it's possible\n  // for this to return multiple proofs.  If the leaf index for a particular\n  // instance of the requested Merkle leaf hash is beyond the requested tree\n  // size, the corresponding proof entry will be missing.\n  repeated Proof proof = 2;\n  SignedLogRoot signed_log_root = 3;\n}\n\nmessage GetConsistencyProofRequest {\n  int64 log_id = 1;\n  int64 first_tree_size = 2;\n  int64 second_tree_size = 3;\n  ChargeTo charge_to = 4;\n}\n\nmessage GetConsistencyProofResponse {\n  // The proof field may be empty if the requested tree_size was larger\n  // than that available at the server (e.g. because there is skew between\n  // server instances, and an earlier client request was processed by a\n  // more up-to-date instance).  In this case, the signed_log_root\n  // field will indicate the tree size that the server is aware of, and\n  // the proof field will be empty.\n  Proof proof = 2;\n  SignedLogRoot signed_log_root = 3;\n}\n\nmessage GetLatestSignedLogRootRequest {\n  int64 log_id = 1;\n  ChargeTo charge_to = 2;\n  // If first_tree_size is non-zero, the response will include a consistency\n  // proof between first_tree_size and the new tree size (if not smaller).\n  int64 first_tree_size = 3;\n}\n\nmessage GetLatestSignedLogRootResponse {\n  SignedLogRoot signed_log_root = 2;\n  // proof is filled in with a consistency proof if first_tree_size in\n  // GetLatestSignedLogRootRequest is non-zero (and within the tree size\n  // available at the server).\n  Proof proof = 3;\n}\n\nmessage GetEntryAndProofRequest {\n  int64 log_id = 1;\n  int64 leaf_index = 2;\n  int64 tree_size = 3;\n  ChargeTo charge_to = 4;\n}\n\nmessage GetEntryAndProofResponse {\n  Proof proof = 2;\n  LogLeaf leaf = 3;\n  SignedLogRoot signed_log_root = 4;\n}\n\nmessage InitLogRequest {\n  int64 log_id = 1;\n  ChargeTo charge_to = 2;\n}\n\nmessage InitLogResponse {\n  SignedLogRoot created = 1;\n}\n\nmessage AddSequencedLeavesRequest {\n  int64 log_id = 1;\n  repeated LogLeaf leaves = 2;\n  ChargeTo charge_to = 4;\n}\n\nmessage AddSequencedLeavesResponse {\n  // Same number and order as in the corresponding request.\n  repeated QueuedLogLeaf results = 2;\n}\n\nmessage GetLeavesByRangeRequest {\n  int64 log_id = 1;\n  int64 start_index = 2;\n  int64 count = 3;\n  ChargeTo charge_to = 4;\n}\n\nmessage GetLeavesByRangeResponse {\n  // Returned log leaves starting from the `start_index` of the request, in\n  // order. There may be fewer than `request.count` leaves returned, if the\n  // requested range extended beyond the size of the tree or if the server opted\n  // to return fewer leaves than requested.\n  repeated LogLeaf leaves = 1;\n  SignedLogRoot signed_log_root = 2;\n}\n\n// QueuedLogLeaf provides the result of submitting an entry to the log.\n// TODO(pavelkalinnikov): Consider renaming it to AddLogLeafResult or the like.\nmessage QueuedLogLeaf {\n  // The leaf as it was stored by Trillian. Empty unless `status.code` is:\n  //  - `google.rpc.OK`: the `leaf` data is the same as in the request.\n  //  - `google.rpc.ALREADY_EXISTS` or 'google.rpc.FAILED_PRECONDITION`: the\n  //    `leaf` is the conflicting one already in the log.\n  LogLeaf leaf = 1;\n\n  // The status of adding the leaf.\n  //  - `google.rpc.OK`: successfully added.\n  //  - `google.rpc.ALREADY_EXISTS`: the leaf is a duplicate of an already\n  //    existing one. Either `leaf_identity_hash` is the same in the `LOG`\n  //    mode, or `leaf_index` in the `PREORDERED_LOG`.\n  //  - `google.rpc.FAILED_PRECONDITION`: A conflicting entry is already\n  //    present in the log, e.g., same `leaf_index` but different `leaf_data`.\n  google.rpc.Status status = 2;\n}\n\n// LogLeaf describes a leaf in the Log's Merkle tree, corresponding to a single log entry.\n// Each leaf has a unique leaf index in the scope of this tree.  Clients submitting new\n// leaf entries should only set the following fields:\n//   - leaf_value\n//   - extra_data (optionally)\n//   - leaf_identity_hash (optionally)\n//   - leaf_index (iff the log is a PREORDERED_LOG)\nmessage LogLeaf {\n  // merkle_leaf_hash holds the Merkle leaf hash over leaf_value.  This is\n  // calculated by the Trillian server when leaves are added to the tree, using\n  // the defined hashing algorithm and strategy for the tree; as such, the client\n  // does not need to set it on leaf submissions.\n  bytes merkle_leaf_hash = 1;\n\n  // leaf_value holds the data that forms the value of the Merkle tree leaf.\n  // The client should set this field on all leaf submissions, and is\n  // responsible for ensuring its validity (the Trillian server treats it as an\n  // opaque blob).\n  bytes leaf_value = 2;\n\n  // extra_data holds additional data associated with the Merkle tree leaf.\n  // The client may set this data on leaf submissions, and the Trillian server\n  // will return it on subsequent read operations. However, the contents of\n  // this field are not covered by and do not affect the Merkle tree hash\n  // calculations.\n  bytes extra_data = 3;\n\n  // leaf_index indicates the index of this leaf in the Merkle tree.\n  // This field is returned on all read operations, but should only be\n  // set for leaf submissions in PREORDERED_LOG mode (for a normal log\n  // the leaf index is assigned by Trillian when the submitted leaf is\n  // integrated into the Merkle tree).\n  int64 leaf_index = 4;\n\n  // leaf_identity_hash provides a hash value that indicates the client's\n  // concept of which leaf entries should be considered identical.\n  //\n  // This mechanism allows the client personality to indicate that two leaves\n  // should be considered \"duplicates\" even though their `leaf_value`s differ.\n  //\n  // If this is not set on leaf submissions, the Trillian server will take its\n  // value to be the same as merkle_leaf_hash (and thus only leaves with\n  // identical leaf_value contents will be considered identical).\n  //\n  // For example, in Certificate Transparency each certificate submission is\n  // associated with a submission timestamp, but subsequent submissions of the\n  // same certificate should be considered identical.  This is achieved\n  // by setting the leaf identity hash to a hash over (just) the certificate,\n  // whereas the Merkle leaf hash encompasses both the certificate and its\n  // submission time -- allowing duplicate certificates to be detected.\n  //\n  //\n  // Continuing the CT example, for a CT mirror personality (which must allow\n  // dupes since the source log could contain them), the part of the\n  // personality which fetches and submits the entries might set\n  // `leaf_identity_hash` to `H(leaf_index||cert)`.\n  //\n  // TODO(pavelkalinnikov): Consider instead using `H(cert)` and allowing\n  // identity hash dupes in `PREORDERED_LOG` mode, for it can later be\n  // upgraded to `LOG` which will need to correctly detect duplicates with\n  // older entries when new ones get queued.\n  bytes leaf_identity_hash = 5;\n\n  // queue_timestamp holds the time at which this leaf was queued for\n  // inclusion in the Log, or zero if the entry was submitted without\n  // queuing. Clients should not set this field on submissions.\n  google.protobuf.Timestamp queue_timestamp = 6;\n\n  // integrate_timestamp holds the time at which this leaf was integrated into\n  // the tree.  Clients should not set this field on submissions.\n  google.protobuf.Timestamp integrate_timestamp = 7;\n}\n"
        },
        {
          "name": "trillian_log_api_grpc.pb.go",
          "type": "blob",
          "size": 25.490234375,
          "content": "// Copyright 2016 Google LLC. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.20.1\n// source: trillian_log_api.proto\n\npackage trillian\n\nimport (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\n\nconst (\n\tTrillianLog_QueueLeaf_FullMethodName               = \"/trillian.TrillianLog/QueueLeaf\"\n\tTrillianLog_GetInclusionProof_FullMethodName       = \"/trillian.TrillianLog/GetInclusionProof\"\n\tTrillianLog_GetInclusionProofByHash_FullMethodName = \"/trillian.TrillianLog/GetInclusionProofByHash\"\n\tTrillianLog_GetConsistencyProof_FullMethodName     = \"/trillian.TrillianLog/GetConsistencyProof\"\n\tTrillianLog_GetLatestSignedLogRoot_FullMethodName  = \"/trillian.TrillianLog/GetLatestSignedLogRoot\"\n\tTrillianLog_GetEntryAndProof_FullMethodName        = \"/trillian.TrillianLog/GetEntryAndProof\"\n\tTrillianLog_InitLog_FullMethodName                 = \"/trillian.TrillianLog/InitLog\"\n\tTrillianLog_AddSequencedLeaves_FullMethodName      = \"/trillian.TrillianLog/AddSequencedLeaves\"\n\tTrillianLog_GetLeavesByRange_FullMethodName        = \"/trillian.TrillianLog/GetLeavesByRange\"\n)\n\n// TrillianLogClient is the client API for TrillianLog service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\n//\n// The TrillianLog service provides access to an append-only Log data structure\n// as described in the [Verifiable Data\n// Structures](docs/papers/VerifiableDataStructures.pdf) paper.\n//\n// The API supports adding new entries to the Merkle tree for a specific Log\n// instance (identified by its log_id) in two modes:\n//   - For a normal log, new leaf entries are queued up for subsequent\n//     inclusion in the log, and the leaves are assigned consecutive leaf_index\n//     values as part of that integration process.\n//   - For a 'pre-ordered log', new entries have an already-defined leaf\n//     ordering, and leaves are only integrated into the Merkle tree when a\n//     contiguous range of leaves is available.\n//\n// The API also supports read operations to retrieve leaf contents, and to\n// provide cryptographic proofs of leaf inclusion and of the append-only nature\n// of the Log.\n//\n// Each API request also includes a charge_to field, which allows API users\n// to provide quota identifiers that should be \"charged\" for each API request\n// (and potentially rejected with codes.ResourceExhausted).\n//\n// Various operations on the API also allows for 'server skew', which can occur\n// when different API requests happen to be handled by different server instances\n// that may not all be up to date.  An API request that is relative to a specific\n// tree size may reach a server instance that is not yet aware of this tree size;\n// in this case the server will typically return an OK response that contains:\n//   - a signed log root that indicates the tree size that it is aware of\n//   - an empty response otherwise.\ntype TrillianLogClient interface {\n\t// QueueLeaf adds a single leaf to the queue of pending leaves for a normal\n\t// log.\n\tQueueLeaf(ctx context.Context, in *QueueLeafRequest, opts ...grpc.CallOption) (*QueueLeafResponse, error)\n\t// GetInclusionProof returns an inclusion proof for a leaf with a given index\n\t// in a particular tree.\n\t//\n\t// If the requested tree_size is larger than the server is aware of, the\n\t// response will include the latest known log root and an empty proof.\n\tGetInclusionProof(ctx context.Context, in *GetInclusionProofRequest, opts ...grpc.CallOption) (*GetInclusionProofResponse, error)\n\t// GetInclusionProofByHash returns an inclusion proof for any leaves that have\n\t// the given Merkle hash in a particular tree.\n\t//\n\t// If any of the leaves that match the given Merkle has have a leaf index that\n\t// is beyond the requested tree size, the corresponding proof entry will be empty.\n\tGetInclusionProofByHash(ctx context.Context, in *GetInclusionProofByHashRequest, opts ...grpc.CallOption) (*GetInclusionProofByHashResponse, error)\n\t// GetConsistencyProof returns a consistency proof between different sizes of\n\t// a particular tree.\n\t//\n\t// If the requested tree size is larger than the server is aware of,\n\t// the response will include the latest known log root and an empty proof.\n\tGetConsistencyProof(ctx context.Context, in *GetConsistencyProofRequest, opts ...grpc.CallOption) (*GetConsistencyProofResponse, error)\n\t// GetLatestSignedLogRoot returns the latest log root for a given tree,\n\t// and optionally also includes a consistency proof from an earlier tree size\n\t// to the new size of the tree.\n\t//\n\t// If the earlier tree size is larger than the server is aware of,\n\t// an InvalidArgument error is returned.\n\tGetLatestSignedLogRoot(ctx context.Context, in *GetLatestSignedLogRootRequest, opts ...grpc.CallOption) (*GetLatestSignedLogRootResponse, error)\n\t// GetEntryAndProof returns a log leaf and the corresponding inclusion proof\n\t// to a specified tree size, for a given leaf index in a particular tree.\n\t//\n\t// If the requested tree size is unavailable but the leaf is\n\t// in scope for the current tree, the returned proof will be for the\n\t// current tree size rather than the requested tree size.\n\tGetEntryAndProof(ctx context.Context, in *GetEntryAndProofRequest, opts ...grpc.CallOption) (*GetEntryAndProofResponse, error)\n\t// InitLog initializes a particular tree, creating the initial signed log\n\t// root (which will be of size 0).\n\tInitLog(ctx context.Context, in *InitLogRequest, opts ...grpc.CallOption) (*InitLogResponse, error)\n\t// AddSequencedLeaves adds a batch of leaves with assigned sequence numbers\n\t// to a pre-ordered log.  The indices of the provided leaves must be contiguous.\n\tAddSequencedLeaves(ctx context.Context, in *AddSequencedLeavesRequest, opts ...grpc.CallOption) (*AddSequencedLeavesResponse, error)\n\t// GetLeavesByRange returns a batch of leaves whose leaf indices are in a\n\t// sequential range.\n\tGetLeavesByRange(ctx context.Context, in *GetLeavesByRangeRequest, opts ...grpc.CallOption) (*GetLeavesByRangeResponse, error)\n}\n\ntype trillianLogClient struct {\n\tcc grpc.ClientConnInterface\n}\n\nfunc NewTrillianLogClient(cc grpc.ClientConnInterface) TrillianLogClient {\n\treturn &trillianLogClient{cc}\n}\n\nfunc (c *trillianLogClient) QueueLeaf(ctx context.Context, in *QueueLeafRequest, opts ...grpc.CallOption) (*QueueLeafResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(QueueLeafResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_QueueLeaf_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetInclusionProof(ctx context.Context, in *GetInclusionProofRequest, opts ...grpc.CallOption) (*GetInclusionProofResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetInclusionProofResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetInclusionProof_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetInclusionProofByHash(ctx context.Context, in *GetInclusionProofByHashRequest, opts ...grpc.CallOption) (*GetInclusionProofByHashResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetInclusionProofByHashResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetInclusionProofByHash_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetConsistencyProof(ctx context.Context, in *GetConsistencyProofRequest, opts ...grpc.CallOption) (*GetConsistencyProofResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetConsistencyProofResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetConsistencyProof_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetLatestSignedLogRoot(ctx context.Context, in *GetLatestSignedLogRootRequest, opts ...grpc.CallOption) (*GetLatestSignedLogRootResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetLatestSignedLogRootResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetLatestSignedLogRoot_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetEntryAndProof(ctx context.Context, in *GetEntryAndProofRequest, opts ...grpc.CallOption) (*GetEntryAndProofResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetEntryAndProofResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetEntryAndProof_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) InitLog(ctx context.Context, in *InitLogRequest, opts ...grpc.CallOption) (*InitLogResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(InitLogResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_InitLog_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) AddSequencedLeaves(ctx context.Context, in *AddSequencedLeavesRequest, opts ...grpc.CallOption) (*AddSequencedLeavesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(AddSequencedLeavesResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_AddSequencedLeaves_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\nfunc (c *trillianLogClient) GetLeavesByRange(ctx context.Context, in *GetLeavesByRangeRequest, opts ...grpc.CallOption) (*GetLeavesByRangeResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetLeavesByRangeResponse)\n\terr := c.cc.Invoke(ctx, TrillianLog_GetLeavesByRange_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n\n// TrillianLogServer is the server API for TrillianLog service.\n// All implementations should embed UnimplementedTrillianLogServer\n// for forward compatibility.\n//\n// The TrillianLog service provides access to an append-only Log data structure\n// as described in the [Verifiable Data\n// Structures](docs/papers/VerifiableDataStructures.pdf) paper.\n//\n// The API supports adding new entries to the Merkle tree for a specific Log\n// instance (identified by its log_id) in two modes:\n//   - For a normal log, new leaf entries are queued up for subsequent\n//     inclusion in the log, and the leaves are assigned consecutive leaf_index\n//     values as part of that integration process.\n//   - For a 'pre-ordered log', new entries have an already-defined leaf\n//     ordering, and leaves are only integrated into the Merkle tree when a\n//     contiguous range of leaves is available.\n//\n// The API also supports read operations to retrieve leaf contents, and to\n// provide cryptographic proofs of leaf inclusion and of the append-only nature\n// of the Log.\n//\n// Each API request also includes a charge_to field, which allows API users\n// to provide quota identifiers that should be \"charged\" for each API request\n// (and potentially rejected with codes.ResourceExhausted).\n//\n// Various operations on the API also allows for 'server skew', which can occur\n// when different API requests happen to be handled by different server instances\n// that may not all be up to date.  An API request that is relative to a specific\n// tree size may reach a server instance that is not yet aware of this tree size;\n// in this case the server will typically return an OK response that contains:\n//   - a signed log root that indicates the tree size that it is aware of\n//   - an empty response otherwise.\ntype TrillianLogServer interface {\n\t// QueueLeaf adds a single leaf to the queue of pending leaves for a normal\n\t// log.\n\tQueueLeaf(context.Context, *QueueLeafRequest) (*QueueLeafResponse, error)\n\t// GetInclusionProof returns an inclusion proof for a leaf with a given index\n\t// in a particular tree.\n\t//\n\t// If the requested tree_size is larger than the server is aware of, the\n\t// response will include the latest known log root and an empty proof.\n\tGetInclusionProof(context.Context, *GetInclusionProofRequest) (*GetInclusionProofResponse, error)\n\t// GetInclusionProofByHash returns an inclusion proof for any leaves that have\n\t// the given Merkle hash in a particular tree.\n\t//\n\t// If any of the leaves that match the given Merkle has have a leaf index that\n\t// is beyond the requested tree size, the corresponding proof entry will be empty.\n\tGetInclusionProofByHash(context.Context, *GetInclusionProofByHashRequest) (*GetInclusionProofByHashResponse, error)\n\t// GetConsistencyProof returns a consistency proof between different sizes of\n\t// a particular tree.\n\t//\n\t// If the requested tree size is larger than the server is aware of,\n\t// the response will include the latest known log root and an empty proof.\n\tGetConsistencyProof(context.Context, *GetConsistencyProofRequest) (*GetConsistencyProofResponse, error)\n\t// GetLatestSignedLogRoot returns the latest log root for a given tree,\n\t// and optionally also includes a consistency proof from an earlier tree size\n\t// to the new size of the tree.\n\t//\n\t// If the earlier tree size is larger than the server is aware of,\n\t// an InvalidArgument error is returned.\n\tGetLatestSignedLogRoot(context.Context, *GetLatestSignedLogRootRequest) (*GetLatestSignedLogRootResponse, error)\n\t// GetEntryAndProof returns a log leaf and the corresponding inclusion proof\n\t// to a specified tree size, for a given leaf index in a particular tree.\n\t//\n\t// If the requested tree size is unavailable but the leaf is\n\t// in scope for the current tree, the returned proof will be for the\n\t// current tree size rather than the requested tree size.\n\tGetEntryAndProof(context.Context, *GetEntryAndProofRequest) (*GetEntryAndProofResponse, error)\n\t// InitLog initializes a particular tree, creating the initial signed log\n\t// root (which will be of size 0).\n\tInitLog(context.Context, *InitLogRequest) (*InitLogResponse, error)\n\t// AddSequencedLeaves adds a batch of leaves with assigned sequence numbers\n\t// to a pre-ordered log.  The indices of the provided leaves must be contiguous.\n\tAddSequencedLeaves(context.Context, *AddSequencedLeavesRequest) (*AddSequencedLeavesResponse, error)\n\t// GetLeavesByRange returns a batch of leaves whose leaf indices are in a\n\t// sequential range.\n\tGetLeavesByRange(context.Context, *GetLeavesByRangeRequest) (*GetLeavesByRangeResponse, error)\n}\n\n// UnimplementedTrillianLogServer should be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedTrillianLogServer struct{}\n\nfunc (UnimplementedTrillianLogServer) QueueLeaf(context.Context, *QueueLeafRequest) (*QueueLeafResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method QueueLeaf not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetInclusionProof(context.Context, *GetInclusionProofRequest) (*GetInclusionProofResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetInclusionProof not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetInclusionProofByHash(context.Context, *GetInclusionProofByHashRequest) (*GetInclusionProofByHashResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetInclusionProofByHash not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetConsistencyProof(context.Context, *GetConsistencyProofRequest) (*GetConsistencyProofResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetConsistencyProof not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetLatestSignedLogRoot(context.Context, *GetLatestSignedLogRootRequest) (*GetLatestSignedLogRootResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetLatestSignedLogRoot not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetEntryAndProof(context.Context, *GetEntryAndProofRequest) (*GetEntryAndProofResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetEntryAndProof not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) InitLog(context.Context, *InitLogRequest) (*InitLogResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method InitLog not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) AddSequencedLeaves(context.Context, *AddSequencedLeavesRequest) (*AddSequencedLeavesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method AddSequencedLeaves not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) GetLeavesByRange(context.Context, *GetLeavesByRangeRequest) (*GetLeavesByRangeResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetLeavesByRange not implemented\")\n}\nfunc (UnimplementedTrillianLogServer) testEmbeddedByValue() {}\n\n// UnsafeTrillianLogServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to TrillianLogServer will\n// result in compilation errors.\ntype UnsafeTrillianLogServer interface {\n\tmustEmbedUnimplementedTrillianLogServer()\n}\n\nfunc RegisterTrillianLogServer(s grpc.ServiceRegistrar, srv TrillianLogServer) {\n\t// If the following call pancis, it indicates UnimplementedTrillianLogServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&TrillianLog_ServiceDesc, srv)\n}\n\nfunc _TrillianLog_QueueLeaf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(QueueLeafRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).QueueLeaf(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_QueueLeaf_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).QueueLeaf(ctx, req.(*QueueLeafRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetInclusionProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetInclusionProofRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetInclusionProof(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetInclusionProof_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetInclusionProof(ctx, req.(*GetInclusionProofRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetInclusionProofByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetInclusionProofByHashRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetInclusionProofByHash(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetInclusionProofByHash_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetInclusionProofByHash(ctx, req.(*GetInclusionProofByHashRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetConsistencyProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetConsistencyProofRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetConsistencyProof(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetConsistencyProof_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetConsistencyProof(ctx, req.(*GetConsistencyProofRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetLatestSignedLogRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetLatestSignedLogRootRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetLatestSignedLogRoot(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetLatestSignedLogRoot_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetLatestSignedLogRoot(ctx, req.(*GetLatestSignedLogRootRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetEntryAndProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetEntryAndProofRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetEntryAndProof(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetEntryAndProof_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetEntryAndProof(ctx, req.(*GetEntryAndProofRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_InitLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(InitLogRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).InitLog(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_InitLog_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).InitLog(ctx, req.(*InitLogRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_AddSequencedLeaves_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AddSequencedLeavesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).AddSequencedLeaves(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_AddSequencedLeaves_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).AddSequencedLeaves(ctx, req.(*AddSequencedLeavesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\nfunc _TrillianLog_GetLeavesByRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetLeavesByRangeRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(TrillianLogServer).GetLeavesByRange(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: TrillianLog_GetLeavesByRange_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(TrillianLogServer).GetLeavesByRange(ctx, req.(*GetLeavesByRangeRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// TrillianLog_ServiceDesc is the grpc.ServiceDesc for TrillianLog service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar TrillianLog_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"trillian.TrillianLog\",\n\tHandlerType: (*TrillianLogServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"QueueLeaf\",\n\t\t\tHandler:    _TrillianLog_QueueLeaf_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetInclusionProof\",\n\t\t\tHandler:    _TrillianLog_GetInclusionProof_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetInclusionProofByHash\",\n\t\t\tHandler:    _TrillianLog_GetInclusionProofByHash_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetConsistencyProof\",\n\t\t\tHandler:    _TrillianLog_GetConsistencyProof_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetLatestSignedLogRoot\",\n\t\t\tHandler:    _TrillianLog_GetLatestSignedLogRoot_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetEntryAndProof\",\n\t\t\tHandler:    _TrillianLog_GetEntryAndProof_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"InitLog\",\n\t\t\tHandler:    _TrillianLog_InitLog_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"AddSequencedLeaves\",\n\t\t\tHandler:    _TrillianLog_AddSequencedLeaves_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetLeavesByRange\",\n\t\t\tHandler:    _TrillianLog_GetLeavesByRange_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"trillian_log_api.proto\",\n}\n"
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}