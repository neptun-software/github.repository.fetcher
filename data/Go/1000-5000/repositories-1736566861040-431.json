{
  "metadata": {
    "timestamp": 1736566861040,
    "page": 431,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "digitalocean/doctl",
      "stars": 3275,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".do",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2353515625,
          "content": ".goxc.local.json\n.DS_Store\nbuilds\ndoit\n.vscode\n.idea/\nproject.json\n.cover\ndist\npublic\ndocs/content\n*.swp\n*.swo\ncmd/doctl/doctl\n\n_vendor-*\n\n/out\n\n# Build artifacts\nDockerfile-e\n\n# Snapcraft\nparts/\nprime/\nstage/\ndoctl_v*.snap\nsnap/.snapcraft/\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 1.1552734375,
          "content": "project_name: doctl\nversion: 2\nbuilds:\n- main: ./cmd/doctl/main.go\n  env:\n  - CGO_ENABLED=0\n  - GO111MODULE=on\n  flags:\n  - -mod=vendor\n  - -v\n  ldflags:\n  - -X github.com/digitalocean/doctl.Build={{ .ShortCommit }}\n  - -X github.com/digitalocean/doctl.Major={{ .Major }}\n  - -X github.com/digitalocean/doctl.Minor={{ .Minor }}\n  - -X github.com/digitalocean/doctl.Patch={{ .Patch }}\n  - -X github.com/digitalocean/doctl.Label={{ if .IsSnapshot }}snapshot{{ else }}release{{ end }}\n  goos:\n  - windows\n  - darwin\n  - linux\n  ignore:\n  - goos: darwin\n    goarch: 386\n\narchives:\n- name_template: \"doctl-{{ .Version }}-{{ .Os }}-{{ .Arch }}\"\n  format_overrides:\n  - goos: windows\n    format: zip\n  files: [a-workaround-to-include-only-the-binary*]\n  wrap_in_directory: false\n\nsource:\n  enabled: true\n  name_template: 'doctl-{{ .Version }}-source'\n\nchecksum:\n  name_template: \"doctl-{{ .Version }}-checksums.sha256\"\n\ndockers:\n- dockerfile: Dockerfile.goreleaser\n  image_templates:\n  - \"digitalocean/doctl:latest\"\n  - \"digitalocean/doctl:{{ .Major }}-latest\"\n  - \"digitalocean/doctl:{{ .Version }}\"\n\nrelease:\n  github:\n    owner: digitalocean\n    name: doctl\n\nchangelog:\n  disable: false\n"
        },
        {
          "name": ".whitesource",
          "type": "blob",
          "size": 0.134765625,
          "content": "{\n  \"checkRunSettings\": {\n    \"vulnerableCheckRunConclusionLevel\": \"success\"\n  },\n  \"issueSettings\": {\n    \"minSeverityLevel\": \"LOW\"\n  }\n}"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 11.041015625,
          "content": "# Change Log\n\nChangelog moved to Release Notes in [Github Releases](https://github.com/digitalocean/doctl/releases)\n\n## [1.24.1] = 2019-07-29\n\n- PR #525 - @hilary - release containers to dockerhub\n\n## [1.24.0] = 2019-07-29\n\n- PR #523 - @hilary - explicitly include .kube/config.lock in snapcraft.yml\n- PR #522 - @bentranter - Migrate from mockery to gomock\n- PR #521 - @hilary - release in one step leveraging goreleaser\n- PR #520 - @hilary - update vendored modules\n- PR #519 - @hilary - add shellcheck to travis config\n- PR #518 - @hilary - update snapcraft config per snapcraft\n- PR #517 - @hilary - remove antique bintray install/release code\n- PR #515 - @hilary - Bump and tag\n- PR #514 - @hilary - Remove hardcoded version\n- PR #513 - @hilary - fix make docker_build\n\n## [1.23.1] = 2019-07-22\n\n- PR #510 - @bentranter - Add .exe suffix to Windows binary filenames\n- PR #508 - @bentranter - Fix distfile basename in staging script\n\n## [1.23.0] = 2019-07-22\n\n- PR #505 - @sunny-b - dbaas: add private-network-uuid to create, migrate, and replica create\n- PR #503 - @hilary - try proposed work-around for snap in production\n- PR #502 - @hilary - adopt shellcheck\n- PR #501 - @hilary - add descriptions to `make help`\n\n## [1.22.0] = 2019-07-18\n\n- PR #498 - @hilary - Makefile improvements\n- PR #497 - @andrewsomething - Re-add the logic setting LDFLAGS in scripts/stage.sh (Fixes: #496).\n- PR #494 - @bentranter - Write JSON for nil slices as [] instead of null\n- PR #491 - @hilary - build snap using go mod vendor\n- PR #490 - @hilary - consolidate version logic\n\n## [1.21.1] - 2019-07-14\n\n- PR #488 - @hilary - add make changelog using github-release-notes\n- PR #487 - @hilary - clean build dir before building\n- PR #486 - @hilary - ensure tags are up to date before using\n\n## [1.21.0] - 2019-07-11\n\n- PR #482 - @eddiezane - Allow completion of aliases in zsh\n- PR #477 - @hilary - describe current status of snap in README\n- PR #474 - @DazWilkin - Support \"Are you sure?\" prompting\n- PR #473 - @KritR - Added NixPkgs as Package Manager Option\n- PR #472 - @hilary - migrate from go dep to go modules\n\n## [1.20.1] - 2019-06-14\n\n - #471 add macport to README - @hilary\n - #469 set default location for config file to configPath - @hilary\n - #468 advise when not to use snap, revise README for flow - @hilary\n - #467 set snap version using tag - @hilary\n\n## [1.20.0] - 2019-06-11\n\n - #465 fix typo in CONTRIBUTING.md - @senechko\n - #463 Add kubernetes delete-node and replace-node commands, deprecate and hide recycle - @bouk\n - #456 tag the release with the release tag - @hilary\n\n## [1.19.0] - 2019-05-31\n\n - #454 Ensure all 'get' and 'list' commands support the 'format' flag - @andrewsomething\n - #453 fix doctl compute ssh in snap - @hilary\n - #450 update snap build - @hilary\n - #447 Unhide the command \"completion\" + prevent it from being autocompleted - @kamaln7\n\n## [1.18.0] - 2019-05-15\n\n - #443 Remove beta flag from Kubernetes commands. - @adamwg\n - #442 Add support for Kubernetes cluster upgrades. - @adamwg\n - #440 Add flag to set local KubeConfig's current-context. - @eddiezane\n - #426 Add support for configuring Kubernetes maintenance windows. - @fatih\n\n## [1.17.0] - 2019-05-08\n\n - #438 Remove need to opt-in to database commands. - @andrewsomething\n - #420 Allow creating Volumes from a Snapshots. - @bentranter\n\n## [1.16.0] - 2019-04-25\n\n- #431 Godo v1.13.0 + Tag Support for Volumes + Vol Snapshots - @jcodybaker\n- #430 fix --tag for kubernetes create/update - @jcodybaker\n- #429 remove flaky tip from travis - @hilary\n- #428 Disable terminal ECHO flag when prompting for auth token - @waynr\n- #427 add mock assertions for database service - @sunny-b\n\n## [1.15.0] - 2019-04-9\n\n- #422 update CONTRIBUTING.md with info on how to update vendored code - @mregmi\n- #421 Add support for managed databases - @sunny-b\n\n## [1.14.0] - 2019-03-11\n\n- #415 Add support for custom domains in Spaces CDN - @xornivore\n- #414 Clean up out of sync vendor deps - @xornivore\n- #408 k8s: Fix case where kube.Get returns a nil cluster - @bouk\n- #401 k8s: Fetch credentials after cluster is provisioned - @bouk\n- #398 Link to docs to create a Github token - @bouk\n- #392 Simplify newline trimming in retrieveUserInput - @timoreimann\n\n## [1.13.0] - 2019-01-16\n\n- #393 Fix linter violations - @timoreimann\n- #391 doks: Fix node-pool flags when creating cluster - @bouk\n- #388 errors: Don't print superfluous newlines when logging - @bouk\n- #387 k8s: Use ExecCredential for authentication - @bouk\n\n## [1.12.2] - 2018-12-09\n\n- #383 Fix bad default for cluster node sizes, improve help and warn of kubeconfig expiry date.\n\n## [1.12.1] - 2018-12-09\n\n- #354 volumes: Fix droplet ID display when listing volumes - @adamwg\n- #357 Change snap to classic confinement - @itbm\n- #361 Update help for multi-argument commands - @bengadbois\n- #369 No longer require ip-address when creating domains - @andrewsomething\n- #372 Add handling of kubeconfig git files for kubernetes commands - @aybabtme\n- #379 Expose suitable regions, versions and node sizes in kubernetes commands - @aybabtme\n\n## [1.12.0] - 2018-11-26\n\n- #370 Projects API is no longer in beta. See https://developers.digitalocean.com/documentation/v2/#projects for more details - @mchitten\n- #365 Add support for kubernetes API [beta] - @aybabtme\n\n## [1.11.0] - 2018-10-01\n\n- #348 Add support for projects API [beta] - @mchitten\n\n## [1.10.0] - 2018-10-01\n\n- #348 Add support for tagging Images. - @hugocorbucci\n\n## [1.9.0] - 2018-08-27\n\n- #343 Add support for Spaces CDN. - @sunny-b\n\n## [1.8.3] - 2018-06-13\n\n- #326 Fix required arguments (#325). - @adamwg\n\n## [1.8.2] - 2018-06-12\n\n- #323 Add support for formatted volumes - @adamwg\n\n## [1.8.1] - 2018-05-09\n\n### Added\n- #313 Add support for Let's Encrypt certificates - @viola\n\n## [1.8.0] - 2018-04-09\n\n- #295 commands: fix configuration file location for windows xp users - @xmudrii\n- #296 Confirm dialog for deleting by ID now specifies number of droplets to be deleted - @justinbeal\n- #299 Implement context switching, allowing for multiple configured API access keys - @kamaln7\n\n## [1.7.2] - 2018-03-07\n\n- #186 ssh: windows support for command forwarding - @xmudrii\n- #280 commands: show public images for distros and apps by default - @mudrii\n- #294 Respect access token flag when calling init as well - @mauricio\n- #291 Adds `SizeSlug` to format fields - @lxfontes\n- #284 commands: General simplifications - @ferhatelmas\n- #282 xdg: fix config path when XDG_CONFIG_HOME is set - @mudrii\n- #278 firewall: omit the port field for the icmp - @caglar10ur\n\n## [1.7.1] - 2017-06-06\n\n- #267 Add flag for overriding API endpoint - @utlemming\n\n## [1.7.0] - 2017-06-06\n\n### Added\n- #234 Implement firewall commands - @viola\n\n## [1.6.1] - 2017-05-17\n\n### Added\n- #202 Including missing API endpoints for doctl - @xmudrii\n- #206 Bash and ZSH completion - @xmudrii\n- #220 domains: Add TTL field - @xmudrii\n\n### Changed\n- #210 Deprecate tag rename (PUT /v2/tags/:name) - @mchitten\n- #208 Remove Detach function - @xmudrii\n- #215 Allow certificate-chain-path to be optional - @viola\n- #214 Rename DetachByDropletID function to Detach - @xmudrii\n- #217 Minimize Docker build context - @SISheogorath\n- #228 Upgrading doctl version - @mauricio\n- #224 consistency changes: ask for confirm added to all delete actions - @xmudrii\n- #222 docs: improve package manager part in readme - @xmudrii\n\n### Fixed\n- #198 Hiding public images by default - @xmudrii\n- #194 Use apk's --no-cache option instead of updating and removing cache - @cspicer\n- #201 fix vektra/{errors,mockery} to static vendoring instead submodule - @zchee\n- #223 completion: fix command description typos - @xmudrii\n- #225 completion: make completion code generation independent on auth status - @xmudrii\n\n## [1.6.0] - 2017-03-10\n\n### Added\n- #146 Add the option to run doctl within a docker container - @FuriKuri\n- #153 Add ability to delete snapshots and confirmation before delete - @xmudrii\n- #158 Add private IPv4 address to output - @johscheuer\n- #161 Add multiple tag delete, tag delete confirmation - @xmudrii\n- #165 Allow \"tags\" attribute for droplet create - @mchitten\n- #169 Implement new unified Snapshots API - @xmudrii\n- #173 Add new actions for Volume and Volume-Action - @xmudrii\n- #191 Add certificate commands - @viola\n- #193 Implement load-balancer commands - @viola\n\n### Changed\n- #160 Improve tag handling for droplet create - @akshaychhajed\n- #171 Add shorthand flags - @xmudrii\n\n### Fixed\n- #159 Add Volume filtering - @xmudrii\n- #177 Fix output color - @xmudrii\n- #178 Implement command forwarding for external SSH - @xmudrii\n- #196 Add type transfer to image-action transfer - @xmudrii\n\n## [1.5.0] - 2016-10-10\n\n### Added\n- #144 SSH to private Droplet IP - @haz-mat\n- #148 Add confirmation for destructive actions - @xmudrii\n\n### Changed\n- #121 Allow untagging droplets - @bryanl\n\n### Fixed\n- #126 Fix location of config in help - @bryanl\n- #132 Update download location - @xmudrii\n- #135 Fix location of doctl configuration - @xmudrii\n- #143 Send progress report to stderr - @kkpoon\n\n## [1.4.0] - 2016-08-02\n\n### Added\n- #111 Replace `auth login` with `auth init` - @bryanl\n\n### Changed\n- #118 Add doctl version to user agent - @bryanl\n- #122 Add SSH agent forward support for Windows - @tbalthazar\n\n### Fixed\n- #113 Update SSH client support for Windows - @tbalthazar\n- #117 Update download links - @garykrige\n- #123 Use Windows compatible ANSI colors - @bryanl\n- #125 Create valid JSON when creating multiple droplets - @snoopdouglas\n\n## [1.3.1] - 2016-07-13\n\n### Changed\n- #99 Build test bin in out directory - @bryanl\n- #104 Remove beta status for storage - @bryanl\n\n### Fixed\n\n- #100 password-reset, not power-reset - @aybabtme\n\n## [1.3.0] - 2016-06-25\n\n### Added\n- #88 Add a --ssh-agent-forwarding-flag - @tbalthazar\n\n### Changed\n- #92 Rename drive to volume - @aybabtme\n- #93 Extract token retrieval process - @bryanl\n- #98 Remove output when deleting droplets - @bryanl\n\n### Fixed\n- #85 Don't report new release available when already installed - @andrewsomething\n- #87 Update help output in documentation - @gmontalvoriv\n- #97 User list images returns distributions - @bryanl\n\n## [1.2.0] - 2016-06-07\n\n### Added\n- #37 Add a script to regenerate test mocks - @bryanl\n\n### Changed\n- #79 Ensure pagination is 1 indexed, and not 0 indexed - @jphines\n\n### Fixed\n- #68 Respect ssh-user flag - @vkurchatkin\n- #69 Fix type in README - @aybabtme\n- #70 Fix type in README - @aybabtme\n- #74 Add more specific install instructions to README - @aybabtme\n- #80 Fix a typo in usage text - @davidkuridza\n\n## [1.1.0] - 2016-04-22\n\n### Added\n- #52 Add tagging commands - @bryanl\n- #56 Add support for Drive beta - @aybabtme\n- #58 Add support for beta features - @bryanl\n- #63 Add ci build for windows - @bryanl\n\n### Changed\n- #53 Remove unused dependencies - @aybabtme\n- #54 Rename root path - @aybabtme\n- #57 Clean up version message - @aybabtme\n- #61 Print drive columns if beta is enabled - @aybabtme\n\n### Fixed\n- #60 Disable tracing by default - @bryanl\n\n## [1.0.2] - 2016-04-14\n\n### Added\n- #51 Adding change log - @bryanl\n\n### Changed\n- #41 All compute actions with `list` now have `ls` alias - @andrewsomething\n- #44 Clean up references to doit - @aybabtme\n\n### Fixed\n- #49 Fix image argument to allow rebuilding droplets - @bryanl\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.529296875,
          "content": "# Contributing to doctl\n\n<!-- Non emacs users, feel free to update the toc by hand. -->\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-refresh-toc -->\n**Table of Contents**\n\n- [Contributing to doctl](#contributing-to-doctl)\n  - [Issues](#issues)\n    - [Reporting an Issue](#reporting-an-issue)\n    - [Issue Lifecycle](#issue-lifecycle)\n  - [Pull Requests](#pull-requests)\n  - [Developing](#developing)\n  - [Documenting](#documenting)\n    - [Go environment](#go-environment)\n    - [Docker](#docker)\n    - [Testing](#testing)\n      - [Writing Tests](#writing-tests)\n        - [Unit tests](#unit-tests)\n        - [Integration tests](#integration-tests)\n      - [`godo` mocks](#godo-mocks)\n      - [Build Scripts](#build-scripts)\n  - [Releasing](#releasing)\n    - [Tagging a release](#tagging-a-release)\n    - [Snap](#snap)\n    - [Updating Homebrew](#updating-homebrew)\n\n<!-- markdown-toc end -->\n\n**First:** if you're unsure or afraid of _anything_, just ask\nor submit the issue or pull request anyways. You won't be yelled at for\ngiving your best effort. The worst that can happen is that you'll be\npolitely asked to change something. We appreciate all contributions!\n\nFor those folks who want a bit more guidance on the best way to\ncontribute to the project, read on. Addressing the points below\nlets us merge or address your contributions quickly.\n\n## Issues\n\n### Reporting an Issue\n\n* Make sure you test against the latest released version. It is possible\n  we already fixed the bug you're experiencing.\n\n* If you experienced a panic, please create a [gist](https://gist.github.com)\n  of the *entire* generated crash log for us to look at. Double check\n  no sensitive items were in the log.\n\n* Respond as promptly as possible to any questions made by the _doctl_\n  team to your issue. Stale issues will be closed.\n\n### Issue Lifecycle\n\n1. The issue is reported.\n\n2. The issue is verified and categorized by a _doctl_ collaborator.\n   Categorization is done via labels. For example, bugs are marked as \"bugs\".\n\n3. Unless it is critical, the issue is left for a period of time (sometimes\n   many weeks), giving outside contributors a chance to address the issue.\n\n4. The issue is addressed in a pull request. The issue will be\n   referenced in commit message(s) so that the code that fixes it is clearly\n   linked.\n\n5. The issue is closed. Sometimes, valid issues will be closed to keep\n   the issue tracker clean. The issue is still indexed and available for\n   future viewers, or can be re-opened if necessary.\n\n## Pull Requests\n\nPull requests must always be opened from a fork of `doctl`, even if you have\ncommit rights to the repository so that all contributors follow the same process.\n\n## Developing\n\n`doctl` has `make` commands for most tooling in the `Makefile`. Run `make`\nor `make help` for a list of available commands with descriptions.\n\n## Documenting\n\n`doctl` commands have two kinds of documentation: the short synopsis, that shows in the command lists, and the long description, that shows in the `--help` message for a specific command. In `commands/*.go` you'll see these two things being defined frequently, often as different arguments in `CmdBuilderWithDocs`. Here are some guidelines to keep in mind when writing these helpful texts:\n\n- Go uses \"quotes\" for single-line strings and \\``backticks`\\` for multi-line strings.\n- Programmatic elements, such as command and flag names, should be surrounded by backticks.\n- To feature a backtick inside a multiline string, use this sequence of characters for each backtick:\n\n  ```\n  ` + \"`\" + `\n  ```\n- It's good practice to create string variables to store text that gets repeated.\n- Flags and short command synopses do not need complete sentences in their descriptions and should not end in punctuation\n- Command abstracts, on the other hand, are considered full-text documentation and should use proper English\n- Write short command descriptions from the perspective of the user trying to do something (e.g. \"List all database clusters\") vs. what the command does (e.g. \"This command retrieves a list of all database clusters\").\n- Avoid the passive voice (\"When a tag is provided, access is granted\") and use the active voice (\"Entering a tag provides access\")\n- Be helpful when users have to enter a input that is from a list of possible values. Give examples, list the possible values inline (if the list is relatively short), or point them to a command that can list the possible values for them.\n\n## Spell Check\n\n`doctl` is setup to use the code aware spell checker called [typos](https://github.com/crate-ci/typos) to keep an eye on any spelling mistakes.\n\nTo install your own copy,follow the instructions on the [typos readme](https://github.com/crate-ci/typos?tab=readme-ov-file#install), and then run the `typos` binary\n\n### Go environment\n\nThe minimal version of Golang for `doctl` is 1.14. `doctl` uses [Go\nmodules](https://github.com/golang/go/wiki/Modules) for dependency\nmanagement [with vendoring](https://github.com/golang/go/wiki/Modules#how-do-i-use-vendoring-with-modules-is-vendoring-going-away).\nPlease run `make vendor` after any dependency modifications.\n\nBe sure to run `go fmt` on your code before submitting a pull request.\n\n### Docker\n\nYou can build doctl in a local Docker container via `make docker_build`.\n\n### Testing\n\nRun the tests locally via `make test`, or in [CI](.github/workflows/ci.yml) by pushing a branch to your fork\non GitHub.\n\n#### Writing Tests\n\nIn doctl, we have two kinds of tests: unit tests and integration tests. Both are run with Go's\nbuilt-in `go test` tool.\n\n##### Unit tests\n\nUnit tests live in the `_test.go` files. The bulk of these tests live in the `commands` package,\nand exist to ensure that a CLI command produces an expected output. For each unit test, we\ntypically rely on an accompanying mocked API call. These mocks are generated via `gomock`, and\ncan be set to return different values from the API calls to test how our commands behave when\ngiven different inputs.\n\nWriting a unit test for a new command typically looks like this,\n\n1. Write your new command.\n2. If your new command depends on a mocked `godo` call, generate a mock for it. See\n[the section below](#godo-mocks) about regenerating mocks to learn how to do this.\n3. Use your new mocks to stub out the API call, and write a test case. We use\n`github.com/stretchr/testify/assert` for our assertions. Test cases typically look like the following:\n    ```go\n    func TestMyNewCommand(t *testing.T) {\n        // Use the `withTestClient` helper to access our tets config, as well as the godo API\n        // mocks.\n        withTestClient(t, func(config *CmdConfig, tm *tcMocks) {\n            // Mock the godo API call.\n            tm.myNewCommandMock.EXPECT().Get(\"some-value\").Return(\"some-other-value\")\n\n            // Optionally add a CLI argument.\n            config.Args = append(config.Args, \"some-value\")\n\n            // Optionally add a CLI flag.\n            config.Doit.Set(config.NS, \"--my-flag\", \"some-value\")\n\n            // Execute your command.\n            err := RunMyNewCommand(config)\n\n            // Add assertions to check if your test passes.\n            assert.NoError(t, err)\n        })\n    }\n    ```\n\n##### Integration tests\n\nIntegration tests live under the top-level `integration` directory. These tests exist to ensure\nthat an invocation of a command though this CLI produces the expected output. These tests use a\nmocked HTTP client, but run the actual compiled doctl binary.\n\nWriting an integration test typically looks like this,\n\n1. Write your new command.\n2. Mock the API's JSON response that your command depends on.\n3. Execute your command using `exec.Command` on the test CLI binary.\n4. Add assertions to check the output from the CLI command.\n\nRather than providing an example here, please have a look at the [`integration/account_test.go`](/integration/account_test.go)\nfile to see what an integration test typically looks like.\n\n#### `godo` mocks\n\nTo upgrade `godo`, run `make upgrade_godo`. This will:\n\n* Get the latest release of `godo`, and update the go.mod and go.sum files accordingly.\n* Tidy and vendor the modules that `doctl` depends on.\n* Run `mockgen` to regenerate the mocks we use in the unit test suite.\n\n#### Build Scripts\n\nIf you modify the build scripts, you can use `make shellcheck` to\ncheck your changes. You'll need to install [shellcheck](https://github.com/koalaman/shellcheck)\nto do so. Travis also runs shellcheck.\n\n## Releasing\n\nTo cut a release, push a new tag (versioning discussed below).\n\n### Tagging a release\n\n1. Run `make changes` to review the changes since the last release.  \nBased on the changes, decide what kind of release you are doing (bugfix, feature or breaking).  \n`doctl` follows [semantic versioning](https://semver.org), ask if you aren't sure.  \n\n1. Synchronize your local repository with all the tags that have been created or updated on the remote main branch\n    ```bash\n    git checkout main\n    git pull --tags\n    ```\n\n1. Tag the release using `BUMP=(bugfix|feature|breaking) make tag`.  \nExample:  \n\n```bash\nBUMP=minor make tag\n```  \n\nNotes on `BUMP=(bugfix|feature|breaking) make tag`:\n  - BUMP accepts: `bugfix`, `feature`, `breaking` as well as `patch`, `minor` and `major` values.\n  - The command assumes you have a remote repository named `origin` pointing to this repository. \n  If you'd prefer to specify a different remote repository, you can do so by setting `ORIGIN=(preferred remote name)`.\n  - The new tag triggers the release.\n\nTo learn a bit more about how that all works, check out [goreleaser](https://goreleaser.com/intro) \nand the config we use for it: [.goreleaser.yml](https://github.com/digitalocean/doctl/blob/main/.goreleaser.yml)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.619140625,
          "content": "# Step 1: Build\nFROM golang:1.22-alpine AS build\n\nARG GOARCH=amd64\nENV OUT_D /out\n\nRUN mkdir -p /out\nRUN  apk add --update  --no-cache \\\n     bash \\\n     coreutils \\\n     git \\\n     libc6-compat \\\n     make\n\nRUN mkdir -p /go/src/github.com/digitalocean/doctl\nADD . /go/src/github.com/digitalocean/doctl/\n\nRUN cd /go/src/github.com/digitalocean/doctl && \\\n    make build GOARCH=$GOARCH\n\n# Step 2: App\nFROM alpine:3.12\n\nRUN apk add --update --no-cache \\\n        ca-certificates \\\n        libc6-compat \\\n        openssh\n\nWORKDIR /app\nCOPY --from=build /out/doctl /app/doctl\n\nRUN adduser -D user\nUSER user:user\n\nENTRYPOINT [\"/app/doctl\"]\n"
        },
        {
          "name": "Dockerfile.goreleaser",
          "type": "blob",
          "size": 0.1982421875,
          "content": "FROM alpine:3.8\n\nRUN apk add --update \\\n        bash \\\n        curl \\\n        rsync \\\n        libc6-compat \\\n        openssh \\\n        ca-certificates\n\nWORKDIR /app\n\nCOPY doctl .\n\nENTRYPOINT [\"./doctl\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 10.5068359375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2015 Bryan Liles\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.7314453125,
          "content": "# NOTE: Adding a target so it shows up in the help listing\n#    - The description is the text that is echoed in the first command in the target.\n#    - Only 'public' targets (start with an alphanumeric character) display in the help listing.\n#    - All public targets need a description\n\nexport CGO_ENABLED = 0\n\nexport GO111MODULE := on\n\n# ORIGIN is used when testing release code\nORIGIN ?= origin\nBUMP ?= patch\n\n.PHONY: help\nhelp:\n\t@echo \"==> describe make commands\"\n\t@echo \"\"\n\t@$(MAKE) -pRrq -f $(lastword $(MAKEFILE_LIST)) : 2>/dev/null |\\\n\t  awk -v RS= -F: \\\n\t    '/^# File/,/^# Finished Make data base/ {if ($$1 ~ /^[a-zA-Z]/) {printf \"%-20s%s\\n\", $$1, substr($$9, 9, length($$9)-9)}}' |\\\n\t  sort\n\nmy_d = $(shell pwd)\nOUT_D = $(shell echo $${OUT_D:-$(my_d)/builds})\nDOCS_OUT = $(shell echo $${DOCS_OUT:-$(my_d)/builds/docs/yaml})\n\nUNAME_S := $(shell uname -s)\nUNAME_M := $(shell uname -m)\n\nGOFILES_NOVENDOR_NOMOCK = $(shell find . -type f -name '*.go' -not -path \"./vendor/*\" -not -path \"*_mock.go\")\n\nGOOS = linux\nifeq ($(UNAME_S),Darwin)\n  GOOS = darwin\nendif\n\nifeq ($(GOARCH),)\n  GOARCH = amd64\n  ifneq ($(UNAME_M), x86_64)\n    ifeq ($(UNAME_M), arm64)\n      GOARCH = arm64\n    else\n      GOARCH = 386\n    endif\n  endif\nendif\n\n.PHONY: _build\n_build:\n\t@echo \"=> building doctl via go build\"\n\t@echo \"\"\n\t@OUT_D=${OUT_D} GOOS=${GOOS} GOARCH=${GOARCH} scripts/_build.sh\n\t@echo \"built $(OUT_D)/doctl_$(GOOS)_$(GOARCH)\"\n\n.PHONY: build\nbuild: _build\n\t@echo \"==> build local version\"\n\t@echo \"\"\n\t@mv $(OUT_D)/doctl_$(GOOS)_$(GOARCH) $(OUT_D)/doctl\n\t@echo \"installed as $(OUT_D)/doctl\"\n\n.PHONY: native\nnative: build\n\t@echo \"\"\n\t@echo \"==> The 'native' target is deprecated. Use 'make build'\"\n\n.PHONY: _build_linux_amd64\n_build_linux_amd64: GOOS = linux\n_build_linux_amd64: GOARCH = amd64\n_build_linux_amd64: _build\n\n.PHONY: docker_build\ndocker_build:\n\t@echo \"==> build doctl in local docker container\"\n\t@echo \"\"\n\t@mkdir -p $(OUT_D)\n\t@docker build -f Dockerfile \\\n\t\t--build-arg GOARCH=$(GOARCH) \\\n\t\t. -t doctl_local\n\t@docker run --rm \\\n\t\t-v $(OUT_D):/copy \\\n\t\t-it --entrypoint /bin/cp \\\n\t\tdoctl_local /app/doctl /copy/\n\t@docker run --rm \\\n\t\t-v $(OUT_D):/copy \\\n\t\t-it --entrypoint /bin/chown \\\n\t\talpine -R $(shell whoami | id -u): /copy\n\t@echo \"Built binaries to $(OUT_D)\"\n\t@echo \"Created a local Docker container. To use, run: docker run --rm -it doctl_local\"\n\n.PHONY: test_unit\ntest_unit:\n\t@echo \"==> run unit tests\"\n\t@echo \"\"\n\tgo test -mod=vendor ./commands/... ./do/... ./pkg/... ./internal/... .\n\n.PHONY: test_integration\ntest_integration:\n\t@echo \"==> run integration tests\"\n\t@echo \"\"\n\tgo test -v -mod=vendor ./integration\n\n.PHONY: test\ntest: test_unit test_integration\n\n.PHONY: shellcheck\nshellcheck:\n\t@echo \"==> analyze shell scripts\"\n\t@echo \"\"\n\t@scripts/shell_check.sh\n\n.PHONY: gofmt_check\ngofmt_check:\n\t@echo \"==> ensure code adheres to gofmt (with vendor directory excluded)\"\n\t@echo \"\"\n\t@GOFMT=$$(gofmt -w -r 'interface{} -> any' -l ${GOFILES_NOVENDOR_NOMOCK}); \\\n\tif [ -n \"$${GOFMT}\" ]; then \\\n\t\techo \"gofmt checking failed:\\n\"; echo \"$${GOFMT} \\n\"; exit 1; \\\n\tfi\n\n.PHONY: check_focused\ncheck_focused:\n\t@scripts/check_focused_test.sh\n\n\n.PHONY: snap\nsnap: clean\n\t@echo \"==> building snap\"\n\t@echo \"\"\n\t@snapcraft\n\n.PHONY: mocks\nmocks:\n\t@echo \"==> update mocks\"\n\t@echo \"\"\n\t@go generate ./...\n\t@scripts/regenmocks.sh\n\n.PHONY: _upgrade_godo\n_upgrade_godo:\n\tgo get -u github.com/digitalocean/godo\n\n.PHONY: upgrade_godo\nupgrade_godo: _upgrade_godo vendor mocks\n\t@echo \"==> upgrade the godo version\"\n\t@echo \"\"\n\n.PHONY: vendor\nvendor:\n\t@echo \"==> vendor dependencies\"\n\t@echo \"\"\n\tgo mod vendor\n\tgo mod tidy\n\n.PHONY: clean\nclean:\n\t@echo \"==> remove build / release artifacts\"\n\t@echo \"\"\n\t@rm -rf builds dist out parts prime stage doctl_v*.snap\n\n.PHONY: _install_github_release_notes\n_install_github_release_notes:\n\tgo install github.com/digitalocean/github-changelog-generator@latest\n\n.PHONY: _changelog\n_changelog: _install_github_release_notes\n\t@scripts/changelog.sh\n\n.PHONY: changes\nchanges: _install_github_release_notes\n\t@echo \"==> list merged PRs since last release\"\n\t@echo \"\"\n\t@changes=$(shell scripts/changelog.sh) && cat $$changes && rm -f $$changes\n\n.PHONY: version\nversion:\n\t@echo \"==> doctl version\"\n\t@echo \"\"\n\t@ORIGIN=${ORIGIN} scripts/version.sh\n\n.PHONY: tag\ntag:\n\t@echo \"==> BUMP=${BUMP} tag\"\n\t@echo \"\"\n\t@ORIGIN=${ORIGIN} scripts/bumpversion.sh\n\n.PHONY: _release\n_release:\n\t@echo \"=> releasing\"\n\t@echo \"\"\n\t@scripts/release.sh\n\n.PHONY: _tag_and_release\n_tag_and_release: tag\n\t@echo \"=> DEPRECATED: BUMP=${BUMP} tag and release\"\n\t@echo \"\"\n\t@$(MAKE) _release\n\n.PHONY: release\nrelease:\n\t@echo \"==> release (most recent tag, normally done by travis)\"\n\t@echo \"\"\n\t@$(MAKE) _release\n\n.PHONY: docs\ndocs:\n\t@echo \"==> Generate YAML documentation in ${DOCS_OUT}\"\n\t@echo \"\"\n\t@mkdir -p ${DOCS_OUT}\n\t@DOCS_OUT=${DOCS_OUT} go run scripts/gen-yaml-docs.go\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.107421875,
          "content": "<h1 align=\"center\">doctl</h1>\n\n<p align=\"center\">\n  <img width=\"200\" height=\"170\" src=\"https://api-engineering.nyc3.cdn.digitaloceanspaces.com/doctl-mascot.png\" alt=\"The doctl mascot.\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/digitalocean/doctl/actions/workflows/ci.yml\">\n    <img src=\"https://github.com/digitalocean/doctl/actions/workflows/ci.yml/badge.svg\" alt=\"Build Status\" />\n  </a>\n  <a href=\"https://godoc.org/github.com/digitalocean/doctl\">\n    <img src=\"https://godoc.org/github.com/digitalocean/doctl?status.svg\" alt=\"GoDoc\" />\n  </a>\n  <a href=\"https://goreportcard.com/report/github.com/digitalocean/doctl\">\n    <img src=\"https://goreportcard.com/badge/github.com/digitalocean/doctl\" alt=\"Go Report Card\" />\n  </a>\n</p>\n\n```\ndoctl is a command-line interface (CLI) for the DigitalOcean API.\n\nUsage:\n  doctl [command]\n\nAvailable Commands:\n  1-click         Display commands that pertain to 1-click applications\n  account         Display commands that retrieve account details\n  apps            Display commands for working with apps\n  auth            Display commands for authenticating doctl with an account\n  balance         Display commands for retrieving your account balance\n  billing-history Display commands for retrieving your billing history\n  completion      Modify your shell so doctl commands autocomplete with TAB\n  compute         Display commands that manage infrastructure\n  databases       Display commands that manage databases\n  help            Help about any command\n  invoice         Display commands for retrieving invoices for your account\n  kubernetes      Displays commands to manage Kubernetes clusters and configurations\n  monitoring      [Beta] Display commands to manage monitoring\n  projects        Manage projects and assign resources to them\n  registry        Display commands for working with container registries\n  version         Show the current version\n  vpcs            Display commands that manage VPCs\n\nFlags:\n  -t, --access-token string   API V2 access token\n  -u, --api-url string        Override default API endpoint\n  -c, --config string         Specify a custom config file (default \"$HOME/.config/doctl/config.yaml\")\n      --context string        Specify a custom authentication context name\n  -h, --help                  help for doctl\n  -o, --output string         Desired output format [text|json] (default \"text\")\n      --trace                 Show a log of network activity while performing a command\n  -v, --verbose               Enable verbose output\n\nUse \"doctl [command] --help\" for more information about a command.\n```\n\nSee the [full reference documentation](https://www.digitalocean.com/docs/apis-clis/doctl/reference/) for information about each available command.\n\n- [Installing `doctl`](#installing-doctl)\n  - [Using a Package Manager (Preferred)](#using-a-package-manager-preferred)\n    - [MacOS](#macos)\n    - [Snap supported OS](#snap-supported-os)\n      - [Use with `kubectl`](#use-with-kubectl)\n      - [Using `doctl compute ssh`](#using-doctl-compute-ssh)\n      - [Use with Docker](#use-with-docker)\n    - [Arch Linux](#arch-linux)\n    - [Fedora](#fedora)\n    - [Nix supported OS](#nix-supported-os)\n  - [Docker Hub](#docker-hub)\n  - [Downloading a Release from GitHub](#downloading-a-release-from-github)\n  - [Building with Docker](#building-with-docker)\n  - [Building the Development Version from Source](#building-the-development-version-from-source)\n  - [Dependencies](#dependencies)\n- [Authenticating with DigitalOcean](#authenticating-with-digitalocean)\n  - [Logging into multiple DigitalOcean accounts](#logging-into-multiple-digitalocean-accounts)\n- [Configuring Default Values](#configuring-default-values)\n  - [Environment Variables](#environment-variables)\n- [Enabling Shell Auto-Completion](#enabling-shell-auto-completion)\n  - [Linux Auto Completion](#linux-auto-completion)\n  - [MacOS](#macos-1)\n- [Uninstalling `doctl`](#uninstalling-doctl)\n  - [Using a Package Manager](#using-a-package-manager)\n    - [MacOS Uninstall](#macos-uninstall)\n- [Examples](#examples)\n- [Tutorials](#tutorials)\n\n\n## Installing `doctl`\n\n### Using a Package Manager (Preferred)\n\nA package manager allows you to install and keep up with new `doctl` versions using only a few commands.\nOur community distributes `doctl` via a growing set of package managers in addition to the officially\nsupported set listed below; chances are good a solution exists for your platform.\n\n#### MacOS\n\nUse [Homebrew](https://brew.sh/) to install `doctl` on macOS:\n\n```\nbrew install doctl\n```\n\n`doctl` is also available via [MacPorts](https://www.macports.org/ports.php?by=name&substr=doctl). Note that\nthe port is community maintained and may not be on the latest version.\n\n#### Snap supported OS\n\nUse [Snap](https://snapcraft.io/) on [Snap-supported](https://snapcraft.io/docs/core/install) systems to\ninstall `doctl`:\n\n```\nsudo snap install doctl\n```\n\n##### Use with `kubectl`\n\nUsing `kubectl` requires the `kube-config` personal-files connection for `doctl`:\n\n    sudo snap connect doctl:kube-config\n\n##### Using `doctl compute ssh`\n\nUsing `doctl compute ssh` requires the core [ssh-keys interface](https://docs.snapcraft.io/ssh-keys-interface):\n\n    sudo snap connect doctl:ssh-keys :ssh-keys\n\n##### Use with Docker\n\nUsing `doctl registry login` requires the `dot-docker` personal-files connection for `doctl`:\n\n    sudo snap connect doctl:dot-docker\n\nThis allows `doctl` to add DigitalOcean container registry credentials to your Docker configuration file.\n\n#### Arch Linux\n\n`doctl` is available in the official Arch Linux repository:\n\n    sudo pacman -S doctl\n\n#### Fedora\n\n`doctl` is available in the official Fedora repository:\n\n    sudo dnf install doctl\n\n#### Nix supported OS\n\nUsers of NixOS or other [supported\nplatforms](https://nixos.org/nixpkgs/) may install ```doctl``` from\n[Nixpkgs](https://nixos.org/nixos/packages.html#doctl). Please note\nthis package is also community maintained and may not be on the latest\nversion.\n\n### Docker Hub\n\nContainers for each release are available under the `digitalocean`\norganization on [Docker Hub](https://hub.docker.com/r/digitalocean/doctl).\nLinks to the containers are available in the GitHub releases.\n\n### Downloading a Release from GitHub\n\nVisit the [Releases\npage](https://github.com/digitalocean/doctl/releases) for the\n[`doctl` GitHub project](https://github.com/digitalocean/doctl), and find the\nappropriate archive for your operating system and architecture.\nDownload the archive from your browser or copy its URL and\nretrieve it to your home directory with `wget` or `curl`.\n\nFor example, with `wget`:\n\n```\ncd ~\nwget https://github.com/digitalocean/doctl/releases/download/v<version>/doctl-<version>-linux-amd64.tar.gz\n```\n\nOr with `curl`:\n\n```\ncd ~\ncurl -OL https://github.com/digitalocean/doctl/releases/download/v<version>/doctl-<version>-linux-amd64.tar.gz\n```\n\nExtract the binary:\n\n```\ntar xf ~/doctl-<version>-linux-amd64.tar.gz\n```\n\nOr download and extract with this oneliner:\n```\ncurl -sL https://github.com/digitalocean/doctl/releases/download/v<version>/doctl-<version>-linux-amd64.tar.gz | tar -xzv\n```\n\nwhere `<version>` is the full semantic version, e.g., `1.17.0`.\n\nOn Windows systems, you should be able to double-click the zip archive to extract the `doctl` executable.\n\nMove the `doctl` binary to somewhere in your path. For example, on GNU/Linux and OS X systems:\n\n```\nsudo mv ~/doctl /usr/local/bin\n```\n\nWindows users can follow [How to: Add Tool Locations to the PATH Environment Variable](https://msdn.microsoft.com/en-us/library/office/ee537574(v=office.14).aspx) in order to add `doctl` to their `PATH`.\n\n### Building with Docker\n\nIf you have\n[Docker](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04)\nconfigured, you can build a local Docker image using `doctl`'s\n[Dockerfile](https://github.com/digitalocean/doctl/blob/main/Dockerfile)\nand run `doctl` within a container.\n\n```\ndocker build --tag=doctl .\n```\n\nThen you can run it within a container.\n\n```\ndocker run --rm --interactive --tty --env=DIGITALOCEAN_ACCESS_TOKEN=\"your_DO_token\" doctl any_doctl_command\n```\n\n### Building the Development Version from Source\n\nIf you have a [Go environment](https://www.digitalocean.com/community/tutorials/how-to-install-go-1-6-on-ubuntu-16-04)\nconfigured, you can install the development version of `doctl` from\nthe command line.\n\n```\ngo install github.com/digitalocean/doctl/cmd/doctl@latest\n```\n\nWhile the development version is a good way to take a peek at\n`doctl`'s latest features before they get released, be aware that it\nmay have bugs. Officially released versions will generally be more\nstable.\n\n### Dependencies\n\n`doctl` uses Go modules with vendoring.\n\n## Authenticating with DigitalOcean\n\nTo use `doctl`, you need to authenticate with DigitalOcean by providing an access token, which can be created from the [Applications & API](https://cloud.digitalocean.com/account/api/tokens) section of the Control Panel. You can learn how to generate a token by following the [DigitalOcean API guide](https://www.digitalocean.com/community/tutorials/how-to-use-the-digitalocean-api-v2).\n\nDocker users will have to use the `DIGITALOCEAN_ACCESS_TOKEN` environmental variable to authenticate, as explained in the Installation section of this document.\n\nIf you're not using Docker to run `doctl`, authenticate with the `auth init` command.\n\n```\ndoctl auth init\n```\n\nYou will be prompted to enter the DigitalOcean access token that you generated in the DigitalOcean control panel.\n\n```\nDigitalOcean access token: your_DO_token\n```\n\nAfter entering your token, you will receive confirmation that the credentials were accepted. If the token doesn't validate, make sure you copied and pasted it correctly.\n\n```\nValidating token: OK\n```\n\nThis will create the necessary directory structure and configuration file to store your credentials.\n\n### Logging into multiple DigitalOcean accounts\n\n`doctl` allows you to log in to multiple DigitalOcean accounts at the same time and easily switch between them with the use of authentication contexts.\n\nBy default, a context named `default` is used. To create a new context, run `doctl auth init --context <new-context-name>`. You may also pass the new context's name using the `DIGITALOCEAN_CONTEXT` [environment variable](#environment-variables). You will be prompted for your API access token which will be associated with the new context.\n\nTo use a non-default context, pass the context name to any `doctl` command. For example:\n\n```\ndoctl compute droplet list --context <new-context-name>\n```\n\nTo set a new default context, run `doctl auth switch --context <new-context-name>`. This command will save the current context to the config file and use it for all commands by default if a context is not specified.\n\nThe `--access-token` flag or `DIGITALOCEAN_ACCESS_TOKEN` [environment variable](#environment-variables) are acknowledged only if the `default` context is used. Otherwise, they will have no effect on what API access token is used. To temporarily override the access token if a different context is set as default, use `doctl --context default --access-token your_DO_token ...`.\n\n## Configuring Default Values\n\nThe `doctl` configuration file is used to store your API Access Token as well as the defaults for command flags. If you find yourself using certain flags frequently, you can change their default values to avoid typing them every time. This can be useful when, for example, you want to change the username or port used for SSH.\n\nOn OS X, `doctl` saves its configuration as `${HOME}/Library/Application Support/doctl/config.yaml`. The `${HOME}/Library/Application Support/doctl/` directory will be created once you run `doctl auth init`.\n\nOn Linux, `doctl` saves its configuration as `${XDG_CONFIG_HOME}/doctl/config.yaml` if the `${XDG_CONFIG_HOME}` environmental variable is set, or `~/.config/doctl/config.yaml` if it is not. On Windows, the config file location is `%APPDATA%\\doctl\\config.yaml`.\n\nThe configuration file is automatically created and populated with default properties when you authenticate with `doctl` for the first time. The typical format for a property is `category.command.sub-command.flag: value`. For example, the property for the `force` flag with tag deletion is `tag.delete.force`.\n\nTo change the default SSH user used when connecting to a Droplet with `doctl`, look for the `compute.ssh.ssh-user` property and change the value after the colon. In this example, we changed it to the username **sammy**.\n\n```\n. . .\ncompute.ssh.ssh-user: sammy\n. . .\n```\n\nSave and close the file. The next time you use `doctl`, the new default values you set will be in effect. In this example, that means that it will SSH as the **sammy** user (instead of the default **root** user) next time you log into a Droplet.\n\n### Environment variables\n\nIn addition to specifying configuration using `config.yaml` file or program arguments, it is also possible to override values just for the given session with environment variables:\n\n```\n# Use instead of --context argument\nDIGITALOCEAN_CONTEXT=my-context doctl auth list\n```\n\n```\n# Use instead of --access-token argument\nDIGITALOCEAN_ACCESS_TOKEN=my-do-token doctl\n```\n\n## Enabling Shell Auto-Completion\n\n`doctl` also has auto-completion support. It can be set up so that if you partially type a command and then press `TAB`, the rest of the command is automatically filled in. For example, if you type `doctl comp<TAB><TAB> drop<TAB><TAB>` with auto-completion enabled, you'll see `doctl compute droplet` appear on your command prompt.\n\n**Note:** Shell auto-completion is not available for Windows users.\n\nHow you enable auto-completion depends on which operating system you're using. If you installed `doctl` via Homebrew, auto-completion is activated automatically, though you may need to configure your local environment to enable it.\n\n`doctl` can generate an auto-completion script with the `doctl completion your_shell_here` command. Valid arguments for the shell are Bash (`bash`), ZSH (`zsh`), and fish (`fish`). By default, the script will be printed to the command line output.  For more usage examples for the `completion` command, use `doctl completion --help`.\n\n### Linux Auto Completion\n\nThe most common way to use the `completion` command is by adding a line to your local profile configuration. At the end of your `~/.profile` file, add this line:\n\n```\nsource <(doctl completion your_shell_here)\n```\n\nIf you are using ZSH, add this line to your `~/.zshrc` file:\n\n```\ncompdef _doctl doctl\n```\n\nThen refresh your profile.\n\n```\nsource ~/.profile\n```\n\n### MacOS (bash)\n\nmacOS users will have to install the `bash-completion` framework to use the auto-completion feature.\n\n```\nbrew install bash-completion\n```\n\nAfter it's installed, load `bash_completion` by adding the following line to your `.profile` or `.bashrc` file.\n\n```\nsource $(brew --prefix)/etc/bash_completion\n```\n\nThen refresh your profile using the appropriate command for the bash configurations file.\n\n```\nsource ~/.profile\nsource ~/.bashrc\n```\n\n### MacOS (zsh)\n\nAdd the following line to your `~/.zshrc` file:\n\n```zsh\nautoload -U +X compinit; compinit\n```\n\nThen refresh your profile.\n\n## Uninstalling `doctl`\n\n### Using a Package Manager\n\n#### MacOS Uninstall\n\nUse [Homebrew](https://brew.sh/) to uninstall all current and previous versions of the `doctl` formula on macOS:\n\n```\nbrew uninstall -f doctl\n```\n\nTo completely remove the configuration, also remove the following directory:\n\n```\nrm -rf \"$HOME/Library/Application Support/doctl\"\n```\n\n\n## Examples\n\n`doctl` is able to interact with all of your DigitalOcean resources. Below are a few common usage examples. To learn more about the features available, see [the full tutorial on the DigitalOcean community site](https://www.digitalocean.com/community/tutorials/how-to-use-doctl-the-official-digitalocean-command-line-client).\n\n* List all Droplets on your account:\n```\ndoctl compute droplet list\n```\n* Create a Droplet:\n```\ndoctl compute droplet create <name> --region <region-slug> --image <image-slug> --size <size-slug>\n```\n* Assign a Floating IP to a Droplet:\n```\ndoctl compute floating-ip-action assign <ip-addr> <droplet-id>\n```\n* Create a new A record for an existing domain:\n```\ndoctl compute domain records create --record-type A --record-name www --record-data <ip-addr> <domain-name>\n```\n\n`doctl` also simplifies actions without an API endpoint. For instance, it allows you to SSH to your Droplet by name:\n```\ndoctl compute ssh <droplet-name>\n```\n\nBy default, it assumes you are using the `root` user. If you want to SSH as a specific user, you can do that as well:\n```\ndoctl compute ssh <user>@<droplet-name>\n```\n\n## Tutorials\n\n* [How To Use Doctl, the Official DigitalOcean Command-Line Client](https://www.digitalocean.com/community/tutorials/how-to-use-doctl-the-official-digitalocean-command-line-client)\n* [How To Work with DigitalOcean Load Balancers Using Doctl](https://www.digitalocean.com/community/tutorials/how-to-work-with-digitalocean-load-balancers-using-doctl)\n* [How To Secure Web Server Infrastructure With DigitalOcean Cloud Firewalls Using Doctl](https://www.digitalocean.com/community/tutorials/how-to-secure-web-server-infrastructure-with-digitalocean-cloud-firewalls-using-doctl)\n* [How To Work with DigitalOcean Block Storage Using Doctl](https://www.digitalocean.com/community/tutorials/how-to-work-with-digitalocean-block-storage-using-doctl)\n"
        },
        {
          "name": "_typos.toml",
          "type": "blob",
          "size": 0.259765625,
          "content": "[files]\nextend-exclude = [\n  \"vendor/**\",\n  \"go.mod\"\n]\n\n[default.extend-identifiers]\nvas = \"vas\"\nsplitted = \"splitted\"\n\n[default.extend-words]\n# Its not perfect at hashes yet\ncace = \"cace\"\nWqs = \"Wqs\"\n# example and exmaple as two domain examples\nexmaple = \"exmaple\"\n"
        },
        {
          "name": "args.go",
          "type": "blob",
          "size": 28.068359375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nconst (\n\t// ArgAccessToken is the access token to be used for the operations\n\tArgAccessToken = \"access-token\"\n\t// ArgContext is the name of the auth context\n\tArgContext = \"context\"\n\t// ArgDefaultContext is the default auth context\n\tArgDefaultContext = \"default\"\n\t// ArgActionID is an action id argument.\n\tArgActionID = \"action-id\"\n\t// ArgActionAfter is an action after argument.\n\tArgActionAfter = \"after\"\n\t// ArgActionBefore is an action before argument.\n\tArgActionBefore = \"before\"\n\t// ArgActionResourceType is an action resource type argument.\n\tArgActionResourceType = \"resource-type\"\n\t// ArgActionRegion is an action region argument.\n\tArgActionRegion = \"region\"\n\t// ArgActionStatus is an action status argument.\n\tArgActionStatus = \"status\"\n\t// ArgActionType is an action type argument.\n\tArgActionType = \"action-type\"\n\t// ArgApp is the app ID.\n\tArgApp = \"app\"\n\t// ArgAppWithProjects will determine whether project ids should be fetched along with listed apps.\n\tArgAppWithProjects = \"with-projects\"\n\t// ArgAppSpec is a path to an app spec.\n\tArgAppSpec = \"spec\"\n\t// ArgAppLogType the type of log.\n\tArgAppLogType = \"type\"\n\t// ArgAppDeployment is the deployment ID.\n\tArgAppDeployment = \"deployment\"\n\t// ArgAppDevConfig is the path to the app dev link config.\n\tArgAppDevConfig = \"dev-config\"\n\t// ArgBuildCommand is an optional build command to set for local development.\n\tArgBuildCommand = \"build-command\"\n\t// ArgBuildpack is a buildpack id.\n\tArgBuildpack = \"buildpack\"\n\t// ArgAppLogFollow follow logs.\n\tArgAppLogFollow = \"follow\"\n\t// ArgAppLogTail tail logs.\n\tArgAppLogTail = \"tail\"\n\t// ArgNoPrefix no prefix to json logs\n\tArgNoPrefix = \"no-prefix\"\n\t// ArgAppForceRebuild forces a deployment rebuild\n\tArgAppForceRebuild = \"force-rebuild\"\n\t// ArgAppComponents is a list of components to restart.\n\tArgAppComponents = \"components\"\n\t// ArgAppAlertDestinations is a path to an app alert destination file.\n\tArgAppAlertDestinations = \"app-alert-destinations\"\n\t// ArgClusterName is a cluster name argument.\n\tArgClusterName = \"cluster-name\"\n\t// ArgClusterVersionSlug is a cluster version argument.\n\tArgClusterVersionSlug = \"version\"\n\t// ArgVPCUUID is a VPC UUID argument.\n\tArgVPCUUID = \"vpc-uuid\"\n\t// ArgClusterVPCUUID is a cluster vpc-uuid argument.\n\tArgClusterVPCUUID = \"vpc-uuid\"\n\t// ArgClusterSubnet is a cluster pod CIDR argument.\n\tArgClusterSubnet = \"cluster-subnet\"\n\t// ArgServiceSubnet is a cluster service CIDR argument.\n\tArgServiceSubnet = \"service-subnet\"\n\t// ArgClusterNodePool are a cluster's node pools arguments.\n\tArgClusterNodePool = \"node-pool\"\n\t// ArgClusterUpdateKubeconfig updates the local kubeconfig.\n\tArgClusterUpdateKubeconfig = \"update-kubeconfig\"\n\t// ArgNoCache represents whether or not to omit the cache on the next command.\n\tArgNoCache = \"no-cache\"\n\t// ArgNodePoolName is a cluster's node pool name argument.\n\tArgNodePoolName = \"name\"\n\t// ArgNodePoolCount is a cluster's node pool count argument.\n\tArgNodePoolCount = \"count\"\n\t// ArgNodePoolAutoScale is a cluster's node pool auto_scale argument.\n\tArgNodePoolAutoScale = \"auto-scale\"\n\t// ArgNodePoolMinNodes is a cluster's node pool min_nodes argument.\n\tArgNodePoolMinNodes = \"min-nodes\"\n\t// ArgNodePoolMaxNodes is a cluster's node pool max_nodes argument.\n\tArgNodePoolMaxNodes = \"max-nodes\"\n\t// ArgNodePoolNodeIDs is a cluster's node pool nodes argument.\n\tArgNodePoolNodeIDs = \"node-ids\"\n\t// ArgMaintenanceWindow is a cluster's maintenance window argument\n\tArgMaintenanceWindow = \"maintenance-window\"\n\t// ArgMajorVersion is a major version number.\n\tArgMajorVersion = \"major-version\"\n\t// ArgAutoUpgrade is a cluster's auto-upgrade argument.\n\tArgAutoUpgrade = \"auto-upgrade\"\n\n\t// ArgAutoscaleID is an autoscale id argument.\n\tArgAutoscaleID = \"id\"\n\t// ArgAutoscaleName is an autoscale name argument.\n\tArgAutoscaleName = \"name\"\n\t// ArgAutoscaleMinInstances is an autoscale min instance argument.\n\tArgAutoscaleMinInstances = \"min-instances\"\n\t// ArgAutoscaleMaxInstances is an autoscale max instance argument.\n\tArgAutoscaleMaxInstances = \"max-instances\"\n\t// ArgAutoscaleCpuTarget is an autoscale target cpu utilization argument.\n\tArgAutoscaleCpuTarget = \"cpu-target\"\n\t// ArgAutoscaleMemTarget is an autoscale target memory utilization argument.\n\tArgAutoscaleMemTarget = \"mem-target\"\n\t// ArgAutoscaleCooldownMinutes is an autoscale cooldown duration (minutes) argument.\n\tArgAutoscaleCooldownMinutes = \"cooldown-minutes\"\n\t// ArgAutoscaleTargetInstances is an autoscale target instance argument.\n\tArgAutoscaleTargetInstances = \"target-instances\"\n\n\t// ArgHA is a cluster's highly available control plane argument.\n\tArgHA = \"ha\"\n\t// ArgEnableControlPlaneFirewall enable control plane firewall.\n\tArgEnableControlPlaneFirewall = \"enable-control-plane-firewall\"\n\t// ArgControlPlaneFirewallAllowedAddresses list of allowed addresses that can access the control plane.\n\tArgControlPlaneFirewallAllowedAddresses = \"control-plane-firewall-allowed-addresses\"\n\t// ArgSurgeUpgrade is a cluster's surge-upgrade argument.\n\tArgSurgeUpgrade = \"surge-upgrade\"\n\t// ArgCommandUpsert is an upsert for a resource to be created or updated argument.\n\tArgCommandUpsert = \"upsert\"\n\t// ArgCommandUpdateSources tells the respective operation to also update the underlying sources.\n\tArgCommandUpdateSources = \"update-sources\"\n\t// ArgCommandWait is a wait for a resource to be created argument.\n\tArgCommandWait = \"wait\"\n\t// ArgSetCurrentContext is a flag to set the new kubeconfig context as current.\n\tArgSetCurrentContext = \"set-current-context\"\n\t// ArgDropletID is a droplet id argument.\n\tArgDropletID = \"droplet-id\"\n\t// ArgDropletIDs is a list of droplet IDs.\n\tArgDropletIDs = \"droplet-ids\"\n\t// ArgKernelID is a kernel id argument.\n\tArgKernelID = \"kernel-id\"\n\t// ArgKubernetesLabel is a Kubernetes label argument.\n\tArgKubernetesLabel = \"label\"\n\t// ArgKubernetesTaint is a Kubernetes taint argument.\n\tArgKubernetesTaint = \"taint\"\n\t// ArgKubernetesAlias is a Kubernetes alias argument that saves authentication information under the specified context.\n\tArgKubernetesAlias = \"alias\"\n\t// ArgKubeConfigExpirySeconds indicates the length of time the token in a kubeconfig will be valid in seconds.\n\tArgKubeConfigExpirySeconds = \"expiry-seconds\"\n\t// ArgImage is an image argument.\n\tArgImage = \"image\"\n\t// ArgImageID is an image id argument.\n\tArgImageID = \"image-id\"\n\t// ArgImagePublic is a public image argument.\n\tArgImagePublic = \"public\"\n\t// ArgImageSlug is an image slug argument.\n\tArgImageSlug = \"image-slug\"\n\t// ArgInteractive is the argument to enable an interactive CLI.\n\tArgInteractive = \"interactive\"\n\t// ArgIPAddress is an IP address argument.\n\tArgIPAddress = \"ip-address\"\n\t// ArgDropletName is a droplet name argument.\n\tArgDropletName = \"droplet-name\"\n\t// ArgEnvFile is an environment file to load variables from.\n\tArgEnvFile = \"env-file\"\n\t// ArgResizeDisk is a resize disk argument.\n\tArgResizeDisk = \"resize-disk\"\n\t// ArgSnapshotName is a snapshot name argument.\n\tArgSnapshotName = \"snapshot-name\"\n\t// ArgSnapshotDesc is the description for volume snapshot.\n\tArgSnapshotDesc = \"snapshot-desc\"\n\t// ArgResourceType is the resource type for snapshot.\n\tArgResourceType = \"resource\"\n\t// ArgBackups is an enable backups argument.\n\tArgBackups = \"enable-backups\"\n\t// ArgDropletBackupPolicyPlan sets a frequency plan for backups.\n\tArgDropletBackupPolicyPlan = \"backup-policy-plan\"\n\t// ArgDropletBackupPolicyWeekday sets backup policy day of the week.\n\tArgDropletBackupPolicyWeekday = \"backup-policy-weekday\"\n\t// ArgDropletBackupPolicyHour sets backup policy hour.\n\tArgDropletBackupPolicyHour = \"backup-policy-hour\"\n\t// ArgIPv6 is an enable IPv6 argument.\n\tArgIPv6 = \"enable-ipv6\"\n\t// ArgPrivateNetworking is an enable private networking argument.\n\tArgPrivateNetworking = \"enable-private-networking\"\n\t// ArgMonitoring is an enable monitoring argument.\n\tArgMonitoring = \"enable-monitoring\"\n\t// ArgDropletAgent is an argument for enabling/disabling the Droplet agent.\n\tArgDropletAgent = \"droplet-agent\"\n\t// ArgRecordData is a record data argument.\n\tArgRecordData = \"record-data\"\n\t// ArgRecordID is a record id argument.\n\tArgRecordID = \"record-id\"\n\t// ArgRecordName is a record name argument.\n\tArgRecordName = \"record-name\"\n\t// ArgRecordPort is a record port argument.\n\tArgRecordPort = \"record-port\"\n\t// ArgRecordPriority is a record priority argument.\n\tArgRecordPriority = \"record-priority\"\n\t// ArgRecordType is a record type argument.\n\tArgRecordType = \"record-type\"\n\t// ArgRecordTTL is a record ttl argument.\n\tArgRecordTTL = \"record-ttl\"\n\t// ArgRecordWeight is a record weight argument.\n\tArgRecordWeight = \"record-weight\"\n\t// ArgRecordFlags is a record flags argument.\n\tArgRecordFlags = \"record-flags\"\n\t// ArgRecordTag is a record tag argument.\n\tArgRecordTag = \"record-tag\"\n\t// ArgRegionSlug is a region slug argument.\n\tArgRegionSlug = \"region\"\n\t// ArgSchemaOnly is a schema only argument.\n\tArgSchemaOnly = \"schema-only\"\n\t// ArgSizeSlug is a size slug argument.\n\tArgSizeSlug = \"size\"\n\t// ArgSizeUnit is a size unit argument.\n\tArgSizeUnit = \"size-unit\"\n\t// ArgsSSHKeyPath is a ssh argument.\n\tArgsSSHKeyPath = \"ssh-key-path\"\n\t// ArgSSHKeys is a ssh key argument.\n\tArgSSHKeys = \"ssh-keys\"\n\t// ArgsSSHPort is a ssh argument.\n\tArgsSSHPort = \"ssh-port\"\n\t// ArgsSSHAgentForwarding is a ssh argument.\n\tArgsSSHAgentForwarding = \"ssh-agent-forwarding\"\n\t// ArgsSSHPrivateIP is a ssh argument.\n\tArgsSSHPrivateIP = \"ssh-private-ip\"\n\t// ArgSSHCommand is a ssh argument.\n\tArgSSHCommand = \"ssh-command\"\n\t// ArgSSHRetryMax is a ssh argument.\n\tArgSSHRetryMax = \"ssh-retry-max\"\n\t// ArgUserData is a user data argument.\n\tArgUserData = \"user-data\"\n\t// ArgUserDataFile is a user data file location argument.\n\tArgUserDataFile = \"user-data-file\"\n\t// ArgImageName name is an image name argument.\n\tArgImageName = \"image-name\"\n\t// ArgImageExternalURL is a URL that returns an image file.\n\tArgImageExternalURL = \"image-url\"\n\t// ArgImageDistro is the name of a custom image's distribution\n\tArgImageDistro = \"image-distribution\"\n\t// ArgImageDescription is free text that describes the image.\n\tArgImageDescription = \"image-description\"\n\t// ArgKey is a key argument.\n\tArgKey = \"key\"\n\t// ArgKeyName is a key name argument.\n\tArgKeyName = \"key-name\"\n\t// ArgKeyPublicKey is a public key argument.\n\tArgKeyPublicKey = \"public-key\"\n\t// ArgKeyPublicKeyFile is a public key file argument.\n\tArgKeyPublicKeyFile = \"public-key-file\"\n\t// ArgSSHUser is a SSH user argument.\n\tArgSSHUser = \"ssh-user\"\n\t// ArgFormat is columns to include in output argument.\n\tArgFormat = \"format\"\n\t// ArgNoHeader hides the output header.\n\tArgNoHeader = \"no-header\"\n\t// ArgPollTime is how long before the next poll argument.\n\tArgPollTime = \"poll-timeout\"\n\t// ArgTagName is a tag name\n\t// NOTE: ArgTagName will be deprecated once existing uses have been migrated\n\t// to use `--tag` (ArgTag). ArgTagName should not be used on new calls.\n\tArgTagName = \"tag-name\"\n\t// ArgTagNames is a slice of possible tag names\n\t// NOTE: ArgTagNames will be deprecated once existing uses have been migrated\n\t// to use `--tag` (ArgTag). ArgTagNames should not be used on new calls.\n\tArgTagNames = \"tag-names\"\n\t// ArgTag specifies tag.  --tag can be repeated or multiple tags can be , separated.\n\tArgTag = \"tag\"\n\t//ArgTemplate is template format\n\tArgTemplate = \"template\"\n\t// ArgTimeout is a timeout duration\n\tArgTimeout = \"timeout\"\n\t// ArgTriggerDeployment indicates whether to trigger a deployment\n\tArgTriggerDeployment = \"trigger-deployment\"\n\t// ArgVersion is the version of the command to use\n\tArgVersion = \"version\"\n\t// ArgVerbose enables verbose output\n\tArgVerbose = \"verbose\"\n\n\t// ArgOutput is an output type argument.\n\tArgOutput = \"output\"\n\n\t// ArgUptimeCheckName is the name of an uptime check.\n\tArgUptimeCheckName = \"name\"\n\t// ArgUptimeCheckType is the type of an uptime check.\n\tArgUptimeCheckType = \"type\"\n\t// ArgUptimeCheckTarget is the target of an uptime check.\n\tArgUptimeCheckTarget = \"target\"\n\t// ArgUptimeCheckRegions are the regions of an uptime check.\n\tArgUptimeCheckRegions = \"regions\"\n\t// ArgUptimeCheckEnabled is whether or not an uptime check is enabled.\n\tArgUptimeCheckEnabled = \"enabled\"\n\n\t// ArgUptimeAlertName is the name of an uptime alert.\n\tArgUptimeAlertName = \"name\"\n\t// ArgUptimeAlertType is the type of an uptime alert.\n\tArgUptimeAlertType = \"type\"\n\t// ArgUptimeAlertThreshold the threshold at which an uptime alert will trigger.\n\tArgUptimeAlertThreshold = \"threshold\"\n\t// ArgUptimeAlertComparison is the uptime alert comparator.\n\tArgUptimeAlertComparison = \"comparison\"\n\t// ArgUptimeAlertEmails are the emails to send uptime alerts to.\n\tArgUptimeAlertEmails = \"emails\"\n\t// ArgUptimeAlertSlackChannels are the Slack channels to send uptime alerts to.\n\tArgUptimeAlertSlackChannels = \"slack-channels\"\n\t// ArgUptimeAlertSlackURLs are the Slack URLs to send uptime alerts to.\n\tArgUptimeAlertSlackURLs = \"slack-urls\"\n\t// ArgUptimeAlertPeriod is the time threshold at which an uptime alert will trigger.\n\tArgUptimeAlertPeriod = \"period\"\n\n\t// ArgVolumeSize is the size of a volume.\n\tArgVolumeSize = \"size\"\n\t// ArgVolumeDesc is the description of a volume.\n\tArgVolumeDesc = \"desc\"\n\t// ArgVolumeRegion is the region of a volume.\n\tArgVolumeRegion = \"region\"\n\t// ArgVolumeSnapshot is the snapshot from which to create a volume.\n\tArgVolumeSnapshot = \"snapshot\"\n\t// ArgVolumeFilesystemType is the filesystem type for a volume.\n\tArgVolumeFilesystemType = \"fs-type\"\n\t// ArgVolumeFilesystemLabel is the filesystem label for a volume.\n\tArgVolumeFilesystemLabel = \"fs-label\"\n\t// ArgVolumeList is the IDs of many volumes.\n\tArgVolumeList = \"volumes\"\n\t// ArgVolumeSnapshotList is the IDs of many volume snapshots.\n\tArgVolumeSnapshotList = \"snapshots\"\n\t// ArgLoadBalancerList is the IDs of many load balancers.\n\tArgLoadBalancerList = \"load-balancers\"\n\n\t// ArgCDNTTL is a cdn ttl argument\n\tArgCDNTTL = \"ttl\"\n\t// ArgCDNDomain is a cdn custom domain argument\n\tArgCDNDomain = \"domain\"\n\t// ArgCDNCertificateID is a certificate id to use with a custom domain\n\tArgCDNCertificateID = \"certificate-id\"\n\t// ArgCDNFiles is a cdn files argument\n\tArgCDNFiles = \"files\"\n\n\t// ArgCertificateName is a name of the certificate.\n\tArgCertificateName = \"name\"\n\t// ArgCertificateDNSNames is a list of DNS names.\n\tArgCertificateDNSNames = \"dns-names\"\n\t// ArgPrivateKeyPath is a path to a private key for the certificate.\n\tArgPrivateKeyPath = \"private-key-path\"\n\t// ArgLeafCertificatePath is a path to a certificate leaf.\n\tArgLeafCertificatePath = \"leaf-certificate-path\"\n\t// ArgCertificateChainPath is a path to a certificate chain.\n\tArgCertificateChainPath = \"certificate-chain-path\"\n\t// ArgCertificateType is a certificate type.\n\tArgCertificateType = \"type\"\n\n\t// ArgLoadBalancerName is a name of the load balancer.\n\tArgLoadBalancerName = \"name\"\n\t// ArgLoadBalancerAlgorithm is a load balancing algorithm.\n\tArgLoadBalancerAlgorithm = \"algorithm\"\n\t// ArgRedirectHTTPToHTTPS is a flag that indicates whether HTTP requests to the load balancer on port 80 should be redirected to HTTPS on port 443.\n\tArgRedirectHTTPToHTTPS = \"redirect-http-to-https\"\n\t// ArgEnableProxyProtocol is a flag that indicates whether PROXY protocol should be enabled on the load balancer.\n\tArgEnableProxyProtocol = \"enable-proxy-protocol\"\n\t// ArgDisableLetsEncryptDNSRecords is a flag that when set will disable the creation of DNS records pointing to the load balancer IP from the apex domain in the cert.\n\tArgDisableLetsEncryptDNSRecords = \"disable-lets-encrypt-dns-records\"\n\t// ArgEnableBackendKeepalive is a flag that indicates whether keepalive connections should be enabled to target droplets from the load balancer.\n\tArgEnableBackendKeepalive = \"enable-backend-keepalive\"\n\t// ArgStickySessions is a list of sticky sessions settings for the load balancer.\n\tArgStickySessions = \"sticky-sessions\"\n\t// ArgHealthCheck is a list of health check settings for the load balancer.\n\tArgHealthCheck = \"health-check\"\n\t// ArgForwardingRules is a list of forwarding rules for the load balancer.\n\tArgForwardingRules = \"forwarding-rules\"\n\t// ArgHTTPIdleTimeoutSeconds is the http idle time out configuration for the load balancer\n\tArgHTTPIdleTimeoutSeconds = \"http-idle-timeout-seconds\"\n\t// ArgAllowList is the list of firewall rules for ALLOWING traffic to the loadbalancer\n\tArgAllowList = \"allow-list\"\n\t// ArgDenyList is a list of firewall rules for DENYING traffic to the loadbalancer\n\tArgDenyList = \"deny-list\"\n\t// ArgLoadBalancerType is the type of the load balancer.\n\tArgLoadBalancerType = \"type\"\n\t// ArgLoadBalancerDomains is list of domains supported for global load balancer.\n\tArgLoadBalancerDomains = \"domains\"\n\t// ArgGlobalLoadBalancerSettings is global load balancer settings.\n\tArgGlobalLoadBalancerSettings = \"glb-settings\"\n\t// ArgGlobalLoadBalancerCDNSettings is global load balancer CDN settings.\n\tArgGlobalLoadBalancerCDNSettings = \"glb-cdn-settings\"\n\t// ArgTargetLoadBalancerIDs is a list of target load balancer IDs.\n\tArgTargetLoadBalancerIDs = \"target-lb-ids\"\n\t// ArgLoadBalancerNetwork is the type of network the load balancer is accessible from.\n\tArgLoadBalancerNetwork = \"network\"\n\n\t// ArgFirewallName is a name of the firewall.\n\tArgFirewallName = \"name\"\n\t// ArgInboundRules is a list of inbound rules for the firewall.\n\tArgInboundRules = \"inbound-rules\"\n\t// ArgOutboundRules is a list of outbound rules for the firewall.\n\tArgOutboundRules = \"outbound-rules\"\n\n\t// ArgProjectID is the ID of a project.\n\tArgProjectID = \"project-id\"\n\t// ArgProjectName is the name of a project.\n\tArgProjectName = \"name\"\n\t// ArgProjectDescription is the description of a project.\n\tArgProjectDescription = \"description\"\n\t// ArgProjectPurpose is the purpose of a project.\n\tArgProjectPurpose = \"purpose\"\n\t// ArgProjectEnvironment is the environment of a project. Should be one of 'Development', 'Staging', 'Production'.\n\tArgProjectEnvironment = \"environment\"\n\t// ArgProjectIsDefault is used to change the default project.\n\tArgProjectIsDefault = \"is_default\"\n\t// ArgProjectResource is a flag for your resource URNs\n\tArgProjectResource = \"resource\"\n\n\t// ArgDatabaseRestoreFromClusterName is a flag for specifying the name of an existing database cluster from which the backup will be restored.\n\tArgDatabaseRestoreFromClusterName = \"restore-from-cluster-name\"\n\t// ArgDatabaseRestoreFromClusterID is a flag for specifying the id of an existing database cluster from which the new database will be forked from.\n\tArgDatabaseRestoreFromClusterID = \"restore-from-cluster-id\"\n\t// ArgDatabaseRestoreFromTimestamp is a flag for specifying the timestamp of an existing database cluster backup in ISO8601 combined date and time format. The most recent backup will be used if excluded.\n\tArgDatabaseRestoreFromTimestamp = \"restore-from-timestamp\"\n\t// ArgDatabaseEngine is a flag for specifying which database engine to use\n\tArgDatabaseEngine = \"engine\"\n\t// ArgDatabaseConfigJson is a flag for specifying the database configuration in JSON format for an update\n\tArgDatabaseConfigJson = \"config-json\"\n\t// ArgDatabaseNumNodes is the number of nodes in the database cluster\n\tArgDatabaseNumNodes = \"num-nodes\"\n\t// ArgDatabaseStorageSizeMib is the amount of disk space, in MiB, that should be allocated to the database cluster\n\tArgDatabaseStorageSizeMib = \"storage-size-mib\"\n\t// ArgDatabaseMaintenanceDay is the new day for the maintenance window\n\tArgDatabaseMaintenanceDay = \"day\"\n\t// ArgDatabaseMaintenanceHour is the new hour for the maintenance window\n\tArgDatabaseMaintenanceHour = \"hour\"\n\t// ArgDatabasePoolUserName is the name of user for use with connection pool\n\tArgDatabasePoolUserName = \"user\"\n\t// ArgDatabasePoolDBName is the database for use with connection pool\n\tArgDatabasePoolDBName = \"db\"\n\t// ArgDatabasePoolSize is the flag for connection pool size\n\tArgDatabasePoolSize = \"size\"\n\t// ArgDatabasePoolMode is the flag for connection pool mode\n\tArgDatabasePoolMode = \"mode\"\n\t// ArgDatabaseUserMySQLAuthPlugin is a flag for setting the MySQL user auth plugin\n\tArgDatabaseUserMySQLAuthPlugin = \"mysql-auth-plugin\"\n\t// ArgDatabasePrivateConnectionBool determine if the private connection details should be shown\n\tArgDatabasePrivateConnectionBool = \"private\"\n\t// ArgDatabaseUserKafkaACLs will specify permissions on topics in kafka clsuter\n\tArgDatabaseUserKafkaACLs = \"acl\"\n\t// ArgDatabaseUserOpenSearchACLs will specify permissions on indexes in opensearch clsuter\n\tArgDatabaseUserOpenSearchACLs = \"opensearch-acl\"\n\n\t// ArgDatabaseTopicReplicationFactor is the replication factor of a kafka topic\n\tArgDatabaseTopicReplicationFactor = \"replication-factor\"\n\t// ArgDatabaseTopicPartitionCount is the number of partitions that are associated with a kafka topic\n\tArgDatabaseTopicPartitionCount = \"partition-count\"\n\t// ArgDatabaseTopicCleanupPolicy is the cleanup policy associated with a kafka topic\n\tArgDatabaseTopicCleanupPolicy = \"cleanup-policy\"\n\t// ArgDatabaseTopicCompressionType is the compression algorithm used for a kafka topic\n\tArgDatabaseTopicCompressionType = \"compression-type\"\n\t// ArgDatabaseTopicDeleteRetentionMS is the amount of time, in ms, to retain delete tombstone markers for a kafka topic\n\tArgDatabaseTopicDeleteRetentionMS = \"delete-retention-ms\"\n\t// ArgDatabaseTopicFileDeleteDelayMS is the amount of time, in ms, to wait before deleting a file from the filesystem\n\tArgDatabaseTopicFileDeleteDelayMS = \"file-delete-delay-ms\"\n\t// ArgDatabaseTopicFlushMessages is the size, in bytes, of all messages to accumulate on a partition before flushing them to disk\n\tArgDatabaseTopicFlushMessages = \"flush-messages\"\n\t// ArgDatabaseTopicFlushMS is the amount of time, in ms, a message is kept in memory before it is flushed to disk\n\tArgDatabaseTopicFlushMS = \"flush-ms\"\n\t// ArgDatabaseTopicIntervalIndexBytes is the number of bytes between entries being added into the offset index\n\tArgDatabaseTopicIntervalIndexBytes = \"interval-index-bytes\"\n\t// ArgDatabaseTopicMaxCompactionLagMS is the maximum amount of time, in ms, that a message will remain uncompacted (if compaction is enabled)\n\tArgDatabaseTopicMaxCompactionLagMS = \"max-compaction-lag-ms\"\n\t// ArgDatabaseTopicMaxMessageBytes is the maximum size, in bytes, of the largest record batch that can be sent to the server\n\tArgDatabaseTopicMaxMessageBytes = \"max-message-bytes\"\n\t// ArgDatabaseTopicMessageDownConversionEnable determines whether brokers should convert messages for consumers expecting older message formats\n\tArgDatabaseTopicMessageDownConversionEnable = \"message-down-conversion-enable\"\n\t// ArgDatabaseTopicMessageFormatVersion is the version used by the broker to append messages to the kafka topic logs\n\tArgDatabaseTopicMessageFormatVersion = \"message-format-version\"\n\t// ArgDatabaseTopicMessageTimestampType is the timestamp used for messages\n\tArgDatabaseTopicMessageTimestampType = \"message-timestamp-type\"\n\t// ArgDatabaseTopicMinCleanableDirtyRatio is ratio, between 0 and 1, specifying the frequenty of log compaction\n\tArgDatabaseTopicMinCleanableDirtyRatio = \"min-cleanable-dirty-ratio\"\n\t// ArgDatabaseTopicMinCompactionLagMS is the minimum time, in ms, that a message will remain uncompacted\n\tArgDatabaseTopicMinCompactionLagMS = \"min-compaction-lag-ms\"\n\t// ArgDatabaseTopicMinInsyncReplicas is the minimum number of replicas that must ACK a write for the write to be considered successful\n\tArgDatabaseTopicMinInsyncReplicas = \"min-insync-replicas\"\n\t// ArgDatabaseTopicPreallocate determines whether a file should be preallocated on disk when creating a new log segment\n\tArgDatabaseTopicPreallocate = \"preallocate\"\n\t// ArgDatabaseTopicRetentionBytes is the maximum size, in bytes, of a topic log before messages are deleted\n\tArgDatabaseTopicRetentionBytes = \"retention-bytes\"\n\t// ArgDatabaseTopicRetentionMS is the maximum time, in ms, that a message is retained before deleting it\n\tArgDatabaseTopicRetentionMS = \"retention-ms\"\n\t// ArgDatabaseTopicSegmentBytes is the maximum size, in bytes, of a single log file\n\tArgDatabaseTopicSegmentBytes = \"segment-bytes\"\n\t// ArgDatabaseTopicSegmentJitterMS is the maximum random jitter, in ms, subtracted from the scheduled segment roll time to avoid thundering herds of segment rolling\n\tArgDatabaseTopicSegmentJitterMS = \"segment-jitter-ms\"\n\t// ArgDatabaseTopicSegmentMS is the period of time, in ms, after which the log will be forced to roll if the segment file isn't full\n\tArgDatabaseTopicSegmentMS = \"segment-ms\"\n\n\t// ArgPrivateNetworkUUID is the flag for VPC UUID\n\tArgPrivateNetworkUUID = \"private-network-uuid\"\n\n\t// ArgForce forces confirmation on actions\n\tArgForce = \"force\"\n\n\t// ArgObjectName is the Kubernetes object name\n\tArgObjectName = \"name\"\n\t// ArgObjectNamespace is the Kubernetes object namespace\n\tArgObjectNamespace = \"namespace\"\n\n\t// ArgVPCName is a name of the VPC.\n\tArgVPCName = \"name\"\n\t// ArgVPCDescription is a VPC description.\n\tArgVPCDescription = \"description\"\n\t// ArgVPCDefault is the VPC default argument, to update a specific VPC to the default VPC.\n\tArgVPCDefault = \"default\"\n\t// ArgVPCIPRange is a VPC range of IP addresses in CIDR notation.\n\tArgVPCIPRange = \"ip-range\"\n\n\t// ArgVPCPeeringName is a name of the VPC Peering.\n\tArgVPCPeeringName = \"name\"\n\t// ArgVPCPeeringVPCIDs is the vpc ids of the peering\n\tArgVPCPeeringVPCIDs = \"vpc-ids\"\n\t// ArgVPCPeeringVPCID is id of the VPC.\n\tArgVPCPeeringVPCID = \"vpc-id\"\n\n\t// ArgReadWrite indicates a generated token should be read/write.\n\tArgReadWrite = \"read-write\"\n\t// ArgRegistry indicates the name of the registry.\n\tArgRegistry = \"registry\"\n\t// ArgRegistryExpirySeconds indicates the length of time the token will be valid in seconds.\n\tArgRegistryExpirySeconds = \"expiry-seconds\"\n\t// ArgRegistryReadOnly indicates that a generated registry API token should be read-only.\n\tArgRegistryReadOnly = \"read-only\"\n\t// ArgRegistryNeverExpire indicates that a generated registry API token should never expire.\n\tArgRegistryNeverExpire = \"never-expire\"\n\t// ArgSubscriptionTier is a subscription tier slug.\n\tArgSubscriptionTier = \"subscription-tier\"\n\t// ArgGCIncludeUntaggedManifests indicates that a garbage collection should delete\n\t// all untagged manifests.\n\tArgGCIncludeUntaggedManifests = \"include-untagged-manifests\"\n\t// ArgGCExcludeUnreferencedBlobs indicates that a garbage collection should\n\t// not delete unreferenced blobs.\n\tArgGCExcludeUnreferencedBlobs = \"exclude-unreferenced-blobs\"\n\t// ArgRegistryAuthorizationServerEndpoint is the endpoint of the OAuth authorization server\n\t// used to revoke credentials on logout.\n\tArgRegistryAuthorizationServerEndpoint = \"authorization-server-endpoint\"\n\n\t// 1-Click Args\n\n\t// ArgOneClicks is the flag to pass in 1-click application slugs\n\tArgOneClicks = \"1-clicks\"\n\n\t// ArgOneClickType is the type of 1-Click\n\tArgOneClickType = \"type\"\n\n\t//ArgDangerous indicates whether to delete the cluster and all it's associated resources\n\tArgDangerous = \"dangerous\"\n\n\t// ArgDatabaseFirewallRule the firewall rules.\n\tArgDatabaseFirewallRule = \"rule\"\n\n\t// ArgDatabaseFirewallRuleUUID is the UUID for the firewall rules.\n\tArgDatabaseFirewallRuleUUID = \"uuid\"\n\n\t// Monitoring Args\n\n\t// ArgAlertPolicyDescription is the flag to pass in the alert policy description.\n\tArgAlertPolicyDescription = \"description\"\n\n\t// ArgAlertPolicyType is the alert policy type.\n\tArgAlertPolicyType = \"type\"\n\n\t// ArgAlertPolicyValue is the alert policy value.\n\tArgAlertPolicyValue = \"value\"\n\n\t// ArgAlertPolicyWindow is the alert policy window.\n\tArgAlertPolicyWindow = \"window\"\n\n\t// ArgAlertPolicyTags is the alert policy tags.\n\tArgAlertPolicyTags = \"tags\"\n\n\t// ArgAlertPolicyEntities is the alert policy entities.\n\tArgAlertPolicyEntities = \"entities\"\n\n\t// ArgAlertPolicyEnabled is whether the alert policy is enabled.\n\tArgAlertPolicyEnabled = \"enabled\"\n\n\t// ArgAlertPolicyCompare is the alert policy comparator.\n\tArgAlertPolicyCompare = \"compare\"\n\n\t// ArgAlertPolicyEmails are the emails to send alerts to.\n\tArgAlertPolicyEmails = \"emails\"\n\n\t// ArgAlertPolicySlackChannels are the Slack channels to send alerts to.\n\tArgAlertPolicySlackChannels = \"slack-channels\"\n\n\t// ArgAlertPolicySlackURLs are the Slack URLs to send alerts to.\n\tArgAlertPolicySlackURLs = \"slack-urls\"\n\n\t// ArgTokenValidationServer is the server used to validate an OAuth token\n\tArgTokenValidationServer = \"token-validation-server\"\n\n\t// ArgGPUs specifies to list GPU Droplets\n\tArgGPUs = \"gpus\"\n)\n"
        },
        {
          "name": "args_short.go",
          "type": "blob",
          "size": 0.662109375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nconst (\n\t// ArgShortForce forces confirmation on actions\n\tArgShortForce = \"f\"\n)\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "do",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "doit.go",
          "type": "blob",
          "size": 17.814453125,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"os\"\n\t\"regexp\"\n\t\"runtime\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/blang/semver\"\n\t\"github.com/digitalocean/doctl/pkg/listen\"\n\t\"github.com/digitalocean/doctl/pkg/runner\"\n\t\"github.com/digitalocean/doctl/pkg/ssh\"\n\t\"github.com/digitalocean/doctl/pkg/terminal\"\n\t\"github.com/digitalocean/godo\"\n\t\"github.com/docker/docker/client\"\n\t\"github.com/spf13/viper\"\n\t\"golang.org/x/oauth2\"\n\n\t\"github.com/digitalocean/doctl/internal/apps/builder\"\n)\n\nconst (\n\t// LatestReleaseURL is the latest release URL endpoint.\n\tLatestReleaseURL = \"https://api.github.com/repos/digitalocean/doctl/releases/latest\"\n)\n\n// Version is the version info for doit.\ntype Version struct {\n\tMajor, Minor, Patch int\n\tName, Build, Label  string\n}\n\nvar (\n\t// Build is set at build time. It defines the git SHA for the current\n\t// build.\n\tBuild string\n\n\t// Major is set at build time. It defines the major semantic version of\n\t// doctl.\n\tMajor string\n\n\t// Minor is set at build time. It defines the minor semantic version of\n\t// doctl.\n\tMinor string\n\n\t// Patch is set at build time. It defines the patch semantic version of\n\t// doctl.\n\tPatch string\n\n\t// Label is set at build time. It defines the string that comes after the\n\t// version of doctl, ie, the \"dev\" in v1.0.0-dev.\n\tLabel string\n\n\t// DoitVersion is doctl's version.\n\tDoitVersion Version\n\n\t// TraceHTTP traces http connections.\n\tTraceHTTP bool\n)\n\nfunc init() {\n\tif Build != \"\" {\n\t\tDoitVersion.Build = Build\n\t}\n\tif Major != \"\" {\n\t\ti, _ := strconv.Atoi(Major)\n\t\tDoitVersion.Major = i\n\t}\n\tif Minor != \"\" {\n\t\ti, _ := strconv.Atoi(Minor)\n\t\tDoitVersion.Minor = i\n\t}\n\tif Patch != \"\" {\n\t\ti, _ := strconv.Atoi(Patch)\n\t\tDoitVersion.Patch = i\n\t}\n\tif Label == \"\" {\n\t\tDoitVersion.Label = \"dev\"\n\t} else {\n\t\tDoitVersion.Label = Label\n\t}\n}\n\nfunc (v Version) String() string {\n\tvar buffer bytes.Buffer\n\tbuffer.WriteString(fmt.Sprintf(\"%d.%d.%d\", v.Major, v.Minor, v.Patch))\n\tif v.Label != \"\" {\n\t\tbuffer.WriteString(\"-\" + v.Label)\n\t}\n\n\treturn buffer.String()\n}\n\n// Complete is the complete version for doit.\nfunc (v Version) Complete(lv LatestVersioner) string {\n\tvar buffer bytes.Buffer\n\tbuffer.WriteString(fmt.Sprintf(\"doctl version %s\", v.String()))\n\n\tif v.Build != \"\" {\n\t\tbuffer.WriteString(fmt.Sprintf(\"\\nGit commit hash: %s\", v.Build))\n\t}\n\n\tif tagName, err := lv.LatestVersion(); err == nil {\n\t\tv0, err1 := semver.Make(tagName)\n\t\tv1, err2 := semver.Make(v.String())\n\n\t\tif len(v0.Build) == 0 {\n\t\t\tv0, err1 = semver.Make(tagName + \"-release\")\n\t\t}\n\n\t\tif err1 == nil && err2 == nil && v0.GT(v1) {\n\t\t\tbuffer.WriteString(fmt.Sprintf(\"\\nrelease %s is available, check it out! \", tagName))\n\t\t}\n\t}\n\n\treturn buffer.String()\n}\n\n// CompleteJSON is the complete version for doit, formatted as JSON.\nfunc (v Version) CompleteJSON(lv LatestVersioner) string {\n\tversionInfo := &struct {\n\t\tVersion       string `json:\"version,omitempty\"`\n\t\tCommit        string `json:\"commit,omitempty\"`\n\t\tLatestRelease string `json:\"latestRelease\"`\n\t\tNotification  string `json:\"notification,omitempty\"`\n\t}{\n\t\tVersion: v.String(),\n\t\tCommit:  v.Build,\n\t}\n\n\tif tagName, err := lv.LatestVersion(); err == nil {\n\t\tversionInfo.LatestRelease = tagName\n\n\t\tv0, err1 := semver.Make(tagName)\n\t\tv1, err2 := semver.Make(v.String())\n\n\t\tif len(v0.Build) == 0 {\n\t\t\tv0, err1 = semver.Make(tagName + \"-release\")\n\t\t}\n\n\t\tif err1 == nil && err2 == nil && v0.GT(v1) {\n\t\t\tversionInfo.Notification = fmt.Sprintf(\"release %s is available, check it out!\", tagName)\n\t\t}\n\t}\n\n\tdata, _ := json.MarshalIndent(versionInfo, \"\", \"  \")\n\treturn string(data)\n}\n\n// LatestVersioner an interface for detecting the latest version.\ntype LatestVersioner interface {\n\tLatestVersion() (string, error)\n}\n\n// GithubLatestVersioner retrieves the latest version from GitHub.\ntype GithubLatestVersioner struct{}\n\nvar _ LatestVersioner = &GithubLatestVersioner{}\n\n// LatestVersion retrieves the latest version from Github or returns\n// an error.\nfunc (glv *GithubLatestVersioner) LatestVersion() (string, error) {\n\tu := LatestReleaseURL\n\tres, err := http.Get(u)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tdefer res.Body.Close()\n\n\tvar m map[string]any\n\tif err = json.NewDecoder(res.Body).Decode(&m); err != nil {\n\t\treturn \"\", err\n\t}\n\n\ttn, ok := m[\"tag_name\"]\n\tif !ok {\n\t\treturn \"\", errors.New(\"could not find tag name in response\")\n\t}\n\n\ttagName := tn.(string)\n\treturn strings.TrimPrefix(tagName, \"v\"), nil\n}\n\n// Config is an interface that represent doit's config.\ntype Config interface {\n\tGetGodoClient(trace, allowRetries bool, accessToken string) (*godo.Client, error)\n\tGetDockerEngineClient() (builder.DockerEngineClient, error)\n\tSSH(user, host, keyPath string, port int, opts ssh.Options) runner.Runner\n\tListen(url *url.URL, token string, schemaFunc listen.SchemaFunc, out io.Writer, inCh <-chan []byte) listen.ListenerService\n\tTerminal() terminal.Terminal\n\tSet(ns, key string, val any)\n\tIsSet(key string) bool\n\tGetString(ns, key string) (string, error)\n\tGetBool(ns, key string) (bool, error)\n\tGetBoolPtr(ns, key string) (*bool, error)\n\tGetInt(ns, key string) (int, error)\n\tGetIntPtr(ns, key string) (*int, error)\n\tGetStringSlice(ns, key string) ([]string, error)\n\tGetStringSliceIsFlagSet(ns, key string) ([]string, bool, error)\n\tGetStringMapString(ns, key string) (map[string]string, error)\n\tGetDuration(ns, key string) (time.Duration, error)\n}\n\n// LiveConfig is an implementation of Config for live values.\ntype LiveConfig struct {\n\tcliArgs map[string]bool\n}\n\nvar _ Config = &LiveConfig{}\n\n// GetGodoClient returns a GodoClient.\nfunc (c *LiveConfig) GetGodoClient(trace, allowRetries bool, accessToken string) (*godo.Client, error) {\n\tif accessToken == \"\" {\n\t\treturn nil, fmt.Errorf(\"access token is required. (hint: run 'doctl auth init')\")\n\t}\n\n\ttokenSource := oauth2.StaticTokenSource(&oauth2.Token{AccessToken: accessToken})\n\toauthClient := oauth2.NewClient(context.Background(), tokenSource)\n\n\targs := []godo.ClientOpt{\n\t\tgodo.SetUserAgent(userAgent()),\n\t}\n\n\tlogger := log.New(os.Stderr, \"doctl: \", log.LstdFlags)\n\n\tretryMax := viper.GetInt(\"http-retry-max\")\n\tretryWaitMax := viper.GetInt(\"http-retry-wait-max\")\n\tretryWaitMin := viper.GetInt(\"http-retry-wait-min\")\n\tif retryMax > 0 && allowRetries {\n\t\tretryConfig := godo.RetryConfig{\n\t\t\tRetryMax: retryMax,\n\t\t}\n\n\t\tif retryWaitMax > 0 {\n\t\t\tretryConfig.RetryWaitMax = godo.PtrTo(float64(retryWaitMax))\n\t\t}\n\n\t\tif retryWaitMin > 0 {\n\t\t\tretryConfig.RetryWaitMin = godo.PtrTo(float64(retryWaitMin))\n\t\t}\n\n\t\tif trace {\n\t\t\tretryConfig.Logger = logger\n\t\t}\n\n\t\targs = append(args, godo.WithRetryAndBackoffs(retryConfig))\n\t}\n\n\tapiURL := viper.GetString(\"api-url\")\n\tif apiURL != \"\" {\n\t\targs = append(args, godo.SetBaseURL(apiURL))\n\t}\n\n\tclient, err := godo.New(oauthClient, args...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif trace {\n\t\tr := newRecorder(client.HTTPClient.Transport)\n\n\t\tgo func() {\n\t\t\tfor {\n\t\t\t\tselect {\n\t\t\t\tcase msg := <-r.req:\n\t\t\t\t\tlogger.Println(\"->\", strconv.Quote(msg))\n\t\t\t\tcase msg := <-r.resp:\n\t\t\t\t\tlogger.Println(\"<-\", strconv.Quote(msg))\n\t\t\t\t}\n\t\t\t}\n\t\t}()\n\n\t\tclient.HTTPClient.Transport = r\n\t}\n\n\treturn client, nil\n}\n\n// GetDockerEngineClient returns a container engine client.\nfunc (c *LiveConfig) GetDockerEngineClient() (builder.DockerEngineClient, error) {\n\tcli, err := client.NewClientWithOpts(client.FromEnv)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn cli, nil\n}\n\nfunc userAgent() string {\n\treturn fmt.Sprintf(\"doctl/%s (%s %s)\", DoitVersion.String(), runtime.GOOS, runtime.GOARCH)\n}\n\n// SSH creates a ssh connection to a host.\nfunc (c *LiveConfig) SSH(user, host, keyPath string, port int, opts ssh.Options) runner.Runner {\n\treturn &ssh.Runner{\n\t\tUser:            user,\n\t\tHost:            host,\n\t\tKeyPath:         keyPath,\n\t\tPort:            port,\n\t\tAgentForwarding: opts[ArgsSSHAgentForwarding].(bool),\n\t\tCommand:         opts[ArgSSHCommand].(string),\n\t\tRetriesMax:      opts[ArgSSHRetryMax].(int),\n\t}\n}\n\n// Listen creates a websocket connection\nfunc (c *LiveConfig) Listen(url *url.URL, token string, schemaFunc listen.SchemaFunc, out io.Writer, inCh <-chan []byte) listen.ListenerService {\n\treturn listen.NewListener(url, token, schemaFunc, out, inCh)\n}\n\n// Terminal returns a terminal.\nfunc (c *LiveConfig) Terminal() terminal.Terminal {\n\treturn terminal.New()\n}\n\n// Set sets a config key.\nfunc (c *LiveConfig) Set(ns, key string, val any) {\n\tviper.Set(nskey(ns, key), val)\n}\n\n// IsSet checks if a config is set\nfunc (c *LiveConfig) IsSet(key string) bool {\n\tmatches := regexp.MustCompile(\"\\b*--([a-z-_]+)\").FindAllStringSubmatch(strings.Join(os.Args, \" \"), -1)\n\tif len(matches) == 0 {\n\t\treturn false\n\t}\n\n\tif len(c.cliArgs) == 0 {\n\t\targs := make(map[string]bool)\n\t\tfor _, match := range matches {\n\t\t\targs[match[1]] = true\n\t\t}\n\t\tc.cliArgs = args\n\t}\n\treturn c.cliArgs[key]\n}\n\n// GetString returns a config value as a string.\nfunc (c *LiveConfig) GetString(ns, key string) (string, error) {\n\tnskey := nskey(ns, key)\n\tstr := viper.GetString(nskey)\n\n\tif isRequired(nskey) && strings.TrimSpace(str) == \"\" {\n\t\treturn \"\", NewMissingArgsErr(nskey)\n\t}\n\treturn str, nil\n}\n\n// GetBool returns a config value as a bool.\nfunc (c *LiveConfig) GetBool(ns, key string) (bool, error) {\n\treturn viper.GetBool(nskey(ns, key)), nil\n}\n\n// GetBoolPtr returns a config value as a bool pointer.\nfunc (c *LiveConfig) GetBoolPtr(ns, key string) (*bool, error) {\n\tif !c.IsSet(key) {\n\t\treturn nil, nil\n\t}\n\tval := viper.GetBool(nskey(ns, key))\n\treturn &val, nil\n}\n\n// GetInt returns a config value as an int.\nfunc (c *LiveConfig) GetInt(ns, key string) (int, error) {\n\tnskey := nskey(ns, key)\n\tval := viper.GetInt(nskey)\n\n\tif isRequired(nskey) && val == 0 {\n\t\treturn 0, NewMissingArgsErr(nskey)\n\t}\n\treturn val, nil\n}\n\n// GetIntPtr returns a config value as an int pointer.\nfunc (c *LiveConfig) GetIntPtr(ns, key string) (*int, error) {\n\tnskey := nskey(ns, key)\n\n\tif !c.IsSet(key) {\n\t\tif isRequired(nskey) {\n\t\t\treturn nil, NewMissingArgsErr(nskey)\n\t\t}\n\t\treturn nil, nil\n\t}\n\tval := viper.GetInt(nskey)\n\treturn &val, nil\n}\n\n// GetStringSlice returns a config value as a string slice.\nfunc (c *LiveConfig) GetStringSlice(ns, key string) ([]string, error) {\n\tnskey := nskey(ns, key)\n\tval := viper.GetStringSlice(nskey)\n\n\tif isRequired(nskey) && emptyStringSlice(val) {\n\t\treturn nil, NewMissingArgsErr(nskey)\n\t}\n\n\tout := []string{}\n\tfor _, item := range viper.GetStringSlice(nskey) {\n\t\titem = strings.TrimPrefix(item, \"[\")\n\t\titem = strings.TrimSuffix(item, \"]\")\n\n\t\tlist := strings.Split(item, \",\")\n\t\tfor _, str := range list {\n\t\t\tif str == \"\" {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tout = append(out, str)\n\t\t}\n\t}\n\treturn out, nil\n}\n\n// GetStringSliceIsFlagSet returns a config value as a string slice and a bool representing the existence of the flag.\nfunc (c *LiveConfig) GetStringSliceIsFlagSet(ns, key string) ([]string, bool, error) {\n\tif !c.IsSet(key) {\n\t\treturn nil, false, nil\n\t}\n\tstrSlice, err := c.GetStringSlice(ns, key)\n\treturn strSlice, true, err\n}\n\n// GetStringMapString returns a config value as a string to string map.\nfunc (c *LiveConfig) GetStringMapString(ns, key string) (map[string]string, error) {\n\tnskey := nskey(ns, key)\n\n\tif isRequired(nskey) && !c.IsSet(key) {\n\t\treturn nil, NewMissingArgsErr(nskey)\n\t}\n\n\t// We cannot call viper.GetStringMapString because it does not handle\n\t// pflag's StringToStringP properly:\n\t// https://github.com/spf13/viper/issues/608\n\t// Re-implement the necessary pieces on our own instead.\n\n\tvals := map[string]string{}\n\titems := viper.GetStringSlice(nskey)\n\tfor _, item := range items {\n\t\tparts := strings.SplitN(item, \"=\", 2)\n\t\tif len(parts) < 2 {\n\t\t\treturn nil, fmt.Errorf(\"item %q does not adhere to form: key=value\", item)\n\t\t}\n\t\tlabelKey := parts[0]\n\t\tlabelValue := parts[1]\n\t\tvals[labelKey] = labelValue\n\t}\n\n\treturn vals, nil\n}\n\n// GetDuration returns a config value as a duration.\nfunc (c *LiveConfig) GetDuration(ns, key string) (time.Duration, error) {\n\treturn viper.GetDuration(nskey(ns, key)), nil\n}\n\nfunc nskey(ns, key string) string {\n\tif ns != \"\" {\n\t\tkey = fmt.Sprintf(\"%s.%s\", ns, key)\n\t}\n\treturn key\n}\n\nfunc isRequired(key string) bool {\n\treturn viper.GetBool(fmt.Sprintf(\"required.%s\", key))\n}\n\n// TestConfig is an implementation of Config for testing.\ntype TestConfig struct {\n\tSSHFn              func(user, host, keyPath string, port int, opts ssh.Options) runner.Runner\n\tListenFn           func(url *url.URL, token string, schemaFunc listen.SchemaFunc, out io.Writer, inCh <-chan []byte) listen.ListenerService\n\tTerminalFn         func() terminal.Terminal\n\tv                  *viper.Viper\n\tIsSetMap           map[string]bool\n\tDockerEngineClient builder.DockerEngineClient\n}\n\nvar _ Config = &TestConfig{}\n\n// NewTestConfig creates a new, ready-to-use instance of a TestConfig.\nfunc NewTestConfig() *TestConfig {\n\treturn &TestConfig{\n\t\tSSHFn: func(u, h, kp string, p int, opts ssh.Options) runner.Runner {\n\t\t\treturn &MockRunner{}\n\t\t},\n\t\tListenFn: func(url *url.URL, token string, schemaFunc listen.SchemaFunc, out io.Writer, inCh <-chan []byte) listen.ListenerService {\n\t\t\treturn &MockListener{}\n\t\t},\n\t\tTerminalFn: func() terminal.Terminal {\n\t\t\treturn &MockTerminal{}\n\t\t},\n\t\tv:        viper.New(),\n\t\tIsSetMap: make(map[string]bool),\n\t}\n}\n\n// GetGodoClient mocks a GetGodoClient call. The returned godo client will\n// be nil.\nfunc (c *TestConfig) GetGodoClient(trace, allowRetries bool, accessToken string) (*godo.Client, error) {\n\treturn &godo.Client{}, nil\n}\n\n// GetDockerEngineClient mocks a GetDockerEngineClient call. The returned client will\n// be nil unless configured in the test config.\nfunc (c *TestConfig) GetDockerEngineClient() (builder.DockerEngineClient, error) {\n\treturn c.DockerEngineClient, nil\n}\n\n// SSH returns a mock SSH runner.\nfunc (c *TestConfig) SSH(user, host, keyPath string, port int, opts ssh.Options) runner.Runner {\n\treturn c.SSHFn(user, host, keyPath, port, opts)\n}\n\n// Listen returns a mock websocket listener\nfunc (c *TestConfig) Listen(url *url.URL, token string, schemaFunc listen.SchemaFunc, out io.Writer, inCh <-chan []byte) listen.ListenerService {\n\treturn c.ListenFn(url, token, schemaFunc, out, inCh)\n}\n\n// Terminal returns a mock terminal.\nfunc (c *TestConfig) Terminal() terminal.Terminal {\n\treturn c.TerminalFn()\n}\n\n// Set sets a config key.\nfunc (c *TestConfig) Set(ns, key string, val any) {\n\tnskey := nskey(ns, key)\n\tc.v.Set(nskey, val)\n\tc.IsSetMap[key] = true\n}\n\n// IsSet returns true if the given key is set on the config.\nfunc (c *TestConfig) IsSet(key string) bool {\n\treturn c.IsSetMap[key]\n}\n\n// GetString returns the string value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetString(ns, key string) (string, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetString(nskey), nil\n}\n\n// GetInt returns the int value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetInt(ns, key string) (int, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetInt(nskey), nil\n}\n\n// GetIntPtr returns the int value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetIntPtr(ns, key string) (*int, error) {\n\tnskey := nskey(ns, key)\n\tif !c.v.IsSet(nskey) {\n\t\treturn nil, nil\n\t}\n\tval := c.v.GetInt(nskey)\n\treturn &val, nil\n}\n\n// GetStringSlice returns the string slice value for the key in the given\n// namespace. Because this is a mock implementation, and error will never be\n// returned.\nfunc (c *TestConfig) GetStringSlice(ns, key string) ([]string, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetStringSlice(nskey), nil\n}\n\n// GetStringSliceIsFlagSet returns the string slice value for the key in the given\n// namespace and a bool representing the existence of the flag. Because this is a mock implementation,\n// and error will never be returned.\nfunc (c *TestConfig) GetStringSliceIsFlagSet(ns, key string) ([]string, bool, error) {\n\tnskey := nskey(ns, key)\n\tif !c.v.IsSet(nskey) {\n\t\treturn nil, false, nil\n\t}\n\treturn c.v.GetStringSlice(nskey), true, nil\n}\n\n// GetStringMapString returns the string-to-string value for the key in the\n// given namespace. Because this is a mock implementation, and error will never\n// be returned.\nfunc (c *TestConfig) GetStringMapString(ns, key string) (map[string]string, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetStringMapString(nskey), nil\n}\n\n// GetBool returns the bool value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetBool(ns, key string) (bool, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetBool(nskey), nil\n}\n\n// GetBoolPtr returns the bool value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetBoolPtr(ns, key string) (*bool, error) {\n\tnskey := nskey(ns, key)\n\tif !c.v.IsSet(nskey) {\n\t\treturn nil, nil\n\t}\n\tval := c.v.GetBool(nskey)\n\treturn &val, nil\n}\n\n// GetDuration returns the duration value for the key in the given namespace. Because\n// this is a mock implementation, and error will never be returned.\nfunc (c *TestConfig) GetDuration(ns, key string) (time.Duration, error) {\n\tnskey := nskey(ns, key)\n\treturn c.v.GetDuration(nskey), nil\n}\n\n// This is needed because an empty StringSlice flag returns `\"[]\"`\nfunc emptyStringSlice(s []string) bool {\n\treturn (len(s) == 1 && s[0] == \"[]\") || len(s) == 0\n}\n\n// CommandName returns the name by which doctl was invoked\nfunc CommandName() string {\n\tname, ok := os.LookupEnv(\"SNAP_NAME\")\n\tif !ok || name != \"doctl\" {\n\t\treturn os.Args[0]\n\t}\n\treturn name\n}\n"
        },
        {
          "name": "doit_test.go",
          "type": "blob",
          "size": 4.4287109375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"os\"\n\t\"regexp\"\n\t\"testing\"\n)\n\nfunc TestMain(m *testing.M) {\n\tos.Exit(m.Run())\n}\n\nfunc TestUserAgent(t *testing.T) {\n\tpattern := `doctl\\/([0-9]+\\.?){3}(-dev)? \\(([\\w ]+){2}\\)`\n\tre := regexp.MustCompile(pattern)\n\n\tt.Run(\"release version\", func(t *testing.T) {\n\t\tdv := DoitVersion\n\t\tDoitVersion = Version{Major: 0, Minor: 1, Patch: 2}\n\n\t\tua := userAgent()\n\t\tif !re.MatchString(ua) {\n\t\t\tt.Errorf(\"expected %s to match %s\", ua, pattern)\n\t\t}\n\t\tDoitVersion = dv\n\t})\n\n\tt.Run(\"dev version\", func(t *testing.T) {\n\t\tua := userAgent()\n\t\tif !re.MatchString(ua) {\n\t\t\tt.Errorf(\"expected %s to match %s\", ua, pattern)\n\t\t}\n\t})\n}\n\nfunc TestVersion(t *testing.T) {\n\tslr1 := &stubLatestRelease{version: \"0.1.0\"}\n\tslr2 := &stubLatestRelease{version: \"1.0.0\"}\n\n\tcases := []struct {\n\t\tv    Version\n\t\ts    string\n\t\tjson string\n\t\tver  string\n\t\tslr  LatestVersioner\n\t}{\n\t\t// version with no label\n\t\t{\n\t\t\tv:    Version{Major: 0, Minor: 1, Patch: 2},\n\t\t\ts:    `doctl version 0.1.2`,\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"0.1.2\\\",\\n  \\\"latestRelease\\\": \\\"0.1.0\\\"\\n}\",\n\t\t\tver:  \"0.1.2\",\n\t\t\tslr:  slr1,\n\t\t},\n\t\t// version with label\n\t\t{\n\t\t\tv:    Version{Major: 0, Minor: 1, Patch: 2, Label: \"dev\"},\n\t\t\ts:    `doctl version 0.1.2-dev`,\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"0.1.2-dev\\\",\\n  \\\"latestRelease\\\": \\\"0.1.0\\\"\\n}\",\n\t\t\tver:  \"0.1.2-dev\",\n\t\t\tslr:  slr1,\n\t\t},\n\t\t// version with label and build\n\t\t{\n\t\t\tv:    Version{Major: 0, Minor: 1, Patch: 2, Label: \"dev\", Build: \"12345\"},\n\t\t\ts:    \"doctl version 0.1.2-dev\\nGit commit hash: 12345\",\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"0.1.2-dev\\\",\\n  \\\"commit\\\": \\\"12345\\\",\\n  \\\"latestRelease\\\": \\\"0.1.0\\\"\\n}\",\n\t\t\tver:  \"0.1.2-dev\",\n\t\t\tslr:  slr1,\n\t\t},\n\t\t// version with no label and higher released version\n\t\t{\n\t\t\tv:    Version{Major: 0, Minor: 1, Patch: 2},\n\t\t\ts:    \"doctl version 0.1.2\\nrelease 1.0.0 is available, check it out! \",\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"0.1.2\\\",\\n  \\\"latestRelease\\\": \\\"1.0.0\\\",\\n  \\\"notification\\\": \\\"release 1.0.0 is available, check it out!\\\"\\n}\",\n\t\t\tver:  `0.1.2`,\n\t\t\tslr:  slr2,\n\t\t},\n\t\t// version with dev label and released version\n\t\t{\n\t\t\tv:    Version{Major: 1, Minor: 0, Patch: 0, Label: \"dev\"},\n\t\t\ts:    \"doctl version 1.0.0-dev\\nrelease 1.0.0 is available, check it out! \",\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"1.0.0-dev\\\",\\n  \\\"latestRelease\\\": \\\"1.0.0\\\",\\n  \\\"notification\\\": \\\"release 1.0.0 is available, check it out!\\\"\\n}\",\n\t\t\tver:  `1.0.0-dev`,\n\t\t\tslr:  slr2,\n\t\t},\n\t\t// version with release label and released version available\n\t\t{\n\t\t\tv:    Version{Major: 1, Minor: 0, Patch: 0, Label: \"release\"},\n\t\t\ts:    \"doctl version 1.0.0-release\",\n\t\t\tjson: \"{\\n  \\\"version\\\": \\\"1.0.0-release\\\",\\n  \\\"latestRelease\\\": \\\"1.0.0\\\"\\n}\",\n\t\t\tver:  `1.0.0-release`,\n\t\t\tslr:  slr2,\n\t\t},\n\t}\n\n\tfor _, c := range cases {\n\t\tif got, want := c.v.String(), c.ver; got != want {\n\t\t\tt.Errorf(\"version string for %#v = %q; want = %q\", c.v, got, want)\n\t\t}\n\t\tif got, want := c.v.Complete(c.slr), c.s; got != want {\n\t\t\tt.Errorf(\"complete version string for %#v = %q; want = %q\", c.v, got, want)\n\t\t}\n\t\tif got, want := c.v.CompleteJSON(c.slr), c.json; got != want {\n\t\t\tt.Errorf(\"complete version json for %#v = %q; want = %q\", c.v, got, want)\n\t\t}\n\t}\n}\n\ntype stubLatestRelease struct {\n\tversion string\n}\n\nfunc (slr stubLatestRelease) LatestVersion() (string, error) {\n\treturn slr.version, nil\n}\n\nfunc TestCommandName(t *testing.T) {\n\tt.Run(\"snap name set to goland\", func(t *testing.T) {\n\t\tconst snapName = \"goland\"\n\n\t\tt.Setenv(\"SNAP_NAME\", snapName)\n\n\t\t// When run under `go test`, os.Args[0] will be different every time,\n\t\t// so only check that the Snap name is not \"goland\".\n\t\tif actual := CommandName(); actual == snapName {\n\t\t\tt.Errorf(\"expected name not to equal %s, got %s\", snapName, actual)\n\t\t}\n\t})\n\n\tt.Run(\"snap name set to doctl\", func(t *testing.T) {\n\t\tconst expected = \"doctl\"\n\n\t\tt.Setenv(\"SNAP_NAME\", expected)\n\n\t\tif actual := CommandName(); actual != expected {\n\t\t\tt.Errorf(\"got %s, want %s\", actual, expected)\n\t\t}\n\t})\n}\n"
        },
        {
          "name": "errors.go",
          "type": "blob",
          "size": 1.4453125,
          "content": "/*\nCopyright 2018-2019 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport \"fmt\"\n\n// MissingArgsErr is returned when there are too few arguments for a command.\ntype MissingArgsErr struct {\n\tCommand string\n}\n\nvar _ error = &MissingArgsErr{}\n\n// NewMissingArgsErr creates a MissingArgsErr instance.\nfunc NewMissingArgsErr(cmd string) *MissingArgsErr {\n\treturn &MissingArgsErr{Command: cmd}\n}\n\nfunc (e *MissingArgsErr) Error() string {\n\treturn fmt.Sprintf(\"(%s) command is missing required arguments\", e.Command)\n}\n\n// TooManyArgsErr is returned when there are too many arguments for a command.\ntype TooManyArgsErr struct {\n\tCommand string\n}\n\nvar _ error = &TooManyArgsErr{}\n\n// NewTooManyArgsErr creates a TooManyArgsErr instance.\nfunc NewTooManyArgsErr(cmd string) *TooManyArgsErr {\n\treturn &TooManyArgsErr{Command: cmd}\n}\n\nfunc (e *TooManyArgsErr) Error() string {\n\treturn fmt.Sprintf(\"(%s) command contains unsupported arguments\", e.Command)\n}\n"
        },
        {
          "name": "errors_test.go",
          "type": "blob",
          "size": 0.802734375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestMissingArgsErr(t *testing.T) {\n\terr := NewMissingArgsErr(\"test-cmd\")\n\tassert.Equal(t, \"(test-cmd) command is missing required arguments\", err.Error())\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 5.75390625,
          "content": "module github.com/digitalocean/doctl\n\ngo 1.22\n\nrequire (\n\tgithub.com/blang/semver v3.5.1+incompatible\n\tgithub.com/creack/pty v1.1.21\n\tgithub.com/digitalocean/godo v1.131.1\n\tgithub.com/docker/cli v24.0.5+incompatible\n\tgithub.com/docker/docker v25.0.6+incompatible\n\tgithub.com/docker/docker-credential-helpers v0.7.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.0\n\tgithub.com/fatih/color v1.16.0\n\tgithub.com/gobwas/glob v0.2.3\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/gorilla/websocket v1.5.0\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/imdario/mergo v0.3.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mitchellh/copystructure v1.0.0\n\tgithub.com/natefinch/pie v0.0.0-20170715172608-9a0d72014007\n\tgithub.com/opencontainers/image-spec v1.1.0-rc3\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/sclevine/spec v1.3.0\n\tgithub.com/shiena/ansicolor v0.0.0-20151119151921-a422bbe96644\n\tgithub.com/spf13/cast v1.4.1 // indirect\n\tgithub.com/spf13/cobra v1.7.0\n\tgithub.com/spf13/viper v1.11.0\n\tgithub.com/stretchr/testify v1.8.4\n\tgolang.org/x/crypto v0.22.0\n\tgolang.org/x/net v0.24.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0\n\tgolang.org/x/sys v0.25.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/api v0.26.2\n\tk8s.io/apimachinery v0.26.2\n\tk8s.io/client-go v0.26.2\n\tsigs.k8s.io/yaml v1.3.0\n)\n\nrequire (\n\tgithub.com/MakeNowJust/heredoc v1.0.0\n\tgithub.com/apache/openwhisk-client-go v0.0.0-20221014112704-1ca897633f2d\n\tgithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2\n\tgithub.com/charmbracelet/bubbles v0.13.1-0.20220731172002-8f6516082803\n\tgithub.com/charmbracelet/bubbletea v0.22.0\n\tgithub.com/charmbracelet/lipgloss v0.5.0\n\tgithub.com/erikgeiser/promptkit v0.7.1-0.20220721185625-1f33bc73d091\n\tgithub.com/joho/godotenv v1.4.0\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51\n\tgithub.com/muesli/reflow v0.3.0\n\tgithub.com/muesli/termenv v0.12.0\n\tgithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8\n\tgo.uber.org/mock v0.2.0\n\tgolang.org/x/sync v0.3.0\n\tgolang.org/x/term v0.19.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/atotto/clipboard v0.1.4 // indirect\n\tgithub.com/cloudfoundry/jibber_jabber v0.0.0-20151120183258-bcc4c8345a21 // indirect\n\tgithub.com/containerd/console v1.0.3 // indirect\n\tgithub.com/containerd/containerd v1.7.11 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/go-connections v0.4.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.3 // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/go-logr/logr v1.2.4 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/hokaccha/go-prettyjson v0.0.0-20210113012101-fb4e108d2519 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.2 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/magiconair/properties v1.8.6 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.14 // indirect\n\tgithub.com/mitchellh/mapstructure v1.4.3 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.0 // indirect\n\tgithub.com/moby/buildkit v0.12.5 // indirect\n\tgithub.com/moby/patternmatcher v0.5.0 // indirect\n\tgithub.com/moby/sys/sequential v0.5.0 // indirect\n\tgithub.com/moby/sys/symlink v0.2.0 // indirect\n\tgithub.com/moby/sys/user v0.2.0 // indirect\n\tgithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/muesli/ansi v0.0.0-20211031195517-c9f0611b6c70 // indirect\n\tgithub.com/muesli/cancelreader v0.2.2 // indirect\n\tgithub.com/nicksnyder/go-i18n v1.10.1 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/pelletier/go-toml v1.9.5 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.0.0-beta.8 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/rivo/uniseg v0.4.2 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/sahilm/fuzzy v0.1.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/spf13/afero v1.8.2 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/subosito/gotenv v1.2.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 // indirect\n\tgo.opentelemetry.io/otel v1.19.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.19.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.19.0 // indirect\n\tgolang.org/x/mod v0.11.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgolang.org/x/time v0.8.0 // indirect\n\tgolang.org/x/tools v0.10.0 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/ini.v1 v1.66.4 // indirect\n\tk8s.io/klog/v2 v2.90.1 // indirect\n\tk8s.io/utils v0.0.0-20230220204549-a5ecb0141aa5 // indirect\n\tsigs.k8s.io/json v0.0.0-20220713155537-f223a00ba0e2 // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.2.3 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 77.017578125,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.44.3/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncloud.google.com/go/storage v1.14.0/go.mod h1:GrKmX003DSIwi9o29oFT7YDnHYwZoctc3fOKtUw0Xmo=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/MakeNowJust/heredoc v1.0.0 h1:cXCdzVdstXyiTqTvfqk9SDHpKNjxuom+DOlyEeQ4pzQ=\ngithub.com/MakeNowJust/heredoc v1.0.0/go.mod h1:mG5amYoWBHf8vpLOuehzbGGw0EHxpZZ6lCpQ4fNJ8LE=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/Microsoft/hcsshim v0.11.4 h1:68vKo2VN8DE9AdN4tnkWnmdhqdbpUFM8OF3Airm7fz8=\ngithub.com/Microsoft/hcsshim v0.11.4/go.mod h1:smjE4dvqPX9Zldna+t5FG3rnoHhaB7QYxPRqGcpAD9w=\ngithub.com/apache/openwhisk-client-go v0.0.0-20221014112704-1ca897633f2d h1:8sh89OGDm1tx/D/nsFwunhX90NjEPTn2k/DDLhOjexs=\ngithub.com/apache/openwhisk-client-go v0.0.0-20221014112704-1ca897633f2d/go.mod h1:SAQU4bHGJ0sg6c1vQ8ojmQKXgGaneVnexWX4+2/KMr8=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 h1:7Ip0wMmLHLRJdrloDxZfhMm0xrLXZS8+COSu2bXmEQs=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=\ngithub.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=\ngithub.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/charmbracelet/bubbles v0.13.1-0.20220731172002-8f6516082803 h1:+XxHUDsn8N5dvaLgAiCK04B+xe+gKW0pDG39T476ztM=\ngithub.com/charmbracelet/bubbles v0.13.1-0.20220731172002-8f6516082803/go.mod h1:bbeTiXwPww4M031aGi8UK2HT9RDWoiNibae+1yCMtcc=\ngithub.com/charmbracelet/bubbletea v0.21.0/go.mod h1:GgmJMec61d08zXsOhqRC/AiOx4K4pmz+VIcRIm1FKr4=\ngithub.com/charmbracelet/bubbletea v0.22.0 h1:E1BTNSE3iIrq0G0X6TjGAmrQ32cGCbFDPcIuImikrUc=\ngithub.com/charmbracelet/bubbletea v0.22.0/go.mod h1:aoVIwlNlr5wbCB26KhxfrqAn0bMp4YpJcoOelbxApjs=\ngithub.com/charmbracelet/harmonica v0.2.0/go.mod h1:KSri/1RMQOZLbw7AHqgcBycp8pgJnQMYYT8QZRqZ1Ao=\ngithub.com/charmbracelet/lipgloss v0.5.0 h1:lulQHuVeodSgDez+3rGiuxlPVXSnhth442DATR2/8t8=\ngithub.com/charmbracelet/lipgloss v0.5.0/go.mod h1:EZLha/HbzEt7cYqdFPovlqy5FZPj0xFhg5SaqxScmgs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudfoundry/jibber_jabber v0.0.0-20151120183258-bcc4c8345a21 h1:tuijfIjZyjZaHq9xDUh0tNitwXshJpbLkqMOJv4H3do=\ngithub.com/cloudfoundry/jibber_jabber v0.0.0-20151120183258-bcc4c8345a21/go.mod h1:po7NpZ/QiTKzBKyrsEAxwnTamCoh8uDk/egRpQ7siIc=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=\ngithub.com/containerd/console v1.0.3/go.mod h1:7LqA/THxQ86k76b8c/EMSiaJ3h1eZkMkXar0TQ1gf3U=\ngithub.com/containerd/containerd v1.7.11 h1:lfGKw3eU35sjV0aG2eYZTiwFEY1pCzxdzicHP3SZILw=\ngithub.com/containerd/containerd v1.7.11/go.mod h1:5UluHxHTX2rdvYuZ5OJTC5m/KJNs0Zs9wVoJm9zf5ZE=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.11/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/digitalocean/godo v1.131.1 h1:2QsRwjNukKgOQbflMxOsTDoC05o5UKBpqQMFKXegYKE=\ngithub.com/digitalocean/godo v1.131.1/go.mod h1:PU8JB6I1XYkQIdHFop8lLAY9ojp6M0XcU0TWaQSxbrc=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli v24.0.5+incompatible h1:WeBimjvS0eKdH4Ygx+ihVq1Q++xg36M/rMi4aXAvodc=\ngithub.com/docker/cli v24.0.5+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/docker v25.0.6+incompatible h1:5cPwbwriIcsua2REJe8HqQV+6WlWc1byg2QSXzBxBGg=\ngithub.com/docker/docker v25.0.6+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.7.0 h1:xtCHsjxogADNZcdv1pKUHXryefjlVRqWqIhk/uXJp0A=\ngithub.com/docker/docker-credential-helpers v0.7.0/go.mod h1:rETQfLdHNT3foU5kuNkFR1R1V12OJRRO5lzt2D1b5X0=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/emicklei/go-restful/v3 v3.10.1 h1:rc42Y5YTp7Am7CS630D7JmhRjq4UlEUuEKfrDac4bSQ=\ngithub.com/emicklei/go-restful/v3 v3.10.1/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/erikgeiser/promptkit v0.7.1-0.20220721185625-1f33bc73d091 h1:A6KY23PMnntvafsBxa3NB4X0TA4fNUNLVWnpq2goQxo=\ngithub.com/erikgeiser/promptkit v0.7.1-0.20220721185625-1f33bc73d091/go.mod h1:MWvZWFLFfUTG24wr9Y6BGCcyGE/lBP3RsMC+sjWQl1c=\ngithub.com/fatih/color v1.10.0/go.mod h1:ELkj/draVOlAH/xkhN6mQ50Qd0MPOk5AAr3maGEBuJM=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/felixge/httpsnoop v1.0.3 h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=\ngithub.com/felixge/httpsnoop v1.0.3/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-logr/logr v1.2.0/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.4 h1:g01GSCwiDw2xSZfjJ2/T9M+S6pFdcNtFYsp+Y43HYDQ=\ngithub.com/go-logr/logr v1.2.4/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-openapi/jsonpointer v0.19.5 h1:gZr+CIYByUqjcgeLXnQu2gHYQC9o73G2XUeOFYEICuY=\ngithub.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=\ngithub.com/go-openapi/jsonreference v0.20.0 h1:MYlu0sBgChmCfJxxUKZ8g1cPWFOB37YSZqewK7OKeyA=\ngithub.com/go-openapi/jsonreference v0.20.0/go.mod h1:Ag74Ico3lPc+zR+qjn4XBUmXymS4zJbYVCZmcgkasdo=\ngithub.com/go-openapi/swag v0.19.14 h1:gm3vOOXfiuw5i9p5N9xJvfjvuofpyvLA9Wr6QfK5Fng=\ngithub.com/go-openapi/swag v0.19.14/go.mod h1:QYRuS/SOXUCsnplDa677K7+DxSOj6IPNl/eQntq43wQ=\ngithub.com/gobwas/glob v0.2.3 h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=\ngithub.com/gobwas/glob v0.2.3/go.mod h1:d3Ez4x06l9bZtSvzIay5+Yzi0fmZzPgnTbPcKjJAkT8=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/gnostic v0.5.7-v3refs h1:FhTMOKj2VhjpouxvWJAV1TL304uMlb9zcDqkl6cEI54=\ngithub.com/google/gnostic v0.5.7-v3refs/go.mod h1:73MKFl6jIHelAJNaBGFzt3SPtZULs9dYrGFt8OiIsHQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.16.0 h1:YBftPWNWd4WwGqtY2yeZL2ef8rHAxPBD8KFhJpmcqms=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.16.0/go.mod h1:YN5jB8ie0yfIUg6VvR9Kz84aCaG7AsGZnLjhHbUqwPg=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hokaccha/go-prettyjson v0.0.0-20210113012101-fb4e108d2519 h1:nqAlWFEdqI0ClbTDrhDvE/8LeQ4pftrqKUX9w5k0j3s=\ngithub.com/hokaccha/go-prettyjson v0.0.0-20210113012101-fb4e108d2519/go.mod h1:pFlLw2CfqZiIBOx6BuCeRLCrfxBJipTY0nIOF/VbGcI=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.13 h1:lFzP57bqS/wsqKssCGmtLAb8A0wKjLGrve2q3PPVcBk=\ngithub.com/imdario/mergo v0.3.13/go.mod h1:4lJ1jqUDcsbIECGy0RUJAXNIhg+6ocWgb1ALK2O4oXg=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/joho/godotenv v1.4.0 h1:3l4+N6zfMWnkbPEXKng2o2/MR5mSwTrBih4ZEkkz1lg=\ngithub.com/joho/godotenv v1.4.0/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.2 h1:RlWWUY/Dr4fL8qk9YG7DTZ7PDgME2V4csBXA8L/ixi4=\ngithub.com/klauspost/compress v1.17.2/go.mod h1:ntbaceVETuRiXiv4DpjP66DpAtAGkEQskQzEyD//IeE=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/magiconair/properties v1.8.6 h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=\ngithub.com/magiconair/properties v1.8.6/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/mailru/easyjson v0.7.6 h1:8yTIVnZgCoiM1TgqoeTl+LfU5Jg6/xL3QhGQnimLYnA=\ngithub.com/mailru/easyjson v0.7.6/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.8/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.10/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-runewidth v0.0.14 h1:+xnbZSEeDbOIg5/mE6JF0w6n9duR1l3/WmbinWVwUuU=\ngithub.com/mattn/go-runewidth v0.0.14/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mitchellh/copystructure v1.0.0 h1:Laisrj+bAB6b/yJwB5Bt3ITZhGJdqmxquMKeZ+mmkFQ=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/mapstructure v1.4.3 h1:OVowDSCllw/YjdLkam3/sm7wEtOy59d8ndGgCcyj8cs=\ngithub.com/mitchellh/mapstructure v1.4.3/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.0 h1:9D+8oIskB4VJBN5SFlmc27fSlIBZaov1Wpk/IfikLNY=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/moby/buildkit v0.12.5 h1:RNHH1l3HDhYyZafr5EgstEu8aGNCwyfvMtrQDtjH9T0=\ngithub.com/moby/buildkit v0.12.5/go.mod h1:YGwjA2loqyiYfZeEo8FtI7z4x5XponAaIWsWcSjWwso=\ngithub.com/moby/patternmatcher v0.5.0 h1:YCZgJOeULcxLw1Q+sVR636pmS7sPEn1Qo2iAN6M7DBo=\ngithub.com/moby/patternmatcher v0.5.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/sys/sequential v0.5.0 h1:OPvI35Lzn9K04PBbCLW0g4LcFAJgHsvXsRyewg5lXtc=\ngithub.com/moby/sys/sequential v0.5.0/go.mod h1:tH2cOOs5V9MlPiXcQzRC+eEyab644PWKGRYaaV5ZZlo=\ngithub.com/moby/sys/symlink v0.2.0 h1:tk1rOM+Ljp0nFmfOIBtlV3rTDlWOwFRhjEeAhZB0nZc=\ngithub.com/moby/sys/symlink v0.2.0/go.mod h1:7uZVF2dqJjG/NsClqul95CqKOBRQyYSNnJ6BMgR/gFs=\ngithub.com/moby/sys/user v0.2.0 h1:OnpapJsRp25vkhw8TFG6OLJODNh/3rEwRWtJ3kakwRM=\ngithub.com/moby/sys/user v0.2.0/go.mod h1:RYstrcWOJpVh+6qzUqp2bU3eaRpdiQeKGlKitaH0PM8=\ngithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6 h1:dcztxKSvZ4Id8iPpHERQBbIJfabdt4wUm5qy3wOL2Zc=\ngithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6/go.mod h1:E2VnQOmVuvZB6UYnnDB0qG5Nq/1tD9acaOpo6xmt0Kw=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/muesli/ansi v0.0.0-20211018074035-2e021307bc4b/go.mod h1:fQuZ0gauxyBcmsdE3ZT4NasjaRdxmbCS0jRHsrWu3Ho=\ngithub.com/muesli/ansi v0.0.0-20211031195517-c9f0611b6c70 h1:kMlmsLSbjkikxQJ1IPwaM+7LJ9ltFu/fi8CRzvSnQmA=\ngithub.com/muesli/ansi v0.0.0-20211031195517-c9f0611b6c70/go.mod h1:fQuZ0gauxyBcmsdE3ZT4NasjaRdxmbCS0jRHsrWu3Ho=\ngithub.com/muesli/cancelreader v0.2.0/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/cancelreader v0.2.1/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=\ngithub.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/reflow v0.2.1-0.20210115123740-9e1d0d53df68/go.mod h1:Xk+z4oIWdQqJzsxyjgl3P22oYZnHdZ8FFTHAQQt5BMQ=\ngithub.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=\ngithub.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=\ngithub.com/muesli/termenv v0.11.1-0.20220204035834-5ac8409525e0/go.mod h1:Bd5NYQ7pd+SrtBSrSNoBBmXlcY8+Xj4BMJgh8qcZrvs=\ngithub.com/muesli/termenv v0.11.1-0.20220212125758-44cd13922739/go.mod h1:Bd5NYQ7pd+SrtBSrSNoBBmXlcY8+Xj4BMJgh8qcZrvs=\ngithub.com/muesli/termenv v0.12.0 h1:KuQRUE3PgxRFWhq4gHvZtPSLCGDqM5q/cYr1pZ39ytc=\ngithub.com/muesli/termenv v0.12.0/go.mod h1:WCCv32tusQ/EEZ5S8oUIIrC/nIuBcxCVqlN4Xfkv+7A=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/natefinch/pie v0.0.0-20170715172608-9a0d72014007 h1:Ohgj9L0EYOgXxkDp+bczlMBiulwmqYzQpvQNUdtt3oc=\ngithub.com/natefinch/pie v0.0.0-20170715172608-9a0d72014007/go.mod h1:wKCOWMb6iNlvKiOToY2cNuaovSXvIiv1zDi9QDR7aGQ=\ngithub.com/nicksnyder/go-i18n v1.10.1 h1:isfg77E/aCD7+0lD/D00ebR2MV5vgeQ276WYyDaCRQc=\ngithub.com/nicksnyder/go-i18n v1.10.1/go.mod h1:e4Di5xjP9oTVrC6y3C7C0HoSYXjSbhh/dU0eUV32nB4=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/nxadm/tail v1.4.4 h1:DQuhQpB1tVlglWS2hLQ5OV6B5r8aGxSrPc5Qo6uTN78=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.15.0 h1:1V1NfVQR87RtWAgp1lv9JZJ5Jap+XFGKPi00andXGi4=\ngithub.com/onsi/ginkgo v1.15.0/go.mod h1:hF8qUzuuC8DJGygJH3726JnCZX4MYbRB8yFfISqnKUg=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.10.5/go.mod h1:gza4q3jKQJijlu05nKWRCW/GavJumGt8aNRxWg7mt48=\ngithub.com/onsi/gomega v1.23.0 h1:/oxKu9c2HVap+F3PfKort2Hw5DEU+HGlW8n+tguWsys=\ngithub.com/onsi/gomega v1.23.0/go.mod h1:Z/NWtiqwBrwUt4/2loMmHL63EDLnYHmVbuBpDr2vQAg=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0-rc3 h1:fzg1mXZFj8YdPeNkRXMg+zb88BFV0Ys52cJydRwBkb8=\ngithub.com/opencontainers/image-spec v1.1.0-rc3/go.mod h1:X4pATf0uXsnn3g5aiGIsVnJBR4mxhKzfwmvK/B2NTm8=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.0.0-beta.8 h1:dy81yyLYJDwMTifq24Oi/IslOslRrDSb3jwDggjz3Z0=\ngithub.com/pelletier/go-toml/v2 v2.0.0-beta.8/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=\ngithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 h1:KoWmjvw+nsYOo29YJK9vDA65RGE3NrOnUtO7a+RF9HU=\ngithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.2 h1:YwD0ulJSJytLpiaWua0sBDusfsCZohxjxzVTYjwxfV8=\ngithub.com/rivo/uniseg v0.4.2/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sahilm/fuzzy v0.1.0 h1:FzWGaw2Opqyu+794ZQ9SYifWv2EIXpwP4q8dY1kDAwI=\ngithub.com/sahilm/fuzzy v0.1.0/go.mod h1:VFvziUEIMCrT6A6tw2RFIXPXXmzXbOsSHF0DOI8ZK9Y=\ngithub.com/sclevine/spec v1.3.0 h1:iTB51CYlnju5oRh0/l67fg1+RlQ2nqmFecwdvN+5TrI=\ngithub.com/sclevine/spec v1.3.0/go.mod h1:W4J29eT/Kzv7/b9IWLB055Z+qvVC9vt0Arko24q7p+U=\ngithub.com/shiena/ansicolor v0.0.0-20151119151921-a422bbe96644 h1:X+yvsM2yrEktyI+b2qND5gpH8YhURn0k8OCaeRnkINo=\ngithub.com/shiena/ansicolor v0.0.0-20151119151921-a422bbe96644/go.mod h1:nkxAfR/5quYxwPZhyDxgasBMnRtBZd0FCEpawpjMUFg=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/afero v1.8.2 h1:xehSyVa0YnHWsJ49JFljMpg1HX19V6NDZ1fkm1Xznbo=\ngithub.com/spf13/afero v1.8.2/go.mod h1:CtAatgMJh6bJEIs48Ay/FOnkljP3WeGUG0MC1RfAqwo=\ngithub.com/spf13/cast v1.4.1 h1:s0hze+J0196ZfEMTs80N7UlFt0BDuQ7Q+JDnHiMWKdA=\ngithub.com/spf13/cast v1.4.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.11.0 h1:7OX/1FS6n7jHD1zGrZTM7WtY13ZELRyosK4k93oPr44=\ngithub.com/spf13/viper v1.11.0/go.mod h1:djo0X/bA5+tYVoCn+C7cAYJGcVn/qYLFTG8gdUsX7Zk=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.3.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/subosito/gotenv v1.2.0 h1:Slr1R9HxAlEKefgq5jn9U+DnETlIUa6HfgEzj0g5d7s=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 h1:x8Z78aZx8cOF0+Kkazoc7lwUNMGy0LrzEMxTm4BbTxg=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0/go.mod h1:62CPTSry9QZtOaSsE3tOzhx6LzDhHnXJ6xHeMNNiM6Q=\ngo.opentelemetry.io/otel v1.19.0 h1:MuS/TNf4/j4IXsZuJegVzI1cwut7Qc00344rgH7p8bs=\ngo.opentelemetry.io/otel v1.19.0/go.mod h1:i0QyjOq3UPoTzff0PJB2N66fb4S0+rSbSB15/oyH9fY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.19.0 h1:Mne5On7VWdx7omSrSSZvM4Kw7cS7NQkOOmLcgscI51U=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.19.0/go.mod h1:IPtUMKL4O3tH5y+iXVyAXqpAwMuzC1IrxVS81rummfE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.19.0 h1:IeMeyr1aBvBiPVYihXIaeIZba6b8E1bYp7lbdxK8CQg=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.19.0/go.mod h1:oVdCUtjq9MK9BlS7TtucsQwUcXcymNiEDjgDD2jMtZU=\ngo.opentelemetry.io/otel/metric v1.19.0 h1:aTzpGtV0ar9wlV4Sna9sdJyII5jTVJEvKETPiOKwvpE=\ngo.opentelemetry.io/otel/metric v1.19.0/go.mod h1:L5rUsV9kM1IxCj1MmSdS+JQAcVm319EUrDVLrt7jqt8=\ngo.opentelemetry.io/otel/sdk v1.19.0 h1:6USY6zH+L8uMH8L3t1enZPR3WFEmSTADlqldyHtJi3o=\ngo.opentelemetry.io/otel/sdk v1.19.0/go.mod h1:NedEbbS4w3C6zElbLdPJKOpJQOrGUJ+GfzpjUvI0v1A=\ngo.opentelemetry.io/otel/trace v1.19.0 h1:DFVQmlVbfVeOuBRrwdtaehRrWiL1JoVs9CPIQ1Dzxpg=\ngo.opentelemetry.io/otel/trace v1.19.0/go.mod h1:mfaSyvGyEJEI0nyV2I4qhNQnbBOUUmYZpYojqMnX2vo=\ngo.opentelemetry.io/proto/otlp v1.0.0 h1:T0TX0tmXU8a3CbNXzEKGeU5mIVOdf0oykP+u2lIVU/I=\ngo.opentelemetry.io/proto/otlp v1.0.0/go.mod h1:Sy6pihPLfYHkr3NkUbEhGHFhINUSI/v80hjKIs5JXpM=\ngo.uber.org/mock v0.2.0 h1:TaP3xedm7JaAgScZO7tlvlKrqT0p7I6OsdGB5YNSMDU=\ngo.uber.org/mock v0.2.0/go.mod h1:J0y0rp9L3xiff1+ZBfKxlC1fz2+aO16tw0tsDOixfuM=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.22.0 h1:g1v0xeRhjcugydODzvb3mEM9SQ0HGp9s/nh3COQ/C30=\ngolang.org/x/crypto v0.22.0/go.mod h1:vr6Su+7cTlO45qkww3VDJlzDn0ctJvRgYbC2NvXHt+M=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.11.0 h1:bUO06HqtnRcc/7l71XBe4WcqTZ+3AH1J59zWDDwLKgU=\ngolang.org/x/mod v0.11.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201202161906-c7110b5ffcbb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\ngolang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0 h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423185535-09eb48e85fd7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616045830-e2b7044e8c71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220204135822-1c1b9b1eba6a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.19.0 h1:+ThwsDv+tYfnJFhF4L8jITxu1tdTWRTZpdsWgEgjL6Q=\ngolang.org/x/term v0.19.0/go.mod h1:2CuTdWZ7KHSQwUzKva0cbMg6q2DMI3Mmxp+gKJbskEk=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190624222133-a101b041ded4/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.10.0 h1:tvDr/iQoUqNdohiYm0LmmKcBk+q86lb9EprIUFhHHGg=\ngolang.org/x/tools v0.10.0/go.mod h1:UJwyiVBsOA2uwvK/e5OY3GTpDUJriEd+/YlqAwLPmyM=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20230711160842-782d3b101e98 h1:Z0hjGZePRE0ZBWotvtrwxFNrNE9CUAGtplaDK5NNI/g=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20230711160842-782d3b101e98 h1:FmF5cCW94Ij59cfpoLiwTgodWmm60eEV0CjlsVg2fuw=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20230711160842-782d3b101e98/go.mod h1:rsr7RhLuwsDKL7RmgDDCUc6yaGr1iqceVb5Wv6f6YvQ=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20230711160842-782d3b101e98 h1:bVf09lpb+OJbByTj913DRJioFFAjf/ZGxEz7MajTp2U=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20230711160842-782d3b101e98/go.mod h1:TUfxEVdsvPg18p6AslUXFoLdpED4oBnGwyqk3dV1XzM=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.58.3 h1:BjnpXut1btbtgN/6sp+brB2Kbm2LjNXnidYujAVbSoQ=\ngoogle.golang.org/grpc v1.58.3/go.mod h1:tgX3ZQDlNJGU96V6yHh1T/JeoBQ2TXdr43YbYSsCJk0=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/ini.v1 v1.66.4 h1:SsAcf+mM7mRZo2nJNGt8mZCjG8ZRaNGMURJw7BsIST4=\ngopkg.in/ini.v1 v1.66.4/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.0.2 h1:kG1BFyqVHuQoVQiR1bWGnfz/fmHvvuiSPIV7rvl360E=\ngotest.tools/v3 v3.0.2/go.mod h1:3SzNCllyD9/Y+b5r9JIKQ474KzkZyqLqEfYqMsX94Bk=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nk8s.io/api v0.26.2 h1:dM3cinp3PGB6asOySalOZxEG4CZ0IAdJsrYZXE/ovGQ=\nk8s.io/api v0.26.2/go.mod h1:1kjMQsFE+QHPfskEcVNgL3+Hp88B80uj0QtSOlj8itU=\nk8s.io/apimachinery v0.26.2 h1:da1u3D5wfR5u2RpLhE/ZtZS2P7QvDgLZTi9wrNZl/tQ=\nk8s.io/apimachinery v0.26.2/go.mod h1:ats7nN1LExKHvJ9TmwootT00Yz05MuYqPXEXaVeOy5I=\nk8s.io/client-go v0.26.2 h1:s1WkVujHX3kTp4Zn4yGNFK+dlDXy1bAAkIl+cFAiuYI=\nk8s.io/client-go v0.26.2/go.mod h1:u5EjOuSyBa09yqqyY7m3abZeovO/7D/WehVVlZ2qcqU=\nk8s.io/klog/v2 v2.90.1 h1:m4bYOKall2MmOiRaR1J+We67Do7vm9KiQVlT96lnHUw=\nk8s.io/klog/v2 v2.90.1/go.mod h1:y1WjHnz7Dj687irZUWR/WLkLc5N1YHtjLdmgWjndZn0=\nk8s.io/kube-openapi v0.0.0-20221012153701-172d655c2280 h1:+70TFaan3hfJzs+7VK2o+OGxg8HsuBr/5f6tVAjDu6E=\nk8s.io/kube-openapi v0.0.0-20221012153701-172d655c2280/go.mod h1:+Axhij7bCpeqhklhUTe3xmOn6bWxolyZEeyaFpjGtl4=\nk8s.io/utils v0.0.0-20230220204549-a5ecb0141aa5 h1:kmDqav+P+/5e1i9tFfHq1qcF3sOrDp+YEkVDAHu7Jwk=\nk8s.io/utils v0.0.0-20230220204549-a5ecb0141aa5/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nsigs.k8s.io/json v0.0.0-20220713155537-f223a00ba0e2 h1:iXTIw73aPyC+oRdyqqvVJuloN1p0AC/kzH07hu3NE+k=\nsigs.k8s.io/json v0.0.0-20220713155537-f223a00ba0e2/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/structured-merge-diff/v4 v4.2.3 h1:PRbqxJClWWYMNV1dhaG4NsibJbArud9kFxnAMREiWFE=\nsigs.k8s.io/structured-merge-diff/v4 v4.2.3/go.mod h1:qjx8mGObPmV2aSZepjQjbmb2ihdVs8cGKBraizNC69E=\nsigs.k8s.io/yaml v1.3.0 h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "pluginhost",
          "type": "tree",
          "content": null
        },
        {
          "name": "recorder.go",
          "type": "blob",
          "size": 1.4833984375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"net/http/httputil\"\n)\n\n// recorder traces http connections. It sends the output to a request and\n// response channels.\ntype recorder struct {\n\twrap http.RoundTripper\n\treq  chan string\n\tresp chan string\n}\n\nfunc newRecorder(transport http.RoundTripper) *recorder {\n\treturn &recorder{\n\t\twrap: transport,\n\t\treq:  make(chan string),\n\t\tresp: make(chan string),\n\t}\n}\n\nfunc (rec *recorder) RoundTrip(req *http.Request) (*http.Response, error) {\n\treqBytes, err := httputil.DumpRequestOut(req, true)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"transport.Recorder: dumping request, %v\", err)\n\t}\n\trec.req <- string(reqBytes)\n\n\tresp, rerr := rec.wrap.RoundTrip(req)\n\tif rerr != nil {\n\t\treturn nil, rerr\n\t}\n\n\trespBytes, err := httputil.DumpResponse(resp, true)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"transport.Recorder: dumping response, %v\", err)\n\t}\n\trec.resp <- string(respBytes)\n\n\treturn resp, nil\n}\n"
        },
        {
          "name": "sammy.txt",
          "type": "blob",
          "size": 18.677734375,
          "content": "                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                       `,,,,,,.`                                .,,,,,,.                                                    \n                    .,,,,,,,,,,,,,`                          ,,,,,,,,,,,,,,                                                 \n                  .,,,,,,,,,,,,,,,,,.                     `,,,,,,,,,,,,,,,,,,                                               \n                 ,,,,,,,,,,,,,,,,,,,,,`                  ,,,,,,,,,,,,,,,,,,,,,`                                             \n                ,,,,,,,,,..````.,,,,,,,,               ,,,,,,,,..````..,,,,,,,,.                                            \n               ,,,,,,,`````````````.,,,,,,           .,,,,,,`````````````.,,,,,,.                                           \n              ,,,,,,``````````````````,,,,,,`      ,,,,,,,`````````````````.,,,,,.                                          \n             ,,,,,.`````````````````````,,,,,,,,,,,,,,,,`````````````````````,,,,,                                          \n            ,,,,,.```````````````````````.,,,,,,,,,,,,````````````````````````,,,,,                                         \n            ,,,,.``````````````````````````.,,,,,,,,```````````````````````````,,,,.                                        \n           ,,,,,````````.,,,,,,,.``````````````..`````````````.,,,,,,,,.````````,,,,                                        \n           ,,,,``````.,,,,,,,,,,,,,,```````````````````````.,,,,,,,,,,,,,,``````,,,,`                                       \n          .,,,,`````,,,,,,,,,,,,,,,,,,```````````````````.,,,,,,,,,,,,,,,,,,````.,,,,                                       \n          ,,,,,```.,,,,,,,,,,,,,,,,,,,,,```````````````.,,,,,,,,,,,,,,,,,,,,,```.,,,,                                       \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```````````.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,                                       \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```````.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.                                      \n         `,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         `,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         `,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                      \n         `,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.`,,                                      \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,.                                      \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`.,`                                      \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`,,                                       \n          ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.`,,                                       \n          `,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                       \n           ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,`.,                                        \n           ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                        \n            ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                        \n            ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.`,,                                         \n            .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                         \n             ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                          \n             .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.``,,                                          \n              ,,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``,,                                           \n               ,,`,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,``.,.                                           \n               .,,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```,,                                            \n                ,,..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```,,                                             \n                 ,,..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```,,                                              \n                  ,,..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```,,`                                              \n                   ,,.`,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```,,.                                               \n                    ,,,`,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.```,,.                                                \n                     ,,,`.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,```.,,`                                                 \n                      ,,,``,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.```,,,                                                   \n                       ,,,.``,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,````,,,                                                    \n                         ,,,``.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,````,,,.                                                     \n                          ,,,,```,,,,,,,,,,,,,,,,,,,,,,,,,,,,````.,,,                                                       \n                            ,,,,```.,,,,,,,,,,,,,,,,,,,,,,`````.,,,`                                                        \n                              ,,,,````.,,,,,,,,,,,,,,,.``````.,,,.                                                          \n                                ,,,,,```````..,,..````````.,,,,`                                                            \n                                  ,,,,,,.``````````````,,,,,,                                                               \n                                     ,,,,,,,,,,.,,,,,,,,,,                                                                  \n                                         .,,,,,,,,,,,,`                                                                     \n                                               ,                                                                            \n                                               ,                                                                            \n                                               ,                                                                            \n                                               ,                                                                            \n                                    ``         ,                                                                            \n                                  :::::::`     ,                                                                            \n                                  :::::::::,   ,                                                                            \n                                  :::::::::::. ,                                                                            \n                                   ::::::::::::,                                                                            \n       :                            :::::::::::;:                                                                           \n       ::                           .::::::::::;::                                                                          \n       ::`                           ::::::::::;:::.                                                                        \n       :::                            :::::::::;:::::                                                                       \n       :::,                           :::::::::;::::::                                                                      \n       ::::                           `::::::::;:::::::                                                                     \n       ::::,                           ::::::::;::::::::                                                                    \n       :::::                           ::::::::;:::::::::                                                                   \n       ::::::                          ::::::::;::::::::::                                                                  \n       ::::::                          .:::::::;:::::::::::                                                                 \n       :::::::                          :::::::;::::::::::::                                                                \n       :::::::                          :::::::;::::::::::::.                                                               \n       ::::::::                         :::::::;:::::::::::::                                                               \n       .:::::::                         :::::::;::::::::::::::                  ```......```                                \n        ::::::::                        :::::::;::::::::::::::`  `.,,:::::::::::::::::::::::::::::::::,.                    \n        ::::::::                        :::::::;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,               \n        :::::::::                       :::::::;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::`           \n        :::::::::                       :::::::;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::`         \n        .:::::::::     `:::       `,:::::::::::;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,        \n         ::::::::::    :::::,.:::::::::::::::::;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        \n         ::::::::::::::::::::::::::::::::::::::;::::::::::::::::::::::::::::::        ::::::::::::::::::::::::::::::,       \n         ::::::::::::::::::::::::::::::::::::::;::::::::::::::::::::::::::::,    .,,,`  ::::::::::::::::::::::::::::,       \n         ,:::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::::.   .,,,,,,,` :::::::::::::::::::::::::::`       \n          :::::::::::::::::::::::::::::::::::::;::::::::::::::::::::::::::,   .,,,'''';,. ::::::::::::::::::::::::::        \n         ::::::::::::::::::::::::::::::::::::::;::::::::::::::::::::::::::    ,,,''''''', ::::::::::::::::::::::::::        \n        :::::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::,   ,,,'''''''';, ::::::::::::::::::::::::         \n       ::::::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::    ,,:''''''''', ::::::::::::::::::::::::         \n       ::::::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::    ,,'' `'''''', :::::::::::::::::::::::          \n      :::::::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::    ,,'   '''''', ,:::::::::::::::::::::`          \n     `:::::::::::::::::::::::::::::::::::::::::;:::::::::::::::::::::::::    ,,:   '''''', ,:::::::::::::::::::::           \n     :::::::,     `::::::::::::::::::::::::::::;:::::::::::::::::::::::::    ,,,'''''''':, :::::::::::::::::::::            \n     ::::::         :::::::::::::::::::::::::::;:::::::::::::::::::::::::    .,,,'''''';,` ::::::::::::::::::::             \n     ::::`          ,::::::::::::::::::::::::::;:::::::::::::::::::::::::,    ,,,,'''',,,  :::::::::::::::::::              \n    `:::            `::::::::::::::::::::::::::;::::::::::::::::::::::::::     ,,,,,,,,,  :::::::::::::::::::               \n    `::              ::::::::::::::::::::::::::;::::::::::::::::::::::::::,     `,,,,,`   ::::::::::::::::::`               \n     .                    :::::::::::::::::::::;:::::::::::::::::::::::::::`             ::::::::::::::::::`                \n                           ::::::::::::::::::::;::::::::::::::::::::::::::::.           ::::::::::::::::::.                 \n                            :::::::::::::::::::;::::::::::::::::::::::::::::::        ,:::::::::::::::,.``                  \n                            `::::::::::::::::::;:::::::::::::::::::::::::::::::::..,::::::::::::.````````                   \n                             ,:::::::::::::::::;::::::::::::::::::::...,:::::::::::::::::::.````````````                    \n                              :::::::::::::::::;::::::::::::::::::::....::::::::::::::,````````````````                     \n                               ::::::::::::::::;::::::::::::::::::::.....::::::::::````````````````````                     \n                                :::::::::::::::;::::::::::::::::::::......:::::.``````````````````````                      \n                                .::::::::::::::;::::::::::::::::::::.......:``````````````````````````                      \n                                 ::::::::::::::;::::::::::::::::::::........`````````````````````````                       \n                                  :::::::::::::;::::::::::::::::::::.........````````````````````````                       \n                                  `::::::::::::;::::::::::::::::::::..........```````````````````````                       \n                                   ::::::::::::;::::::::::::::::::``............````````````````````                        \n                                    :::::::::::;::::::::::::::::`````.............````````````````                          \n                                   .:::::::::::;:::::::::::::,```````,,..............`````````                              \n                                  :::::::::::::;:::::::::::``````````.,,,,................`                                 \n                                 ::::::::::::::;::::::::.``````````````  .,,,.............``                                \n                                .::::::::::::::;:::::`````````````````   `,,,,,............`                                \n                                :::::::::::::::;,``````````````````````  `,,,,,,,..........``                               \n                               :::::::::::,.```,```````````````````````` `   `,,,,,.........``                              \n                               :::::::::, `````,````````````````````````      ,,,,,,.........``                             \n                               :::::::::   ````,`````````````````````````     ,,``,,,,........``                            \n                              .::::::::`   `,:.,``````````````````````````        ,,,,,.......``                            \n                              .::::::::,   .:::::::.````````````````````````      ,,,,,,,.....``                            \n                              .:::::::::   ::::;:::::`````````````````````````    ,,,,,,,,...```                            \n                               ::::::::::, ::::::::::.``````````````````````````` ,,,,,,,,.````                             \n                               :::::::::::::::::::::::````````````````````````````````````````                              \n                               :::::::::::::::::::::::```````````````````````````````````````                               \n                                ::::::::::::::::::::::.````````````````````````````````````                                 \n                                .:::::::::::::::::::::.``````````````````````````````````                                   \n                                 :::::::::::::::::::::`````````````````````````````````                                     \n                                  :::::::::::::::::::: `````````````````````````````                                        \n                                   ,:::::::::::::::::,    ```````````````````````                                           \n                                     :::::::::::::::,         ``````````````                                                \n                                       ,:::::::::::                                                                         \n                                               ,                                                                            \n                                                                                                                            \n                                           `,`                                                                              \n                                     ,                                                                                      \n                                    .                                                                                       \n                                `.,                                                                                         \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n                                                                                                                            \n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "util.go",
          "type": "blob",
          "size": 1.7255859375,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"context\"\n\n\t\"github.com/digitalocean/doctl/pkg/listen\"\n\t\"github.com/digitalocean/doctl/pkg/runner\"\n\t\"github.com/digitalocean/doctl/pkg/terminal\"\n)\n\n// MockRunner is an implementation of Runner for mocking.\ntype MockRunner struct {\n\tErr error\n}\n\nvar _ runner.Runner = &MockRunner{}\n\n// Run mock runs things.\nfunc (tr *MockRunner) Run() error {\n\treturn tr.Err\n}\n\n// MockListener is an implementation of ListenerService for mocking.\ntype MockListener struct {\n\tErr error\n}\n\nvar _ listen.ListenerService = &MockListener{}\n\n// Listen mocks ListenerService.Listen\nfunc (tr *MockListener) Listen(ctx context.Context) error {\n\treturn tr.Err\n}\n\n// MockTerminal is an implementation of Terminal for mocking.\ntype MockTerminal struct {\n\tErr error\n}\n\nvar _ terminal.Terminal = &MockTerminal{}\n\n// ReadRawStdin mocks Terminal.ReadRawStdin\nfunc (tr *MockTerminal) ReadRawStdin(ctx context.Context, stdinCh chan<- string) (restoreFn func(), err error) {\n\treturn func() {}, tr.Err\n}\n\n// MonitorResizeEvents mocks Terminal.MonitorResizeEvents\nfunc (tr *MockTerminal) MonitorResizeEvents(ctx context.Context, resizeEvents chan<- terminal.TerminalSize) error {\n\treturn tr.Err\n}\n"
        },
        {
          "name": "util_test.go",
          "type": "blob",
          "size": 0.767578125,
          "content": "/*\nCopyright 2018 The Doctl Authors All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage doctl\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestMockRunner(t *testing.T) {\n\te := fmt.Errorf(\"an error\")\n\tmr := MockRunner{e}\n\n\tassert.Equal(t, e, mr.Run())\n}\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}