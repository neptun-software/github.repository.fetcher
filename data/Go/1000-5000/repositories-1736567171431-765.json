{
  "metadata": {
    "timestamp": 1736567171431,
    "page": 765,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "activecm/rita-legacy",
      "stars": 2507,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0888671875,
          "content": "/pprof\n*.pprof\n*.swp\n*\\#\n*\\~\n*.swp\n*.swo\n*.exe\n/.vscode/\n/rita\n/vendor/\n/rita-html-report/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.5576171875,
          "content": "linters:\n  disable-all: true\n  enable:\n    #- depguard # useful for Sirupsen and old mgo\n    # Suggests code refactoring\n    #- govet\n    - staticcheck # aka megacheck, supercedes govet\n    #- goconst\n    - ineffassign\n    #- maligned\n    #- prealloc\n    #- gosimple\n    # Finds unused and dead code\n    - unused\n    # - structcheck\n    - varcheck\n    - deadcode\n    # - unparam\n    # Style changes\n    - golint\n    # - goimports # supercedes gofmt\n    - misspell\n    #- lll\n\nissues:\n  exclude:\n    # https://github.com/golangci/golangci-lint/issues/446\n    - composites\n"
        },
        {
          "name": "Contributing.md",
          "type": "blob",
          "size": 3.25390625,
          "content": "# Contributing to RITA\n---\n## Want to help? We would love that!\nHere are some ways to get involved, ranging in\ndifficulty from easiest to hardest\n\n## Bug Hunting\nRun the software and tell us when it breaks. We are happy to receive bug\nreports\n\nJust be sure to do the following:\n* Check if the bug is already accounted for on the\n[Github issue tracker](https://github.com/activecm/rita-legacy/issues)\n  * If an issue already exists, add the relevant info in a comment\n  * If not, create an issue and include the relevant info\n* Give very specific descriptions of how to reproduce the bug\n* Include the output of `rita --version`\n* Include a description of your hardware (e.g. CPU, RAM, filesystems)\n* Tell us about the size of the test and the physical resources available\n\n## Contributing Code\nThere are several ways to contribute code to the RITA project.\nBefore diving in, follow the [Manual Installation Instructions](docs/Manual%20Installation.md)\n\n* Work on bug fixes:\n  * Find an issue you would like to work on in the Github tracker, especially [unassigned issues marked \"good first issue\"](https://github.com/activecm/rita-legacy/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22+no%3Aassignee)\n  * Leave a comment letting us know you would like to work on it\n* Add new features:\n  * If you would like to become involved in the development effort, open a new issue or continue a discussion on an existing issue\n\n### Running Static Tests\n* You must have a RITA [development environment](https://github.com/activecm/rita-legacy/blob/master/docs/Manual%20Installation.md#installing-golang) set up and [golangci-lint](https://github.com/golangci/golangci-lint#install) installed to run the tests.\n* Check the [Makefile](https://github.com/activecm/rita-legacy/blob/master/Makefile) for all options. Currently you can run `make test`, `make static-test`, and `make unit-test`. There is also `make integration-test` and docker variants that will require you install docker as well.\n\n### Reviewing Automated Test Results\nAutomated tests are run against each pull request. Build results may be viewed [here](https://github.com/activecm/rita-legacy/actions).\n\n### Gittiquette Summary\n* In order to contribute to RITA, you must [fork it](https://github.com/activecm/rita-legacy/fork).\n* Once you have a forked repo you will need to clone it to a very specific path which corresponds to _the original repo location_. This is due to the way packages are imported in Go programs.\n  * `git clone [your forked repo git url]`\n* Add `https://github.com/activecm/rita-legacy` as a new remote so you can pull new changes.\n  * `git remote add upstream https://github.com/activecm/rita-legacy`\n* Split a branch off of master .\n  * `git checkout -b [your new feature]`\n* When your work is finished, pull the latest changes from the upstream master and rebase your changes on it.\n  * `git checkout master; git pull -r upstream master`\n  * `git checkout [your new feature]; git rebase master`\n* Push your commits to your repo and submit a pull request on Github.\n\nFurther info can be found in the [Gittiquette doc](docs/RITA%20Gittiquette.md) under the guidelines and contributors sections.\n\n### Common Issues\n* Building Rita using `go build` or `go install` yields a RITA version of `UNDEFINED`\n  * Use `make` or `make install` instead\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.8427734375,
          "content": "FROM golang:1.17-alpine as rita-builder\n\nRUN apk add --no-cache git make ca-certificates wget build-base\n\nWORKDIR /go/src/github.com/activecm/rita-legacy\n\n# cache dependencies\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# copy the rest of the code\nCOPY . ./\n\n# Change ARGs with --build-arg to target other architectures\n# Produce a self-contained statically linked binary\nARG CGO_ENABLED=0\n# Set the build target architecture and OS\nARG GOARCH=amd64\nARG GOOS=linux\n# Passing arguments in to make result in them being set as\n# environment variables for the call to go build\nRUN make CGO_ENABLED=$CGO_ENABLED GOARCH=$GOARCH GOOS=$GOOS\n\nFROM scratch\n\nWORKDIR /\nCOPY --from=rita-builder /go/src/github.com/activecm/rita-legacy/etc/rita_docker.yaml /etc/rita/config.yaml\nCOPY --from=rita-builder /go/src/github.com/activecm/rita-legacy/rita /rita\n\nENTRYPOINT [\"/rita\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 31.712890625,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.1201171875,
          "content": "VERSION := $(shell git describe --abbrev=0 --tags)\nEXACT_VERSION := $(shell git describe --always --long --dirty --tags)\nPREFIX ?= /usr/local\n\nLDFLAGS := -ldflags='-X github.com/activecm/rita-legacy/config.Version=${VERSION} -X github.com/activecm/rita-legacy/config.ExactVersion=${EXACT_VERSION}'\nTESTFLAGS := -p=1 -v\n# go source files\nSRC := $(shell find . -path ./vendor -prune -o -type f -name '*.go' -print)\n\n# Allow a variable to be initialized and cached on first use. Subsequent uses will\n# use the cached value instead of evaluating the variable's declaration again.\n# Use like this: VAR = $(call cache,VAR)\n# https://www.cmcrossroads.com/article/makefile-optimization-eval-and-macro-caching\ncache = $(if $(cached-$1),,$(eval cached-$1 := 1)$(eval cache-$1 := $($1)))$(cache-$1)\n\n# force rita to be rebuilt even if it's up to date\n.PHONY: rita\nrita: $(SRC)\n\t@# remove any existing vendor directory from dep\n\t@rm -rf vendor\n\tgo build -o rita ${LDFLAGS}\n\n.PHONY: install\ninstall: rita\n\tmv rita $(PREFIX)/bin/\n\tmkdir -p $(PREFIX)/etc/bash_completion.d/ $(PREFIX)/etc/rita/\n\tsudo cp etc/bash_completion.d/rita $(PREFIX)/etc/bash_completion.d/rita\n\tsudo cp etc/rita.yaml $(PREFIX)/etc/rita/config.yaml\n\n.PHONY: docker-check\n# Use this recipe if you want to fail if docker is missing\ndocker-check:\n\t@if ! docker ps > /dev/null; then echo \"Ensure docker is installed and accessible from the current user context\"; return 1; fi\n\n.PHONY: integration-test\nintegration-test: docker-check\n# docker run should only get executed once on initialization using the cache trick\nintegration-test: MONGO_EXE = $(shell docker run --rm -d mongo:4.2)\nintegration-test: MONGO_ID = $(call cache,MONGO_EXE)\nintegration-test: MONGO_IP = $(shell docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(MONGO_ID))\nintegration-test:\n\t@echo Waiting for Mongo to respond to connection attempts\n\t@until nc -z $(MONGO_IP) 27017; do sleep 1; done; true\n\t@echo Running tests\n\t@bash -c \"trap 'docker stop $(MONGO_ID) > /dev/null' EXIT; go test $(TESTFLAGS) -tags=integration $(LDFLAGS) ./... -args mongodb://$(MONGO_IP):27017\"\n\n\n.PHONY: test\ntest: static-test unit-test\n\t@echo Ran tests on rita $(EXACT_VERSION)\n\n.PHONY: static-test\nstatic-test:\n\tgolangci-lint run ./...\n\n.PHONY: unit-test\nunit-test:\n\tgo test -race -cover $(shell go list ./... | grep -v /vendor/)\n\n\n# The following targets all use docker\n\n.PHONY: docker-build\ndocker-build:\n\tdocker build -t quay.io/activecm/rita-legacy:latest -f Dockerfile .\n\n.PHONY: docker-build-test\ndocker-build-test:\n\tdocker build -t quay.io/activecm/rita-legacy:test -f test.Dockerfile .\n\n# Runs all tests inside docker container\n.PHONY: docker-test\ndocker-test: docker-build-test\n\tdocker run --rm quay.io/activecm/rita-legacy:test make test\n\n.PHONY: docker-unit-test\ndocker-unit-test: docker-build-test\n\tdocker run --rm quay.io/activecm/rita-legacy:test make unit-test\n\n.PHONY: docker-static-test\ndocker-static-test: docker-build-test\n\tdocker run --rm quay.io/activecm/rita-legacy:test make static-test\n\n# .PHONY: docker-integration-test\n# docker-integration-test: docker-build-test\n# \tdocker run --rm quay.io/activecm/rita-legacy:test make integration-test\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 9.5595703125,
          "content": "> :exclamation: **Important Notice** :exclamation:\n> This repository has been archived and is no longer maintained. The project has undergone a complete rewrite and significant improvements. The new version of this project can be found [here](https://github.com/activecm/rita).\n\n# RITA (Real Intelligence Threat Analytics) (Legacy)\n\n[![RITA Logo](rita-logo.png)](https://www.activecountermeasures.com/free-tools/rita/)\n\nIf you get value out of RITA and would like to go a step further with hunting automation, futuristic visualizations, and data encrichment take a look at [AC-Hunter](https://www.activecountermeasures.com/).\n\nSponsored by [Active Countermeasures](https://activecountermeasures.com/).\n\n---\n\nRITA is an open source framework for network traffic analysis.\n\nThe framework ingests [Zeek Logs](https://www.zeek.org/) in TSV format, and currently supports the following major features:\n - **Beaconing Detection**: Search for signs of beaconing behavior in and out of your network\n - **DNS Tunneling Detection** Search for signs of DNS based covert channels\n - **Blacklist Checking**: Query blacklists to search for suspicious domains and hosts\n\n## Install\n\nPlease see our recommended [System Requirements](docs/System%20Requirements.md) document if you wish to use RITA in a production environment.\n\n### Automated Install\n\nRITA provides an install script that works on Ubuntu 20.04 LTS, Debian 11, Security Onion, and CentOS 7.\n\nDownload the latest `install.sh` file [here](https://github.com/activecm/rita-legacy/releases/latest) and make it executable: `chmod +x ./install.sh`\n\nThen choose one of the following install methods:\n\n* `sudo ./install.sh` will install RITA as well as supported versions of Zeek and MongoDB. This is suitable if you want to get started as quickly as possible or you don't already have Zeek or MongoDB.\n\n* `sudo ./install.sh --disable-zeek --disable-mongo` will install RITA only, without Zeek or MongoDB. You may also use these flags individually.\n  * If you choose not to install Zeek you will need to [provide your own logs](#obtaining-data-generating-zeek-logs).\n  * If you choose not to install MongoDB you will need to configure RITA to [use your existing MongoDB server](docs/Mongo%20Configuration.md).\n\n### Docker Install\n\nSee [here](docs/Docker%20Usage.md).\n\n### Manual Installation\n\nTo install each component of RITA by manually see [here](docs/Manual%20Installation.md).\n\n### Upgrading RITA\n\nSee [this guide](docs/Upgrading.md) for upgrade instructions.\n\n### Getting Started\n\n#### Configuration File\n\nRITA's config file is located at `/etc/rita/config.yaml` though you can specify a custom path on individual commands with the `-c` command line flag.\n\n* The `Filtering: InternalSubnets` section *must* be configured or you will not see any results in certain modules (e.g. beacons, long connections). If your network uses the standard RFC1918 internal IP ranges (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) you don't need to do anything as the default `InternalSubnets` section already has these. Otherwise, adjust this section to match your environment. RITA's main purpose is to find the signs of a compromised internal system talking to an external system and will automatically exclude internal to internal connections and external to external connections from parts of the analysis.\n\nYou may also wish to change the defaults for the following option:\n* `Filtering: AlwaysInclude` - Ranges listed here are exempt from the filtering applied by the `InternalSubnets` setting. The main use for this is to include internal DNS servers so that you can see the source of any DNS queries made.\n\nNote that any value listed in the `Filtering` section should be in CIDR format. So a single IP of `192.168.1.1` would be written as `192.168.1.1/32`.\n\n#### Obtaining Data (Generating Zeek Logs)\n\n  * **Option 1**: Generate PCAPs outside of Zeek\n    * Generate PCAP files with a packet sniffer ([tcpdump](http://www.tcpdump.org/), [wireshark](https://www.wireshark.org/), etc.)\n    * (Optional) Merge multiple PCAP files into one PCAP file\n      * `mergecap -w outFile.pcap inFile1.pcap inFile2.pcap`\n    * Generate Zeek logs from the PCAP files\n      * ```zeek -r pcap_to_log.pcap local \"Log::default_rotation_interval = 1 day\"```\n\n  * **Option 2**: Install Zeek and let it monitor an interface directly [[instructions](https://docs.zeek.org/en/master/quickstart/index.html)]\n      * You may wish to [compile Zeek from source](https://docs.zeek.org/en/master/install/install.html) for performance reasons. [This script](https://github.com/activecm/bro-install) can help automate the process.\n      * The automated installer for RITA installs pre-compiled Zeek binaries by default\n        * Provide the `--disable-zeek` flag when running the installer if you intend to compile Zeek from source\n      * To take advantage of the feature for monitoring long-running, open connections (default is 1 hour or more), you will need to install our [zeek-open-connections plugin](https://github.com/activecm/zeek-open-connections/). We recommend installing the package with Zeek's package manager _zkg_. Newer versions of Zeek (4.0.0 or greater) will come bundled with _zkg_. If you do not have _zkg_ installed, you can [manually install](https://docs.zeek.org/projects/package-manager/en/stable/quickstart.html) it. Once you have _zkg_ installed, run the following commands to install the package\n        * ```zkg refresh```\n        * ```zkg install zeek/activecm/zeek-open-connections```\n\n        Next, edit your site/local.zeek file so that it contains the following line\n        * ```@load packages ```\n\n        Finally, run the following\n        * ```zeekctl deploy```\n\n#### Importing and Analyzing Data With RITA\n\nAfter installing RITA, setting up the `InternalSubnets` section of the config file, and collecting some Zeek logs, you are ready to begin hunting.\n\nRITA can process TSV, JSON, and [JSON streaming](https://github.com/corelight/json-streaming-logs) Zeek log file formats. These logs can be either plaintext or gzip compressed.\n\n##### One-Off Datasets\n\nThis is the simplest usage and is great for analyzing a collection of Zeek logs in a single directory. If you expect to have more logs to add to the same analysis later see the next section on Rolling Datasets.\n\n```\nrita import path/to/your/zeek_logs dataset_name\n```\n\nEvery log file in the supplied directory will be imported into a dataset with the given name. However, files in nested directories will not be processed.\n\n> :grey_exclamation: **Note:** Rita is designed to analyze 24hr blocks of logs. Rita versions newer than 4.5.1 will analyze only the most recent 24 hours of data supplied.\n\n##### Rolling Datasets\n\nRolling datasets allow you to progressively analyze log data over a period of time as it comes in.\n\n```\nrita import --rolling /path/to/your/zeek_logs dataset_name\n```\n\nYou can make this call repeatedly as new logs are added to the same directory (e.g. every hour).\n\nOne common scenario is to have a rolling database that imports new logs every hour and always has the last 24 hours worth of logs in it. Typically, Zeek logs will be placed in `/opt/zeek/logs/<date>` which means that the directory will change every day. To accommodate this, you can use the following command in a cron job or other task scheduler that runs once per hour.\n\n```\nrita import --rolling /opt/zeek/logs/$(date --date='-1 hour' +\\%Y-\\%m-\\%d)/ dataset_name\n```\n\nRITA cycles data into and out of rolling databases in \"chunks\". You can think of each chunk as one hour, and the default being 24 chunks in a dataset. This gives the ability to always have the most recent 24 hours' worth of data available. But chunks are generic enough to accommodate non-default Zeek logging configurations or data retention times as well. See the [Rolling Datasets](docs/Rolling%20Datasets.md) documentation for advanced options.\n\n\n> :grey_exclamation: **Note:** `dataset_name` is simply a name of your choosing. We recommend a descriptive name such as the hostname or location of where the data was captured. Stick with letters, numbers, and underscores. Periods and other special characters are not allowed.\n\n\n#### Examining Data With RITA\n\n  * Use the **show-X** commands\n      * `show-databases`: Print the datasets currently stored\n      * `show-beacons`: Print hosts which show signs of C2 software\n      * `show-bl-hostnames`: Print blacklisted hostnames which received connections\n      * `show-bl-source-ips`: Print blacklisted IPs which initiated connections\n      * `show-bl-dest-ips`: Print blacklisted IPs which received connections\n      * `show-dns-fqdn-ips`: Print IPs associated with a specified FQDN\n      * `show-exploded-dns`:  Print dns analysis. Exposes covert dns channels\n      * `show-long-connections`: Print long connections and relevant information\n      * `show-strobes`: Print connections which occurred with excessive frequency\n      * `show-useragents`: Print user agent information\n  * By default, RITA displays data in CSV format\n      * `-d [DELIM]` delimits the data by `[DELIM]` instead of a comma\n          * Strings can be provided instead of single characters if desired, e.g. `rita show-beacons -d \"---\" dataset_name`\n      * `-H` displays the data in a human readable format\n          * This takes precedence over the `-d` option\n      * Piping the human readable results through `less -S` prevents word wrapping\n          * Ex: `rita show-beacons dataset_name -H | less -S`\n  * Create a html report with `html-report`\n\n### Getting help\n\nPlease create an issue on GitHub if you have any questions or concerns.\n\n### Contributing to RITA\n\nTo contribute to RITA visit our [Contributing Guide](Contributing.md)\n\n### License\n\nGNU GPL V3\n&copy; Active Countermeasures &trade;\n"
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.359375,
          "content": "version: '3'\n\nservices:\n  db:\n    image: mongo:4.2\n    volumes:\n      - db:/data/db/\n\n  rita:\n    image: quay.io/activecm/rita-legacy:${VERSION:-latest}\n    build: .\n    depends_on:\n      - db\n    volumes:\n      - ${CONFIG:?You must provide a path to your CONFIG}:/etc/rita/config.yaml:ro\n      - ${LOGS:?You must provide a path to your LOGS}:/logs:ro\n\nvolumes:\n  db:\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.8349609375,
          "content": "module github.com/activecm/rita-legacy\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/activecm/mgorus v0.1.1\n\tgithub.com/activecm/mgosec v0.1.1\n\tgithub.com/activecm/rita-bl v0.0.0-20220823191806-f014db21453d\n\tgithub.com/blang/semver v3.5.1+incompatible\n\tgithub.com/creasty/defaults v1.7.0\n\tgithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8\n\tgithub.com/google/go-github v17.0.0+incompatible\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58\n\tgithub.com/rifflock/lfshook v0.0.0-20180920164130-b9218ef580f5\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/skratchdot/open-golang v0.0.0-20200116055534-eef842397966\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/urfave/cli v1.22.15\n\tgithub.com/vbauerster/mpb v3.4.0+incompatible\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tgithub.com/VividCortex/ewma v1.2.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.4 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/golang/protobuf v1.1.0 // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/safebrowsing v0.0.0-20171128203709-fe6951d7ef01 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.9 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgolang.org/x/crypto v0.24.0 // indirect\n\tgolang.org/x/net v0.21.0 // indirect\n\tgolang.org/x/sys v0.21.0 // indirect\n\tgolang.org/x/term v0.21.0 // indirect\n\tgolang.org/x/text v0.16.0 // indirect\n\tgopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 9.1591796875,
          "content": "github.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/VividCortex/ewma v1.2.0 h1:f58SaIzcDXrSy3kWaHNvuJgJ3Nmz59Zji6XoJR/q1ow=\ngithub.com/VividCortex/ewma v1.2.0/go.mod h1:nz4BbCtbLyFDeC9SUHbtcT5644juEuWfUAUnGx7j5l4=\ngithub.com/activecm/mgorus v0.1.1 h1:v+DoSPWbbaNkwrJDwHI+nh0K7xEqktahimoWeo0jCOc=\ngithub.com/activecm/mgorus v0.1.1/go.mod h1:oCz/dUji4JsFLsc1EKfgsotg20uITyvjblxo1ieo8Bg=\ngithub.com/activecm/mgosec v0.1.1 h1:6YMQY81cVa2p4dEQyMQbaoe6djhlMmEF7cRayrlerHw=\ngithub.com/activecm/mgosec v0.1.1/go.mod h1:XcwqX1en4L7Tfxd6r6NdstZt/cbArEg8OBZyUKf9HtU=\ngithub.com/activecm/rita-bl v0.0.0-20220823191806-f014db21453d h1:chJrld/x2Q+3Uj/3TrkHTKIe4gcN7x9tSIAIrxcZIOQ=\ngithub.com/activecm/rita-bl v0.0.0-20220823191806-f014db21453d/go.mod h1:s85IHPkhESB09tNgKuPTrxDQ8QHfPr+ftrOYPB/vXgQ=\ngithub.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=\ngithub.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creasty/defaults v1.7.0 h1:eNdqZvc5B509z18lD8yc212CAqJNvfT1Jq6L8WowdBA=\ngithub.com/creasty/defaults v1.7.0/go.mod h1:iGzKe6pbEHnpMPtfDXZEr0NVxWnPTjb1bbDy08fPzYM=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8 h1:DujepqpGd1hyOd7aW59XpK7Qymp8iy83xq74fLr21is=\ngithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\ngithub.com/golang/protobuf v1.1.0 h1:0iH4Ffd/meGoXqF2lSAhZHt8X+cPgkfn/cb6Cce5Vpc=\ngithub.com/golang/protobuf v1.1.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/go-cmp v0.5.2 h1:X2ev0eStA3AbceY54o37/0PQ/UWqKEiiO2dKL5OPaFM=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-github v17.0.0+incompatible h1:N0LgJ1j65A7kfXrZnUDaYCs/Sf4rEjNlfyDHW9dolSY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/safebrowsing v0.0.0-20171128203709-fe6951d7ef01 h1:XEbeFNEIkKMMeGT/HXrJNc8CYX6e21+jA77NbuEfYTw=\ngithub.com/google/safebrowsing v0.0.0-20171128203709-fe6951d7ef01/go.mod h1:5s5M4BFXyqfUstbiDH1ClnS7VmZmDqUaY/X0Rqbfw3o=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9 h1:Lm995f3rfxdpd6TSmuVCHVb/QhupuXlYr8sCI/QdE+0=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 h1:ZqeYNhU3OHLH3mGKHDcjJRFFRrJa6eAM5H+CtDdOsPc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 h1:onHthvaw9LFnH4t2DcNVpwGmV9E1BkGknEliJkfwQj0=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58/go.mod h1:DXv8WO4yhMYhSNPKjeNKa5WY9YCIEBRbNzFFPJbWO6Y=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rifflock/lfshook v0.0.0-20180920164130-b9218ef580f5 h1:mZHayPoR0lNmnHyvtYjDeq0zlVHn9K/ZXoy17ylucdo=\ngithub.com/rifflock/lfshook v0.0.0-20180920164130-b9218ef580f5/go.mod h1:GEXHk5HgEKCvEIIrSpFI3ozzG5xOKA2DVlEX/gGnewM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/skratchdot/open-golang v0.0.0-20200116055534-eef842397966 h1:JIAuq3EEf9cgbU6AtGPK4CTG3Zf6CKMNqf0MHTggAUA=\ngithub.com/skratchdot/open-golang v0.0.0-20200116055534-eef842397966/go.mod h1:sUM3LWHvSMaG192sy56D9F7CNvL7jUJVXoqM1QKLnog=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/urfave/cli v1.22.15 h1:nuqt+pdC/KqswQKhETJjo7pvn/k4xMUxgW6liI7XpnM=\ngithub.com/urfave/cli v1.22.15/go.mod h1:wSan1hmo5zeyLGBjRJbzRTNk8gwoYa2B9n4q9dmRIc0=\ngithub.com/vbauerster/mpb v3.4.0+incompatible h1:mfiiYw87ARaeRW6x5gWwYRUawxaW1tLAD8IceomUCNw=\ngithub.com/vbauerster/mpb v3.4.0+incompatible/go.mod h1:zAHG26FUhVKETRu+MWqYXcI70POlC6N8up9p1dID7SU=\ngolang.org/x/crypto v0.24.0 h1:mnl8DM0o513X8fdIkmyFE/5hTYxbwYOjDS/+rK6qpRI=\ngolang.org/x/crypto v0.24.0/go.mod h1:Z1PMYSOR5nyMcyAVAIQSKCDwalqy85Aqn1x3Ws4L5DM=\ngolang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.21.0 h1:rF+pYz3DAGSQAxAu1CbC7catZg4ebC4UIeIhKxBZvws=\ngolang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.21.0 h1:WVXCp+/EBEHOj53Rvu+7KiT/iElMrO8ACK16SMZ3jaA=\ngolang.org/x/term v0.21.0/go.mod h1:ooXLefLobQVslOqselCNF4SxFAaoS6KujMbsGzSDmX0=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637 h1:yiW+nvdHb9LVqSHQBXfZCieqV4fzYhNBql77zY0ykqs=\ngopkg.in/tomb.v2 v2.0.0-20161208151619-d5d1b5820637/go.mod h1:BHsqpu/nsuzkT5BpiH1EMZPLyqSMM8JbIavyFACoFNk=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 29.3671875,
          "content": "#!/usr/bin/env bash\n#\n# RITA is brought to you by Active CounterMeasures.\n# activecountermeasures.com\n\n# CONSTANTS\n_RITA_VERSION=\"v4.8.0\"\n_MONGO_VERSION=\"4.2\"\n_MONGO_MIN_UPDATE_VERSION=\"4.0\"\n_NAME=$(basename \"${0}\")\n_FAILED=\"\\e[91mFAILED\\e[0m\"\n_SUCCESS=\"\\e[92mSUCCESS\\e[0m\"\n_ITEM=\"[-]\"\n_IMPORTANT=\"[!]\"\n_QUESTION=\"[?]\"\n_SUBITEM=\"\\t$_ITEM\"\n_SUBIMPORTANT=\"\\t$_IMPORTANT\"\n_SUBQUESTION=\"\\t$_QUESTION\"\n\n\n# ERROR HANDLING\n__err() {\n    printf \"\\n$_IMPORTANT Installation $_FAILED on line $1.\\n\"\n    exit 1\n}\n\n__int() {\n    printf \"\\n$_IMPORTANT Installation \\e[91mCANCELLED\\e[0m.\\n\"\n    exit 1\n}\n\ntrap '__err $LINENO' ERR\ntrap '__int' INT\n\nset -o errexit\nset -o errtrace\nset -o pipefail\n\n# ENTRYPOINT\n__entry() {\n    _REINSTALL_RITA=false\n\n    # Optional Dependencies\n    _INSTALL_ZEEK=true\n    _INSTALL_MONGO=true\n    _INSTALL_RITA=true\n\n    # Install locations\n    _INSTALL_PREFIX=/usr/local\n    _CONFIG_PATH=/etc/rita\n    _VAR_PATH=/var/lib/rita\n\n    # FOR an OPT style installation\n    # NOTE: RITA itself must be changed to agree with the\n    # _CONFIG_PATH and _VAR_PATH\n    # _INSTALL_PREFIX=/opt/rita\n    # _CONFIG_PATH=/etc/opt/rita\n    # _VAR_PATH=/var/opt/rita\n\n    # Parse through command args\n    while [[ $# -gt 0 ]]; do\n        case $1 in\n            -h|--help)\n                # Display help and exit\n                __help\n                exit 0\n                ;;\n            -r|--reinstall)\n                _REINSTALL_RITA=true\n                _INSTALL_ZEEK=false\n                _INSTALL_MONGO=false\n                ;;\n            --disable-zeek|--disable-bro)\n                _INSTALL_ZEEK=false\n                ;;\n            --disable-mongo)\n                _INSTALL_MONGO=false\n                ;;\n            --disable-rita)\n                _INSTALL_RITA=false\n                ;;\n            *)\n            ;;\n        esac\n        shift\n    done\n\n    if [ \"$_INSTALL_ZEEK\" = \"false\" -a \"$_INSTALL_MONGO\" = \"false\" -a \"$_INSTALL_RITA\" = \"false\" ]; then\n        echo \"No packages were selected for installation, exiting.\"\n        exit 0\n    fi\n\n    if ! [ $(id -u) = 0 ]; then\n        echo \"You do not have permissions to install RITA!\"\n        exit 1\n    fi\n\n    _BIN_PATH=\"$_INSTALL_PREFIX/bin\"\n\n    if [ \"$_INSTALL_RITA\" = \"true\" ] && __installation_exist && [ \"$_REINSTALL_RITA\" != \"true\" ]; then\n        printf \"$_IMPORTANT RITA is already installed.\\n\"\n        printf \"$_QUESTION Would you like to re-install? [y/N] \"\n        read -e\n        if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n            exit 0\n        fi\n        _REINSTALL_RITA=\"true\"\n    fi\n\n    __install\n}\n\n__installation_exist() {\n    [ -f \"$_BIN_PATH/rita\" -o -d \"$_CONFIG_PATH\" -o -d \"$_VAR_PATH\" ]\n}\n\n__install() {\n    __title\n    # Gather enough information to download installer dependencies\n    __gather_pkg_mgr\n\n    # Install installer dependencies\n    __install_installer_deps\n\n    # Get system information\n    __gather_OS\n    __bro_installed\n    __gather_zeek\n    __gather_mongo\n\n    # Explain the installer's actions\n    __explain\n\n    if [ \"$_INSTALL_ZEEK\" = \"true\" ]; then\n        if [ \"$_ZEEK_INSTALLED\" = \"false\" ]; then\n            __load \"$_ITEM Installing Zeek IDS\" __install_zeek\n        else\n            printf \"$_ITEM Zeek IDS is already installed \\n\"\n        fi\n\n        #Unconditionally installed whether this is a new install or an upgrade\n        #Install this before calling __configure_zeek so the modules are in place when \"zeekctl deploy\" restarts zeek\n        __install_ja3\n        __fix_inactivity_timeout\n        __enable_ssl_certificate_logging\n\n        if [ \"$_ZEEK_INSTALLED\" = \"true\" ]; then\n            __configure_zeek\n        fi\n\n        if [ \"$_ZEEK_IN_PATH\" = \"false\" ]; then\n            __add_zeek_to_path\n        fi\n    fi\n\n    if [ \"$_INSTALL_MONGO\" = \"true\" ]; then\n        if [ \"$_MONGO_INSTALLED\" = \"false\" ]; then\n            __load \"$_ITEM Installing MongoDB\" __install_mongodb \"$_MONGO_VERSION\"\n        elif ! __satisfies_version \"$_MONGO_INSTALLED_VERSION\" \"$_MONGO_VERSION\" ; then\n\n            # Check that the user wants to upgrade\n            __mongo_upgrade_info\n\n            # Check if the version is less than 4.0. If so, we need to update to 4.0\n            # before going to 4.2\n            if ! __satisfies_version \"$_MONGO_INSTALLED_VERSION\" \"$_MONGO_MIN_UPDATE_VERSION\"; then\n                printf \"$_ITEM Detected Mongo version less than $_MONGO_MIN_UPDATE_VERSION \\n\"\n                __load \"$_ITEM Performing intermediary update of MongoDB\" __intermediary_update_mongodb\n            fi\n\n            # Need to stop mongo before updating otherwise we can end up with weird issues,\n            # such as the console version not matching the server version\n            systemctl is-active --quiet mongod && systemctl stop mongod\n\n            __load \"$_ITEM Updating MongoDB\" __install_mongodb \"$_MONGO_VERSION\"\n\n            # Need to also install all the components of the mongodb-org metapackage for Ubuntu\n            __install_packages mongodb-org-mongos mongodb-org-server mongodb-org-shell mongodb-org-tools\n        else\n            printf \"$_ITEM MongoDB is already installed \\n\"\n        fi\n\n        if [ \"$_MONGO_INSTALLED\" = \"true\" ] && __configure_mongodb; then\n            # Set compatibility version in case we updated Mongo. It's fine to do this even if we didn't\n            # update Mongo...it's just a bit cleaner to do it here to cut down on code redundancy and logic checks\n            __load \"$_ITEM Setting Mongo feature compatibility to $_MONGO_VERSION\" __update_feature_compatibility \"$_MONGO_VERSION\"\n        fi\n    fi\n\n    if [ \"$_INSTALL_RITA\" = \"true\" ]; then\n        __load \"$_ITEM Installing RITA\" __install_rita\n    fi\n\n    if [ \"$_REINSTALL_RITA\" = \"true\" ]; then\n        printf \"$_IMPORTANT $_RITA_CONFIG_FILE may need to be updated for this version of RITA. \\n\"\n        printf \"$_IMPORTANT A default config file has been created at $_RITA_REINSTALL_CONFIG_FILE. \\n\"\n        printf \"$_IMPORTANT \\\"rita test-config\\\" may be used to troubleshoot configuration issues. \\n \\n\"\n    fi\n\n    printf \"$_IMPORTANT To finish the installation, reload the system profile with \\n\"\n    printf \"$_IMPORTANT 'source /etc/profile'.\\n\"\n\n    __title\n    printf \"Thank you for installing RITA! Happy hunting! \\n\"\n}\n\n__install_installer_deps() {\n    printf \"$_ITEM In order to run the installer, several basic packages must be installed. \\n\"\n\n    # Update package cache\n    __load \"$_SUBITEM Updating packages\" __freshen_packages\n\n    for pkg in curl coreutils lsb-release yum-utils gpg; do\n        __load \"$_SUBITEM Ensuring $pkg is installed\" __install_packages $pkg\n    done\n}\n\n__install_zeek_ubuntu() {\n    if [[ \"$_OS_CODENAME\" == \"focal\" || \"$_OS_CODENAME\" == \"jammy\" ]]; then \n        __add_deb_repo \"deb [ arch=$(dpkg --print-architecture) ] http://download.opensuse.org/repositories/security:/zeek/xUbuntu_$(lsb_release -rs)/ /\" \\\n        \"security:zeek\" \\\n        \"https://download.opensuse.org/repositories/security:/zeek/xUbuntu_$(lsb_release -rs)/Release.key\"\n        __install_packages zeek-lts\n    else \n        printf \"\\nUbuntu ${_OS_CODENAME} is unsupported by Zeek and cannot be installed.\\n\"\n        __err $LINENO # Unsupported Ubuntu version \n    fi\n}\n\n__install_zeek_debian() {\n    if [[ \"$_OS_CODENAME\" == \"bullseye\" ]]; then\n        __add_deb_repo  \"deb http://download.opensuse.org/repositories/security:/zeek/Debian_11/ /\" \\\n        \"security:zeek\" \\\n        \"https://download.opensuse.org/repositories/security:zeek/Debian_11/Release.key\"\n        __install_packages zeek-lts\n    else\n        printf \"\\nDebian ${_OS_CODENAME} is unsupported by Zeek and cannot be installed.\\n\"\n        __err $LINENO # Unsupported Debian version\n    fi\n}\n\n__install_zeek_rhel_like() {\n    if [[ \"$_OS_RELEASE\" =~ ^7.* ]]; then \n        __add_rpm_repo \"https://download.opensuse.org/repositories/security:/zeek/CentOS_7/security:zeek.repo\"\n        __install_packages zeek-lts\n    else\n        printf \"\\nRHEL/ CentOS ${_OS_CODENAME} is unsupported by Zeek and cannot be installed.\\n\"\n        __err $LINENO # Unsupported CentOS/ RHEL version \n    fi\n}\n\n__install_zeek() {\n    case \"$_OS\" in\n        Ubuntu)\n            __install_zeek_ubuntu\n            ;;\n        Debian)\n            __install_zeek_debian\n            ;;\n        CentOS|RedHatEnterprise|RedHatEnterpriseServer)\n            __install_zeek_rhel_like\n            ;;\n        *)\n            printf \"\\nInstalling Zeek on ${_OS} is unsupported by this installer.\\n\"\n            __err $LINENO\n            ;;\n    esac\n\n    if [ -d /opt/zeek/logs/ ]; then\t\t#Standard directory for Zeek logs when installed by Rita\n        chmod 2755 /opt/zeek/logs\n    elif [ -d /var/log/zeek/ ]; then\t\t#Standard directory for Zeek logs when installed by apt...\n        mkdir -p /opt/zeek/logs/\t\t#...and we move the log storage over to /opt/zeek/logs so we can have one place to mount external storage.\n        chmod 2755 /opt/zeek/logs\n        mv -f /var/log/zeek /var/log/zeek.orig\n        cd /var/log\n        ln -s /opt/zeek/logs zeek\n        cd -\n    fi\n    _ZEEK_PKG_INSTALLED=true\n    _ZEEK_INSTALLED=true\n    _ZEEK_PATH=\"/opt/zeek/bin\"\n}\n\n__install_ja3() {\n    local_path=\"$_ZEEK_PATH/../share/zeek/site/\"\n\n    mkdir -p \"$local_path/ja3/\"\n\n    for one_file in __load__.zeek intel_ja3.zeek ja3.zeek ja3s.zeek ; do\n        if [ ! -e \"$local_path/ja3/$one_file\" ]; then\n            curl -sSL \"https://raw.githubusercontent.com/salesforce/ja3/133f2a128b873f9c40e4e65c2b9dc372a801cf24/zeek/$one_file\" -o \"$local_path/ja3/$one_file\"\n        fi\n    done\n\n    if ! grep -q '^[^#]*@load \\./ja3' \"$local_path/local.zeek\" ; then\n        echo '' >>\"$local_path/local.zeek\"\n        echo '#Load ja3 support libraries' >>\"$local_path/local.zeek\"\n        echo '@load ./ja3' >>\"$local_path/local.zeek\"\n    fi\n}\n\n__fix_inactivity_timeout() {\n    local_path=\"$_ZEEK_PATH/../share/zeek/site/\"\n\n    mkdir -p \"$local_path\"\n\n    if ! grep -q '^[^#]*redef tcp_inactivity_timeout = 60 min;' \"$local_path/local.zeek\" ; then\n        echo '' >>\"$local_path/local.zeek\"\n        echo '#Extend inactivity timeout to collect lots of short connections' >>\"$local_path/local.zeek\"\n        echo 'redef tcp_inactivity_timeout = 60 min;' >>\"$local_path/local.zeek\"\n    fi\n}\n\n__enable_ssl_certificate_logging() {\n    local_path=\"$_ZEEK_PATH/../share/zeek/site/\"\n\n    mkdir -p \"$local_path\"\n\n    if ! grep -q '^[^#]*@load  *protocols/ssl/validate-certs' \"$local_path/local.zeek\" ; then\n        echo '' >>\"$local_path/local.zeek\"\n        echo '#Enable certificate validation' >>\"$local_path/local.zeek\"\n        echo '@load protocols/ssl/validate-certs' >>\"$local_path/local.zeek\"\n    fi\n\n    #Removed 202312 WLS because extract-certs-pem.zeek does not appear to be part of Zeek anymore.  If needed in the future, see if log-certs-base64.zeek is a suitable replacement.\n    #if ! grep -q '^[^#]*@load  *policy/protocols/ssl/extract-certs-pem' \"$local_path/local.zeek\" ; then\n    #    echo '' >>\"$local_path/local.zeek\"\n    #    echo '#Log certificates' >>\"$local_path/local.zeek\"\n    #    echo '@load policy/protocols/ssl/extract-certs-pem' >>\"$local_path/local.zeek\"\n    #    echo 'redef SSL::extract_certs_pem = ALL_HOSTS;' >>\"$local_path/local.zeek\"\n    #    echo '' >>\"$local_path/local.zeek\"\n    #fi\n}\n\n__configure_zeek() {\n    _ZEEK_CONFIGURED=false\n\n    # Attempt to detect if Zeek is already configured away from its defaults\n    if [ -s \"$_ZEEK_PATH/../etc/node.cfg\" ] && grep -q '^type=worker' \"$_ZEEK_PATH/../etc/node.cfg\" ; then\n        _ZEEK_CONFIGURED=true\n    fi\n\n    # Attempt to configure Zeek interactively\n    if [ \"$_ZEEK_CONFIGURED\" = \"false\" ]; then\n        # Configure Zeek\n        tmpdir=`mktemp -d -q \"$HOME/rita-install.XXXXXXXX\" < /dev/null`\n        if [ ! -d \"$tmpdir\" ] || findmnt -n -o options -T \"$tmpdir\" | grep -qE '(^|,)noexec($|,)'; then\n            tmpdir=.\n        fi\n        curl -sSL \"https://raw.githubusercontent.com/activecm/bro-install/master/gen-node-cfg.sh\" -o \"$tmpdir/gen-node-cfg.sh\"\n        curl -sSL \"https://raw.githubusercontent.com/activecm/bro-install/master/node.cfg-template\" -o \"$tmpdir/node.cfg-template\"\n        chmod 755 \"$tmpdir/gen-node-cfg.sh\"\n        if \"$tmpdir/gen-node-cfg.sh\" ; then\n            _ZEEK_CONFIGURED=true\n        fi\n        # Clean up the files in case they ended up in the current directory\n        rm -f \"$tmpdir/gen-node-cfg.sh\"\n        rm -f \"$tmpdir/node.cfg-template\"\n    fi\n\n    if [ \"$_ZEEK_CONFIGURED\" = \"true\" ]; then\n        printf \"\\n$_IMPORTANT Enabling Zeek on startup.\\n\"\n        # don't add a new line if zeekctl is already in cron\n        if [ $(crontab -l 2>/dev/null | grep 'zeekctl cron' | wc -l) -eq 0 ]; then\n            # Append an entry to an existing crontab\n            # crontab -l will print to stderr and exit with code 1 if no crontab exists\n            # Ignore stderr and force a successfull exit code to prevent an install error\n            (crontab -l 2>/dev/null || true; echo \"*/5 * * * * $_ZEEK_PATH/zeekctl cron\") | crontab\n        fi\n        $_ZEEK_PATH/zeekctl cron enable > /dev/null\n        printf \"$_IMPORTANT Enabling Zeek on startup process completed.\\n\"\n\n        printf \"$_IMPORTANT Starting Zeek. \\n\"\n        $_ZEEK_PATH/zeekctl deploy\n    else\n        printf \"$_IMPORTANT Automatic Zeek configuration failed. \\n\"\n        printf \"$_IMPORTANT Please edit /opt/zeek/etc/node.cfg and run \\n\"\n        printf \"$_IMPORTANT 'sudo zeekctl deploy' to start Zeek. \\n\"\n        printf \"$_IMPORTANT Pausing for 20 seconds before continuing. \\n\"\n        sleep 20\n    fi\n}\n\n__add_zeek_to_path() {\n    printf \"$_SUBIMPORTANT Adding Zeek IDS to the path in $_ZEEK_PATH_SCRIPT \\n\"\n    echo \"export PATH=\\\"\\$PATH:$_ZEEK_PATH\\\"\" | tee $_ZEEK_PATH_SCRIPT > /dev/null\n    _ZEEK_PATH_SCRIPT_INSTALLED=true\n    export PATH=\"$PATH:$_ZEEK_PATH\"\n    _ZEEK_IN_PATH=true\n}\n\n__mongo_upgrade_info() {\n    printf \"$_IMPORTANT Mongo is already installed and is version $_MONGO_INSTALLED_VERSION.\\n\"\n    printf \"$_IMPORTANT This will upgrade Mongo to version $_MONGO_VERSION.\\n\"\n    printf \"$_IMPORTANT Note that Mongo must be upgraded to $_MONGO_VERSION for RITA $_RITA_VERSION to work.\\n\"\n    printf \"$_IMPORTANT We suggest creating a backup of your data before upgrading (https://docs.mongodb.com/manual/tutorial/backup-and-restore-tools/).\\n\"\n    printf \"$_QUESTION Would you like to upgrade your Mongo instance [y/N] \"\n    read -e\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        exit 0\n    fi\n}\n\n__intermediary_update_mongodb() {\n    # Need to stop mongo before updating otherwise we can end up with weird issues,\n    # such as the console version not matching the server version\n    systemctl is-active --quiet mongod && systemctl stop mongod\n\n    __install_mongodb \"$_MONGO_MIN_UPDATE_VERSION\"\n\n    # Need to also install all the components of the mongodb-org metapackage for Ubuntu\n    __install_packages mongodb-org-mongos mongodb-org-server mongodb-org-shell mongodb-org-tools\n\n    if [ \"$_MONGO_INSTALLED\" = \"true\" ]; then\n        # Star and configure the service so that we can run the command to update feature compatibility\n        __configure_mongodb\n\n        # Need to update feature compatibility to 4.0 otherwise things will break when we update\n        # to 4.2\n        __load \"$_ITEM Setting feature compatibility in Mongo to $_MONGO_MIN_UPDATE_VERSION\" __update_feature_compatibility \"$_MONGO_MIN_UPDATE_VERSION\"\n    fi\n}\n\n__update_feature_compatibility() {\n    mongo --eval \"db.adminCommand( { setFeatureCompatibilityVersion: '$1' } )\" > /dev/null\n}\n\n__install_mongodb_ubuntu() {\n    if [[ \"$_OS_CODENAME\" == \"bionic\" || \"$_OS_CODENAME\" == \"focal\" ]]; then \n        # MongoDB 4.2 is not available for Ubuntu 20, but the package from Ubuntu 18 works without conflicts\n        __add_deb_repo \"deb [ arch=$(dpkg --print-architecture) ] http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/$1 multiverse\" \\\n            \"mongodb-org-$1\" \\\n            \"https://www.mongodb.org/static/pgp/server-$1.asc\"\n        __install_packages mongodb-org\n    else \n        printf \"\\nUbuntu ${_OS_CODENAME} is unsupported by MongoDB $1 and cannot be installed.\\n\"\n        __err $LINENO # Unsupported Ubuntu version \n    fi\n}\n\n__install_mongodb_debian() {\n    if [[ \"$_OS_CODENAME\" == \"buster\" || \"$_OS_CODENAME\" == \"bullseye\" ]]; then\n        # MongoDB 4.2 is not available for Debian 11, but the package from Debian 10 works without conflicts\n        __add_deb_repo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/$1 main\" \\\n            \"mongodb-org-$1\" \\\n            \"https://www.mongodb.org/static/pgp/server-$1.asc\"\n        __install_packages mongodb-org\n    else\n        printf \"\\nDebian ${_OS_CODENAME} is unsupported by MongoDB $1 and cannot be installed.\\n\"\n        __err $LINENO # Unsupported Debian version\n    fi\n}\n\n__install_mongodb_rhel_like() {\n    if [[ \"$_OS_RELEASE\" =~ ^7.* ]]; then \n        if [ ! -s /etc/yum.repos.d/mongodb-org-$1.repo ]; then\n            cat << EOF > /etc/yum.repos.d/mongodb-org-$1.repo\n[mongodb-org-$1]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/\\$releasever/mongodb-org/$1/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-$1.asc\nEOF\n        fi\n        __freshen_packages\n        __install_packages mongodb-org\n    else\n        printf \"\\nRHEL/ CentOS ${_OS_CODENAME} is unsupported by Zeek and cannot be installed.\\n\"\n        __err $LINENO # Unsupported CentOS/ RHEL version \n    fi\n}\n__install_mongodb() {\n    case \"$_OS\" in\n        Ubuntu)\n            __install_mongodb_ubuntu $1\n            ;;\n        Debian)\n            __install_mongodb_debian $1\n            ;;\n        CentOS|RedHatEnterprise|RedHatEnterpriseServer)\n            __install_mongodb_rhel_like $1\n            ;;\n        *)\n            printf \"\\nInstalling MongoDB $1 on ${_OS} is unsupported by this installer.\\n\"\n            __err $LINENO\n            ;;\n    esac\n\n    _MONGO_INSTALLED=true\n}\n\n__configure_mongodb() {\n    printf \"$_IMPORTANT Starting MongoDB and enabling on startup. \\n\"\n    if [ \"$_OS\" = \"Ubuntu\" -o \"$_OS\" = \"Debian\" ]; then\n        local systemctl_status\n        systemctl_status=`systemctl status 2>&1`\n        if [ $? != 0 ]; then \n            printf \"$_SUBIMPORTANT Failed to enable MongoDB on startup. $systemctl_status\\n\"\n            return 1\n        fi\n        systemctl enable mongod.service > /dev/null\n        systemctl daemon-reload > /dev/null\n        systemctl start mongod > /dev/null\n        _STOP_MONGO=\"sudo systemctl stop mongod\"\n    elif [ \"$_OS\" = \"CentOS\" -o \"$_OS\" = \"RedHatEnterprise\" -o \"$_OS\" = \"RedHatEnterpriseServer\" ]; then\n        local systemctl_status\n        systemctl_status=`systemctl status 2>&1`\n        if [ $? != 0 ]; then \n            printf \"$_SUBIMPORTANT Failed to enable MongoDB on startup. $systemctl_status\\n\"\n            return 1\n        fi\n        systemctl enable mongod.service > /dev/null\n        systemctl daemon-reload > /dev/null\n        systemctl start mongod > /dev/null\n        _STOP_MONGO=\"sudo systemctl stop mongod\"\n        #chkconfig mongod on > /dev/null\n        #service mongod start > /dev/null\n        #_STOP_MONGO=\"sudo service mongod stop\"\n    fi\n    printf \"$_IMPORTANT Starting MongoDB process completed.\\n\"\n\n    printf \"$_IMPORTANT You can access the MongoDB shell with 'mongo'. \\n\"\n    printf \"$_IMPORTANT If you need to stop MongoDB, \\n\"\n    printf \"$_IMPORTANT run '$_STOP_MONGO'. \\n\"\n\n    # Wait for service to come to life\n    printf \"$_ITEM Sleeping to give the Mongo service some time to fully start...\"\n    sleep 10\n}\n\n__install_rita() {\n    _RITA_RELEASE_URL=\"https://github.com/activecm/rita-legacy/releases/download/$_RITA_VERSION\"\n    _RITA_REPO_URL=\"https://raw.githubusercontent.com/activecm/rita/$_RITA_VERSION\"\n    _RITA_BINARY_URL=\"$_RITA_RELEASE_URL/rita\"\n    _RITA_CONFIG_URL=\"$_RITA_REPO_URL/etc/rita.yaml\"\n    _RITA_LICENSE_URL=\"$_RITA_REPO_URL/LICENSE\"\n\n    _RITA_CONFIG_FILE=\"$_CONFIG_PATH/config.yaml\"\n    _RITA_REINSTALL_CONFIG_FILE=\"$_CONFIG_PATH/config.yaml.new\"\n\n    curl -sSL \"$_RITA_BINARY_URL\" -o \"$_BIN_PATH/rita\"\n    chmod 755 \"$_BIN_PATH/rita\"\n\n    mkdir -p \"$_CONFIG_PATH\"\n    mkdir -p \"$_VAR_PATH\"\n    chmod 755 \"$_VAR_PATH\"\n    mkdir -p \"$_VAR_PATH/logs\"\n    chmod 777 \"$_VAR_PATH/logs\"\n\n    curl -sSL \"$_RITA_LICENSE_URL\" -o \"$_CONFIG_PATH/LICENSE\"\n\n    if [ \"$_REINSTALL_RITA\" = \"true\" ]; then\n        # Don't overwrite existing config\n        curl -sSL \"$_RITA_CONFIG_URL\" -o \"$_RITA_REINSTALL_CONFIG_FILE\"\n        chmod 666 \"$_RITA_REINSTALL_CONFIG_FILE\"\n    else\n        curl -sSL \"$_RITA_CONFIG_URL\" -o \"$_RITA_CONFIG_FILE\"\n        chmod 666 \"$_RITA_CONFIG_FILE\"\n    fi\n\n    # All users can read and write rita's config file\n    chmod 755 \"$_CONFIG_PATH\"\n\n    mkdir -p /etc/bash_completion.d/\n    curl -sSL \"https://raw.githubusercontent.com/urfave/cli/master/autocomplete/bash_autocomplete\" -o \"/etc/bash_completion.d/rita\"\n}\n\n# INFORMATION GATHERING\n\n__gather_OS() {\n    _OS=\"$(lsb_release -is)\"\n    _OS_CODENAME=\"$(lsb_release -cs)\"\n    _OS_RELEASE=\"$(lsb_release -rs)\"\n\n    if [ \"$_OS\" != \"Ubuntu\" -a \"$_OS\" != \"CentOS\" -a \"$_OS\" != \"RedHatEnterprise\" -a \"$_OS\" != \"RedHatEnterpriseServer\" -a \"$_OS\" != \"Debian\" ]; then\n        printf \"$_ITEM This installer supports Ubuntu, CentOS, RHEL, and Debian. \\n\"\n        printf \"$_IMPORTANT Your operating system is unsupported.\"\n        exit 1\n    fi\n}\n\n\n__gather_pkg_mgr() {\n    # _PKG_MGR = 1: APT: Ubuntu 16.04 and Security Onion (Debian)\n    # _PKG_MGR = 2: YUM: CentOS (Old RHEL Derivatives)\n    # _PKG_MGR = 3: Unsupported\n    _PKG_MGR=3\n    _PKG_INSTALL=\"\"\n    if [ -x /usr/bin/apt-get ];\tthen\n        _PKG_MGR=1\n        _PKG_INSTALL=\"DEBIAN_FRONTEND=noninteractive apt-get -qq install -y\"\n    elif [ -x /usr/bin/yum ];\tthen\n        _PKG_MGR=2\n        _PKG_INSTALL=\"yum -y -q install\"\n    fi\n    if [ $_PKG_MGR -eq 3 ]; then\n        printf \"$_ITEM This installer supports package management via apt and yum. \\n\"\n        printf \"$_IMPORTANT A supported package manager was not found. \\n\"\n        exit 1\n    fi\n}\n\n__bro_installed() {\n    _BRO_INSTALLED=false\n    if __package_installed bro; then\n        _BRO_INSTALLED=true\n    elif [ -f \"/usr/local/bro/bin/bro\" ]; then\n        _BRO_INSTALLED=true\n    fi\n\n    if [ \"$_BRO_INSTALLED\" = \"true\" ]; then\n        printf \"It looks like Bro is installed on this system. This version of RITA uses Zeek.\\n\"\n        printf \"For the best results, please stop the script, uninstall Bro, and re-run the script.\\n\"\n        printf \"\\n\"\n        printf \"Pausing for 20 seconds before continuing.\\n\"\n        _INSTALL_ZEEK=false\n        sleep 20\n    fi\n}\n\n\n__gather_zeek() {\n    _ZEEK_PATH=\"\"\n    _ZEEK_PKG_INSTALLED=false\n    if __package_installed zeek; then\n        _ZEEK_PKG_INSTALLED=true\n        _ZEEK_PATH=\"/opt/zeek/bin\"\n    fi\n\n    _ZEEK_ONION_INSTALLED=false\n    if __package_installed securityonion-bro; then\n        _ZEEK_ONION_INSTALLED=true\n        _ZEEK_PATH=\"/opt/zeek/bin\"\n    fi\n\n    _ZEEK_SOURCE_INSTALLED=false\n    if [ -f \"/usr/local/zeek/bin/zeek\" ]; then\n        _ZEEK_SOURCE_INSTALLED=true\n        _ZEEK_PATH=\"/usr/local/zeek/bin\"\n    fi\n\n    _ZEEK_INSTALLED=false\n    if [ $_ZEEK_PKG_INSTALLED = \"true\" -o $_ZEEK_ONION_INSTALLED = \"true\" -o $_ZEEK_SOURCE_INSTALLED = \"true\" ]; then\n        _ZEEK_INSTALLED=true\n    fi\n\n    if [ \"$_INSTALL_ZEEK\" = \"true\" -a \"$_ZEEK_INSTALLED\" = \"true\" -a ! -d \"$_ZEEK_PATH\" ]; then\n        printf \"$_IMPORTANT An unsupported version of Zeek is installed on this system.\\n\"\n        printf \"$_IMPORTANT RITA has not been tested with this version of Zeek and may not function correctly.\\n\"\n        printf \"$_IMPORTANT For the best results, please stop this script, uninstall Zeek, and re-run the installer.\\n\"\n        printf \"\\n\"\n        printf \"$_IMPORTANT Pausing for 20 seconds before continuing. \\n\"\n        _INSTALL_ZEEK=false\n        sleep 20\n    fi\n\n    _ZEEK_PATH_SCRIPT=\"/etc/profile.d/zeek-path.sh\"\n    _ZEEK_PATH_SCRIPT_INSTALLED=false\n\n    if [ -f \"$_ZEEK_PATH_SCRIPT\" ]; then\n        source \"$_ZEEK_PATH_SCRIPT\"\n        _ZEEK_PATH_SCRIPT_INSTALLED=true\n    fi\n\n    _ZEEK_IN_PATH=false\n    if [ -n \"$(type -pf zeek)\" ]; then\n        _ZEEK_IN_PATH=true\n    fi\n}\n\n__gather_mongo() {\n    _MONGO_INSTALLED=false\n    if __package_installed mongodb-org; then\n        _MONGO_INSTALLED=true\n        _MONGO_INSTALLED_VERSION=\"$(__package_version mongodb-org)\"\n    fi\n}\n\n\n# USER EXPERIENCE\n\n__explain() {\n    printf \"$_ITEM This installer will: \\n\"\n    if [ $_ZEEK_INSTALLED = \"false\" -a $_INSTALL_ZEEK = \"true\" ]; then\n        printf \"$_SUBITEM Install Zeek IDS to /opt/zeek \\n\"\n    fi\n    if [ $_MONGO_INSTALLED = \"false\" -a $_INSTALL_MONGO = \"true\" ]; then\n        printf \"$_SUBITEM Install MongoDB \\n\"\n    fi\n    if ( ! __installation_exist ) && [ $_INSTALL_RITA = \"true\" ]; then\n        printf \"$_SUBITEM Install RITA to $_BIN_PATH/rita \\n\"\n        printf \"$_SUBITEM Create a runtime directory for RITA in $_VAR_PATH \\n\"\n        printf \"$_SUBITEM Create a configuration directory for RITA in $_CONFIG_PATH \\n\"\n    elif [ \"$_REINSTALL_RITA\" = \"true\" ]; then\n        printf \"$_SUBITEM Update RITA at $_BIN_PATH/rita \\n\"\n    fi\n    sleep 5s\n}\n\n__title() {\n    echo \\\n\"\n _ \\ _ _| __ __|  \\\\\n   /   |     |   _ \\\\\n_|_\\ ___|   _| _/  _\\\\  $_RITA_VERSION\n\nBrought to you by Active CounterMeasures\n\"\n}\n\n__help() {\n    __title\n\n    cat <<HEREDOC\nThis script automatically installs Real Intelligence Threat Analyitics (RITA)\nalong with necessary dependencies, including Zeek IDS and MongoDB.\nUsage:\n    ${_NAME} [<arguments>]\nOptions:\n    -h|--help\t\t\tShow this help message.\n    -r|--reinstall\t\t\tForce reinstalling RITA.\n    -v|--version <version>\t\tSpecify the version tag of RITA to install instead of master.\n    --disable-zeek|--disable-bro\tDisable automatic installation of Zeek IDS.\n    --disable-mongo\t\t\tDisable automatic installation of MongoDB.\nHEREDOC\n}\n\n__load() {\n  local loadingText=$1\n    printf \"$loadingText...\\r\"\n    shift\n    eval \"$@\"\n    echo -ne \"\\r\\033[K\"\n    printf \"$loadingText... $_SUCCESS\\n\"\n}\n\n# PACKAGE MANAGEMENT\n__install_packages() {\n    while [ ! -z \"$1\" ]; do\n        local pkg=\"$1\"\n        # Translation layer\n        # yum -> apt\n        if [ $_PKG_MGR -eq 1 ]; then\n            case \"$pkg\" in\n                \"yum-utils\")\n                    # required for yum-config-manager\n                    # Ubuntu equivalent is apt-key which is already installed\n                    shift\n                    continue\n                    ;;\n            esac\n        # apt -> yum\n        elif [ $_PKG_MGR -eq 2 ]; then\n            case \"$pkg\" in\n                \"lsb-release\")\n                    pkg=\"redhat-lsb-core\"\n                    ;;\n                \"realpath\")\n                    pkg=\"coreutils\"\n                    ;;\n            esac\n        fi\n        \n        if ! eval $_PKG_INSTALL $pkg >/dev/null 2>&1; then\n            printf \"\\nFailed to install package: $pkg\\n\"\n            __err $LINENO # package failed to install. This explicit check is needed so eval doesn't swallow the error.\n        fi\n        shift\n    done\n}\n\n__freshen_packages() {\n    if [ $_PKG_MGR -eq 1 ]; then   #apt\n        apt-get -qq update > /dev/null 2>&1 || /bin/true\n    elif [ $_PKG_MGR -eq 2 ]; then #yum\n        yum -q makecache > /dev/null 2>&1 || /bin/true\n    fi\n}\n\n__package_installed() {\n    #Returns true if the package is installed, false otherwise\n    if [ $_PKG_MGR -eq 1 ]; then # apt\n        dpkg-query -W -f='${Status}' \"$1\" 2>/dev/null | grep -q \"ok installed\"\n    elif [ $_PKG_MGR -eq 2 ]; then # yum and dnf\n        rpm -q \"$1\" >/dev/null\n    fi\n}\n\n__package_version() {\n    if ! __package_installed \"$1\"; then\n        echo \"\"\n    fi\n\n    if [ $_PKG_MGR -eq 1 ]; then # apt\n        echo $(dpkg-query -W -f '${Version}' \"$1\")\n    elif [ $_PKG_MGR -eq 2 ]; then # yum and dnf\n        echo $(rpm -qa --queryformat='%{VERSION}' \"$1\")\n    fi\n}\n\n# Compares two version strings to determine if the first is\n# less than or equal to the second. Version strings are expected\n# to be in the form: 1.2.3, 1.2, or 1\n__satisfies_version() {\n    local installed=\"$1\"\n    local desired=\"$2\"\n\n    # Break apart version strings like 1.2.3 into major.minor.patch\n    local installed_major=\"$(echo $installed | cut -d'.' -f1)\"\n    local installed_minor=\"$(echo $installed | cut -d'.' -f2)\"\n    local installed_patch=\"$(echo $installed | cut -d'.' -f3)\"\n    local desired_major=\"$(echo $desired | cut -d'.' -f1)\"\n    local desired_minor=\"$(echo $desired | cut -d'.' -f2)\"\n    local desired_patch=\"$(echo $desired | cut -d'.' -f3)\"\n\n    # Set any empty values to 0\n    if [ -z \"$installed_major\" ]; then installed_major=0; fi\n    if [ -z \"$installed_minor\" ]; then installed_minor=0; fi\n    if [ -z \"$installed_patch\" ]; then installed_patch=0; fi\n    if [ -z \"$desired_major\" ]; then desired_major=0; fi\n    if [ -z \"$desired_minor\" ]; then desired_minor=0; fi\n    if [ -z \"$desired_patch\" ]; then desired_patch=0; fi\n\n    if [ \"$installed_major\" -lt \"$desired_major\" ]; then\n        false; return\n    elif [ \"$installed_major\" -gt \"$desired_major\" ]; then\n        true; return\n    fi\n    # else major versions are equal and we need to check minor\n    if [ \"$installed_minor\" -lt \"$desired_minor\" ]; then\n        false; return\n    elif [ \"$installed_minor\" -gt \"$desired_minor\" ]; then\n        true; return\n    fi\n    # else minor versions are equal and we need to check patch\n    if [ \"$installed_patch\" -lt \"$desired_patch\" ]; then\n        false; return\n    elif [ \"$installed_patch\" -gt \"$desired_patch\" ]; then\n        true; return\n    else\n        # installed version is exactly equal to desired version\n        true; return\n    fi\n}\n\n__add_deb_repo() {\n    if [ ! -s \"/etc/apt/sources.list.d/$2.list\" ]; then\n        if [ ! -z \"$3\" ]; then\n            curl -s -L \"$3\" | apt-key add - > /dev/null 2>&1\n        fi\n        echo \"$1\" | tee \"/etc/apt/sources.list.d/$2.list\" > /dev/null\n        __freshen_packages\n    fi\n}\n\n__add_rpm_repo() {\n    yum-config-manager -q --add-repo=$1 > /dev/null 2>&1\n    __freshen_packages\n}\n\n# ENTRYPOINT CALL\n__entry \"${@:-}\"\n"
        },
        {
          "name": "parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "reporting",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "rita-logo.png",
          "type": "blob",
          "size": 19.431640625,
          "content": null
        },
        {
          "name": "rita.go",
          "type": "blob",
          "size": 0.7490234375,
          "content": "package main\n\nimport (\n\t\"os\"\n\t\"runtime\"\n\n\t\"github.com/activecm/rita-legacy/commands\"\n\t\"github.com/activecm/rita-legacy/config\"\n\t\"github.com/urfave/cli\"\n)\n\n// Entry point of ac-hunt\nfunc main() {\n\tapp := cli.NewApp()\n\tapp.Name = \"rita\"\n\tapp.Usage = \"Look for evil needles in big haystacks.\"\n\tapp.Flags = []cli.Flag{commands.ConfigFlag}\n\n\tcli.VersionPrinter = commands.GetVersionPrinter()\n\n\t// Change the version string with updates so that a quick help command will\n\t// let the testers know what version of HT they're on\n\tapp.Version = config.Version\n\tapp.EnableBashCompletion = true\n\n\t// Define commands used with this application\n\tapp.Commands = commands.Commands()\n\tapp.Before = commands.SetConfigFilePath\n\n\truntime.GOMAXPROCS(runtime.NumCPU())\n\tapp.Run(os.Args)\n}\n"
        },
        {
          "name": "static-tests.sh",
          "type": "blob",
          "size": 0.9267578125,
          "content": "#!/bin/sh\n\necho \"Running static test - gofmt\"\nGOFMT_FILES=$(gofmt -l .)\nif [ -n \"${GOFMT_FILES}\" ]; then\n  printf >&2 \"gofmt failed for the following files:\\n%s\\n\\nplease run 'gofmt -w .' on your changes before committing.\\n\" \"${GOFMT_FILES}\"\n  TEST_STATUS=FAIL\nfi\n\necho \"Running static test - golint\"\nGOLINT_ERRORS=$(golint ./...)\nif [ -n \"${GOLINT_ERRORS}\" ]; then\n  printf >&2 \"golint failed for the following reasons:\\n%s\\n\\nplease run 'golint ./...' on your changes before committing.\\n\" \"${GOLINT_ERRORS}\"\n  TEST_STATUS=FAIL\nfi\n\necho \"Running static test - go tool vet\"\nGOVET_ERRORS=$(go tool vet $(find . -name '*.go' | grep -v '/vendor/') 2>&1)\nif [ -n \"${GOVET_ERRORS}\" ]; then\n  printf >&2 \"go vet failed for the following reasons:\\n%s\\n\\nplease run \\\"go tool vet \\$(find . -name '*.go' | grep -v '/vendor/')\\\" on your changes before committing.\\n\" \"${GOVET_ERRORS}\"\n  TEST_STATUS=FAIL\nfi\n\nif [ \"$TEST_STATUS\" = \"FAIL\" ]; then\n  exit 1\nfi\n"
        },
        {
          "name": "test.Dockerfile",
          "type": "blob",
          "size": 0.5302734375,
          "content": "# use debian instead of alpine because the go race requires glibc\n# https://github.com/golang/go/issues/14481\nFROM golang:1.17\n\nRUN apt-get update && apt-get install -y git make ca-certificates wget build-essential\nWORKDIR /go\n# install testing dependencies\nRUN wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \\\n\t| sh -s v1.41.1\n\nWORKDIR /go/src/github.com/activecm/rita-legacy\n\n# cache dependencies\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# copy the rest of the code\nCOPY . ./\n\nCMD [\"make\", \"test\"]\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}