{
  "metadata": {
    "timestamp": 1736567107752,
    "page": 700,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "u-root/u-root",
      "stars": 2659,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5771484375,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n*~\n\nbazel-*\n\n/bbsh\n/bb\n/u-root\n!vendor/github.com/u-root\nintegration/serial/\nintegration/coverage/\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\nbin\ndev\n/buildbin\ntinycorelinux*\n*.swp\ngo.cpio\ninitramfs.cpio\n/init\nbzImage\nvmlinux\n*.patch\n.gdb_history\n\n# Python Virtual Env\n*.env\n*.venv\n\n# Vim swap files\n*.swp\n.*.swp\n\n# tools\ntools/checklicenses/checklicenses\n\n# JetBrains IDEs\n/.idea/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.712890625,
          "content": "linters:\n  disable-all: true\n  enable:\n    - revive\n    - ineffassign\n    - staticcheck\n    - stylecheck\n    - errorlint\n\nlinters-settings:\n  staticcheck:\n    checks: [\"all\", \"-SA1019\"]\n  stylecheck:\n    checks: [\"all\", \"-ST1003\"]\n  errorlint:\n    errorf: true\n    asserts: false\n    comparison: false\n\nissues:\n  exclude-dirs:\n    - pkg/uroot/test\n  exclude-rules:\n    - linters: revive\n      text: \"don't use underscores\"\n    - linters: revive\n      text: \"don't use ALL_CAPS\"\n    - linters: revive\n      text: \"stutter\"\n    - linters: revive\n      text: \"unexported-return\"\n    - linters: revive\n      text: \"unused-parameter\"\n    - linters: revive\n      text: \"superfluous-else\"\n    - linters: revive\n      text: \"empty-block\"\n"
        },
        {
          "name": ".mkuimage.yaml",
          "type": "blob",
          "size": 7.1201171875,
          "content": "commands:\n  all:\n    - github.com/u-root/u-root/cmds/core/*\n    - github.com/u-root/u-root/cmds/boot/*boot*\n\n  boot:\n    - github.com/u-root/u-root/cmds/boot/*boot*\n\n  world:\n    - github.com/u-root/u-root/cmds/*/*\n\n  core:\n    - github.com/u-root/u-root/cmds/core/*\n\n  minimal:\n    - github.com/u-root/u-root/cmds/core/blkid\n    - github.com/u-root/u-root/cmds/core/cat\n    - github.com/u-root/u-root/cmds/core/chmod\n    - github.com/u-root/u-root/cmds/core/cmp\n    - github.com/u-root/u-root/cmds/core/cp\n    - github.com/u-root/u-root/cmds/core/date\n    - github.com/u-root/u-root/cmds/core/dd\n    - github.com/u-root/u-root/cmds/core/df\n    - github.com/u-root/u-root/cmds/core/dhclient\n    - github.com/u-root/u-root/cmds/core/dmesg\n    - github.com/u-root/u-root/cmds/core/echo\n    - github.com/u-root/u-root/cmds/core/find\n    - github.com/u-root/u-root/cmds/core/free\n    - github.com/u-root/u-root/cmds/core/gosh\n    - github.com/u-root/u-root/cmds/core/gpgv\n    - github.com/u-root/u-root/cmds/core/grep\n    - github.com/u-root/u-root/cmds/core/gzip\n    - github.com/u-root/u-root/cmds/core/hostname\n    - github.com/u-root/u-root/cmds/core/id\n    - github.com/u-root/u-root/cmds/core/init\n    - github.com/u-root/u-root/cmds/core/insmod\n    - github.com/u-root/u-root/cmds/core/io\n    - github.com/u-root/u-root/cmds/core/ip\n    - github.com/u-root/u-root/cmds/core/kexec\n    - github.com/u-root/u-root/cmds/core/kill\n    - github.com/u-root/u-root/cmds/core/ln\n    - github.com/u-root/u-root/cmds/core/losetup\n    - github.com/u-root/u-root/cmds/core/ls\n    - github.com/u-root/u-root/cmds/core/lsmod\n    - github.com/u-root/u-root/cmds/core/mkdir\n    - github.com/u-root/u-root/cmds/core/mknod\n    - github.com/u-root/u-root/cmds/core/mount\n    - github.com/u-root/u-root/cmds/core/msr\n    - github.com/u-root/u-root/cmds/core/mv\n    - github.com/u-root/u-root/cmds/core/pci\n    - github.com/u-root/u-root/cmds/core/ping\n    - github.com/u-root/u-root/cmds/core/printenv\n    - github.com/u-root/u-root/cmds/core/ps\n    - github.com/u-root/u-root/cmds/core/pwd\n    - github.com/u-root/u-root/cmds/core/readlink\n    - github.com/u-root/u-root/cmds/core/rm\n    - github.com/u-root/u-root/cmds/core/rmmod\n    - github.com/u-root/u-root/cmds/core/seq\n    - github.com/u-root/u-root/cmds/core/shutdown\n    - github.com/u-root/u-root/cmds/core/sleep\n    - github.com/u-root/u-root/cmds/core/sync\n    - github.com/u-root/u-root/cmds/core/tail\n    - github.com/u-root/u-root/cmds/core/tee\n    - github.com/u-root/u-root/cmds/core/truncate\n    - github.com/u-root/u-root/cmds/core/umount\n    - github.com/u-root/u-root/cmds/core/uname\n    - github.com/u-root/u-root/cmds/core/unshare\n    - github.com/u-root/u-root/cmds/core/wc\n    - github.com/u-root/u-root/cmds/core/wget\n    - github.com/u-root/u-root/cmds/core/which\n\n  embedded:\n    - github.com/u-root/u-root/cmds/core/cat\n    - github.com/u-root/u-root/cmds/core/cp\n    - github.com/u-root/u-root/cmds/core/dd\n    - github.com/u-root/u-root/cmds/core/dhclient\n    - github.com/u-root/u-root/cmds/core/dmesg\n    - github.com/u-root/u-root/cmds/core/echo\n    - github.com/u-root/u-root/cmds/core/free\n    - github.com/u-root/u-root/cmds/core/gosh\n    - github.com/u-root/u-root/cmds/core/grep\n    - github.com/u-root/u-root/cmds/core/init\n    - github.com/u-root/u-root/cmds/core/insmod\n    - github.com/u-root/u-root/cmds/core/ip\n    - github.com/u-root/u-root/cmds/core/kexec\n    - github.com/u-root/u-root/cmds/core/ln\n    - github.com/u-root/u-root/cmds/core/ls\n    - github.com/u-root/u-root/cmds/core/mkdir\n    - github.com/u-root/u-root/cmds/core/mount\n    - github.com/u-root/u-root/cmds/core/netcat\n    - github.com/u-root/u-root/cmds/core/ping\n    - github.com/u-root/u-root/cmds/core/rm\n    - github.com/u-root/u-root/cmds/core/rmmod\n    - github.com/u-root/u-root/cmds/core/shutdown\n    - github.com/u-root/u-root/cmds/core/tail\n    - github.com/u-root/u-root/cmds/core/tee\n    - github.com/u-root/u-root/cmds/core/uname\n    - github.com/u-root/u-root/cmds/core/wget\n\n  coreboot-app:\n    - github.com/u-root/u-root/cmds/core/cat\n    - github.com/u-root/u-root/cmds/exp/cbmem\n    - github.com/u-root/u-root/cmds/core/chroot\n    - github.com/u-root/u-root/cmds/core/cp\n    - github.com/u-root/u-root/cmds/core/dd\n    - github.com/u-root/u-root/cmds/core/dhclient\n    - github.com/u-root/u-root/cmds/core/dmesg\n    - github.com/u-root/u-root/cmds/core/find\n    - github.com/u-root/u-root/cmds/core/gosh\n    - github.com/u-root/u-root/cmds/core/grep\n    - github.com/u-root/u-root/cmds/core/id\n    - github.com/u-root/u-root/cmds/core/init\n    - github.com/u-root/u-root/cmds/core/insmod\n    - github.com/u-root/u-root/cmds/core/ip\n    - github.com/u-root/u-root/cmds/core/kill\n    - github.com/u-root/u-root/cmds/core/ls\n    - github.com/u-root/u-root/cmds/core/mount\n    - github.com/u-root/u-root/cmds/core/pci\n    - github.com/u-root/u-root/cmds/core/ping\n    - github.com/u-root/u-root/cmds/core/ps\n    - github.com/u-root/u-root/cmds/core/pwd\n    - github.com/u-root/u-root/cmds/core/rm\n    - github.com/u-root/u-root/cmds/core/rmmod\n    - github.com/u-root/u-root/cmds/core/shutdown\n    - github.com/u-root/u-root/cmds/core/sshd\n    - github.com/u-root/u-root/cmds/core/switch_root\n    - github.com/u-root/u-root/cmds/core/tail\n    - github.com/u-root/u-root/cmds/core/tee\n    - github.com/u-root/u-root/cmds/core/uname\n    - github.com/u-root/u-root/cmds/core/wget\n\n  plan9:\n    - github.com/u-root/u-root/cmds/core/*\n\n  tinygo:\n    - github.com/u-root/u-root/cmds/core/backoff\n    - github.com/u-root/u-root/cmds/core/base64\n    - github.com/u-root/u-root/cmds/core/basename\n    - github.com/u-root/u-root/cmds/core/cat\n    - github.com/u-root/u-root/cmds/core/chmod\n    - github.com/u-root/u-root/cmds/core/cmp\n    - github.com/u-root/u-root/cmds/core/comm\n    - github.com/u-root/u-root/cmds/core/cp\n    - github.com/u-root/u-root/cmds/core/date\n    - github.com/u-root/u-root/cmds/core/dd\n    - github.com/u-root/u-root/cmds/core/dirname\n    - github.com/u-root/u-root/cmds/core/echo\n    - github.com/u-root/u-root/cmds/core/false\n    - github.com/u-root/u-root/cmds/core/free\n    - github.com/u-root/u-root/cmds/core/gpt\n    - github.com/u-root/u-root/cmds/core/grep\n    - github.com/u-root/u-root/cmds/core/hexdump\n    - github.com/u-root/u-root/cmds/core/kill\n    - github.com/u-root/u-root/cmds/core/ls\n    - github.com/u-root/u-root/cmds/core/mkdir\n    - github.com/u-root/u-root/cmds/core/more\n    - github.com/u-root/u-root/cmds/core/mv\n    - github.com/u-root/u-root/cmds/core/ps\n    - github.com/u-root/u-root/cmds/core/pwd\n    - github.com/u-root/u-root/cmds/core/rm\n    - github.com/u-root/u-root/cmds/core/sort\n    - github.com/u-root/u-root/cmds/core/tr\n    - github.com/u-root/u-root/cmds/core/true\n    - github.com/u-root/u-root/cmds/core/uniq\n    - github.com/u-root/u-root/cmds/core/wc\n    - github.com/u-root/u-root/cmds/core/yes\n\nconfigs:\n  default:\n    init: init\n    shell: gosh\n    commands:\n      - builder: bb\n        commands: [core]\n\n  plan9:\n    goos: plan9\n    init: init\n    shell: \"\"\n    commands:\n      - builder: bb\n        commands: [plan9]\n\n  # Enables build tags that allow Dead Code Elimination.\n  small:\n    init: init\n    shell: gosh\n    build_tags: [goshsmall, grpcnotrace]\n"
        },
        {
          "name": ".vmtest.yaml",
          "type": "blob",
          "size": 1.6640625,
          "content": "amd64:\n  VMTEST_QEMU:\n    container: \"ghcr.io/hugelgupf/vmtest/qemu:main\"\n    template: \"{{.qemu}}/bin/qemu-system-x86_64 -L {{.qemu}}/pc-bios -m 1G\"\n    directories:\n      qemu: \"/zqemu\"\n\n  VMTEST_KERNEL:\n    container: \"ghcr.io/u-root/u-root/test-kernel-amd64@sha256:0b4f399fd61f2f5e060c86216150ec12439851101921337add61402c185e8007\"\n    template: \"{{.bzImage}}\"\n    files:\n      bzImage: \"/bzImage\"\n\n  UROOT_MULTIBOOT_TEST_KERNEL_DIR:\n    container: \"ghcr.io/u-root/u-root/test-multiboot-test-kernel-amd64@sha256:4439ae6289f5ccb5fa193556de8d639900c1a4c6f57c8d1d6015f5ea49b5d9f9\"\n    template: \"{{.mbdir}}\"\n    directories:\n      mbdir: \"/mb\"\n\n  UROOT_TEST_UEFIPAYLOAD:\n    container: \"ghcr.io/u-root/u-root/test-uefipayload-amd64@sha256:0c8eb1b8a20b1ab3748b830eef76634711586f18ff0accf7ba98015fa86383ff\"\n    template: \"{{.payload}}\"\n    files:\n      payload: \"/UEFIPAYLOAD.fd\"\n\narm:\n  VMTEST_QEMU:\n    container: \"ghcr.io/hugelgupf/vmtest/qemu:main\"\n    template: \"{{.qemu}}/bin/qemu-system-arm -M virt,highmem=off -L {{.qemu}}/pc-bios\"\n    directories:\n      qemu: \"/zqemu\"\n\n  VMTEST_KERNEL:\n    container: \"ghcr.io/u-root/u-root/test-kernel-arm@sha256:0429fa0ab8dbc4d1913f1c2b8ccc45fa8000897c801ed90b90c14a15e1f32020\"\n    template: \"{{.zImage}}\"\n    files:\n      zImage: \"/zImage\"\n\narm64:\n  VMTEST_QEMU:\n    container: \"ghcr.io/hugelgupf/vmtest/qemu:main\"\n    template: \"{{.qemu}}/bin/qemu-system-aarch64 -machine virt -cpu max -m 1G -L {{.qemu}}/pc-bios\"\n    directories:\n      qemu: \"/zqemu\"\n\n  VMTEST_KERNEL:\n    container: \"ghcr.io/u-root/u-root/test-kernel-arm64@sha256:e48f32266071edaec44445da98375fe512b1532640e256f9f7138633e0000866\"\n    template: \"{{.Image}}\"\n    files:\n      Image: \"/Image\"\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.7724609375,
          "content": "# This is the official list of u-root authors for copyright purposes. This will\n# not list all people who have contributed; for example, many Google employee\n# contributors are not listed here, since Google holds the copyright to their\n# contributions.\n#\n# This list is not complete and does not strive to be.\n\n# Names should be added to this file as one of\n#     Organization's name\n#     Organization's name <contact email>\n#     Individual's name <submission email address>\n#     Individual's name <submission email address> <email2> <emailN>\n\nAndrey Mirtchovski <mirtchovski@gmail.com>\nFacebook, Inc.\nGenesys Telecommunications Laboratories, Inc.\nGoogle LLC\nJonathan Bluett-Duncan <jbluettduncan@gmail.com>\nOracle Corporation <simran.p.singh@oracle.com>\nRon Minnich <rminnich@gmail.com>\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.0947265625,
          "content": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: u-root\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Ronald\n    family-names: Minnich\n    email: rminnich@gmail.com\n    name-particle: ronald\n    orcid: 'https://orcid.org/0009-0003-1777-562X'\n  - {}\nrepository-code: 'https://github.com/u-root/u-root'\nurl: 'https://u-root.org'\nabstract: >-\n  u-root embodies four different projects.\n\n\n  Go versions of many standard Linux tools, such as ls, cp,\n  or shutdown. See cmds/core for most of these.\n\n\n  A way to compile many Go programs into a single binary\n  with busybox mode.\n\n\n  A way to create initramfs (an archive of files) to use\n  with Linux kernels, embeddable into firmware.\n\n\n  Go bootloaders that use kexec to boot Linux or multiboot\n  kernels such as ESXi, Xen, or tboot. They are meant to be\n  used with LinuxBoot.\nkeywords:\n  - Go\n  - firmware\n  - initramfs\nlicense: BSD-3-Clause\ncommit: main\nversion: 0.14.0\ndate-released: '2024-02-27'\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.7294921875,
          "content": "# Contributing to u-root\n\nWe need help with this project. Contributions are very welcome. See the [roadmap](roadmap.md), open [issues](https://github.com/u-root/u-root/issues), and join us in [Slack](CONTRIBUTING.md#communication) to talk about your cool ideas for the project.\n\n## Code of Conduct\n\nConduct collaboration around u-root in accordance to the [Code of\nConduct](https://github.com/u-root/u-root/wiki/Code-of-Conduct).\n\n## Communication\n\n- [Open Source Firmware Slack team](https://osfw.slack.com),\n  channel `#u-root`, sign up [here](https://slack.osfw.dev/)\n- [Join the mailing list](https://groups.google.com/forum/#!forum/u-root)\n\n## Bugs\n\n- Please submit issues to https://github.com/u-root/u-root/issues\n\n## Coding Style\n\nThe ``u-root`` project aims to follow the standard formatting recommendations\nand language idioms set out in the [Effective Go](https://golang.org/doc/effective_go.html)\nguide, for example [formatting](https://golang.org/doc/effective_go.html#formatting)\nand [names](https://golang.org/doc/effective_go.html#names).\n\n`gofmt` and `staticcheck` are law, although this is not automatically enforced\nyet and some housecleaning needs done to achieve that.\n\nWe have a few rules not covered by these tools:\n\n- Standard imports are separated from other imports. Example:\n    ```\n    import (\n      \"regexp\"\n      \"time\"\n\n      dhcp \"github.com/krolaw/dhcp4\"\n    )\n    ```\n\n## General Guidelines\n\nWe want to implement some of the common commands that exist in upstream projects and elsewhere, but we don't need to copy broken behavior. CLI compatibility with existing implementations isn't required. We can add missing functionality and remove broken behavior from commands as needed.\n\nU-root needs to fit onto small flash storage, (eg. 8 or 16MB SPI). Be cognizant of of how your work is increasing u-root's footprint. The current goal is to keep the BB mode `lzma -9` compressed initramfs image under 3MB.\n\n## Pull Requests\n\nWe accept GitHub pull requests.\n\nFork the project on GitHub, work in your fork and in branches, push\nthese to your GitHub fork, and when ready, do a GitHub pull requests\nagainst https://github.com/u-root/u-root.\n\nu-root uses Go modules for its dependency management, but still vendors\ndependencies in the repository pending module support in the build system.\nPlease run `go mod tidy` and `go mod vendor` and commit `go.mod`, `go.sum`, and\n`vendor/` changes before opening a pull request.\n\nOrganize your changes in small and meaningful commits which are easy to review.\nEvery commit in your pull request needs to be able to build and pass the CI tests.\n\nIf the pull request closes an issue please note it as: `\"Fixes #NNN\"`.\n\n### Patch Format\n\nWell formatted patches aide code review pre-merge and code archaeology in\nthe future.  The abstract form should be:\n```\n<component>: Change summary\n\nMore detailed explanation of your changes: Why and how.\nWrap it to 72 characters.\nSee [here] (http://chris.beams.io/posts/git-commit/)\nfor some more good advices.\n\nSigned-off-by: <contributor@foo.com>\n```\n\nAn example from this repo:\n```\ntcz: quiet it down\n\nIt had a spurious print that was both annoying and making\nboot just a tad slower.\n\nSigned-off-by: Ronald G. Minnich <rminnich@gmail.com>\n```\n\n### Developer Sign-Off\n\nFor purposes of tracking code-origination, we follow a simple sign-off\nprocess.  If you can attest to the [Developer Certificate of\nOrigin](https://developercertificate.org/) then you append in each git\ncommit text a line such as:\n```\nSigned-off-by: Your Name <username@youremail.com>\n```\n\n### Incorporation of Feedback\nTo not break the conversation history inside the PR avoid force pushes. Instead, push further _'fix up commits'_ to resolve annotations.\nOnce review is done, do a local rebase to clean up the _'fix up commits'_ and come back to a clean commit history and do a single fore push to the PR.\n\n## Unit Testing Guidelines\n\n### Unit Test Checks\n\n* The [testify](https://github.com/stretchr/testify) package should not be used.\n* The [cmp](https://pkg.go.dev/github.com/google/go-cmp/cmp) package is allowed.\n* Unit tests in Go should follow the guidelines in this tutorial: https://go.dev/doc/tutorial/add-a-test\n  * In particular, the test error should be in the form `Function(...) = ...; want ...`.\n\nFor example:\n\n```\nif msg != \"\" || err == nil {\n\tt.Fatalf(`Hello(\"\") = %q, %v, want \"\", error`, msg, err)\n}\n```\n\n* Tests should do all filesystem changes under a temporary directory, either\n  created with `ioutil.TempDir` or `testing.T.TempDir`.\n\n### Mocking Dependencies\n\n* Special mocking packages should not be used.\n* Prefer to test the real thing where possible.\n* Mocking is sometimes necessary. For example:\n   * Operations as root.\n   * Interacting with special hardware (ex: USB, SPI, PCIe)\n   * Modifying machine state (ex: reboot, kexec)\n   * Tests which would otherwise be flaky (ex: `time.Sleep`, networking)\n* Consider writing an integration test if the program can not be easily run\n  directly.\n   * Integration tests let you run the command under qemu, which lets you test\n     operations with, e.g., virtual hardware.\n  * `pkg/mount` contains an example of an integration test run under QEMU.\n* Prefer to mock using existing interfaces. For example: `io.Reader`, `fs.FS`\n* Avoid mocking using global state. Instead, consider using one of the\n  following \"dependency injection\" idioms:\n\n1. Mocking functions:\n\n```\n// The exported function has a meaningful API.\nfunc SetMemAddr(addr, val uint) error {\n\treturn setMemAddr(addr, val, \"/dev/mem\")\n}\n\n// The internal function is called from the unit test. The test can set a\n// different `file` argument.\nfunc setMemAddr(addr, val uint, file string) error {\n\tf, err := os.Open(file)\n\tif err != nil {\n\t\treturn err\n\t}\n\t...\n}\n```\n\n2. Mocking objects:\n\n```\n// SPI interface for the underlying calls to the SPI driver.\ntype SPI interface {\n\tTransfer(transfers []spidev.Transfer) error\n}\n\n// Flash provides operations for SPI flash chips.\ntype Flash struct {\n\t// spi is the underlying SPI device.\n\tspi SPI\n\n  // other fields ...\n}\n\n// New creates a new flash device from a SPI interface.\nfunc New(spi SPI) (*Flash, error) {\n\tf := &Flash{\n\t\tspi: spi,\n\t}\n\n  // initialize other fields ...\n\n  return f\n}\n```\n\nIn the above example, the `flash.New` function takes a `SPI` device which can\nbe mocked out as follows:\n\n```\nf, err := flash.New(spimock.New())\n...\n```\n\nThe `spimock.New()` function returns an implementation of SPI which mocks the\nunderlying SPI driver. The `Flash` object can be tested without hardware\ndependencies.\n\n### VM Tests using QEMU\n\nFor code reading or manipulating hardware, it can be reasonable not to mock out\nsyscalls but to run tests in a virtual environment. In case you need to test\nagainst certain hardware, you can use a QEMU environment via\n[vmtest](https://github.com/hugelgupf/vmtest).\n\nIn your package, put the setup and corresponding tests in `vm_test.go`.\n\n**IMPORTANT Notes**\n* Add `!race` build tag to your `vm_test.go`\n* Setup QEMU inside a usual test function\n* Make sure the tests assuming this setup are skipped in non-VM test run\n* Add your package to `blocklist` in `integration/gotests/gotest_test.go` making\n  sure the test doesn't run in the project wide integration tests without the\n  proper QEMU setup.\n\nSee [/pkg/gpio/gpio_integration_test.go](pkg/gpio) for a simple example, or\n[/pkg/mount/block/vm_test.go](pkg/mount).\n\n### Package main\n\nThe main function often includes things difficult to test. For example:\n\n1. Process-ending functions such as `log.Fatal` and `os.Exit`. These functions\n   also kill the unit test process.\n2. Accessing global state such as `os.Args`, `os.Stdin` and `os.Stdout`. It is\n   hard to mock out global state cleanly and safely.\n   \n**Do not use `pkg/testutil` it is deprecated. Instead go with the following:**\n\nThe guideline for testing is to factor out everything \"difficult\" into a\ntwo-line `main` function which remain untested. For example:\n\n```\nfunc run(args []string, stdin io.Reader, stdout io.Writer) error {\n\t...\n}\n\nfunc main() {\n\tif err := run(os.Args[1:], os.Stdin, os.Stdout); err != nil {\n\t\tlog.Fatalf(\"Error: %v\", err)\n\t}\n}\n```\n\n### Integration Tests\nTo test integration with other code/packages without mocking, write integration test in a file `integration_test.go`.\n\n## Code Reviews\n\nLook at the area of code you're modifying, its history, and consider\ntagging some of the [maintainers](https://u-root.tk/#contributors) when doing a\npull request in order to instigate some code review.\n\n## Quality Controls\n\n[CircleCI](https://circleci.com/gh/u-root/u-root) is used to test and build commits in a pull request.\n\nSee [.circleci/config.yml](.circleci/config.yml) for the CI commands run.\nYou can use [CircleCI's CLI tool](https://circleci.com/docs/2.0/local-cli/#run-a-job-in-a-container-on-your-machine) to run individual jobs from `.circlecl/config.yml` via Docker, eg. `circleci build --job test`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4833984375,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2012-2019, u-root Authors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.1982421875,
          "content": "# Maintainers should review changes promptly (within 1 month).\n# Github will auto-assign the below maintainers to a pull request.\n\n\"cmds/exp/pox/**\":\n  - rminnich\n\n\"cmds/fwtools/spidev/**\":\n  - rjoleary\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.958984375,
          "content": "# u-root\n\n[![Build Status](https://circleci.com/gh/u-root/u-root/tree/main.png?style=shield)](https://circleci.com/gh/u-root/u-root/tree/main)\n[![codecov](https://codecov.io/gh/u-root/u-root/branch/main/graph/badge.svg?token=1qjHT02oCB)](https://codecov.io/gh/u-root/u-root)\n[![Go Report Card](https://goreportcard.com/badge/github.com/u-root/u-root)](https://goreportcard.com/report/github.com/u-root/u-root)\n[![CodeQL](https://github.com/u-root/u-root/workflows/CodeQL/badge.svg)](https://github.com/u-root/u-root/actions?query=workflow%3ACodeQL)\n[![GoDoc](https://godoc.org/github.com/u-root/u-root?status.svg)](https://godoc.org/github.com/u-root/u-root)\n[![Slack](https://slack.osfw.dev/badge.svg)](https://slack.osfw.dev)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/u-root/u-root/blob/main/LICENSE)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8160/badge)](https://www.bestpractices.dev/projects/8160)\n\n\n# Description\n\nu-root embodies four different projects.\n\n*   Go versions of many standard Linux tools, such as [ls](cmds/core/ls/ls.go),\n    [cp](cmds/core/cp/cp.go), or [shutdown](cmds/core/shutdown/shutdown_linux.go). See\n    [cmds/core](cmds/core) for most of these.\n\n*   A way to compile many Go programs into a single binary with\n    [busybox mode](#build-modes).\n\n*   A way to create initramfs (an archive of files) to use with Linux kernels,\n    [embeddable into firmware](#build-an-embeddable-u-root).\n\n*   Go [bootloaders](#systemboot) that use `kexec` to boot Linux or multiboot\n    kernels such as ESXi, Xen, or tboot. They are meant to be used with\n    [LinuxBoot](https://www.linuxboot.org).\n\n# Usage\n\nMake sure your Go version is >= 1.21.\n\nDownload and install u-root either via git:\n\n```shell\ngit clone https://github.com/u-root/u-root\ncd u-root\ngo install\n```\n\nOr install directly with go:\n\n```shell\ngo install github.com/u-root/u-root@latest\n```\n\n> [!NOTE]\n> The `u-root` command will end up in `$GOPATH/bin/u-root`, so you may\n> need to add `$GOPATH/bin` to your `$PATH`.\n\n# Examples\n\nHere are some examples of using the `u-root` command to build an initramfs.\n\n```shell\ngit clone https://github.com/u-root/u-root\ncd u-root\n\n# Build an initramfs of all the Go cmds in ./cmds/core/... (default)\nu-root\n\n# Generate an archive with bootloaders\n#\n# core and boot are templates that expand to sets of commands\nu-root core boot\n\n# Generate an archive with only these given commands\nu-root ./cmds/core/{init,ls,ip,dhclient,wget,cat,gosh}\n\n# Generate an archive with all of the core tools with some exceptions\nu-root core -cmds/core/{ls,losetup}\n```\n\n> [!IMPORTANT]\n>\n> `u-root` works exactly when `go build` and `go list` work as well.\n\n> [!NOTE]\n>\n> The `u-root` tool is the same as the\n> [mkuimage](https://github.com/u-root/mkuimage) tool with some defaults\n> applied.\n>\n> In the near future, `uimage` will replace `u-root`.\n\n> [!TIP]\n>\n> To just build Go busybox binaries, try out\n> [gobusybox](https://github.com/u-root/gobusybox)'s `makebb` tool.\n\n## Multi-module workspace builds\n\nThere are several ways to build multi-module command images using standard Go\ntooling.\n\n```shell\n$ mkdir workspace\n$ cd workspace\n$ git clone https://github.com/u-root/u-root\n$ git clone https://github.com/u-root/cpu\n\n$ go work init ./u-root\n$ go work use ./cpu\n\n$ u-root ./u-root/cmds/core/{init,gosh} ./cpu/cmds/cpud\n\n$ cpio -ivt < /tmp/initramfs.linux_amd64.cpio\n...\n-rwxr-x---   0 root     root      6365184 Jan  1  1970 bbin/bb\nlrwxrwxrwx   0 root     root            2 Jan  1  1970 bbin/cpud -> bb\nlrwxrwxrwx   0 root     root            2 Jan  1  1970 bbin/gosh -> bb\nlrwxrwxrwx   0 root     root            2 Jan  1  1970 bbin/init -> bb\n...\n\n# Works for offline vendored builds as well.\n$ go work vendor # Go 1.22 feature.\n\n$ u-root ./u-root/cmds/core/{init,gosh} ./cpu/cmds/cpud\n```\n\nWhen creating a new Go workspace is too much work, the `goanywhere` tool can\ncreate one on the fly. This works **only with local file system paths**:\n\n```shell\n$ go install github.com/u-root/gobusybox/src/cmd/goanywhere@latest\n\n$ goanywhere ./u-root/cmds/core/{init,gosh} ./cpu/cmds/cpud -- u-root\n```\n\n`goanywhere` creates a workspace in a temporary directory with the given\nmodules, and then execs `u-root` in the workspace passing along the command\nnames.\n\n> [!TIP]\n>\n> While workspaces are good for local compilation, they are not meant to be\n> checked in to version control systems.\n>\n> For a non-workspace way of building multi-module initramfs images, read more\n> in the [mkuimage README](https://github.com/u-root/mkuimage). (The `u-root`\n> tool is `mkuimage` with more defaults applied.)\n\n## Extra Files\n\nYou may also include additional files in the initramfs using the `-files` flag.\n\nIf you add binaries with `-files` are listed, their ldd dependencies will be\nincluded as well.\n\n```shell\n$ u-root -files /bin/bash\n\n$ cpio -ivt < /tmp/initramfs.linux_amd64.cpio\n...\n-rwxr-xr-x   0 root     root      1277936 Jan  1  1970 bin/bash\n...\ndrwxr-xr-x   0 root     root            0 Jan  1  1970 lib/x86_64-linux-gnu\n-rwxr-xr-x   0 root     root       210792 Jan  1  1970 lib/x86_64-linux-gnu/ld-linux-x86-64.so.2\n-rwxr-xr-x   0 root     root      1926256 Jan  1  1970 lib/x86_64-linux-gnu/libc.so.6\nlrwxrwxrwx   0 root     root           15 Jan  1  1970 lib/x86_64-linux-gnu/libtinfo.so.6 -> libtinfo.so.6.4\n-rw-r--r--   0 root     root       216368 Jan  1  1970 lib/x86_64-linux-gnu/libtinfo.so.6.4\ndrwxr-xr-x   0 root     root            0 Jan  1  1970 lib64\nlrwxrwxrwx   0 root     root           42 Jan  1  1970 lib64/ld-linux-x86-64.so.2 -> /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2\n...\n```\n\nYou can determine placement with colons:\n\n```shell\n$ u-root -files \"/bin/bash:sbin/sh\"\n\n$ cpio -ivt < /tmp/initramfs.linux_amd64.cpio\n...\n-rwxr-xr-x   0 root     root      1277936 Jan  1  1970 sbin/sh\n...\n```\n\nFor example on Debian, if you want to add two kernel modules for testing,\nexecuting your currently booted kernel:\n\n```shell\n$ u-root -files \"$HOME/hello.ko:etc/hello.ko\" -files \"$HOME/hello2.ko:etc/hello2.ko\"\n$ qemu-system-x86_64 -kernel /boot/vmlinuz-$(uname -r) -initrd /tmp/initramfs.linux_amd64.cpio\n```\n\n## Init and Uinit\n\nu-root has a very simple (exchangable) init system controlled by the `-initcmd`\nand `-uinitcmd` command-line flags.\n\n*   `-initcmd` determines what `/init` is symlinked to. `-initcmd` may be a\n    u-root command name or a symlink target.\n\n*   `-uinitcmd` is run by the default u-root [init](cmds/core/init) after some\n    basic file system setup. There is no default, users should optionally supply\n    their own. `-uinitcmd` may be a u-root command name with arguments or a\n    symlink target with arguments.\n\n*   After running a uinit (if there is one), [init](cmds/core/init) will start a\n    shell determined by the `-defaultsh` argument.\n\nWe expect most users to keep their `-initcmd` as [init](cmds/core/init), but to\nsupply their own uinit for additional initialization or to immediately load\nanother operating system.\n\nAll three command-line args accept both a u-root command name or a target\nsymlink path. **Only `-uinitcmd` accepts command-line arguments, however.** For\nexample,\n\n```bash\nu-root -uinitcmd=\"echo Go Gopher\" ./cmds/core/{init,echo,gosh}\n\ncpio -ivt < /tmp/initramfs.linux_amd64.cpio\n# ...\n# lrwxrwxrwx   0 root     root           12 Dec 31  1969 bin/uinit -> ../bbin/echo\n# lrwxrwxrwx   0 root     root            9 Dec 31  1969 init -> bbin/init\n\nqemu-system-x86_64 -kernel $KERNEL -initrd /tmp/initramfs.linux_amd64.cpio -nographic -append \"console=ttyS0\"\n# ...\n# [    0.848021] Freeing unused kernel memory: 896K\n# 2020/05/01 04:04:39 Welcome to u-root!\n#                              _\n#   _   _      _ __ ___   ___ | |_\n#  | | | |____| '__/ _ \\ / _ \\| __|\n#  | |_| |____| | | (_) | (_) | |_\n#   \\__,_|    |_|  \\___/ \\___/ \\__|\n#\n# Go Gopher\n# ~/>\n```\n\nPassing command line arguments like above is equivalent to passing the arguments\nto uinit via a flags file in `/etc/uinit.flags`, see [Extra Files](#extra-files).\n\nAdditionally, you can pass arguments to uinit via the `uroot.uinitargs` kernel\nparameters, for example:\n\n```bash\nu-root -uinitcmd=\"echo Gopher\" ./cmds/core/{init,echo,gosh}\n\ncpio -ivt < /tmp/initramfs.linux_amd64.cpio\n# ...\n# lrwxrwxrwx   0 root     root           12 Dec 31  1969 bin/uinit -> ../bbin/echo\n# lrwxrwxrwx   0 root     root            9 Dec 31  1969 init -> bbin/init\n\nqemu-system-x86_64 -kernel $KERNEL -initrd /tmp/initramfs.linux_amd64.cpio -nographic -append \"console=ttyS0 uroot.uinitargs=Go\"\n# ...\n# [    0.848021] Freeing unused kernel memory: 896K\n# 2020/05/01 04:04:39 Welcome to u-root!\n#                              _\n#   _   _      _ __ ___   ___ | |_\n#  | | | |____| '__/ _ \\ / _ \\| __|\n#  | |_| |____| | | (_) | (_) | |_\n#   \\__,_|    |_|  \\___/ \\___/ \\__|\n#\n# Go Gopher\n# ~/>\n```\n\nNote the order of the passed arguments in the above example.\n\nThe command you name must be present in the command set. The following will *not\nwork*:\n\n```bash\nu-root -uinitcmd=\"echo Go Gopher\" ./cmds/core/{init,gosh}\n# 21:05:57 could not create symlink from \"bin/uinit\" to \"echo\": command or path \"echo\" not included in u-root build: specify -uinitcmd=\"\" to ignore this error and build without a uinit\n```\n\nYou can also refer to non-u-root-commands; they will be added as symlinks. We\ndon't presume to know whether your symlink target is correct or not.\n\nThis will build, but not work unless you add a /bin/foobar to the initramfs.\n\n```bash\nu-root -uinitcmd=\"/bin/foobar Go Gopher\" ./cmds/core/{init,gosh}\n```\n\nThis will boot the same as the above.\n\n```bash\nu-root -uinitcmd=\"/bin/foobar Go Gopher\" -files /bin/echo:bin/foobar -files your-hosts-file:/etc/hosts ./cmds/core/{init,gosh}\n```\n\nThe effect of the above command:\n*   Sets up the uinit command to be /bin/foobar, with 2 arguments: Go Gopher\n*   Adds /bin/echo as bin/foobar\n*   Adds your-hosts-file as etc/hosts\n*   builds in the cmds/core/init, and cmds/core/gosh commands.\n\nThis will bypass the regular u-root init and just launch a shell:\n\n```bash\nu-root -initcmd=gosh ./cmds/core/{gosh,ls}\n\ncpio -ivt < /tmp/initramfs.linux_amd64.cpio\n# ...\n# lrwxrwxrwx   0 root     root            9 Dec 31  1969 init -> bbin/gosh\n\nqemu-system-x86_64 -kernel $KERNEL -initrd /tmp/initramfs.linux_amd64.cpio -nographic -append \"console=ttyS0\"\n# ...\n# [    0.848021] Freeing unused kernel memory: 896K\n# failed to put myself in foreground: ioctl: inappropriate ioctl for device\n# ~/>\n```\n\n(It fails to do that because some initialization is missing when the shell is\nstarted without a proper init.)\n\n## Cross Compilation (targeting different architectures and OSes)\n\nCross-OS and -architecture compilation comes for free with Go. In fact, every PR\nto the u-root repo is built against the following architectures: amd64, x86\n(i.e. 32bit), mipsle, armv7, arm64, and ppc64le.\n\nFurther, we run integration tests on linux/amd64, and linux/arm64, using several\nCI systems. If you need to add another CI system, processor or OS, please let us\nknow.\n\nTo cross compile for an ARM, on Linux:\n\n```shell\nGOARCH=arm u-root\n```\n\nIf you are on OSX, and wish to build for Linux on AMD64:\n\n```shell\nGOOS=linux GOARCH=amd64 u-root\n```\n\n## Testing in QEMU\n\nA good way to test the initramfs generated by u-root is with qemu:\n\n```shell\nqemu-system-x86_64 -nographic -kernel path/to/kernel -initrd /tmp/initramfs.linux_amd64.cpio\n```\n\nNote that you do not have to build a special kernel on your own, it is\nsufficient to use an existing one. Usually you can find one in `/boot`.\n\nIf you don't have a kernel handy, you can also get the one we use for VM testing:\n\n```shell\ngo install github.com/hugelgupf/vmtest/tools/runvmtest@latest\n\nrunvmtest -- bash -c \"cp \\$VMTEST_KERNEL ./kernel\"\n```\n\nIt may not have all features you require, however.\n\n### Framebuffer\n\nFor framebuffer support, append a VESA mode via the `vga` kernel parameter:\n\n```shell\nqemu-system-x86_64 \\\n  -kernel path/to/kernel \\\n  -initrd /tmp/initramfs.linux_amd64.cpio \\\n  -append \"vga=786\"\n```\n\nFor a list of modes, refer to the\n[Linux kernel documentation](https://github.com/torvalds/linux/blob/master/Documentation/fb/vesafb.rst#how-to-use-it).\n\n### Entropy / Random Number Generator\n\nSome utilities, e.g., `dhclient`, require entropy to be present. For a speedy\nvirtualized random number generator, the kernel should have the following:\n\n```shell\nCONFIG_VIRTIO_PCI=y\nCONFIG_HW_RANDOM_VIRTIO=y\nCONFIG_CRYPTO_DEV_VIRTIO=y\n```\n\nThen you can run your kernel in QEMU with a `virtio-rng-pci` device:\n\n```shell\nqemu-system-x86_64 \\\n    -device virtio-rng-pci \\\n    -kernel vmlinuz \\\n    -initrd /tmp/initramfs.linux_amd64.cpio\n```\n\nIn addition, you can pass your host's RNG:\n\n```shell\nqemu-system-x86_64 \\\n    -object rng-random,filename=/dev/urandom,id=rng0 \\\n    -device virtio-rng-pci,rng=rng0 \\\n    -kernel vmlinuz \\\n    -initrd /tmp/initramfs.linux_amd64.cpio\n```\n\n## SystemBoot\n\nSystemBoot is a set of bootloaders written in Go. It is meant to be a\ndistribution for LinuxBoot to create a system firmware + bootloader. All of\nthese use `kexec` to boot. The commands are in [cmds/boot](cmds/boot).\nParsers are available for [GRUB](pkg/boot/grub), [syslinux](pkg/boot/syslinux),\nand other config files to make the transition to LinuxBoot easier.\n\n*   `pxeboot`: a network boot client that uses DHCP and HTTP or TFTP to get a\n    boot configuration which can be parsed as PXELinux or iPXE configuration\n    files to get a boot program.\n\n*   `boot`: finds all bootable kernels on local disk, shows a menu, and boots\n    them. Supports (basic) GRUB, (basic) syslinux, (non-EFI) BootLoaderSpec, and\n    ESXi configurations.\n\nMore detailed information about the build process for a full LinuxBoot firmware\nimage using u-root/systemboot and coreboot can be found in the\n[LinuxBoot book](https://book.linuxboot.org) chapter about\n[LinuxBoot using coreboot, u-root and systemboot](https://book.linuxboot.org/coreboot.u-root.systemboot/index.html).\n\nThis project started as a loose collection of programs in u-root by various\nLinuxBoot contributors, as well as a personal experiment by\n[Andrea Barberio](https://github.com/insomniacslk) that has since been merged\nin. It is now an effort of a broader community and graduated to a real project\nfor system firmwares.\n\n## Compression\n\nYou can compress the initramfs. However, for xz compression, the kernel has some\nrestrictions on the compression options and it is suggested to align the file to\n512 byte boundaries:\n\n```shell\nxz --check=crc32 -9 --lzma2=dict=1MiB \\\n   --stdout /tmp/initramfs.linux_amd64.cpio \\\n   | dd conv=sync bs=512 \\\n   of=/tmp/initramfs.linux_amd64.cpio.xz\n```\n\n## Getting Packages of TinyCore\n\nUsing the `tcz` command included in u-root, you can install tinycore linux\npackages for things you want.\n\nYou can use QEMU NAT to allow you to fetch packages. Let's suppose, for example,\nyou want bash. Once u-root is running, you can do this:\n\n```shell\n% tcz bash\n```\n\nThe tcz command computes and fetches all dependencies. If you can't get to\ntinycorelinux.net, or you want package fetching to be faster, you can run your\nown server for tinycore packages.\n\nYou can do this to get a local server using the u-root srvfiles command:\n\n```shell\n% srvfiles -p 80 -d path-to-local-tinycore-packages\n```\n\nOf course you have to fetch all those packages first somehow :-)\n\n## Build an Embeddable u-root\n\nYou can build the cpio image created by u-root into a Linux kernel via the\n`CONFIG_INITRAMFS_SOURCE` config variable or coreboot config variable, and\nfurther embed the kernel image into firmware as a coreboot payload.\n\nIn the kernel and coreboot case, you may need to configure ethernet. We have a\n`dhclient` command that works for both ipv4 and ipv6. Since v6 does not yet work\nthat well for most people, a typical invocation looks like this:\n\n```shell\n% dhclient -ipv4 -ipv6=false\n```\n\nOr, on newer linux kernels (> 4.x) boot with ip=dhcp in the command line,\nassuming your kernel is configured to work that way.\n\n## Build Modes\n\nu-root can create an initramfs in two different modes, specified by `-build`:\n\n*   `gbb` mode: One busybox-like binary comprising all the Go tools you ask to\n    include.\n    See [the gobusybox README for how it works](https://github.com/u-root/gobusybox).\n    In this mode, u-root copies and rewrites the source of the tools you asked\n    to include to be able to compile everything into one busybox-like binary.\n\n*   `binary` mode: each specified binary is compiled separately and all binaries\n    are added to the initramfs.\n\n## Updating Dependencies\n\n```shell\ngo get -u\ngo mod tidy\ngo mod vendor\n```\n\n## Building without network access\n\nThe u-root command supports building with workspace vendoring and module\nvendoring. In both of those cases, if all dependencies are found in the vendored\ndirectories, the build happens completely offline.\n\nRead more in the [mkuimage README](https://github.com/u-root/mkuimage).\n\nu-root also still supports `GO111MODULE=off` builds.\n\n# Hardware\n\nIf you want to see u-root on real hardware, this\n[board](https://www.pcengines.ch/apu2.htm) is a good start.\n\n# Using with Plan 9\nU-root works with Plan 9. The best distro to use for it is 9front, as the\n9front cpiofs works with newc-format cpio (the format of Linux initramfs, which\nu-root generates).\n\nHere is a script for Plan 9. Once this script runs, all the u-root commands\nappear in /bin. You will need to have go1.22 installed on Plan 9; or\ncreate the u-root initramfs on some other system and copy it to Plan 9.\n\n```shell\n#!/bin/rc\nu-root '-defaultsh=' '-initcmd=' '-shellbang=true'\nfs/cpiofs /tmp/initram*cpio\nbind -a /n/tapefs /\nbind -a /bbin /bin\n```\n\n# Contributions\n\nFor information about contributing, including how we sign off commits, please\nsee [CONTRIBUTING.md](CONTRIBUTING.md).\n\nImproving existing commands (e.g., additional currently unsupported flags) is\nvery welcome. In this case it is not even required to build an initramfs, just\nenter the `cmds/` directory and start coding. A list of commands that are on the\nroadmap can be found [here](roadmap.md).\n\n## Website\n\nThe sources of [u-root.org](https://u-root.org) are inside the `docs/` directory and\nare deployed to the gh-pages branch. The CNAME file is currently not part of the CI\nwhich deploys to the branch which shall be evaluated if this makes futures deployments easier.\n"
        },
        {
          "name": "RELEASES",
          "type": "blob",
          "size": 3.8662109375,
          "content": "# Releases\n\nNote: All release >=1.0.0 have been bumped down from vX.0.0 to v0.X.0. This was\ndone to avoid the +incompatible suffix from Go modules. The u-root API is\ncurrently unstable and may change slighly between releases.\n\n## v0.11.0 (2023-02-01)\n\n- Fixes for tamago dt compilation\n- tinygo support for many commands (see \"tinygo\" template)\n- cleanup dt to remove Linux dependencies\n- major cleanup of VM CI code (it works again)\n- fixups for ARM vms\n- many other smaller bug fixes, and cleanup\n\n## v0.10.0 (2022-10-10)\n\n- Fixes for several commands including bzImage and ls\n- Code coverage at 74%\n\n## v0.9.0 (2022-07-27)\n\n- Fixes for CVE-2020-7669, CVE-2020-7666 and CVE-2020-7665\n- Numerous other bug fixes and features\n\n## v0.8.0 (2021-11-29)\n\n*no release notes available*\n\n## v0.7.0, formerly v7.0.0 (2020-08-30)\n\n*no release notes available*\n\n## v0.6.0, formerly v6.0.0 (2019-08-14)\n\n- Bug fixes:\n  - Ensure that cpio does not create corrupt archives\n  - Honor build tags in build.Context\n  - Fix negative -retry flag\n- New packages:\n  - gpio\n- Testing improvements:\n  - Use 9pfs to share files with intergration test instead of vfat\n  - Replace ANSI escape codes with ~ character\n  - Run integration tests on pkg/ as well\n- checklicenses command is generalized to be used by other projects.\n- Tested with:\n  - Linux 4.17\n  - Golang 1.12\n\n## v0.5.0, formerly V5.0.0 (2019-07-09)\n\n- Renamed commands\n  - core commands are in core\n  - experimental commands are in exp\n  - others are in other places\n- Remove NiChromne\n  - it needed its own space\n- Welcome systemboot!\n\n## v0.4.0, formerly v4.0.0 (2019-01-26)\n\n- Multiboot as a kexec target -- Thank you Max!\n  - Use with kexec, also see the new module argument\n  - Experimental support for esxi, see xcmds/esxiboot\n  - Integration tests for multiboot\n    - Using the test kernel at: github.com/u-root/multiboot-test-kernel\n  - Trampoline is written in Go assembly\n  - Support for gzipped kernels\n- New commands:\n  - tac: Reads file lines in reverse order\n  - xcmds/sshd: Like sshd, but supports port forwarding\n- New packages:\n  - forth: An interpreter for Forth\n  - ubinary: Gives machine's native endianness\n- New flags:\n  - grep -c : Print counts\n  - grep -i : Case insensitive search\n  - uname -p : Alias for machine\n- Improved arm support:\n  - io command supports arm Linux kernels\n  - zImage parser for kernel format\n  - Basic integration tests and minimal config\n- Miscellaneous improvements:\n  - Consolidation of similar circleci tests into a single uroot_test.go which\n    can be run with \"go test\"\n  - Integration test for tcz\n  - configs are organized into a new directory\n- Fixes:\n  - pkg/complete and xcmds/ash: now works in a sane way\n  - Append rsdp onto kernel command line\n  - A number of fixes to various symlink issues\n- Tested with:\n  - Linux 4.17\n  - Golang 1.11\n\n## v0.3.0, formerly v3.0.0 (2018-11-21)\n\n- Reduced size of shell by 20%\n- Improved QEMU-based integration tests\n- New commands:\n  - strace: simple process tracer\n- Major bug fixes\n  - Imports use correct vendored dependencies (u-bmc)\n  - u-root command correctly interprets symlinks\n- Tested with:\n  - Linux 4.17\n  - Golang 1.11\n\n## v0.2.0, formerly v2.0.0 (2018-10-01)\n\n- Large improvements to readability of GoDocs\n- New commands:\n  - cksum: generates md5, sha and crc checksums\n  - elvish: forked from github.com/elves/elvish\n  - less: pages files, courtesy of Michael Pratt\n  - more: simplistic implementation of less\n  - pox: builds a POrtable eXecutable as a squashfs image\n- Breaking changes:\n  - rush is moved to xcmds and elvish is the default shell\n  - bzImage renamed to bzimage\n  - time_sos renamed to timesos\n  - upspin_sos renamed to upspinsos\n- Major bug fixes\n  - u-root command expands wildcards properly\n  - scp now compliant with openssh's scp\n- Tested with:\n  - Linux 4.17\n  - Golang 1.11\n\n## v0.1.0, formerly v1.0.0 (2018-08-15)\n\n- Initial release\n- Tested with:\n  - Linux 4.17\n  - Golang 1.10.3\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2763671875,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.9.0   | :white_check_mark: |\n| < 0.9.0 | :x:                |\n\n## Reporting a Vulnerability\n\nReport vulnerability with github issues, or contact authors on osfw.slack.com\n"
        },
        {
          "name": "cmds",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.5615234375,
          "content": "parsers:\n  go:\n    partials_as_hits: true #false by default\n\ncomment:\n  layout: \"header, diff, flags, components\"  # show component info in the PR comment\n\ncomponent_management:\n  default_rules:\n    statuses:\n      - type: project\n        target: auto\n      - type: patch\n  individual_components:\n    - component_id: nonexp\n      name: everything\n      paths:\n        - cmds/core/**\n        - cmds/boot/**\n        - cmds/contrib/**\n        - cmds/fwtools/**\n        - pkg/**\n        - u-root.go\n    - component_id: exp\n      name: cmds/exp\n      paths:\n        - cmds/exp/**\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies.go",
          "type": "blob",
          "size": 0.6162109375,
          "content": "// Copyright 2023 the u-root Authors. All rights reserved\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n//go:build tools\n\npackage main\n\n// List vmtest commands that need to be in go.mod & go.sum to be buildable as\n// dependencies. This way, they aren't eliminated by `go mod tidy`.\n//\n// But obviously aren't actually importable, since they are main packages.\nimport (\n\t_ \"github.com/hugelgupf/vmtest/vminit/gouinit\"\n\t_ \"github.com/hugelgupf/vmtest/vminit/shelluinit\"\n\t_ \"github.com/hugelgupf/vmtest/vminit/shutdownafter\"\n\t_ \"github.com/hugelgupf/vmtest/vminit/vmmount\"\n)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 5.07421875,
          "content": "module github.com/u-root/u-root\n\ngo 1.22.0\n\ntoolchain go1.22.6\n\nrequire (\n\tgithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4\n\tgithub.com/beevik/ntp v0.3.0\n\tgithub.com/bobuhiro11/gokvm v0.0.8-0.20231003020000-f53faca69d28\n\tgithub.com/cenkalti/backoff/v4 v4.1.3\n\tgithub.com/creack/pty v1.1.24\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/florianl/go-tc v0.4.5-0.20240822175159-7926c32f7299\n\tgithub.com/gliderlabs/ssh v0.1.2-0.20181113160402-cbabf5414432\n\tgithub.com/gojuno/minimock/v3 v3.0.8\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-tpm v0.9.2-0.20240919181259-d96ccf715685\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/gopacket/gopacket v1.2.0\n\tgithub.com/hugelgupf/vmtest v0.0.0-20240228002643-de15f4612e10\n\tgithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2\n\tgithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2\n\tgithub.com/kevinburke/ssh_config v1.1.0\n\tgithub.com/klauspost/compress v1.17.4\n\tgithub.com/klauspost/pgzip v1.2.6\n\tgithub.com/knz/bubbline v0.0.0-20230717192058-486954f9953f\n\tgithub.com/mdlayher/vsock v1.2.1\n\tgithub.com/nanmu42/limitio v1.0.0\n\tgithub.com/orangecms/go-framebuffer v0.0.0-20200613202404-a0700d90c330\n\tgithub.com/packetcap/go-pcap v0.0.0-20240528124601-8c87ecf5dbc5\n\tgithub.com/peterh/liner v1.2.2\n\tgithub.com/pierrec/lz4/v4 v4.1.14\n\tgithub.com/rck/unit v0.0.3\n\tgithub.com/rekby/gpt v0.0.0-20200219180433-a930afbc6edc\n\tgithub.com/safchain/ethtool v0.0.0-20200218184317-f459e2d13664\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/tklauser/go-sysconf v0.3.14\n\tgithub.com/u-root/iscsinl v0.1.1-0.20210528121423-84c32645822a\n\tgithub.com/u-root/mkuimage v0.0.0-20241128172401-dc7520ecaa89\n\tgithub.com/u-root/uio v0.0.0-20240209044354-b3d14b93376a\n\tgithub.com/ulikunitz/xz v0.5.11\n\tgithub.com/vishvananda/netlink v1.3.0\n\tgithub.com/vishvananda/netns v0.0.4\n\tgithub.com/vtolstov/go-ioctl v0.0.0-20151206205506-6be9cced4810\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240222234643-814bf88cf225\n\tgolang.org/x/net v0.31.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/term v0.27.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/tools v0.27.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tmvdan.cc/sh/v3 v3.10.1-0.20241129174306-6042a7fe4e04\n\tpack.ag/tftp v1.0.1-0.20181129014014-07909dfbde3c\n)\n\nrequire (\n\tgithub.com/jaypipes/ghw v0.12.0\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/u-root/cpuid v0.0.0\n\tgithub.com/u-root/gobusybox/src v0.0.0-20250101170133-2e884e4509c7\n\tgo.bug.st/serial v1.6.2\n)\n\nrequire (\n\tgithub.com/StackExchange/wmi v1.2.1 // indirect\n\tgithub.com/creack/goselect v0.1.2 // indirect\n\tgithub.com/ghodss/yaml v1.0.0 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/jaypipes/pcidb v1.0.0 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\thowett.net/plist v1.0.0 // indirect\n)\n\nrequire (\n\tgithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be // indirect\n\tgithub.com/atotto/clipboard v0.1.4 // indirect\n\tgithub.com/aymanbagabas/go-osc52/v2 v2.0.1 // indirect\n\tgithub.com/charmbracelet/bubbles v0.15.1-0.20230123181021-a6a12c4a31eb // indirect\n\tgithub.com/charmbracelet/bubbletea v0.24.1 // indirect\n\tgithub.com/charmbracelet/lipgloss v0.7.1 // indirect\n\tgithub.com/cloudflare/circl v1.3.7 // indirect\n\tgithub.com/containerd/console v1.0.4-0.20230706203907-8f6c4e4faef5 // indirect\n\tgithub.com/hugelgupf/go-shlex v0.0.0-20200702092117-c80c9d0918fa // indirect\n\tgithub.com/josharian/native v1.1.0 // indirect\n\tgithub.com/jsimonetti/rtnetlink v1.3.5 // indirect\n\tgithub.com/kaey/framebuffer v0.0.0-20140402104929-7b385489a1ff // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-localereader v0.0.1 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.14 // indirect\n\tgithub.com/mdlayher/netlink v1.7.2 // indirect\n\tgithub.com/mdlayher/packet v1.1.2 // indirect\n\tgithub.com/mdlayher/socket v0.5.1 // indirect\n\tgithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 // indirect\n\tgithub.com/muesli/cancelreader v0.2.2 // indirect\n\tgithub.com/muesli/reflow v0.3.0 // indirect\n\tgithub.com/muesli/termenv v0.15.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgithub.com/sahilm/fuzzy v0.1.0 // indirect\n\tgithub.com/therootcompany/xz v1.0.1\n\tgithub.com/tklauser/numcpus v0.8.0 // indirect\n\tgolang.org/x/arch v0.2.0 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/sync v0.10.0\n\tgopkg.in/yaml.v3 v3.0.0 // indirect\n)\n\nretract (\n\t// Published v7 too early (before migrating to go modules)\n\tv7.0.0+incompatible\n\t// Published v6 too early (before migrating to go modules)\n\tv6.0.0+incompatible\n\t// Published v5 too early (before migrating to go modules)\n\tv5.0.0+incompatible\n\t// Published v4 too early (before migrating to go modules)\n\tv4.0.0+incompatible\n\t// Published v3 too early (before migrating to go modules)\n\tv3.0.0+incompatible\n\t// Published v2 too early (before migrating to go modules)\n\tv2.0.0+incompatible\n\t// Published v1 too early (before migrating to go modules)\n\t[v1.0.0, v1.0.1]\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 42.3271484375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2 h1:+vx7roKuyA63nhn5WAunQHLTznkw5W8b1Xc0dNjp83s=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2/go.mod h1:HBCaDeC1lPdgDeDbhX8XFpy1jqjK0IBG8W5K+xYqA0w=\ngithub.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4 h1:ra2OtmuW0AE5csawV4YXMNGNQQXvLRps3z2Z59OPO+I=\ngithub.com/ProtonMail/go-crypto v0.0.0-20221026131551-cf6655e29de4/go.mod h1:UBYPn8k0D56RtnR8RFQMjmh4KrZzWJ5o7Z9SYjossQ8=\ngithub.com/StackExchange/wmi v1.2.1 h1:VIkavFPXSjcnS+O8yTq7NI32k0R5Aj+v39y29VYDOSA=\ngithub.com/StackExchange/wmi v1.2.1/go.mod h1:rcmrprowKIVzvc+NUiLncP2uuArMWLCbu9SBzvHz7e8=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/aymanbagabas/go-osc52 v1.0.3/go.mod h1:zT8H+Rk4VSabYN90pWyugflM3ZhpTZNC7cASDfUCdT4=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1 h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1/go.mod h1:uYgXzlJ7ZpABp8OJ+exZzJJhRNQ2ASbcXHWsFqH8hp8=\ngithub.com/beevik/ntp v0.3.0 h1:xzVrPrE4ziasFXgBVBZJDP0Wg/KpMwk2KHJ4Ba8GrDw=\ngithub.com/beevik/ntp v0.3.0/go.mod h1:hIHWr+l3+/clUnF44zdK+CWW7fO8dR5cIylAQ76NRpg=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/bobuhiro11/gokvm v0.0.8-0.20231003020000-f53faca69d28 h1:pO0VjeSk0Tcd0NIHxgD6Gyd8T0pw79hs6Usr2Cwr16M=\ngithub.com/bobuhiro11/gokvm v0.0.8-0.20231003020000-f53faca69d28/go.mod h1:xQjzvEq5CXolwHJyswTQXuGXNjF3bYavvXZXDZS+FTI=\ngithub.com/bwesterb/go-ristretto v1.2.0/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cenkalti/backoff/v4 v4.1.3 h1:cFAlzYUlVYDysBEH2T5hyJZMh3+5+WCBvSnK6Q8UtC4=\ngithub.com/cenkalti/backoff/v4 v4.1.3/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/charmbracelet/bubbles v0.13.0/go.mod h1:bbeTiXwPww4M031aGi8UK2HT9RDWoiNibae+1yCMtcc=\ngithub.com/charmbracelet/bubbles v0.15.1-0.20230123181021-a6a12c4a31eb h1:OYmHuDqyuzWwiurw7eeYJ2482BENoX3hScpzamwF5K8=\ngithub.com/charmbracelet/bubbles v0.15.1-0.20230123181021-a6a12c4a31eb/go.mod h1:Y7gSFbBzlMpUDR/XM9MhZI374Q+1p1kluf1uLl8iK74=\ngithub.com/charmbracelet/bubbletea v0.21.0/go.mod h1:GgmJMec61d08zXsOhqRC/AiOx4K4pmz+VIcRIm1FKr4=\ngithub.com/charmbracelet/bubbletea v0.22.2-0.20220830200705-989d49f3e69f/go.mod h1:8/7hVvbPN6ZZPkczLiB8YpLkLJ0n7DMho5Wvfd2X1C0=\ngithub.com/charmbracelet/bubbletea v0.23.1/go.mod h1:JAfGK/3/pPKHTnAS8JIE2u9f61BjWTQY57RbT25aMXU=\ngithub.com/charmbracelet/bubbletea v0.24.1 h1:LpdYfnu+Qc6XtvMz6d/6rRY71yttHTP5HtrjMgWvixc=\ngithub.com/charmbracelet/bubbletea v0.24.1/go.mod h1:rK3g/2+T8vOSEkNHvtq40umJpeVYDn6bLaqbgzhL/hg=\ngithub.com/charmbracelet/harmonica v0.2.0/go.mod h1:KSri/1RMQOZLbw7AHqgcBycp8pgJnQMYYT8QZRqZ1Ao=\ngithub.com/charmbracelet/lipgloss v0.5.0/go.mod h1:EZLha/HbzEt7cYqdFPovlqy5FZPj0xFhg5SaqxScmgs=\ngithub.com/charmbracelet/lipgloss v0.6.0/go.mod h1:tHh2wr34xcHjC2HCXIlGSG1jaDF0S0atAUvBMP6Ppuk=\ngithub.com/charmbracelet/lipgloss v0.7.1 h1:17WMwi7N1b1rVWOjMT+rCh7sQkvDU75B2hbZpc5Kc1E=\ngithub.com/charmbracelet/lipgloss v0.7.1/go.mod h1:yG0k3giv8Qj8edTCbbg6AlQ5e8KNWpFujkNawKNhE2c=\ngithub.com/cilium/ebpf v0.5.0/go.mod h1:4tRaxcgiL706VnOzHOdBlY8IEAIdxINsQBcU4xJJXRs=\ngithub.com/cilium/ebpf v0.7.0/go.mod h1:/oI2+1shJiTGAMgl6/RgJr36Eo1jzrRcAWbcXO2usCA=\ngithub.com/cilium/ebpf v0.8.1/go.mod h1:f5zLIM0FSNuAkSyLAN7X+Hy6yznlF1mNiWUMfxMtrgk=\ngithub.com/cilium/ebpf v0.11.0 h1:V8gS/bTCCjX9uUnkUFUpPsksM8n1lXBAvHcpiFk1X2Y=\ngithub.com/cilium/ebpf v0.11.0/go.mod h1:WE7CZAnqOL2RouJ4f1uyNhqr2P4CCvXFIqdRDUgWsVs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/circl v1.1.0/go.mod h1:prBCrKB9DV4poKZY1l9zBXg2QJY7mvgRvtMxxK7fi4I=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/cockroachdb/datadriven v1.0.2 h1:H9MtNqVoVhvd9nCBwOyDjUEdZCREqbIdCJD93PBm/jA=\ngithub.com/cockroachdb/datadriven v1.0.2/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=\ngithub.com/containerd/console v1.0.3/go.mod h1:7LqA/THxQ86k76b8c/EMSiaJ3h1eZkMkXar0TQ1gf3U=\ngithub.com/containerd/console v1.0.4-0.20230706203907-8f6c4e4faef5 h1:Ig+OPkE3XQrrl+SKsOqAjlkrBN/zrr+Qpw7rCuDjRCE=\ngithub.com/containerd/console v1.0.4-0.20230706203907-8f6c4e4faef5/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/creack/goselect v0.1.2 h1:2DNy14+JPjRBgPzAd1thbQp4BSIihxcBf0IXhQXDRa0=\ngithub.com/creack/goselect v0.1.2/go.mod h1:a/NhLweNvqIYMuxcMOuWY516Cimucms3DglDzQP3hKY=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.17/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/creack/pty v1.1.24 h1:bJrF4RRfyJnbTJqzRLHzcGaZK1NeM5kTC9jGgovnR1s=\ngithub.com/creack/pty v1.1.24/go.mod h1:08sCNb52WyoAwi2QDyzUCTgcvVFhUzewun7wtTfvcwE=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/florianl/go-tc v0.4.5-0.20240822175159-7926c32f7299 h1:PRcfdBViCE9TtcrT3ZYF2faIPI7zL5PnthlOcsOjbYg=\ngithub.com/florianl/go-tc v0.4.5-0.20240822175159-7926c32f7299/go.mod h1:uvp6pIlOw7Z8hhfnT5M4+V1hHVgZWRZwwMS8Z0JsRxc=\ngithub.com/frankban/quicktest v1.11.3/go.mod h1:wRf/ReqHper53s+kmmSZizM8NamnL3IM0I9ntUbOk+k=\ngithub.com/frankban/quicktest v1.14.0/go.mod h1:NeW+ay9A/U67EYXNFA1nPE8e/tnQv/09mUdL/ijj8og=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/gliderlabs/ssh v0.1.2-0.20181113160402-cbabf5414432 h1:DGWE1Z/9om1Ny/BvHHIQB81DOzm95VUkTzwmtGtVzK0=\ngithub.com/gliderlabs/ssh v0.1.2-0.20181113160402-cbabf5414432/go.mod h1:U7qILu1NlMHj9FlMhZLlkCdDnU1DBEAqr0aevW3Awn0=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-ole/go-ole v1.2.5/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gojuno/minimock/v3 v3.0.4/go.mod h1:HqeqnwV8mAABn3pO5hqF+RE7gjA0jsN8cbbSogoGrzI=\ngithub.com/gojuno/minimock/v3 v3.0.8 h1:+L+WvGoTvPB4YCbkMI5WFyp3Mvz6Z5ubBuTXWMhmwmA=\ngithub.com/gojuno/minimock/v3 v3.0.8/go.mod h1:TPKxc8tiB8O83YH2//pOzxvEjaI3TMhd6ev/GmlMiYA=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-tpm v0.9.2-0.20240919181259-d96ccf715685 h1:qw848zQ6u6AHBJMisaNVESB45t5BVtbk40LMJVO1/jc=\ngithub.com/google/go-tpm v0.9.2-0.20240919181259-d96ccf715685/go.mod h1:h9jEsEECg7gtLis0upRBQU+GhYVH6jMjrFxI8u6bVUY=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gopacket/gopacket v1.2.0 h1:eXbzFad7f73P1n2EJHQlsKuvIMJjVXK5tXoSca78I3A=\ngithub.com/gopacket/gopacket v1.2.0/go.mod h1:BrAKEy5EOGQ76LSqh7DMAr7z0NNPdczWm2GxCG7+I8M=\ngithub.com/hexdigest/gowrap v1.1.7/go.mod h1:Z+nBFUDLa01iaNM+/jzoOA1JJ7sm51rnYFauKFUB5fs=\ngithub.com/hexdigest/gowrap v1.1.8/go.mod h1:H/JiFmQMp//tedlV8qt2xBdGzmne6bpbaSuiHmygnMw=\ngithub.com/hugelgupf/go-shlex v0.0.0-20200702092117-c80c9d0918fa h1:s3KPo0nThtvjEamF/aElD4k5jSsBHew3/sgNTnth+2M=\ngithub.com/hugelgupf/go-shlex v0.0.0-20200702092117-c80c9d0918fa/go.mod h1:I1uW6ymzwsy5TlQgD1bFAghdMgBYqH1qtCeHoZgHMqs=\ngithub.com/hugelgupf/socketpair v0.0.0-20190730060125-05d35a94e714 h1:/jC7qQFrv8CrSJVmaolDVOxTfS9kc36uB6H40kdbQq8=\ngithub.com/hugelgupf/socketpair v0.0.0-20190730060125-05d35a94e714/go.mod h1:2Goc3h8EklBH5mspfHFxBnEoURQCGzQQH1ga9Myjvis=\ngithub.com/hugelgupf/vmtest v0.0.0-20240228002643-de15f4612e10 h1:zsELlVQWFbeEuvyfTPwcTaemTdMpWhakdzMLmvkWU5c=\ngithub.com/hugelgupf/vmtest v0.0.0-20240228002643-de15f4612e10/go.mod h1:B63hDJMhTupLWCHwopAyEo7wRFowx9kOc8m8j1sfOqE=\ngithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2 h1:9K06NfxkBh25x56yVhWWlKFE8YpicaSfHwoV8SFbueA=\ngithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2/go.mod h1:3A9PQ1cunSDF/1rbTq99Ts4pVnycWg+vlPkfeD2NLFI=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 h1:i2fYnDurfLlJH8AyyMOnkLHnHeP8Ff/DDpuZA/D3bPo=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2/go.mod h1:co9pwDoBCm1kGxawmb4sPq0cSIOOWNPT4KnHotMP1Zg=\ngithub.com/jaypipes/ghw v0.12.0 h1:xU2/MDJfWmBhJnujHY9qwXQLs3DBsf0/Xa9vECY0Tho=\ngithub.com/jaypipes/ghw v0.12.0/go.mod h1:jeJGbkRB2lL3/gxYzNYzEDETV1ZJ56OKr+CSeSEym+g=\ngithub.com/jaypipes/pcidb v1.0.0 h1:vtZIfkiCUE42oYbJS0TAq9XSfSmcsgo9IdxSm9qzYU8=\ngithub.com/jaypipes/pcidb v1.0.0/go.mod h1:TnYUvqhPBzCKnH34KrIX22kAeEbDCSRJ9cqLRCuNDfk=\ngithub.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\ngithub.com/josharian/native v0.0.0-20200817173448-b6b71def0850/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/josharian/native v1.0.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20190606172950-9527aa82566a/go.mod h1:Oz+70psSo5OFh8DBl0Zv2ACw7Esh6pPUphlvZG9x7uw=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20200117123717-f846d4f6c1f4/go.mod h1:WGuG/smIU4J/54PblvSbh+xvCZmpJnFgr3ds6Z55XMQ=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20201009170750-9c6f07d100c1/go.mod h1:hqoO/u39cqLeBLebZ8fWdE96O7FxrAsRYhnVOdgHxok=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20201216134343-bde56ed16391/go.mod h1:cR77jAZG3Y3bsb8hF6fHJbFoyFukLFOkQ98S0pQz3xw=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20201220180245-69540ac93943/go.mod h1:z4c53zj6Eex712ROyh8WI0ihysb5j2ROyV42iNogmAs=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20210122163228-8d122574c736/go.mod h1:ZXpIyOK59ZnN7J0BV99cZUPmsqDRZ3eq5X+st7u/oSA=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20210212075122-66c871082f2b/go.mod h1:8w9Rh8m+aHZIG69YPGGem1i5VzoyRC8nw2kA8B+ik5U=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20210525051524-4cc836578190/go.mod h1:NmKSdU4VGSiv1bMsdqNALI4RSvvjtz65tTMCnD05qLo=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20211022192332-93da33804786/go.mod h1:v4hqbTdfQngbVSZJVWUhGE/lbTFf9jb+ygmNUDQMuOs=\ngithub.com/jsimonetti/rtnetlink v1.3.5 h1:hVlNQNRlLDGZz31gBPicsG7Q53rnlsz1l1Ix/9XlpVA=\ngithub.com/jsimonetti/rtnetlink v1.3.5/go.mod h1:0LFedyiTkebnd43tE4YAkWGIq9jQphow4CcwxaT2Y00=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kaey/framebuffer v0.0.0-20140402104929-7b385489a1ff h1:eK9dwGbaOkNQ44GPFD571d+51Qa2AGIYAR3kpjsrhLE=\ngithub.com/kaey/framebuffer v0.0.0-20140402104929-7b385489a1ff/go.mod h1:tS4qtlcKqtt3tCIHUflVSqeP3CLH5Qtv2szX9X2SyhU=\ngithub.com/kevinburke/ssh_config v1.1.0 h1:pH/t1WS9NzT8go394IqZeJTMHVm6Cr6ZJ6AQ+mdNo/o=\ngithub.com/kevinburke/ssh_config v1.1.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/klauspost/compress v1.17.4 h1:Ej5ixsIri7BrIjBkRZLTo6ghwrEtHFk7ijlczPW4fZ4=\ngithub.com/klauspost/compress v1.17.4/go.mod h1:/dCuZOvVtNoHsyb+cuJD3itjs3NbnF6KH9zAO4BDxPM=\ngithub.com/klauspost/pgzip v1.2.6 h1:8RXeL5crjEUFnR2/Sn6GJNWtSQ3Dk8pq4CL3jvdDyjU=\ngithub.com/klauspost/pgzip v1.2.6/go.mod h1:Ch1tH69qFZu15pkjo5kYi6mth2Zzwzt50oCQKQE9RUs=\ngithub.com/knz/bubbline v0.0.0-20230717192058-486954f9953f h1:Jjq9RwAsihYCm5fudPBj5CwsLDNd6r1ee3M2mfKFYdI=\ngithub.com/knz/bubbline v0.0.0-20230717192058-486954f9953f/go.mod h1:ucXvyrucVy4jp/4afdKWNW1TVO73GMI72VNINzyT678=\ngithub.com/knz/catwalk v0.1.4 h1:GgCxHbPp+nzyZBJcNL/CJd1aba4ACoeuI1lnsshAPkY=\ngithub.com/knz/catwalk v0.1.4/go.mod h1:Q+Yj4ny4AXgrOOyWyDGY/HJzmbGH8MFnsUqvCAiUT5s=\ngithub.com/knz/lipgloss-convert v0.1.0 h1:qUPUt6r8mqvi9DIV3nBPu3kEmFyHrZtXzv0BlPBPLNQ=\ngithub.com/knz/lipgloss-convert v0.1.0/go.mod h1:S14GmtoiW/VAHqB7xEzuZOt0/G6GQ2dfjJN0fHpm30Q=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-localereader v0.0.1 h1:ygSAOl7ZXTx4RdPYinUpg6W99U8jWvWi9Ye2JC/oIi4=\ngithub.com/mattn/go-localereader v0.0.1/go.mod h1:8fBrzywKY7BI3czFoHkuzRoWE9C+EiG4R1k4Cjx5p88=\ngithub.com/mattn/go-runewidth v0.0.3/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mattn/go-runewidth v0.0.10/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-runewidth v0.0.14 h1:+xnbZSEeDbOIg5/mE6JF0w6n9duR1l3/WmbinWVwUuU=\ngithub.com/mattn/go-runewidth v0.0.14/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mdlayher/ethtool v0.0.0-20210210192532-2b88debcdd43/go.mod h1:+t7E0lkKfbBsebllff1xdTmyJt8lH37niI6kwFk9OTo=\ngithub.com/mdlayher/genetlink v1.0.0/go.mod h1:0rJ0h4itni50A86M2kHcgS85ttZazNt7a8H2a2cw0Gc=\ngithub.com/mdlayher/netlink v0.0.0-20190409211403-11939a169225/go.mod h1:eQB3mZE4aiYnlUsyGGCOpPETfdQq4Jhsgf1fk3cwQaA=\ngithub.com/mdlayher/netlink v1.0.0/go.mod h1:KxeJAFOFLG6AjpyDkQ/iIhxygIUKD+vcwqcnu43w/+M=\ngithub.com/mdlayher/netlink v1.1.0/go.mod h1:H4WCitaheIsdF9yOYu8CFmCgQthAPIWZmcKp9uZHgmY=\ngithub.com/mdlayher/netlink v1.1.1/go.mod h1:WTYpFb/WTvlRJAyKhZL5/uy69TDDpHHu2VZmb2XgV7o=\ngithub.com/mdlayher/netlink v1.2.0/go.mod h1:kwVW1io0AZy9A1E2YYgaD4Cj+C+GPkU6klXCMzIJ9p8=\ngithub.com/mdlayher/netlink v1.2.1/go.mod h1:bacnNlfhqHqqLo4WsYeXSqfyXkInQ9JneWI68v1KwSU=\ngithub.com/mdlayher/netlink v1.2.2-0.20210123213345-5cc92139ae3e/go.mod h1:bacnNlfhqHqqLo4WsYeXSqfyXkInQ9JneWI68v1KwSU=\ngithub.com/mdlayher/netlink v1.3.0/go.mod h1:xK/BssKuwcRXHrtN04UBkwQ6dY9VviGGuriDdoPSWys=\ngithub.com/mdlayher/netlink v1.4.0/go.mod h1:dRJi5IABcZpBD2A3D0Mv/AiX8I9uDEu5oGkAVrekmf8=\ngithub.com/mdlayher/netlink v1.4.1/go.mod h1:e4/KuJ+s8UhfUpO9z00/fDZZmhSrs+oxyqAS9cNgn6Q=\ngithub.com/mdlayher/netlink v1.6.0/go.mod h1:0o3PlBmGst1xve7wQ7j/hwpNaFaH4qCRyWCdcZk8/vA=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/packet v1.1.2 h1:3Up1NG6LZrsgDVn6X4L9Ge/iyRyxFEFD9o6Pr3Q1nQY=\ngithub.com/mdlayher/packet v1.1.2/go.mod h1:GEu1+n9sG5VtiRE4SydOmX5GTwyyYlteZiFU+x0kew4=\ngithub.com/mdlayher/socket v0.0.0-20210307095302-262dc9984e00/go.mod h1:GAFlyu4/XV68LkQKYzKhIo/WW7j3Zi0YRAz/BOoanUc=\ngithub.com/mdlayher/socket v0.1.1/go.mod h1:mYV5YIZAfHh4dzDVzI8x8tWLWCliuX8Mon5Awbj+qDs=\ngithub.com/mdlayher/socket v0.5.1 h1:VZaqt6RkGkt2OE9l3GcC6nZkqD3xKeQLyfleW/uBcos=\ngithub.com/mdlayher/socket v0.5.1/go.mod h1:TjPLHI1UgwEv5J1B5q0zTZq12A/6H7nKmtTanQE37IQ=\ngithub.com/mdlayher/vsock v1.2.1 h1:pC1mTJTvjo1r9n9fbm7S1j04rCgCzhCOS5DY0zqHlnQ=\ngithub.com/mdlayher/vsock v1.2.1/go.mod h1:NRfCibel++DgeMD8z/hP+PPTjlNJsdPOmxcnENvE+SE=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/muesli/ansi v0.0.0-20211018074035-2e021307bc4b/go.mod h1:fQuZ0gauxyBcmsdE3ZT4NasjaRdxmbCS0jRHsrWu3Ho=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 h1:ZK8zHtRHOkbHy6Mmr5D264iyp3TiX5OmNcI5cIARiQI=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6/go.mod h1:CJlz5H+gyd6CUWT45Oy4q24RdLyn7Md9Vj2/ldJBSIo=\ngithub.com/muesli/cancelreader v0.2.0/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=\ngithub.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/reflow v0.2.1-0.20210115123740-9e1d0d53df68/go.mod h1:Xk+z4oIWdQqJzsxyjgl3P22oYZnHdZ8FFTHAQQt5BMQ=\ngithub.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=\ngithub.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=\ngithub.com/muesli/termenv v0.11.1-0.20220204035834-5ac8409525e0/go.mod h1:Bd5NYQ7pd+SrtBSrSNoBBmXlcY8+Xj4BMJgh8qcZrvs=\ngithub.com/muesli/termenv v0.11.1-0.20220212125758-44cd13922739/go.mod h1:Bd5NYQ7pd+SrtBSrSNoBBmXlcY8+Xj4BMJgh8qcZrvs=\ngithub.com/muesli/termenv v0.13.0/go.mod h1:sP1+uffeLaEYpyOTb8pLCUctGcGLnoFjSn4YJK5e2bc=\ngithub.com/muesli/termenv v0.15.1 h1:UzuTb/+hhlBugQz28rpzey4ZuKcZ03MeKsoG7IJZIxs=\ngithub.com/muesli/termenv v0.15.1/go.mod h1:HeAQPTzpfs016yGtA4g00CsdYnVLJvxsS4ANqrZs2sQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nanmu42/limitio v1.0.0 h1:dpopBYPwUyLOPv+vsGja0iax+dG0SP9paTEmz+Sy7KU=\ngithub.com/nanmu42/limitio v1.0.0/go.mod h1:8H40zQ7pqxzbwZ9jxsK2hDoE06TH5ziybtApt1io8So=\ngithub.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/orangecms/go-framebuffer v0.0.0-20200613202404-a0700d90c330 h1:zJBTzBuTR7EdFzmCGx0xp0pbOOb82sAh0+YUK4JTDEI=\ngithub.com/orangecms/go-framebuffer v0.0.0-20200613202404-a0700d90c330/go.mod h1:3Myb/UszJY32F2G7yGkUtcW/ejHpjlGfYLim7cv2uKA=\ngithub.com/packetcap/go-pcap v0.0.0-20240528124601-8c87ecf5dbc5 h1:p4VuaitqUAqSZSomd7Wb4BPV/Jj7Hno2/iqtfX7DZJI=\ngithub.com/packetcap/go-pcap v0.0.0-20240528124601-8c87ecf5dbc5/go.mod h1:zIAoVKeWP0mz4zXY50UYQt6NLg2uwKRswMDcGEqOms4=\ngithub.com/peterh/liner v1.2.2 h1:aJ4AOodmL+JxOZZEL2u9iJf8omNRpqHc/EbrK+3mAXw=\ngithub.com/peterh/liner v1.2.2/go.mod h1:xFwJyiKIXJZUKItq5dGHZSTBRAuG/CpeNpWLyiNRNwI=\ngithub.com/pierrec/lz4/v4 v4.1.14 h1:+fL8AQEZtz/ijeNnpduH0bROTu0O3NZAlPjQxGn8LwE=\ngithub.com/pierrec/lz4/v4 v4.1.14/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/rck/unit v0.0.3 h1:q3/Ui9gcrFKpEneZXw2gNmNEbzv5jLrZnH6qhX1ypZ0=\ngithub.com/rck/unit v0.0.3/go.mod h1:jTOnzP4s1OjIP1vdxb4n76b23QPKS4EurYg7sYMr2DM=\ngithub.com/rekby/gpt v0.0.0-20200219180433-a930afbc6edc h1:goZGTwEEn8mWLcY012VouWZWkJ8GrXm9tS3VORMxT90=\ngithub.com/rekby/gpt v0.0.0-20200219180433-a930afbc6edc/go.mod h1:scrOqOnnHVKCHENvFw8k9ajCb88uqLQDA4BvuJNJ2ew=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.4 h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=\ngithub.com/rivo/uniseg v0.4.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/safchain/ethtool v0.0.0-20200218184317-f459e2d13664 h1:gvolwzuDhul9qK6/oHqxCHD5TEYfsWNBGidOeG6kvpk=\ngithub.com/safchain/ethtool v0.0.0-20200218184317-f459e2d13664/go.mod h1:Z0q5wiBQGYcxhMZ6gUqHn6pYNLypFAvaL3UvgZLR0U4=\ngithub.com/sahilm/fuzzy v0.1.0 h1:FzWGaw2Opqyu+794ZQ9SYifWv2EIXpwP4q8dY1kDAwI=\ngithub.com/sahilm/fuzzy v0.1.0/go.mod h1:VFvziUEIMCrT6A6tw2RFIXPXXmzXbOsSHF0DOI8ZK9Y=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1 h1:2vfRuCMp5sSVIDSqO8oNnWJq7mPa6KVP3iPIwFBuy8A=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1 h1:5TQK59W5E3v0r2duFAb7P95B6hEeOyEnHRa8MjYSMTY=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/therootcompany/xz v1.0.1 h1:CmOtsn1CbtmyYiusbfmhmkpAAETj0wBIH6kCYaX+xzw=\ngithub.com/therootcompany/xz v1.0.1/go.mod h1:3K3UH1yCKgBneZYhuQUvJ9HPD19UEXEI0BWbMn8qNMY=\ngithub.com/tklauser/go-sysconf v0.3.14 h1:g5vzr9iPFFz24v2KZXs/pvpvh8/V9Fw6vQK5ZZb78yU=\ngithub.com/tklauser/go-sysconf v0.3.14/go.mod h1:1ym4lWMLUOhuBOPGtRcJm7tEGX4SCYNEEEtghGG/8uY=\ngithub.com/tklauser/numcpus v0.8.0 h1:Mx4Wwe/FjZLeQsK/6kt2EOepwwSl7SmJrK5bV/dXYgY=\ngithub.com/tklauser/numcpus v0.8.0/go.mod h1:ZJZlAY+dmR4eut8epnzf0u/VwodKmryxR8txiloSqBE=\ngithub.com/twitchtv/twirp v5.8.0+incompatible/go.mod h1:RRJoFSAmTEh2weEqWtpPE3vFK5YBhA6bqp2l1kfCC5A=\ngithub.com/u-root/cpuid v0.0.0 h1:A9eFi+//FIyc5+7iRSnsz+vkYVRH/NqiQIxyUjUa5uo=\ngithub.com/u-root/cpuid v0.0.0/go.mod h1:4cKsFal/qG5riWG/6IGedb2y53cl1xdcbSszYjM6IrY=\ngithub.com/u-root/gobusybox/src v0.0.0-20250101170133-2e884e4509c7 h1:dtiVT4SeBUc/vHtwI2HjDZN+FCKTstQBxugIxJEGo9g=\ngithub.com/u-root/gobusybox/src v0.0.0-20250101170133-2e884e4509c7/go.mod h1:PW3wGFCHjdHxAhra5FKvcARbCGqGfentYuPKmuhv8DY=\ngithub.com/u-root/iscsinl v0.1.1-0.20210528121423-84c32645822a h1:A0sK7WEodak7eVd21MOEatnh2pfAAwZaEPSIEEsjctQ=\ngithub.com/u-root/iscsinl v0.1.1-0.20210528121423-84c32645822a/go.mod h1:RWIgJWqm9/0gjBZ0Hl8iR6MVGzZ+yAda2uqqLmetE2I=\ngithub.com/u-root/mkuimage v0.0.0-20241128172401-dc7520ecaa89 h1:FRnlWD2ASaDRW7C9EDUud6gVybF1WA9bfDc53DNXl2Q=\ngithub.com/u-root/mkuimage v0.0.0-20241128172401-dc7520ecaa89/go.mod h1:qzJqwYSsU0kBkl1bX/s93hfd64WbL+CP7AobQdvJb9A=\ngithub.com/u-root/uio v0.0.0-20240209044354-b3d14b93376a h1:BH1SOPEvehD2kVrndDnGJiUF0TrBpNs+iyYocu6h0og=\ngithub.com/u-root/uio v0.0.0-20240209044354-b3d14b93376a/go.mod h1:P3a5rG4X7tI17Nn3aOIAYr5HbIMukwXG0urG0WuL8OA=\ngithub.com/ulikunitz/xz v0.5.11 h1:kpFauv27b6ynzBNT/Xy+1k+fK4WswhN/6PN5WhFAGw8=\ngithub.com/ulikunitz/xz v0.5.11/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=\ngithub.com/vishvananda/netlink v1.1.0/go.mod h1:cTgwzPIzzgDAYoQrMm0EdrjRUBkTqKYppBueQtXaqoE=\ngithub.com/vishvananda/netlink v1.2.1-beta.2 h1:Llsql0lnQEbHj0I1OuKyp8otXp0r3q0mPkuhwHfStVs=\ngithub.com/vishvananda/netlink v1.2.1-beta.2/go.mod h1:twkDnbuQxJYemMlGd4JFIcuhgX83tXhKS2B/PRMpOho=\ngithub.com/vishvananda/netlink v1.3.0 h1:X7l42GfcV4S6E4vHTsw48qbrV+9PVojNfIhZcwQdrZk=\ngithub.com/vishvananda/netlink v1.3.0/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.0-20191106174202-0a2b9b5464df/go.mod h1:JP3t17pCcGlemwknint6hfoeCVQrEMVwxRLRjXpq+BU=\ngithub.com/vishvananda/netns v0.0.0-20200728191858-db3c7e526aae/go.mod h1:DD4vA1DwXk04H54A1oHXtwZmA0grkVMdPxx/VGLCah0=\ngithub.com/vishvananda/netns v0.0.4 h1:Oeaw1EM2JMxD51g9uhtC0D7erkIjgmj8+JZc26m1YX8=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/vtolstov/go-ioctl v0.0.0-20151206205506-6be9cced4810 h1:X6ps8XHfpQjw8dUStzlMi2ybiKQ2Fmdw7UM+TinwvyM=\ngithub.com/vtolstov/go-ioctl v0.0.0-20151206205506-6be9cced4810/go.mod h1:dF0BBJ2YrV1+2eAIyEI+KeSidgA6HqoIP1u5XTlMq/o=\ngo.bug.st/serial v1.6.2 h1:kn9LRX3sdm+WxWKufMlIRndwGfPWsH1/9lCWXQCasq8=\ngo.bug.st/serial v1.6.2/go.mod h1:UABfsluHAiaNI+La2iESysd9Vetq7VRdpxvjx7CmmOE=\ngolang.org/x/arch v0.2.0 h1:W1sUEHXiJTfjaFJ5SLo0N6lZn+0eO5gWD1MFeTGqQEY=\ngolang.org/x/arch v0.2.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240222234643-814bf88cf225 h1:LfspQV/FYTatPTr/3HzIcmiUFH7PGP+OQ6mgDYo3yuQ=\ngolang.org/x/exp v0.0.0-20240222234643-814bf88cf225/go.mod h1:CxmFvTBINI24O/j8iY7H1xHzx2i4OsyguNBmN/uPtqc=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190827160401-ba9fcec4b297/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191007182048-72f939374954/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201010224723-4f7140c49acb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201216054612-986b41b23924/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20210928044308-7d9f5e0b762b/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.31.0 h1:68CPQngjLL0r2AlUKiSxtQFKvzRVbnzLwMUn5SzcLHo=\ngolang.org/x/net v0.31.0/go.mod h1:P4fl1q7dY2hnZFxEk4pPSkDHF+QqjitcnDjUQyMM+pM=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190411185658-b44545bcd369/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606203320-7fc4e5ec1444/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200121082415-34d275377bf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200217220822-9197077df867/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200728102440-3e129f6d46b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201009025420-dfb3f7c4e634/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201118182958-a01c418693c7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201218084310-7d0127a74742/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210110051926-789bb1bd4061/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210123111255-9b0068b26619/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210216163648-f7da38b97c65/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210525143221-35b2ab0089ea/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210906170528-6f6e22806c34/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211117180635-dee7805ff2e1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220204135822-1c1b9b1eba6a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190614205625-5aca471b1d59/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.27.0 h1:qEKojBykQkQ4EynWy4S8Weg69NumxKdn40Fce3uc/8o=\ngolang.org/x/tools v0.27.0/go.mod h1:sUi0ZgbwW9ZPAq26Ekut+weQPR5eIM6GQLQ1Yjm1H0Q=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v1 v1.0.0-20140924161607-9f9df34309c0/go.mod h1:WDnlLJ4WF5VGsH/HVa3CI79GS0ol3YnhVnKP89i0kNg=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0 h1:hjy8E9ON/egN1tAYqKb61G10WtihqetD4sz2H+8nIeA=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhowett.net/plist v1.0.0 h1:7CrbWYbPPO/PyNy38b2EB/+gYbjCe2DXBxgtOOZbSQM=\nhowett.net/plist v1.0.0/go.mod h1:lqaXoTrLY4hg8tnEzNru53gicrbv7rrk+2xJA/7hw9g=\nmvdan.cc/sh/v3 v3.10.1-0.20241129174306-6042a7fe4e04 h1:CEK3Ob7y7SB3hP4bkaY0K202DBwcW76se2Ryf3ke+PI=\nmvdan.cc/sh/v3 v3.10.1-0.20241129174306-6042a7fe4e04/go.mod h1:5oK89+iMoiTvkyhjKmoLQsY7E/oYdYHwUh0cRWNwaEE=\npack.ag/tftp v1.0.1-0.20181129014014-07909dfbde3c h1:4DHuGX0VtxRIyjXlVpcjSGEmZ7OnIK7Hvo+INnxI8yk=\npack.ag/tftp v1.0.1-0.20181129014014-07909dfbde3c/go.mod h1:N1Pyo5YG+K90XHoR2vfLPhpRuE8ziqbgMn/r/SghZas=\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "logos",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "roadmap.md",
          "type": "blob",
          "size": 0.9072265625,
          "content": "# Roadmap\n\n## Missing commands and flags\n\nBefore starting work on a command, please open a GitHub issue and assign to\nyourself.\n\n| Command        | Flags TODO      | Comments               |\n| -------------- | --------------- | ---------------------- |\n| :x: flashrom   | -p internal     |                        |\n| :x: gitclone   |                 | Not implemented yet!   |\n| :x: printf     |                 | Not implemented yet!   |\n| ps             |                 | Fix race conditions    |\n| readlink       | -em             |                        |\n| :x: sed        | -ie             | Not implemented yet!   |\n| sort           | -bcfmnRu        |                        |\n| srvfiles       |                 | Serve files with TLS   |\n| truncate       | -o              |                        |\n| unshare        |                 | Different flag names   |\n\n(Commands marked with an :x: are not yet implemented.)\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tricksandtips.md",
          "type": "blob",
          "size": 0.513671875,
          "content": "# u-root Tricks and Tips\n\nHere are some things we do that you might find useful.\n\n## Pipe u-root output to stdout\n\nOne thing to keep in mind is that on many systems, now, standard\nout is a named file you can write to. Further, you can \ncreate a cpio that has no Linux initramfs content. Finally, you can\nmerge cpios to form a more comprehensive cpio.\n\n## inventory the cpio archive without creating it.\n```\nu-root -o /dev/stdout | cpio -ivt\n```\n\n## Make a pure u-root cpio with no other files.\n\n```\nu-root -base /dev/null\n```\n"
        },
        {
          "name": "u-root.go",
          "type": "blob",
          "size": 3.25,
          "content": "// Copyright 2015-2018 the u-root Authors. All rights reserved\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Command u-root builds CPIO archives with the given files and Go commands.\npackage main\n\nimport (\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"log/slog\"\n\t\"os\"\n\t\"runtime\"\n\n\t\"github.com/dustin/go-humanize\"\n\t\"github.com/u-root/gobusybox/src/pkg/golang\"\n\t\"github.com/u-root/mkuimage/uimage\"\n\t\"github.com/u-root/mkuimage/uimage/mkuimage\"\n\t\"github.com/u-root/uio/llog\"\n)\n\nvar (\n\terrEmptyFilesArg = errors.New(\"empty argument to -files\")\n)\n\n// checkArgs checks for common mistakes that cause confusion.\n//  1. -files as the last argument\n//  2. -files followed by any switch, indicating a shell expansion problem\n//     This is usually caused by Makfiles structured as follows\n//     u-root -files `which ethtool` -files `which bash`\n//     if ethtool is not installed, the expansion yields\n//     u-root -files -files `which bash`\n//     and the rather confusing error message\n//     16:14:51 Skipping /usr/bin/bash because it is not a directory\n//     which, in practice, nobody understands\nfunc checkArgs(args ...string) error {\n\tif len(args) == 0 {\n\t\treturn nil\n\t}\n\n\tif args[len(args)-1] == \"-files\" {\n\t\treturn fmt.Errorf(\"last argument is -files:%w\", errEmptyFilesArg)\n\t}\n\n\t// We know the last arg is not -files; scan the arguments for -files\n\t// followed by a switch.\n\tfor i := 0; i < len(args)-1; i++ {\n\t\tif args[i] == \"-files\" && args[i+1][0] == '-' {\n\t\t\treturn fmt.Errorf(\"-files argument %d is followed by a switch: %w\", i, errEmptyFilesArg)\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc main() {\n\tlog.SetFlags(log.Ltime)\n\tif err := checkArgs(os.Args...); err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tenv := golang.Default(golang.DisableCGO())\n\tf := &mkuimage.Flags{\n\t\tCommands:      mkuimage.CommandFlags{Builder: \"bb\"},\n\t\tArchiveFormat: \"cpio\",\n\t\tOutputFile:    defaultFile(env),\n\t}\n\tf.RegisterFlags(flag.CommandLine)\n\n\tl := llog.Default()\n\tl.RegisterVerboseFlag(flag.CommandLine, \"v\", slog.LevelDebug)\n\n\ttf := &mkuimage.TemplateFlags{}\n\ttf.RegisterFlags(flag.CommandLine)\n\tflag.Parse()\n\n\t// Set defaults.\n\tm := []uimage.Modifier{\n\t\tuimage.WithReplaceEnv(env),\n\t\tuimage.WithBaseArchive(uimage.DefaultRamfs()),\n\t\tuimage.WithCPIOOutput(defaultFile(env)),\n\t\tuimage.WithInit(\"init\"),\n\t\tuimage.WithShellBang(runtime.GOOS == \"plan9\" || os.Getenv(\"GOOS\") == \"plan9\"),\n\t}\n\tif golang.Default().GOOS != \"plan9\" {\n\t\tm = append(m, uimage.WithShell(\"gosh\"))\n\t}\n\n\tpkgs := flag.Args()\n\t// Only add default packages if no config template was given.\n\t//\n\t// Otherwise, the template can't erase the default packages and all\n\t// templates would be forced to use cmds/core/*.\n\tif len(pkgs) == 0 && tf.Config == \"\" {\n\t\tpkgs = []string{\"github.com/u-root/u-root/cmds/core/*\"}\n\t}\n\tif err := mkuimage.CreateUimage(l, m, tf, f, pkgs); err != nil {\n\t\tl.Errorf(\"mkuimage error: %v\", err)\n\t\tos.Exit(1)\n\t}\n\n\tif stat, err := os.Stat(f.OutputFile); err == nil && f.ArchiveFormat == \"cpio\" {\n\t\tl.Infof(\"Successfully built %q (size %d bytes -- %s).\", f.OutputFile, stat.Size(), humanize.IBytes(uint64(stat.Size())))\n\t}\n}\n\nfunc defaultFile(env *golang.Environ) string {\n\tif len(env.GOOS) == 0 || len(env.GOARCH) == 0 {\n\t\treturn \"/tmp/initramfs.cpio\"\n\t}\n\treturn fmt.Sprintf(\"/tmp/initramfs.%s_%s.cpio\", env.GOOS, env.GOARCH)\n}\n"
        },
        {
          "name": "uroot_test.go",
          "type": "blob",
          "size": 9.4736328125,
          "content": "// Copyright 2015-2018 the u-root Authors. All rights reserved\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage main\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"crypto/sha256\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"sync\"\n\t\"testing\"\n\n\tgbbgolang \"github.com/u-root/gobusybox/src/pkg/golang\"\n\t\"github.com/u-root/u-root/pkg/cpio\"\n\t\"github.com/u-root/u-root/pkg/testutil\"\n\titest \"github.com/u-root/u-root/pkg/uroot/initramfs/test\"\n\t\"github.com/u-root/uio/uio\"\n)\n\nvar twocmds = []string{\n\t\"github.com/u-root/u-root/cmds/core/ls\",\n\t\"github.com/u-root/u-root/cmds/core/init\",\n}\n\ntype noDeadCode struct {\n\tPath string\n}\n\nfunc (v noDeadCode) Validate(a *cpio.Archive) error {\n\t// 1. Extract BB binary into a temporary file.\n\tdelFiles := true\n\tbbRecord, ok := a.Get(v.Path)\n\tif !ok {\n\t\treturn fmt.Errorf(\"archive does not contain %s, but should\", v.Path)\n\t}\n\ttf, err := os.CreateTemp(\"\", \"u-root-temp-bb-\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tbbData, _ := uio.ReadAll(bbRecord)\n\ttf.Write(bbData)\n\ttf.Close()\n\tdefer func() {\n\t\tif delFiles {\n\t\t\tos.RemoveAll(tf.Name())\n\t\t}\n\t}()\n\t// 2. Run \"go nm\" on it and build symbol table.\n\tcmd := gbbgolang.Default().GoCmd(\"tool\", \"nm\", tf.Name())\n\tnmOutput, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to run nm: %w %s\", err, nmOutput)\n\t}\n\tsymScanner := bufio.NewScanner(bytes.NewBuffer(nmOutput))\n\tsyms := map[string]bool{}\n\tfor symScanner.Scan() {\n\t\tline := symScanner.Text()\n\t\tparts := strings.Split(line, \" \")\n\t\tif len(parts) == 0 {\n\t\t\tcontinue\n\t\t}\n\t\tsym := parts[len(parts)-1]\n\t\tsyms[sym] = true\n\t}\n\t// 3. Check for presence and absence of particular symbols.\n\tif !syms[\"github.com/u-root/u-root/pkg/uroot/test/bar.Bar.UsedInterfaceMethod\"] {\n\t\t// Sanity check of the test itself: this method must be in the binary.\n\t\treturn fmt.Errorf(\"expected symbol not found, something is wrong with the build\")\n\t}\n\tif syms[\"github.com/u-root/u-root/pkg/uroot/test/bar.Bar.UnusedNonInterfaceMethod\"] {\n\t\t// Sanity check of the test itself: this method must be in the binary.\n\t\tdelFiles = false\n\t\treturn fmt.Errorf(\n\t\t\t\"Unused non-interface method has not been eliminated, dead code elimination is not working properly.\\n\"+\n\t\t\t\t\"The most likely reason is use of reflect.Value.Method or .MethodByName somewhere \"+\n\t\t\t\t\"(could be a command or vendor dependency, apologies for not being more precise here).\\n\"+\n\t\t\t\t\"See https://golang.org/src/cmd/link/internal/ld/deadcode.go for explanation.\\n\"+\n\t\t\t\t\"%s contains the resulting binary.\\n\", tf.Name())\n\t}\n\treturn nil\n}\n\nfunc TestUrootCmdline(t *testing.T) {\n\tsamplef, err := os.CreateTemp(\"\", \"u-root-test-\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tsamplef.Close()\n\tdefer os.RemoveAll(samplef.Name())\n\tsampledir := t.TempDir()\n\tif err = os.WriteFile(filepath.Join(sampledir, \"foo\"), nil, 0o644); err != nil {\n\t\tt.Fatal(err)\n\t}\n\tif err = os.WriteFile(filepath.Join(sampledir, \"bar\"), nil, 0o644); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\ttype testCase struct {\n\t\tname       string\n\t\tenv        []string\n\t\targs       []string\n\t\terr        error\n\t\tvalidators []itest.ArchiveValidator\n\t}\n\n\tnoCmdTests := []testCase{\n\t\t{\n\t\t\tname: \"include one extra file\",\n\t\t\targs: []string{\"-nocmd\", \"-defaultsh=\", \"-initcmd=\", \"-files=/bin/bash\"},\n\t\t\tenv:  []string{\"GO111MODULE=off\"},\n\t\t\terr:  nil,\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasFile{\"bin/bash\"},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"fix usage of an absolute path\",\n\t\t\targs: []string{\"-nocmd\", \"-defaultsh=\", \"-initcmd=\", fmt.Sprintf(\"-files=%s:/bin\", sampledir)},\n\t\t\tenv:  []string{\"GO111MODULE=off\"},\n\t\t\terr:  nil,\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasFile{\"/bin/foo\"},\n\t\t\t\titest.HasFile{\"/bin/bar\"},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"include multiple extra files\",\n\t\t\targs: []string{\"-nocmd\", \"-defaultsh=\", \"-initcmd=\", \"-files=/bin/bash\", \"-files=/bin/ls\", fmt.Sprintf(\"-files=%s\", samplef.Name())},\n\t\t\tenv:  []string{\"GO111MODULE=off\"},\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasFile{\"bin/bash\"},\n\t\t\t\titest.HasFile{\"bin/ls\"},\n\t\t\t\titest.HasFile{samplef.Name()},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"include one extra file with rename\",\n\t\t\targs: []string{\"-nocmd\", \"-defaultsh=\", \"-initcmd=\", \"-files=/bin/bash:bin/bush\"},\n\t\t\tenv:  []string{\"GO111MODULE=off\"},\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasFile{\"bin/bush\"},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"supplied file can be uinit\",\n\t\t\targs: []string{\"-nocmd\", \"-defaultsh=\", \"-initcmd=\", \"-files=/bin/bash:bin/bash\", \"-uinitcmd=/bin/bash\"},\n\t\t\tenv:  []string{\"GO111MODULE=off\"},\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasFile{\"bin/bash\"},\n\t\t\t\titest.HasRecord{cpio.Symlink(\"bin/uinit\", \"bash\")},\n\t\t\t},\n\t\t},\n\t}\n\n\tbareTests := []testCase{\n\t\t{\n\t\t\tname: \"uinitcmd\",\n\t\t\targs: []string{\"-uinitcmd=echo foobar fuzz\", \"-defaultsh=\", \"github.com/u-root/u-root/cmds/core/init\", \"github.com/u-root/u-root/cmds/core/echo\"},\n\t\t\terr:  nil,\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\titest.HasRecord{cpio.Symlink(\"bin/uinit\", \"../bbin/echo\")},\n\t\t\t\titest.HasContent{\n\t\t\t\t\tPath:    \"etc/uinit.flags\",\n\t\t\t\t\tContent: \"\\\"foobar\\\"\\n\\\"fuzz\\\"\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"dead_code_elimination\",\n\t\t\targs: []string{\n\t\t\t\t// Build the world + test symbols, unstripped.\n\t\t\t\t\"-no-strip\", \"world\", \"github.com/u-root/u-root/pkg/uroot/test/foo\",\n\t\t\t},\n\t\t\terr: nil,\n\t\t\tvalidators: []itest.ArchiveValidator{\n\t\t\t\tnoDeadCode{Path: \"bbin/bb\"},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"hosted mode\",\n\t\t\targs: append([]string{\"-base=/dev/null\", \"-defaultsh=\", \"-initcmd=\"}, twocmds...),\n\t\t},\n\t\t{\n\t\t\tname: \"AMD64 build\",\n\t\t\tenv:  []string{\"GOARCH=amd64\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"MIPS build\",\n\t\t\tenv:  []string{\"GOARCH=mips\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"MIPSLE build\",\n\t\t\tenv:  []string{\"GOARCH=mipsle\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"MIPS64 build\",\n\t\t\tenv:  []string{\"GOARCH=mips64\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"MIPS64LE build\",\n\t\t\tenv:  []string{\"GOARCH=mips64le\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"ARM7 build\",\n\t\t\tenv:  []string{\"GOARCH=arm\", \"GOARM=7\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"ARM64 build\",\n\t\t\tenv:  []string{\"GOARCH=arm64\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"386 (32 bit) build\",\n\t\t\tenv:  []string{\"GOARCH=386\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"Power 64bit build\",\n\t\t\tenv:  []string{\"GOARCH=ppc64le\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t\t{\n\t\t\tname: \"RISCV 64bit build\",\n\t\t\tenv:  []string{\"GOARCH=riscv64\"},\n\t\t\targs: []string{\"all\"},\n\t\t},\n\t}\n\tvar bbTests []testCase\n\tfor _, test := range bareTests {\n\t\tgbbTest := test\n\t\tgbbTest.name = gbbTest.name + \" gbb-gomodule\"\n\t\tgbbTest.args = append([]string{\"-build=gbb\"}, gbbTest.args...)\n\t\tgbbTest.env = append(gbbTest.env, \"GO111MODULE=on\")\n\n\t\tbbTests = append(bbTests, gbbTest)\n\t}\n\n\tfor _, tt := range append(noCmdTests, bbTests...) {\n\t\ttt := tt\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tdelFiles := true\n\t\t\tvar (\n\t\t\t\tf1, f2     *os.File\n\t\t\t\tsum1, sum2 []byte\n\t\t\t\terrs       [2]error\n\t\t\t\twg         = &sync.WaitGroup{}\n\t\t\t\tremove     []string\n\t\t\t)\n\n\t\t\twg.Add(2)\n\t\t\tgo func() {\n\t\t\t\tdefer wg.Done()\n\t\t\t\tf1, sum1, err = buildIt(t, tt.args, tt.env, tt.err)\n\t\t\t\tif err != nil {\n\t\t\t\t\terrs[0] = err\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\ta, err := itest.ReadArchive(f1.Name())\n\t\t\t\tif err != nil {\n\t\t\t\t\terrs[0] = err\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tremove = append(remove, f1.Name())\n\t\t\t\tfor _, v := range tt.validators {\n\t\t\t\t\tif err := v.Validate(a); err != nil {\n\t\t\t\t\t\tt.Errorf(\"validator failed: %v / archive:\\n%s\", err, a)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}()\n\n\t\t\tgo func() {\n\t\t\t\tdefer wg.Done()\n\t\t\t\tvar err error\n\t\t\t\tf2, sum2, err = buildIt(t, tt.args, tt.env, tt.err)\n\t\t\t\tif err != nil {\n\t\t\t\t\terrs[1] = err\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tremove = append(remove, f2.Name())\n\t\t\t}()\n\n\t\t\twg.Wait()\n\t\t\tdefer func() {\n\t\t\t\tif delFiles {\n\t\t\t\t\tfor _, n := range remove {\n\t\t\t\t\t\tos.RemoveAll(n)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}()\n\t\t\tif errs[0] != nil {\n\t\t\t\tt.Error(errs[0])\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif errs[1] != nil {\n\t\t\t\tt.Error(errs[1])\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif !bytes.Equal(sum1, sum2) {\n\t\t\t\tdelFiles = false\n\t\t\t\tt.Errorf(\"not reproducible, hashes don't match\")\n\t\t\t\tt.Errorf(\"env: %v args: %v\", tt.env, tt.args)\n\t\t\t\tt.Errorf(\"file1: %v file2: %v\", f1.Name(), f2.Name())\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunc buildIt(t *testing.T, args, env []string, want error) (*os.File, []byte, error) {\n\tf, err := os.CreateTemp(\"\", \"u-root-\")\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\t// Use the u-root command outside of the $GOPATH tree to make sure it\n\t// still works.\n\targ := append([]string{\"-o\", f.Name()}, args...)\n\tc := testutil.Command(t, arg...)\n\tt.Logf(\"Commandline: %v u-root %v\", strings.Join(env, \" \"), strings.Join(arg, \" \"))\n\tc.Env = append(c.Env, env...)\n\tif out, err := c.CombinedOutput(); err != want {\n\t\treturn nil, nil, fmt.Errorf(\"Error: %w\\nOutput:\\n%s\", err, out)\n\t} else if err != nil {\n\t\th1 := sha256.New()\n\t\tif _, err := io.Copy(h1, f); err != nil {\n\t\t\treturn nil, nil, err\n\t\t}\n\t\treturn f, h1.Sum(nil), nil\n\t}\n\treturn f, nil, nil\n}\n\nfunc TestMain(m *testing.M) {\n\ttestutil.Run(m, main)\n}\n\nfunc TestCheckArgs(t *testing.T) {\n\tfor _, tt := range []struct {\n\t\tname string\n\t\targs []string\n\t\terr  error\n\t}{\n\t\t{\"-files is only arg\", []string{\"-files\"}, errEmptyFilesArg},\n\t\t{\"-files followed by -files\", []string{\"-files\", \"-files\"}, errEmptyFilesArg},\n\t\t{\"-files followed by any other switch\", []string{\"-files\", \"-abc\"}, errEmptyFilesArg},\n\t\t{\"no args\", []string{}, nil},\n\t\t{\"u-root alone\", []string{\"u-root\"}, nil},\n\t\t{\"u-root with -files and other args\", []string{\"u-root\", \"-files\", \"/bin/bash\", \"core\"}, nil},\n\t} {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tif err := checkArgs(tt.args...); !errors.Is(err, tt.err) {\n\t\t\t\tt.Errorf(\"%q: got %v, want %v\", tt.args, err, tt.err)\n\t\t\t}\n\t\t})\n\t}\n}\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}