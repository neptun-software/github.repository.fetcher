{
  "metadata": {
    "timestamp": 1736567306502,
    "page": 909,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DMarby/picsum-photos",
      "stars": 2258,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.033203125,
          "content": "watch_file ./go.mod.sri\nuse flake\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": "**/debug\n**/debug.test\n\n/picsum-photos\n\n/image-service\n\n.vscode/c_cpp_properties.json\n.vscode/settings.json\n\n.DS_Store\n\n.direnv\nresult\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.07421875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2024 David Marby & Nijiko Yonskai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.0673828125,
          "content": "GO ?= go\nGOTOOLRUN = $(GO) run -modfile=./tools/go.mod\n\n.PHONY: test\ntest:\n\t$(GO) test ./...\n\n.PHONY: fixtures\nfixtures: generate_fixtures\n\tdocker run --rm -v $(PWD):/picsum-photos docker.io/golang:1.19-alpine sh -c 'apk add make && cd /picsum-photos && make docker_fixtures generate_fixtures'\n\n.PHONY: generate_fixtures\ngenerate_fixtures:\n\tGENERATE_FIXTURES=1 $(GO) test ./... -run '^(TestFixtures)$$'\n\n.PHONY: docker_fixtures\ndocker_fixtures:\n\tapk add --update --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing vips-dev\n\tapk add \\\n\t\tgit \\\n\t\tgcc \\\n\t\tmusl-dev\n\n.PHONY: generate\ngenerate: go.mod.sri\n\ngo.mod.sri: go.mod\n\t$(GO) mod vendor -o .tmp-vendor\n\t$(GOTOOLRUN) tailscale.com/cmd/nardump -sri .tmp-vendor >$@\n\trm -rf .tmp-vendor\n\n.PHONY: upgrade\nupgrade:\n# https://github.com/golang/go/issues/28424\n\t$(GO) list -f '{{if not (or .Main .Indirect)}}{{.Path}}{{end}}' -m all | xargs $(GO) get\n\t$(GO) mod tidy -v\n\n.PHONY: upgradetools\nupgradetools:\n\tcd tools && $(GO) list -e -f '{{range .Imports}}{{.}}@latest {{end}}' -tags tools | xargs $(GO) get\n\tcd tools && $(GO) mod tidy -v\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.3408203125,
          "content": "Lorem Picsum\n===========\n\nLorem Ipsum... but for photos.  \nLorem Picsum is a service providing easy to use, stylish placeholders.  \n \n## Sponsors\n\nProudly powered by [Fastly](https://fastly.com)  \n<a href=\"https://fastly.com\">\n  <img src=\"internal/web/embed/assets/images/fastly.svg\" width=\"201px\">\n</a>\n\n## License\nMIT. See [LICENSE](./LICENSE.md)\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.4619140625,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1705309234,\n        \"narHash\": \"sha256-uNRRNRKmJyCRC/8y1RqBkqWBLM034y4qN7EprSdmgyA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"1ef2e671c3b0c19053962c07dbda38332dcebf26\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1707268954,\n        \"narHash\": \"sha256-2en1kvde3cJVc3ZnTy8QeD2oKcseLFjYPLKhIGDanQ0=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"f8e2ebd66d097614d51a56a755450d4ae1632df1\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 7.6279296875,
          "content": "{\n  description = \"picsum.photos\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/nixos-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n  };\n\n  outputs = inputs@{\n    self,\n    nixpkgs,\n    flake-utils,\n    ...\n  }:\n    flake-utils.lib.eachSystem [\n      \"x86_64-linux\"\n      \"aarch64-linux\"\n      \"aarch64-darwin\"\n    ] (system:\n      let pkgs = nixpkgs.legacyPackages.${system}; in {\n        packages = rec {\n          default = everything;\n\n          everything = pkgs.symlinkJoin {\n            name = \"picsum-photos-composite\";\n            paths = [\n              picsum-photos\n              image-service\n            ];\n          };\n\n          picsum-photos = pkgs.buildGo122Module {\n            name = \"picsum-photos\";\n            src = ./.;\n            CGO_ENABLED = 0;\n            subPackages = [\"cmd/picsum-photos\"];\n            doCheck = false; # Prevent make test from being ran\n            vendorHash = (pkgs.lib.fileContents ./go.mod.sri);\n            nativeBuildInputs = with pkgs; [\n              tailwindcss\n            ];\n            preBuild = ''\n              go generate ./...\n            '';\n          };\n\n          image-service = pkgs.buildGo122Module {\n            name = \"image-service\";\n            src = ./.;\n            subPackages = [\"cmd/image-service\"];\n            doCheck = false; # Prevent make test from being ran\n            vendorHash = (pkgs.lib.fileContents ./go.mod.sri);\n            nativeBuildInputs = with pkgs; [\n              pkg-config\n            ];\n            buildInputs = with pkgs; [\n              vips\n            ];\n          };\n        };\n\n        devShells.default = pkgs.mkShell {\n          packages = with pkgs; [\n            go_1_22\n            gotools\n            go-tools\n            gopls\n            delve\n          ];\n        };\n      }\n    ) // {\n      nixosModules.default = { config, lib, pkgs, ... }:\n        with lib;\n        let cfg = config.picsum-photos.services;\n        in {\n          options.picsum-photos.services = {\n            picsum-photos = {\n              enable = mkEnableOption \"Enable the picsum-photos service\";\n\n              logLevel = mkOption {\n                type = with types; enum [ \"debug\" \"info\" \"warn\" \"error\" \"dpanic\" \"panic\" \"fatal\" ];\n                example = \"debug\";\n                default = \"info\";\n                description = \"log level\";\n              };\n\n              domain = mkOption {\n                type = types.str;\n                description = \"Domain to listen to\";\n              };\n\n              sockPath = mkOption rec {\n                type = types.path;\n                default = \"/run/picsum-photos/picsum-photos.sock\";\n                example = default;\n                description = \"Unix domain socket to listen on\";\n              };\n\n              environmentFile = mkOption {\n                type = types.path;\n                description = \"Environment file\";\n              };\n\n              databaseFilePath = mkOption rec {\n                type = types.path;\n                default = \"/var/lib/picsum-photos/image-manifest.json\";\n                example = default;\n                description = \"Image database file path\";\n              };\n            };\n\n            image-service = {\n              enable = mkEnableOption \"Enable the image-service service\";\n\n              logLevel = mkOption {\n                type = with types; enum [ \"debug\" \"info\" \"warn\" \"error\" \"dpanic\" \"panic\" \"fatal\" ];\n                example = \"debug\";\n                default = \"info\";\n                description = \"log level\";\n              };\n\n              workers = mkOption rec {\n                type = types.number;\n                default = 16;\n                example = default;\n                description = \"worker queue concurrency\";\n              };\n\n              domain = mkOption {\n                type = types.str;\n                description = \"Domain to listen to\";\n              };\n\n              sockPath = mkOption rec {\n                type = types.path;\n                default = \"/run/image-service/image-service.sock\";\n                example = default;\n                description = \"Unix domain socket to listen on\";\n              };\n\n              environmentFile = mkOption {\n                type = types.path;\n                description = \"Environment file\";\n              };\n\n              storagePath = mkOption rec {\n                type = types.path;\n                default = \"/var/lib/image-service\";\n                example = default;\n                description = \"Storage path\";\n              };\n            };\n          };\n\n          config = mkMerge([\n            (mkIf cfg.picsum-photos.enable {\n              users.groups.picsum-photos = {};\n\n              users.users.picsum-photos = {\n                createHome = true;\n                isSystemUser = true;\n                group = \"picsum-photos\";\n                home = \"/var/lib/picsum-photos\";\n              };\n\n              systemd.services.picsum-photos = {\n                description = \"picsum-photos\";\n                wantedBy = [ \"multi-user.target\" ];\n\n                script = ''\n                  exec ${self.packages.${pkgs.system}.picsum-photos}/bin/picsum-photos \\\n                    -log-level=${cfg.picsum-photos.logLevel} \\\n                    -listen=${cfg.picsum-photos.sockPath} \\\n                    -database-file-path=${cfg.picsum-photos.databaseFilePath}\n                '';\n\n                serviceConfig = {\n                  EnvironmentFile = cfg.picsum-photos.environmentFile;\n                  User = \"picsum-photos\";\n                  Group = \"picsum-photos\";\n                  Restart = \"always\";\n                  RestartSec = \"30s\";\n                  WorkingDirectory = \"/var/lib/picsum-photos\";\n                  RuntimeDirectory = \"picsum-photos\";\n                  RuntimeDirectoryMode = \"0770\";\n                  UMask = \"007\";\n                };\n              };\n\n              services.nginx.virtualHosts.\"${cfg.picsum-photos.domain}\" = {\n                locations.\"/\" = {\n                  proxyPass = \"http://unix:${cfg.picsum-photos.sockPath}\";\n                };\n              };\n            })\n\n            (mkIf cfg.image-service.enable {\n              users.groups.image-service = {};\n\n              users.users.image-service = {\n                createHome = true;\n                isSystemUser = true;\n                group = \"image-service\";\n                home = \"/var/lib/image-service\";\n              };\n\n              systemd.services.image-service = {\n                description = \"image-service\";\n                wantedBy = [ \"multi-user.target\" ];\n\n                script = ''\n                  exec ${self.packages.${pkgs.system}.image-service}/bin/image-service \\\n                    -log-level=${cfg.image-service.logLevel} \\\n                    -listen=${cfg.image-service.sockPath} \\\n                    -storage-path=${cfg.image-service.storagePath} \\\n                    -workers=${toString cfg.image-service.workers}\n                '';\n\n                serviceConfig = {\n                  EnvironmentFile = cfg.image-service.environmentFile;\n                  User = \"image-service\";\n                  Group = \"image-service\";\n                  Restart = \"always\";\n                  RestartSec = \"30s\";\n                  WorkingDirectory = \"/var/lib/image-service\";\n                  RuntimeDirectory = \"image-service\";\n                  RuntimeDirectoryMode = \"0770\";\n                  UMask = \"007\";\n                };\n              };\n\n              services.nginx.virtualHosts.\"${cfg.image-service.domain}\" = {\n                locations.\"/\" = {\n                  proxyPass = \"http://unix:${cfg.image-service.sockPath}\";\n                };\n              };\n            })\n          ]);\n        };\n    };\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.9375,
          "content": "module github.com/DMarby/picsum-photos\n\ngo 1.22rc2\n\nrequire (\n\tgithub.com/felixge/httpsnoop v1.0.4\n\tgithub.com/go-logr/stdr v1.2.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/jamiealquiza/envy v1.1.0\n\tgithub.com/prometheus/client_golang v1.18.0\n\tgithub.com/prometheus/common v0.46.0\n\tgithub.com/rs/cors v1.10.1\n\tgithub.com/twmb/murmur3 v1.1.8\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.48.0\n\tgo.opentelemetry.io/otel v1.23.1\n\tgo.opentelemetry.io/otel/sdk v1.23.1\n\tgo.opentelemetry.io/otel/trace v1.23.1\n\tgo.uber.org/automaxprocs v1.5.3\n\tgo.uber.org/zap v1.26.0\n\tgolang.org/x/sync v0.6.0\n\ttailscale.com v1.58.2\n)\n\nrequire (\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240102182953-50ed04b92917 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240102182953-50ed04b92917 // indirect\n)\n\nrequire (\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.2.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/prometheus/client_model v0.5.0 // indirect\n\tgithub.com/prometheus/procfs v0.12.0 // indirect\n\tgithub.com/spf13/cobra v1.7.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.23.1 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.23.1\n\tgo.opentelemetry.io/otel/metric v1.23.1 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.1.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo4.org/mem v0.0.0-20220726221520-4f986261bf13 // indirect\n\tgolang.org/x/crypto v0.18.0 // indirect\n\tgolang.org/x/net v0.20.0 // indirect\n\tgolang.org/x/sys v0.16.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgoogle.golang.org/grpc v1.61.0 // indirect\n\tgoogle.golang.org/protobuf v1.32.0 // indirect\n)\n"
        },
        {
          "name": "go.mod.sri",
          "type": "blob",
          "size": 0.05078125,
          "content": "sha256-kDL65ShZ2d97f1ch57o4HmA7i/22ol9SX+uLNzig4Rk=\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 10.3916015625,
          "content": "github.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=\ngithub.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/frankban/quicktest v1.14.5 h1:dfYrrRyLtiqT9GyKXgdh+k4inNeTvmGbuSgZ3lx3GhA=\ngithub.com/frankban/quicktest v1.14.5/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.0 h1:Wqo399gCIufwto+VfwCSvsnfGpF/w5E9CNxSwbpD6No=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.0/go.mod h1:qmOFXW2epJhM0qSnUUYpldc7gVz2KMQwJ/QYCDIa7XU=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jamiealquiza/envy v1.1.0 h1:Nwh4wqTZ28gDA8zB+wFkhnUpz3CEcO12zotjeqqRoKE=\ngithub.com/jamiealquiza/envy v1.1.0/go.mod h1:MP36BriGCLwEHhi1OU8E9569JNZrjWfCvzG7RsPnHus=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v1.18.0 h1:HzFfmkOzH5Q8L8G+kSJKUx5dtG87sewO+FoDDqP5Tbk=\ngithub.com/prometheus/client_golang v1.18.0/go.mod h1:T+GXkCk5wSJyOqMIzVgvvjFDlkOQntgjkJWKrN5txjA=\ngithub.com/prometheus/client_model v0.5.0 h1:VQw1hfvPvk3Uv6Qf29VrPF32JB6rtbgI6cYPYQjL0Qw=\ngithub.com/prometheus/client_model v0.5.0/go.mod h1:dTiFglRmd66nLR9Pv9f0mZi7B7fk5Pm3gvsjB5tr+kI=\ngithub.com/prometheus/common v0.46.0 h1:doXzt5ybi1HBKpsZOL0sSkaNHJJqkyfEWZGGqqScV0Y=\ngithub.com/prometheus/common v0.46.0/go.mod h1:Tp0qkxpb9Jsg54QMe+EAmqXkSV7Evdy1BTn+g2pa/hQ=\ngithub.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=\ngithub.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=\ngithub.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=\ngithub.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=\ngithub.com/rs/cors v1.10.1 h1:L0uuZVXIKlI1SShY2nhFfo44TYvDPQ1w4oFkUJNfhyo=\ngithub.com/rs/cors v1.10.1/go.mod h1:XyqrcTp5zjWr1wsJ8PIRZssZ8b/WMcMf71DJnit4EMU=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/twmb/murmur3 v1.1.8 h1:8Yt9taO/WN3l08xErzjeschgZU2QSrwm1kclYq+0aRg=\ngithub.com/twmb/murmur3 v1.1.8/go.mod h1:Qq/R7NUyOfr65zD+6Q5IHKsJLwP7exErjN6lyyq3OSQ=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.48.0 h1:doUP+ExOpH3spVTLS0FcWGLnQrPct/hD/bCPbDRUEAU=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.48.0/go.mod h1:rdENBZMT2OE6Ne/KLwpiXudnAsbdrdBaqBvTN8M8BgA=\ngo.opentelemetry.io/otel v1.23.1 h1:Za4UzOqJYS+MUczKI320AtqZHZb7EqxO00jAHE0jmQY=\ngo.opentelemetry.io/otel v1.23.1/go.mod h1:Td0134eafDLcTS4y+zQ26GE8u3dEuRBiBCTUIRHaikA=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.23.1 h1:o8iWeVFa1BcLtVEV0LzrCxV2/55tB3xLxADr6Kyoey4=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.23.1/go.mod h1:SEVfdK4IoBnbT2FXNM/k8yC08MrfbhWk3U4ljM8B3HE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.23.1 h1:p3A5+f5l9e/kuEBwLOrnpkIDHQFlHmbiVxMURWRK6gQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.23.1/go.mod h1:OClrnXUjBqQbInvjJFjYSnMxBSCXBF8r3b34WqjiIrQ=\ngo.opentelemetry.io/otel/metric v1.23.1 h1:PQJmqJ9u2QaJLBOELl1cxIdPcpbwzbkjfEyelTl2rlo=\ngo.opentelemetry.io/otel/metric v1.23.1/go.mod h1:mpG2QPlAfnK8yNhNJAxDZruU9Y1/HubbC+KyH8FaCWI=\ngo.opentelemetry.io/otel/sdk v1.23.1 h1:O7JmZw0h76if63LQdsBMKQDWNb5oEcOThG9IrxscV+E=\ngo.opentelemetry.io/otel/sdk v1.23.1/go.mod h1:LzdEVR5am1uKOOwfBWFef2DCi1nu3SA8XQxx2IerWFk=\ngo.opentelemetry.io/otel/trace v1.23.1 h1:4LrmmEd8AU2rFvU1zegmvqW7+kWarxtNOPyeL6HmYY8=\ngo.opentelemetry.io/otel/trace v1.23.1/go.mod h1:4IpnpJFwr1mo/6HL8XIPJaE9y0+u1KcVmuW7dwFSVrI=\ngo.opentelemetry.io/proto/otlp v1.1.0 h1:2Di21piLrCqJ3U3eXGCTPHE9R8Nh+0uglSnOyxikMeI=\ngo.opentelemetry.io/proto/otlp v1.1.0/go.mod h1:GpBHCBWiqvVLDqmHZsoMM3C5ySeKTC7ej/RNTae6MdY=\ngo.uber.org/automaxprocs v1.5.3 h1:kWazyxZUrS3Gs4qUpbwo5kEIMGe/DAvi5Z4tl2NW4j8=\ngo.uber.org/automaxprocs v1.5.3/go.mod h1:eRbA25aqJrxAbsLO0xy5jVwPt7FQnRgjW+efnwa1WM0=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.26.0 h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=\ngo.uber.org/zap v1.26.0/go.mod h1:dtElttAiwGvoJ/vj4IwHBS/gXsEu/pZ50mUIRWuG0so=\ngo4.org/mem v0.0.0-20220726221520-4f986261bf13 h1:CbZeCBZ0aZj8EfVgnqQcYZgf0lpZ3H9rmp5nkDTAst8=\ngo4.org/mem v0.0.0-20220726221520-4f986261bf13/go.mod h1:reUoABIJ9ikfM5sgtSF3Wushcza7+WeD01VB9Lirh3g=\ngolang.org/x/crypto v0.18.0 h1:PGVlW0xEltQnzFZ55hkuX5+KLyrMYhHld1YHO4AKcdc=\ngolang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9 h1:GoHiUyI/Tp2nVkLI2mCxVkOjsbSXD66ic0XW0js0R9g=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9/go.mod h1:S2oDrQGGwySpoQPVqRShND87VCbxmc6bL1Yd2oYrm6k=\ngolang.org/x/mod v0.14.0 h1:dGoOF9QVLYng8IHTm7BAyWqCqSheQ5pYWGhzW00YJr0=\ngolang.org/x/mod v0.14.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.20.0 h1:aCL9BSgETF1k+blQaYUBx9hJ9LOGP3gAVemcZlf1Kpo=\ngolang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=\ngolang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.16.0 h1:xWw16ngr6ZMtmxDyKyIgsE93KNKz5HKmMa3b8ALHidU=\ngolang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/genproto v0.0.0-20231212172506-995d672761c0 h1:YJ5pD9rF8o9Qtta0Cmy9rdBwkSjrTCT6XTiUQVOtIos=\ngoogle.golang.org/genproto v0.0.0-20231212172506-995d672761c0/go.mod h1:l/k7rMz0vFTBPy+tFSGvXEd3z+BcoG1k7EHbqm+YBsY=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240102182953-50ed04b92917 h1:rcS6EyEaoCO52hQDupoSfrxI3R6C2Tq741is7X8OvnM=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240102182953-50ed04b92917/go.mod h1:CmlNWB9lSezaYELKS5Ym1r44VrrbPUa7JTvw+6MbpJ0=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240102182953-50ed04b92917 h1:6G8oQ016D88m1xAKljMlBOOGWDZkes4kMhgGFlf8WcQ=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240102182953-50ed04b92917/go.mod h1:xtjpI3tXFPP051KaWnhvxkiubL/6dJ18vLVf7q2pTOU=\ngoogle.golang.org/grpc v1.61.0 h1:TOvOcuXn30kRao+gfcvsebNEa5iZIiLkisYEkf7R7o0=\ngoogle.golang.org/grpc v1.61.0/go.mod h1:VUbo7IFqmF1QtCAstipjG0GIoq49KvMe9+h1jFLBNJs=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=\ngoogle.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ntailscale.com v1.58.2 h1:5trkhh/fpUn7f6TUcGUQYJ0GokdNNfNrjh9ONJhoc5A=\ntailscale.com v1.58.2/go.mod h1:faWR8XaXemnSKCDjHC7SAQzaagkUjA5x4jlLWiwxtuk=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}