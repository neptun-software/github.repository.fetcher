{
  "metadata": {
    "timestamp": 1736566459831,
    "page": 5,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wallix/awless",
      "stars": 4984,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "*.test\n*.out\n*.svg\n*.prof\nawless\n*.zip\n.idea\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.171875,
          "content": "language: go\n\ninstall: true\n\ngo:\n  - 1.9.x\n  - 1.10.x\n  - 1.11.x\n\nbefore_install:\n  - go get github.com/mattn/goveralls\nscript:\n  - $GOPATH/bin/goveralls -v -service=travis-ci\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 32.3603515625,
          "content": "## v0.1.11 [2018-06-21]\n\n**Check out our new article** on [Simplified Multi-Factor Authentication](https://medium.com/@awlessCLI/simplified-multi-factor-authentication-for-aws-d703e8d9f332) with `awless`\n\n### Features\n\n- [#71](https://github.com/wallix/awless/issues/71): Add support for Classic load-balancers:\n\n```\n    $ awless list classicloadbalancers\n    $ awless create classicloadbalancer name=my-loadb subnets=[sub-123,sub-456] listeners=HTTP:80:HTTP:8080 healthcheck-path=/health/ping  securitygroups=sg-54321 tags=Env:Test,Created:Awless\n    $ awless update classicloadbalancer name=my-loadb health-interval=10 health-target=HTTP:80/weather/ health-timeout=300 healthy-threshold=10  unhealthy-threshold=5\n    $ awless attach classicloadbalancer name=my-loadb instance=@redis-prod-1\n    $ awless delete classicloadbalancer name=my-loadb\n```\n\n- [#214](https://github.com/wallix/awless/issues/214): `AWS_PROFILE` env variable now loaded in `awless` in addition to the deprecated `AWS_DEFAULT_PROFILE` thanks to @alewando\n- Better completion for `attach mfadevice` and `attach user` commands\n- [#219](https://github.com/wallix/awless/issues/219): Validate access key and secret key before writing into `~/.aws/credentials` file\n\n### Fixes\n\n- [#220](https://github.com/wallix/awless/issues/220): Add double quotes to CSV output if needed thanks to @lllama\n- Fix compilation error in templates with concatenation and reference (c.f. for example in [this template](https://gist.githubusercontent.com/fxaguessy/ef9511bf5ed8f3312904cccb96b818e8/raw/75c0f808220665441055b589be133cf711c64f37/ManageOwnMFA.aws))\n- Parse integer beginning with '0' as string (preventing the deletion of the initial '0' for example in `... account.id=0123456789`)\n\n## v0.1.10 [2018-04-13]\n\n### Features\n\n- Much better performance when synchronising all access data (IAM, etc.)\n- Create instances now supports distro prompting for CentOS, Amazon Linux 2, CoreOS\n   \n      $ awless create instance name=myinst distro=amazonlinux:amzn2\n      $ awless create instance distro=coreos\n      $ awless create instance distro=centos name=myinst\n\n- Avoiding extra throttling: Listing flag `--filter` now passes on the user wanted filtering down to the AWS API when possible so that _less unneeded resources are fetched_, _bandwidth is reduced_ and _some throttling avoided_.\n  \n  For example:\n  \n      $ awless ls s3objects --filter bucket=website\n      $ awless ls records --filter name=io\n      $ awless ls containertasks --filter name=my-task-definition-name\n\n- Support for region embedded in an AWS profile (i.e. shared config files ~/.aws/{credentials,config}). See #181 in Fixes for more details \n      \n- [#191](https://github.com/wallix/awless/issues/191) Attach a certificate to a listener with: `awless listener attach id=... certificate=...` (see awless attach listener -h for more)\n\n\n### Fixes\n\n- [#200](https://github.com/wallix/awless/issues/200): Now paging is supported for s3 objects when listing\n- [#196](https://github.com/wallix/awless/issues/196): Regression fix SIGSEV when having AWS config with role assuming\n- [#182](https://github.com/wallix/awless/issues/182): Region embedded in profile taken into account and given correct precedence\n- [#144](https://github.com/wallix/awless/issues/144): Filtering done on AWS side when listing records for a given zone name\n- [#172](https://github.com/wallix/awless/issues/172): Filtering done on AWS side when listing containertasks for a given task definition name\n\n## v0.1.9 [2018-01-16]\n\n**In this release, the local data model has been updated to support multi-account and stale data is removed when upgrading. Local data (ex: used for completion, etc...) will progressively be synced again through your usage of awless. Although, to get all your data now under the new model, you can manually run `'awless sync'`**\t\n\n### Features\n\n- Support and seamless sync across multi-account (i.e. multiple profiles) and regions\n- Enriched params prompting with optional/skippable but very common params. Can be disabled with `--prompt-only-required` or forced with `--prompt-all` to leverage smart completion for all params\n- Automatically complete the username when deleting an access key by its ID, if it is contained in the local graph model:\n    * `awless delete accesskey id=ACCESSKEYID`\n-  For `awless update stack` param `stackfile` can now slurp yml and json params files. Thanks to @Trane9991 ([#167](https://github.com/wallix/awless/pull/167), [#145](https://github.com/wallix/awless/issues/145))\n- Better completion for template parameters independently of their display name\n- Aliases can now be resolved to properties other than IDs. For example, they are resolved to ARN in attach/detach/update/delete policy: `awless attach policy arn=@my-policy-name`\n- Running only `awless switch` now returns your current region and profile, allowing a quick and short region/profile lookup\n- Better completion of slice properties \n\n### AWS Services\n\n- Listing of Route53 records now contains a new column for aliases [#181](https://github.com/wallix/awless/issues/181)\n- Create an image from an existing instance. See `awless create image -h`\n    * `awless create image instance=@my-instance-name name=redis-image  description='redis prod image'`\n    * `awless create image instance=i-0ee436a45561c04df name=redis-image reboot=true`\n    * List your images with `awless ls images --sort created`\n    * Delete images with an `awless revert ...` or with `awless delete image id=@redis-image`\n- [#169](https://github.com/wallix/awless/issues/169): Start/Stop a RDS database:\n    * `awless start database id=my-db-id`\n    * `awless stop database id=@my-db-name`\n    * `awless restart database id=@my-db-name`\n- Restart an EC2 instance\n  * `awless restart instance id=id-1234`\n  * `awless restart instance ids=@redis-prod-1,@redis-prod-2`\n- [#176](https://github.com/wallix/awless/issues/176): Delete a DNS record only by its awless ID (see `awless ls records`) or by its name:\n    * `awless delete record id=awls-39ec0618`\n    * `awless delete record id=@my.sub.domain.com`\n\n### Fixes\n\n- Fix regression error: errors in dry run showed but where ignored hence user could wrongly confirm to run the template\n- Delete a DNS record only by its awless ID\n\n## v0.1.8 [2017-11-29]\n\n### Features\n\n- Better prompting of template parameters\n- Overall better logging output of template execution\n\n### AWS Services\n\n- Create a database replica with: `awless create database replica=...`\n\n## v0.1.7 [2017-11-24]\n\n### Features\n\n- Better prompt completion for template parameters\n- Create instance/launchconfiguration from community distro names (`awless create instance distro=debian`). In default config value, deprecation of `instance.image` in favor of `instance.distro` (migration should be seamless).\n    * `awless create instance distro=redhat:rhel:7.2`\n    * `awless create launchconfiguration distro=canonical:ubuntu`\n    * `awless create instance distro=debian`\n- Quick way to switch to profiles and regions. Ex: `awless switch eu-west-1`, `awless switch mfa us-west-1`\n- Create a public subnet in only one command with: `awless create subnet public=true...`\n- Save directly your newly created access key in `~/.aws/credentials` with : `awless create accesskey save=true`\n- Overall better logging output of template execution\n\n### AWS Services\n\n- Update Cloudfront distribution with: `awless update distribution...`\n\n## v0.1.6 [2017-11-16]\n\n**Overall re-design of AWS commands with full acceptance testing allowing for easier external contribution, greater flexibility and scalability moving forward**\n\n### Features\n\n- [#154](https://github.com/wallix/awless/issues/154): `awless ssh` allow specifying both `--port` and `--through-port`\n- [#151](https://github.com/wallix/awless/issues/151): `awless ssh` using ip addresses. Ex: `awless ssh 172.31.68.49 --through 172.31.11.249`\n- `awless attach mfadevice` now propose to automatically add the MFA device configuration to `~/.aws/config`\n- [#158](https://github.com/wallix/awless/pull/158), [#159](https://github.com/wallix/awless/pull/159): Added bash/zsh completion to regions and profiles. Thanks to @padilo.\n\n## v0.1.5 [2017-10-05]\n\n### Features\n\n- Complete flow to enable MFA for a user, including QRCode generation\n- Much better output for `awless log`; default message (or user specified message) stored now in logs\n- [#143](https://github.com/wallix/awless/issues/143): Follow CloudFormation stack events: `awless tail stack-events my-stack-name --follow`. Thanks to @Trane9991.\n- Support concatenation between `{holes}` and `\"quoted strings\"` in template with `+` operator: `policy = create policy ... resource=\"arn:aws:iam::\" + {account.id} + \":mfa/${aws:username}\"`\n\n### AWS Services\n\n- Manage and listing of MFA devices: `awless create/delete/attach/detach mfadevice`, `awless list mfadevices`\n- Support [Network Load Balancers](http://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html): `awless create loadbalancer .... type=network ...`\n- Add conditions in policies and support multiple resources `awless create policy ... conditions=\\\"aws:MultiFactorAuthPresent==true\\\" resource=arn:aws:iam::0123456789:mfa/test,arn:aws:iam::0123456789:user/test`\n- Add conditions in role creation `awless create role name=awless-mfa-role principal-account=0123456789 conditions=\\\"aws:MultiFactorAuthPresent==true\\\"`\n- List the access keys of all users with `awless list accesskeys` (previously, only current user)\n- Fetch role trust policy document: `awless show my-role`\n\n### Fixes\n\n- Exit code is now non zero on template run with KO states\n\n## v0.1.4 [2017-09-21]\n\n### Features\n\n- Local storage of cloud data (RDF store) now done using the NTriples text format instead of a binary format (transition completely transparent for the user). New format allows more friendly git revisioning of data compared to a binary format.\n- [#87](https://github.com/wallix/awless/issues/87): Customize columns displayed in `awless list` with `--columns`: `awless ls instances --sort name --columns name,vpc,state,privateip`\n- Global `--no-sync` flag to not run any sync on command\n- `awless show policy-name/policy-id` now displays the current policy Document (in JSON).\n\n### AWS Services\n\n- Update IAM policies, to add statements with `awless update policy`\n- Add ACM certificates in infra:\n    - `awless list certificates`\n    - `awless create/delete/check certificate domains=my.firstdomain.com,my.seconddomain.com validation-domains=firstdomain.com,seconddomain.com`\n- [#123](https://github.com/wallix/awless/issues/123): Listing route tables display the association IDs.\n\n### Fixes\n- `awless ssh --through`: no reusing same conn to avoid EOF. Bug: only first user (amazonlinux) was successful (usually ec2-user) !!\n- `awless ssh --through`: on new proxy client catching error that where shadowed\n\n## v0.1.3 [2017-09-06]\n\n### Features\n\n- `awless show` command 'not found' error now suggests if resource with same reference exists in other locally synced regions\n- `awless` template language now supports lists, for example: `create loadbalancer subnets=[$subnet1, $subnet2]`\n- Variables in `awless` template language now support references, holes and lists, for example: `mysecgroups = [$secgroup1, {my.secgroup},sg-123456]`\n- `awless` template language now supports *holes* in strings, for example: `create instance name={prefix}database{version}`\n- `awless update securitygroup` can now authorize/revoke access from another security group: `update securitygroup id=sg-12345 inbound=authorize portrange=any protocol=tcp securitygroup=sg-23456`\n- Template CLI prompt: better TAB completion of resources and their properties\n- Man CLI examples for all one liners command. For example, `awless create instance -h` will display relevant CLI examples\n- Add `Type` (AWS/Customer managed) and `Attached` (true/false) columns in `awless list policies`\n- [#129](https://github.com/wallix/awless/issues/129): flag `--color=always/never` to force enabling/disabling of colored output.\n\n### AWS Services\n\n- List network interfaces with `awless list networkinterfaces`\n\n### Fixes\n\n- Fix regression: listing a resource returned no results when this resource was disabled for sync. Listing should always fetch the resources and display what is on your cloud.\n- [#130](https://github.com/wallix/awless/issues/130): Better exit status code in `awless show` command\n- Port ranges starting from *0* to *n* are no longer processed as from *n* to *n*.\n- `awless ssh --through`: works without an SSH agent running; correct StrictHostkeyChecking; correct display for `--print-config`\n\n## v0.1.2 [2017-08-17]\n\n### Features\n\n- Sync overall speed up and massive reducing in memory consumption\n- SSH `--through`: `awless ssh my-priv-inst --through my-pub-inst` allow you to connect to a private instance by going through a public one in ths same VPC. You need to have the same keypair (SSH key) on both instances. \n- Flag `--profile-sync` on `awless sync` to enable live profiling. Will dump `mem` and `cpu` Go profiling files for later inspection\n- [#109](https://github.com/wallix/awless/issues/109): Support caching of STS credentials for Multi-Factor Authentication.\n- [#126](https://github.com/wallix/awless/issues/126): Flag `--no-alias` in `awless show` force the display of IDs in relations.\n- [#126](https://github.com/wallix/awless/issues/126): Reverse sorting when listing resources with flag `--reverse`\n- [#120](https://github.com/wallix/awless/issues/120): Profile info is now included in execution logs and appended when suggesting revert action\n- [#82](https://github.com/wallix/awless/issues/82): Better template TAB completion (e.g. complete list of parameters)\n\n\n### AWS Services\n\n- Instance Profiles: List them; attach them to an instance. Ex: `attach instanceprofile name=...`, `awless ls instanceprofiles`\n- Replace in one command an InstanceProfile on a given instance with the `replace=true` param. Ex: `attach instanceprofile .... replace=true`\n- Update Route53 records with `awless update record`\n\n### Fixes\n\n- [#116](https://github.com/wallix/awless/issues/116) No more sync Out Of Memory\n\n## v0.1.1 [2017-07-06]\n\n### Features\n\n- Detach/Attach rapidly AWS policies to user, group or role with: `attach policy service=ec2 access=readonly group=sysadmin`. More info with `awless attach policy -h`\n- Better template TAB completion: suggest on properties, suggest nothing if not relevant\n- Create access keys: prompt user to potentially store them locally under a specific profile\n- Conveniently prompting and storing locally (~/.aws/credentials) for AWS profile credentials when access keys not found\n- `awless ssh`: support SSH agent thanks to @justone\n- New `--port` flag for `awless ssh`: specifying non-standard SSH port thanks to @justone\n- Use `--no-headers` flag in `awless list` to display the results without headers\n- New flag `--values-for` in `awless show` to output machine readable values for resource properties. Ex: `awless show my_instance --values-for name,publicip`\n- Sync works on best effort now. Meaning it does not bail out when an error happens (most often it can be an access right issues on some AWS services)\n- `awless ls policies` now returns: your managed policies + all policies attached to any users, role or group\n- Table display now use full terminal width when possible\n- Much friendlier first install\n\n### New AWS Services\n\n- Support of EC2 NAT Gateways: `awless list natgateways` / `awless create/delete natgateway`\n- Support [ECR](https://aws.amazon.com/ecr/) repositories and registry: `awless list repositories` / `awless create/delete repository` / `awless authenticate registry`\n- Support [ECS](https://aws.amazon.com/ecs/) clusters, services, containerinstances and containers: `awless list containerclusters/containertasks/containerinstances` `awless attach/detach/delete/start/stop containertask`\n- Create/Delete [ApplicationAutoScaling](http://docs.aws.amazon.com/ApplicationAutoScaling/latest/APIReference/Welcome.html) scalable target and policies: `awless create/delete appscalingtarget/appscalingpolicy`\n\n### Bugfixes\n- Template TAB completion: do not display non relevant id/name listing for each prompt\n- Parse successfully template parameters starting with a digit\n\n## v0.1.0 [2017-05-31]\n\n## Features\n\n- Add documentation for all template parameters (`awless create instance -h`, `awless update s3object -h`...)\n- Listing with filter invalid keys: return error and help\n- `awless whoami` now has flags to return specific account properties only: `--account-only`, `--id-only`, `--name-only`, `--resource-only`, `--type-only`\n- Rename template parameters for standardization:\n    - `delete keypair id=...` -> `delete keypair name=...`\n    - `create listener target=...` -> `create listener targetgroup=...`\n    - `delete database skipsnapshot=... snapshotid=...` -> `delete database skip-snapshot=... snapshot=...`\n    - `delete dbsubnetgroup id=...` -> `delete dbsubnetgroup name=...`\n    - `create queue maxMsgSize=... retentionPeriod=... msgWait=... redrivePolicy=... visibilityTimeout=...` -> `create queue max-msg-size=... retention-period=... msg-wait=... redrive-policy=... visibility-timeout=...`\n\n## v0.0.25 [2017-05-26]\n\n## Features\n\n- [#98](https://github.com/wallix/awless/issues/98): `awless ssh` searches SSH keys in both `~/.awless/keys` and `~/.ssh` folders.\n- When `awless ssh` in an instance, you can now specify only `-i keyname`, if the key is stored in `~/.awless/keys` or `~/.ssh`.\n- [#99](https://github.com/wallix/awless/issues/99): Suggesting the right command when typing `awless create instance ID` or `awless create ID` rather than `awless create instance id=ID`\n- Use a s3 bucket as a public website with `awless update bucket name=my-bucket-name public-website=true`\n- Set/update buckets or s3objects predefined ACL (private / public-read / public-read-write / bucket-owner-read...): `awless update s3object acl=public-read`\n- List CloudFront distributions: `awless list distributions`\n- Create/Update/Check/Delete a CloudFront distribution: `awless create/update/check/delete distribution`\n- List CloudFormation stacks: `awless list stacks`\n- Create/Update/Delete a CloudFormation stack: `awless create/delete stack`\n- `awless log --raw-json` shows the full info stored on template execution (context, fillers used, region, ...). Typically this contextual info can be reused for replay and updates of templates\n\n## v0.0.24 [2017-05-22]\n\n### Features\n\n- Template author is now persisted in awless log using the caller identity\n- [#93](https://github.com/wallix/awless/issues/93): Supporting EC2 tags: syncing locally; filtering in `awless list` with --tag, --tag-value, --tag-key\n- [#84](https://github.com/wallix/awless/issues/84): Create AMI by importing VM image from S3: `awless import image bucket=my-bucket s3object=my-object`. Add template to create AMI from local VM file (OVA, VMDK ...): `awless run repo:upload_image`.\n- Listing pending import image tasks with `awless list importimagetasks`\n- Deleting images and optionally its related snapshots `awless delete image delete-snapshots=true`\n- Create/Update/Delete login profiles (AWS Console credentials): `awless create/update/delete loginprofile username=...`\n- Autowrapping results in tables when too long for `awless list`. No longer truncate results in `--format csv/tsv/json`\n- Adjust the width of table columns to the terminal width in `awless show`\n- Using local EC2 metadata to set region when installing awless on an EC2 instance\n- [#94](https://github.com/wallix/awless/issues/94): Add short flags for `--aws-profile`: `-p` and `--aws-region`: `-r`\n\n### Bugfixes\n\n- Listing in CSV: remove extra spaces; proper listing in TSV (only 1 tab separator)\n- Avoid double sync on first install due to pre defined default region value us-east-1\n- [#92](https://github.com/wallix/awless/issues/92): Impossible to set a region in config when `aws.region` was empty\n- [#89](https://github.com/wallix/awless/issues/89): Fix `awless whoami` when using STS credentials.\n\n## v0.0.23 [2017-05-05]\n\n### Features\n\n- Create and attach role to a user or resource (instance, ...). See an [example](https://github.com/wallix/awless-templates#role-for-resource)\n- Get my IP as seen by AWS: `awless whoami --ip-only`. Example: `awless create securitygroup ... cidr=$(awless whoami --ip-only)/32 ...`\n- [#86](https://github.com/wallix/awless/issues/86): SSH using private IP with `--private` flag. Thanks @padilo.\n- `awless ssh` now checks the remote host public key before connecting. Check can be disabled with the (insecure) `--disable-strict-host-keychecking` flag.\n- [#74](https://github.com/wallix/awless/issues/74): support of encrypted SSH keys for generation `awless create keypair encrypted=true` and in `awless ssh`.\n- Better documentation of [awless-templates](https://github.com/wallix/awless-templates); listing remote templates in awless with `awless run --list`.\n- Friendlier (using units: B, K, M, G) display for storage size (s3objects, volumes, lambda functions)\n- Better help for template parameters (ex: `awless create loadbalancer -h`)\n- Create/delete and list Lambda functions: `awless list functions` / `awless create/delete function`\n- Create/delete/attach/detach and list elastic IPs: `awless list elasticips` / `awless create/delete/attach/detach elasticip`\n- Create/delete and list volume snapshots: `awless list snapshots` / `awless create/delete snapshot`\n- Create/delete and list autoscaling launch configurations, scaling policies and scaling groups: `awless create/delete launchconfiguration/scalingpolicy/scalinggroup`. See an [example](https://github.com/wallix/awless-templates/#group-of-instances-scaling-with-cpu-consumption)\n- Create/delete/start/stop/attach/detach and list cloudwatch alarms. List cloudwatch metrics: `awless list alarms/metrics`\n- List EC2 images (AMIs) of which you are the owner: `awless list images`\n- Copy an EC2 image from a given region to the current region: `awless copy image name=... source-id=... source-region=...`\n- List your IAM access keys: `awless list accesskeys`\n\n### Bugfixes\n\n- Update SSH library to fix [CVE-2017-3204](http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=2017-3204).\n- Take the file name rather than full path as default name when uploading a s3object\n- Correctly create repo on first install on machine with git not installed\n\n## v0.0.22 [2017-04-13]\n\n### Features\n\n- Amazon [**userdata**](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) support. Give the data as local file or remote http file resource. Ex: `awless create instance userdata=/tmp/mydata.sh ...` or `awless create instance userdata=https://gist.github.com/jsmith/5f58272fa5406`.\n- Global rename of `storageobject` to `s3object` for shorter typing in CLI.\n- awless model/storing is now full RDF ;). Allow exploration of all your infra in RDF tools and ontology editor (Ex: [Protege](http://protege.stanford.edu/))\n- Faster, better and simpler RDF & triples management now done through the nifty library [triplestore](https://github.com/wallix/triplestore)\n- Ability to use strings with spaces and special characters in template parameters by surrounding them with single or double quotes.\n- Loggers are now sent to the stderr file descriptor which makes easier piping and redirecting output.\n- Warn when creating an instance without access key.\n- ssh: print SSH configuration (`~/.ssh/config`) or the CLI one-liner to connect with SSH using `--print-config` or `--print-cli` flags.\n- ssh: better handle when several instances have the same name (e.g., with a running and a terminated instance)\n- ssh: more warning; provide help and context on failing connections\n- Manage properly secgroups on instances with `awless attach/detach secgroup id=... instance=@my-instance`\n- Logging more info when running templates\n\n### Bugfixes\n\n- `awless whoami` now supports displaying info for `root` user and user with org path\n- Use `securitygroup` rather than `group` in templates, when appropriate.\n- Use `keypair` rather than `key` in templates, when appropriate.\n- Fix the fact you could not attach multiple security groups to an instance\n- Reverting the creation of a load balancer now waits the deletion of its network interfaces\n\n## v0.0.21 [2017-03-23]\n\n### Features\n\n- `awless whoami` now returns your identity, your attached (i.e. managed), inlined and group policies\n- Rudimentary security groups port scanner inspector via `awless inspect -i port_scanner`\n- Template: compile time check of undefined or unused references\n- Run official remote templates without specifying full url: `awless run repo:create_vpc`\n- [#78](https://github.com/wallix/awless/issues/78): Show progress when uploadgin object to storage\n- [#81](https://github.com/wallix/awless/issues/81): Global force flag `--force` to bypass confirm prompt\n\n### Bugfixes\n\n- Fix regression: run templates/one-liners failed on `storageobject`, `subscription` entities\n- Filtering in `awless list --filter` now works with column types other than string\n- Users, groups and policies are now independent of the region\n- [#83](https://github.com/wallix/awless/issues/83): Syncing while offline does not clear local cloud infra\n\n## v0.0.20 [2017-03-20]\n\n### Features\n\n- Auto completion of id/name to help fill in easily any missing info before template execution\n- Better error messaging on parsing template errors\n- Infra: basic support of RDS: listing, creation and deletion of databases and database subnets:  `awless list databases/dbsubnetgroups`; `awless create/delete database/dbsubnetgroup`\n- Infra: attach/detach an `instance` to a `targetgroup`\n- Infra: delete tag: `awless delete tag`\n- Access: create an AWS access key for a user\n- DNS: allow to revert creation/deletion of records\n- [#80](https://github.com/wallix/awless/issues/80) DNS: return the ChangeInfo id when creating/deleting a record\n\n### Bugfixes\n\n- [#79](https://github.com/wallix/awless/issues/79): `awless list records` do not add new lines between records.\n- Better compute table columns width to adjust the number of columns to display exactly to the terminal width.\n\n## v0.0.19 [2017-03-16]\n\n### Features\n\n- [#76](https://github.com/wallix/awless/issues/76): Show private IP and availability zones when listing instances.\n- Run remote template when path prefixed with `http`. Ex: `awless run http://github.com/wallix/awless-templates/...`\n- Fetch more instances properties when showing instances (ex: network interfaces, public and private DNS, Root device type and name...)\n- DNS: listing Route53 zones and records `awless list zones/records`\n- DNS: basic creation/deletion of Route53 zones and records `awless create/delete zone/record`\n- Infra: detach EBS volumes `awless detach volume`\n- Config: enable/disable the syncing of Route53 service `awless config set aws.dns.sync`\n- All listing with default format are now Markdown table compatible. \n- Better display of `awless show`. Added `--siblings` flag to display exhaustively all siblings\n- Reverse the sorting order when listing instances sorted by \"up since\"\n\n### Bugfixes\n\n- Fix `awless show` to properly show relations between groups and users\n\n## 0.0.18 [2017-03-13]\n\n### Features\n\n- infra: support the creation/deletion of ELBv2 loadbalancers, listeners and target groups: `awless create loadbalancer/listener/targetgroup`\n- infra: add tag `Name` to subnets.\n- Format `tsv` supported when listing: `awless list subnets --format tsv`\n- Pricer inspector now resolves prices for any regions: `awless inspect -i pricer`\n\n### Bugfixes\n\n- Fix alias, required and extra params parsing in template runs\n\n## 0.0.17 [2017-03-09]\n\nIf you have any data or config issues, you can run `rm -Rf ~/.awless/` to start with a fresh install.\n\n### Features\n\n- [#65](https://github.com/wallix/awless/issues/65): `awless ssh`: use existing SSH client if available, otherwise fallback on builtin SSH.\n- `awless show` resolves automatically on id, name or arn without any prefixing (previously it was '@')\n- [#47](https://github.com/wallix/awless/issues/47): Enable/disable sync per services or resources through config. Ex: `awless config set aws.notification.sync false`, `awless config set  aws.storage.storageobject.sync true`.\n- [#55](https://github.com/wallix/awless/issues/55): Dynamically change AWS region/profile with global flags `--aws-region us-west-1` or `--aws-profile myprofile`.\n- [#73](https://github.com/wallix/awless/issues/73): `AWS_DEFAULT_REGION` env variable now loaded in `awless`. It takes precedence over `aws.region`.\n- [#73](https://github.com/wallix/awless/issues/73): `AWS_DEFAULT_PROFILE` env variable now loaded in `awless`. It takes precedence over `aws.profile`.\n- Better output of `awless config list` (doc per variable, etc.).\n- Global default menu with clearer one-liner display.\n- Simplification of the templating engine using decoupled compile passes.\n- Config setters now provide dialogs (ex: `awless config set instance.type` or `awless config set aws.region`).\n- [#54](https://github.com/wallix/awless/issues/54): `awless ssh`: specify the keyfile to use with `-i /path/toward/key` flag.\n- [#64](https://github.com/wallix/awless/issues/64): `awless ssh`: columns and lines automatically adapt to terminal with/height.\n\n- Attach/detach policy to user/group (see [wiki examples](https://github.com/wallix/awless/wiki/Examples))\n- Attach/detach user to group (see [wiki examples](https://github.com/wallix/awless/wiki/Examples))\n- List AWS load balancers, target groups and listeners with `awless list loadbalancers/targetgroups/listeners`. Show their relations with, e.g. `awless show LOAD_BALANCER`.\n\n### Bugfixes\n\n- [#12](https://github.com/wallix/awless/issues/12): Support AWS pagination when fetching resources in AWS IAM.\n- Template parsing: allow digits in refs; allow regular chars in alias declaration\n- Template: all aliases now resolves correctly from file or CLI. Ex: `awless create instance subnet=@my-subnet`\n\n## 0.0.16 [2017-03-01]\n\n### Features\n\n- Allow simple fuzzy search for listing filters. Ex: `awless list instances --filter state=run`\n- Revert: waiting instance termination when deleting a vpc/subnet/instance hierarchy.\n\n### Bugfixes\n\n- Fix regression: timeout too low for HTTP requests with AWS.\n\n## 0.0.15 [2017-02-28]\n\nAs model/relations for resources may evolve, if you have any issues with models related commands, you can run `rm -Rf ~/.awless/aws/rdf` to start a fresh RDF model.\n\n### Features\n\n- [#6](https://github.com/wallix/awless/issues/6): Create Linux installer shell script: `curl https://raw.githubusercontent.com/wallix/awless/master/getawless.sh | bash`\n- [#42](https://github.com/wallix/awless/issues/42), [#60](https://github.com/wallix/awless/issues/60), [#66](https://github.com/wallix/awless/issues/66): Better load AWS credentials (support profile credentials, MFA and crossaccount profile access)\n- [#32](https://github.com/wallix/awless/issues/32): Basic support of [SNS](https://aws.amazon.com/sns/) (CRUD for topics and subscriptions)\n- [#32](https://github.com/wallix/awless/issues/32): Basic support of [SQS](https://aws.amazon.com/sqs/) (CRUD for queues)\n- [#53](https://github.com/wallix/awless/issues/53): Filter results in listings. Ex: `awless ls instances --filter state=running,\"Access Key\"=my-key` or the equivalent `awless list instances --filter state=running --filter \"Access Key\"=my-key`\n- Better help menus by splitting one-liner template commands from general commands\n- Run template: better dialog and remove noisy info\n- Template validation: notify on unexpected params; check names unicity against local graph\n- Log contextual error instead of hard failure when user has no rights to sync a service\n\n### Bugfixes\n\n- [#57](https://github.com/wallix/awless/issues/57): Properly fetch buckets when they are in the `us-east-1` region.\n- [#12](https://github.com/wallix/awless/issues/12): Support AWS pagination when fetching resources in AWS SNS and EC2.\n\n## 0.0.14 [2017-02-21]\n\nAs model/relations for resources may evolve, if you have any issues with models related commands, you can run `rm -Rf ~/.awless/aws/rdf` to start a fresh RDF model.\n\n### Features\n\n- [#39](https://github.com/wallix/awless/issues/38), [#38](https://github.com/wallix/awless/issues/33): Remove data collection & sending\n- [#33](https://github.com/wallix/awless/issues/33): Ability to set AWS profile using `aws.profile` config key\n- Better output for `awless sync`\n- `awless ls` now an alias for `awless list`\n\n### Bugfixes\n\n- [#44](https://github.com/wallix/awless/issues/44): Fetch only the S3 buckets and related objects of the current region.\n- [#52](https://github.com/wallix/awless/issues/52), [#34](https://github.com/wallix/awless/issues/34): Properly fetch route tables, even if a route contains several destinations.\n- [#37](https://github.com/wallix/awless/issues/37): Load the region from database when initializing cloud services rather than `awless` environment.\n- [#56](https://github.com/wallix/awless/issues/56): Do not require a VPC as parent of security groups nor route table.\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0087890625,
          "content": "awless.io"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 7.869140625,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  name = \"github.com/aws/aws-sdk-go\"\n  packages = [\n    \"aws\",\n    \"aws/awserr\",\n    \"aws/awsutil\",\n    \"aws/client\",\n    \"aws/client/metadata\",\n    \"aws/corehandlers\",\n    \"aws/credentials\",\n    \"aws/credentials/ec2rolecreds\",\n    \"aws/credentials/endpointcreds\",\n    \"aws/credentials/stscreds\",\n    \"aws/defaults\",\n    \"aws/ec2metadata\",\n    \"aws/endpoints\",\n    \"aws/request\",\n    \"aws/session\",\n    \"aws/signer/v4\",\n    \"awstesting/mock\",\n    \"internal/shareddefaults\",\n    \"private/protocol\",\n    \"private/protocol/ec2query\",\n    \"private/protocol/json/jsonutil\",\n    \"private/protocol/jsonrpc\",\n    \"private/protocol/query\",\n    \"private/protocol/query/queryutil\",\n    \"private/protocol/rest\",\n    \"private/protocol/restjson\",\n    \"private/protocol/restxml\",\n    \"private/protocol/xml/xmlutil\",\n    \"service/acm\",\n    \"service/acm/acmiface\",\n    \"service/applicationautoscaling\",\n    \"service/applicationautoscaling/applicationautoscalingiface\",\n    \"service/autoscaling\",\n    \"service/autoscaling/autoscalingiface\",\n    \"service/cloudformation\",\n    \"service/cloudformation/cloudformationiface\",\n    \"service/cloudfront\",\n    \"service/cloudfront/cloudfrontiface\",\n    \"service/cloudwatch\",\n    \"service/cloudwatch/cloudwatchiface\",\n    \"service/configservice\",\n    \"service/ec2\",\n    \"service/ec2/ec2iface\",\n    \"service/ecr\",\n    \"service/ecr/ecriface\",\n    \"service/ecs\",\n    \"service/ecs/ecsiface\",\n    \"service/elbv2\",\n    \"service/elbv2/elbv2iface\",\n    \"service/iam\",\n    \"service/iam/iamiface\",\n    \"service/lambda\",\n    \"service/lambda/lambdaiface\",\n    \"service/rds\",\n    \"service/rds/rdsiface\",\n    \"service/route53\",\n    \"service/route53/route53iface\",\n    \"service/s3\",\n    \"service/s3/s3iface\",\n    \"service/sns\",\n    \"service/sns/snsiface\",\n    \"service/sqs\",\n    \"service/sqs/sqsiface\",\n    \"service/sts\",\n    \"service/sts/stsiface\"\n  ]\n  revision = \"f62f7b7c5425f2b1a630932617477bdeac6dc371\"\n  version = \"v1.12.55\"\n\n[[projects]]\n  name = \"github.com/boltdb/bolt\"\n  packages = [\".\"]\n  revision = \"2f1ce7a837dcb8da3ec595b1dac9d0632f0f99e8\"\n  version = \"v1.3.1\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/boombuler/barcode\"\n  packages = [\n    \".\",\n    \"qr\",\n    \"utils\"\n  ]\n  revision = \"5a7395f62784d17e29056e861ebd448ac1096261\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/chzyer/readline\"\n  packages = [\".\"]\n  revision = \"f6d7a1f6fbf35bbf9beb80dc63c56a29dcfb759f\"\n\n[[projects]]\n  name = \"github.com/fatih/color\"\n  packages = [\".\"]\n  revision = \"570b54cabe6b8eb0bc2dfce68d964677d63b5260\"\n  version = \"v1.5.0\"\n\n[[projects]]\n  name = \"github.com/go-ini/ini\"\n  packages = [\".\"]\n  revision = \"32e4c1e6bc4e7d0d8451aa6b75200d19e37a536a\"\n  version = \"v1.32.0\"\n\n[[projects]]\n  name = \"github.com/gorilla/context\"\n  packages = [\".\"]\n  revision = \"1ea25387ff6f684839d82767c1733ff4d4d15d0a\"\n  version = \"v1.1\"\n\n[[projects]]\n  name = \"github.com/gorilla/mux\"\n  packages = [\".\"]\n  revision = \"7f08801859139f86dfafd1c296e2cba9a80d292e\"\n  version = \"v1.6.0\"\n\n[[projects]]\n  name = \"github.com/inconshreveable/mousetrap\"\n  packages = [\".\"]\n  revision = \"76626ae9c91c4f2a10f34cad8ce83ea42c93bb75\"\n  version = \"v1.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/jbenet/go-context\"\n  packages = [\"io\"]\n  revision = \"d14ea06fba99483203c19d92cfcd13ebe73135f4\"\n\n[[projects]]\n  name = \"github.com/jmespath/go-jmespath\"\n  packages = [\".\"]\n  revision = \"0b12d6b5\"\n\n[[projects]]\n  name = \"github.com/mattn/go-colorable\"\n  packages = [\".\"]\n  revision = \"167de6bfdfba052fa6b2d3664c8f5272e23c9072\"\n  version = \"v0.0.9\"\n\n[[projects]]\n  name = \"github.com/mattn/go-isatty\"\n  packages = [\".\"]\n  revision = \"0360b2af4f38e8d38c7fce2a9f4e702702d73a39\"\n  version = \"v0.0.3\"\n\n[[projects]]\n  name = \"github.com/mattn/go-runewidth\"\n  packages = [\".\"]\n  revision = \"9e777a8366cce605130a531d2cd6363d07ad7317\"\n  version = \"v0.0.2\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/mitchellh/ioprogress\"\n  packages = [\".\"]\n  revision = \"8163955264568045f462ae7e2d6d07b2001fc997\"\n\n[[projects]]\n  name = \"github.com/oklog/ulid\"\n  packages = [\".\"]\n  revision = \"d311cb43c92434ec4072dfbbda3400741d0a6337\"\n  version = \"v0.3.0\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/olekukonko/tablewriter\"\n  packages = [\".\"]\n  revision = \"65fec0d89a572b4367094e2058d3ebe667de3b60\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/sergi/go-diff\"\n  packages = [\"diffmatchpatch\"]\n  revision = \"1744e2970ca51c86172c8190fadad617561ed6e7\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/spf13/cobra\"\n  packages = [\".\"]\n  revision = \"b95ab734e27d33e0d8fbabf71ca990568d4e2020\"\n\n[[projects]]\n  name = \"github.com/spf13/pflag\"\n  packages = [\".\"]\n  revision = \"e57e3eeb33f795204c1ca35f56c44f83227c6e66\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  name = \"github.com/src-d/gcfg\"\n  packages = [\n    \".\",\n    \"scanner\",\n    \"token\",\n    \"types\"\n  ]\n  revision = \"f187355171c936ac84a82793659ebb4936bc1c23\"\n  version = \"v1.3.0\"\n\n[[projects]]\n  name = \"github.com/wallix/awless-scheduler\"\n  packages = [\n    \"client\",\n    \"model\"\n  ]\n  revision = \"e49d8194851286ac48b298155cef00aa9fa7534d\"\n  version = \"v0.0.6\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/wallix/triplestore\"\n  packages = [\".\"]\n  revision = \"4099dd913851642f2c0b71f9c1a0c6887748849c\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"github.com/xanzy/ssh-agent\"\n  packages = [\".\"]\n  revision = \"ba9c9e33906f58169366275e3450db66139a31a9\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n  packages = [\n    \"curve25519\",\n    \"ed25519\",\n    \"ed25519/internal/edwards25519\",\n    \"ssh\",\n    \"ssh/agent\",\n    \"ssh/knownhosts\",\n    \"ssh/terminal\"\n  ]\n  revision = \"0fcca4842a8d74bfddc2c96a073bd2a4d2a7a2e8\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/net\"\n  packages = [\"context\"]\n  revision = \"d866cfc389cec985d6fda2859936a575a55a3ab6\"\n\n[[projects]]\n  branch = \"master\"\n  name = \"golang.org/x/sys\"\n  packages = [\n    \"unix\",\n    \"windows\"\n  ]\n  revision = \"28a7276518d399b9634904daad79e18b44d481bc\"\n\n[[projects]]\n  name = \"gopkg.in/src-d/go-billy.v3\"\n  packages = [\n    \".\",\n    \"helper/chroot\",\n    \"helper/polyfill\",\n    \"osfs\",\n    \"util\"\n  ]\n  revision = \"c329b7bc7b9d24905d2bc1b85bfa29f7ae266314\"\n  version = \"v3.1.0\"\n\n[[projects]]\n  name = \"gopkg.in/src-d/go-git.v4\"\n  packages = [\n    \".\",\n    \"config\",\n    \"internal/revision\",\n    \"plumbing\",\n    \"plumbing/cache\",\n    \"plumbing/filemode\",\n    \"plumbing/format/config\",\n    \"plumbing/format/diff\",\n    \"plumbing/format/gitignore\",\n    \"plumbing/format/idxfile\",\n    \"plumbing/format/index\",\n    \"plumbing/format/objfile\",\n    \"plumbing/format/packfile\",\n    \"plumbing/format/pktline\",\n    \"plumbing/object\",\n    \"plumbing/protocol/packp\",\n    \"plumbing/protocol/packp/capability\",\n    \"plumbing/protocol/packp/sideband\",\n    \"plumbing/revlist\",\n    \"plumbing/storer\",\n    \"plumbing/transport\",\n    \"plumbing/transport/client\",\n    \"plumbing/transport/file\",\n    \"plumbing/transport/git\",\n    \"plumbing/transport/http\",\n    \"plumbing/transport/internal/common\",\n    \"plumbing/transport/server\",\n    \"plumbing/transport/ssh\",\n    \"storage\",\n    \"storage/filesystem\",\n    \"storage/filesystem/internal/dotgit\",\n    \"storage/memory\",\n    \"utils/binary\",\n    \"utils/diff\",\n    \"utils/ioutil\",\n    \"utils/merkletrie\",\n    \"utils/merkletrie/filesystem\",\n    \"utils/merkletrie/index\",\n    \"utils/merkletrie/internal/frame\",\n    \"utils/merkletrie/noder\"\n  ]\n  revision = \"8ddbecf782c2e340fd85bb4ba4d00dc73d749f87\"\n  version = \"v4.0.0-rc13\"\n\n[[projects]]\n  name = \"gopkg.in/warnings.v0\"\n  packages = [\".\"]\n  revision = \"ec4a0fea49c7b46c2aeb0b51aac55779c607e52b\"\n  version = \"v0.1.2\"\n\n[[projects]]\n  branch = \"v2\"\n  name = \"gopkg.in/yaml.v2\"\n  packages = [\".\"]\n  revision = \"c95af922eae69f190717a0b7148960af8c55a072\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  inputs-digest = \"c16569f26e1430b337ef16bbc9e19239de261ca85cc54b76ff67116e4eacabc7\"\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 1.212890625,
          "content": "[prune]\n   go-tests = true\n   # we only prune test as other options will remove from aws-sdk-go \n   # what we nedd to run `make generate` on the project\n   # see https://github.com/golang/dep/issues/1561\n\n[[constraint]]\n  name = \"github.com/aws/aws-sdk-go\"\n  version = \"1.10.27\"\n\n[[constraint]]\n  name = \"github.com/boltdb/bolt\"\n  version = \"1.3.1\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/chzyer/readline\"\n \n[[constraint]]\n  name = \"github.com/fatih/color\"\n  version = \"1.5.0\"\n\n[[constraint]]\n  name = \"github.com/gorilla/mux\"\n  version = \"1.4.0\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/mitchellh/ioprogress\"\n\n[[constraint]]\n  name = \"github.com/oklog/ulid\"\n  version = \"0.3.0\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/olekukonko/tablewriter\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/spf13/cobra\"\n\n[[constraint]]\n  name = \"github.com/wallix/awless-scheduler\"\n  version = \"0.0.6\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/wallix/triplestore\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"golang.org/x/crypto\"\n\n[[constraint]]\n  name = \"gopkg.in/src-d/go-git.v4\"\n  version = \"=4.0.0-rc13\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/boombuler/barcode\""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.2373046875,
          "content": "test:\n\t@echo Running tests (with -race flag on) \n\t@go test ./... -race\n\ngenerate:\n\t@echo Generating commands code: runtime, doc, etc.\n\t@go generate gen/aws/generators/main.go\n\nbuild: generate test\n\t@echo Building application binary\n\t@go build\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.4521484375,
          "content": "\n\n[![Build Status](https://api.travis-ci.org/wallix/awless.svg?branch=master)](https://travis-ci.org/wallix/awless)\n[![Go Report Card](https://goreportcard.com/badge/github.com/wallix/awless)](https://goreportcard.com/report/github.com/wallix/awless)\n\n<img src=\"https://user-images.githubusercontent.com/808274/33351381-5b9a0d00-d458-11e7-91ed-cf7ada7237c1.png\" alt=\"terminal icon\" width=\"48\"> `awless` is a powerful, innovative and small surface command line interface (CLI) to manage Amazon Web Services.\n\n[Twitter](http://twitter.com/awlessCLI) | [Wiki](https://github.com/wallix/awless/wiki) | [Changelog](https://github.com/wallix/awless/blob/master/CHANGELOG.md#readme)\n\n# Why awless\n\n`awless` stands out by having the following characteristics:\n\n- small and hierarchical set of commands\n- a simple/powerful text [templating language](https://github.com/wallix/awless/wiki/Templates) to create and **revert** fully-fledged infrastructures \n- wrapping/composing AWS API calls when necessary to enrich behaviour. Ex: ensure smart defaults, security best practices, etc. \n- local log of all your cloud modifications done through `awless` to list/revert past actions\n- sync to a local graph storage of your cloud representation \n- exploration of your cloud infrastructure and resources interrelations, **even offline** using the local graph storage\n- clearer and flexible terminal output's with: numerous formats (machine/human friendly), enriched resources's properties/relations when feasible\n- connect easily using awless' **smart SSH** to your private & public instances\n\nFor more read our [FAQ](#faq) below (how `awless` compares to other tools, etc.)\n\n# Install\n\nChoose one of the following options:\n\n1. On macOS, use [homebrew](http://brew.sh):  `brew tap wallix/awless; brew install awless`\n2. With `curl` (macOS/Linux), run: `curl https://raw.githubusercontent.com/wallix/awless/master/getawless.sh | bash`\n3. Download the latest `awless` binaries (Windows/Linux/macOS) [from Github](https://github.com/wallix/awless/releases/latest)\n4. If you have Golang already installed, install from the source with: `go get -u github.com/wallix/awless`\n\nIf you have previously used the AWS CLI or aws-shell, you don't need to configure anything! Your config will be automatically loaded (i.e. ~/.aws/{credentials,config}) and `awless` will prompt for any missing info (more at our [getting started](https://github.com/wallix/awless/wiki/Getting-Started)).\n\n# Main features\n\n<p align=\"center\">\n  <a href=\"https://raw.githubusercontent.com/wiki/wallix/awless/apng/awless-demo.png\"><img src=\"https://raw.githubusercontent.com/wiki/wallix/awless/apng/awless-demo.png\" alt=\"video of a few awless commands\"></a>\n<br/>\n<em>Note that the video above is in <a href=\"https://en.wikipedia.org/wiki/APNG\">APNG</a> and requires a recent browser.</em>\n</p>\n\n- **Aliasing of resources through their natural name** so you don't have to always use cryptic ids that are impossible to remember\n- `awless show` : Explore the  properties, relations, dependencies of a specific resource (even offline thanks to the sync) given only a *name* (or id/arn).\n\n      $ awless show jsmith --local\n\n- `awless list` : Clear and easy listing of multi-region cloud resources (subnets, instances, users, buckets, records, etc.) on AWS EC2, IAM, S3, RDS, AutoScaling, SNS, SQS, Route53, CloudWatch, CloudFormation, Lambda, etc. Listing filters via *resources properties* or *resources tags*.\n\n      $ awless list instances --sort uptime --local\n      $ awless list users --format csv --columns name,created\n      $ awless list volumes --filter state=use --filter type=gp2\n      $ awless list volumes --tag-value Purchased\n      $ awless ls vpcs --tag-key Dept --tag-key Internal --format tsv\n      $ awless ls instances --tag Env=Production,Dept=Marketing\n      $ awless ls instances --filter state=running,type=micro --format json\n      $ awless ls s3objects --filter bucket=pdf-bucket -r us-west-2\n      $ ...\n      (see awless ls -h)\n\n- `awless run` : Create, update and delete complex infrastructures with smart defaults and sound auto-complete through awless templates.\n\n      $ awless run ~/templates/my-infra.aws\n      $ awless run https://raw.githubusercontent.com/wallix/awless-templates/master/linux_bastion.aws\n      etc.\n\n- **Hundreds of powerful CRUD CLI one-liners** integrated in the awless templating engine:\n\n      $ awless create instance -h\n      $ awless create vpc -h\n      $ awless attach policy -h\n      $ ...\n      (see awless -h)\n\n- `awless log` : Detailled and easy reporting of all the CLI template executions\n- `awless revert` : Revert of executed templates and resources creation\n- Create instances straight from a distro name. No need to know the region or AMI ;) (_free tier community bare distro only_, see `awless create instance -h`)\n\n      $ awless create instance distro=debian\n      $ awless create instance distro=coreos\n      $ awless create instance distro=redhat::7.2 type=t2.micro\n      $ awless create instance distro=debian:debian:jessie lock=true\n      $ awless create instance distro=amazonlinux:amzn2\n      etc.\n\n- Leveraging AWS `userdata` to provision instance on creation from remote (i.e http) or local scripts: `awless create instance ... userdata=/home/john/...` \n- `awless ssh` : Clean and simple SSH to public & private instances using only a name\n\n      $ awless ssh my-production-instance\n      $ awless ssh redis-prod --through jump-server\n      $ awless ssh 34.215.29.221\n      $ awless ssh db-private --private\n      $ awless ssh 172.31.77.151 --port 2222 --through my-proxy --through-port 23\n      $ ...\n      (see awless ssh -h)\n\n- `awless switch` : Switch easily between AWS accounts (i.e. profile) and regions\n\n      $ awless switch admin eu-west-2\n      $ awless switch us-west-1\n      $ awless switch mfa\n      etc.\n\n- `awless` transparently syncs cloud resources locally to a graph representation in order for the CLI to leverage data and their relations in other awless commands and in an offline manner ([more on the sync](https://github.com/wallix/awless/wiki/Getting-Started#sync))\n- `awless sync` : Explicit and manual command to fetch & store resources locally. Then query & inspect your cloud offline\n- Output listing formats either human (**default display is Markdown-compatible tables**) or machine readable (csv, tsv, json, ...): `--format`\n- `awless inspect` : Leverage **experimental** and community inspectors which are interface implementation utilities to run analysis on your cloud resources graphs\n\n      $ awless inspect -i bucket_sizer\n      (see awless inspect -h)\n\n- `awless completion` : CLI autocompletion for Unix/Linux's bash and zsh \n\n# Getting started\n\nTake the tour at [Getting Started (wiki)](https://github.com/wallix/awless/wiki/Getting-Started) or read the [introductory blog post about awless](https://medium.com/@hbbio/awless-io-a-mighty-cli-for-aws-a0d48bdb59a4).\n\nMore articles:\n\n   - [Simplified Multi-Factor Authentication for AWS](https://medium.com/@awlessCLI/simplified-multi-factor-authentication-for-aws-d703e8d9f332)\n   - [Simplified user management for AWS](https://medium.com/@awlessCLI/simplified-user-management-for-aws-6f828ccab387)\n   - [InfoWorld: Production-grade deployment of WordPress](https://www.infoworld.com/article/3230547/cloud-computing/awless-tutorial-try-a-smarter-cli-for-aws.html)\n   - [Easy create & tear down of a multi-AZ CockroachDB cluster](https://github.com/wallix/awless-templates/tree/master/cockroachdb)\n   - [Deploy Vuls.io to an AWS instance and scan for vulnerabilities](https://github.com/wallix/awless-templates/tree/master/vuln_scanners)\n\n# Awards\n\n- [Top 50 Developer Tools of 2017](https://stackshare.io/posts/top-developer-tools-2017)\n- [InfoWorld Bossie Awards 2017](https://www.infoworld.com/article/3227920/cloud-computing/bossie-awards-2017-the-best-cloud-computing-software.html#slide12)\n\n# FAQ\n\nHere is a compilation of the question we often answer (thanks for asking them so that we can make things clearer!):\n\n**There are already some AWS CLIs. What is `awless` unique approach?**\n\nThree things that differentiates `awless` from other AWS CLIs:\n\n* It has its own **compiled and very simple templating language** to build AWS infrastructures.\n* Commands are made of _VERB + ENTITY [+ param=value]_ and are actually valid lines of the template language. \n* It transparently syncs to a local graph a representation of the cloud resources and their relations.\n\nLeveraging and combining the points above, `awless` lays some strong foundations for plenty of current/future features/characteristic such as:\n\n- Wrapping AWS API calls to enrich them with before/after behaviour when interacting with the cloud\n- Having a small and hierarchical set of commands to intuitively interact with AWS\n- Enriching listing of resources using the local model and relations that are not calculated with other CLIs\n- Referencing and finding resources quickly avoiding cryptic IDs in favor of names, etc.\n- Exposing in the terminal relation between resources: lineage, siblings, etc.\n- Performing local analysis of your cloud\n- Having a smart SSH to easily connect to instances\n- etc.\n\n**How do you create infrastructure with `awless`?**\n\nYou build infrastructure using `template files` or `command one-liners` that get compiled and run through `awless` builtin engine. See [what the templating language looks like](https://github.com/wallix/awless-templates/blob/master/cockroachdb/cockroach_insecure_cluster.aws). Learn [more about the way templates work](https://github.com/wallix/awless/wiki/Templates)\n\nNote that all your actions against the cloud are logged. Templates are revertible/rollbackable.\n\n**How does `awless` compares to `aws-shell` or `saws`?**\n\n(Points above should also help answering this question)\n\n`aws-shell` and `saws` are directly mapped to the official AWS CLI. Their **only** objective is to make you productive and help you manage exhaustively the sheer number of AWS services, options, etc.\n\n`awless` addresses this UI/productivity concern differently: small and hierarchical set of commands; favoring enriched listing with relations showing over AWS exhaustive outputting of properties; more useful human/machine formats.\n\nThe main point is that **the UI/productivity concern is just a feature of awless and not its primary or only one**, so there is much more to the tool.\n\nAlso `aws-shell` and `saws` are exhaustive in their support of AWS services. `awless` is so far more infrastructure centric, with an emphasis on enriching the information about your real infrastructure. `awless` is able to add any new AWS service quickly if that fits and make sense (see wiki on how to add a new AWS service).\n\n**How does `awless` compares to Terraform?**\n\nTerraform is a great product! `awless` is much younger than Terraform and Terraform is much broader in scope. \n\nThe approach is different though. When creating insfrastructure `awless`:\n\n- favors simplicity with a straight forward, compiled and simple deployment language\n- employs an all-or-nothing deployment: do not keep state, etc.\n- `awless` does provide a rollback on any ran template.\n\n**Does `awless` handles state when creating infrastructure (i.e. keep track of the changes)?**\n\nQuoting from a [logz.io/blog entry](https://logz.io/blog/terraform-ansible-puppet/): _\"Terraform is an amazing tool but a major challenge is managing the state file. Whenever you apply changes to your infrastructure, the entire managed body of code and created objects are tracked in the Terraform State file (.tfstate), which can reach hundreds of thousands of lines and must be managed carefully lest you incur large merge conflicts or unwanted resource changes\"_, Ofer Velich.\n\nAs for now with `awless`, we have taken a different path: `awless` does not keep state of your cloud; it is more of an all-or-nothing deployment solution. \n\nNote that `awless` logs (through rich and revertable logs) all your actions against the cloud and that you can revert any template ran.\n\n# About\n\n`awless` is an open source project created by Henri Binsztok, Quentin Bourgerie, Simon Caplette and François-Xavier Aguessy at WALLIX.\n`awless` is released under the Apache License and sponsored by [Wallix](https://github.com/wallix).\n\n    Disclaimer: Awless allows for easy resource creation with your cloud provider;\n    we will not be responsible for any cloud costs incurred (even if you create a \n    million instances using awless templates).\n\nContributors are welcome! Please head to [Contributing (wiki)](https://github.com/wallix/awless/wiki/Contributing) to learn more.\nNote that `awless` uses [triplestore](https://github.com/wallix/triplestore) another project developped at WALLIX.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "acceptance",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "console",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "fetch",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen",
          "type": "tree",
          "content": null
        },
        {
          "name": "getawless.sh",
          "type": "blob",
          "size": 1.4375,
          "content": "#!/bin/bash\nset -e\n\n# Download latest awless binary from Github\n\nARCH_UNAME=`uname -m`\nif [[ \"$ARCH_UNAME\" == \"x86_64\" ]]; then\n\tARCH=\"amd64\"\nelse\n\tARCH=\"386\"\nfi\n\nEXT=\"tar.gz\"\n\nif [[ \"$OSTYPE\" == \"linux-gnu\" ]]; then\n\tOS=\"linux\"\nelif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n\tOS=\"darwin\"\nelif [[ \"$OSTYPE\" == \"win32\" ]] || [[ \"$OSTYPE\" == \"cygwin\" ]] || [[ \"$OSTYPE\" == \"msys\" ]] ; then\n\tOS=\"windows\"\n\tEXT=\"zip\"\nelse\n\techo \"No awless binary available for OS '$OSTYPE'. You may want to use go to install awless with 'go get -u github.com/wallix/awless'\"\n  exit\nfi\n\nLATEST_VERSION=`curl -fs https://updates.awless.io | grep -oE \"v[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\"`\n\nFILENAME=awless-$OS-$ARCH.$EXT\n\nDOWNLOAD_URL=\"https://github.com/wallix/awless/releases/download/$LATEST_VERSION/$FILENAME\"\n\necho \"Downloading awless from $DOWNLOAD_URL\"\n\nif ! curl --fail -o $FILENAME -L $DOWNLOAD_URL; then\n    exit\nfi\n\necho \"\"\necho \"extracting $FILENAME to ./awless\"\n\nif [[ \"$OS\" == \"windows\" ]]; then\n\techo 'y' | unzip $FILENAME 2>&1 > /dev/null\nelse\n\ttar -xzf $FILENAME\nfi\n\necho \"removing $FILENAME\"\nrm $FILENAME\nchmod +x ./awless\n\necho \"\"\necho \"awless successfully installed to ./awless\"\necho \"\"\necho \"don't forget to add it to your path, with, for example, 'sudo mv awless /usr/local/bin/' \"\necho \"\"\necho \"then, for autocompletion, run:\"\necho \"    [bash] echo 'source <(awless completion bash)' >> ~/.bashrc\"\necho \"    OR\"\necho \"    [zsh]  echo 'source <(awless completion zsh)' >> ~/.zshrc\"\n"
        },
        {
          "name": "graph",
          "type": "tree",
          "content": null
        },
        {
          "name": "inspect",
          "type": "tree",
          "content": null
        },
        {
          "name": "logger",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.640625,
          "content": "/*\nCopyright 2017 WALLIX\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport \"github.com/wallix/awless/commands\"\n\nfunc main() {\n\tcommands.RootCmd.Execute()\n}\n"
        },
        {
          "name": "release.go",
          "type": "blob",
          "size": 5.3095703125,
          "content": "// +build ignore\n\n/*\nCopyright 2017 WALLIX\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport (\n\t\"archive/tar\"\n\t\"archive/zip\"\n\t\"compress/gzip\"\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\treleaseTag = flag.String(\"tag\", \"\", \"Git tag to be released\")\n\tbrew       = flag.Bool(\"brew\", false, \"Brew build (disable zipping and build only for specify os and arch)\")\n\tbuildOS    = flag.String(\"os\", runtime.GOOS, \"The OS to build\")\n\tbuildArch  = flag.String(\"arch\", runtime.GOARCH, \"The ARCH to build\")\n)\n\nvar builds = map[string][]string{\n\t\"darwin\":  {\"amd64\"},\n\t\"linux\":   {\"386\", \"amd64\"},\n\t\"windows\": {\"386\", \"amd64\"},\n}\n\nfunc main() {\n\tflag.Parse()\n\n\tallBuild := map[string][]string{\n\t\t*buildOS: {*buildArch},\n\t}\n\n\tif *releaseTag != \"\" && !*brew {\n\t\tallBuild = builds\n\t\tprintInfo(\"RELEASING\")\n\t}\n\n\tvar wg sync.WaitGroup\n\n\tfor osname, archs := range allBuild {\n\t\tfor _, arch := range archs {\n\t\t\twg.Add(1)\n\t\t\tgo func(o, a string) {\n\t\t\t\tdefer wg.Done()\n\t\t\t\tif err := buildAndZip(o, a); err != nil {\n\t\t\t\t\tfmt.Fprintf(os.Stderr, \"%s\\n\", err)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}(osname, arch)\n\t\t}\n\t}\n\n\twg.Wait()\n}\n\nfunc buildAndZip(osname, arch string) error {\n\tenv := []string{\n\t\tfmt.Sprintf(\"GOPATH=%s\", os.Getenv(\"GOPATH\")),\n\t\tfmt.Sprintf(\"GOARCH=%s\", arch),\n\t\tfmt.Sprintf(\"GOOS=%s\", osname),\n\t}\n\n\tbuilddir, err := ioutil.TempDir(\"\", \"\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer os.RemoveAll(builddir)\n\n\tprintInfo(\"Building artefact for %s %s\", osname, arch)\n\n\tvar binName string\n\n\tswitch osname {\n\tcase \"windows\":\n\t\tbinName = \"awless.exe\"\n\tdefault:\n\t\tbinName = \"awless\"\n\t}\n\n\tartefactPath := filepath.Join(builddir, binName)\n\n\tgitRef := \"refs/heads/master\"\n\tif *releaseTag != \"\" {\n\t\tif tag, _ := runCmd(nil, \"git\", \"describe\", \"--exact-match\", \"--tags\"); strings.TrimSpace(tag) != *releaseTag {\n\t\t\treturn fmt.Errorf(\"The git repository is not at tag '%s'\", *releaseTag)\n\t\t}\n\t\tgitRef = fmt.Sprintf(\"refs/tags/%s\", *releaseTag)\n\t}\n\n\tsha, err := runCmd(nil, \"git\", \"show-ref\", \"-s\", gitRef)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tbuildFor := \"targz\"\n\tif *brew {\n\t\tbuildFor = \"brew\"\n\t} else if osname == \"windows\" {\n\t\tbuildFor = \"zip\"\n\t}\n\n\tbuildInfo := fmt.Sprintf(\"-X github.com/wallix/awless/config.buildDate=%s -X github.com/wallix/awless/config.buildSha=%s -X github.com/wallix/awless/config.buildOS=%s -X github.com/wallix/awless/config.buildArch=%s -X github.com/wallix/awless/config.BuildFor=%s\",\n\t\ttime.Now().Format(time.RFC3339),\n\t\tstrings.TrimSpace(sha),\n\t\tosname,\n\t\tarch,\n\t\tbuildFor,\n\t)\n\n\tldflags := fmt.Sprintf(\"-ldflags=-s -w %s\", buildInfo)\n\n\tif _, err := runCmd(env, \"go\", \"build\", \"-o\", artefactPath, ldflags); err != nil {\n\t\treturn err\n\t}\n\n\tswitch buildFor {\n\tcase \"brew\": //No zipping\n\t\tfmt.Println(\"DO NOT forget to update the brew bottles and formula (see homebrew-awless Github repo)!\")\n\t\treturn os.Rename(artefactPath, \"awless\")\n\tcase \"zip\":\n\t\tzipFile, err := os.OpenFile(fmt.Sprintf(\"%s-%s-%s.zip\", strings.Split(binName, \".\")[0], osname, arch), os.O_WRONLY|os.O_TRUNC|os.O_CREATE, 0600)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tw := zip.NewWriter(zipFile)\n\n\t\tf, err := w.Create(binName)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tcontent, err := ioutil.ReadFile(artefactPath)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tif _, err = f.Write(content); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\treturn w.Close()\n\tcase \"targz\":\n\t\ttarball, err := os.Create(fmt.Sprintf(\"%s-%s-%s.tar.gz\", strings.Split(binName, \".\")[0], osname, arch))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer tarball.Close()\n\n\t\tgw := gzip.NewWriter(tarball)\n\t\tdefer gw.Close()\n\n\t\ttw := tar.NewWriter(gw)\n\t\tdefer tw.Close()\n\n\t\tbinFile, err := os.Open(artefactPath)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer binFile.Close()\n\n\t\tif stat, err := binFile.Stat(); err != nil {\n\t\t\treturn err\n\t\t} else if tarHeader, err := tar.FileInfoHeader(stat, \"\"); err == nil {\n\t\t\tif err := tw.WriteHeader(tarHeader); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tif _, err := io.Copy(tw, binFile); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t\treturn nil\n\tdefault:\n\t\treturn errors.New(\"missing packaging method\")\n\t}\n}\n\ntype environment []string\n\nfunc runCmd(env environment, name string, args ...string) (string, error) {\n\tcmd := exec.Command(name, args...)\n\tcmd.Env = env\n\n\tout, err := cmd.Output()\n\tif err != nil {\n\t\tprintKo(\"error running command [%s %s] with env %v\", name, strings.Join(args, \" \"), env)\n\n\t\tif e, ok := err.(*exec.ExitError); ok {\n\t\t\tfmt.Println()\n\t\t\tfmt.Printf(\"%s\\n\", e.Stderr)\n\t\t\tfmt.Println()\n\t\t}\n\n\t\treturn string(out), err\n\t}\n\n\tprintOk(\"%s %s\", name, strings.Join(args, \" \"))\n\n\treturn string(out), nil\n}\n\nfunc printOk(s string, a ...interface{}) {\n\tfmt.Printf(\"\\033[32m[OK]\\033[m %s\\n\", fmt.Sprintf(s, a...))\n}\n\nfunc printKo(s string, a ...interface{}) {\n\tfmt.Fprintf(os.Stderr, \"\\033[31m[KO]\\033[m %s\\n\", fmt.Sprintf(s, a...))\n}\n\nfunc printInfo(s string, a ...interface{}) {\n\tfmt.Printf(\"[+] %s\\n\", fmt.Sprintf(s, a...))\n}\n"
        },
        {
          "name": "smoke_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssh",
          "type": "tree",
          "content": null
        },
        {
          "name": "sync",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}