{
  "metadata": {
    "timestamp": 1736566925024,
    "page": 499,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jedib0t/go-pretty",
      "stars": 3109,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "/.idea/\n/demo*\n/profile/\n.coverprofile\n*.swp\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at jedib0t@outlook.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2018 jedib0t\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.5869140625,
          "content": ".PHONY: all profile test\n\ndefault: test\n\nall: test bench\n\ntools:\n\tgo install github.com/fzipp/gocyclo/cmd/gocyclo@v0.5.1\n\tgo install github.com/rinchsan/gosimports/cmd/gosimports@v0.3.8\n\nbench:\n\tgo test -bench=. -benchmem\n\ncyclo:\n\tgocyclo -over 13 ./*/*.go\n\ndemo-list:\n\tgo run cmd/demo-list/demo.go\n\ndemo-progress:\n\tgo run cmd/demo-progress/demo.go\n\ndemo-table:\n\tgo run cmd/demo-table/demo.go\n\nfmt:\n\tgo fmt ./...\n\tgosimports -w .\n\nprofile:\n\tsh profile.sh\n\ntest: fmt vet cyclo\n\tgo test -cover -coverprofile=.coverprofile ./...\n\ntest-race:\n\tgo run -race ./cmd/demo-progress/demo.go\n\nvet:\n\tgo vet ./...\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.556640625,
          "content": "# go-pretty\n\n[![Go Reference](https://pkg.go.dev/badge/github.com/jedib0t/go-pretty/v6.svg)](https://pkg.go.dev/github.com/jedib0t/go-pretty/v6)\n[![Build Status](https://github.com/jedib0t/go-pretty/workflows/CI/badge.svg?branch=main)](https://github.com/jedib0t/go-pretty/actions?query=workflow%3ACI+event%3Apush+branch%3Amain)\n[![Coverage Status](https://coveralls.io/repos/github/jedib0t/go-pretty/badge.svg?branch=main)](https://coveralls.io/github/jedib0t/go-pretty?branch=main)\n[![Go Report Card](https://goreportcard.com/badge/github.com/jedib0t/go-pretty/v6)](https://goreportcard.com/report/github.com/jedib0t/go-pretty/v6)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=jedib0t_go-pretty&metric=alert_status)](https://sonarcloud.io/dashboard?id=jedib0t_go-pretty)\n\nUtilities to prettify console output of tables, lists, progress-bars, text, etc.\nwith a heavy emphasis on customization.\n\n## Usage\n\nThe current major version of this package is __v6__, and it follows the standard\noutlined [here](https://go.dev/doc/modules/version-numbers#major-version).\n\nRun `go get github.com/jedib0t/go-pretty/v6` to add this as a dependency to your\nproject, and import the packages in your code using one or more of these:\n* `github.com/jedib0t/go-pretty/v6/list`\n* `github.com/jedib0t/go-pretty/v6/progress`\n* `github.com/jedib0t/go-pretty/v6/table`\n* `github.com/jedib0t/go-pretty/v6/text`\n\n## Table\n\nPretty-print tables in a terminal with colors, nested tables and more.\n\n```\n+-----+------------+-----------+--------+-----------------------------+\n|   # | FIRST NAME | LAST NAME | SALARY |                             |\n+-----+------------+-----------+--------+-----------------------------+\n|   1 | Arya       | Stark     |   3000 |                             |\n|  20 | Jon        | Snow      |   2000 | You know nothing, Jon Snow! |\n| 300 | Tyrion     | Lannister |   5000 |                             |\n+-----+------------+-----------+--------+-----------------------------+\n|     |            | TOTAL     |  10000 |                             |\n+-----+------------+-----------+--------+-----------------------------+\n```\n\nExecute `go run github.com/jedib0t/go-pretty/v6/cmd/demo-table@latest colors` to get:\n\n<img src=\"cmd/demo-table/demo-colors.png\" alt=\"Tables with Colors within a Table in a Terminal\"/>\n\nMore details can be found here: [table/](table)\n\n## Progress\n\nTrack the Progress of one or more Tasks like downloading multiple files in\nparallel.\n\n<img src=\"progress/images/demo.gif\" alt=\"Progress Demo in a Terminal\"/>\n\nMore details can be found here: [progress/](progress)\n\n## List\n\nPretty-print lists with multiple levels/indents into ASCII/Unicode strings.\n\n```\n╭─ Game Of Thrones\n│  ├─ Winter\n│  ├─ Is\n│  ╰─ Coming\n│     ├─ This\n│     ├─ Is\n│     ╰─ Known\n╰─ The Dark Tower\n   ╰─ The Gunslinger\n```\n\nMore details can be found here: [list/](list)\n\n## Text\n\nUtility functions to manipulate text with or without ANSI escape sequences. Most\nof the functions available are used in one or more of the other packages here.\n\n   - Align text [Horizontally](text/align.go) or [Vertically](text/valign.go)\n   - [Colorize](text/color.go) text\n   - Move [cursor](text/cursor.go)\n   - [Format](text/format.go) text (convert case)\n   - Manipulate [strings](text/string.go) (Pad, RepeatAndTrim, RuneCount, etc.)\n   - [Transform](text/transformer.go) text (UnixTime to human-readable-time, pretty-JSON, etc.)\n   - [Wrap](text/wrap.go) text\n\nGoDoc has examples for all the available functions.\n\n## Upgrading from v5 or less to v6 or above\n\nIf you are using a version of this library older than `v6.0.0` and want to move\nto a newer version of this library, you'd have to modify the import paths from\nsomething like:\n```golang\n    \"github.com/jedib0t/go-pretty/list\"\n    \"github.com/jedib0t/go-pretty/progress\"\n    \"github.com/jedib0t/go-pretty/table\"\n    \"github.com/jedib0t/go-pretty/text\"\n```\nto:\n```golang\n    \"github.com/jedib0t/go-pretty/v6/list\"\n    \"github.com/jedib0t/go-pretty/v6/progress\"\n    \"github.com/jedib0t/go-pretty/v6/table\"\n    \"github.com/jedib0t/go-pretty/v6/text\"\n```\n\nI'd recommend you fire up your favorite IDE and do a mass search and replace for\nall occurrences of `jedib0t/go-pretty/` to `jedib0t/go-pretty/v6/`. If you are\non a system with access to `find`, `grep`, `xargs` and `sed`, you could just run\nthe following from within your code folder to do the same:\n```\nfind . -type f -name \"*.go\" | grep -v vendor | xargs sed -i 's/jedib0t\\/go-pretty\\//jedib0t\\/go-pretty\\/v6\\//g'\n```\nIf you are on macOS, you'll have to use `sed -i ''` instead of `sed -i`.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.30078125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 6.x.x   | :white_check_mark: |\n| < 6.0   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease create a new issue on this repo describing the vulnerability,\nand (if known) how to resolve it.\n"
        },
        {
          "name": "bench_test.go",
          "type": "blob",
          "size": 2.4365234375,
          "content": "package gopretty\n\nimport (\n\t\"io\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/jedib0t/go-pretty/v6/list\"\n\t\"github.com/jedib0t/go-pretty/v6/progress\"\n\t\"github.com/jedib0t/go-pretty/v6/table\"\n)\n\nvar (\n\tlistItem1      = \"Game Of Thrones\"\n\tlistItems2     = []interface{}{\"Winter\", \"Is\", \"Coming\"}\n\tlistItems3     = []interface{}{\"This\", \"Is\", \"Known\"}\n\ttableCaption   = \"table-caption\"\n\ttableRowFooter = table.Row{\"\", \"\", \"Total\", 10000}\n\ttableRowHeader = table.Row{\"#\", \"First Name\", \"Last Name\", \"Salary\"}\n\ttableRows      = []table.Row{\n\t\t{1, \"Arya\", \"Stark\", 3000},\n\t\t{20, \"Jon\", \"Snow\", 2000, \"You know nothing, Jon Snow!\"},\n\t\t{300, \"Tyrion\", \"Lannister\", 5000},\n\t}\n\ttracker1 = progress.Tracker{Message: \"Calculating Total   # 1\", Total: 1000, Units: progress.UnitsDefault}\n\ttracker2 = progress.Tracker{Message: \"Downloading File    # 2\", Total: 1000, Units: progress.UnitsBytes}\n\ttracker3 = progress.Tracker{Message: \"Transferring Amount # 3\", Total: 1000, Units: progress.UnitsCurrencyDollar}\n)\n\nfunc BenchmarkList_Render(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\tlw := list.NewWriter()\n\t\tlw.AppendItem(listItem1)\n\t\tlw.Indent()\n\t\tlw.AppendItems(listItems2)\n\t\tlw.Indent()\n\t\tlw.AppendItems(listItems3)\n\t\tlw.Render()\n\t}\n}\n\nfunc BenchmarkProgress_Render(b *testing.B) {\n\ttrackSomething := func(pw progress.Writer, tracker *progress.Tracker) {\n\t\ttracker.Reset()\n\t\tpw.AppendTracker(tracker)\n\t\ttime.Sleep(time.Millisecond * 100)\n\t\ttracker.Increment(tracker.Total / 2)\n\t\ttime.Sleep(time.Millisecond * 100)\n\t\ttracker.Increment(tracker.Total / 2)\n\t}\n\n\tfor i := 0; i < b.N; i++ {\n\t\tpw := progress.NewWriter()\n\t\tpw.SetAutoStop(true)\n\t\tpw.SetOutputWriter(io.Discard)\n\t\tgo trackSomething(pw, &tracker1)\n\t\tgo trackSomething(pw, &tracker2)\n\t\tgo trackSomething(pw, &tracker3)\n\t\ttime.Sleep(time.Millisecond * 50)\n\t\tpw.Render()\n\t}\n}\n\nfunc generateBenchmarkTable() table.Writer {\n\ttw := table.NewWriter()\n\ttw.AppendHeader(tableRowHeader)\n\ttw.AppendRows(tableRows)\n\ttw.AppendFooter(tableRowFooter)\n\ttw.SetCaption(tableCaption)\n\treturn tw\n}\n\nfunc BenchmarkTable_Render(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\tgenerateBenchmarkTable().Render()\n\t}\n}\n\nfunc BenchmarkTable_RenderCSV(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\tgenerateBenchmarkTable().RenderCSV()\n\t}\n}\n\nfunc BenchmarkTable_RenderHTML(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\tgenerateBenchmarkTable().RenderHTML()\n\t}\n}\n\nfunc BenchmarkTable_RenderMarkdown(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\tgenerateBenchmarkTable().RenderMarkdown()\n\t}\n}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.5419921875,
          "content": "module github.com/jedib0t/go-pretty/v6\n\ngo 1.17\n\nrequire (\n\tgithub.com/mattn/go-runewidth v0.0.15\n\tgithub.com/pkg/profile v1.7.0\n\tgithub.com/stretchr/testify v1.8.4\n\tgolang.org/x/sys v0.17.0\n\tgolang.org/x/term v0.17.0\n\tgolang.org/x/text v0.21.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/felixge/fgprof v0.9.3 // indirect\n\tgithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rivo/uniseg v0.2.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.259765625,
          "content": "github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/felixge/fgprof v0.9.3 h1:VvyZxILNuCiUCSXtPtYmmtGvb65nqXh2QFWc0Wpf2/g=\ngithub.com/felixge/fgprof v0.9.3/go.mod h1:RdbpDgzqYVh/T9fPELJyV7EYJuHB55UTEULNun8eiPw=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd h1:1FjCyPC+syAzJ5/2S8fqdZK1R22vvA0J7JZKcuOIQ7Y=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=\ngithub.com/ianlancetaylor/demangle v0.0.0-20210905161508-09a460cdf81d/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/profile v1.7.0/go.mod h1:8Uer0jas47ZQMJ7VD+OHknK4YDY07LPUC6dEvqDjvNo=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "list",
          "type": "tree",
          "content": null
        },
        {
          "name": "profile.sh",
          "type": "blob",
          "size": 0.537109375,
          "content": "#!/bin/bash\n\n# cleanup the profile directory before starting\nrm -fr profile\n\n# profile each supported package\nfor what in \"list\" \"progress\" \"table\"\ndo\n    echo \"Profiling ${what} ...\"\n    mkdir -p profile/${what}\n    go build -o profile/${what}/${what} cmd/profile-${what}/profile.go\n    (cd profile/${what} && \\\n        ./${what} && \\\n        go tool pprof -pdf ${what} cpu.pprof > ../${what}.cpu.pdf && \\\n        go tool pprof -pdf ${what} mem.pprof > ../${what}.mem.pdf)\n    echo \"Profiling ${what} ... done!\"\n    echo\ndone\n\nls -al profile/*.pdf\n\n"
        },
        {
          "name": "progress",
          "type": "tree",
          "content": null
        },
        {
          "name": "table",
          "type": "tree",
          "content": null
        },
        {
          "name": "text",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}