{
  "metadata": {
    "timestamp": 1736566876587,
    "page": 446,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "erigontech/erigon",
      "stars": 3245,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.08984375,
          "content": "**/*_test.go\n**/*.a\n**/*.dylib\n**/*.o\n**/*.dSYM\n\nbuild\ntests/testdata\ncmd/prometheus\nvendor\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.2998046875,
          "content": "# host OS dedicated user (for docker especially)\nERIGON_USER=erigon\n\n# UID, GID of user inside docker process which must exist also on host OS\nDOCKER_UID=1000     # random number [1001, 10000] chosen arbitrarily for example\nDOCKER_GID=1000     # can choose any valid #. 1000 tends to be taken by first user\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0966796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n*.sol linguist-language=Solidity\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3505859375,
          "content": "# See http://help.github.com/ignore-files/ for more about ignoring files.\n#\n# If you find yourself ignoring temporary files generated by your text editor\n# or operating system, you probably want to add a global ignore instead:\n#   git config --global core.excludesfile ~/.gitignore_global\n\n/tmp\n*/**/*un~\n*/**/*.test\n*un~\n.DS_Store\n*/**/.DS_Store\n.ethtest\n*/**/*tx_database*\n*/**/*dapps*\nbuild/_vendor/pkg\n/*.a\ndocs/readthedocs/build\n/.VSCodeCounter\n#*\n.#*\n*#\n*~\n.project\n.settings\n\n# Used by mdbx Makefile\n/ethdb/mdbx/dist/CMakeFiles/*\n/ethdb/mdbx/dist/CMakeCache*\n/ethdb/mdbx/dist/*.cmake\n/ethdb/mdbx/dist/*.dll\n/ethdb/mdbx/dist/*.exe\n/ethdb/mdbx/dist/Makefile\n\n# used by the Makefile\n/build/_workspace/\n/build/cache/\n/build/bin/\n/geth*.zip\n\n# travis\nprofile.tmp\nprofile.cov\n\n# IdeaIDE\n.idea\n\n# VS Code\n.vscode\n*.code-workspace\n\n# dashboard\n/dashboard/assets/flow-typed\n/dashboard/assets/node_modules\n/dashboard/assets/stats.json\n/dashboard/assets/bundle.js\n/dashboard/assets/bundle.js.map\n/dashboard/assets/package-lock.json\n\n**/yarn-error.log\n/timings.txt\nright_*.txt\nroot_*.txt\n\n__pycache__\n/build\n*.tmp\n\n/ethdb/*.fail\n\nlibmdbx/build/*\ntests/testdata/*\n\ngo.work*\n\ndocker-compose.*.yml\n.env\ncoverage.out\n\ndist\n__debug_bin\n*.exe\n\n*.log\n\ncaplin-recordings\n\njwt.hex\n\n.tool-versions\nsalt.txt\n\n*__debug_bin*\nyarn.lock\nnode_modules\n\n*.pgo\n/config.toml\n/config.yaml\n/config.yml\n\nvendor\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.193359375,
          "content": "[submodule \"tests\"]\n\tpath = tests/testdata\n\turl = https://github.com/ethereum/tests\n[submodule \"eest-fixtures\"]\n\tpath = tests/execution-spec-tests\n\turl = https://github.com/erigontech/eest-fixtures\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 3.2548828125,
          "content": "run:\n  timeout: 10m\n  build-tags:\n    - nosqlite\n    - noboltdb\n    - integration\n\nlinters:\n  presets:\n    - bugs\n    - error\n    - unused\n    - performance\n  disable:\n    - gosec # enable it after 1-2 weeks. it failing CI withoutt enough info to fix: https://github.com/erigontech/erigon/actions/runs/5928644129/job/16074701625\n    - exhaustive\n    - musttag\n    - contextcheck\n    - wrapcheck\n    - err113\n    - unparam\n    - makezero #TODO: enable me\n    - noctx #TODO: enable me\n    - nilerr #TODO: enable me\n    - errorlint #TODO: enable me\n    - errchkjson #TODO: enable me\n    - unused #TODO: enable me\n    - testifylint #TODO: enable me\n    - gocheckcompilerdirectives\n    - protogetter\n    - recvcheck #TODO: enable me\n  enable:\n    - unconvert\n    #    - predeclared #TODO: enable me\n    #    - thelper #TODO: enable me\n    - wastedassign\n    - gofmt\n    - gocritic\n    - perfsprint\n#    - revive\n#    - forcetypeassert\n#    - stylecheck\n\nlinters-settings:\n  gocritic: # see https://golangci-lint.run/usage/linters/#gocritic and https://go-critic.github.io/overview#checks-overview\n    enabled-tags:\n      - performance\n      - diagnostic\n    enabled-checks:\n      - ruleguard\n    disabled-checks:\n      - regexpMust\n      - appendAssign\n      - rangeValCopy\n      - exitAfterDefer\n      - elseif\n      - dupBranchBody\n      - assignOp\n      - singleCaseSwitch\n      - unlambda\n      - captLocal\n      - commentFormatting\n      - ifElseChain\n\n      # diagnostigs tag: possible bugs. need enable checks in future\n      - sloppyReassign\n      - sprintfQuotedString\n      - deferInLoop\n      - nilValReturn\n      - evalOrder\n      - returnAfterHttpError\n      - weakCond\n      - builtinShadowDecl\n      - unnecessaryDefer\n      - uncheckedInlineErr\n      - preferStringWriter\n      - commentedOutCode\n      - preferFprint\n\n    settings:\n      ruleguard:\n        rules: \"rules.go\"\n      hugeParam:\n        # size in bytes that makes the warning trigger (default 80)\n        sizeThreshold: 1000\n      rangeExprCopy:\n        # size in bytes that makes the warning trigger (default 512)\n        sizeThreshold: 512\n        # whether to check test functions (default true)\n        skipTestFuncs: true\n      underef:\n        # whether to skip (*x).method() calls where x is a pointer receiver (default true)\n        skipRecvDeref: true\n\n  govet:\n    disable:\n      - deepequalerrors\n      - fieldalignment\n      - shadow\n      - unsafeptr\n    enable:\n      - nilness\n  goconst:\n    min-len: 2\n    min-occurrences: 2\n  gofmt:\n    simplify: false\n\nissues:\n  exclude-rules:\n    - linters:\n        - golint\n      text: \"should be\"\n    - linters:\n        - errcheck\n      text: \"not checked\"\n    - linters:\n        - staticcheck\n      text: \"SA(1019|1029|5011)\"\n    # Exclude some linters from running on tests files.\n    - path: test\\.go\n      linters:\n        - gosec\n        - unused\n        - gocritic\n        - perfsprint\n    - path: hack\\.go\n      linters:\n        - gosec\n        - unused\n        - gocritic\n    - path: cmd/devp2p\n      linters:\n        - gosec\n        - unused\n        - gocritic\n    - path: metrics/sample\\.go\n      linters:\n        - gosec\n        - gocritic\n    - path: p2p/simulations\n      linters:\n        - gosec\n        - gocritic\n    - path: p2p/dnsdisc\n      linters:\n        - gosec\n        - gocritic\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 26.7958984375,
          "content": "#version: 2\n\nproject_name: erigon\n\nrelease:\n  disable: true\n  draft: true\n  prerelease: auto\n\nenv:\n  - CGO_ENABLED=1\n  - GOPRIVATE=github.com/erigontech/silkworm-go\n  - BUILD_VERSION={{ .Env.BUILD_VERSION }}\n  - CGO_CFLAGS_DEFAULT=-DMDBX_ENV_CHECKPID=0 -DMDBX_DISABLE_VALIDATION=0 -DMDBX_FORCE_ASSERTIONS=0 -Wno-unknown-warning-option -Wno-enum-int-mismatch -Wno-strict-prototypes -Wno-unused-but-set-variable -O3\n  - CGO_CFLAGS_WINDOWS=-Wno-unknown-warning-option -Wno-enum-int-mismatch -Wno-strict-prototypes -Wno-unused-but-set-variable -g -O2 -D__BLST_PORTABLE__\n  - CGO_LDFLAGS_DEFAULT=-O3 -g\n  - CGO_LDFLAGS_DEFAULT_DARWIN=-O3 -g\n\nbuilds:\n\n## Darwin AMD64:\n  - id: darwin-amd64-erigon\n    main: ./cmd/erigon\n    binary: erigon\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-downloader\n    main: ./cmd/downloader\n    binary: downloader\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-devnet\n    main: ./cmd/devnet\n    binary: devnet\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-evm\n    main: ./cmd/evm\n    binary: evm\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-caplin\n    main: ./cmd/caplin\n    binary: caplin\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-diag\n    main: ./cmd/diag\n    binary: diag\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-integration\n    main: ./cmd/integration\n    binary: integration\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2    \n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-rpcdaemon\n    main: ./cmd/rpcdaemon\n    binary: rpcdaemon\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2    \n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-sentry\n    main: ./cmd/sentry\n    binary: sentry\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2    \n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-amd64-txpool\n    main: ./cmd/txpool\n    binary: txpool\n    goos: [ darwin ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v2    \n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n## End Darwin AMD64\n\n\n## Darwin ARM64:\n  - id: darwin-arm64-erigon\n    main: ./cmd/erigon\n    binary: erigon\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-downloader\n    main: ./cmd/downloader\n    binary: downloader\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-devnet\n    main: ./cmd/devnet\n    binary: devnet\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-evm\n    main: ./cmd/evm\n    binary: evm\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-caplin\n    main: ./cmd/caplin\n    binary: caplin\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-diag\n    main: ./cmd/diag\n    binary: diag\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-integration\n    main: ./cmd/integration\n    binary: integration\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-rpcdaemon\n    main: ./cmd/rpcdaemon\n    binary: rpcdaemon\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-sentry\n    main: ./cmd/sentry\n    binary: sentry\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: darwin-arm64-txpool\n    main: ./cmd/txpool\n    binary: txpool\n    goos: [ darwin ]\n    goarch: [ arm64 ]\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT_DARWIN }}\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n## End Darwin ARM64\n\n\n## Linux AMD64 (v1, v2):\n  - id: linux-amd64-erigon\n    main: ./cmd/erigon\n    binary: erigon\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-downloader\n    main: ./cmd/downloader\n    binary: downloader\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-devnet\n    main: ./cmd/devnet\n    binary: devnet\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-evm\n    main: ./cmd/evm\n    binary: evm\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-caplin\n    main: ./cmd/caplin\n    binary: caplin\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-diag\n    main: ./cmd/diag\n    binary: diag\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-integration\n    main: ./cmd/integration\n    binary: integration\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-rpcdaemon\n    main: ./cmd/rpcdaemon\n    binary: rpcdaemon\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-sentry\n    main: ./cmd/sentry\n    binary: sentry\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-amd64-txpool\n    main: ./cmd/txpool\n    binary: txpool\n    goos: [ linux ]\n    goarch: [ amd64 ]\n    goamd64:\n      - v1\n      - v2\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }}\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n## End of Linux AMD64 (v1, v2)\n\n\n## Linux ARM64\n  - id: linux-arm64-erigon\n    main: ./cmd/erigon\n    binary: erigon\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-downloader\n    main: ./cmd/downloader\n    binary: downloader\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-devnet\n    main: ./cmd/devnet\n    binary: devnet\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-evm\n    main: ./cmd/evm\n    binary: evm\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-caplin\n    main: ./cmd/caplin\n    binary: caplin\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-diag\n    main: ./cmd/diag\n    binary: diag\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-integration\n    main: ./cmd/integration\n    binary: integration\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-rpcdaemon\n    main: ./cmd/rpcdaemon\n    binary: rpcdaemon\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-sentry\n    main: ./cmd/sentry\n    binary: sentry\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n\n  - id: linux-arm64-txpool\n    main: ./cmd/txpool\n    binary: txpool\n    goos: [ linux ]\n    goarch: [ arm64 ]\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n      - CGO_CFLAGS={{ .Env.CGO_CFLAGS_DEFAULT }} -D__BLST_PORTABLE__\n      - CGO_LDFLAGS={{ .Env.CGO_LDFLAGS_DEFAULT }}\n    tags: [ nosqlite, noboltdb, nosilkworm ]\n    flags:\n      - -trimpath\n      - -buildvcs=false\n    ldflags:\n      - -s -w\n      - -X {{ .Env.PACKAGE }}/params.GitCommit={{ .Env.GIT_COMMIT }} -X {{ .Env.PACKAGE }}/params.GitBranch={{ .Env.GIT_BRANCH }} -X {{ .Env.PACKAGE }}/params.GitTag={{ .Env.GIT_TAG }}\n## End of Linux ARM64\n\n\narchives:\n  - id: linux-arm64\n    builds:\n      - linux-arm64-erigon\n      - linux-arm64-downloader\n      - linux-arm64-devnet\n      - linux-arm64-evm\n      - linux-arm64-caplin\n      - linux-arm64-diag\n      - linux-arm64-integration\n      - linux-arm64-rpcdaemon\n      - linux-arm64-sentry\n      - linux-arm64-txpool\n    name_template: \"{{ .Env.APPLICATION }}_{{ .Env.BUILD_VERSION }}_{{ .Os }}_{{ .Arch }}\"\n    wrap_in_directory: true\n    format: tar.gz\n\n  - id: linux-amd64\n    builds:\n      - linux-amd64-erigon\n      - linux-amd64-downloader\n      - linux-amd64-devnet\n      - linux-amd64-evm\n      - linux-amd64-caplin\n      - linux-amd64-diag\n      - linux-amd64-integration\n      - linux-amd64-rpcdaemon\n      - linux-amd64-sentry\n      - linux-amd64-txpool\n    name_template: '{{ .Env.APPLICATION }}_{{ .Env.BUILD_VERSION }}_{{ .Os }}_{{ .Arch }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}'\n    wrap_in_directory: true\n    format: tar.gz\n\n  - id: darwin-amd64\n    builds:\n      - darwin-amd64-erigon\n      - darwin-amd64-downloader\n      - darwin-amd64-devnet\n      - darwin-amd64-evm\n      - darwin-amd64-caplin\n      - darwin-amd64-diag\n      - darwin-amd64-integration\n      - darwin-amd64-rpcdaemon\n      - darwin-amd64-sentry\n      - darwin-amd64-txpool\n    name_template: \"{{ .Env.APPLICATION }}_{{ .Env.BUILD_VERSION }}_{{ .Os }}_{{ .Arch }}\"\n    wrap_in_directory: true\n    format: tar.gz\n\n  - id: darwin-arm64\n    builds:\n      - darwin-arm64-erigon\n      - darwin-arm64-downloader\n      - darwin-arm64-devnet\n      - darwin-arm64-evm\n      - darwin-arm64-caplin\n      - darwin-arm64-diag\n      - darwin-arm64-integration\n      - darwin-arm64-rpcdaemon\n      - darwin-arm64-sentry\n      - darwin-arm64-txpool\n    name_template: \"{{ .Env.APPLICATION }}_{{ .Env.BUILD_VERSION }}_{{ .Os }}_{{ .Arch }}\"\n    wrap_in_directory: true\n    format: tar.gz\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.2607421875,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/readthedocs/source/conf.py"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 13.375,
          "content": "# This is the official list of go-ethereum authors for copyright purposes.\n\na e r t h <aerth@users.noreply.github.com>\nAbel Nieto <abel.nieto90@gmail.com>\nAbel Nieto <anietoro@uwaterloo.ca>\nAdam Babik <a.babik@designfortress.com>\nAditya <adityasripal@gmail.com>\nAdrià Cidre <adria.cidre@gmail.com>\nAfri Schoedon <5chdn@users.noreply.github.com>\nAgustin Armellini Fischer <armellini13@gmail.com>\nAiread <fgh1987168@gmail.com>\nAlan Chen <alanchchen@users.noreply.github.com>\nAlejandro Isaza <alejandro.isaza@gmail.com>\nAles Katona <ales@coinbase.com>\nAlex Leverington <alex@ethdev.com>\nAlex Wu <wuyiding@gmail.com>\nAlexandre Van de Sande <alex.vandesande@ethdev.com>\nAli Hajimirza <Ali92hm@users.noreply.github.com>\nam2rican5 <am2rican5@gmail.com>\nAndrea Franz <andrea@gravityblast.com>\nAndrey Petrov <andrey.petrov@shazow.net>\nAndrey Petrov <shazow@gmail.com>\nANOTHEL <anothel1@naver.com>\nAntoine Rondelet <rondelet.antoine@gmail.com>\nAnton Evangelatov <anton.evangelatov@gmail.com>\nAntonio Salazar Cardozo <savedfastcool@gmail.com>\nArba Sasmoyo <arba.sasmoyo@gmail.com>\nArmani Ferrante <armaniferrante@berkeley.edu>\nArmin Braun <me@obrown.io>\nAron Fischer <github@aron.guru>\natsushi-ishibashi <atsushi.ishibashi@finatext.com>\nayeowch <ayeowch@gmail.com>\nb00ris <b00ris@mail.ru>\nbailantaotao <Edwin@maicoin.com>\nbaizhenxuan <nkbai@163.com>\nBalint Gabor <balint.g@gmail.com>\nBas van Kervel <bas@ethdev.com>\nBenjamin Brent <benjamin@benjaminbrent.com>\nbenma <mbencun@gmail.com>\nBenoit Verkindt <benoit.verkindt@gmail.com>\nbloonfield <bloonfield@163.com>\nBo <bohende@gmail.com>\nBo Ye <boy.e.computer.1982@outlook.com>\nBob Glickstein <bobg@users.noreply.github.com>\nBrent <bmperrea@gmail.com>\nBrian Schroeder <bts@gmail.com>\nBruno Škvorc <bruno@skvorc.me>\nC. Brown <hackdom@majoolr.io>\nCaesar Chad <BLUE.WEB.GEEK@gmail.com>\nCasey Detrio <cdetrio@gmail.com>\nCDsigma <cdsigma271@gmail.com>\nchanghong <changhong.yu@shanbay.com>\nChase Wright <mysticryuujin@gmail.com>\nChen Quan <terasum@163.com>\nchenyufeng <yufengcode@gmail.com>\nChristian Muehlhaeuser <muesli@gmail.com>\nChristoph Jentzsch <jentzsch.software@gmail.com>\ncong <ackratos@users.noreply.github.com>\nCorey Lin <514971757@qq.com>\ncpusoft <cpusoft@live.com>\nCrispin Flowerday <crispin@bitso.com>\ncroath <croathliu@gmail.com>\ncui <523516579@qq.com>\nDan Kinsley <dan@joincivil.com>\nDaniel A. Nagy <nagy.da@gmail.com>\nDaniel Sloof <goapsychadelic@gmail.com>\nDarrel Herbst <dherbst@gmail.com>\nDave Appleton <calistralabs@gmail.com>\nDave McGregor <dave.s.mcgregor@gmail.com>\nDavid Huie <dahuie@gmail.com>\nDerek Gottfrid <derek@codecubed.com>\nDiego Siqueira <DiSiqueira@users.noreply.github.com>\nDiep Pham <mrfavadi@gmail.com>\ndipingxian2 <39109351+dipingxian2@users.noreply.github.com>\ndm4 <sunrisedm4@gmail.com>\nDmitrij Koniajev <dimchansky@gmail.com>\nDmitry Shulyak <yashulyak@gmail.com>\nDomino Valdano <dominoplural@gmail.com>\nDomino Valdano <jeff@okcupid.com>\nDragan Milic <dragan@netice9.com>\ndragonvslinux <35779158+dragononcrypto@users.noreply.github.com>\nEgon Elbre <egonelbre@gmail.com>\nElad <theman@elad.im>\nEli <elihanover@yahoo.com>\nElias Naur <elias.naur@gmail.com>\nElliot Shepherd <elliot@identitii.com>\nEmil <mursalimovemeel@gmail.com>\nemile <emile@users.noreply.github.com>\nEnrique Fynn <enriquefynn@gmail.com>\nEnrique Fynn <me@enriquefynn.com>\nEOS Classic <info@eos-classic.io>\nErichin <erichinbato@gmail.com>\nErnesto del Toro <ernesto.deltoro@gmail.com>\nEthan Buchman <ethan@coinculture.info>\nethersphere <thesw@rm.eth>\nEugene Valeyev <evgen.povt@gmail.com>\nEvangelos Pappas <epappas@evalonlabs.com>\nEvgeny <awesome.observer@yandex.com>\nEvgeny Danilenko <6655321@bk.ru>\nevgk <evgeniy.kamyshev@gmail.com>\nFabian Vogelsteller <fabian@frozeman.de>\nFabio Barone <fabio.barone.co@gmail.com>\nFabio Berger <fabioberger1991@gmail.com>\nFaceHo <facehoshi@gmail.com>\nFelix Lange <fjl@twurst.com>\nFerenc Szabo <frncmx@gmail.com>\nferhat elmas <elmas.ferhat@gmail.com>\nFiisio <liangcszzu@163.com>\nFrank Szendzielarz <33515470+FrankSzendzielarz@users.noreply.github.com>\nFrank Wang <eternnoir@gmail.com>\nFranklin <mr_franklin@126.com>\nFurkan KAMACI <furkankamaci@gmail.com>\nGagziW <leon.stanko@rwth-aachen.de>\nGary Rong <garyrong0905@gmail.com>\nGeorge Ornbo <george@shapeshed.com>\nGregg Dourgarian <greggd@tempworks.com>\nGuilherme Salgado <gsalgado@gmail.com>\nGuillaume Ballet <gballet@gmail.com>\nGuillaume Nicolas <guin56@gmail.com>\nGuiltyMorishita <morilliantblue@gmail.com>\nGus <yo@soygus.com>\nGustav Simonsson <gustav.simonsson@gmail.com>\nGísli Kristjánsson <gislik@hamstur.is>\nHa ĐANG <dvietha@gmail.com>\nHackyMiner <hackyminer@gmail.com>\nhadv <dvietha@gmail.com>\nHao Bryan Cheng <haobcheng@gmail.com>\nHAOYUatHZ <37070449+HAOYUatHZ@users.noreply.github.com>\nHenning Diedrich <hd@eonblast.com>\nholisticode <holistic.computing@gmail.com>\nHongbin Mao <hello2mao@gmail.com>\nHsien-Tang Kao <htkao@pm.me>\nHusam Ibrahim <39692071+HusamIbrahim@users.noreply.github.com>\nhydai <z54981220@gmail.com>\nHyung-Kyu Hqueue Choi <hyungkyu.choi@gmail.com>\nIan Macalinao <me@ian.pw>\nIan Norden <iannordenn@gmail.com>\nIsidoro Ghezzi <isidoro.ghezzi@icloud.com>\nIskander (Alex) Sharipov <quasilyte@gmail.com>\nIvan Daniluk <ivan.daniluk@gmail.com>\nIvo Georgiev <ivo@strem.io>\nJae Kwon <jkwon.work@gmail.com>\nJamie Pitts <james.pitts@gmail.com>\nJanos Guljas <janos@resenje.org>\nJanoš Guljaš <janos@users.noreply.github.com>\nJason Carver <jacarver@linkedin.com>\nJavier Peletier <jm@epiclabs.io>\nJavier Peletier <jpeletier@users.noreply.github.com>\nJavier Sagredo <jasataco@gmail.com>\nJay <codeholic.arena@gmail.com>\nJay Guo <guojiannan1101@gmail.com>\nJaynti Kanani <jdkanani@gmail.com>\nJeff Prestes <jeffprestes@gmail.com>\nJeff R. Allen <jra@nella.org>\nJeffery Robert Walsh <rlxrlps@gmail.com>\nJeffrey Wilcke <jeffrey@ethereum.org>\nJens Agerberg <github@agerberg.me>\nJeremy McNevin <jeremy.mcnevin@optum.com>\nJeremy Schlatter <jeremy.schlatter@gmail.com>\nJerzy Lasyk <jerzylasyk@gmail.com>\nJia Chenhui <jiachenhui1989@gmail.com>\nJim McDonald <Jim@mcdee.net>\njkcomment <jkcomment@gmail.com>\nJoel Burget <joelburget@gmail.com>\nJohn C. Vernaleo <john@netpurgatory.com>\nJohns Beharry <johns@peakshift.com>\nJonas <felberj@users.noreply.github.com>\nJonathan Brown <jbrown@bluedroplet.com>\nJoranHonig <JoranHonig@users.noreply.github.com>\nJordan Krage <jmank88@gmail.com>\nJoseph Chow <ethereum@outlook.com>\njtakalai <juuso.takalainen@streamr.com>\nJU HYEONG PARK <dkdkajej@gmail.com>\nJustin Clark-Casey <justincc@justincc.org>\nJustin Drake <drakefjustin@gmail.com>\njwasinger <j-wasinger@hotmail.com>\nken10100147 <sunhongping@kanjian.com>\nKenji Siu <kenji@isuntv.com>\nKenso Trabing <kenso.trabing@bloomwebsite.com>\nKenso Trabing <ktrabing@acm.org>\nKevin <denk.kevin@web.de>\nkevin.xu <cming.xu@gmail.com>\nkiel barry <kiel.j.barry@gmail.com>\nkimmylin <30611210+kimmylin@users.noreply.github.com>\nKitten King <53072918+kittenking@users.noreply.github.com>\nknarfeh <hejun1874@gmail.com>\nKobi Gurkan <kobigurk@gmail.com>\nKonrad Feldmeier <konrad@brainbot.com>\nKris Shinn <raggamuffin.music@gmail.com>\nKurkó Mihály <kurkomisi@users.noreply.github.com>\nKushagra Sharma <ksharm01@gmail.com>\nKwuaint <34888408+kwuaint@users.noreply.github.com>\nKyuntae Ethan Kim <ethan.kyuntae.kim@gmail.com>\nledgerwatch <akhounov@gmail.com>\nLefteris Karapetsas <lefteris@refu.co>\nLeif Jurvetson <leijurv@gmail.com>\nLeo Shklovskii <leo@thermopylae.net>\nLeoLiao <leofantast@gmail.com>\nLewis Marshall <lewis@lmars.net>\nlhendre <lhendre2@gmail.com>\nLiang Ma <liangma.ul@gmail.com>\nLiang Ma <liangma@liangbit.com>\nLiang ZOU <liang.d.zou@gmail.com>\nlibotony <liboliqi@gmail.com>\nligi <ligi@ligi.de>\nLio李欧 <lionello@users.noreply.github.com>\nLorenzo Manacorda <lorenzo@kinvolk.io>\nLouis Holbrook <dev@holbrook.no>\nLuca Zeug <luclu@users.noreply.github.com>\nMagicking <s@6120.eu>\nmanlio <manlio.poltronieri@gmail.com>\nMaran Hidskes <maran.hidskes@gmail.com>\nMarek Kotewicz <marek.kotewicz@gmail.com>\nMarius van der Wijden <m.vanderwijden@live.de>\nMark <markya0616@gmail.com>\nMark Rushakoff <mark.rushakoff@gmail.com>\nmark.lin <mark@maicoin.com>\nMartin Alex Philip Dawson <u1356770@gmail.com>\nMartin Holst Swende <martin@swende.se>\nMartin Klepsch <martinklepsch@googlemail.com>\nMats Julian Olsen <mats@plysjbyen.net>\nMatt K <1036969+mkrump@users.noreply.github.com>\nMatthew Di Ferrante <mattdf@users.noreply.github.com>\nMatthew Halpern <matthalp@gmail.com>\nMatthew Halpern <matthalp@google.com>\nMatthew Wampler-Doty <matthew.wampler.doty@gmail.com>\nMax Sistemich <mafrasi2@googlemail.com>\nMaximilian Meister <mmeister@suse.de>\nMicah Zoltu <micah@zoltu.net>\nMichael Ruminer <michael.ruminer+github@gmail.com>\nMiguel Mota <miguelmota2@gmail.com>\nMiya Chen <miyatlchen@gmail.com>\nMohanson <mohanson@outlook.com>\nmr_franklin <mr_franklin@126.com>\nMymskmkt <1847234666@qq.com>\nNalin Bhardwaj <nalinbhardwaj@nibnalin.me>\nNchinda Nchinda <nchinda2@gmail.com>\nnecaremus <necaremus@gmail.com>\nneedkane <604476380@qq.com>\nNguyen Kien Trung <trung.n.k@gmail.com>\nNguyen Sy Thanh Son <thanhson1085@gmail.com>\nNick Dodson <silentcicero@outlook.com>\nNick Johnson <arachnid@notdot.net>\nNicolas Guillaume <gunicolas@sqli.com>\nNilesh Trivedi <nilesh@hypertrack.io>\nNimrod Gutman <nimrod.gutman@gmail.com>\nnjupt-moon <1015041018@njupt.edu.cn>\nnkbai <nkbai@163.com>\nnobody <ddean2009@163.com>\nNoman <noman@noman.land>\nOleg Kovalov <iamolegkovalov@gmail.com>\nOli Bye <olibye@users.noreply.github.com>\nOsuke <arget-fee.free.dgm@hotmail.co.jp>\nPaul Berg <hello@paulrberg.com>\nPaul Litvak <litvakpol@012.net.il>\nPaulo L F Casaretto <pcasaretto@gmail.com>\nPaweł Bylica <chfast@gmail.com>\nPedro Pombeiro <PombeirP@users.noreply.github.com>\nPeter Broadhurst <peter@themumbles.net>\nPeter Pratscher <pratscher@gmail.com>\nPetr Mikusek <petr@mikusek.info>\nPhilip Schlump <pschlump@gmail.com>\nPierre Neter <pierreneter@gmail.com>\nPilkyuJung <anothel1@naver.com>\nprotolambda <proto@protolambda.com>\nPéter Szilágyi <peterke@gmail.com>\nqd-ethan <31876119+qdgogogo@users.noreply.github.com>\nRaghav Sood <raghavsood@gmail.com>\nRalph Caraveo <deckarep@gmail.com>\nRalph Caraveo III <deckarep@gmail.com>\nRamesh Nair <ram@hiddentao.com>\nreinerRubin <tolstov.georgij@gmail.com>\nrhaps107 <dod-source@yandex.ru>\nRicardo Catalinas Jiménez <r@untroubled.be>\nRicardo Domingos <ricardohsd@gmail.com>\nRichard Hart <richardhart92@gmail.com>\nRJ Catalano <catalanor0220@gmail.com>\nRob <robert@rojotek.com>\nRob Mulholand <rmulholand@8thlight.com>\nRobert Zaremba <robert.zaremba@scale-it.pl>\nRoc Yu <rociiu0112@gmail.com>\nRunchao Han <elvisage941102@gmail.com>\nRuss Cox <rsc@golang.org>\nRyan Schneider <ryanleeschneider@gmail.com>\nRémy Roy <remyroy@remyroy.com>\nS. Matthew English <s-matthew-english@users.noreply.github.com>\nsalanfe <salanfe@users.noreply.github.com>\nSamuel Marks <samuelmarks@gmail.com>\nSarlor <kinsleer@outlook.com>\nSasuke1964 <neilperry1964@gmail.com>\nSaulius Grigaitis <saulius@necolt.com>\nSean <darcys22@gmail.com>\nSheldon <11510383@mail.sustc.edu.cn>\nSheldon <374662347@qq.com>\nShintaro Kaneko <kaneshin0120@gmail.com>\nShuai Qi <qishuai231@gmail.com>\nShunsuke Watanabe <ww.shunsuke@gmail.com>\nsilence <wangsai.silence@qq.com>\nSimon Jentzsch <simon@slock.it>\nslumber1122 <slumber1122@gmail.com>\nSmilenator <yurivanenko@yandex.ru>\nSorin Neacsu <sorin.neacsu@gmail.com>\nStein Dekker <dekker.stein@gmail.com>\nSteve Gattuso <steve@stevegattuso.me>\nSteve Ruckdashel <steve.ruckdashel@gmail.com>\nSteve Waldman <swaldman@mchange.com>\nSteven Roose <stevenroose@gmail.com>\nstompesi <stompesi@gmail.com>\nstormpang <jialinpeng@vip.qq.com>\nsunxiaojun2014 <sunxiaojun-xy@360.cn>\ntamirms <tamir@trello.com>\nTaylor Gerring <taylor.gerring@gmail.com>\nTColl <38299499+TColl@users.noreply.github.com>\nterasum <terasum@163.com>\nThomas Bocek <tom@tomp2p.net>\nthomasmodeneis <thomas.modeneis@gmail.com>\nthumb8432 <thumb8432@gmail.com>\nTi Zhou <tizhou1986@gmail.com>\nTosh Camille <tochecamille@gmail.com>\ntsarpaul <Litvakpol@012.net.il>\ntzapu <alex@tzapu.com>\nult-bobonovski <alex@ultiledger.io>\nValentin Wüstholz <wuestholz@gmail.com>\nVedhavyas Singareddi <vedhavyas.singareddi@gmail.com>\nVictor Farazdagi <simple.square@gmail.com>\nVictor Tran <vu.tran54@gmail.com>\nVie <yangchenzhong@gmail.com>\nViktor Trón <viktor.tron@gmail.com>\nVille Sundell <github@solarius.fi>\nvim88 <vim88vim88@gmail.com>\nVincent G <caktux@gmail.com>\nVincent Serpoul <vincent@serpoul.com>\nVitalik Buterin <v@buterin.com>\nVitaly Bogdanov <vsbogd@gmail.com>\nVitaly V <vvelikodny@gmail.com>\nVivek Anand <vivekanand1101@users.noreply.github.com>\nVlad <gluk256@gmail.com>\nVlad Bokov <razum2um@mail.ru>\nVlad Gluhovsky <gluk256@users.noreply.github.com>\nweimumu <934657014@qq.com>\nWenbiao Zheng <delweng@gmail.com>\nWilliam Setzer <bootstrapsetzer@gmail.com>\nwilliambannas <wrschwartz@wpi.edu>\nWuxiang <wuxiangzhou2010@gmail.com>\nxiekeyang <xiekeyang@users.noreply.github.com>\nxincaosu <xincaosu@126.com>\nyahtoo <yahtoo.ma@gmail.com>\nYaoZengzeng <yaozengzeng@zju.edu.cn>\nYH-Zhou <yanhong.zhou05@gmail.com>\nYohann Léon <sybiload@gmail.com>\nYoichi Hirai <i@yoichihirai.com>\nYondon Fu <yondon.fu@gmail.com>\nYOSHIDA Masanori <masanori.yoshida@gmail.com>\nyoza <yoza.is12s@gmail.com>\nYusup <awklsgrep@gmail.com>\nZach <zach.ramsay@gmail.com>\nzah <zahary@gmail.com>\nZahoor Mohamed <zahoor@zahoor.in>\nZak Cole <zak@beattiecole.com>\nzer0to0ne <36526113+zer0to0ne@users.noreply.github.com>\nZhenguo Niu <Niu.ZGlinux@gmail.com>\nZoe Nolan <github@zoenolan.org>\nZsolt Felföldi <zsfelfoldi@gmail.com>\nŁukasz Kurowski <crackcomm@users.noreply.github.com>\nΞTHΞЯSPHΞЯΞ <{viktor.tron,nagydani,zsfelfoldi}@gmail.com>\nМаксим Чусовлянов <mchusovlianov@gmail.com>\n大彬 <hz_stb@163.com>\n贺鹏飞 <hpf@hackerful.cn>\n유용환 <33824408+eric-yoo@users.noreply.github.com>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "ChangeLog.md",
          "type": "blob",
          "size": 2.5849609375,
          "content": "ChangeLog\n---------\n\n## v3.0.0-beta1 (in development)\n\n### Breaking changes\n\n- `--prune.mode` default is `full`. For compatibility with `geth` and other clients. Plz set explicit\n  `--prune.mode` flag to your Erigon3 setups - to simplify future upgrade/downgrade.\n- Bor chains: enable our internal Consensus Layer by default (name: Astrid)\n- Released binaries for Linux are now dynamically linked (\n  Issues: https://github.com/erigontech/erigon/issues/12570, https://github.com/erigontech/erigon/issues/12556 )\n\n### New features:\n\n- Decided to fix snapshots format and go for `beta1`. Main focus: fast bug-reports fixes, chain-tip/rpc perf, validator\n  mode.\n- Erigon3 book: https://development.erigon-documentation-preview.pages.dev/\n\n### TODO\n\n- milestone: https://github.com/erigontech/erigon/milestone/5\n- Known problem:\n    - external CL support\n    - `erigon_getLatestLogs` not implemented\n\n### Acknowledgements:\n\n## v3.0.0-alpha7\n\n### Improvements:\n\n- Faster eth_getTransactionReceipt with \"txn-granularity cache\" in https://github.com/erigontech/erigon/pull/13134 and \"executing only 1 txn\"  https://github.com/erigontech/erigon/pull/12424\n- Return PrunedError when trying to read unavailable historical data in https://github.com/erigontech/erigon/pull/13014\n\n### Fixes:\n\n- Fix trace_block returning \"insufficient funds\" (Issues #12525 and similar) with standalone rpcdaemon in https://github.com/erigontech/erigon/pull/13129\n\n\n### Acknowledgements:\n\n## v3.0.0-alpha6\n\n### Breaking changes\n\n- `--prune.mode` default is `full`. For compatibility with `geth` and other clients. Plz set explicit\n  `--prune.mode` flag to your Erigon3 setups - to simplify future upgrade/downgrade.\n\n### New features:\n\n- Reduced `.idx` and `.efi` files size by 25% (require re-sync)\n- Support: `debug_getRawReceipts`\n- debian packages\n- `--externalcl` support\n- bor-mainnet can work on 32G machine\n- Erigon3 book: https://development.erigon-documentation-preview.pages.dev/\n\n### Fixes:\n\n- `eth_syncing` works on Bor chains\n- support upper-bounds at: `eth_accRange` https://github.com/erigontech/erigon/pull/12609 ,\n  `erigon_getBalanceChangesInBlock` https://github.com/erigontech/erigon/pull/12642,\n  `debug_getModifiedAccountsByNumber` https://github.com/erigontech/erigon/pull/12634\n- `eth_getLogs` fix `fee cap less than block` https://github.com/erigontech/erigon/pull/12640\n\n### Acknowledgements:\n\n## v3.0.0-alpha5\n\n- Breaking change: Caplin changed snapshots format\n- RPC-compatibility tests passed\n- Caplin eating 1Gb less RAM. And Erigon3 works on 16gb machine.\n- time-limit for pruning on chain-tip: https://github.com/erigontech/erigon/pull/12535\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.876953125,
          "content": "# syntax = docker/dockerfile:1.2\nFROM docker.io/library/golang:1.22-alpine3.19 AS builder\n\nRUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++\n\nWORKDIR /app\nADD go.mod go.mod\nADD go.sum go.sum\nADD erigon-lib/go.mod erigon-lib/go.mod\nADD erigon-lib/go.sum erigon-lib/go.sum\n\nRUN go mod download\nADD . .\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    make BUILD_TAGS=nosqlite,noboltdb,nosilkworm all\n\n\nFROM docker.io/library/golang:1.22-alpine3.19 AS tools-builder\nRUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++\nWORKDIR /app\n\nADD Makefile Makefile\nADD tools.go tools.go\nADD go.mod go.mod\nADD go.sum go.sum\nADD erigon-lib/go.mod erigon-lib/go.mod\nADD erigon-lib/go.sum erigon-lib/go.sum\n\nRUN mkdir -p /app/build/bin\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    make db-tools\n\nFROM docker.io/library/alpine:3.19\n\n# install required runtime libs, along with some helpers for debugging\nRUN apk add --no-cache ca-certificates libstdc++ tzdata\nRUN apk add --no-cache curl jq bind-tools\n\n# Setup user and group\n#\n# from the perspective of the container, uid=1000, gid=1000 is a sensible choice\n# (mimicking Ubuntu Server), but if caller creates a .env (example in repo root),\n# these defaults will get overridden when make calls docker-compose\nARG UID=1000\nARG GID=1000\nRUN adduser -D -u $UID -g $GID erigon\nUSER erigon\nRUN mkdir -p ~/.local/share/erigon\n\n# copy compiled artifacts from builder\n## first do the mdbx ones - since these wont change as often\nCOPY --from=tools-builder /app/build/bin/mdbx_chk /usr/local/bin/mdbx_chk\nCOPY --from=tools-builder /app/build/bin/mdbx_copy /usr/local/bin/mdbx_copy\nCOPY --from=tools-builder /app/build/bin/mdbx_drop /usr/local/bin/mdbx_drop\nCOPY --from=tools-builder /app/build/bin/mdbx_dump /usr/local/bin/mdbx_dump\nCOPY --from=tools-builder /app/build/bin/mdbx_load /usr/local/bin/mdbx_load\nCOPY --from=tools-builder /app/build/bin/mdbx_stat /usr/local/bin/mdbx_stat\n\n## then give each binary its own layer\nCOPY --from=builder /app/build/bin/devnet /usr/local/bin/devnet\nCOPY --from=builder /app/build/bin/downloader /usr/local/bin/downloader\nCOPY --from=builder /app/build/bin/erigon /usr/local/bin/erigon\nCOPY --from=builder /app/build/bin/evm /usr/local/bin/evm\nCOPY --from=builder /app/build/bin/hack /usr/local/bin/hack\nCOPY --from=builder /app/build/bin/integration /usr/local/bin/integration\nCOPY --from=builder /app/build/bin/observer /usr/local/bin/observer\nCOPY --from=builder /app/build/bin/pics /usr/local/bin/pics\nCOPY --from=builder /app/build/bin/rpcdaemon /usr/local/bin/rpcdaemon\nCOPY --from=builder /app/build/bin/rpctest /usr/local/bin/rpctest\nCOPY --from=builder /app/build/bin/sentinel /usr/local/bin/sentinel\nCOPY --from=builder /app/build/bin/sentry /usr/local/bin/sentry\nCOPY --from=builder /app/build/bin/state /usr/local/bin/state\nCOPY --from=builder /app/build/bin/txpool /usr/local/bin/txpool\nCOPY --from=builder /app/build/bin/verkle /usr/local/bin/verkle\nCOPY --from=builder /app/build/bin/caplin /usr/local/bin/caplin\n\n\nEXPOSE 8545 \\\n       8551 \\\n       8546 \\\n       30303 \\\n       30303/udp \\\n       42069 \\\n       42069/udp \\\n       8080 \\\n       9090 \\\n       6060\n\n# https://github.com/opencontainers/image-spec/blob/main/annotations.md\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.description=\"Erigon Ethereum Client\" \\\n      org.label-schema.name=\"Erigon\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://torquem.ch\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/erigontech/erigon.git\" \\\n      org.label-schema.vendor=\"Torquem\" \\\n      org.label-schema.version=$VERSION\n\nENTRYPOINT [\"erigon\"]\n"
        },
        {
          "name": "Dockerfile.debian",
          "type": "blob",
          "size": 3.6083984375,
          "content": "# syntax = docker/dockerfile:1.2\nFROM docker.io/library/golang:1.21-bullseye AS builder\n\nRUN apt update\nRUN apt install -y build-essential git bash ca-certificates libstdc++6\n\nWORKDIR /app\nADD go.mod go.mod\nADD go.sum go.sum\n\nRUN go mod download\nADD . .\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    make all\n\n\nFROM docker.io/library/golang:1.21-alpine3.17 AS tools-builder\n\nRUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++\nWORKDIR /app\n\nADD Makefile Makefile\nADD tools.go tools.go\nADD go.mod go.mod\nADD go.sum go.sum\n\nRUN mkdir -p /app/build/bin\n\nRUN make db-tools\n\nFROM docker.io/library/debian:bullseye\n\n# install required runtime libs, along with some helpers for debugging\nRUN apt update\nRUN apt install -y ca-certificates libstdc++6 tzdata\nRUN apt install -y curl jq dnsutils\n\n# Setup user and group\n#\n# from the perspective of the container, uid=1000, gid=1000 is a sensible choice\n# (mimicking Ubuntu Server), but if caller creates a .env (example in repo root),\n# these defaults will get overridden when make calls docker-compose\nARG UID=1000\nRUN adduser --uid $UID erigon\nUSER erigon\nRUN mkdir -p ~/.local/share/erigon\n\n# copy compiled artifacts from builder\n## first do the mdbx ones - since these wont change as often\nCOPY --from=tools-builder /app/build/bin/mdbx_chk /usr/local/bin/mdbx_chk\nCOPY --from=tools-builder /app/build/bin/mdbx_copy /usr/local/bin/mdbx_copy\nCOPY --from=tools-builder /app/build/bin/mdbx_drop /usr/local/bin/mdbx_drop\nCOPY --from=tools-builder /app/build/bin/mdbx_dump /usr/local/bin/mdbx_dump\nCOPY --from=tools-builder /app/build/bin/mdbx_load /usr/local/bin/mdbx_load\nCOPY --from=tools-builder /app/build/bin/mdbx_stat /usr/local/bin/mdbx_stat\n\n## then give each binary its own layer\nCOPY --from=builder /app/build/bin/devnet /usr/local/bin/devnet\nCOPY --from=builder /app/build/bin/downloader /usr/local/bin/downloader\nCOPY --from=builder /app/build/bin/erigon /usr/local/bin/erigon\nCOPY --from=builder /app/build/bin/erigon-cl /usr/local/bin/erigon-cl\nCOPY --from=builder /app/build/bin/evm /usr/local/bin/evm\nCOPY --from=builder /app/build/bin/hack /usr/local/bin/hack\nCOPY --from=builder /app/build/bin/integration /usr/local/bin/integration\nCOPY --from=builder /app/build/bin/observer /usr/local/bin/observer\nCOPY --from=builder /app/build/bin/pics /usr/local/bin/pics\nCOPY --from=builder /app/build/bin/rpcdaemon /usr/local/bin/rpcdaemon\nCOPY --from=builder /app/build/bin/rpctest /usr/local/bin/rpctest\nCOPY --from=builder /app/build/bin/sentinel /usr/local/bin/sentinel\nCOPY --from=builder /app/build/bin/sentry /usr/local/bin/sentry\nCOPY --from=builder /app/build/bin/state /usr/local/bin/state\nCOPY --from=builder /app/build/bin/txpool /usr/local/bin/txpool\nCOPY --from=builder /app/build/bin/verkle /usr/local/bin/verkle\nCOPY --from=builder /app/build/bin/caplin /usr/local/bin/caplin\n\nEXPOSE 8545 \\\n       8551 \\\n       8546 \\\n       30303 \\\n       30303/udp \\\n       42069 \\\n       42069/udp \\\n       8080 \\\n       9090 \\\n       6060\n\n# https://github.com/opencontainers/image-spec/blob/main/annotations.md\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.description=\"Erigon Ethereum Client\" \\\n      org.label-schema.name=\"Erigon\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://torquem.ch\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/erigontech/erigon.git\" \\\n      org.label-schema.vendor=\"Torquem\" \\\n      org.label-schema.version=$VERSION\n\nENTRYPOINT [\"erigon\"]\n"
        },
        {
          "name": "Dockerfile.release",
          "type": "blob",
          "size": 3.75390625,
          "content": "ARG RELEASE_DOCKER_BASE_IMAGE=\"debian:12.8-slim\" \\\n    CI_CD_MAIN_BUILDER_IMAGE=\"golang:1.22-bookworm\" \\\n    CI_CD_MAIN_TARGET_BASE_IMAGE=\"alpine:3\" \\\n    UID_ERIGON=1000 \\\n    GID_ERIGON=1000 \\\n    EXPOSED_PORTS=\"8545 \\\n       8551 \\\n       8546 \\\n       30303 \\\n       30303/udp \\\n       42069 \\\n       42069/udp \\\n       8080 \\\n       9090 \\\n       6060\"\n\n## Note TARGETARCH is a crucial variable:\n##   see https://docs.docker.com/reference/dockerfile/#automatic-platform-args-in-the-global-scope\n\n### Release Dockerfile\nFROM ${RELEASE_DOCKER_BASE_IMAGE} AS temporary\nARG TARGETARCH \\\n    TARGETVARIANT \\\n    VERSION=${VERSION} \\\n    APPLICATION\n\nCOPY ${APPLICATION}_${VERSION}_linux_${TARGETARCH}${TARGETVARIANT}.tar.gz /tmp/${APPLICATION}.tar.gz\n\nRUN tar xzvf /tmp/${APPLICATION}.tar.gz -C /tmp && \\\n    mv /tmp/${APPLICATION}_${VERSION}_linux_${TARGETARCH}${TARGETVARIANT} /tmp/${APPLICATION}\n\nFROM ${RELEASE_DOCKER_BASE_IMAGE} AS release\n\nARG USER=erigon \\\n    GROUP=erigon \\\n    UID_ERIGON \\\n    GID_ERIGON \\\n    TARGETARCH \\\n    APPLICATION \\\n    EXPOSED_PORTS\n\nSTOPSIGNAL 2\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN --mount=type=bind,from=temporary,source=/tmp/${APPLICATION},target=/tmp/${APPLICATION} \\\n    echo Installing on ${TARGETOS} with variant ${TARGETVARIANT} && \\\n    addgroup --gid ${GID_ERIGON} ${GROUP} && \\\n    adduser --system --uid ${UID_ERIGON} --ingroup ${GROUP} --home /home/${USER} --shell /bin/bash ${USER} && \\\n    apt update -y && \\\n    apt install -y --no-install-recommends ca-certificates && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    if [ \"x${TARGETARCH}\" == \"xamd64\" ]; then \\\n        echo \"Installing libsilkworm_capi.so library to /lib/x86_64-linux-gnu/ in case amd64 architecture:\"; \\\n        find /tmp/${APPLICATION} -name libsilkworm_capi.so -type f | xargs -I % install -m a=r -v % /lib/x86_64-linux-gnu/; \\\n        echo \"Done.\" ; \\\n    fi && \\\n    install -d -o ${USER} -g ${GROUP} /home/${USER}/.local /home/${USER}/.local/share /home/${USER}/.local/share/erigon && \\\n    install -o root -g root /tmp/${APPLICATION}/erigon /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/integration /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/diag /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/sentry /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/txpool /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/downloader /usr/local/bin/ && \\\n    install -o root -g root /tmp/${APPLICATION}/rpcdaemon /usr/local/bin/\n\nVOLUME [ \"/home/${USER}\" ]\nWORKDIR /home/${USER}\n\nUSER ${USER}\n\nEXPOSE ${EXPOSED_PORTS}\n\nENTRYPOINT [ \"/usr/local/bin/erigon\" ]\n\n### End of Release Dockerfile\n\n\n### CI-CD : main branch docker image publishing for each new commit id\nFROM ${CI_CD_MAIN_BUILDER_IMAGE} AS ci-cd-main-branch-builder\n\nCOPY /build-amd64 /build-amd64/\nCOPY /build-arm64 /build-arm64/\n\nRUN echo \"DEBUG: content of build-amd64\" && ls -l /build-amd64 && \\\n    echo && \\\n    echo \"DEBUG: content of build-arm64\" && ls -l /build-arm64\n\n\nFROM ${CI_CD_MAIN_TARGET_BASE_IMAGE} AS ci-cd-main-branch\nARG USER=erigon \\\n    GROUP=erigon \\\n    TARGETARCH \\\n    EXPOSED_PORTS\n\nRUN --mount=type=bind,from=ci-cd-main-branch-builder,source=/build-${TARGETARCH},target=/tmp/erigon \\\n    apk add --no-cache ca-certificates tzdata libstdc++ && \\\n    addgroup ${GROUP} && \\\n    adduser -D -h /home/${USER} -G ${GROUP} ${USER} && \\\n    install -d -o ${USER} -g ${GROUP} /home/${USER}/.local /home/${USER}/.local/share /home/${USER}/.local/share/erigon && \\\n    install -o ${USER} -g ${GROUP} /tmp/erigon/* /usr/local/bin/\n\nVOLUME [ \"/home/${USER}\" ]\nWORKDIR /home/${USER}\n\nUSER ${USER}\nEXPOSE ${EXPOSED_PORTS}\n\nENTRYPOINT [ \"/usr/local/bin/erigon\" ]\n\n### End of CI-CD : main branch docker image publishing for each new commit id\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 13.53125,
          "content": "GO ?= go # if using docker, should not need to be installed/linked\nGOAMD64_VERSION ?= v2 # See https://go.dev/wiki/MinimumRequirements#microarchitecture-support\nGOBINREL = build/bin\nGOBIN = $(CURDIR)/$(GOBINREL)\nUNAME = $(shell uname) # Supported: Darwin, Linux\nDOCKER := $(shell command -v docker 2> /dev/null)\n\nGIT_COMMIT ?= $(shell git rev-list -1 HEAD)\nGIT_BRANCH ?= $(shell git rev-parse --abbrev-ref HEAD)\nGIT_TAG    ?= $(shell git describe --tags '--match=*.*.*' --abbrev=7 --dirty)\nERIGON_USER ?= erigon\n# if using volume-mounting data dir, then must exist on host OS\nDOCKER_UID ?= $(shell id -u)\nDOCKER_GID ?= $(shell id -g)\nDOCKER_TAG ?= erigontech/erigon:latest\n\n# Variables below for building on host OS, and are ignored for docker\n#\n# Pipe error below to /dev/null since Makefile structure kind of expects\n# Go to be available, but with docker it's not strictly necessary\nCGO_CFLAGS := $(shell $(GO) env CGO_CFLAGS 2>/dev/null) # don't lose default\nCGO_CFLAGS += -DMDBX_FORCE_ASSERTIONS=0 # Enable MDBX's asserts by default in 'main' branch and disable in releases\nCGO_CFLAGS += -DMDBX_DISABLE_VALIDATION=0 # Can disable it on CI by separated PR which will measure perf impact.\n#CGO_CFLAGS += -DMDBX_ENABLE_PROFGC=0 # Disabled by default, but may be useful for performance debugging\n#CGO_CFLAGS += -DMDBX_ENABLE_PGOP_STAT=0 # Disabled by default, but may be useful for performance debugging\nCGO_CFLAGS += -DMDBX_ENV_CHECKPID=0 # Erigon doesn't do fork() syscall\n\n# If it is arm64 or aarch64, then we need to use portable version of blst. use or with stringw \"arm64\" and \"aarch64\" to support both\nifeq ($(shell uname -m), arm64)\n\tCGO_CFLAGS += -D__BLST_PORTABLE__\nendif\nifeq ($(shell uname -m), aarch64)\n\tCGO_CFLAGS += -D__BLST_PORTABLE__\nendif\n\n# Configure GOAMD64 env.variable for AMD64 architecture:\nifeq ($(shell uname -m),x86_64)\n\tCPU_ARCH= GOAMD64=${GOAMD64_VERSION}\nendif\n\nCGO_CFLAGS += -Wno-unknown-warning-option -Wno-enum-int-mismatch -Wno-strict-prototypes -Wno-unused-but-set-variable -O3\n\nCGO_LDFLAGS := $(shell $(GO) env CGO_LDFLAGS 2> /dev/null)\nCGO_LDFLAGS += -O3 -g\n\nifeq ($(shell uname -s), Darwin)\n\tifeq ($(filter-out 13.%,$(shell sw_vers --productVersion)),)\n\t\tCGO_LDFLAGS += -mmacosx-version-min=13.3\n\tendif\nendif\n\n# about netgo see: https://github.com/golang/go/issues/30310#issuecomment-471669125 and https://github.com/golang/go/issues/57757\nBUILD_TAGS = nosqlite,noboltdb\n\nifneq ($(shell \"$(CURDIR)/turbo/silkworm/silkworm_compat_check.sh\"),)\n\tBUILD_TAGS := $(BUILD_TAGS),nosilkworm\nendif\n\nGOPRIVATE = github.com/erigontech/silkworm-go\n\nPACKAGE = github.com/erigontech/erigon\n\nGO_FLAGS += -trimpath -tags $(BUILD_TAGS) -buildvcs=false\nGO_FLAGS += -ldflags \"-X ${PACKAGE}/params.GitCommit=${GIT_COMMIT} -X ${PACKAGE}/params.GitBranch=${GIT_BRANCH} -X ${PACKAGE}/params.GitTag=${GIT_TAG}\"\n\nGOBUILD = ${CPU_ARCH} CGO_CFLAGS=\"$(CGO_CFLAGS)\" CGO_LDFLAGS=\"$(CGO_LDFLAGS)\" GOPRIVATE=\"$(GOPRIVATE)\" $(GO) build $(GO_FLAGS)\nGO_DBG_BUILD = ${CPU_ARCH} CGO_CFLAGS=\"$(CGO_CFLAGS) -DMDBX_DEBUG=1\" CGO_LDFLAGS=\"$(CGO_LDFLAGS)\" GOPRIVATE=\"$(GOPRIVATE)\" $(GO) build -tags $(BUILD_TAGS),debug -gcflags=all=\"-N -l\"  # see delve docs\nGOTEST = ${CPU_ARCH} CGO_CFLAGS=\"$(CGO_CFLAGS)\" CGO_LDFLAGS=\"$(CGO_LDFLAGS)\" GOPRIVATE=\"$(GOPRIVATE)\" GODEBUG=cgocheck=0 GOTRACEBACK=1 $(GO) test $(GO_FLAGS) ./...\n\ndefault: all\n\n## go-version:                        print and verify go version\ngo-version:\n\t@if [ $(shell $(GO) version | cut -c 16-17) -lt 20 ]; then \\\n\t\techo \"minimum required Golang version is 1.20\"; \\\n\t\texit 1 ;\\\n\tfi\n\n## validate_docker_build_args:        ensure docker build args are valid\nvalidate_docker_build_args:\n\t@echo \"Docker build args:\"\n\t@echo \"    DOCKER_UID: $(DOCKER_UID)\"\n\t@echo \"    DOCKER_GID: $(DOCKER_GID)\\n\"\n\t@echo \"Ensuring host OS user exists with specified UID/GID...\"\n\t@if [ \"$(UNAME)\" = \"Darwin\" ]; then \\\n\t\tdscl . list /Users UniqueID | grep \"$(DOCKER_UID)\"; \\\n\telif [ \"$(UNAME)\" = \"Linux\" ]; then \\\n\t\tcat /etc/passwd | grep \"$(DOCKER_UID):$(DOCKER_GID)\"; \\\n\tfi\n\t@echo \"✔️ host OS user exists: $(shell id -nu $(DOCKER_UID))\"\n\n## docker:                            validate, update submodules and build with docker\ndocker: validate_docker_build_args git-submodules\n\tDOCKER_BUILDKIT=1 $(DOCKER) build -t ${DOCKER_TAG} \\\n\t\t--build-arg \"BUILD_DATE=$(shell date +\"%Y-%m-%dT%H:%M:%S:%z\")\" \\\n\t\t--build-arg VCS_REF=${GIT_COMMIT} \\\n\t\t--build-arg VERSION=${GIT_TAG} \\\n\t\t--build-arg UID=${DOCKER_UID} \\\n\t\t--build-arg GID=${DOCKER_GID} \\\n\t\t${DOCKER_FLAGS} \\\n\t\t.\n\nxdg_data_home :=  ~/.local/share\nifdef XDG_DATA_HOME\n\txdg_data_home = $(XDG_DATA_HOME)\nendif\nxdg_data_home_subdirs = $(xdg_data_home)/erigon $(xdg_data_home)/erigon-grafana $(xdg_data_home)/erigon-prometheus\n\n## setup_xdg_data_home:               TODO\nsetup_xdg_data_home:\n\tmkdir -p $(xdg_data_home_subdirs)\n\tls -aln $(xdg_data_home) | grep -E \"472.*0.*erigon-grafana\" || chown -R 472:0 $(xdg_data_home)/erigon-grafana\n\t@echo \"✔️ xdg_data_home setup\"\n\t@ls -al $(xdg_data_home)\n\n## docker-compose:                    validate build args, setup xdg data home, and run docker-compose up\ndocker-compose: validate_docker_build_args setup_xdg_data_home\n\tdocker compose up\n\n## dbg                                debug build allows see C stack traces, run it with GOTRACEBACK=crash. You don't need debug build for C pit for profiling. To profile C code use SETCGOTRCKEBACK=1\ndbg:\n\t$(GO_DBG_BUILD) -o $(GOBIN)/ ./cmd/...\n\n%.cmd:\n\t@# Note: $* is replaced by the command name\n\t@echo \"Building $*\"\n\t@cd ./cmd/$* && $(GOBUILD) -o $(GOBIN)/$*\n\t@echo \"Run \\\"$(GOBIN)/$*\\\" to launch $*.\"\n\n## geth:                              run erigon (TODO: remove?)\ngeth: erigon\n\n## erigon:                            build erigon\nerigon: go-version erigon.cmd\n\t@rm -f $(GOBIN)/tg # Remove old binary to prevent confusion where users still use it because of the scripts\n\nCOMMANDS += devnet\nCOMMANDS += capcli\nCOMMANDS += downloader\nCOMMANDS += hack\nCOMMANDS += integration\nCOMMANDS += observer\nCOMMANDS += pics\nCOMMANDS += rpcdaemon\nCOMMANDS += rpctest\nCOMMANDS += sentry\nCOMMANDS += state\nCOMMANDS += txpool\nCOMMANDS += verkle\nCOMMANDS += evm\nCOMMANDS += sentinel\nCOMMANDS += caplin\nCOMMANDS += snapshots\nCOMMANDS += diag\n\n# build each command using %.cmd rule\n$(COMMANDS): %: %.cmd\n\n## all:                               run erigon with all commands\nall: erigon $(COMMANDS)\n\n## db-tools:                          build db tools\ndb-tools:\n\t@echo \"Building db-tools\"\n\n\tgo mod vendor\n\tcd vendor/github.com/erigontech/mdbx-go && MDBX_BUILD_TIMESTAMP=unknown make tools\n\tmkdir -p $(GOBIN)\n\tcd vendor/github.com/erigontech/mdbx-go/mdbxdist && cp mdbx_chk $(GOBIN) && cp mdbx_copy $(GOBIN) && cp mdbx_dump $(GOBIN) && cp mdbx_drop $(GOBIN) && cp mdbx_load $(GOBIN) && cp mdbx_stat $(GOBIN)\n\trm -rf vendor\n\t@echo \"Run \\\"$(GOBIN)/mdbx_stat -h\\\" to get info about mdbx db file.\"\n\ntest-erigon-lib:\n\t@cd erigon-lib && $(MAKE) test\n\ntest-erigon-ext:\n\t@cd tests/erigon-ext-test && ./test.sh $(GIT_COMMIT)\n\n## test:                              run unit tests with a 100s timeout\ntest: test-erigon-lib\n\t$(GOTEST) --timeout 10m -coverprofile=coverage.out\n\n## test-integration:                  run integration tests with a 30m timeout\ntest-integration: test-erigon-lib\n\t$(GOTEST) --timeout 240m -tags $(BUILD_TAGS),integration\n\n## test-hive\t\t\t\t\t\trun the hive tests locally off nektos/act workflows simulator\ntest-hive:\t\n\t@if ! command -v act >/dev/null 2>&1; then \\\n\t\techo \"act command not found in PATH, please source it in PATH. If nektosact is not installed, install it by visiting https://nektosact.com/installation/index.html\"; \\\n\telif [ -z \"$(GITHUB_TOKEN)\"]; then \\\n\t\techo \"Please export GITHUB_TOKEN var in the environment\" ; \\\n\telif [ \"$(SUITE)\" = \"eest\" ]; then \\\n\t\tact -j test-hive-eest -s GITHUB_TOKEN=$(GITHUB_TOKEN) ; \\\n\telse \\\n\t\tact -j test-hive -s GITHUB_TOKEN=$(GITHUB_TOKEN) ; \\\n\tfi\n\n## lint-deps:                         install lint dependencies\nlint-deps:\n\t@cd erigon-lib && $(MAKE) lint-deps\n\n## lintci:                            run golangci-lint linters\nlintci:\n\t@cd erigon-lib && $(MAKE) lintci\n\t@./erigon-lib/tools/golangci_lint.sh\n\n## lint:                              run all linters\nlint:\n\t@cd erigon-lib && $(MAKE) lint\n\t@./erigon-lib/tools/golangci_lint.sh\n\t@./erigon-lib/tools/mod_tidy_check.sh\n\n## clean:                             cleans the go cache, build dir, libmdbx db dir\nclean:\n\tgo clean -cache\n\trm -fr build/*\n\n# The devtools target installs tools required for 'go generate'.\n# You need to put $GOBIN (or $GOPATH/bin) in your PATH to use 'go generate'.\n\n## devtools:                          installs dev tools (and checks for npm installation etc.)\ndevtools:\n\t# Notice! If you adding new binary - add it also to tools.go file\n\t$(GOBUILD) -o $(GOBIN)/gencodec github.com/fjl/gencodec\n\t$(GOBUILD) -o $(GOBIN)/abigen ./cmd/abigen\n\t@type \"npm\" 2> /dev/null || echo 'Please install node.js and npm'\n\t@type \"solc\" 2> /dev/null || echo 'Please install solc'\n\t@type \"protoc\" 2> /dev/null || echo 'Please install protoc'\n\n## mocks:                             generate test mocks\nmocks:\n\t@cd erigon-lib && $(MAKE) mocks\n\trm -f $(GOBIN)/mockgen\n\t$(GOBUILD) -o \"$(GOBIN)/mockgen\" go.uber.org/mock/mockgen\n\tgrep -r -l --exclude-dir=\"erigon-lib\" --exclude-dir=\"tests\" --exclude-dir=\"*$(GOBINREL)*\" \"^// Code generated by MockGen. DO NOT EDIT.$$\" . | xargs rm -r\n\tPATH=\"$(GOBIN):$(PATH)\" go generate -run \"mockgen\" ./...\n\n## solc:                              generate all solidity contracts\nsolc:\n\tPATH=\"$(GOBIN):$(PATH)\" go generate -run \"solc\" ./...\n\n## abigen:                            generate abis using abigen\nabigen:\n\t$(GOBUILD) -o $(GOBIN)/abigen ./cmd/abigen\n\tPATH=\"$(GOBIN):$(PATH)\" go generate -run \"abigen\" ./...\n\n## gencodec:                          generate marshalling code using gencodec\ngencodec:\n\t$(GOBUILD) -o $(GOBIN)/gencodec github.com/fjl/gencodec\n\tPATH=\"$(GOBIN):$(PATH)\" go generate -run \"gencodec\" ./...\n\n## graphql:                           generate graphql code\ngraphql:\n\tPATH=$(GOBIN):$(PATH) cd ./cmd/rpcdaemon/graphql && go run github.com/99designs/gqlgen .\n\n## gen:                               generate all auto-generated code in the codebase\ngen: mocks solc abigen gencodec graphql\n\t@cd erigon-lib && $(MAKE) gen\n\n## bindings:                          generate test contracts and core contracts\nbindings:\n\tPATH=$(GOBIN):$(PATH) go generate ./tests/contracts/\n\tPATH=$(GOBIN):$(PATH) go generate ./core/state/contracts/\n\n## prometheus:                        run prometheus and grafana with docker-compose\nprometheus:\n\tdocker compose up prometheus grafana\n\n## escape:                            run escape path={path} to check for memory leaks e.g. run escape path=cmd/erigon\nescape:\n\tcd $(path) && go test -gcflags \"-m -m\" -run none -bench=BenchmarkJumpdest* -benchmem -memprofile mem.out\n\n## git-submodules:                    update git submodules\ngit-submodules:\n\t@[ -d \".git\" ] || (echo \"Not a git repository\" && exit 1)\n\t@echo \"Updating git submodules\"\n\t@# Dockerhub using ./hooks/post-checkout to set submodules, so this line will fail on Dockerhub\n\t@# these lines will also fail if ran as root in a non-root user's checked out repository\n\t@git submodule sync --quiet --recursive || true\n\t@git submodule update --quiet --init --recursive --force || true\n\n## install:                            copies binaries and libraries to DIST\nDIST ?= $(CURDIR)/build/dist\n.PHONY: install\ninstall:\n\tmkdir -p \"$(DIST)\"\n\tcp -f \"$$($(CURDIR)/turbo/silkworm/silkworm_lib_path.sh)\" \"$(DIST)\"\n\tcp -f \"$(GOBIN)/\"* \"$(DIST)\"\n\t@echo \"Copied files to $(DIST):\"\n\t@ls -al \"$(DIST)\"\n\nPACKAGE_NAME          := github.com/erigontech/erigon\nGOLANG_CROSS_VERSION  ?= v1.21.5\n\n\n.PHONY: release-dry-run\nrelease-dry-run: git-submodules\n\t@docker run \\\n\t\t--rm \\\n\t\t--privileged \\\n\t\t-e CGO_ENABLED=1 \\\n\t\t-e GITHUB_TOKEN \\\n\t\t-e DOCKER_USERNAME \\\n\t\t-e DOCKER_PASSWORD \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t-v `pwd`:/go/src/$(PACKAGE_NAME) \\\n\t\t-w /go/src/$(PACKAGE_NAME) \\\n\t\tghcr.io/goreleaser/goreleaser-cross:${GOLANG_CROSS_VERSION} \\\n\t\t--clean --skip=validate --skip=publish\n# since DOCKER_UID, DOCKER_GID are default initialized to the current user uid/gid,\n# we need separate envvars to facilitate creation of the erigon user on the host OS.\nERIGON_USER_UID ?= 3473\nERIGON_USER_GID ?= 3473\n\n## user_linux:                        create \"erigon\" user (Linux)\nuser_linux:\nifdef DOCKER\n\tsudo groupadd -f docker\nendif\n\tsudo addgroup --gid $(ERIGON_USER_GID) $(ERIGON_USER) 2> /dev/null || true\n\tsudo adduser --disabled-password --gecos '' --uid $(ERIGON_USER_UID) --gid $(ERIGON_USER_GID) $(ERIGON_USER) 2> /dev/null || true\n\tsudo mkhomedir_helper $(ERIGON_USER)\n\techo 'export PATH=$$PATH:/usr/local/go/bin' | sudo -u $(ERIGON_USER) tee /home/$(ERIGON_USER)/.bash_aliases >/dev/null\nifdef DOCKER\n\tsudo usermod -aG docker $(ERIGON_USER)\nendif\n\tsudo -u $(ERIGON_USER) mkdir -p /home/$(ERIGON_USER)/.local/share\n\n## user_macos:                        create \"erigon\" user (MacOS)\nuser_macos:\n\tsudo dscl . -create /Users/$(ERIGON_USER)\n\tsudo dscl . -create /Users/$(ERIGON_USER) UserShell /bin/bash\n\tsudo dscl . -list /Users UniqueID | grep $(ERIGON_USER) | grep $(ERIGON_USER_UID) || sudo dscl . -create /Users/$(ERIGON_USER) UniqueID $(ERIGON_USER_UID)\n\tsudo dscl . -create /Users/$(ERIGON_USER) PrimaryGroupID $(ERIGON_USER_GID)\n\tsudo dscl . -create /Users/$(ERIGON_USER) NFSHomeDirectory /Users/$(ERIGON_USER)\n\tsudo dscl . -append /Groups/admin GroupMembership $(ERIGON_USER)\n\tsudo -u $(ERIGON_USER) mkdir -p /Users/$(ERIGON_USER)/.local/share\n\n## automated-tests                    run automated tests (BUILD_ERIGON=0 to prevent erigon build with local image tag)\n.PHONY: automated-tests\nautomated-tests:\n\t./tests/automated-testing/run.sh\n\n## help:                              print commands help\nhelp\t:\tMakefile\n\t@sed -n 's/^##//p' $<\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 33.7177734375,
          "content": "# Erigon\n\nDocumentation: **[docs.erigon.tech](https://docs.erigon.tech)**\nBlog: **[erigon.substack.com](https://erigon.substack.com/)**\nTwitter: [x.com/ErigonEth](https://x.com/ErigonEth)\n\nErigon is an implementation of Ethereum (execution layer with embeddable consensus layer), on the efficiency\nfrontier.\n\n<br>\n\n![Build status](https://github.com/erigontech/erigon/actions/workflows/ci.yml/badge.svg) [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=erigontech_erigon&metric=coverage)](https://sonarcloud.io/summary/new_code?id=erigontech_erigon)\n\n<!--ts-->\n\n- [Erigon](#erigon)\n- [System Requirements](#system-requirements)\n- [Usage](#usage)\n    - [Getting Started](#getting-started)\n    - [Datadir structure](#datadir-structure)\n    - [History on cheap disk](#history-on-cheap-disk)\n    - [Erigon3 datadir size](#erigon3-datadir-size)\n    - [Erigon3 changes from Erigon2](#erigon3-changes-from-erigon2)\n    - [Logging](#logging)\n    - [Modularity](#modularity)\n    - [Embedded Consensus Layer](#embedded-consensus-layer)\n    - [Testnets](#testnets)\n    - [Block Production (PoS Validator)](#block-production-pos-validator)\n    - [Config Files TOML](#config-files-toml)\n    - [Beacon Chain (Consensus Layer)](#beacon-chain-consensus-layer)\n    - [Caplin](#caplin)\n        - [Caplin's Usage](#caplins-usage)\n    - [Multiple Instances / One Machine](#multiple-instances--one-machine)\n    - [Dev Chain](#dev-chain)\n- [Key features](#key-features)\n    - [Faster Initial Sync](#faster-initial-sync)\n    - [More Efficient State Storage](#more-efficient-state-storage)\n    - [JSON-RPC daemon](#json-rpc-daemon)\n    - [Grafana dashboard](#grafana-dashboard)\n- [FAQ](#faq)\n    - [Use as library](#use-as-library)\n    - [Default Ports and Firewalls](#default-ports-and-firewalls)\n        - [`erigon` ports](#erigon-ports)\n        - [`caplin` ports](#caplin-ports)\n        - [`beaconAPI` ports](#beaconapi-ports)\n        - [`shared` ports](#shared-ports)\n        - [`other` ports](#other-ports)\n        - [Hetzner expecting strict firewall rules](#hetzner-expecting-strict-firewall-rules)\n    - [Run as a separate user - `systemd` example](#run-as-a-separate-user---systemd-example)\n    - [Grab diagnostic for bug report](#grab-diagnostic-for-bug-report)\n    - [Run local devnet](#run-local-devnet)\n    - [Docker permissions error](#docker-permissions-error)\n    - [Public RPC](#public-rpc)\n    - [RaspberryPI](#raspberrypi)\n    - [Run all components by docker-compose](#run-all-components-by-docker-compose)\n        - [Optional: Setup dedicated user](#optional-setup-dedicated-user)\n        - [Environment Variables](#environment-variables)\n        - [Run](#run)\n    - [How to change db pagesize](#how-to-change-db-pagesize)\n    - [Erigon3 perf tricks](#erigon3-perf-tricks)\n    - [Windows](#windows)\n- [Getting in touch](#getting-in-touch)\n    - [Erigon Discord Server](#erigon-discord-server)\n    - [Blog](#blog)\n    - [Twitter](#twitter)\n    - [Reporting security issues/concerns](#reporting-security-issuesconcerns)\n- [Known issues](#known-issues)\n    - [`htop` shows incorrect memory usage](#htop-shows-incorrect-memory-usage)\n    - [Cloud network drives](#cloud-network-drives)\n    - [Filesystem's background features are expensive](#filesystems-background-features-are-expensive)\n    - [Gnome Tracker can kill Erigon](#gnome-tracker-can-kill-erigon)\n    - [the --mount option requires BuildKit error](#the---mount-option-requires-buildkit-error)\n\n<!--te-->\n\n**Important defaults**: Erigon 3 is a Full Node by default. (Erigon 2 was an [Archive Node](https://ethereum.org/en/developers/docs/nodes-and-clients/archive-nodes/#what-is-an-archive-node) by default.)\nSet `--prune.mode` to \"archive\" if you need an archive node or to \"minimal\" if you run a validator on a small disk (not allowed to change after first start).\n\n<code>In-depth links are marked by the microscope sign (🔬) </code>\n\nSystem Requirements\n===================\n\nRAM: >=32GB, [Golang >= 1.22](https://golang.org/doc/install); GCC 10+ or Clang; On Linux: kernel > v4. 64-bit\narchitecture.\n\n- ArchiveNode Ethereum Mainnet: 2TB (April 2024). FullNode: 1.1TB (June 2024)\n- ArchiveNode Gnosis: 1.7TB (March 2024). FullNode: 300GB (June 2024)\n- ArchiveNode Polygon Mainnet: 4.1TB (April 2024). FullNode: 2Tb (April 2024)\n\nSSD or NVMe. Do not recommend HDD - on HDD Erigon will always stay N blocks behind chain tip, but not fall behind.\nBear in mind that SSD performance deteriorates when close to capacity. CloudDrives (like\ngp3): Blocks Execution is slow\non [cloud-network-drives](https://github.com/erigontech/erigon?tab=readme-ov-file#cloud-network-drives)\n\n🔬 More details on [Erigon3 datadir size](#erigon3-datadir-size)\n\n🔬 More details on what type of data stored [here](https://ledgerwatch.github.io/turbo_geth_release.html#Disk-space)\n\nUsage\n=====\n\n### Getting Started\n\n[Release Notes and Binaries](https://github.com/erigontech/erigon/releases)\n\nBuild latest release (this will be suitable for most users just wanting to run a node):\n\n```sh\ngit clone --branch release/<x.xx> --single-branch https://github.com/erigontech/erigon.git\ncd erigon\nmake erigon\n./build/bin/erigon\n```\n\nIncrease download speed by `--torrent.download.rate=20mb`. <code>🔬\nSee [Downloader docs](./cmd/downloader/readme.md)</code>\n\nUse `--datadir` to choose where to store data.\n\nUse `--chain=gnosis` for [Gnosis Chain](https://www.gnosis.io/), `--chain=bor-mainnet` for Polygon Mainnet,\nand `--chain=amoy` for Polygon Amoy.\nFor Gnosis Chain you need a [Consensus Layer](#beacon-chain-consensus-layer) client alongside\nErigon (https://docs.gnosischain.com/category/step--3---run-consensus-client).\n\nRunning `make help` will list and describe the convenience commands available in the [Makefile](./Makefile).\n\n### Datadir structure\n\n```sh\ndatadir        \n    chaindata     # \"Recently-updated Latest State\", \"Recent History\", \"Recent Blocks\"\n    snapshots     # contains `.seg` files - it's old blocks\n        domain    # Latest State\n        history   # Historical values \n        idx       # InvertedIndices: can search/filtering/union/intersect them - to find historical data. like eth_getLogs or trace_transaction\n        accessor # Additional (generated) indices of history - have \"random-touch\" read-pattern. They can serve only `Get` requests (no search/filters).\n    txpool        # pending transactions. safe to remove.\n    nodes         # p2p peers. safe to remove.\n    temp          # used to sort data bigger than RAM. can grow to ~100gb. cleaned at startup.\n   \n# There is 4 domains: account, storage, code, commitment \n```\n\n### History on cheap disk\n\nIf you can afford store datadir on 1 nvme-raid - great. If can't - it's possible to store history on cheap drive.\n\n```sh\n# place (or ln -s) `datadir` on slow disk. link some sub-folders to fast (low-latency) disk.\n# Example: what need link to fast disk to speedup execution\ndatadir        \n    chaindata   # link to fast disk\n    snapshots   \n        domain    # link to fast disk\n        history   \n        idx       \n        accessor \n    temp # buffers to sort data >> RAM. sequential-buffered IO - is slow-disk-friendly   \n\n# Example: how to speedup history access: \n#   - go step-by-step - first try store `accessor` on fast disk\n#   - if speed is not good enough: `idx`\n#   - if still not enough: `history` \n```\n\n### Erigon3 datadir size\n\n```sh\n# eth-mainnet - archive - Nov 2024\n\ndu -hsc /erigon/chaindata\n15G \t/erigon/chaindata\n\ndu -hsc /erigon/snapshots/* \n120G \t/erigon/snapshots/accessor\n300G\t/erigon/snapshots/domain\n280G\t/erigon/snapshots/history\n430G\t/erigon/snapshots/idx\n2.3T\t/erigon/snapshots\n```\n\n```sh\n# bor-mainnet - archive - Nov 2024\n\ndu -hsc /erigon/chaindata\n20G \t/erigon/chaindata\n\ndu -hsc /erigon/snapshots/* \n360G\t/erigon-data/snapshots/accessor\n1.1T\t/erigon-data/snapshots/domain\n750G\t/erigon-data/snapshots/history\n1.5T\t/erigon-data/snapshots/idx\n4.9T\t/erigon/snapshots\n```\n\n### Erigon3 changes from Erigon2\n\n- **Initial sync doesn't re-exec from 0:** downloading 99% LatestState and History\n- **Per-Transaction granularity of history** (Erigon2 had per-block). Means:\n    - Can execute 1 historical transaction - without executing it's block\n    - If account X change V1->V2->V1 within 1 block (different transactions): `debug_getModifiedAccountsByNumber` return\n      it\n    - Erigon3 doesn't store Logs (aka Receipts) - it always re-executing historical txn (but it's cheaper)\n- **Validator mode**: added. `--internalcl` is enabled by default. to disable use `--externalcl`.\n- **Store most of data in immutable files (segments/snapshots):**\n    - can symlink/mount latest state to fast drive and history to cheap drive\n    - `chaindata` is less than `15gb`. It's ok to `rm -rf chaindata`. (to prevent grow: recommend `--batchSize <= 1G`)\n- **`--prune` flags changed**: see `--prune.mode` (default: `full`, archive: `archive`, EIP-4444: `minimal`)\n- **Other changes:**\n    - ExecutionStage included many E2 stages: stage_hash_state, stage_trie, log_index, history_index, trace_index\n    - Restart doesn't loose much partial progress: `--sync.loop.block.limit=5_000` enabled by default\n\n### Logging\n\n_Flags:_\n\n- `verbosity`\n- `log.console.verbosity` (overriding alias for `verbosity`)\n- `log.json`\n- `log.console.json` (alias for `log.json`)\n- `log.dir.path`\n- `log.dir.prefix`\n- `log.dir.verbosity`\n- `log.dir.json`\n\nIn order to log only to the stdout/stderr the `--verbosity` (or `log.console.verbosity`) flag can be used to supply an\nint value specifying the highest output log level:\n\n```\n  LvlCrit = 0\n  LvlError = 1\n  LvlWarn = 2\n  LvlInfo = 3\n  LvlDebug = 4\n  LvlTrace = 5\n```\n\nTo set an output dir for logs to be collected on disk, please set `--log.dir.path` If you want to change the filename\nproduced from `erigon` you should also set the `--log.dir.prefix` flag to an alternate name. The\nflag `--log.dir.verbosity` is\nalso available to control the verbosity of this logging, with the same int value as above, or the string value e.g. '\ndebug' or 'info'. Default verbosity is 'debug' (4), for disk logging.\n\nLog format can be set to json by the use of the boolean flags `log.json` or `log.console.json`, or for the disk\noutput `--log.dir.json`.\n\n### Modularity\n\nErigon by default is \"all in one binary\" solution, but it's possible start TxPool as separated processes.\nSame true about: JSON RPC layer (RPCDaemon), p2p layer (Sentry), history download layer (Downloader), consensus.\nDon't start services as separated processes unless you have clear reason for it: resource limiting, scale, replace by\nyour own implementation, security.\nHow to start Erigon's services as separated processes, see in [docker-compose.yml](./docker-compose.yml).\nEach service has own `./cmd/*/README.md` file.\n[Erigon Blog](https://erigon.substack.com/).\n\n### Embedded Consensus Layer\n\nBuilt-in consensus for Ethereum Mainnet, Sepolia, Holesky, Gnosis.\nTo use external Consensus Layer: `--externalcl`.\n\n### Testnets\n\nIf you would like to give Erigon a try: a good option is to start syncing one of the public testnets, Holesky (or Amoy).\nIt syncs much quicker, and does not take so much disk space:\n\n```sh\ngit clone https://github.com/erigontech/erigon.git\ncd erigon\nmake erigon\n./build/bin/erigon --datadir=<your_datadir> --chain=holesky --prune.mode=full\n```\n\nPlease note the `--datadir` option that allows you to store Erigon files in a non-default location. Name of the\ndirectory `--datadir` does not have to match the name of the chain in `--chain`.\n\n### Block Production (PoS Validator)\n\nBlock production is fully supported for Ethereum & Gnosis Chain. It is still experimental for Polygon.\n\n### Config Files TOML\n\nYou can set Erigon flags through a TOML configuration file with the flag `--config`. The flags set in the\nconfiguration file can be overwritten by writing the flags directly on Erigon command line\n\n`./build/bin/erigon --config ./config.toml --chain=sepolia`\n\nAssuming we have `chain : \"mainnet\"` in our configuration file, by adding `--chain=sepolia` allows the overwrite of the\nflag inside of the toml configuration file and sets the chain to sepolia\n\n```toml\ndatadir = 'your datadir'\nport = 1111\nchain = \"mainnet\"\nhttp = true\n\"private.api.addr\"=\"localhost:9090\"\n\n\"http.api\" = [\"eth\",\"debug\",\"net\"]\n```\n\n### Beacon Chain (Consensus Layer)\n\nErigon can be used as an Execution Layer (EL) for Consensus Layer clients (CL). Default configuration is OK.\n\nIf your CL client is on a different device, add `--authrpc.addr 0.0.0.0` ([Engine API] listens on localhost by default)\nas well as `--authrpc.vhosts <CL host>` where `<CL host>` is your source host or `any`.\n\n[Engine API]: https://github.com/ethereum/execution-apis/blob/main/src/engine\n\nIn order to establish a secure connection between the Consensus Layer and the Execution Layer, a JWT secret key is\nautomatically generated.\n\nThe JWT secret key will be present in the datadir by default under the name of `jwt.hex` and its path can be specified\nwith the flag `--authrpc.jwtsecret`.\n\nThis piece of info needs to be specified in the Consensus Layer as well in order to establish connection successfully.\nMore information can be found [here](https://github.com/ethereum/execution-apis/blob/main/src/engine/authentication.md).\n\nOnce Erigon is running, you need to point your CL client to `<erigon address>:8551`,\nwhere `<erigon address>` is either `localhost` or the IP address of the device running Erigon, and also point to the JWT\nsecret path created by Erigon.\n\n### Caplin\n\nCaplin is a full-fledged validating Consensus Client like Prysm, Lighthouse, Teku, Nimbus and Lodestar. Its goal is:\n\n* provide better stability\n* Validation of the chain\n* Stay in sync\n* keep the execution of blocks on chain tip\n* serve the Beacon API using a fast and compact data model alongside low CPU and memory usage.\n\nThe main reason why developed a new Consensus Layer is to experiment with the possible benefits that could come with it.\nFor example, The Engine API does not work well with Erigon. The Engine API sends data one block at a time, which does\nnot suit how Erigon works. Erigon is designed to handle many blocks simultaneously and needs to sort and process data\nefficiently. Therefore, it would be better for Erigon to handle the blocks independently instead of relying on the\nEngine API.\n\n#### Caplin's Usage\n\nCaplin is be enabled by default. to disable it and enable the Engine API, use the `--externalcl` flag. from that point\non, an external Consensus Layer will not be need\nanymore.\n\nCaplin also has an archival mode for historical states and blocks. it can be enabled through the `--caplin.archive`\nflag.\nIn order to enable the caplin's Beacon API, the flag `--beacon.api=<namespaces>` must be added.\ne.g: `--beacon.api=beacon,builder,config,debug,node,validator,lighthouse` will enable all endpoints. **NOTE: Caplin is\nnot staking-ready so aggregation endpoints are still to be implemented. Additionally enabling the Beacon API will lead\nto a 6 GB higher RAM usage.\n\n### Multiple Instances / One Machine\n\nDefine 6 flags to avoid conflicts: `--datadir --port --http.port --authrpc.port --torrent.port --private.api.addr`.\nExample of multiple chains on the same machine:\n\n```\n# mainnet\n./build/bin/erigon --datadir=\"<your_mainnet_data_path>\" --chain=mainnet --port=30303 --http.port=8545 --authrpc.port=8551 --torrent.port=42069 --private.api.addr=127.0.0.1:9090 --http --ws --http.api=eth,debug,net,trace,web3,erigon\n\n\n# sepolia\n./build/bin/erigon --datadir=\"<your_sepolia_data_path>\" --chain=sepolia --port=30304 --http.port=8546 --authrpc.port=8552 --torrent.port=42068 --private.api.addr=127.0.0.1:9091 --http --ws --http.api=eth,debug,net,trace,web3,erigon\n```\n\nQuote your path if it has spaces.\n\n### Dev Chain\n\n<code> 🔬 Detailed explanation is [DEV_CHAIN](/DEV_CHAIN.md).</code>\n\nKey features\n============\n\n### Faster Initial Sync\n\nOn good network bandwidth EthereumMainnet FullNode syncs in 3\nhours: [OtterSync](https://erigon.substack.com/p/erigon-3-alpha-2-introducing-blazingly) can sync\n\n### More Efficient State Storage\n\n**Flat KV storage.** Erigon uses a key-value database and storing accounts and storage in a simple way.\n\n<code> 🔬 See our detailed DB walkthrough [here](./docs/programmers_guide/db_walkthrough.MD).</code>\n\n**Preprocessing**. For some operations, Erigon uses temporary files to preprocess data before inserting it into the main\nDB. That reduces write amplification and DB inserts are orders of magnitude quicker.\n\n<code> 🔬 See our detailed ETL explanation [here](https://github.com/erigontech/erigon/blob/main/erigon-lib/etl/README.md).</code>\n\n**Plain state**\n\n**Single accounts/state trie**. Erigon uses a single Merkle trie for both accounts and the storage.\n\n<code> 🔬 [Staged Sync Readme](/eth/stagedsync/README.md)</code>\n\n### JSON-RPC daemon\n\nMost of Erigon's components (txpool, rpcdaemon, snapshots downloader, sentry, ...) can work inside Erigon and as\nindependent process on same Server (or another Server). Example:\n\n```sh\nmake erigon rpcdaemon\n./build/bin/erigon --datadir=/my --http=false\n# To run RPCDaemon as separated process: use same `--datadir` as Erigon\n./build/bin/rpcdaemon --datadir=/my --http.api=eth,erigon,web3,net,debug,trace,txpool --ws\n```\n\n- Supported JSON-RPC\n  calls: [eth](./cmd/rpcdaemon/commands/eth_api.go), [debug](./cmd/rpcdaemon/commands/debug_api.go), [net](./cmd/rpcdaemon/commands/net_api.go), [web3](./cmd/rpcdaemon/commands/web3_api.go)\n- increase throughput by: `--rpc.batch.concurrency`, `--rpc.batch.limit`, `--db.read.concurrency`\n- increase throughput by disabling: `--http.compression`, `--ws.compression`\n\n<code>🔬 See [RPC-Daemon docs](./cmd/rpcdaemon/README.md)</code>\n\n### Grafana dashboard\n\n`docker compose up prometheus grafana`, [detailed docs](./cmd/prometheus/Readme.md).\n\nFAQ\n================\n\n### Use as library\n\n```\n# please use git branch name (or commit hash). don't use git tags\ngo mod edit -replace github.com/erigontech/erigon-lib=github.com/erigontech/erigon/erigon-lib@5498f854e44df5c8f0804ff4f0747c0dec3caad5\ngo get github.com/erigontech/erigon@main\ngo mod tidy\n```\n\n### Default Ports and Firewalls\n\n#### `erigon` ports\n\n| Component | Port  | Protocol  | Purpose                     | Should Expose |\n|-----------|-------|-----------|-----------------------------|---------------|\n| engine    | 9090  | TCP       | gRPC Server                 | Private       |\n| engine    | 42069 | TCP & UDP | Snap sync (Bittorrent)      | Public        |\n| engine    | 8551  | TCP       | Engine API (JWT auth)       | Private       |\n| sentry    | 30303 | TCP & UDP | eth/68 peering              | Public        |\n| sentry    | 30304 | TCP & UDP | eth/67 peering              | Public        |\n| sentry    | 9091  | TCP       | incoming gRPC Connections   | Private       |\n| rpcdaemon | 8545  | TCP       | HTTP & WebSockets & GraphQL | Private       |\n\nTypically, 30303 and 30304 are exposed to the internet to allow incoming peering connections. 9090 is exposed only\ninternally for rpcdaemon or other connections, (e.g. rpcdaemon -> erigon).\nPort 8551 (JWT authenticated) is exposed only internally for [Engine API] JSON-RPC queries from the Consensus Layer\nnode.\n\n#### `caplin` ports\n\n| Component | Port | Protocol | Purpose | Should Expose |\n|-----------|------|----------|---------|---------------|\n| sentinel  | 4000 | UDP      | Peering | Public        |\n| sentinel  | 4001 | TCP      | Peering | Public        |\n\nIn order to configure the ports, use:\n\n```\n   --caplin.discovery.addr value                                                    Address for Caplin DISCV5 protocol (default: \"127.0.0.1\")\n   --caplin.discovery.port value                                                    Port for Caplin DISCV5 protocol (default: 4000)\n   --caplin.discovery.tcpport value                                                 TCP Port for Caplin DISCV5 protocol (default: 4001)\n```\n\n#### `beaconAPI` ports\n\n| Component | Port | Protocol | Purpose | Should Expose |\n|-----------|------|----------|---------|---------------|\n| REST      | 5555 | TCP      | REST    | Public        |\n\n#### `shared` ports\n\n| Component | Port | Protocol | Purpose | Should Expose |\n|-----------|------|----------|---------|---------------|\n| all       | 6060 | TCP      | pprof   | Private       |\n| all       | 6061 | TCP      | metrics | Private       |\n\nOptional flags can be enabled that enable pprof or metrics (or both). Use `--help` with the binary for more info.\n\n#### `other` ports\n\nReserved for future use: **gRPC ports**: `9092` consensus engine, `9093` snapshot downloader, `9094` TxPool\n\n#### Hetzner expecting strict firewall rules\n\n```\n0.0.0.0/8             \"This\" Network             RFC 1122, Section 3.2.1.3\n10.0.0.0/8            Private-Use Networks       RFC 1918\n100.64.0.0/10         Carrier-Grade NAT (CGN)    RFC 6598, Section 7\n127.16.0.0/12         Private-Use Networks       RFC 1918\n169.254.0.0/16        Link Local                 RFC 3927\n172.16.0.0/12         Private-Use Networks       RFC 1918\n192.0.0.0/24          IETF Protocol Assignments  RFC 5736\n192.0.2.0/24          TEST-NET-1                 RFC 5737\n192.88.99.0/24        6to4 Relay Anycast         RFC 3068\n192.168.0.0/16        Private-Use Networks       RFC 1918\n198.18.0.0/15         Network Interconnect\nDevice Benchmark Testing   RFC 2544\n198.51.100.0/24       TEST-NET-2                 RFC 5737\n203.0.113.0/24        TEST-NET-3                 RFC 5737\n224.0.0.0/4           Multicast                  RFC 3171\n240.0.0.0/4           Reserved for Future Use    RFC 1112, Section 4\n255.255.255.255/32    Limited Broadcast          RFC 919, Section 7\nRFC 922, Section 7\n```\n\nSame\nin [IpTables syntax](https://ethereum.stackexchange.com/questions/6386/how-to-prevent-being-blacklisted-for-running-an-ethereum-client/13068#13068)\n\n### Run as a separate user - `systemd` example\n\nRunning erigon from `build/bin` as a separate user might produce an error:\n\n```sh\nerror while loading shared libraries: libsilkworm_capi.so: cannot open shared object file: No such file or directory\n```\n\nThe library needs to be *installed* for another user using `make DIST=<path> install`. You could use `$HOME/erigon`\nor `/opt/erigon` as the installation path, for example:\n\n```sh\nmake DIST=/opt/erigon install\n```\n\n### Grab diagnostic for bug report\n\n- Get stack trace: `kill -SIGUSR1 <pid>`, get trace and stop: `kill -6 <pid>`\n- Get CPU profiling: add `--pprof` flag and run  \n  `go tool pprof -png  http://127.0.0.1:6060/debug/pprof/profile\\?seconds\\=20 > cpu.png`\n- Get RAM profiling: add `--pprof` flag and run  \n  `go tool pprof -inuse_space -png  http://127.0.0.1:6060/debug/pprof/heap > mem.png`\n\n### Run local devnet\n\n<code> 🔬 Detailed explanation is [here](/DEV_CHAIN.md).</code>\n\n### Docker permissions error\n\nDocker uses user erigon with UID/GID 1000 (for security reasons). You can see this user being created in the Dockerfile.\nCan fix by giving a host's user ownership of the folder, where the host's user UID/GID is the same as the docker's user\nUID/GID (1000).\nMore details\nin [post](https://www.fullstaq.com/knowledge-hub/blogs/docker-and-the-host-filesystem-owner-matching-problem)\n\n### Public RPC\n\n- `--txpool.nolocals=true`\n- don't add `admin` in `--http.api` list\n- `--http.corsdomain=\"*\"` is bad-practice: set exact hostname or IP\n- protect from DOS by reducing: `--rpc.batch.concurrency`, `--rpc.batch.limit`\n\n### RaspberryPI\n\nhttps://github.com/mathMakesArt/Erigon-on-RPi-4\n\n### Run all components by docker-compose\n\nDocker allows for building and running Erigon via containers. This alleviates the need for installing build dependencies\nonto the host OS.\n\n#### Optional: Setup dedicated user\n\nUser UID/GID need to be synchronized between the host OS and container so files are written with correct permission.\n\nYou may wish to setup a dedicated user/group on the host OS, in which case the following `make` targets are available.\n\n```sh\n# create \"erigon\" user\nmake user_linux\n# or\nmake user_macos\n```\n\n#### Environment Variables\n\nThere is a `.env.example` file in the root of the repo.\n\n* `DOCKER_UID` - The UID of the docker user\n* `DOCKER_GID` - The GID of the docker user\n* `XDG_DATA_HOME` - The data directory which will be mounted to the docker containers\n\nIf not specified, the UID/GID will use the current user.\n\nA good choice for `XDG_DATA_HOME` is to use the `~erigon/.ethereum` directory created by helper\ntargets `make user_linux` or `make user_macos`.\n\n#### Run\n\nCheck permissions: In all cases, `XDG_DATA_HOME` (specified or default) must be writable by the user UID/GID in docker,\nwhich will be determined by the `DOCKER_UID` and `DOCKER_GID` at build time. If a build or service startup is failing\ndue to permissions, check that all the directories, UID, and GID controlled by these environment variables are correct.\n\nNext command starts: Erigon on port 30303, rpcdaemon on port 8545, prometheus on port 9090, and grafana on port 3000.\n\n```sh\n#\n# Will mount ~/.local/share/erigon to /home/erigon/.local/share/erigon inside container\n#\nmake docker-compose\n\n#\n# or\n#\n# if you want to use a custom data directory\n# or, if you want to use different uid/gid for a dedicated user\n#\n# To solve this, pass in the uid/gid parameters into the container.\n#\n# DOCKER_UID: the user id\n# DOCKER_GID: the group id\n# XDG_DATA_HOME: the data directory (default: ~/.local/share)\n#\n# Note: /preferred/data/folder must be read/writeable on host OS by user with UID/GID given\n#       if you followed above instructions\n#\n# Note: uid/gid syntax below will automatically use uid/gid of running user so this syntax\n#       is intended to be run via the dedicated user setup earlier\n#\nDOCKER_UID=$(id -u) DOCKER_GID=$(id -g) XDG_DATA_HOME=/preferred/data/folder DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 make docker-compose\n\n#\n# if you want to run the docker, but you are not logged in as the $ERIGON_USER\n# then you'll need to adjust the syntax above to grab the correct uid/gid\n#\n# To run the command via another user, use\n#\nERIGON_USER=erigon\nsudo -u ${ERIGON_USER} DOCKER_UID=$(id -u ${ERIGON_USER}) DOCKER_GID=$(id -g ${ERIGON_USER}) XDG_DATA_HOME=~${ERIGON_USER}/.ethereum DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 make docker-compose\n```\n\nMakefile creates the initial directories for erigon, prometheus and grafana. The PID namespace is shared between erigon\nand rpcdaemon which is required to open Erigon's DB from another process (RPCDaemon local-mode).\nSee: https://github.com/erigontech/erigon/pull/2392/files\n\nIf your docker installation requires the docker daemon to run as root (which is by default), you will need to prefix\nthe command above with `sudo`. However, it is sometimes recommended running docker (and therefore its containers) as a\nnon-root user for security reasons. For more information about how to do this, refer to\n[this article](https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user).\n\n### How to change db pagesize\n\n[post](https://github.com/erigontech/erigon/blob/main/cmd/integration/Readme.md#copy-data-to-another-db)\n\n### Erigon3 perf tricks\n\n- on BorMainnet may help: `--sync.loop.block.limit=10_000`\n- on cloud-drives (good throughput, bad latency) - can enable OS's brain to pre-fetch: `SNAPSHOT_MADV_RND=false`\n- can lock latest state in RAM - to prevent from eviction (node may face high historical RPC traffic without impacting\n  Chain-Tip perf):\n\n```\nvmtouch -vdlw /mnt/erigon/snapshots/domain/*bt\nls /mnt/erigon/snapshots/domain/*.kv | parallel vmtouch -vdlw\n\n# if it failing with \"can't allocate memory\", try: \nsync && sudo sysctl vm.drop_caches=3\necho 1 > /proc/sys/vm/compact_memory\n```\n\n### Windows\n\nWindows users may run erigon in 3 possible ways:\n\n* Build executable binaries natively for Windows using provided `wmake.ps1` PowerShell script. Usage syntax is the same\n  as `make` command so you have to run `.\\wmake.ps1 [-target] <targetname>`. Example: `.\\wmake.ps1 erigon` builds erigon\n  executable. All binaries are placed in `.\\build\\bin\\` subfolder. There are some requirements for a successful native\n  build on windows :\n    * [Git](https://git-scm.com/downloads) for Windows must be installed. If you're cloning this repository is very\n      likely you already have it\n    * [GO Programming Language](https://golang.org/dl/) must be installed. Minimum required version is 1.22\n    * GNU CC Compiler at least version 13 (is highly suggested that you install `chocolatey` package manager - see\n      following point)\n    * If you need to build MDBX tools (i.e. `.\\wmake.ps1 db-tools`)\n      then [Chocolatey package manager](https://chocolatey.org/) for Windows must be installed. By Chocolatey you need\n      to install the following components : `cmake`, `make`, `mingw` by `choco install cmake make mingw`. Make sure\n      Windows System \"Path\" variable has:\n      C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\n\n  **Important note about Anti-Viruses**\n  During MinGW's compiler detection phase some temporary executables are generated to test compiler capabilities. It's\n  been reported some anti-virus programs detect those files as possibly infected by `Win64/Kryptic.CIS` trojan horse (or\n  a variant of it). Although those are false positives we have no control over 100+ vendors of security products for\n  Windows and their respective detection algorithms and we understand this might make your experience with Windows\n  builds uncomfortable. To workaround the issue you might either set exclusions for your antivirus specifically\n  for `build\\bin\\mdbx\\CMakeFiles` sub-folder of the cloned repo or you can run erigon using the following other two\n  options\n\n* Use Docker :  see [docker-compose.yml](./docker-compose.yml)\n\n* Use WSL (Windows Subsystem for Linux) **strictly on version 2**. Under this option you can build Erigon just as you\n  would on a regular Linux distribution. You can point your data also to any of the mounted Windows partitions (\n  eg. `/mnt/c/[...]`, `/mnt/d/[...]` etc) but in such case be advised performance is impacted: this is due to the fact\n  those mount points use `DrvFS` which is\n  a [network file system](https://github.com/erigontech/erigon?tab=readme-ov-file#cloud-network-drives)\n  and, additionally, MDBX locks the db for exclusive access which implies only one process at a time can access data.\n  This has consequences on the running of `rpcdaemon` which has to be configured as [Remote DB](#for-remote-db) even if\n  it is executed on the very same computer. If instead your data is hosted on the native Linux filesystem non\n  limitations apply.\n  **Please also note the default WSL2 environment has its own IP address which does not match the one of the network\n  interface of Windows host: take this into account when configuring NAT for port 30303 on your router.**\n\nGetting in touch\n================\n\n### Erigon Discord Server\n\nThe main discussions are happening on our Discord server. To get an invite, send an email to `bloxster [at] proton.me`\nwith your name, occupation, a brief explanation of why you want to join the Discord, and how you heard about Erigon.\n\n### Blog\n\n**[erigon.substack.com](https://erigon.substack.com/)**\n\n### Twitter\n\n[x.com/ErigonEth](https://x.com/ErigonEth)\n\n### Reporting security issues/concerns\n\nSend an email to `security [at] torquem.ch`.\n\nKnown issues\n============\n\n### `htop` shows incorrect memory usage\n\nErigon's internal DB (MDBX) using `MemoryMap` - when OS does manage all `read, write, cache` operations instead of\nApplication\n([linux](https://linux-kernel-labs.github.io/refs/heads/master/labs/memory_mapping.html)\n, [windows](https://docs.microsoft.com/en-us/windows/win32/memory/file-mapping))\n\n`htop` on column `res` shows memory of \"App + OS used to hold page cache for given App\", but it's not informative,\nbecause if `htop` says that app using 90% of memory you still can run 3 more instances of app on the same machine -\nbecause most of that `90%` is \"OS pages cache\".\nOS automatically frees this cache any time it needs memory. Smaller \"page cache size\" may not impact performance of\nErigon at all.\n\nNext tools show correct memory usage of Erigon:\n\n- `vmmap -summary PID | grep -i \"Physical footprint\"`. Without `grep` you can see details\n    - `section MALLOC ZONE column Resident Size` shows App memory usage, `section REGION TYPE column Resident Size`\n      shows OS pages cache size.\n- `Prometheus` dashboard shows memory of Go app without OS pages cache (`make prometheus`, open in\n  browser `localhost:3000`, credentials `admin/admin`)\n- `cat /proc/<PID>/smaps`\n\nErigon uses ~4Gb of RAM during genesis sync and ~1Gb during normal work. OS pages cache can utilize unlimited amount of\nmemory.\n\n**Warning:** Multiple instances of Erigon on same machine will touch Disk concurrently, it impacts performance - one of\nmain Erigon optimizations: \"reduce Disk random access\".\n\"Blocks Execution stage\" still does many random reads - this is reason why it's slowest stage. We do not recommend\nrunning multiple genesis syncs on same Disk. If genesis sync passed, then it's fine to run multiple Erigon instances on\nsame Disk.\n\n### Cloud network drives\n\n(Like gp3)\nYou may read: https://github.com/erigontech/erigon/issues/1516#issuecomment-811958891\nIn short: network-disks are bad for blocks execution - because they are designed for parallel/batch workloads (databases\nwith many parallel requests). But blocks execution in Erigon is non-parallel and using blocking-io.\n\nWhat can do:\n\n- reduce disk latency (not throughput, not iops)\n    - use latency-critical cloud-drives\n    - or attached-NVMe (at least for initial sync)\n- increase RAM\n- if you throw enough RAM, then can set env variable `ERIGON_SNAPSHOT_MADV_RND=false`\n- Use `--db.pagesize=64kb` (less fragmentation, more IO)\n- Or buy/download synced archive node from some 3-rd party Erigon2 snapshots provider\n- Or use Erigon3 (it also sensitive for disk-latency - but it will download 99% of history)\n\n### Filesystem's background features are expensive\n\nFor example: btrfs's autodefrag option - may increase write IO 100x times\n\n### Gnome Tracker can kill Erigon\n\n[Gnome Tracker](https://wiki.gnome.org/Attic/Tracker) - detecting miners and kill them.\n\n### the --mount option requires BuildKit error\n\nFor anyone else that was getting the BuildKit error when trying to start Erigon the old way you can use the below...\n\n```sh\nXDG_DATA_HOME=/preferred/data/folder DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 make docker-compose\n```\n\n---------\n"
        },
        {
          "name": "RELEASE_INSTRUCTIONS.md",
          "type": "blob",
          "size": 2.3212890625,
          "content": "# How to prepare Erigon release (things not to forget)\n\n## Update Jump dest optimisation code\nThis step does not have to be completed during emergency updates, because failure to complete it has only a minor impact on the\nperformance of the initial chain sync.\n\nIn the source code `core/skip_analysis.go`, there is a constant `MainnetNotCheckedFrom` which should be equal to the block number,\nuntil which we have manually checked the usefulness of the Jump dest code bitmap. In order to update this, one needs to run these\ncommands:\n````\nmake state\n./build/bin/state checkChangeSets --datadir=<path to datadir> --block=<value of MainnetNotCheckedFrom>\n````\nIf there are any transactions where code bitmap was useful, warning messages like this will be displayed:\n````\nWARN [08-01|14:54:27.778] Code Bitmap used for detecting invalid jump tx=0x86e55d1818b5355424975de9633a57c40789ca08552297b726333a9433949c92 block number=6426298\n````\nIn such cases (unless there are too many instances), all block numbers need to be excluded in the `SkipAnalysis` function, and comment to it. The constant `MainnetNotCheckedFrom` needs to be updated to the first block number we have not checked. The value can be taken from the output of the `checkChangeSets`\nutility before it exits, like this:\n````\nINFO [08-01|15:36:04.282] Checked                                  blocks=10573804 next time specify --block=10573804 duration=36m54.789025062s\n````\n\n## Update DB Schema version if required\n\nIn the file `common/dbutils/bucket.go` there is variable `DBSchemaVersion` that needs to be updated if there are any changes in the database schema, leading to data migrations.\nIn most cases, it is enough to bump minor version.\n\n## Update remote KV version if required\n\nIn the file `ethdb/remote/remotedbserver/server.go` there is variable `KvServiceAPIVersion` that needs to be updated if there are any changes in the remote KV interface, or\ndatabase schema, leading to data migrations.\nIn most cases, it is enough to bump minor version. It is best to change both DB schema version and remove KV version together.\n\n## Purify the state domains if a regenration is done\n\nIf a regenration is done, the state domains need to be purified. This can be done by running the following command:\n````\nmake integration\n./build/bin/integration purify_domains --datadir=<path to datadir> --replace-in-datadir\n````\n"
        },
        {
          "name": "accounts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cl",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "consensus",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "dashboards",
          "type": "tree",
          "content": null
        },
        {
          "name": "dataflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "debug.Dockerfile",
          "type": "blob",
          "size": 3.1064453125,
          "content": "# syntax = docker/dockerfile:1.2\nFROM docker.io/library/golang:1.21-alpine3.17 AS builder\n\nRUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++\n\nWORKDIR /app\nADD go.mod go.mod\nADD go.sum go.sum\n\nRUN go mod download\nADD . .\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    make all\n\n\nFROM docker.io/library/golang:1.21-alpine3.17 AS tools-builder\nRUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++\nWORKDIR /app\n\nADD Makefile Makefile\nADD tools.go tools.go\nADD go.mod go.mod\nADD go.sum go.sum\n\nRUN mkdir -p /app/build/bin\n\nFROM docker.io/library/alpine:3.17\n\n# install required runtime libs, along with some helpers for debugging\nRUN apk add --no-cache ca-certificates libstdc++ tzdata\nRUN apk add --no-cache curl jq bind-tools\n\n# Setup user and group\n#\n# from the perspective of the container, uid=1000, gid=1000 is a sensible choice\n# (mimicking Ubuntu Server), but if caller creates a .env (example in repo root),\n# these defaults will get overridden when make calls docker-compose\nARG UID=1000\nARG GID=1000\nRUN adduser -D -u $UID -g $GID erigon\nUSER erigon\nRUN mkdir -p ~/.local/share/erigon\n\n# copy compiled artifacts from builder\n\n## then give each binary its own layer\nCOPY --from=builder /app/build/bin/devnet /usr/local/bin/devnet\nCOPY --from=builder /app/build/bin/downloader /usr/local/bin/downloader\nCOPY --from=builder /app/build/bin/erigon /usr/local/bin/erigon\nCOPY --from=builder /app/build/bin/erigon-cl /usr/local/bin/erigon-cl\nCOPY --from=builder /app/build/bin/evm /usr/local/bin/evm\nCOPY --from=builder /app/build/bin/hack /usr/local/bin/hack\nCOPY --from=builder /app/build/bin/integration /usr/local/bin/integration\nCOPY --from=builder /app/build/bin/lightclient /usr/local/bin/lightclient\nCOPY --from=builder /app/build/bin/observer /usr/local/bin/observer\nCOPY --from=builder /app/build/bin/pics /usr/local/bin/pics\nCOPY --from=builder /app/build/bin/rpcdaemon /usr/local/bin/rpcdaemon\nCOPY --from=builder /app/build/bin/rpctest /usr/local/bin/rpctest\nCOPY --from=builder /app/build/bin/sentinel /usr/local/bin/sentinel\nCOPY --from=builder /app/build/bin/sentry /usr/local/bin/sentry\nCOPY --from=builder /app/build/bin/state /usr/local/bin/state\nCOPY --from=builder /app/build/bin/txpool /usr/local/bin/txpool\nCOPY --from=builder /app/build/bin/verkle /usr/local/bin/verkle\n\n\nEXPOSE 8545 \\\n       8551 \\\n       8546 \\\n       30303 \\\n       30303/udp \\\n       42069 \\\n       42069/udp \\\n       8080 \\\n       9090 \\\n       6060\n\n# https://github.com/opencontainers/image-spec/blob/main/annotations.md\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.description=\"Erigon Ethereum Client\" \\\n      org.label-schema.name=\"Erigon\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.url=\"https://torquem.ch\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/erigontech/erigon.git\" \\\n      org.label-schema.vendor=\"Torquem\" \\\n      org.label-schema.version=$VERSION\n\nENTRYPOINT [\"erigon\"]\n"
        },
        {
          "name": "diagnostics",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 4.126953125,
          "content": "# Erigon by default is \"all in one binary\" solution, but it's possible start TxPool as separated processes.\n# Same true about: JSON RPC layer (RPCDaemon), p2p layer (Sentry), history download layer (Downloader), consensus.\n# Don't start services as separated processes unless you have clear reason for it: resource limiting, scale, replace by your own implementation, security.\n# This file is an example: how to start Erigon's services as separated processes.\n\n# Default: --datadir=/home/erigon/.local/share/erigon\n# Default UID: 1000\n# Default GID: 1000\n# Ports: `9090` execution engine (private api), `9091` sentry, `9092` consensus engine, `9093` snapshot downloader, `9094` TxPool\n# Ports: `8545` json rpc, `8551` consensus json rpc, `30303` eth p2p protocol, `42069` bittorrent protocol,\n\n# Connections: erigon -> (sentries, downloader), rpcdaemon -> (erigon, txpool), txpool -> erigon\n\nversion: '2.2'\n\n# Basic erigon's service\nx-erigon-service: &default-erigon-service\n  image: erigontech/erigon:${TAG:-latest}\n  pid: service:erigon # Use erigon's PID namespace. It's required to open Erigon's DB from another process (RPCDaemon local-mode)\n  volumes_from: [ erigon ]\n  restart: unless-stopped\n  mem_swappiness: 0\n  user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}\n\nservices:\n  erigon:\n    image: erigontech/erigon:${TAG:-latest}\n    build:\n      args:\n        UID: ${DOCKER_UID:-1000}\n        GID: ${DOCKER_GID:-1000}\n      context: .\n    command: |\n      ${ERIGON_FLAGS-} --private.api.addr=0.0.0.0:9090\n      --sentry.api.addr=sentry:9091 --downloader.api.addr=downloader:9093 --txpool.disable\n      --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 --pprof --pprof.addr=0.0.0.0 --pprof.port=6061\n      --authrpc.jwtsecret=/home/erigon/.local/share/erigon/jwt.hex --datadir=/home/erigon/.local/share/erigon\n    ports: [ \"8551:8551\" ]\n    volumes:\n      # It's ok to mount sub-dirs of \"datadir\" to different drives\n      - ${XDG_DATA_HOME:-~/.local/share}/erigon:/home/erigon/.local/share/erigon\n    restart: unless-stopped\n    mem_swappiness: 0\n    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}\n\n  sentry:\n    <<: *default-erigon-service\n    entrypoint: sentry\n    command: ${SENTRY_FLAGS-} --sentry.api.addr=0.0.0.0:9091 --datadir=/home/erigon/.local/share/erigon\n    ports: [ \"30303:30303/tcp\", \"30303:30303/udp\" ]\n\n  downloader:\n    <<: *default-erigon-service\n    entrypoint: downloader\n    command: ${DOWNLOADER_FLAGS-} --downloader.api.addr=0.0.0.0:9093 --datadir=/home/erigon/.local/share/erigon\n    ports: [ \"42069:42069/tcp\", \"42069:42069/udp\" ]\n\n  txpool:\n    <<: *default-erigon-service\n    entrypoint: txpool\n    command: ${TXPOOL_FLAGS-} --private.api.addr=erigon:9090 --txpool.api.addr=0.0.0.0:9094 --sentry.api.addr=sentry:9091 --datadir=/home/erigon/.local/share/erigon\n\n  rpcdaemon:\n    <<: *default-erigon-service\n    entrypoint: rpcdaemon\n    command: |\n      ${RPCDAEMON_FLAGS-} --http.addr=0.0.0.0 --http.vhosts=any --http.corsdomain=* --ws\n      --private.api.addr=erigon:9090 --txpool.api.addr=txpool:9094 --datadir=/home/erigon/.local/share/erigon\n    ports: [ \"8545:8545\" ]\n\n\n\n\n  prometheus:\n    image: prom/prometheus:v2.51.2\n    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000} # Uses erigon user from Dockerfile\n    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=150d --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles\n    ports: [ \"9090:9090\" ]\n    volumes:\n      - ${ERIGON_PROMETHEUS_CONFIG:-./cmd/prometheus/prometheus.yml}:/etc/prometheus/prometheus.yml\n      - ${XDG_DATA_HOME:-~/.local/share}/erigon-prometheus:/prometheus\n    restart: unless-stopped\n\n  grafana:\n    image: grafana/grafana:10.4.2\n    user: \"472:0\" # required for grafana version >= 7.3\n    ports: [ \"3000:3000\" ]\n    volumes:\n      - ${ERIGON_GRAFANA_CONFIG:-./cmd/prometheus/grafana.ini}:/etc/grafana/grafana.ini\n      - ./cmd/prometheus/datasources:/etc/grafana/provisioning/datasources\n      - ./cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards\n      - ${XDG_DATA_HOME:-~/.local/share}/erigon-grafana:/var/lib/grafana\n    restart: unless-stopped\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "erigon-lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "eth",
          "type": "tree",
          "content": null
        },
        {
          "name": "ethdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "ethstats",
          "type": "tree",
          "content": null
        },
        {
          "name": "event",
          "type": "tree",
          "content": null
        },
        {
          "name": "funding.json",
          "type": "blob",
          "size": 0.11328125,
          "content": "{\n    \"opRetro\": {\n      \"projectId\": \"0xe15a32ba713cc025574ac6f69be3ad16133fb7561c3d7dc30fbf29b65b5a8be2\"\n    }\n  }"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 13.54296875,
          "content": "module github.com/erigontech/erigon\n\ngo 1.22.5\n\nreplace github.com/erigontech/erigon-lib => ./erigon-lib\n\nreplace (\n\tgithub.com/anacrolix/torrent => github.com/erigontech/torrent v1.54.3-alpha-1\n\tgithub.com/holiman/bloomfilter/v2 => github.com/AskAlexSharov/bloomfilter/v2 v2.0.9\n)\n\nrequire (\n\tgithub.com/erigontech/erigonwatch v0.0.0-20240718131902-b6576bde1116\n\tgithub.com/erigontech/mdbx-go v0.38.4\n\tgithub.com/erigontech/secp256k1 v1.1.0\n\tgithub.com/erigontech/silkworm-go v0.18.0\n)\n\nrequire (\n\tgfx.cafe/util/go/generic v0.0.0-20230721185457-c559e86c829c\n\tgithub.com/99designs/gqlgen v0.17.56\n\tgithub.com/Giulio2002/bls v0.0.0-20241116091023-2ddcc8954ec0\n\tgithub.com/Masterminds/sprig/v3 v3.2.3\n\tgithub.com/RoaringBitmap/roaring/v2 v2.4.2\n\tgithub.com/alecthomas/kong v0.8.1\n\tgithub.com/anacrolix/sync v0.5.1\n\tgithub.com/anacrolix/torrent v1.52.6-0.20231201115409-7ea994b6bbd8\n\tgithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500\n\tgithub.com/cenkalti/backoff/v4 v4.2.1\n\tgithub.com/consensys/gnark-crypto v0.12.1\n\tgithub.com/crate-crypto/go-kzg-4844 v0.7.0\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/deckarep/golang-set v1.8.0\n\tgithub.com/deckarep/golang-set/v2 v2.3.1\n\tgithub.com/dop251/goja v0.0.0-20220405120441-9037c2b61cbf\n\tgithub.com/edsrzf/mmap-go v1.1.0\n\tgithub.com/emicklei/dot v1.6.2\n\tgithub.com/erigontech/erigon-lib v0.0.0-00010101000000-000000000000\n\tgithub.com/fjl/gencodec v0.0.0-20220412091415-8bb9e558978c\n\tgithub.com/gballet/go-verkle v0.0.0-20221121182333-31427a1f2d35\n\tgithub.com/go-chi/chi/v5 v5.1.0\n\tgithub.com/go-chi/cors v1.2.1\n\tgithub.com/go-echarts/go-echarts/v2 v2.3.3\n\tgithub.com/go-test/deep v1.1.1\n\tgithub.com/goccy/go-json v0.9.11\n\tgithub.com/gofrs/flock v0.12.1\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1\n\tgithub.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb\n\tgithub.com/google/btree v1.1.3\n\tgithub.com/google/cel-go v0.18.2\n\tgithub.com/google/gofuzz v1.2.0\n\tgithub.com/gorilla/websocket v1.5.3\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/hashicorp/golang-lru/arc/v2 v2.0.7\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/holiman/uint256 v1.3.2\n\tgithub.com/huandu/xstrings v1.5.0\n\tgithub.com/huin/goupnp v1.3.0\n\tgithub.com/jackpal/go-nat-pmp v1.0.2\n\tgithub.com/jedib0t/go-pretty/v6 v6.5.9\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/julienschmidt/httprouter v1.3.0\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/libp2p/go-libp2p v0.37.2\n\tgithub.com/libp2p/go-libp2p-mplex v0.9.0\n\tgithub.com/libp2p/go-libp2p-pubsub v0.11.0\n\tgithub.com/maticnetwork/crand v1.0.2\n\tgithub.com/multiformats/go-multiaddr v0.13.0\n\tgithub.com/nxadm/tail v1.4.11\n\tgithub.com/pelletier/go-toml v1.9.5\n\tgithub.com/pelletier/go-toml/v2 v2.2.3\n\tgithub.com/pion/randutil v0.1.0\n\tgithub.com/pion/stun v0.6.1\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/protolambda/ztyp v0.2.2\n\tgithub.com/prysmaticlabs/go-bitfield v0.0.0-20210809151128-385d8c5e3fb7\n\tgithub.com/prysmaticlabs/gohashtree v0.0.3-alpha.0.20230502123415-aafd8b3ca202\n\tgithub.com/quasilyte/go-ruleguard/dsl v0.3.22\n\tgithub.com/rs/cors v1.11.1\n\tgithub.com/spf13/afero v1.9.5\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/thomaso-mirodin/intmath v0.0.0-20160323211736-5dc6d854e46e\n\tgithub.com/tidwall/btree v1.6.0\n\tgithub.com/ugorji/go/codec v1.2.12\n\tgithub.com/urfave/cli/v2 v2.27.5\n\tgithub.com/valyala/fastjson v1.6.4\n\tgithub.com/vektah/gqlparser/v2 v2.5.19\n\tgithub.com/xsleonard/go-merkle v1.1.0\n\tgo.uber.org/mock v0.5.0\n\tgo.uber.org/zap v1.27.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/time v0.8.0\n\tgoogle.golang.org/grpc v1.65.0\n\tgoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.4.0\n\tgoogle.golang.org/protobuf v1.35.1\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n\tgopkg.in/natefinch/lumberjack.v2 v2.2.1\n\tgopkg.in/yaml.v2 v2.4.0\n\tgopkg.in/yaml.v3 v3.0.1\n\tmodernc.org/sqlite v1.33.1\n\tpgregory.net/rapid v1.1.0\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tgithub.com/RoaringBitmap/roaring v1.9.4 // indirect\n\tgithub.com/alecthomas/atomic v0.1.0-alpha2 // indirect\n\tgithub.com/benesch/cgosymbolizer v0.0.0-20190515212042-bec6fe6e597b // indirect\n\tgithub.com/crate-crypto/go-ipa v0.0.0-20221111143132-9aa5d42120bc // indirect\n\tgithub.com/elastic/go-freelru v0.13.0 // indirect\n\tgithub.com/erigontech/speedtest v0.0.2 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/go-viper/mapstructure/v2 v2.2.1 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/nyaosorg/go-windows-shortcut v0.0.0-20220529122037-8b0c89bca4c4 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.14 // indirect\n\tgithub.com/tklauser/numcpus v0.8.0 // indirect\n\tgithub.com/wlynxg/anet v0.0.5 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240528184218-531527333157 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240604185151-ef581f913117 // indirect\n)\n\nrequire (\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.2.0 // indirect\n\tgithub.com/agnivade/levenshtein v1.1.1 // indirect\n\tgithub.com/ajwerner/btree v0.0.0-20211221152037-f427b3e689c0 // indirect\n\tgithub.com/anacrolix/chansync v0.3.0 // indirect\n\tgithub.com/anacrolix/dht/v2 v2.21.1 // indirect\n\tgithub.com/anacrolix/envpprof v1.3.0 // indirect\n\tgithub.com/anacrolix/generics v0.0.2-0.20240227122613-f95486179cab // indirect\n\tgithub.com/anacrolix/go-libutp v1.3.1 // indirect\n\tgithub.com/anacrolix/log v0.15.2 // indirect\n\tgithub.com/anacrolix/missinggo v1.3.0 // indirect\n\tgithub.com/anacrolix/missinggo/perf v1.0.0 // indirect\n\tgithub.com/anacrolix/missinggo/v2 v2.7.3 // indirect\n\tgithub.com/anacrolix/mmsg v1.0.0 // indirect\n\tgithub.com/anacrolix/multiless v0.3.1-0.20221221005021-2d12701f83f7 // indirect\n\tgithub.com/anacrolix/stm v0.4.1-0.20221221005312-96d17df0e496 // indirect\n\tgithub.com/anacrolix/upnp v0.1.3-0.20220123035249-922794e51c96 // indirect\n\tgithub.com/anacrolix/utp v0.1.0 // indirect\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0 // indirect\n\tgithub.com/bahlo/generic-list-go v0.2.0 // indirect\n\tgithub.com/benbjohnson/clock v1.3.5 // indirect\n\tgithub.com/benbjohnson/immutable v0.4.1-0.20221220213129-8932b999621d // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bits-and-blooms/bitset v1.12.0 // indirect\n\tgithub.com/bradfitz/iter v0.0.0-20191230175014-e8f45d346db8 // indirect\n\tgithub.com/cespare/xxhash v1.1.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cilium/ebpf v0.11.0 // indirect\n\tgithub.com/consensys/bavard v0.1.13 // indirect\n\tgithub.com/containerd/cgroups v1.1.0 // indirect\n\tgithub.com/containerd/cgroups/v3 v3.0.3 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/davidlazar/go-crypto v0.0.0-20200604182044-b73af7476f6c // indirect\n\tgithub.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0\n\tgithub.com/dlclark/regexp2 v1.4.1-0.20201116162257-a2a8dda75c91 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/elastic/gosigar v0.14.3 // indirect\n\tgithub.com/erigontech/erigon-snapshot v1.3.1-0.20241023024258-f64407a77e8e // indirect\n\tgithub.com/flynn/noise v1.1.0 // indirect\n\tgithub.com/francoispqt/gojay v1.2.13 // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/garslo/gogen v0.0.0-20170307003452-d6ebae628c7c // indirect\n\tgithub.com/go-llsqlite/adapter v0.0.0-20230927005056-7f5ce7f0c916 // indirect\n\tgithub.com/go-llsqlite/crawshaw v0.5.2-0.20240425034140-f30eb7704568 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-sourcemap/sourcemap v2.1.3+incompatible // indirect\n\tgithub.com/go-stack/stack v1.8.1\n\tgithub.com/godbus/dbus/v5 v5.1.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/google/gopacket v1.1.19 // indirect\n\tgithub.com/google/pprof v0.0.0-20241017200806-017d972448fc // indirect\n\tgithub.com/holiman/bloomfilter/v2 v2.0.3 // indirect\n\tgithub.com/ianlancetaylor/cgosymbolizer v0.0.0-20241129212102-9c50ad6b591e // indirect\n\tgithub.com/imdario/mergo v0.3.11 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/ipfs/go-cid v0.4.1 // indirect\n\tgithub.com/ipfs/go-log/v2 v2.5.1 // indirect\n\tgithub.com/jbenet/go-temp-err-catcher v0.1.0 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.8 // indirect\n\tgithub.com/koron/go-ssdp v0.0.4 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/libp2p/go-buffer-pool v0.1.0 // indirect\n\tgithub.com/libp2p/go-flow-metrics v0.2.0 // indirect\n\tgithub.com/libp2p/go-libp2p-asn-util v0.4.1 // indirect\n\tgithub.com/libp2p/go-mplex v0.7.0 // indirect\n\tgithub.com/libp2p/go-msgio v0.3.0 // indirect\n\tgithub.com/libp2p/go-nat v0.2.0 // indirect\n\tgithub.com/libp2p/go-netroute v0.2.1 // indirect\n\tgithub.com/libp2p/go-reuseport v0.4.0 // indirect\n\tgithub.com/libp2p/go-yamux/v4 v4.0.1 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 // indirect\n\tgithub.com/marten-seemann/tcp v0.0.0-20210406111302-dfbc87cc63fd // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.15 // indirect\n\tgithub.com/miekg/dns v1.1.62 // indirect\n\tgithub.com/mikioh/tcpinfo v0.0.0-20190314235526-30a79bb1804b // indirect\n\tgithub.com/mikioh/tcpopt v0.0.0-20190314235656-172688c1accc // indirect\n\tgithub.com/minio/sha256-simd v1.0.1 // indirect\n\tgithub.com/mitchellh/copystructure v1.0.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.0 // indirect\n\tgithub.com/mmcloughlin/addchain v0.4.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/mr-tron/base58 v1.2.0 // indirect\n\tgithub.com/mschoch/smat v0.2.0 // indirect\n\tgithub.com/multiformats/go-base32 v0.1.0 // indirect\n\tgithub.com/multiformats/go-base36 v0.2.0 // indirect\n\tgithub.com/multiformats/go-multiaddr-dns v0.4.1 // indirect\n\tgithub.com/multiformats/go-multiaddr-fmt v0.1.0 // indirect\n\tgithub.com/multiformats/go-multibase v0.2.0 // indirect\n\tgithub.com/multiformats/go-multicodec v0.9.0 // indirect\n\tgithub.com/multiformats/go-multihash v0.2.3 // indirect\n\tgithub.com/multiformats/go-multistream v0.6.0 // indirect\n\tgithub.com/multiformats/go-varint v0.0.7 // indirect\n\tgithub.com/ncruces/go-strftime v0.1.9 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.20.2 // indirect\n\tgithub.com/opencontainers/runtime-spec v1.2.0 // indirect\n\tgithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 // indirect\n\tgithub.com/pion/datachannel v1.5.9 // indirect\n\tgithub.com/pion/dtls/v2 v2.2.12 // indirect\n\tgithub.com/pion/ice/v2 v2.3.36 // indirect\n\tgithub.com/pion/interceptor v0.1.37 // indirect\n\tgithub.com/pion/logging v0.2.2 // indirect\n\tgithub.com/pion/mdns v0.0.12 // indirect\n\tgithub.com/pion/rtcp v1.2.14 // indirect\n\tgithub.com/pion/rtp v1.8.9 // indirect\n\tgithub.com/pion/sctp v1.8.33 // indirect\n\tgithub.com/pion/sdp/v3 v3.0.9 // indirect\n\tgithub.com/pion/srtp/v2 v2.0.20 // indirect\n\tgithub.com/pion/transport/v2 v2.2.10 // indirect\n\tgithub.com/pion/turn/v2 v2.1.6 // indirect\n\tgithub.com/pion/webrtc/v3 v3.3.4 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.60.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/quic-go/qpack v0.5.1 // indirect\n\tgithub.com/quic-go/quic-go v0.48.2 // indirect\n\tgithub.com/quic-go/webtransport-go v0.8.1-0.20241018022711-4ac2c9250e66 // indirect\n\tgithub.com/raulk/go-watchdog v1.3.0 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/rs/dnscache v0.0.0-20211102005908-e0241e321417 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/shirou/gopsutil/v4 v4.24.8 // indirect\n\tgithub.com/shoenig/go-m1cpu v0.1.6 // indirect\n\tgithub.com/shopspring/decimal v1.2.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/sosodev/duration v1.3.1 // indirect\n\tgithub.com/spaolacci/murmur3 v1.1.0 // indirect\n\tgithub.com/spf13/cast v1.5.0 // indirect\n\tgithub.com/stoewer/go-strcase v1.2.0 // indirect\n\tgithub.com/supranational/blst v0.3.13 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 // indirect\n\tgo.etcd.io/bbolt v1.3.6 // indirect\n\tgo.opentelemetry.io/otel v1.8.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.8.0 // indirect\n\tgo.uber.org/dig v1.18.0 // indirect\n\tgo.uber.org/fx v1.23.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/mod v0.21.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/tools v0.26.0 // indirect\n\tgopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect\n\tlukechampine.com/blake3 v1.3.0 // indirect\n\tmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 // indirect\n\tmodernc.org/libc v1.55.3 // indirect\n\tmodernc.org/mathutil v1.6.0 // indirect\n\tmodernc.org/memory v1.8.0 // indirect\n\tmodernc.org/strutil v1.2.0 // indirect\n\tmodernc.org/token v1.1.0 // indirect\n\trsc.io/tmplfunc v0.0.3 // indirect\n\tzombiezen.com/go/sqlite v0.13.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 136.2509765625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.31.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.37.0/go.mod h1:TS1dMSSfndXH133OKGwekG838Om/cQT0BUHV3HcBgoo=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.44.3/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncloud.google.com/go/storage v1.14.0/go.mod h1:GrKmX003DSIwi9o29oFT7YDnHYwZoctc3fOKtUw0Xmo=\ncrawshaw.io/iox v0.0.0-20181124134642-c51c3df30797/go.mod h1:sXBiorCo8c46JlQV3oXPKINnZ8mcqnye1EkVkqsectk=\ncrawshaw.io/sqlite v0.3.2/go.mod h1:igAO5JulrQ1DbdZdtVq48mnZUBAPOeFzer7VhDWNtW4=\ndmitri.shuralyov.com/app/changes v0.0.0-20180602232624-0a106ad413e3/go.mod h1:Yl+fi1br7+Rr3LqpNJf1/uxUdtRUV+Tnj0o93V2B9MU=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ndmitri.shuralyov.com/html/belt v0.0.0-20180602232347-f7d459c86be0/go.mod h1:JLBrvjyP0v+ecvNYvCpyZgu5/xkfAUhi6wJj28eUfSU=\ndmitri.shuralyov.com/service/change v0.0.0-20181023043359-a85b471d5412/go.mod h1:a1inKt/atXimZ4Mv927x+r7UpyzRUf4emIoiiSC2TN4=\ndmitri.shuralyov.com/state v0.0.0-20180228185332-28bcc343414c/go.mod h1:0PRwlb0D6DFvNNtx+9ybjezNCa8XF0xaYcETyp6rHWU=\nfilippo.io/edwards25519 v1.0.0-rc.1 h1:m0VOOB23frXZvAOK44usCgLWvtsxIoMCTBGJZlpmGfU=\nfilippo.io/edwards25519 v1.0.0-rc.1/go.mod h1:N1IkdkCkiLB6tki+MYJoSx2JTY9NUlxZE7eHn5EwJns=\ngfx.cafe/util/go/generic v0.0.0-20230721185457-c559e86c829c h1:alCfDKmPC0EC0KGlZWrNF0hilVWBkzMz+aAYTJ/2hY4=\ngfx.cafe/util/go/generic v0.0.0-20230721185457-c559e86c829c/go.mod h1:WvSX4JsCRBuIXj0FRBFX9YLg+2SoL3w8Ww19uZO9yNE=\ngit.apache.org/thrift.git v0.0.0-20180902110319-2566ecd5d999/go.mod h1:fPE2ZNJGynbRyZ4dJvy6G277gSllfV2HJqblrnkyeyg=\ngithub.com/99designs/gqlgen v0.17.56 h1:+J42ARAHvnysH6klO9Wq+tCsGF32cpAgU3SyF0VRJtI=\ngithub.com/99designs/gqlgen v0.17.56/go.mod h1:rmB6vLvtL8uf9F9w0/irJ5alBkD8DJvj35ET31BKbtY=\ngithub.com/AskAlexSharov/bloomfilter/v2 v2.0.9 h1:BuZqNjRlYmcXJIsI7nrIkejYMz9mgFi7ZsNFCbSPpaI=\ngithub.com/AskAlexSharov/bloomfilter/v2 v2.0.9/go.mod h1:zpoh+gs7qcpqrHr3dB55AMiJwo0iURXE7ZOP9L9hSkA=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/Giulio2002/bls v0.0.0-20241116091023-2ddcc8954ec0 h1:6DVEDL29nd7f2GoHZIA9rjpW90gYeNE3x5aUadOgTB4=\ngithub.com/Giulio2002/bls v0.0.0-20241116091023-2ddcc8954ec0/go.mod h1:k6OaCwpn4WGfzPgoXuEiWaV1BKXW+GjSkIz1mCA4jFU=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.2.0 h1:3MEsd0SM6jqZojhjLWWeBY+Kcjy9i6MQAeY7YgDP83g=\ngithub.com/Masterminds/semver/v3 v3.2.0/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/Masterminds/sprig/v3 v3.2.3 h1:eL2fZNezLomi0uOLqjQoN6BfsDD+fyLtgbJMAj9n6YA=\ngithub.com/Masterminds/sprig/v3 v3.2.3/go.mod h1:rXcFaZ2zZbLRJv/xSysmlgIM1u11eBaRMhvYXJNkGuM=\ngithub.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/PuerkitoBio/goquery v1.9.3 h1:mpJr/ikUA9/GNJB/DBZcGeFDXUtosHRyRrwh7KGdTG0=\ngithub.com/PuerkitoBio/goquery v1.9.3/go.mod h1:1ndLHPdTz+DyQPICCWYlYQMPl0oXZj0G6D4LCYA6u4U=\ngithub.com/RoaringBitmap/roaring v0.4.7/go.mod h1:8khRDP4HmeXns4xIj9oGrKSz7XTQiJx2zgh7AcNke4w=\ngithub.com/RoaringBitmap/roaring v0.4.17/go.mod h1:D3qVegWTmfCaX4Bl5CrBE9hfrSrrXIr8KVNvRsDi1NI=\ngithub.com/RoaringBitmap/roaring v0.4.23/go.mod h1:D0gp8kJQgE1A4LQ5wFLggQEyvDi06Mq5mKs52e1TwOo=\ngithub.com/RoaringBitmap/roaring v1.9.4 h1:yhEIoH4YezLYT04s1nHehNO64EKFTop/wBhxv2QzDdQ=\ngithub.com/RoaringBitmap/roaring v1.9.4/go.mod h1:6AXUsoIEzDTFFQCe1RbGA6uFONMhvejWj5rqITANK90=\ngithub.com/RoaringBitmap/roaring/v2 v2.4.2 h1:ew/INI7HLRyYK+dCbF6FcUwoe2Q0q5HCV7WafY9ljBk=\ngithub.com/RoaringBitmap/roaring/v2 v2.4.2/go.mod h1:FiJcsfkGje/nZBZgCu0ZxCPOKD/hVXDS2dXi7/eUFE0=\ngithub.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=\ngithub.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=\ngithub.com/agnivade/levenshtein v1.1.1 h1:QY8M92nrzkmr798gCo3kmMyqXFzdQVpxLlGPRBij0P8=\ngithub.com/agnivade/levenshtein v1.1.1/go.mod h1:veldBMzWxcCG2ZvUTKD2kJNRdCk5hVbJomOvKkmgYbo=\ngithub.com/ajwerner/btree v0.0.0-20211221152037-f427b3e689c0 h1:byYvvbfSo3+9efR4IeReh77gVs4PnNDR3AMOE9NJ7a0=\ngithub.com/ajwerner/btree v0.0.0-20211221152037-f427b3e689c0/go.mod h1:q37NoqncT41qKc048STsifIt69LfUJ8SrWWcz/yam5k=\ngithub.com/alecthomas/assert/v2 v2.8.1 h1:YCxnYR6jjpfnEK5AK5SysALKdUEBPGH4Y7As6tBnDw0=\ngithub.com/alecthomas/assert/v2 v2.8.1/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/atomic v0.1.0-alpha2 h1:dqwXmax66gXvHhsOS4pGPZKqYOlTkapELkLb3MNdlH8=\ngithub.com/alecthomas/atomic v0.1.0-alpha2/go.mod h1:zD6QGEyw49HIq19caJDc2NMXAy8rNi9ROrxtMXATfyI=\ngithub.com/alecthomas/kong v0.8.1 h1:acZdn3m4lLRobeh3Zi2S2EpnXTd1mOL6U7xVml+vfkY=\ngithub.com/alecthomas/kong v0.8.1/go.mod h1:n1iCIO2xS46oE8ZfYCNDqdR0b0wZNrXAIAqro/2132U=\ngithub.com/alecthomas/repr v0.1.0 h1:ENn2e1+J3k09gyj2shc0dHr/yjaWSHRlrJ4DPMevDqE=\ngithub.com/alecthomas/repr v0.1.0/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anacrolix/chansync v0.3.0 h1:lRu9tbeuw3wl+PhMu/r+JJCRu5ArFXIluOgdF0ao6/U=\ngithub.com/anacrolix/chansync v0.3.0/go.mod h1:DZsatdsdXxD0WiwcGl0nJVwyjCKMDv+knl1q2iBjA2k=\ngithub.com/anacrolix/dht/v2 v2.21.1 h1:s1rKkfLLcmBHKv4v/mtMkIeHIEptzEFiB6xVu54+5/o=\ngithub.com/anacrolix/dht/v2 v2.21.1/go.mod h1:SDGC+sEs1pnO2sJGYuhvIis7T8749dDHNfcjtdH4e3g=\ngithub.com/anacrolix/envpprof v0.0.0-20180404065416-323002cec2fa/go.mod h1:KgHhUaQMc8cC0+cEflSgCFNFbKwi5h54gqtVn8yhP7c=\ngithub.com/anacrolix/envpprof v1.0.0/go.mod h1:KgHhUaQMc8cC0+cEflSgCFNFbKwi5h54gqtVn8yhP7c=\ngithub.com/anacrolix/envpprof v1.1.0/go.mod h1:My7T5oSqVfEn4MD4Meczkw/f5lSIndGAKu/0SM/rkf4=\ngithub.com/anacrolix/envpprof v1.3.0 h1:WJt9bpuT7A/CDCxPOv/eeZqHWlle/Y0keJUvc6tcJDk=\ngithub.com/anacrolix/envpprof v1.3.0/go.mod h1:7QIG4CaX1uexQ3tqd5+BRa/9e2D02Wcertl6Yh0jCB0=\ngithub.com/anacrolix/generics v0.0.2-0.20240227122613-f95486179cab h1:MvuAC/UJtcohN6xWc8zYXSZfllh1LVNepQ0R3BCX5I4=\ngithub.com/anacrolix/generics v0.0.2-0.20240227122613-f95486179cab/go.mod h1:ff2rHB/joTV03aMSSn/AZNnaIpUw0h3njetGsaXcMy8=\ngithub.com/anacrolix/go-libutp v1.3.1 h1:idJzreNLl+hNjGC3ZnUOjujEaryeOGgkwHLqSGoige0=\ngithub.com/anacrolix/go-libutp v1.3.1/go.mod h1:heF41EC8kN0qCLMokLBVkB8NXiLwx3t8R8810MTNI5o=\ngithub.com/anacrolix/log v0.3.0/go.mod h1:lWvLTqzAnCWPJA08T2HCstZi0L1y2Wyvm3FJgwU9jwU=\ngithub.com/anacrolix/log v0.6.0/go.mod h1:lWvLTqzAnCWPJA08T2HCstZi0L1y2Wyvm3FJgwU9jwU=\ngithub.com/anacrolix/log v0.10.1-0.20220123034749-3920702c17f8/go.mod h1:GmnE2c0nvz8pOIPUSC9Rawgefy1sDXqposC2wgtBZE4=\ngithub.com/anacrolix/log v0.13.1/go.mod h1:D4+CvN8SnruK6zIFS/xPoRJmtvtnxs+CSfDQ+BFxZ68=\ngithub.com/anacrolix/log v0.15.2 h1:LTSf5Wm6Q4GNWPFMBP7NPYV6UBVZzZLKckL+/Lj72Oo=\ngithub.com/anacrolix/log v0.15.2/go.mod h1:m0poRtlr41mriZlXBQ9SOVZ8yZBkLjOkDhd5Li5pITA=\ngithub.com/anacrolix/lsan v0.0.0-20211126052245-807000409a62 h1:P04VG6Td13FHMgS5ZBcJX23NPC/fiC4cp9bXwYujdYM=\ngithub.com/anacrolix/lsan v0.0.0-20211126052245-807000409a62/go.mod h1:66cFKPCO7Sl4vbFnAaSq7e4OXtdMhRSBagJGWgmpJbM=\ngithub.com/anacrolix/missinggo v0.0.0-20180725070939-60ef2fbf63df/go.mod h1:kwGiTUTZ0+p4vAz3VbAI5a30t2YbvemcmspjKwrAz5s=\ngithub.com/anacrolix/missinggo v1.1.0/go.mod h1:MBJu3Sk/k3ZfGYcS7z18gwfu72Ey/xopPFJJbTi5yIo=\ngithub.com/anacrolix/missinggo v1.1.2-0.20190815015349-b888af804467/go.mod h1:MBJu3Sk/k3ZfGYcS7z18gwfu72Ey/xopPFJJbTi5yIo=\ngithub.com/anacrolix/missinggo v1.2.1/go.mod h1:J5cMhif8jPmFoC3+Uvob3OXXNIhOUikzMt+uUjeM21Y=\ngithub.com/anacrolix/missinggo v1.3.0 h1:06HlMsudotL7BAELRZs0yDZ4yVXsHXGi323QBjAVASw=\ngithub.com/anacrolix/missinggo v1.3.0/go.mod h1:bqHm8cE8xr+15uVfMG3BFui/TxyB6//H5fwlq/TeqMc=\ngithub.com/anacrolix/missinggo/perf v1.0.0 h1:7ZOGYziGEBytW49+KmYGTaNfnwUqP1HBsy6BqESAJVw=\ngithub.com/anacrolix/missinggo/perf v1.0.0/go.mod h1:ljAFWkBuzkO12MQclXzZrosP5urunoLS0Cbvb4V0uMQ=\ngithub.com/anacrolix/missinggo/v2 v2.2.0/go.mod h1:o0jgJoYOyaoYQ4E2ZMISVa9c88BbUBVQQW4QeRkNCGY=\ngithub.com/anacrolix/missinggo/v2 v2.5.1/go.mod h1:WEjqh2rmKECd0t1VhQkLGTdIWXO6f6NLjp5GlMZ+6FA=\ngithub.com/anacrolix/missinggo/v2 v2.5.2/go.mod h1:yNvsLrtZYRYCOI+KRH/JM8TodHjtIE/bjOGhQaLOWIE=\ngithub.com/anacrolix/missinggo/v2 v2.7.3 h1:Ee//CmZBMadeNiYB/hHo9ly2PFOEZ4Fhsbnug3rDAIE=\ngithub.com/anacrolix/missinggo/v2 v2.7.3/go.mod h1:mIEtp9pgaXqt8VQ3NQxFOod/eQ1H0D1XsZzKUQfwtac=\ngithub.com/anacrolix/mmsg v0.0.0-20180515031531-a4a3ba1fc8bb/go.mod h1:x2/ErsYUmT77kezS63+wzZp8E3byYB0gzirM/WMBLfw=\ngithub.com/anacrolix/mmsg v1.0.0 h1:btC7YLjOn29aTUAExJiVUhQOuf/8rhm+/nWCMAnL3Hg=\ngithub.com/anacrolix/mmsg v1.0.0/go.mod h1:x8kRaJY/dCrY9Al0PEcj1mb/uFHwP6GCJ9fLl4thEPc=\ngithub.com/anacrolix/multiless v0.3.1-0.20221221005021-2d12701f83f7 h1:lOtCD+LzoD1g7bowhYJNR++uV+FyY5bTZXKwnPex9S8=\ngithub.com/anacrolix/multiless v0.3.1-0.20221221005021-2d12701f83f7/go.mod h1:zJv1JF9AqdZiHwxqPgjuOZDGWER6nyE48WBCi/OOrMM=\ngithub.com/anacrolix/stm v0.2.0/go.mod h1:zoVQRvSiGjGoTmbM0vSLIiaKjWtNPeTvXUSdJQA4hsg=\ngithub.com/anacrolix/stm v0.4.1-0.20221221005312-96d17df0e496 h1:aMiRi2kOOd+nG64suAmFMVnNK2E6GsnLif7ia9tI3cA=\ngithub.com/anacrolix/stm v0.4.1-0.20221221005312-96d17df0e496/go.mod h1:DBm8/1OXm4A4RZ6Xa9u/eOsjeAXCaoRYvd2JzlskXeM=\ngithub.com/anacrolix/sync v0.0.0-20180808010631-44578de4e778/go.mod h1:s735Etp3joe/voe2sdaXLcqDdJSay1O0OPnM0ystjqk=\ngithub.com/anacrolix/sync v0.3.0/go.mod h1:BbecHL6jDSExojhNtgTFSBcdGerzNc64tz3DCOj/I0g=\ngithub.com/anacrolix/sync v0.5.1 h1:FbGju6GqSjzVoTgcXTUKkF041lnZkG5P0C3T5RL3SGc=\ngithub.com/anacrolix/sync v0.5.1/go.mod h1:BbecHL6jDSExojhNtgTFSBcdGerzNc64tz3DCOj/I0g=\ngithub.com/anacrolix/tagflag v0.0.0-20180109131632-2146c8d41bf0/go.mod h1:1m2U/K6ZT+JZG0+bdMK6qauP49QT4wE5pmhJXOKKCHw=\ngithub.com/anacrolix/tagflag v1.0.0/go.mod h1:1m2U/K6ZT+JZG0+bdMK6qauP49QT4wE5pmhJXOKKCHw=\ngithub.com/anacrolix/tagflag v1.1.0/go.mod h1:Scxs9CV10NQatSmbyjqmqmeQNwGzlNe0CMUMIxqHIG8=\ngithub.com/anacrolix/upnp v0.1.3-0.20220123035249-922794e51c96 h1:QAVZ3pN/J4/UziniAhJR2OZ9Ox5kOY2053tBbbqUPYA=\ngithub.com/anacrolix/upnp v0.1.3-0.20220123035249-922794e51c96/go.mod h1:Wa6n8cYIdaG35x15aH3Zy6d03f7P728QfdcDeD/IEOs=\ngithub.com/anacrolix/utp v0.1.0 h1:FOpQOmIwYsnENnz7tAGohA+r6iXpRjrq8ssKSre2Cp4=\ngithub.com/anacrolix/utp v0.1.0/go.mod h1:MDwc+vsGEq7RMw6lr2GKOEqjWny5hO5OZXRVNaBJ2Dk=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883 h1:bvNMNQO63//z+xNgfBlViaCIJKLlCJ6/fmUseuG0wVQ=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883/go.mod h1:rCTlJbsFo29Kk6CurOXKm700vrz8f0KW0JNfpkRJY/8=\ngithub.com/andybalholm/cascadia v1.3.2 h1:3Xi6Dw5lHF15JtdcmAHD3i1+T8plmv7BQ/nsViSLyss=\ngithub.com/andybalholm/cascadia v1.3.2/go.mod h1:7gtRlve5FxPPgIgX36uWBX58OdBsSS6lUvCFb+h7KvU=\ngithub.com/anmitsu/go-shlex v0.0.0-20161002113705-648efa622239/go.mod h1:2FmKhYUyUczH0OGQWaF5ceTx0UBShxjsH6f8oGKYe2c=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0 h1:jfIu9sQUG6Ig+0+Ap1h4unLjW6YQJpKZVmUzxsD4E/Q=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0/go.mod h1:t2tdKJDJF9BV14lnkjHmOQgcvEKgtqs5a1N3LNdJhGE=\ngithub.com/bahlo/generic-list-go v0.2.0 h1:5sz/EEAK+ls5wF+NeqDpk5+iNdMDXrh3z3nPnH1Wvgk=\ngithub.com/bahlo/generic-list-go v0.2.0/go.mod h1:2KvAjgMlE5NNynlg/5iLrrCCZ2+5xWbdbCW3pNTGyYg=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/benbjohnson/clock v1.3.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/benbjohnson/clock v1.3.5 h1:VvXlSJBzZpA/zum6Sj74hxwYI2DIxRWuNIoXAzHZz5o=\ngithub.com/benbjohnson/clock v1.3.5/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/benbjohnson/immutable v0.2.0/go.mod h1:uc6OHo6PN2++n98KHLxW8ef4W42ylHiQSENghE1ezxI=\ngithub.com/benbjohnson/immutable v0.4.1-0.20221220213129-8932b999621d h1:2qVb9bsAMtmAfnxXltm+6eBzrrS7SZ52c3SedsulaMI=\ngithub.com/benbjohnson/immutable v0.4.1-0.20221220213129-8932b999621d/go.mod h1:iAr8OjJGLnLmVUr9MZ/rz4PWUy6Ouc2JLYuMArmvAJM=\ngithub.com/benesch/cgosymbolizer v0.0.0-20190515212042-bec6fe6e597b h1:5JgaFtHFRnOPReItxvhMDXbvuBkjSWE+9glJyF466yw=\ngithub.com/benesch/cgosymbolizer v0.0.0-20190515212042-bec6fe6e597b/go.mod h1:eMD2XUcPsHYbakFEocKrWZp47G0MRJYoC60qFblGjpA=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bits-and-blooms/bitset v1.12.0 h1:U/q1fAF7xXRhFCrhROzIfffYnu+dlS38vCZtmFVPHmA=\ngithub.com/bits-and-blooms/bitset v1.12.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/bradfitz/go-smtpd v0.0.0-20170404230938-deb6d6237625/go.mod h1:HYsPBTaaSFSlLx/70C2HPIMNZpVV8+vt/A+FMnYP11g=\ngithub.com/bradfitz/iter v0.0.0-20140124041915-454541ec3da2/go.mod h1:PyRFw1Lt2wKX4ZVSQ2mk+PeDa1rxyObEDlApuIsUKuo=\ngithub.com/bradfitz/iter v0.0.0-20190303215204-33e6a9893b0c/go.mod h1:PyRFw1Lt2wKX4ZVSQ2mk+PeDa1rxyObEDlApuIsUKuo=\ngithub.com/bradfitz/iter v0.0.0-20191230175014-e8f45d346db8 h1:GKTyiRCL6zVf5wWaqKnf+7Qs6GbEPfd4iMOitWzXJx8=\ngithub.com/bradfitz/iter v0.0.0-20191230175014-e8f45d346db8/go.mod h1:spo1JLcs67NmW1aVLEgtA8Yy1elc+X8y5SRW1sFW4Og=\ngithub.com/buger/jsonparser v0.0.0-20181115193947-bf1c66bbce23/go.mod h1:bbYlZJ7hK1yFx9hf58LP0zeX7UjIGs20ufpu3evjr+s=\ngithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500 h1:6lhrsTEnloDPXyeZBvSYvQf8u86jbKehZPVDDlkgDl4=\ngithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500/go.mod h1:S/7n9copUssQ56c7aAgHqftWO4LTf4xY6CGWt8Bc+3M=\ngithub.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=\ngithub.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/cilium/ebpf v0.2.0/go.mod h1:To2CFviqOWL/M0gIMsvSMlqe7em/l1ALkX1PyjrX2Qs=\ngithub.com/cilium/ebpf v0.11.0 h1:V8gS/bTCCjX9uUnkUFUpPsksM8n1lXBAvHcpiFk1X2Y=\ngithub.com/cilium/ebpf v0.11.0/go.mod h1:WE7CZAnqOL2RouJ4f1uyNhqr2P4CCvXFIqdRDUgWsVs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/consensys/bavard v0.1.13 h1:oLhMLOFGTLdlda/kma4VOJazblc7IM5y5QPd2A/YjhQ=\ngithub.com/consensys/bavard v0.1.13/go.mod h1:9ItSMtA/dXMAiL7BG6bqW2m3NdSEObYWoH223nGHukI=\ngithub.com/consensys/gnark-crypto v0.12.1 h1:lHH39WuuFgVHONRl3J0LRBtuYdQTumFSDtJF7HpyG8M=\ngithub.com/consensys/gnark-crypto v0.12.1/go.mod h1:v2Gy7L/4ZRosZ7Ivs+9SfUDr0f5UlG+EM5t7MPHiLuY=\ngithub.com/containerd/cgroups v0.0.0-20201119153540-4cbc285b3327/go.mod h1:ZJeTFisyysqgcCdecO57Dj79RfL0LNeGiFUqLYQRYLE=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=\ngithub.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=\ngithub.com/coreos/go-systemd v0.0.0-20181012123002-c6f51f82210d/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd/v22 v22.1.0/go.mod h1:xO0FLkIi5MaZafQlIrOotqXZ90ih+1atmu1JpKERPPk=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/crate-crypto/go-ipa v0.0.0-20221111143132-9aa5d42120bc h1:mtR7MuscVeP/s0/ERWA2uSr5QOrRYy1pdvZqG1USfXI=\ngithub.com/crate-crypto/go-ipa v0.0.0-20221111143132-9aa5d42120bc/go.mod h1:gFnFS95y8HstDP6P9pPwzrxOOC5TRDkwbM+ao15ChAI=\ngithub.com/crate-crypto/go-kzg-4844 v0.7.0 h1:C0vgZRk4q4EZ/JgPfzuSoxdCq3C3mOZMBShovmncxvA=\ngithub.com/crate-crypto/go-kzg-4844 v0.7.0/go.mod h1:1kMhvPgI0Ky3yIa+9lFySEBUBXkYxeOi8ZF1sYioxhc=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davidlazar/go-crypto v0.0.0-20200604182044-b73af7476f6c h1:pFUpOrbxDR6AkioZ1ySsx5yxlDQZ8stG2b88gTPxgJU=\ngithub.com/davidlazar/go-crypto v0.0.0-20200604182044-b73af7476f6c/go.mod h1:6UhI8N9EjYm1c2odKpFpAYeR8dsBeM7PtzQhRgxRr9U=\ngithub.com/deckarep/golang-set v1.8.0 h1:sk9/l/KqpunDwP7pSjUg0keiOOLEnOBHzykLrsPppp4=\ngithub.com/deckarep/golang-set v1.8.0/go.mod h1:5nI87KwE7wgsBU1F4GKAw2Qod7p5kyS383rP6+o6qqo=\ngithub.com/deckarep/golang-set/v2 v2.3.1 h1:vjmkvJt/IV27WXPyYQpAh4bRyWJc5Y435D17XQ9QU5A=\ngithub.com/deckarep/golang-set/v2 v2.3.1/go.mod h1:VAky9rY/yGXJOLEDv3OMci+7wtDpOF4IN+y82NBOac4=\ngithub.com/decred/dcrd/crypto/blake256 v1.0.1 h1:7PltbUIQB7u/FfZ39+DGa/ShuMyJ5ilcvdfma9wOH6Y=\ngithub.com/decred/dcrd/crypto/blake256 v1.0.1/go.mod h1:2OfgNZ5wDpcsFmHmCK5gZTPcCXqlm2ArzUIkw9czNJo=\ngithub.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 h1:rpfIENRNNilwHwZeG5+P150SMrnNEcHYvcCuK6dPZSg=\ngithub.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48 h1:fRzb/w+pyskVMQ+UbP35JkH8yB7MYb4q/qhBarqZE6g=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48/go.mod h1:if7Fbed8SFyPtHLHbg49SI7NAdJiC5WIA09pe59rfAA=\ngithub.com/dlclark/regexp2 v1.4.1-0.20201116162257-a2a8dda75c91 h1:Izz0+t1Z5nI16/II7vuEo/nHjodOg0p7+OiDpjX5t1E=\ngithub.com/dlclark/regexp2 v1.4.1-0.20201116162257-a2a8dda75c91/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\ngithub.com/docker/go-units v0.4.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815/go.mod h1:WwZ+bS3ebgob9U8Nd0kOddGdZWjyMGR8Wziv+TBNwSE=\ngithub.com/dop251/goja v0.0.0-20220405120441-9037c2b61cbf h1:Yt+4K30SdjOkRoRRm3vYNQgR+/ZIy0RmeUDZo7Y8zeQ=\ngithub.com/dop251/goja v0.0.0-20220405120441-9037c2b61cbf/go.mod h1:R9ET47fwRVRPZnOGvHxxhuZcbrMCuiqOz3Rlrh4KSnk=\ngithub.com/dop251/goja_nodejs v0.0.0-20210225215109-d91c329300e7/go.mod h1:hn7BA7c8pLvoGndExHudxTDKZ84Pyvv+90pbBjbTz0Y=\ngithub.com/dustin/go-humanize v0.0.0-20180421182945-02af3965c54e/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=\ngithub.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=\ngithub.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=\ngithub.com/edsrzf/mmap-go v1.1.0 h1:6EUwBLQ/Mcr1EYLE4Tn1VdW1A4ckqCQWZBw8Hr0kjpQ=\ngithub.com/edsrzf/mmap-go v1.1.0/go.mod h1:19H/e8pUPLicwkyNgOykDXkJ9F0MHE+Z52B8EIth78Q=\ngithub.com/elastic/go-freelru v0.13.0 h1:TKKY6yCfNNNky7Pj9xZAOEpBcdNgZJfihEftOb55omg=\ngithub.com/elastic/go-freelru v0.13.0/go.mod h1:bSdWT4M0lW79K8QbX6XY2heQYSCqD7THoYf82pT/H3I=\ngithub.com/elastic/gosigar v0.12.0/go.mod h1:iXRIGg2tLnu7LBdpqzyQfGDEidKCfWcCMS0WKyPWoMs=\ngithub.com/elastic/gosigar v0.14.3 h1:xwkKwPia+hSfg9GqrCUKYdId102m9qTJIIr7egmK/uo=\ngithub.com/elastic/gosigar v0.14.3/go.mod h1:iXRIGg2tLnu7LBdpqzyQfGDEidKCfWcCMS0WKyPWoMs=\ngithub.com/emicklei/dot v1.6.2 h1:08GN+DD79cy/tzN6uLCT84+2Wk9u+wvqP+Hkx/dIR8A=\ngithub.com/emicklei/dot v1.6.2/go.mod h1:DeV7GvQtIw4h2u73RKBkkFdvVAz0D9fzeJrgPW6gy/s=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/erigontech/erigon-snapshot v1.3.1-0.20241023024258-f64407a77e8e h1:ZpIO6HeopuZPYDLldL6zR0qyRezj80kQrDOGEF779ts=\ngithub.com/erigontech/erigon-snapshot v1.3.1-0.20241023024258-f64407a77e8e/go.mod h1:ooHlCl+eEYzebiPu+FP6Q6SpPUeMADn8Jxabv3IKb9M=\ngithub.com/erigontech/erigonwatch v0.0.0-20240718131902-b6576bde1116 h1:KCFa2uXEfZoBjV4buzjWmCmoqVLXiGCq0ZmQ2OjeRvQ=\ngithub.com/erigontech/erigonwatch v0.0.0-20240718131902-b6576bde1116/go.mod h1:8vQ+VjvLu2gkPs8EwdPrOTAAo++WuLuBi54N7NuAF0I=\ngithub.com/erigontech/mdbx-go v0.38.4 h1:S9T7mTe9KPcFe4dOoOtVdI6gPzht9y7wMnYfUBgrQLo=\ngithub.com/erigontech/mdbx-go v0.38.4/go.mod h1:IcOLQDPw3VM/asP6T5JVPPN4FHHgJtY16XfYjzWKVNI=\ngithub.com/erigontech/secp256k1 v1.1.0 h1:mO3YJMUSoASE15Ya//SoHiisptUhdXExuMUN1M0X9qY=\ngithub.com/erigontech/secp256k1 v1.1.0/go.mod h1:GokhPepsMB+EYDs7I5JZCprxHW6+yfOcJKaKtoZ+Fls=\ngithub.com/erigontech/silkworm-go v0.18.0 h1:j56p61xZHBFhZGH1OixlGU8KcfjHzcw9pjAfjmVsOZA=\ngithub.com/erigontech/silkworm-go v0.18.0/go.mod h1:O50ux0apICEVEGyRWiE488K8qz8lc3PA/SXbQQAc8SU=\ngithub.com/erigontech/speedtest v0.0.2 h1:W9Cvky/8AMUtUONwkLA/dZjeQ2XfkBdYfJzvhMZUO+U=\ngithub.com/erigontech/speedtest v0.0.2/go.mod h1:vulsRNiM51BmSTbVtch4FWxKxx53pS2D35lZTtao0bw=\ngithub.com/erigontech/torrent v1.54.3-alpha-1 h1:oyT9YpMr82g566v0STVKW0ZTdX/eun03cW2mKmKuTAQ=\ngithub.com/erigontech/torrent v1.54.3-alpha-1/go.mod h1:QtK2WLdEz1Iy1Dh/325UltdHU0nA1xujh2rN6aov6y0=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/fjl/gencodec v0.0.0-20220412091415-8bb9e558978c h1:CndMRAH4JIwxbW8KYq6Q+cGWcGHz0FjGR3QqcInWcW0=\ngithub.com/fjl/gencodec v0.0.0-20220412091415-8bb9e558978c/go.mod h1:AzA8Lj6YtixmJWL+wkKoBGsLWy9gFrAzi4g+5bCKwpY=\ngithub.com/flynn/go-shlex v0.0.0-20150515145356-3f9db97f8568/go.mod h1:xEzjJPgXI435gkrCt3MPfRiAkVrwSbHsst4LCFVfpJc=\ngithub.com/flynn/noise v1.1.0 h1:KjPQoQCEFdZDiP03phOvGi11+SVVhBG2wOWAorLsstg=\ngithub.com/flynn/noise v1.1.0/go.mod h1:xbMo+0i6+IGbYdJhF31t2eR1BIU0CYc12+BNAKwUTag=\ngithub.com/francoispqt/gojay v1.2.13 h1:d2m3sFjloqoIUQU3TsHBgj6qg/BVGlTBeHDUmyJnXKk=\ngithub.com/francoispqt/gojay v1.2.13/go.mod h1:ehT5mTG4ua4581f1++1WLG0vPdaA9HaiDsoyrBGkyDY=\ngithub.com/frankban/quicktest v1.9.0/go.mod h1:ui7WezCLWMWxVWr1GETZY3smRy0G4KWq9vcPtJmFl7Y=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/garslo/gogen v0.0.0-20170307003452-d6ebae628c7c h1:uYNKzPntb8c6DKvP9EfrBjkLkU7pM4lM+uuHSIa8UtU=\ngithub.com/garslo/gogen v0.0.0-20170307003452-d6ebae628c7c/go.mod h1:Q0X6pkwTILDlzrGEckF6HKjXe48EgsY/l7K7vhY4MW8=\ngithub.com/gballet/go-verkle v0.0.0-20221121182333-31427a1f2d35 h1:I8QswD9gf3VEpr7bpepKKOm7ChxFITIG+oc1I5/S0no=\ngithub.com/gballet/go-verkle v0.0.0-20221121182333-31427a1f2d35/go.mod h1:DMDd04jjQgdynaAwbEgiRERIGpC8fDjx0+y06an7Psg=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/gliderlabs/ssh v0.1.1/go.mod h1:U7qILu1NlMHj9FlMhZLlkCdDnU1DBEAqr0aevW3Awn0=\ngithub.com/glycerine/go-unsnap-stream v0.0.0-20180323001048-9f0cb55181dd/go.mod h1:/20jfyN9Y5QPEAprSgKAUr+glWDY39ZiUEAYOEv5dsE=\ngithub.com/glycerine/go-unsnap-stream v0.0.0-20181221182339-f9677308dec2/go.mod h1:/20jfyN9Y5QPEAprSgKAUr+glWDY39ZiUEAYOEv5dsE=\ngithub.com/glycerine/go-unsnap-stream v0.0.0-20190901134440-81cf024a9e0a/go.mod h1:/20jfyN9Y5QPEAprSgKAUr+glWDY39ZiUEAYOEv5dsE=\ngithub.com/glycerine/goconvey v0.0.0-20180728074245-46e3a41ad493/go.mod h1:Ogl1Tioa0aV7gstGFO7KhffUsb9M4ydbEbbxpcEDc24=\ngithub.com/glycerine/goconvey v0.0.0-20190315024820-982ee783a72e/go.mod h1:Ogl1Tioa0aV7gstGFO7KhffUsb9M4ydbEbbxpcEDc24=\ngithub.com/glycerine/goconvey v0.0.0-20190410193231-58a59202ab31/go.mod h1:Ogl1Tioa0aV7gstGFO7KhffUsb9M4ydbEbbxpcEDc24=\ngithub.com/go-chi/chi/v5 v5.1.0 h1:acVI1TYaD+hhedDJ3r54HyA6sExp3HfXq7QWEEY/xMw=\ngithub.com/go-chi/chi/v5 v5.1.0/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-chi/cors v1.2.1 h1:xEC8UT3Rlp2QuWNEr4Fs/c2EAGVKBwy/1vHx3bppil4=\ngithub.com/go-chi/cors v1.2.1/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\ngithub.com/go-echarts/go-echarts/v2 v2.3.3 h1:uImZAk6qLkC6F9ju6mZ5SPBqTyK8xjZKwSmwnCg4bxg=\ngithub.com/go-echarts/go-echarts/v2 v2.3.3/go.mod h1:56YlvzhW/a+du15f3S2qUGNDfKnFOeJSThBIrVFHDtI=\ngithub.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-llsqlite/adapter v0.0.0-20230927005056-7f5ce7f0c916 h1:OyQmpAN302wAopDgwVjgs2HkFawP9ahIEqkUYz7V7CA=\ngithub.com/go-llsqlite/adapter v0.0.0-20230927005056-7f5ce7f0c916/go.mod h1:DADrR88ONKPPeSGjFp5iEN55Arx3fi2qXZeKCYDpbmU=\ngithub.com/go-llsqlite/crawshaw v0.5.2-0.20240425034140-f30eb7704568 h1:3EpZo8LxIzF4q3BT+vttQQlRfA6uTtTb/cxVisWa5HM=\ngithub.com/go-llsqlite/crawshaw v0.5.2-0.20240425034140-f30eb7704568/go.mod h1:/YJdV7uBQaYDE0fwe4z3wwJIZBJxdYzd38ICggWqtaE=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-sourcemap/sourcemap v2.1.3+incompatible h1:W1iEw64niKVGogNgBN3ePyLFfuisuzeidWPMPWmECqU=\ngithub.com/go-sourcemap/sourcemap v2.1.3+incompatible/go.mod h1:F8jJfvm2KbVjc5NqelyYJmf/v5J0dwNLS2mL4sNA1Jg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-stack/stack v1.8.1 h1:ntEHSVwIt7PNXNpgPmVfMrNhLtgjlmnZha2kOpuRiDw=\ngithub.com/go-stack/stack v1.8.1/go.mod h1:dcoOX6HbPZSZptuspn9bctJ+N/CnF5gGygcUP3XYfe4=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/go-test/deep v1.1.1 h1:0r/53hagsehfO4bzD2Pgr/+RgHqhmf+k1Bpse2cTu1U=\ngithub.com/go-test/deep v1.1.1/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/go-viper/mapstructure/v2 v2.2.1 h1:ZAaOCxANMuZx5RCeg0mBdEZk7DZasvvZIxtHqx8aGss=\ngithub.com/go-viper/mapstructure/v2 v2.2.1/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=\ngithub.com/goccy/go-json v0.9.11 h1:/pAaQDLHEoCq/5FFmSKBswWmK6H0e8g4159Kc/X/nqk=\ngithub.com/goccy/go-json v0.9.11/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/godbus/dbus/v5 v5.0.3/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.1/go.mod h1:SlYgWuQ5SjCEi6WLHjHCa1yvBfUnHcTbrrZtXPKa29o=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:tluoj9z5200jBnyusfRPU2LqT6J+DAorxEvtC7LHB+E=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb h1:PBC98N2aIaM3XXiurYmW7fx4GZkL8feAMVq7nEjURHk=\ngithub.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180124185431-e89373fe6b4a/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/cel-go v0.18.2 h1:L0B6sNBSVmt0OyECi8v6VOS74KOc9W/tLiWKfZABvf4=\ngithub.com/google/cel-go v0.18.2/go.mod h1:kWcIzTsPX0zmQ+H3TirHstLLf9ep5QTsZBN9u4dOYLg=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gopacket v1.1.19 h1:ves8RnFZPGiFnTS0uPQStjwru6uO6h+nlr9j6fL7kF8=\ngithub.com/google/gopacket v1.1.19/go.mod h1:iJ8V8n6KS+z2U1A8pUwu8bW5SyEMkXJB8Yo/Vo+TKTo=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20241017200806-017d972448fc h1:NGyrhhFhwvRAZg02jnYVg3GBQy0qGBKmFQJwaPmpmxs=\ngithub.com/google/pprof v0.0.0-20241017200806-017d972448fc/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/subcommands v1.2.0/go.mod h1:ZjhPrFU+Olkh9WazFPsl27BQ4UPiG37m3yTrtFlrHVk=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go v2.0.0+incompatible/go.mod h1:SFVmujtThgffbyetf+mdk2eWhX2bMyUtNHzFKcPA9HY=\ngithub.com/googleapis/gax-go/v2 v2.0.3/go.mod h1:LLvjysVCY1JZeum8Z6l8qUty8fiNwE08qbEPm1M08qg=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v0.0.0-20181103185306-d547d1d9531e/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v0.0.0-20190309154008-847fc94819f9/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v0.0.0-20190910122728-9d188e94fb99/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=\ngithub.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/grpc-gateway v1.5.0/go.mod h1:RSKVYQBd5MCa4OVpNdGskqpgL2+G+NZTnrVHpWWfpdw=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru/arc/v2 v2.0.7 h1:QxkVTxwColcduO+LP7eJO56r2hFiG8zEbfAAzRv52KQ=\ngithub.com/hashicorp/golang-lru/arc/v2 v2.0.7/go.mod h1:Pe7gBlGdc8clY5LJ0LpJXMt5AmgmWNH1g+oFFVUHOEc=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/holiman/uint256 v1.2.0/go.mod h1:y4ga/t+u+Xwd7CpDgZESaRcWy0I7XMlTMA25ApIH5Jw=\ngithub.com/holiman/uint256 v1.3.2 h1:a9EgMPSC1AAaj1SZL5zIQD3WbwTuHrMGOerLjGmM/TA=\ngithub.com/holiman/uint256 v1.3.2/go.mod h1:EOMSn4q6Nyt9P6efbI3bueV4e1b3dGlUCXeiRV4ng7E=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/huandu/xstrings v1.0.0/go.mod h1:4qWG/gcEcfX4z/mBDHJ++3ReCw9ibxbsNJbcucJdbSo=\ngithub.com/huandu/xstrings v1.2.0/go.mod h1:DvyZB1rfVYsBIigL8HwpZgxHwXozlTgGqn63UyNX5k4=\ngithub.com/huandu/xstrings v1.3.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.3.1/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.3.2/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.3.3/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.5.0 h1:2ag3IFq9ZDANvthTwTiqSSZLjDc+BedvHPAp5tJy2TI=\ngithub.com/huandu/xstrings v1.5.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huin/goupnp v1.3.0 h1:UvLUlWDNpoUdYzb2TCn+MuTWtcjXKSza2n6CBdQ0xXc=\ngithub.com/huin/goupnp v1.3.0/go.mod h1:gnGPsThkYa7bFi/KWmEysQRf48l2dvR5bxr2OFckNX8=\ngithub.com/ianlancetaylor/cgosymbolizer v0.0.0-20240503222823-736c933a666d/go.mod h1:DvXTE/K/RtHehxU8/GtDs4vFtfw64jJ3PaCnFri8CRg=\ngithub.com/ianlancetaylor/cgosymbolizer v0.0.0-20241129212102-9c50ad6b591e h1:8AnObPi8WmIgjwcidUxaREhXMSpyUJeeSrIkZTXdabw=\ngithub.com/ianlancetaylor/cgosymbolizer v0.0.0-20241129212102-9c50ad6b591e/go.mod h1:DvXTE/K/RtHehxU8/GtDs4vFtfw64jJ3PaCnFri8CRg=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.11 h1:3tnifQM4i+fbajXKBHXWEH+KvNHqojZ778UH75j3bGA=\ngithub.com/imdario/mergo v0.3.11/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/ipfs/go-cid v0.4.1 h1:A/T3qGvxi4kpKWWcPC/PgbvDA2bjVLO7n4UeVwnbs/s=\ngithub.com/ipfs/go-cid v0.4.1/go.mod h1:uQHwDeX4c6CtyrFwdqyhpNcxVewur1M7l7fNU7LKwZk=\ngithub.com/ipfs/go-log/v2 v2.5.1 h1:1XdUzF7048prq4aBjDQQ4SL5RxftpRGdXhNRwKSAlcY=\ngithub.com/ipfs/go-log/v2 v2.5.1/go.mod h1:prSpmC1Gpllc9UYWxDiZDreBYw7zp4Iqp1kOLU9U5UI=\ngithub.com/jackpal/go-nat-pmp v1.0.2 h1:KzKSgb7qkJvOUTqYl9/Hg/me3pWgBmERKrTGD7BdWus=\ngithub.com/jackpal/go-nat-pmp v1.0.2/go.mod h1:QPH045xvCAeXUZOxsnwmrtiCoxIr9eob+4orBN1SBKc=\ngithub.com/jbenet/go-temp-err-catcher v0.1.0 h1:zpb3ZH6wIE8Shj2sKS+khgRvf7T7RABoLk/+KKHggpk=\ngithub.com/jbenet/go-temp-err-catcher v0.1.0/go.mod h1:0kJRvmDZXNMIiJirNPEYfhpPwbGVtZVWC34vc5WLsDk=\ngithub.com/jedib0t/go-pretty/v6 v6.5.9 h1:ACteMBRrrmm1gMsXe9PSTOClQ63IXDUt03H5U+UV8OU=\ngithub.com/jedib0t/go-pretty/v6 v6.5.9/go.mod h1:zbn98qrYlh95FIhwwsbIip0LYpwSG8SUOScs+v9/t0E=\ngithub.com/jellevandenhooff/dkim v0.0.0-20150330215556-f50fe3d243e1/go.mod h1:E0B/fFc00Y+Rasa88328GlI/XbtyysCtTHZS8h7IrBU=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.2.1+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0 h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=\ngithub.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/koron/go-ssdp v0.0.4 h1:1IDwrghSKYM7yLf7XCzbByg2sJ/JcNOZRXS2jczTwz0=\ngithub.com/koron/go-ssdp v0.0.4/go.mod h1:oDXq+E5IL5q0U8uSBcoAXzTzInwy5lEgC91HoKtbmZk=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.3/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/leanovate/gopter v0.2.9 h1:fQjYxZaynp97ozCzfOyOuAGOU4aU/z37zf/tOujFk7c=\ngithub.com/leanovate/gopter v0.2.9/go.mod h1:U2L/78B+KVFIx2VmW6onHJQzXtFb+p5y3y2Sh+Jxxv8=\ngithub.com/libp2p/go-buffer-pool v0.1.0 h1:oK4mSFcQz7cTQIfqbe4MIj9gLW+mnanjyFtc6cdF0Y8=\ngithub.com/libp2p/go-buffer-pool v0.1.0/go.mod h1:N+vh8gMqimBzdKkSMVuydVDq+UV5QTWy5HSiZacSbPg=\ngithub.com/libp2p/go-flow-metrics v0.2.0 h1:EIZzjmeOE6c8Dav0sNv35vhZxATIXWZg6j/C08XmmDw=\ngithub.com/libp2p/go-flow-metrics v0.2.0/go.mod h1:st3qqfu8+pMfh+9Mzqb2GTiwrAGjIPszEjZmtksN8Jc=\ngithub.com/libp2p/go-libp2p v0.37.2 h1:Irh+n9aDPTLt9wJYwtlHu6AhMUipbC1cGoJtOiBqI9c=\ngithub.com/libp2p/go-libp2p v0.37.2/go.mod h1:M8CRRywYkqC6xKHdZ45hmqVckBj5z4mRLIMLWReypz8=\ngithub.com/libp2p/go-libp2p-asn-util v0.4.1 h1:xqL7++IKD9TBFMgnLPZR6/6iYhawHKHl950SO9L6n94=\ngithub.com/libp2p/go-libp2p-asn-util v0.4.1/go.mod h1:d/NI6XZ9qxw67b4e+NgpQexCIiFYJjErASrYW4PFDN8=\ngithub.com/libp2p/go-libp2p-mplex v0.9.0 h1:R58pDRAmuBXkYugbSSXR9wrTX3+1pFM1xP2bLuodIq8=\ngithub.com/libp2p/go-libp2p-mplex v0.9.0/go.mod h1:ro1i4kuwiFT+uMPbIDIFkcLs1KRbNp0QwnUXM+P64Og=\ngithub.com/libp2p/go-libp2p-pubsub v0.11.0 h1:+JvS8Kty0OiyUiN0i8H5JbaCgjnJTRnTHe4rU88dLFc=\ngithub.com/libp2p/go-libp2p-pubsub v0.11.0/go.mod h1:QEb+hEV9WL9wCiUAnpY29FZR6W3zK8qYlaml8R4q6gQ=\ngithub.com/libp2p/go-libp2p-testing v0.12.0 h1:EPvBb4kKMWO29qP4mZGyhVzUyR25dvfUIK5WDu6iPUA=\ngithub.com/libp2p/go-libp2p-testing v0.12.0/go.mod h1:KcGDRXyN7sQCllucn1cOOS+Dmm7ujhfEyXQL5lvkcPg=\ngithub.com/libp2p/go-mplex v0.7.0 h1:BDhFZdlk5tbr0oyFq/xv/NPGfjbnrsDam1EvutpBDbY=\ngithub.com/libp2p/go-mplex v0.7.0/go.mod h1:rW8ThnRcYWft/Jb2jeORBmPd6xuG3dGxWN/W168L9EU=\ngithub.com/libp2p/go-msgio v0.3.0 h1:mf3Z8B1xcFN314sWX+2vOTShIE0Mmn2TXn3YCUQGNj0=\ngithub.com/libp2p/go-msgio v0.3.0/go.mod h1:nyRM819GmVaF9LX3l03RMh10QdOroF++NBbxAb0mmDM=\ngithub.com/libp2p/go-nat v0.2.0 h1:Tyz+bUFAYqGyJ/ppPPymMGbIgNRH+WqC5QrT5fKrrGk=\ngithub.com/libp2p/go-nat v0.2.0/go.mod h1:3MJr+GRpRkyT65EpVPBstXLvOlAPzUVlG6Pwg9ohLJk=\ngithub.com/libp2p/go-netroute v0.2.1 h1:V8kVrpD8GK0Riv15/7VN6RbUQ3URNZVosw7H2v9tksU=\ngithub.com/libp2p/go-netroute v0.2.1/go.mod h1:hraioZr0fhBjG0ZRXJJ6Zj2IVEVNx6tDTFQfSmcq7mQ=\ngithub.com/libp2p/go-reuseport v0.4.0 h1:nR5KU7hD0WxXCJbmw7r2rhRYruNRl2koHw8fQscQm2s=\ngithub.com/libp2p/go-reuseport v0.4.0/go.mod h1:ZtI03j/wO5hZVDFo2jKywN6bYKWLOy8Se6DrI2E1cLU=\ngithub.com/libp2p/go-yamux/v4 v4.0.1 h1:FfDR4S1wj6Bw2Pqbc8Uz7pCxeRBPbwsBbEdfwiCypkQ=\ngithub.com/libp2p/go-yamux/v4 v4.0.1/go.mod h1:NWjl8ZTLOGlozrXSOZ/HlfG++39iKNnM5wwmtQP1YB4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 h1:6E+4a0GO5zZEnZ81pIr0yLvtUWk2if982qA3F3QD6H4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/lunixbochs/vtclean v1.0.0/go.mod h1:pHhQNgMf3btfWnGBVipUOjRYhoOsdGqdm/+2c2E2WMI=\ngithub.com/mailru/easyjson v0.0.0-20190312143242-1de009706dbe/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/marten-seemann/tcp v0.0.0-20210406111302-dfbc87cc63fd h1:br0buuQ854V8u83wA0rVZ8ttrq5CpaPZdvrK0LP2lOk=\ngithub.com/marten-seemann/tcp v0.0.0-20210406111302-dfbc87cc63fd/go.mod h1:QuCEs1Nt24+FYQEqAAncTDPJIuGs+LxK1MCiFL25pMU=\ngithub.com/maticnetwork/crand v1.0.2 h1:Af0tAivC8zrxXDpGWNWVT/0s1fOz8w0eRbahZgURS8I=\ngithub.com/maticnetwork/crand v1.0.2/go.mod h1:/NRNL3bj2eYdqpWmoIP5puxndTpi0XRxpj5ZKxfHjyg=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/microcosm-cc/bluemonday v1.0.1/go.mod h1:hsXNsILzKxV+sX77C5b8FSuKF00vh2OMYv+xgHpAMF4=\ngithub.com/miekg/dns v1.1.62 h1:cN8OuEF1/x5Rq6Np+h1epln8OiyPWV+lROx9LxcGgIQ=\ngithub.com/miekg/dns v1.1.62/go.mod h1:mvDlcItzm+br7MToIKqkglaGhlFMHJ9DTNNWONWXbNQ=\ngithub.com/mikioh/tcp v0.0.0-20190314235350-803a9b46060c h1:bzE/A84HN25pxAuk9Eej1Kz9OUelF97nAc82bDquQI8=\ngithub.com/mikioh/tcp v0.0.0-20190314235350-803a9b46060c/go.mod h1:0SQS9kMwD2VsyFEB++InYyBJroV/FRmBgcydeSUcJms=\ngithub.com/mikioh/tcpinfo v0.0.0-20190314235526-30a79bb1804b h1:z78hV3sbSMAUoyUMM0I83AUIT6Hu17AWfgjzIbtrYFc=\ngithub.com/mikioh/tcpinfo v0.0.0-20190314235526-30a79bb1804b/go.mod h1:lxPUiZwKoFL8DUUmalo2yJJUCxbPKtm8OKfqr2/FTNU=\ngithub.com/mikioh/tcpopt v0.0.0-20190314235656-172688c1accc h1:PTfri+PuQmWDqERdnNMiD9ZejrlswWrCpBEZgWOiTrc=\ngithub.com/mikioh/tcpopt v0.0.0-20190314235656-172688c1accc/go.mod h1:cGKTAVKx4SxOuR/czcZ/E2RSJ3sfHs8FpHhQ5CWMf9s=\ngithub.com/minio/blake2b-simd v0.0.0-20160723061019-3f5f724cb5b1/go.mod h1:pD8RvIylQ358TN4wwqatJ8rNavkEINozVn9DtGI3dfQ=\ngithub.com/minio/sha256-simd v0.1.1-0.20190913151208-6de447530771/go.mod h1:B5e1o+1/KgNmWrSQK08Y6Z1Vb5pwIktudl0J58iy0KM=\ngithub.com/minio/sha256-simd v1.0.1 h1:6kaan5IFmwTNynnKKpDHe6FWHohJOHhCPchzK49dzMM=\ngithub.com/minio/sha256-simd v1.0.1/go.mod h1:Pz6AKMiUdngCLpeTL/RJY1M9rUuPMYujV5xJjtbRSN8=\ngithub.com/mitchellh/copystructure v1.0.0 h1:Laisrj+bAB6b/yJwB5Bt3ITZhGJdqmxquMKeZ+mmkFQ=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/reflectwalk v1.0.0 h1:9D+8oIskB4VJBN5SFlmc27fSlIBZaov1Wpk/IfikLNY=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mmcloughlin/addchain v0.4.0 h1:SobOdjm2xLj1KkXN5/n0xTIWyZA2+s99UCY1iPfkHRY=\ngithub.com/mmcloughlin/addchain v0.4.0/go.mod h1:A86O+tHqZLMNO4w6ZZ4FlVQEadcoqkyU72HC5wJ4RlU=\ngithub.com/mmcloughlin/profile v0.1.1/go.mod h1:IhHD7q1ooxgwTgjxQYkACGA77oFTDdFVejUS1/tS/qU=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mr-tron/base58 v1.1.2/go.mod h1:BinMc/sQntlIE1frQmRFPUoPA1Zkr8VRgBdjWI2mNwc=\ngithub.com/mr-tron/base58 v1.2.0 h1:T/HDJBh4ZCPbU39/+c3rRvE0uKBQlU27+QI8LJ4t64o=\ngithub.com/mr-tron/base58 v1.2.0/go.mod h1:BinMc/sQntlIE1frQmRFPUoPA1Zkr8VRgBdjWI2mNwc=\ngithub.com/mschoch/smat v0.0.0-20160514031455-90eadee771ae/go.mod h1:qAyveg+e4CE+eKJXWVjKXM4ck2QobLqTDytGJbLLhJg=\ngithub.com/mschoch/smat v0.2.0 h1:8imxQsjDm8yFEAVBe7azKmKSgzSkZXDuKkSq9374khM=\ngithub.com/mschoch/smat v0.2.0/go.mod h1:kc9mz7DoBKqDyiRL7VZN8KvXQMWeTaVnttLRXOlotKw=\ngithub.com/multiformats/go-base32 v0.1.0 h1:pVx9xoSPqEIQG8o+UbAe7DNi51oej1NtK+aGkbLYxPE=\ngithub.com/multiformats/go-base32 v0.1.0/go.mod h1:Kj3tFY6zNr+ABYMqeUNeGvkIC/UYgtWibDcT0rExnbI=\ngithub.com/multiformats/go-base36 v0.2.0 h1:lFsAbNOGeKtuKozrtBsAkSVhv1p9D0/qedU9rQyccr0=\ngithub.com/multiformats/go-base36 v0.2.0/go.mod h1:qvnKE++v+2MWCfePClUEjE78Z7P2a1UV0xHgWc0hkp4=\ngithub.com/multiformats/go-multiaddr v0.1.1/go.mod h1:aMKBKNEYmzmDmxfX88/vz+J5IU55txyt0p4aiWVohjo=\ngithub.com/multiformats/go-multiaddr v0.13.0 h1:BCBzs61E3AGHcYYTv8dqRH43ZfyrqM8RXVPT8t13tLQ=\ngithub.com/multiformats/go-multiaddr v0.13.0/go.mod h1:sBXrNzucqkFJhvKOiwwLyqamGa/P5EIXNPLovyhQCII=\ngithub.com/multiformats/go-multiaddr-dns v0.4.1 h1:whi/uCLbDS3mSEUMb1MsoT4uzUeZB0N32yzufqS0i5M=\ngithub.com/multiformats/go-multiaddr-dns v0.4.1/go.mod h1:7hfthtB4E4pQwirrz+J0CcDUfbWzTqEzVyYKKIKpgkc=\ngithub.com/multiformats/go-multiaddr-fmt v0.1.0 h1:WLEFClPycPkp4fnIzoFoV9FVd49/eQsuaL3/CWe167E=\ngithub.com/multiformats/go-multiaddr-fmt v0.1.0/go.mod h1:hGtDIW4PU4BqJ50gW2quDuPVjyWNZxToGUh/HwTZYJo=\ngithub.com/multiformats/go-multibase v0.2.0 h1:isdYCVLvksgWlMW9OZRYJEa9pZETFivncJHmHnnd87g=\ngithub.com/multiformats/go-multibase v0.2.0/go.mod h1:bFBZX4lKCA/2lyOFSAoKH5SS6oPyjtnzK/XTFDPkNuk=\ngithub.com/multiformats/go-multicodec v0.9.0 h1:pb/dlPnzee/Sxv/j4PmkDRxCOi3hXTz3IbPKOXWJkmg=\ngithub.com/multiformats/go-multicodec v0.9.0/go.mod h1:L3QTQvMIaVBkXOXXtVmYE+LI16i14xuaojr/H7Ai54k=\ngithub.com/multiformats/go-multihash v0.0.8/go.mod h1:YSLudS+Pi8NHE7o6tb3D8vrpKa63epEDmG8nTduyAew=\ngithub.com/multiformats/go-multihash v0.2.3 h1:7Lyc8XfX/IY2jWb/gI7JP+o7JEq9hOa7BFvVU9RSh+U=\ngithub.com/multiformats/go-multihash v0.2.3/go.mod h1:dXgKXCXjBzdscBLk9JkjINiEsCKRVch90MdaGiKsvSM=\ngithub.com/multiformats/go-multistream v0.6.0 h1:ZaHKbsL404720283o4c/IHQXiS6gb8qAN5EIJ4PN5EA=\ngithub.com/multiformats/go-multistream v0.6.0/go.mod h1:MOyoG5otO24cHIg8kf9QW2/NozURlkP/rvi2FQJyCPg=\ngithub.com/multiformats/go-varint v0.0.7 h1:sWSGR+f/eu5ABZA2ZpYKBILXTTs9JWpdEM/nEGOHFS8=\ngithub.com/multiformats/go-varint v0.0.7/go.mod h1:r8PUYw/fD/SjBCiKOoDlGF6QawOELpZAu9eioSos/OU=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=\ngithub.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=\ngithub.com/neelance/astrewrite v0.0.0-20160511093645-99348263ae86/go.mod h1:kHJEU3ofeGjhHklVoIGuVj85JJwZ6kWPaJwCIxgnFmo=\ngithub.com/neelance/sourcemap v0.0.0-20151028013722-8c68805598ab/go.mod h1:Qr6/a/Q4r9LP1IltGz7tA7iOK1WonHEYhu1HRBA7ZiM=\ngithub.com/nxadm/tail v1.4.11 h1:8feyoE3OzPrcshW5/MJ4sGESc5cqmGkGCWlco4l0bqY=\ngithub.com/nxadm/tail v1.4.11/go.mod h1:OTaG3NK980DZzxbRq6lEuzgU+mug70nY11sMd4JXXHc=\ngithub.com/nyaosorg/go-windows-shortcut v0.0.0-20220529122037-8b0c89bca4c4 h1:+3bXHpIl3RiBuPKlqeCZZeShGHC9RFhR/P2OJfOLRyA=\ngithub.com/nyaosorg/go-windows-shortcut v0.0.0-20220529122037-8b0c89bca4c4/go.mod h1:9YR30vCq/4djj0WO7AvLm48YvNs7M094LWRieEFDE4A=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.20.2 h1:7NVCeyIWROIAheY21RLS+3j2bb52W0W82tkberYytp4=\ngithub.com/onsi/ginkgo/v2 v2.20.2/go.mod h1:K9gyxPIlb+aIvnZ8bd9Ak+YP18w3APlR+5coaZoE2ag=\ngithub.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/onsi/gomega v1.34.1 h1:EUMJIKUjM8sKjYbtxQI9A4z2o+rruxnzNvpknOXie6k=\ngithub.com/onsi/gomega v1.34.1/go.mod h1:kU1QgUvBDLXBJq618Xvm2LUX6rSAfRaFRTcdOeDLwwY=\ngithub.com/opencontainers/runtime-spec v1.0.2/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/openzipkin/zipkin-go v0.1.1/go.mod h1:NtoC/o8u3JlF1lSlyPNswIbeQH9bJTmOf0Erfk+hxe8=\ngithub.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 h1:onHthvaw9LFnH4t2DcNVpwGmV9E1BkGknEliJkfwQj0=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58/go.mod h1:DXv8WO4yhMYhSNPKjeNKa5WY9YCIEBRbNzFFPJbWO6Y=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/philhofer/fwd v1.0.0/go.mod h1:gk3iGcWd9+svBvR0sR+KPcfE+RNWozjowpeBVG3ZVNU=\ngithub.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=\ngithub.com/pion/datachannel v1.5.9 h1:LpIWAOYPyDrXtU+BW7X0Yt/vGtYxtXQ8ql7dFfYUVZA=\ngithub.com/pion/datachannel v1.5.9/go.mod h1:kDUuk4CU4Uxp82NH4LQZbISULkX/HtzKa4P7ldf9izE=\ngithub.com/pion/dtls/v2 v2.2.7/go.mod h1:8WiMkebSHFD0T+dIU+UeBaoV7kDhOW5oDCzZ7WZ/F9s=\ngithub.com/pion/dtls/v2 v2.2.12 h1:KP7H5/c1EiVAAKUmXyCzPiQe5+bCJrpOeKg/L05dunk=\ngithub.com/pion/dtls/v2 v2.2.12/go.mod h1:d9SYc9fch0CqK90mRk1dC7AkzzpwJj6u2GU3u+9pqFE=\ngithub.com/pion/ice/v2 v2.3.36 h1:SopeXiVbbcooUg2EIR8sq4b13RQ8gzrkkldOVg+bBsc=\ngithub.com/pion/ice/v2 v2.3.36/go.mod h1:mBF7lnigdqgtB+YHkaY/Y6s6tsyRyo4u4rPGRuOjUBQ=\ngithub.com/pion/interceptor v0.1.37 h1:aRA8Zpab/wE7/c0O3fh1PqY0AJI3fCSEM5lRWJVorwI=\ngithub.com/pion/interceptor v0.1.37/go.mod h1:JzxbJ4umVTlZAf+/utHzNesY8tmRkM2lVmkS82TTj8Y=\ngithub.com/pion/logging v0.2.2 h1:M9+AIj/+pxNsDfAT64+MAVgJO0rsyLnoJKCqf//DoeY=\ngithub.com/pion/logging v0.2.2/go.mod h1:k0/tDVsRCX2Mb2ZEmTqNa7CWsQPc+YYCB7Q+5pahoms=\ngithub.com/pion/mdns v0.0.12 h1:CiMYlY+O0azojWDmxdNr7ADGrnZ+V6Ilfner+6mSVK8=\ngithub.com/pion/mdns v0.0.12/go.mod h1:VExJjv8to/6Wqm1FXK+Ii/Z9tsVk/F5sD/N70cnYFbk=\ngithub.com/pion/randutil v0.1.0 h1:CFG1UdESneORglEsnimhUjf33Rwjubwj6xfiOXBa3mA=\ngithub.com/pion/randutil v0.1.0/go.mod h1:XcJrSMMbbMRhASFVOlj/5hQial/Y8oH/HVo7TBZq+j8=\ngithub.com/pion/rtcp v1.2.12/go.mod h1:sn6qjxvnwyAkkPzPULIbVqSKI5Dv54Rv7VG0kNxh9L4=\ngithub.com/pion/rtcp v1.2.14 h1:KCkGV3vJ+4DAJmvP0vaQShsb0xkRfWkO540Gy102KyE=\ngithub.com/pion/rtcp v1.2.14/go.mod h1:sn6qjxvnwyAkkPzPULIbVqSKI5Dv54Rv7VG0kNxh9L4=\ngithub.com/pion/rtp v1.8.3/go.mod h1:pBGHaFt/yW7bf1jjWAoUjpSNoDnw98KTMg+jWWvziqU=\ngithub.com/pion/rtp v1.8.9 h1:E2HX740TZKaqdcPmf4pw6ZZuG8u5RlMMt+l3dxeu6Wk=\ngithub.com/pion/rtp v1.8.9/go.mod h1:pBGHaFt/yW7bf1jjWAoUjpSNoDnw98KTMg+jWWvziqU=\ngithub.com/pion/sctp v1.8.33 h1:dSE4wX6uTJBcNm8+YlMg7lw1wqyKHggsP5uKbdj+NZw=\ngithub.com/pion/sctp v1.8.33/go.mod h1:beTnqSzewI53KWoG3nqB282oDMGrhNxBdb+JZnkCwRM=\ngithub.com/pion/sdp/v3 v3.0.9 h1:pX++dCHoHUwq43kuwf3PyJfHlwIj4hXA7Vrifiq0IJY=\ngithub.com/pion/sdp/v3 v3.0.9/go.mod h1:B5xmvENq5IXJimIO4zfp6LAe1fD9N+kFv+V/1lOdz8M=\ngithub.com/pion/srtp/v2 v2.0.20 h1:HNNny4s+OUmG280ETrCdgFndp4ufx3/uy85EawYEhTk=\ngithub.com/pion/srtp/v2 v2.0.20/go.mod h1:0KJQjA99A6/a0DOVTu1PhDSw0CXF2jTkqOoMg3ODqdA=\ngithub.com/pion/stun v0.6.1 h1:8lp6YejULeHBF8NmV8e2787BogQhduZugh5PdhDyyN4=\ngithub.com/pion/stun v0.6.1/go.mod h1:/hO7APkX4hZKu/D0f2lHzNyvdkTGtIy3NDmLR7kSz/8=\ngithub.com/pion/transport v0.13.1 h1:/UH5yLeQtwm2VZIPjxwnNFxjS4DFhyLfS4GlfuKUzfA=\ngithub.com/pion/transport/v2 v2.2.1/go.mod h1:cXXWavvCnFF6McHTft3DWS9iic2Mftcz1Aq29pGcU5g=\ngithub.com/pion/transport/v2 v2.2.3/go.mod h1:q2U/tf9FEfnSBGSW6w5Qp5PFWRLRj3NjLhCCgpRK4p0=\ngithub.com/pion/transport/v2 v2.2.4/go.mod h1:q2U/tf9FEfnSBGSW6w5Qp5PFWRLRj3NjLhCCgpRK4p0=\ngithub.com/pion/transport/v2 v2.2.10 h1:ucLBLE8nuxiHfvkFKnkDQRYWYfp8ejf4YBOPfaQpw6Q=\ngithub.com/pion/transport/v2 v2.2.10/go.mod h1:sq1kSLWs+cHW9E+2fJP95QudkzbK7wscs8yYgQToO5E=\ngithub.com/pion/transport/v3 v3.0.1/go.mod h1:UY7kiITrlMv7/IKgd5eTUcaahZx5oUN3l9SzK5f5xE0=\ngithub.com/pion/transport/v3 v3.0.7 h1:iRbMH05BzSNwhILHoBoAPxoB9xQgOaJk+591KC9P1o0=\ngithub.com/pion/transport/v3 v3.0.7/go.mod h1:YleKiTZ4vqNxVwh77Z0zytYi7rXHl7j6uPLGhhz9rwo=\ngithub.com/pion/turn/v2 v2.1.3/go.mod h1:huEpByKKHix2/b9kmTAM3YoX6MKP+/D//0ClgUYR2fY=\ngithub.com/pion/turn/v2 v2.1.6 h1:Xr2niVsiPTB0FPtt+yAWKFUkU1eotQbGgpTIld4x1Gc=\ngithub.com/pion/turn/v2 v2.1.6/go.mod h1:huEpByKKHix2/b9kmTAM3YoX6MKP+/D//0ClgUYR2fY=\ngithub.com/pion/webrtc/v3 v3.3.4 h1:v2heQVnXTSqNRXcaFQVOhIOYkLMxOu1iJG8uy1djvkk=\ngithub.com/pion/webrtc/v3 v3.3.4/go.mod h1:liNa+E1iwyzyXqNUwvoMRNQ10x8h8FOeJKL8RkIbamE=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/prometheus/client_golang v0.8.0/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.5.1/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.0.0-20180801064454-c7de2306084e/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/common v0.60.0 h1:+V9PAREWNvJMAuJ1x1BaWl9dewMW4YrHZQbx0sJNllA=\ngithub.com/prometheus/common v0.60.0/go.mod h1:h0LYf1R1deLSKtD4Vdg8gy4RuOvENW2J/h19V5NADQw=\ngithub.com/prometheus/procfs v0.0.0-20180725123919-05ee40e3a273/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/prometheus/procfs v0.0.11/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/protolambda/ztyp v0.2.2 h1:rVcL3vBu9W/aV646zF6caLS/dyn9BN8NYiuJzicLNyY=\ngithub.com/protolambda/ztyp v0.2.2/go.mod h1:9bYgKGqg3wJqT9ac1gI2hnVb0STQq7p/1lapqrqY1dU=\ngithub.com/prysmaticlabs/go-bitfield v0.0.0-20210809151128-385d8c5e3fb7 h1:0tVE4tdWQK9ZpYygoV7+vS6QkDvQVySboMVEIxBJmXw=\ngithub.com/prysmaticlabs/go-bitfield v0.0.0-20210809151128-385d8c5e3fb7/go.mod h1:wmuf/mdK4VMD+jA9ThwcUKjg3a2XWM9cVfFYjDyY4j4=\ngithub.com/prysmaticlabs/gohashtree v0.0.3-alpha.0.20230502123415-aafd8b3ca202 h1:ZsFouPKy81vvQo/Zup5gASVdOm6aiuwUhp7GxvQmjIA=\ngithub.com/prysmaticlabs/gohashtree v0.0.3-alpha.0.20230502123415-aafd8b3ca202/go.mod h1:4pWaT30XoEx1j8KNJf3TV+E3mQkaufn7mf+jRNb/Fuk=\ngithub.com/quasilyte/go-ruleguard/dsl v0.3.22 h1:wd8zkOhSNr+I+8Qeciml08ivDt1pSXe60+5DqOpCjPE=\ngithub.com/quasilyte/go-ruleguard/dsl v0.3.22/go.mod h1:KeCP03KrjuSO0H1kTuZQCWlQPulDV6YMIXmpQss17rU=\ngithub.com/quic-go/qpack v0.5.1 h1:giqksBPnT/HDtZ6VhtFKgoLOWmlyo9Ei6u9PqzIMbhI=\ngithub.com/quic-go/qpack v0.5.1/go.mod h1:+PC4XFrEskIVkcLzpEkbLqq1uCoxPhQuvK5rH1ZgaEg=\ngithub.com/quic-go/quic-go v0.48.2 h1:wsKXZPeGWpMpCGSWqOcqpW2wZYic/8T3aqiOID0/KWE=\ngithub.com/quic-go/quic-go v0.48.2/go.mod h1:yBgs3rWBOADpga7F+jJsb6Ybg1LSYiQvwWlLX+/6HMs=\ngithub.com/quic-go/webtransport-go v0.8.1-0.20241018022711-4ac2c9250e66 h1:4WFk6u3sOT6pLa1kQ50ZVdm8BQFgJNA117cepZxtLIg=\ngithub.com/quic-go/webtransport-go v0.8.1-0.20241018022711-4ac2c9250e66/go.mod h1:Vp72IJajgeOL6ddqrAhmp7IM9zbTcgkQxD/YdxrVwMw=\ngithub.com/raulk/go-watchdog v1.3.0 h1:oUmdlHxdkXRJlwfG0O9omj8ukerm8MEQavSiDTEtBsk=\ngithub.com/raulk/go-watchdog v1.3.0/go.mod h1:fIvOnLbF0b0ZwkB9YU4mOW9Did//4vPZtDqv66NfsMU=\ngithub.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rs/cors v1.11.1 h1:eU3gRzXLRK57F5rKMGMZURNdIG4EoAmX8k94r9wXWHA=\ngithub.com/rs/cors v1.11.1/go.mod h1:XyqrcTp5zjWr1wsJ8PIRZssZ8b/WMcMf71DJnit4EMU=\ngithub.com/rs/dnscache v0.0.0-20211102005908-e0241e321417 h1:Lt9DzQALzHoDwMBGJ6v8ObDPR0dzr2a6sXTB1Fq7IHs=\ngithub.com/rs/dnscache v0.0.0-20211102005908-e0241e321417/go.mod h1:qe5TWALJ8/a1Lqznoc5BDHpYX/8HU60Hm2AwRmqzxqA=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46 h1:GHRpF1pTW19a8tTFrMLUcfWwyC0pnifVo2ClaLq+hP8=\ngithub.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46/go.mod h1:uAQ5PCi+MFsC7HjREoAz1BU+Mq60+05gifQSsHSDG/8=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/shirou/gopsutil/v4 v4.24.8 h1:pVQjIenQkIhqO81mwTaXjTzOMT7d3TZkf43PlVFHENI=\ngithub.com/shirou/gopsutil/v4 v4.24.8/go.mod h1:wE0OrJtj4dG+hYkxqDH3QiBICdKSf04/npcvLLc/oRg=\ngithub.com/shoenig/go-m1cpu v0.1.6 h1:nxdKQNcEB6vzgA2E2bvzKIYRuNj7XNJ4S/aRSwKzFtM=\ngithub.com/shoenig/go-m1cpu v0.1.6/go.mod h1:1JJMcUBvfNwpq05QDQVAnx3gUHr9IYF7GNg9SUEw2VQ=\ngithub.com/shoenig/test v0.6.4 h1:kVTaSd7WLz5WZ2IaoM0RSzRsUD+m8wRR+5qvntpn4LU=\ngithub.com/shoenig/test v0.6.4/go.mod h1:byHiCGXqrVaflBLAMq/srcZIHynQPQgeyvkvXnjqq0k=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shurcooL/component v0.0.0-20170202220835-f88ec8f54cc4/go.mod h1:XhFIlyj5a1fBNx5aJTbKoIq0mNaPvOagO+HjB3EtxrY=\ngithub.com/shurcooL/events v0.0.0-20181021180414-410e4ca65f48/go.mod h1:5u70Mqkb5O5cxEA8nxTsgrgLehJeAw6Oc4Ab1c/P1HM=\ngithub.com/shurcooL/github_flavored_markdown v0.0.0-20181002035957-2122de532470/go.mod h1:2dOwnU2uBioM+SGy2aZoq1f/Sd1l9OkAeAUvjSyvgU0=\ngithub.com/shurcooL/go v0.0.0-20180423040247-9e1955d9fb6e/go.mod h1:TDJrrUr11Vxrven61rcy3hJMUqaf/CLWYhHNPmT14Lk=\ngithub.com/shurcooL/go-goon v0.0.0-20170922171312-37c2f522c041/go.mod h1:N5mDOmsrJOB+vfqUK+7DmDyjhSLIIBnXo9lvZJj3MWQ=\ngithub.com/shurcooL/gofontwoff v0.0.0-20180329035133-29b52fc0a18d/go.mod h1:05UtEgK5zq39gLST6uB0cf3NEHjETfB4Fgr3Gx5R9Vw=\ngithub.com/shurcooL/gopherjslib v0.0.0-20160914041154-feb6d3990c2c/go.mod h1:8d3azKNyqcHP1GaQE/c6dDgjkgSx2BZ4IoEi4F1reUI=\ngithub.com/shurcooL/highlight_diff v0.0.0-20170515013008-09bb4053de1b/go.mod h1:ZpfEhSmds4ytuByIcDnOLkTHGUI6KNqRNPDLHDk+mUU=\ngithub.com/shurcooL/highlight_go v0.0.0-20181028180052-98c3abbbae20/go.mod h1:UDKB5a1T23gOMUJrI+uSuH0VRDStOiUVSjBTRDVBVag=\ngithub.com/shurcooL/home v0.0.0-20181020052607-80b7ffcb30f9/go.mod h1:+rgNQw2P9ARFAs37qieuu7ohDNQ3gds9msbT2yn85sg=\ngithub.com/shurcooL/htmlg v0.0.0-20170918183704-d01228ac9e50/go.mod h1:zPn1wHpTIePGnXSHpsVPWEktKXHr6+SS6x/IKRb7cpw=\ngithub.com/shurcooL/httperror v0.0.0-20170206035902-86b7830d14cc/go.mod h1:aYMfkZ6DWSJPJ6c4Wwz3QtW22G7mf/PEgaB9k/ik5+Y=\ngithub.com/shurcooL/httpfs v0.0.0-20171119174359-809beceb2371/go.mod h1:ZY1cvUeJuFPAdZ/B6v7RHavJWZn2YPVFQ1OSXhCGOkg=\ngithub.com/shurcooL/httpgzip v0.0.0-20180522190206-b1c53ac65af9/go.mod h1:919LwcH0M7/W4fcZ0/jy0qGght1GIhqyS/EgWGH2j5Q=\ngithub.com/shurcooL/issues v0.0.0-20181008053335-6292fdc1e191/go.mod h1:e2qWDig5bLteJ4fwvDAc2NHzqFEthkqn7aOZAOpj+PQ=\ngithub.com/shurcooL/issuesapp v0.0.0-20180602232740-048589ce2241/go.mod h1:NPpHK2TI7iSaM0buivtFUc9offApnI0Alt/K8hcHy0I=\ngithub.com/shurcooL/notifications v0.0.0-20181007000457-627ab5aea122/go.mod h1:b5uSkrEVM1jQUspwbixRBhaIjIzL2xazXp6kntxYle0=\ngithub.com/shurcooL/octicon v0.0.0-20181028054416-fa4f57f9efb2/go.mod h1:eWdoE5JD4R5UVWDucdOPg1g2fqQRq78IQa9zlOV1vpQ=\ngithub.com/shurcooL/reactions v0.0.0-20181006231557-f2e0b4ca5b82/go.mod h1:TCR1lToEk4d2s07G3XGfz2QrgHXg4RJBvjrOozvoWfk=\ngithub.com/shurcooL/sanitized_anchor_name v0.0.0-20170918181015-86672fcb3f95/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/shurcooL/users v0.0.0-20180125191416-49c67e49c537/go.mod h1:QJTqeLYEDaXHZDBsXlPCDqdhQuJkuw4NOtaxYe3xii4=\ngithub.com/shurcooL/webdavfs v0.0.0-20170829043945-18c3829fa133/go.mod h1:hKmq5kWdCj2z2KEozexVbfEZIWiTjhE0+UjmZgPqehw=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/assertions v0.0.0-20190215210624-980c5ac6f3ac/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v0.0.0-20181108003508-044398e4856c/go.mod h1:XDJAKZRPZ1CvBcN2aX5YOUTYGHki24fSF0Iv48Ibg0s=\ngithub.com/smartystreets/goconvey v0.0.0-20190306220146-200a235640ff/go.mod h1:KSQcGKpxUMHk3nbYzs/tIBAM2iDooCn0BmttHOJEbLs=\ngithub.com/sosodev/duration v1.3.1 h1:qtHBDMQ6lvMQsL15g4aopM4HEfOaYuhWBw3NPTtlqq4=\ngithub.com/sosodev/duration v1.3.1/go.mod h1:RQIBBX0+fMLc/D9+Jb/fwvVmo0eZvDDEERAikUR6SDg=\ngithub.com/sourcegraph/annotate v0.0.0-20160123013949-f4cad6c6324d/go.mod h1:UdhH50NIW0fCiwBSr0co2m7BnFLdv4fQTgdqdJTHFeE=\ngithub.com/sourcegraph/syntaxhighlight v0.0.0-20170531221838-bd320f5d308e/go.mod h1:HuIsMU8RRBOtsCgI77wP899iHVBQpCmg4ErYMZB+2IA=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spaolacci/murmur3 v1.1.0 h1:7c1g84S4BPRrfL5Xrdp6fOJ206sU9y293DDHaoy0bLI=\ngithub.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.9.5 h1:stMpOSZFs//0Lv29HduCmli3GUfpFoF3Y1Q/aXj/wVM=\ngithub.com/spf13/afero v1.9.5/go.mod h1:UBogFpq8E9Hx+xc5CNTTEpTnuHVmXDwZcZcE1eb/UhQ=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stoewer/go-strcase v1.2.0 h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\ngithub.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.1/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/supranational/blst v0.3.13 h1:AYeSxdOMacwu7FBmpfloBz5pbFXDmJL33RuwnKtmTjk=\ngithub.com/supranational/blst v0.3.13/go.mod h1:jZJtfjgudtNl4en1tzwPIV3KjUnQUvG3/j+w+fVonLw=\ngithub.com/tarm/serial v0.0.0-20180830185346-98f6abe2eb07/go.mod h1:kDXzergiv9cbyO7IOYJZWg1U88JhDg3PB6klq9Hg2pA=\ngithub.com/thomaso-mirodin/intmath v0.0.0-20160323211736-5dc6d854e46e h1:cR8/SYRgyQCt5cNCMniB/ZScMkhI9nk8U5C7SbISXjo=\ngithub.com/thomaso-mirodin/intmath v0.0.0-20160323211736-5dc6d854e46e/go.mod h1:Tu4lItkATkonrYuvtVjG0/rhy15qrNGNTjPdaphtZ/8=\ngithub.com/tidwall/btree v1.6.0 h1:LDZfKfQIBHGHWSwckhXI0RPSXzlo+KYdjK7FWSqOzzg=\ngithub.com/tidwall/btree v1.6.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=\ngithub.com/tinylib/msgp v1.0.2/go.mod h1:+d+yLhGm8mzTaHzB+wgMYrodPfmZrzkirds8fDWklFE=\ngithub.com/tinylib/msgp v1.1.0/go.mod h1:+d+yLhGm8mzTaHzB+wgMYrodPfmZrzkirds8fDWklFE=\ngithub.com/tinylib/msgp v1.1.2/go.mod h1:+d+yLhGm8mzTaHzB+wgMYrodPfmZrzkirds8fDWklFE=\ngithub.com/tklauser/go-sysconf v0.3.14 h1:g5vzr9iPFFz24v2KZXs/pvpvh8/V9Fw6vQK5ZZb78yU=\ngithub.com/tklauser/go-sysconf v0.3.14/go.mod h1:1ym4lWMLUOhuBOPGtRcJm7tEGX4SCYNEEEtghGG/8uY=\ngithub.com/tklauser/numcpus v0.8.0 h1:Mx4Wwe/FjZLeQsK/6kt2EOepwwSl7SmJrK5bV/dXYgY=\ngithub.com/tklauser/numcpus v0.8.0/go.mod h1:ZJZlAY+dmR4eut8epnzf0u/VwodKmryxR8txiloSqBE=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/urfave/cli v1.22.2/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/urfave/cli/v2 v2.27.5 h1:WoHEJLdsXr6dDWoJgMq/CboDmyY/8HMMH1fTECbih+w=\ngithub.com/urfave/cli/v2 v2.27.5/go.mod h1:3Sevf16NykTbInEnD0yKkjDAeZDS0A6bzhBH5hrMvTQ=\ngithub.com/valyala/fastjson v1.6.4 h1:uAUNq9Z6ymTgGhcm0UynUAB6tlbakBrz6CQFax3BXVQ=\ngithub.com/valyala/fastjson v1.6.4/go.mod h1:CLCAqky6SMuOcxStkYQvblddUtoRxhYMGLrsQns1aXY=\ngithub.com/vektah/gqlparser/v2 v2.5.19 h1:bhCPCX1D4WWzCDvkPl4+TP1N8/kLrWnp43egplt7iSg=\ngithub.com/vektah/gqlparser/v2 v2.5.19/go.mod h1:y7kvl5bBlDeuWIvLtA9849ncyvx6/lj06RsMrEjVy3U=\ngithub.com/viant/assertly v0.4.8/go.mod h1:aGifi++jvCrUaklKEKT0BU95igDNaqkvz+49uaYMPRU=\ngithub.com/viant/toolbox v0.24.0/go.mod h1:OxMCG57V0PXuIP2HNQrtJf2CjqdmbrOx5EkMILuUhzM=\ngithub.com/willf/bitset v1.1.9/go.mod h1:RjeCKbqT1RxIR/KWY6phxZiaY1IyutSBfGjNPySAYV4=\ngithub.com/willf/bitset v1.1.10/go.mod h1:RjeCKbqT1RxIR/KWY6phxZiaY1IyutSBfGjNPySAYV4=\ngithub.com/wlynxg/anet v0.0.3/go.mod h1:eay5PRQr7fIVAMbTbchTnO9gG65Hg/uYGdc7mguHxoA=\ngithub.com/wlynxg/anet v0.0.5 h1:J3VJGi1gvo0JwZ/P1/Yc/8p63SoW98B5dHkYDmpgvvU=\ngithub.com/wlynxg/anet v0.0.5/go.mod h1:eay5PRQr7fIVAMbTbchTnO9gG65Hg/uYGdc7mguHxoA=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 h1:gEOO8jv9F4OT7lGCjxCBTO/36wtF6j2nSip77qHd4x4=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1/go.mod h1:Ohn+xnUBiLI6FVj/9LpzZWtj1/D6lUovWYBkxHVV3aM=\ngithub.com/xsleonard/go-merkle v1.1.0 h1:fHe1fuhJjGH22ZzVTAH0jqHLhTGhOq3wQjJN+8P0jQg=\ngithub.com/xsleonard/go-merkle v1.1.0/go.mod h1:cW4z+UZ/4f2n9IJgIiyDCdYguchoDyDAPmpuOWGxdGg=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngo.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\ngo.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\ngo.opencensus.io v0.18.0/go.mod h1:vKdFvxhtzZ9onBp9VKHK8z/sRpBMnKAsufL7wlDrCOA=\ngo.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=\ngo.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opentelemetry.io/otel v1.8.0 h1:zcvBFizPbpa1q7FehvFiHbQwGzmPILebO0tyqIR5Djg=\ngo.opentelemetry.io/otel v1.8.0/go.mod h1:2pkj+iMj0o03Y+cW6/m8Y4WkRdYN3AvCXCnzRMp9yvM=\ngo.opentelemetry.io/otel/trace v1.8.0 h1:cSy0DF9eGI5WIfNwZ1q2iUyGj00tGzP24dE1lOlHrfY=\ngo.opentelemetry.io/otel/trace v1.8.0/go.mod h1:0Bt3PXY8w+3pheS3hQUt+wow8b1ojPaTBoTCh2zIFI4=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/dig v1.18.0 h1:imUL1UiY0Mg4bqbFfsRQO5G4CGRBec/ZujWTvSVp3pw=\ngo.uber.org/dig v1.18.0/go.mod h1:Us0rSJiThwCv2GteUN0Q7OKvU7n5J4dxZ9JKUXozFdE=\ngo.uber.org/fx v1.23.0 h1:lIr/gYWQGfTwGcSXWXu4vP5Ws6iqnNEIY+F/aFzCKTg=\ngo.uber.org/fx v1.23.0/go.mod h1:o/D9n+2mLP6v1EG+qsdT1O8wKopYAsqZasju97SDFCU=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.1.11-0.20210813005559-691160354723/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/mock v0.5.0 h1:KAMbZvZPyBPWgD14IrIQ38QCyjwpvVVV6K/bHl1IwQU=\ngo.uber.org/mock v0.5.0/go.mod h1:ge71pBPLYDk7QIi1LupWxdAykm7KIEFchiOqd6z7qMM=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngo.uber.org/zap v1.19.1/go.mod h1:j3DNczoxDZroyBnOT1L/Q79cfUMGZxlv/9dzN7SM1rI=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngo4.org v0.0.0-20180809161055-417644f6feb5/go.mod h1:MkTOUMDaeVYJUOUsaDXIhWPZYa1yOyC1qaOBpL57BhE=\ngolang.org/x/build v0.0.0-20190111050920-041ab4dc3f9d/go.mod h1:OWs+y06UdEOHN4y+MfF/py+xQ/tYqIWW03b70/CG9Rw=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181030102418-4d3f4d9ffa16/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190313024323-a1f597ede03a/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190611184440-5c40567a22f8/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200602180216-279210d13fed/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.3.0/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.8.0/go.mod h1:mRqEX+O9/h5TFCrQhkgjo2yKi0yYA+9ecGkdQoHrywE=\ngolang.org/x/crypto v0.12.0/go.mod h1:NF0Gs7EO5K4qLn+Ylc+fih8BSTeIjAP05siRnAh98yw=\ngolang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c h1:7dEasQXItcW1xKJ2+gg5VOiBnqWrJc+rq0DPKyvvdbY=\ngolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c/go.mod h1:NQtJDoLvd6faHhE7m4T/1IY708gDefGGjR/iUW8yQQ8=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20180702182130-06c8688daad7/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181029044818-c44066c5c816/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181106065722-10aee1819953/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190313220215-9f648a60d977/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.14.0/go.mod h1:PpSgVXXLK0OxS0F31C1/tv6XNguvCrnXIDrFMspZIUI=\ngolang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20181017192945-9dcd33a902f4/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20181203162652-d668ce993890/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/perf v0.0.0-20180704124530-6e6d33e29852/go.mod h1:JLpeXjPJfIyPr5TlbXLkXWLhP8nz10XfvxElABhCtcw=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180810173357-98c5dad5d1a0/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181029174526-d69651ed3497/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190316082340-a2f829d7f35f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200124204421-9fbb57f87de9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200602225109-6fdc65e7d980/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423185535-09eb48e85fd7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211020174200-9d6173849985/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.9.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.11.0/go.mod h1:zC9APTIj3jG3FdV/Ons+XE1riIZXG4aZ4GTHiPZJPIU=\ngolang.org/x/term v0.16.0/go.mod h1:yn7UURbUtPyrVJPGPq404EukNFxcm/foM+bV/bfcDsY=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.12.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.0.0-20180412165947-fbb02b2291d2/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030000716-a0a13e073c7b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.26.0 h1:v/60pFQmzmT9ExmjDv2gGIfi3OqfKoEP6I5+umXlbnQ=\ngolang.org/x/tools v0.26.0/go.mod h1:TPVVj70c7JJ3WCazhD8OdXcZg/og+b9+tH/KxylGwH0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.0.0-20180910000450-7ca32eb868bf/go.mod h1:4mhQ8q/RsB7i+udVvVy5NUi08OU8ZlA0gRVgrF7VFY0=\ngoogle.golang.org/api v0.0.0-20181030000543-1d582fd0359e/go.mod h1:4mhQ8q/RsB7i+udVvVy5NUi08OU8ZlA0gRVgrF7VFY0=\ngoogle.golang.org/api v0.1.0/go.mod h1:UGEZY7KEX120AnNLIHFMKIo4obdJhkp2tPbaPlQx13Y=\ngoogle.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.3.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20180831171423-11092d34479b/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20181029155118-b69ba1387ce2/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20181202183823-bd91e49a0898/go.mod h1:7Ep/1NZk928CDR8SjdVbjWNpdIf6nzjE3BTgJDr2Atg=\ngoogle.golang.org/genproto v0.0.0-20190306203927-b5d61aea6440/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240528184218-531527333157 h1:7whR9kGa5LUwFtpLm2ArCEejtnxlGeLbAyjFY8sGNFw=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240528184218-531527333157/go.mod h1:99sLkeliLXfdj2J75X3Ho+rrVCaJze0uwN7zDDkjPVU=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240604185151-ef581f913117 h1:1GBuWVLM/KMVUv1t1En5Gs+gFZCNd360GGb4sSxtrhU=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240604185151-ef581f913117/go.mod h1:EfXuqaE1J41VCDicxHzUDm+8rk+7ZdXzHV0IhO/I6s0=\ngoogle.golang.org/grpc v1.14.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=\ngoogle.golang.org/grpc v1.16.0/go.mod h1:0JHn/cJsOMiMfNA9+DeHDlAU7KAAB5GDlYFpa9MZMio=\ngoogle.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.65.0 h1:bs/cUb4lp1G5iImFFd3u5ixQzweKizoZJAwBNLR42lc=\ngoogle.golang.org/grpc v1.65.0/go.mod h1:WgYC2ypjlB0EiQi6wdKixMqukr6lBc0Vo+oOgjrM5ZQ=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.4.0 h1:9SxA29VM43MF5Z9dQu694wmY5t8E/Gxr7s+RSxiIDmc=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.4.0/go.mod h1:yZOK5zhQMiALmuweVdIVoQPa6eIJyXn2B9g5dJDhqX4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngrpc.go4.org v0.0.0-20170609214715-11d0a25b4919/go.mod h1:77eQGdRu53HpSqPFJFmuJdjuHRquDANNeA4x7B8WQ9o=\nhonnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nlukechampine.com/blake3 v1.3.0 h1:sJ3XhFINmHSrYCgl958hscfIa3bw8x4DqMP3u1YvoYE=\nlukechampine.com/blake3 v1.3.0/go.mod h1:0OFRp7fBtAylGVCO40o87sbupkyIGgbpv1+M1k1LM6k=\nmodernc.org/cc/v4 v4.21.4 h1:3Be/Rdo1fpr8GrQ7IVw9OHtplU4gWbb+wNgeoBMmGLQ=\nmodernc.org/cc/v4 v4.21.4/go.mod h1:HM7VJTZbUCR3rV8EYBi9wxnJ0ZBRiGE5OeGXNA0IsLQ=\nmodernc.org/ccgo/v4 v4.19.2 h1:lwQZgvboKD0jBwdaeVCTouxhxAyN6iawF3STraAal8Y=\nmodernc.org/ccgo/v4 v4.19.2/go.mod h1:ysS3mxiMV38XGRTTcgo0DQTeTmAO4oCmJl1nX9VFI3s=\nmodernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=\nmodernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=\nmodernc.org/gc/v2 v2.4.1 h1:9cNzOqPyMJBvrUipmynX0ZohMhcxPtMccYgGOJdOiBw=\nmodernc.org/gc/v2 v2.4.1/go.mod h1:wzN5dK1AzVGoH6XOzc3YZ+ey/jPgYHLuVckd62P0GYU=\nmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 h1:5D53IMaUuA5InSeMu9eJtlQXS2NxAhyWQvkKEgXZhHI=\nmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6/go.mod h1:Qz0X07sNOR1jWYCrJMEnbW/X55x206Q7Vt4mz6/wHp4=\nmodernc.org/libc v1.55.3 h1:AzcW1mhlPNrRtjS5sS+eW2ISCgSOLLNyFzRh/V3Qj/U=\nmodernc.org/libc v1.55.3/go.mod h1:qFXepLhz+JjFThQ4kzwzOjA/y/artDeg+pcYnY+Q83w=\nmodernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=\nmodernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=\nmodernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=\nmodernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=\nmodernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/sortutil v1.2.0 h1:jQiD3PfS2REGJNzNCMMaLSp/wdMNieTbKX920Cqdgqc=\nmodernc.org/sortutil v1.2.0/go.mod h1:TKU2s7kJMf1AE84OoiGppNHJwvB753OYfNl2WRb++Ss=\nmodernc.org/sqlite v1.33.1 h1:trb6Z3YYoeM9eDL1O8do81kP+0ejv+YzgyFo+Gwy0nM=\nmodernc.org/sqlite v1.33.1/go.mod h1:pXV2xHxhzXZsgT/RtTFAPY6JJDEvOTcTdwADQCCWD4k=\nmodernc.org/strutil v1.2.0 h1:agBi9dp1I+eOnxXeiZawM8F4LawKv4NzGWSaLfyeNZA=\nmodernc.org/strutil v1.2.0/go.mod h1:/mdcBmfOibveCTBxUl5B5l6W+TTH1FXPLHZE6bTosX0=\nmodernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=\nmodernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\npgregory.net/rapid v1.1.0 h1:CMa0sjHSru3puNx+J0MIAuiiEV4N0qj8/cMWGBBCsjw=\npgregory.net/rapid v1.1.0/go.mod h1:PY5XlDGj0+V1FCq0o192FdRhpKHGTRIWBgqjDBTrq04=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nrsc.io/tmplfunc v0.0.3 h1:53XFQh69AfOa8Tw0Jm7t+GV7KZhOi6jzsCzTtKbMvzU=\nrsc.io/tmplfunc v0.0.3/go.mod h1:AG3sTPzElb1Io3Yg4voV9AGZJuleGAwaVRxL9M49PhA=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\nsourcegraph.com/sourcegraph/go-diff v0.5.0/go.mod h1:kuch7UrkMzY0X+p9CRK03kfuPQ2zzQcaEFbx8wA8rck=\nsourcegraph.com/sqs/pbtypes v0.0.0-20180604144634-d3ebe8f20ae4/go.mod h1:ketZ/q3QxT9HOBeFhu6RdvsftgpsbFHBF5Cas6cDKZ0=\nzombiezen.com/go/sqlite v0.13.1 h1:qDzxyWWmMtSSEH5qxamqBFmqA2BLSSbtODi3ojaE02o=\nzombiezen.com/go/sqlite v0.13.1/go.mod h1:Ht/5Rg3Ae2hoyh1I7gbWtWAl89CNocfqeb/aAMTkJr4=\n"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "interfaces.go",
          "type": "blob",
          "size": 10.958984375,
          "content": "// Copyright 2016 The go-ethereum Authors\n// (original work)\n// Copyright 2024 The Erigon Authors\n// (modifications)\n// This file is part of Erigon.\n//\n// Erigon is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Erigon is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with Erigon. If not, see <http://www.gnu.org/licenses/>.\n\n// Package ethereum defines interfaces for interacting with Ethereum.\npackage ethereum\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"math/big\"\n\n\t\"github.com/holiman/uint256\"\n\n\tlibcommon \"github.com/erigontech/erigon-lib/common\"\n\t\"github.com/erigontech/erigon/core/types\"\n)\n\n// NotFound is returned by API methods if the requested item does not exist.\nvar NotFound = errors.New(\"not found\")\n\n// TODO: move subscription to package event\n\n// Subscription represents an event subscription where events are\n// delivered on a data channel.\ntype Subscription interface {\n\t// Unsubscribe cancels the sending of events to the data channel\n\t// and closes the error channel.\n\tUnsubscribe()\n\t// Err returns the subscription error channel. The error channel receives\n\t// a value if there is an issue with the subscription (e.g. the network connection\n\t// delivering the events has been closed). Only one value will ever be sent.\n\t// The error channel is closed by Unsubscribe.\n\tErr() <-chan error\n}\n\n// ChainReader provides access to the blockchain. The methods in this interface access raw\n// data from either the canonical chain (when requesting by block number) or any\n// blockchain fork that was previously downloaded and processed by the node. The block\n// number argument can be nil to select the latest canonical block. Reading block headers\n// should be preferred over full blocks whenever possible.\n//\n// The returned error is NotFound if the requested item does not exist.\ntype ChainReader interface {\n\tBlockByHash(ctx context.Context, hash libcommon.Hash) (*types.Block, error)\n\tBlockByNumber(ctx context.Context, number *big.Int) (*types.Block, error)\n\tHeaderByHash(ctx context.Context, hash libcommon.Hash) (*types.Header, error)\n\tHeaderByNumber(ctx context.Context, number *big.Int) (*types.Header, error)\n\tTransactionCount(ctx context.Context, blockHash libcommon.Hash) (uint, error)\n\tTransactionInBlock(ctx context.Context, blockHash libcommon.Hash, index uint) (*types.Transaction, error)\n\n\t// This method subscribes to notifications about changes of the head block of\n\t// the canonical chain.\n\tSubscribeNewHead(ctx context.Context, ch chan<- *types.Header) (Subscription, error)\n}\n\n// TransactionReader provides access to past transactions and their receipts.\n// Implementations may impose arbitrary restrictions on the transactions and receipts that\n// can be retrieved. Historic transactions may not be available.\n//\n// Avoid relying on this interface if possible. Contract logs (through the LogFilterer\n// interface) are more reliable and usually safer in the presence of chain\n// reorganisations.\n//\n// The returned error is NotFound if the requested item does not exist.\ntype TransactionReader interface {\n\t// TransactionByHash checks the pool of pending transactions in addition to the\n\t// blockchain. The isPending return value indicates whether the transaction has been\n\t// mined yet. Note that the transaction may not be part of the canonical chain even if\n\t// it's not pending.\n\tTransactionByHash(ctx context.Context, txHash libcommon.Hash) (tx *types.Transaction, isPending bool, err error)\n\t// TransactionReceipt returns the receipt of a mined transaction. Note that the\n\t// transaction may not be included in the current canonical chain even if a receipt\n\t// exists.\n\tTransactionReceipt(ctx context.Context, txHash libcommon.Hash) (*types.Receipt, error)\n}\n\n// ChainStateReader wraps access to the state trie of the canonical blockchain. Note that\n// implementations of the interface may be unable to return state values for old blocks.\n// In many cases, using CallContract can be preferable to reading raw contract storage.\ntype ChainStateReader interface {\n\tBalanceAt(ctx context.Context, account libcommon.Address, blockNumber *big.Int) (*big.Int, error)\n\tStorageAt(ctx context.Context, account libcommon.Address, key libcommon.Hash, blockNumber *big.Int) ([]byte, error)\n\tCodeAt(ctx context.Context, account libcommon.Address, blockNumber *big.Int) ([]byte, error)\n\tNonceAt(ctx context.Context, account libcommon.Address, blockNumber *big.Int) (uint64, error)\n}\n\n// SyncProgress gives progress indications when the node is synchronising with\n// the Ethereum network.\ntype SyncProgress struct {\n\tStartingBlock uint64 // Block number where sync began\n\tCurrentBlock  uint64 // Current block number where sync is at\n\tHighestBlock  uint64 // Highest alleged block number in the chain\n\tPulledStates  uint64 // Number of state trie entries already downloaded\n\tKnownStates   uint64 // Total number of state trie entries known about\n}\n\n// ChainSyncReader wraps access to the node's current sync status. If there's no\n// sync currently running, it returns nil.\ntype ChainSyncReader interface {\n\tSyncProgress(ctx context.Context) (*SyncProgress, error)\n}\n\n// CallMsg contains parameters for contract calls.\ntype CallMsg struct {\n\tFrom             libcommon.Address  // the sender of the 'transaction'\n\tTo               *libcommon.Address // the destination contract (nil for contract creation)\n\tGas              uint64             // if 0, the call executes with near-infinite gas\n\tMaxFeePerBlobGas *uint256.Int       // EIP-4844 max_fee_per_blob_gas\n\tGasPrice         *uint256.Int       // wei <-> gas exchange ratio\n\tValue            *uint256.Int       // amount of wei sent along with the call\n\tData             []byte             // input data, usually an ABI-encoded contract method invocation\n\n\tFeeCap         *uint256.Int          // EIP-1559 fee cap per gas.\n\tTip            *uint256.Int          // EIP-1559 tip per gas.\n\tAccessList     types.AccessList      // EIP-2930 access list.\n\tBlobHashes     []libcommon.Hash      // EIP-4844 versioned blob hashes.\n\tAuthorizations []types.Authorization // EIP-3074 authorizations.\n}\n\n// A ContractCaller provides contract calls, essentially transactions that are executed by\n// the EVM but not mined into the blockchain. ContractCall is a low-level method to\n// execute such calls. For applications which are structured around specific contracts,\n// the abigen tool provides a nicer, properly typed way to perform calls.\ntype ContractCaller interface {\n\tCallContract(ctx context.Context, call CallMsg, blockNumber *big.Int) ([]byte, error)\n}\n\n// FilterQuery contains options for contract log filtering.\ntype FilterQuery struct {\n\tBlockHash *libcommon.Hash     // used by eth_getLogs, return logs only from block with this hash\n\tFromBlock *big.Int            // beginning of the queried range, nil means genesis block\n\tToBlock   *big.Int            // end of the range, nil means latest block\n\tAddresses []libcommon.Address // restricts matches to events created by specific contracts\n\n\t// The Topic list restricts matches to particular event topics. Each event has a list\n\t// of topics. Topics matches a prefix of that list. An empty element slice matches any\n\t// topic. Non-empty elements represent an alternative that matches any of the\n\t// contained topics.\n\t//\n\t// Examples:\n\t// {} or nil          matches any topic list\n\t// {{A}}              matches topic A in first position\n\t// {{}, {B}}          matches any topic in first position AND B in second position\n\t// {{A}, {B}}         matches topic A in first position AND B in second position\n\t// {{A, B}, {C, D}}   matches topic (A OR B) in first position AND (C OR D) in second position\n\tTopics [][]libcommon.Hash\n}\n\n// LogFilterer provides access to contract log events using a one-off query or continuous\n// event subscription.\n//\n// Logs received through a streaming query subscription may have Removed set to true,\n// indicating that the log was reverted due to a chain reorganisation.\ntype LogFilterer interface {\n\tFilterLogs(ctx context.Context, q FilterQuery) ([]types.Log, error)\n\tSubscribeFilterLogs(ctx context.Context, q FilterQuery, ch chan<- types.Log) (Subscription, error)\n}\n\n// TransactionSender wraps transaction sending. The SendTransaction method injects a\n// signed transaction into the pending transaction pool for execution. If the transaction\n// was a contract creation, the TransactionReceipt method can be used to retrieve the\n// contract address after the transaction has been mined.\n//\n// The transaction must be signed and have a valid nonce to be included. Consumers of the\n// API can use package accounts to maintain local private keys and need can retrieve the\n// next available nonce using PendingNonceAt.\ntype TransactionSender interface {\n\tSendTransaction(ctx context.Context, txn *types.Transaction) error\n}\n\n// GasPricer wraps the gas price oracle, which monitors the blockchain to determine the\n// optimal gas price given current fee market conditions.\ntype GasPricer interface {\n\tSuggestGasPrice(ctx context.Context) (*big.Int, error)\n}\n\n// A PendingStateReader provides access to the pending state, which is the result of all\n// known executable transactions which have not yet been included in the blockchain. It is\n// commonly used to display the result of ’unconfirmed’ actions (e.g. wallet value\n// transfers) initiated by the user. The PendingNonceAt operation is a good way to\n// retrieve the next available transaction nonce for a specific account.\ntype PendingStateReader interface {\n\tPendingBalanceAt(ctx context.Context, account libcommon.Address) (*big.Int, error)\n\tPendingStorageAt(ctx context.Context, account libcommon.Address, key libcommon.Hash) ([]byte, error)\n\tPendingCodeAt(ctx context.Context, account libcommon.Address) ([]byte, error)\n\tPendingNonceAt(ctx context.Context, account libcommon.Address) (uint64, error)\n\tPendingTransactionCount(ctx context.Context) (uint, error)\n}\n\n// PendingContractCaller can be used to perform calls against the pending state.\ntype PendingContractCaller interface {\n\tPendingCallContract(ctx context.Context, call CallMsg) ([]byte, error)\n}\n\n// GasEstimator wraps EstimateGas, which tries to estimate the gas needed to execute a\n// specific transaction based on the pending state. There is no guarantee that this is the\n// true gas limit requirement as other transactions may be added or removed by miners, but\n// it should provide a basis for setting a reasonable default.\ntype GasEstimator interface {\n\tEstimateGas(ctx context.Context, call CallMsg) (uint64, error)\n}\n\n// A PendingStateEventer provides access to real time notifications about changes to the\n// pending state.\ntype PendingStateEventer interface {\n\tSubscribePendingTransactions(ctx context.Context, ch chan<- *types.Transaction) (Subscription, error)\n}\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "nightly.sh",
          "type": "blob",
          "size": 0.4814453125,
          "content": "#!/usr/bin/env bash\n\n# running the job for 5 hours\nlet SLEEP_TIME=5*60*60\n\n# GOFLAGS=-modcacherw is required for our CI\n# to be able to remove go modules cache\nGOFLAGS=-modcacherw make geth\n\necho \"running geth...\"\n./build/bin/geth > tgeth.log 2>&1 &\n\nGETH_PID=$!\n\necho \"sleeping for $SLEEP_TIME seconds\"\n\nsleep $SLEEP_TIME\n\necho \"killing GETH (pid=$GETH_PID)\"\nkill $GETH_PID\necho \"boom\"\n\nwait $GETH_PID\n\nGETH_STATUS=$?\necho \"The exit status of the process was $GETH_STATUS\"\n\nexit $GETH_STATUS\n"
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "oss-fuzz.sh",
          "type": "blob",
          "size": 4.2548828125,
          "content": "#/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This file is for integration with Google OSS-Fuzz.\n# The following ENV variables are available when executing on OSS-fuzz:\n#\n# /out/         $OUT    Directory to store build artifacts (fuzz targets, dictionaries, options files, seed corpus archives).\n# /src/         $SRC    Directory to checkout source files.\n# /work/        $WORK   Directory to store intermediate files.\n#\n# $CC, $CXX, $CCC       The C and C++ compiler binaries.\n# $CFLAGS, $CXXFLAGS    C and C++ compiler flags.\n# $LIB_FUZZING_ENGINE   C++ compiler argument to link fuzz target against the prebuilt engine library (e.g. libFuzzer).\n\n# This sets the -coverpgk for the coverage report when the corpus is executed through go test\ncoverpkg=\"github.com/erigontech/erigon/...\"\n\nfunction coverbuild {\n  path=$1\n  function=$2\n  fuzzer=$3\n  tags=\"\"\n\n  if [[ $#  -eq 4 ]]; then\n    tags=\"-tags $4\"\n  fi\n  cd $path\n  fuzzed_package=`pwd | rev | cut -d'/' -f 1 | rev`\n  cp $GOPATH/ossfuzz_coverage_runner.go ./\"${function,,}\"_test.go\n  sed -i -e 's/FuzzFunction/'$function'/' ./\"${function,,}\"_test.go\n  sed -i -e 's/mypackagebeingfuzzed/'$fuzzed_package'/' ./\"${function,,}\"_test.go\n  sed -i -e 's/TestFuzzCorpus/Test'$function'Corpus/' ./\"${function,,}\"_test.go\n\ncat << DOG > $OUT/$fuzzer\n#/bin/sh\n\n  cd $OUT/$path\n  go test -run Test${function}Corpus -v $tags -coverprofile \\$1 -coverpkg $coverpkg\n\nDOG\n\n  chmod +x $OUT/$fuzzer\n  #echo \"Built script $OUT/$fuzzer\"\n  #cat $OUT/$fuzzer\n  cd -\n}\n\nfunction compile_fuzzer {\n  # Inputs:\n  # $1: The package to fuzz, within go-ethereum\n  # $2: The name of the fuzzing function\n  # $3: The name to give to the final fuzzing-binary\n\n  path=$GOPATH/src/github.com/ethereum/go-ethereum/$1\n  func=$2\n  fuzzer=$3\n\n  echo \"Building $fuzzer\"\n\n  # Do a coverage-build or a regular build\n  if [[ $SANITIZER = *coverage* ]]; then\n    coverbuild $path $func $fuzzer $coverpkg\n  else\n    (cd $path && \\\n        go-fuzz -func $func -o $WORK/$fuzzer.a . && \\\n        $CXX $CXXFLAGS $LIB_FUZZING_ENGINE $WORK/$fuzzer.a -o $OUT/$fuzzer)\n  fi\n\n  ## Check if there exists a seed corpus file\n  corpusfile=\"${path}/testdata/${fuzzer}_seed_corpus.zip\"\n  if [ -f $corpusfile ]\n  then\n    cp $corpusfile $OUT/\n    echo \"Found seed corpus: $corpusfile\"\n  fi\n}\n\ncompile_fuzzer tests/fuzzers/bitutil  Fuzz      fuzzBitutilCompress\ncompile_fuzzer tests/fuzzers/bn256    FuzzAdd   fuzzBn256Add\ncompile_fuzzer tests/fuzzers/bn256    FuzzMul   fuzzBn256Mul\ncompile_fuzzer tests/fuzzers/bn256    FuzzPair  fuzzBn256Pair\ncompile_fuzzer tests/fuzzers/runtime  Fuzz      fuzzVmRuntime\ncompile_fuzzer tests/fuzzers/txfetcher  Fuzz fuzzTxfetcher\ncompile_fuzzer tests/fuzzers/rlp        Fuzz fuzzRlp\ncompile_fuzzer tests/fuzzers/trie       Fuzz fuzzTrie\ncompile_fuzzer tests/fuzzers/stacktrie  Fuzz fuzzStackTrie\ncompile_fuzzer tests/fuzzers/difficulty Fuzz fuzzDifficulty\ncompile_fuzzer tests/fuzzers/abi        Fuzz fuzzAbi\ncompile_fuzzer tests/fuzzers/les        Fuzz fuzzLes\ncompile_fuzzer tests/fuzzers/secp256k1  Fuzz fuzzSecp256k1\n\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG1Add fuzz_g1_add\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG1Mul fuzz_g1_mul\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG1MultiExp fuzz_g1_multiexp\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG2Add fuzz_g2_add\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG2Mul fuzz_g2_mul\ncompile_fuzzer tests/fuzzers/bls12381  FuzzG2MultiExp fuzz_g2_multiexp\ncompile_fuzzer tests/fuzzers/bls12381  FuzzPairing fuzz_pairing\ncompile_fuzzer tests/fuzzers/bls12381  FuzzMapG1 fuzz_map_g1\ncompile_fuzzer tests/fuzzers/bls12381  FuzzMapG2 fuzz_map_g2\n\n#TODO: move this to tests/fuzzers, if possible\ncompile_fuzzer crypto/blake2b  Fuzz      fuzzBlake2b\n"
        },
        {
          "name": "p2p",
          "type": "tree",
          "content": null
        },
        {
          "name": "params",
          "type": "tree",
          "content": null
        },
        {
          "name": "polygon",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "rules.go",
          "type": "blob",
          "size": 4.736328125,
          "content": "// Copyright 2024 The Erigon Authors\n// This file is part of Erigon.\n//\n// Erigon is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Erigon is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with Erigon. If not, see <http://www.gnu.org/licenses/>.\n\n//go:build gorules\n\npackage gorules\n\n// to apply changes in this file, please do: ./build/bin/golangci-lint cache clean\nimport (\n\t\"github.com/quasilyte/go-ruleguard/dsl\"\n\t//quasilyterules \"github.com/quasilyte/ruleguard-rules-test\"\n)\n\nfunc init() {\n\t//dsl.ImportRules(\"qrules\", quasilyterules.Bundle)\n}\n\nfunc txDeferRollback(m dsl.Matcher) {\n\t// Common pattern for long-living transactions:\n\t//\ttx, err := db.Begin()\n\t//\tif err != nil {\n\t//\t\treturn err\n\t//\t}\n\t//\tdefer tx.Rollback()\n\t//\n\t//\t... code which uses database in transaction\n\t//\n\t//\terr := tx.Commit()\n\t//\tif err != nil {\n\t//\t\treturn err\n\t//\t}\n\n\tm.Match(\n\t\t`$tx, $err := $db.BeginRw($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.BeginRw($ctx); $chk; $rollback`,\n\t\t`$tx, $err := $db.Begin($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.Begin($ctx); $chk; $rollback`,\n\t\t`$tx, $err := $db.BeginRo($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.BeginRo($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.BeginTemporalRw($ctx); $chk; $rollback`,\n\t\t`$tx, $err := $db.BeginTemporalRw($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.BeginTemporalRo($ctx); $chk; $rollback`,\n\t\t`$tx, $err := $db.BeginTemporalRo($ctx); $chk; $rollback`,\n\t\t`$tx, $err := $db.BeginRwNosync($ctx); $chk; $rollback`,\n\t\t`$tx, $err = $db.BeginRwNosync($ctx); $chk; $rollback`,\n\t).\n\t\tWhere(!m[\"rollback\"].Text.Matches(`defer .*\\.Rollback()`)).\n\t\t//At(m[\"rollback\"]).\n\t\tReport(`Add \"defer $tx.Rollback()\" right after transaction creation error check. \n\t\t\tIf you are in the loop - consider use \"$db.View\" or \"$db.Update\" or extract whole transaction to function.\n\t\t\tWithout rollback in defer - app can deadlock on error or panic.\n\t\t\tRules are in ./rules.go file.\n\t\t\t`)\n}\n\nfunc cursorDeferClose(m dsl.Matcher) {\n\tm.Match(\n\t\t`$c, $err = $db.Cursor($table); $chk; $close`,\n\t\t`$c, $err := $db.Cursor($table); $chk; $close`,\n\t\t`$c, $err = $db.RwCursor($table); $chk; $close`,\n\t\t`$c, $err := $db.RwCursor($table); $chk; $close`,\n\t\t`$c, $err = $db.CursorDupSort($table); $chk; $close`,\n\t\t`$c, $err := $db.CursorDupSort($table); $chk; $close`,\n\t\t`$c, $err = $db.RwCursorDupSort($table); $chk; $close`,\n\t\t`$c, $err := $db.RwCursorDupSort($table); $chk; $close`,\n\t).\n\t\tWhere(!m[\"close\"].Text.Matches(`defer .*\\.Close()`)).\n\t\t//At(m[\"rollback\"]).\n\t\tReport(`Add \"defer $c.Close()\" right after cursor creation error check`)\n}\n\nfunc streamDeferClose(m dsl.Matcher) {\n\tm.Match(\n\t\t`$c, $err = $db.Range($params); $chk; $close`,\n\t\t`$c, $err := $db.Range($params); $chk; $close`,\n\t\t`$c, $err = $db.RangeDupSort($params); $chk; $close`,\n\t\t`$c, $err := $db.RangeDupSort($params); $chk; $close`,\n\t\t`$c, $err = $db.Prefix($params); $chk; $close`,\n\t\t`$c, $err := $db.Prefix($params); $chk; $close`,\n\t).\n\t\tWhere(!m[\"close\"].Text.Matches(`defer .*\\.Close()`)).\n\t\t//At(m[\"rollback\"]).\n\t\tReport(`Add \"defer $c.Close()\" right after cursor creation error check`)\n}\n\nfunc closeCollector(m dsl.Matcher) {\n\tm.Match(`$c := etl.NewCollector($*_); $close`).\n\t\tWhere(!m[\"close\"].Text.Matches(`defer .*\\.Close()`)).\n\t\tReport(`Add \"defer $c.Close()\" right after collector creation`)\n}\n\nfunc closeLockedDir(m dsl.Matcher) {\n\tm.Match(`$c := dir.OpenRw($*_); $close`).\n\t\tWhere(!m[\"close\"].Text.Matches(`defer .*\\.Close()`)).\n\t\tReport(`Add \"defer $c.Close()\" after locked.OpenDir`)\n}\n\nfunc passValuesByContext(m dsl.Matcher) {\n\tm.Match(`ctx.WithValue($*_)`).Report(`Don't pass app-level parameters by context, pass them as-is or as typed objects`)\n}\n\nfunc mismatchingUnlock(m dsl.Matcher) {\n\t// By default, an entire match position is used as a location.\n\t// This can be changed by the At() method that binds the location\n\t// to the provided named submatch.\n\t//\n\t// In the rules below text editor would get mismatching method\n\t// name locations:\n\t//\n\t//   defer mu.RUnlock()\n\t//            ^^^^^^^\n\n\tm.Match(`$mu.Lock(); defer $mu.$unlock()`).\n\t\tWhere(m[\"unlock\"].Text == \"RUnlock\").\n\t\tAt(m[\"unlock\"]).\n\t\tReport(`maybe $mu.Unlock() was intended?\n\t\t\tRules are in ./rules.go file.`)\n\n\tm.Match(`$mu.RLock(); defer $mu.$unlock()`).\n\t\tWhere(m[\"unlock\"].Text == \"Unlock\").\n\t\tAt(m[\"unlock\"]).\n\t\tReport(`maybe $mu.RUnlock() was intended?\n\t\t\tRules are in ./rules.go file.`)\n}\n"
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 1.04296875,
          "content": "sonar.projectKey=erigontech_erigon\nsonar.organization=erigontech\nsonar.projectName=erigon\n\nsonar.sources=.\nsonar.exclusions=\\\n  **/*.pb.go,\\\n  **/gen_*.go,\\\n  **/*_gen.go,\\\n  **/*_mock.go,\\\n  **/mock_*.go,\\\n  **/graphql/graph/generated.go,\\\n  **/*.sol,\\\n  common/compiler/*.v.py,\\\n  rpc/testdata/**.js,\\\n  eth/tracers/js/internal/tracers/**.js\n\nsonar.tests=.\nsonar.test.inclusions=**/*_test.go,tests/**\n\nsonar.go.coverage.reportPaths=coverage.out,erigon-lib/coverage.out\n\n# The only way to get an accurate analysis of C/C++/Objective-C files is\n# by using the SonarSource build-wrapper and setting the property \"sonar.cfamily.build-wrapper-output\"\n# or by using Clang Compilation Database and setting the property \"sonar.cfamily.compile-commands\".\n#\n# If you don't want to analyze C/C++/Objective-C files, then prevent them from being analyzed\n# by setting the following properties:\nsonar.c.file.suffixes=-\nsonar.cpp.file.suffixes=-\nsonar.objc.file.suffixes=-\n\n# Specify whether to scan python files in the repo following python 2 or 3 rules\nsonar.python.version=3.12\n"
        },
        {
          "name": "spectest",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools.go",
          "type": "blob",
          "size": 1.6640625,
          "content": "// Copyright 2024 The Erigon Authors\n// This file is part of Erigon.\n//\n// Erigon is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Erigon is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with Erigon. If not, see <http://www.gnu.org/licenses/>.\n\n//go:build tools\n\npackage tools\n\n// https://github.com/golang/go/wiki/Modules#how-can-i-track-tool-dependencies-for-a-module\n//\n// This module is just a hack for 'go mod tidy' command\n//\n// Problem is - 'go mod tidy' removes from go.mod file lines if you don't use them in source code\n//\n// But code generators we use as binaries - not by including them into source code\n// To provide reproducible builds - go.mod file must be source of truth about code generators version\n// 'go mod tidy' will not remove binary deps from go.mod file if you add them here\n//\n// use `make devtools` - does install all binary deps of right version\n\n// build tag 'trick_go_mod_tidy' - is used to hide warnings of IDEA (because we can't import `main` packages in go)\n\nimport (\n\t_ \"github.com/erigontech/mdbx-go\"\n\t_ \"github.com/erigontech/mdbx-go/mdbxdist\"\n\t_ \"github.com/fjl/gencodec\"\n\t_ \"go.uber.org/mock/mockgen\"\n\t_ \"go.uber.org/mock/mockgen/model\"\n\t_ \"google.golang.org/grpc/cmd/protoc-gen-go-grpc\"\n)\n"
        },
        {
          "name": "turbo",
          "type": "tree",
          "content": null
        },
        {
          "name": "txnprovider",
          "type": "tree",
          "content": null
        },
        {
          "name": "wmake.ps1",
          "type": "blob",
          "size": 17.8837890625,
          "content": "﻿<#\n   Copyright 2021 The Erigon Authors\n   This file is part of Erigon.\n\n   Erigon is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   Erigon is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with Erigon. If not, see <http://www.gnu.org/licenses/>.\n#>\n\nParam(\n    [Parameter(Position=0, \n    HelpMessage=\"Enter the build target\")]\n    [Alias(\"target\")]\n    [ValidateSet(\n        \"clean\",\n        \"db-tools\",\n        \"devnet\",\n        \"downloader\",\n        \"erigon\",\n        \"evm\",\n        \"hack\",\n        \"integration\",\n        \"observer\",\n        \"pics\",\n        \"rpcdaemon\",\n        \"rpctest\",\n        \"sentry\",\n        \"state\",\n        \"test\",\n        \"test-integration\",\n        \"txpool\",\n        \"all\"\n    )]\n    [string[]]$BuildTargets=@(\"erigon\", \"rpcdaemon\", \"sentry\", \"downloader\", \"integration\"),\n    [switch]$WnoSubmoduleUpdate\n)\n\n# Sanity checks on $BuildTargets\nif ($BuildTargets.Count -gt 1) {\n    \n    # \"all\" target must be alone\n    if ($BuildTargets.Contains(\"all\")) {\n        Write-Host @\"\n\n  Error ! Target \"all\" must be set alone.\n\n\"@\n        exit 1\n    }\n\n    # \"clean\" target must be alone\n    if ($BuildTargets.Contains(\"clean\")) {\n        Write-Host @\"\n\n  Error ! Target \"clean\" must be set alone.\n\n\"@\n        exit 1\n    }\n\n}\n\nif ($BuildTargets[0] -eq \"all\") {\n    $BuildTargets = @(\n        \"devnet\",\n        \"downloader\",\n        \"erigon\",\n        \"evm\",\n        \"hack\",\n        \"integration\",\n        \"observer\",\n        \"pics\",\n        \"rpcdaemon\",\n        \"rpctest\",\n        \"sentry\",\n        \"state\",\n        \"txpool\"\n    )\n}\n\n# ====================================================================\n# Messages texts\n# ====================================================================\n\n$headerText = @\"\n\n ------------------------------------------------------------------------------\n  Erigon's wmake.ps1 : Selected target(s) $($BuildTargets -join \" \")\n ------------------------------------------------------------------------------\n \n\"@\n\n$chocolateyErrorText = @\"\n\n Requirement Error.\n For this script to run properly you need to install\n chocolatey [https://chocolatey.org/] with the following\n mandatory components: \n\n - cmake\n - make\n - mingw\n\n\"@\n\n$chocolateyPathErrorText = @\"\n\n Environment PATH Error.\n Chocolatey install has been detected but the environment\n variable PATH does not include a full path to its binaries\n Please amend your setup and ensure the following\n chocolatey directory is properly inserted into your PATH\n environment variable.\n\n\"@\n\n$privilegeErrorText = @\"\n\n Privileges Error !\n You must run this script with Administrator privileges\n\n\"@\n\n# ====================================================================\n# Functions\n# ====================================================================\n\n# -----------------------------------------------------------------------------\n# Function \t\t: Get-Env\n# -----------------------------------------------------------------------------\n# Description\t: Retrieves a value from a provided named environment var\n# Returns       : $null / var value (if exists)\n# -----------------------------------------------------------------------------\nfunction Get-Env {\n    param ([string]$varName = $(throw \"A variable name must be provided\"))\n    $result = Get-ChildItem env: | Where-Object {$_.Name -ieq $varName}\n    if (-not $result) {\n        Write-Output $null\n    } else {\n        Write-Output $result.Value\n    }\n}\n\n# -----------------------------------------------------------------------------\n# Function \t\t: Get-Uninstall-Item\n# -----------------------------------------------------------------------------\n# Description\t: Try get uninstall key for given item pattern\n# Returns       : object\n# -----------------------------------------------------------------------------\nfunction Get-Uninstall-Item {\n    param ([string]$pattern = $(throw \"A search pattern must be provided\"))    \n    \n    # Trying to get the enumerable of all installed programs using Get-ItemProperty may cause \n    # exceptions due to possible garbage values inserted into the registry by installers.\n    # Specifically an invalid cast exception throws when registry keys contain invalid DWORD data. \n    # See https://github.com/PowerShell/PowerShell/issues/9552\n    # Due to this all items must be parsed one by one\n\n    $Private:regUninstallPath = \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\"\n    $Private:result = $null\n    Get-ChildItem -Path $regUninstallPath | ForEach-Object {\n        if(-not $result) {\n            $item = Get-ItemProperty -Path $_.pspath\n            if ($item.DisplayName -imatch $pattern) {\n                $result = $item\n                # DO NOT use break\n            }\n        }\n    }\n    Write-Output $result\n}\n\n# -----------------------------------------------------------------------------\n# Function \t\t: Test-GO-Installed\n# -----------------------------------------------------------------------------\n# Description\t: Checks whether or not GO language is installed\n# Returns       : $true / $false\n# -----------------------------------------------------------------------------\nfunction Test-GO-Installed {\n    param ([string]$MinVersion = \"\" )\n\n    $Private:GOcmd = (Get-Command -CommandType Application -ErrorAction SilentlyContinue \"go.exe\")\n    if ($Private:GOcmd -eq $null) {\n        Write-Host @\"\n\n  Error !\n  Could not locate GO language binary executable go.exe\n  Either you don't have GO installed or GO binary directory (usually C:\\Program Files\\Go\\bin\\) is not\n  properly listed in your PATH environment variable.\n  If the first please visit https://golang.org/dl/ and download the appropriate installer.\n  If the latter please edit your PATH environment variable ad add the Go binary directory.\n       \n\"@\n        return $false\n\n    } \n    \n    # Go version is not detected by Get-Command hence we need to query for it\n    $Private:tmpstr = [string]@(go.exe version)\n    if ($Private:tmpstr -match '\\d{1,}\\.\\d{1,}(.\\d{1,})?') {\n        $Private:GOversion = [Version]::Parse($matches[0])\n        Write-Host \" Found GO version $Private:GOversion\"\n        if ($MinVersion -ne \"\") {\n            \n            $Private:GOMinversion = [Version]::Parse($MinVersion)\n            if ($Private:GOversion -lt $Private:GOMinversion) {\n                Write-Host @\"\n\n  Error !\n  Minimum GO version required is $Private:GOMinversion\n\n\"@\n                return $false\n            }\n        }\n        return $true\n    }\n\n    Write-Host @\"\n\n    Error !\n    Could not detect GO version installed\n  \n\"@\n    return $false\n\n}\n\n# -----------------------------------------------------------------------------\n# Function \t\t: Test-Git-Installed\n# -----------------------------------------------------------------------------\n# Description\t: Checks whether or not Git is installed\n# Returns       : $true / $false\n# -----------------------------------------------------------------------------\nfunction Test-Git-Installed {\n    param ([string]$MinVersion = \"\" )\n\n    $Private:GITcmd = (Get-Command -CommandType Application -ErrorAction SilentlyContinue \"git.exe\")\n    if ($Private:GITcmd -eq $null) {\n        Write-Host @\"\n\n  Error !\n  Could not locate git command utility git.exe\n  Either you don't have GIT installed or GIT binary directory (usually C:\\Program Files\\Git\\cmd\\) is not\n  properly listed in your PATH environment variable.\n  If the first please visit https://git-scm.com/downloads and download the appropriate installer.\n  If the latter please edit your PATH environment variable ad add the Git binary directory.\n       \n\"@\n        return $false\n\n    } \n    \n    # Go version is not detected by Get-Command hence we need to query for it\n    $Private:tmpstr = [string]@(git.exe --version)\n    if ($Private:tmpstr -match '\\d{1,}\\.\\d{1,}(.\\d{1,})?') {\n        $Private:GITversion = [Version]::Parse($matches[0])\n        Write-Host \" Found GIT version $Private:GITversion\"\n        if ($MinVersion -ne \"\") {\n            \n            $Private:GITMinversion = [Version]::Parse($MinVersion)\n            if ($Private:GITversion -lt $Private:GITMinversion) {\n                Write-Host @\"\n\n  Error !\n  Minimum GIT version required is $Private:GITMinversion\n\n\"@\n                return $false\n            }\n        }\n        return $true\n    }\n\n    Write-Host @\"\n\n    Error !\n    Could not detect GIT version installed\n  \n\"@\n    return $false\n\n    \n}\n\n# -----------------------------------------------------------------------------\n# Function \t\t: Test-Choco-Installed\n# -----------------------------------------------------------------------------\n# Description\t: Checks whether or not chocolatey is installed\n# Returns       : $true / $false\n# -----------------------------------------------------------------------------\nfunction Test-Choco-Installed {\n    ## Test Chocolatey Install\n    $script:chocolateyPath = Get-Env \"chocolateyInstall\"\n    if(-not $chocolateyPath) {\n        Write-Host $chocolateyErrorText\n        return $false\n    }\n    \n    # Test Chocolatey bin directory is actually in %PATH%\n    $script:chocolateyBinPath = (Join-Path $chocolateyPath \"bin\")\n    $script:chocolateyBinPathInPath = $false\n    $private:pathExpanded = $env:Path.Split(\";\")\n    for($i=0; $i -lt $pathExpanded.Count; $i++){\n        $pathItem = $pathExpanded[$i]\n        if($pathItem -ieq $chocolateyBinPath){\n            Write-Host \" Found $($chocolateyBinPath) in PATH\"\n            $chocolateyBinPathInPath = $true\n        }\n    }\n    if(!$chocolateyBinPathInPath) {\n        Write-Host $chocolateyPathErrorText\n        Write-Host $chocolateyBinPath\n        return $false\n    }\n    \n    ## Test Chocolatey Components\n    $chocolateyHasCmake = $false\n    $chocolateyHasMake = $false\n    $chocolateyHasMingw = $false\n    $chocolateyComponents = @(clist -l)\n\n    for($i=0; $i -lt $chocolateyComponents.Count; $i++){\n        $item = $chocolateyComponents[$i]\n        if($item -imatch \"^cmake\\ [0-9]\") {\n            $chocolateyHasCmake = $true\n            Write-Host \" Found Chocolatey component $($item)\"\n        }\n        if($item -imatch \"^make\\ [0-9]\") {\n            $chocolateyHasMake = $true\n            Write-Host \" Found Chocolatey component $($item)\"\n        }\n        if($item -imatch \"^mingw\\ [0-9]\") {\n            $chocolateyHasMingw = $true\n            Write-Host \" Found Chocolatey component $($item)\"\n        }\n    }\n\n    If(!$chocolateyHasCmake -or !$chocolateyHasMake -or !$chocolateyHasMingw) {\n        Write-Host $chocolateyErrorText\n        return $false\n    }\n\n    Get-Command cmake.exe | Out-Null\n    if (!($?)) {\n        Write-Host @\"\n    \n     Error !\n     Though chocolatey cmake installation is found I could not get\n     the cmake binary executable. Ensure cmake installation\n     directory is properly inserted into your PATH\n     environment variable.\n     (Usually $(Join-Path $env:ProgramFiles \"Cmake\\bin\"))\n    \n\"@\n        return $false\n    }\n    \n    return $true\n}\n\n# ====================================================================\n# Main\n# ====================================================================\n\n$Error.Clear()\n$ErrorActionPreference = \"SilentlyContinue\"\n\nWrite-Host $headerText\n\nSet-Variable -Name \"MyContext\" -Value ([hashtable]::Synchronized(@{})) -Scope Script\n$MyContext.Name       = $MyInvocation.MyCommand.Name\n$MyContext.Definition = $MyInvocation.MyCommand.Definition\n$MyContext.Directory  = (Split-Path (Resolve-Path $MyInvocation.MyCommand.Definition) -Parent)\n$MyContext.StartDir   = (Get-Location -PSProvider FileSystem).ProviderPath\n$MyContext.WinVer     = (Get-WmiObject Win32_OperatingSystem).Version.Split(\".\")\n$MyContext.PSVer      = [int]$PSVersionTable.PSVersion.Major\n\n# ====================================================================\n# ## Test requirements\n# ====================================================================\nSet-Location $MyContext.Directory\n\n## Test we're a git cloned repo\nif (!Test-Path -Path [string](Join-Path $MyContext.Directory \"\\.git\") -PathType Directory) {\n    Write-Host @\"\n\n  Error !\n  Directory $MyContext.Directory does not seem to be a properly cloned Erigon repository\n  Please clone it using \n  git clone --recurse-submodules -j8 https://github.com/erigontech/erigon.git\n\n\"@\n    exit 1\n}\n\n## Test Git is installed\nif(!(Test-Git-Installed)) { exit 1 }\n    \n## Test GO language is installed AND min version\nif(!(Test-GO-Installed \"1.21\")) { exit 1 }\n\n# Build erigon binaries\nSet-Variable -Name \"Erigon\" -Value ([hashtable]::Synchronized(@{})) -Scope Script\n$Erigon.Commit     = [string]@(git.exe rev-list -1 HEAD)\n$Erigon.Branch     = [string]@(git.exe rev-parse --abbrev-ref HEAD)\n$Erigon.Tag        = [string]@(git.exe describe --tags)\n\n$Erigon.BuildTags = \"nosqlite,noboltdb\"\n$Erigon.Package = \"github.com/erigontech/erigon\"\n\n$Erigon.BuildFlags = \"-trimpath -tags $($Erigon.BuildTags) -buildvcs=false -v\"\n$Erigon.BuildFlags += \" -ldflags \"\"-X $($Erigon.Package)/params.GitCommit=$($Erigon.Commit) -X $($Erigon.Package)/params.GitBranch=$($Erigon.Branch) -X $($Erigon.Package)/params.GitTag=$($Erigon.Tag)\"\"\"\n\n$Erigon.BinPath    = [string](Join-Path $MyContext.StartDir \"\\build\\bin\")\n$env:CGO_CFLAGS = \"-g -O2 -D__BLST_PORTABLE__\"\n$env:GOPRIVATE = \"github.com/erigontech/silkworm-go\"\n\nNew-Item -Path $Erigon.BinPath -ItemType Directory -Force | Out-Null\nif(!$?) {\n   Write-Host @\" \n\n  Error ! You don't have write access to current folder.\n  Check your permissions and retry.\n\n\"@\n    exit 1\n}\n\nWrite-Host @\"\n\n Erigon Branch : $($Erigon.Branch)\n Erigon Tag    : $($Erigon.Tag)\n Erigon Commit : $($Erigon.Commit)\n\n\"@\n\nif (!$WnoSubmoduleUpdate -and $BuildTargets[0] -ne \"clean\" -and ($BuildTargets.Contains(\"test\") -or $BuildTargets.Contains(\"db-tools\"))) {\n    Write-Host \" Updating git submodules ...\"\n    Invoke-Expression -Command \"git.exe submodule update --init --recursive --force --quiet\"\n    if (!($?)) {\n        Write-Host \" ERROR : Update submodules failed\"\n        exit 1\n    }\n}\n\nforeach($BuildTarget in $BuildTargets) {\n\n## Choco components for building db-tools\nif ($BuildTarget -eq \"db-tools\") {\n    if(!(Test-choco-Installed)) {\n        exit 1\n    }\n\n    $Erigon.MDBXSourcePath = [string](Join-Path $MyContext.StartDir \"\\libmdbx\")\n    if (!Test-Path -Path $Erigon.MDBXSourcePath -PathType Directory) {\n        Write-Host @\"\n\n        Error ! Can't locate \"\"libmdbx\"\" folder\n        Are you sure you have cloned the repository properly ?\n\"@\n        exit 1\n    }\n\n\n    # Create build directory for mdbx and enter it\n    $Erigon.MDBXBuildPath = [string](Join-Path $Erigon.BinPath \"\\mdbx\")\n    New-Item -Path $Erigon.MDBXBuildPath -ItemType Directory -Force | Out-Null\n    Set-Location $Erigon.MDBXBuildPath\n\n    Write-Host \" Building db-tools ...\"\n\n    cmake -G \"MinGW Makefiles\" \"$($Erigon.MDBXSourcePath)\" `\n    -D CMAKE_MAKE_PROGRAM:PATH=\"\"$(Join-Path $chocolateyBinPath \"make.exe\")\"\" `\n    -D CMAKE_C_COMPILER:PATH=\"\"$(Join-Path $chocolateyBinPath \"gcc.exe\")\"\" `\n    -D CMAKE_CXX_COMPILER:PATH=\"\"$(Join-Path $chocolateyBinPath \"g++.exe\")\"\" `\n    -D CMAKE_BUILD_TYPE:STRING=\"Release\" `\n    -D MDBX_BUILD_SHARED_LIBRARY:BOOL=OFF `\n    -D MDBX_WITHOUT_MSVC_CRT:BOOOL=OFF `\n    -D MDBX_BUILD_TIMESTAMP=unknown `\n    -D MDBX_FORCE_ASSERTIONS:INT=0\n    -D __BLST_PORTABLE__\n    if($LASTEXITCODE) {\n        Write-Host \"An error has occurred while configuring MDBX\"\n        exit $LASTEXITCODE\n    }    \n\n    cmake --build .\n    if($LASTEXITCODE -or !(Test-Path \"mdbx_stat.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_chk.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_copy.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_dump.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_load.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_drop.exe\" -PathType leaf) `\n                     -or !(Test-Path \"mdbx_test.exe\" -PathType leaf)) {\n        Write-Host \"An error has occurred while building MDBX tools\"\n        exit $LASTEXITCODE\n    }\n\n    Set-Location $MyContext.Directory\n    # Eventually move all mdbx_*.exe to ./build/bin directory\n    Move-Item -Path \"$($Erigon.MDBXBuildPath)/mdbx_*.exe\" -Destination $Erigon.BinPath -Force\n\n} elseif ($BuildTarget -eq \"clean\") {\n    Write-Host \" Cleaning ...\"\n\n    # Remove ./build/bin directory\n    Remove-Item -Path \"./build\" -Recurse -Force\n\n    # Clear go cache\n    go.exe clean -cache\n\n} elseif ($BuildTarget -eq \"test\") {\n    Write-Host \" Running tests ...\"\n    $env:GODEBUG = \"cgocheck=0\"\n    $TestCommand = \"go test $($Erigon.BuildFlags) -p 2 -tags=e4 ./...\"\n    Invoke-Expression -Command $TestCommand | Out-Host\n    if (!($?)) {\n        Write-Host \" ERROR : Tests failed\"\n        Remove-Item Env:\\GODEBUG\n        exit 1\n    } else {\n        Write-Host \"`n Tests completed\"\n        Remove-Item Env:\\GODEBUG\n    }\n\n} elseif ($BuildTarget -eq \"test-integration\") {\n    Write-Host \" Running integration tests ...\"\n    $env:GODEBUG = \"cgocheck=0\"\n    $TestCommand = \"go test $($Erigon.BuildFlags) -p 2 --timeout 130m -tags=e4 ./...\"\n    Invoke-Expression -Command $TestCommand | Out-Host\n    if (!($?)) {\n        Write-Host \" ERROR : Tests failed\"\n        exit 1\n    } else {\n        Write-Host \"`n Tests completed\"\n    }\n\n} else {\n\n    # This has a naive assumption every target has a compilation unit wih same name\n\n    Write-Host \"`n Building $BuildTarget\"\n    $outExecutable = [string](Join-Path $Erigon.BinPath \"$BuildTarget.exe\")\n    $BuildCommand = \"go build $($Erigon.BuildFlags) -o \"\"$($outExecutable)\"\" ./cmd/$BuildTarget\"\n    $BuildCommand += ';$?'\n    $success = Invoke-Expression -Command $BuildCommand\n    if (-not $success) {\n        Write-Host \" ERROR : Could not build target $($BuildTarget)\"\n        exit 1\n    } else {\n        Write-Host \"`n Built $($BuildTarget). Run $($outExecutable) to launch\"\n    }\n\n}\n}\n\n# Return to origin folder\nSet-Location $MyContext.StartDir\n"
        }
      ]
    }
  ]
}