{
  "metadata": {
    "timestamp": 1736567303908,
    "page": 905,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-ldap/ldap",
      "stars": 2268,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".githooks",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.474609375,
          "content": "# Contribution Guidelines\n\nWe welcome contribution and improvements.\n\n## Guiding Principles\n\nTo begin with here is a draft from an email exchange:\n\n * take compatibility seriously (our semvers, compatibility with older go versions, etc)\n * don't tag untested code for release\n * beware of baking in implicit behavior based on other libraries/tools choices\n * be as high-fidelity as possible in plumbing through LDAP data (don't mask errors or reduce power of someone using the library)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1279296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2011-2015 Michael Mitton (mmitton@gmail.com)\nPortions copyright (c) 2015-2024 go-ldap Authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.9453125,
          "content": ".PHONY: default install build test quicktest fmt vet lint \n\n# List of all release tags \"supported\" by our current Go version\n# E.g. \":go1.1:go1.2:go1.3:go1.4:go1.5:go1.6:go1.7:go1.8:go1.9:go1.10:go1.11:go1.12:\"\nGO_RELEASE_TAGS := $(shell go list -f ':{{join (context.ReleaseTags) \":\"}}:' runtime)\n\n# Only use the `-race` flag on newer versions of Go (version 1.3 and newer)\nifeq (,$(findstring :go1.3:,$(GO_RELEASE_TAGS)))\n\tRACE_FLAG :=\nelse\n\tRACE_FLAG := -race -cpu 1,2,4\nendif\n\n# Run `go vet` on Go 1.12 and newer. For Go 1.5-1.11, use `go tool vet`\nifneq (,$(findstring :go1.12:,$(GO_RELEASE_TAGS)))\n\tGO_VET := go vet \\\n\t\t-atomic \\\n\t\t-bool \\\n\t\t-copylocks \\\n\t\t-nilfunc \\\n\t\t-printf \\\n\t\t-rangeloops \\\n\t\t-unreachable \\\n\t\t-unsafeptr \\\n\t\t-unusedresult \\\n\t\t.\nelse ifneq (,$(findstring :go1.5:,$(GO_RELEASE_TAGS)))\n\tGO_VET := go tool vet \\\n\t\t-atomic \\\n\t\t-bool \\\n\t\t-copylocks \\\n\t\t-nilfunc \\\n\t\t-printf \\\n\t\t-shadow \\\n\t\t-rangeloops \\\n\t\t-unreachable \\\n\t\t-unsafeptr \\\n\t\t-unusedresult \\\n\t\t.\nelse\n\tGO_VET := @echo \"go vet skipped -- not supported on this version of Go\"\nendif\n\ndefault: fmt vet lint build quicktest\n\ninstall:\n\tgo get -t -v ./...\n\nbuild:\n\tgo build -v ./...\n\ntest:\n\tgo test -v $(RACE_FLAG) -cover ./...\n\nquicktest:\n\tgo test ./...\n\nfuzz:\n\tgo test -fuzz=FuzzParseDN\t\t\t\t-fuzztime=600s .\n\tgo test -fuzz=FuzzDecodeEscapedSymbols\t-fuzztime=600s .\n\tgo test -fuzz=FuzzEscapeDN \t\t\t\t-fuzztime=600s .\n\n# Capture output and force failure when there is non-empty output\nfmt:\n\t@echo gofmt -l .\n\t@OUTPUT=`gofmt -l . 2>&1`; \\\n\tif [ \"$$OUTPUT\" ]; then \\\n\t\techo \"gofmt must be run on the following files:\"; \\\n\t\techo \"$$OUTPUT\"; \\\n\t\texit 1; \\\n\tfi\n\nvet:\n\t$(GO_VET)\n\n# https://github.com/golang/lint\n# go get github.com/golang/lint/golint\n# Capture output and force failure when there is non-empty output\n# Only run on go1.5+\nlint:\n\t@echo golint ./...\n\t@OUTPUT=`command -v golint >/dev/null 2>&1 && golint ./... 2>&1`; \\\n\tif [ \"$$OUTPUT\" ]; then \\\n\t\techo \"golint errors:\"; \\\n\t\techo \"$$OUTPUT\"; \\\n\t\texit 1; \\\n\tfi\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.7431640625,
          "content": "[![GoDoc](https://godoc.org/github.com/go-ldap/ldap?status.svg)](https://godoc.org/github.com/go-ldap/ldap)\n\n# Basic LDAP v3 functionality for the GO programming language.\n\nThe library implements the following specifications:\n\n- https://datatracker.ietf.org/doc/html/rfc4511 for basic operations\n- https://datatracker.ietf.org/doc/html/rfc3062 for password modify operation\n- https://datatracker.ietf.org/doc/html/rfc4514 for distinguished names parsing\n- https://datatracker.ietf.org/doc/html/rfc4533 for Content Synchronization Operation\n- https://datatracker.ietf.org/doc/html/draft-armijo-ldap-treedelete-02 for Tree Delete Control\n- https://datatracker.ietf.org/doc/html/rfc2891 for Server Side Sorting of Search Results\n- https://datatracker.ietf.org/doc/html/rfc4532 for WhoAmI requests\n\n## Features:\n\n- Connecting to LDAP server (non-TLS, TLS, STARTTLS, through a custom dialer)\n- Binding to LDAP server (Simple Bind, GSSAPI, SASL)\n- \"Who Am I\" Requests / Responses\n- Searching for entries (normal and asynchronous)\n- Filter Compile / Decompile\n- Paging Search Results\n- Modify Requests / Responses\n- Add Requests / Responses\n- Delete Requests / Responses\n- Modify DN Requests / Responses\n\n## Go Modules:\n\n`go get github.com/go-ldap/ldap/v3`\n\n## Contributing:\n\nBug reports and pull requests are welcome!\n\nBefore submitting a pull request, please make sure tests and verification scripts pass:\n\n```\nmake all\n```\n\nTo set up a pre-push hook to run the tests and verify scripts before pushing:\n\n```\nln -s ../../.githooks/pre-push .git/hooks/pre-push\n```\n\n---\n\nThe Go gopher was designed by Renee French. (http://reneefrench.blogspot.com/)\nThe design is licensed under the Creative Commons 3.0 Attributions license.\nRead this article for more details: http://blog.golang.org/gopher\n"
        },
        {
          "name": "v3",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}