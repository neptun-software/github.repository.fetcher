{
  "metadata": {
    "timestamp": 1736567053908,
    "page": 638,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lotusirous/go-concurrency-patterns",
      "stars": 2772,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2626953125,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n"
        },
        {
          "name": "1-boring",
          "type": "tree",
          "content": null
        },
        {
          "name": "10-google2.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "11-google2.1",
          "type": "tree",
          "content": null
        },
        {
          "name": "12-google3.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "13-adv-pingpong",
          "type": "tree",
          "content": null
        },
        {
          "name": "14-adv-subscription",
          "type": "tree",
          "content": null
        },
        {
          "name": "15-bounded-parallelism",
          "type": "tree",
          "content": null
        },
        {
          "name": "16-context",
          "type": "tree",
          "content": null
        },
        {
          "name": "17-ring-buffer-channel",
          "type": "tree",
          "content": null
        },
        {
          "name": "18-worker-pool",
          "type": "tree",
          "content": null
        },
        {
          "name": "2-chan",
          "type": "tree",
          "content": null
        },
        {
          "name": "3-generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "4-fanin",
          "type": "tree",
          "content": null
        },
        {
          "name": "5-restore-sequence",
          "type": "tree",
          "content": null
        },
        {
          "name": "6-select-timeout",
          "type": "tree",
          "content": null
        },
        {
          "name": "7-quit-signal",
          "type": "tree",
          "content": null
        },
        {
          "name": "8-daisy-chan",
          "type": "tree",
          "content": null
        },
        {
          "name": "9-google1.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2685546875,
          "content": "# Go Concurrency Patterns\n\nThis repository collects common concurrency patterns in Golang\n\n\n## Materials\n- [Concurrency is not parallelism](https://blog.golang.org/waza-talk)\n- [Go Concurrency Patterns](https://talks.golang.org/2012/concurrency.slide#1)\nand [source](https://talks.golang.org/2012/concurrency/support/)\n- [Advanced Go Concurrency Patterns](https://talks.golang.org/2013/advconc.slide)\n- [Rethinking classical concurrency pattern](https://www.youtube.com/watch?v=5zXAHh5tJqQ)\n- [Go Concurrency Patterns: Pipelines and cancellation](https://blog.golang.org/pipelines)\n- [Go Concurrency Patterns: Timing out, moving on](https://blog.golang.org/concurrency-timeouts)\n- [Complex Concurrency Patterns with Go](https://www.youtube.com/watch?v=2HOO5gIgyMg)\n\n## Context:\n- [Go Concurrency Patterns: Context](https://blog.golang.org/context)\n- [How to correctly use package context](https://www.youtube.com/watch?v=-_B5uQ4UGi0)\n- [justforfunc #9: The Context Package](https://www.youtube.com/watch?v=LSzR0VEraWw)\n- [Contexts and structs](https://blog.golang.org/context-and-structs)\n\n| Name                                                      | Description                                         | Playground                                    |\n|-----------------------------------------------------------|-----------------------------------------------------|-----------------------------------------------|\n| [1-boring](/1-boring/main.go)                             | A hello world to goroutine                          | [play](https://play.golang.org/p/ienqr4bKGQ6) | \n| [2-chan](/2-chan/main.go)                                 | A hello world to go channel                         | [play](https://play.golang.org/p/amazakVmwFy) |\n| [3-generator](/3-generator/main.go)                       | A python-liked generator                            | [play](https://play.golang.org/p/9ykTDe7qLSw) |\n| [4-fanin](/4-fanin/main.go)                               | Fan in pattern                                      | [play](https://play.golang.org/p/mw_29ibv0bh) |\n| [5-restore-sequence](/5-restore-sequence/main.go)         | Restore sequence                                    | [play](https://play.golang.org/p/aV43DEmNZBz) |\n| [6-select-timeout](/6-select-timeout/main.go)             | Add Timeout to a goroutine                          | [play](https://play.golang.org/p/WIqNvmxiYvn) |\n| [7-quit-signal](/7-quit-signal/main.go)                   | Quit signal                                         | [play](https://play.golang.org/p/rKYKqMeoFDq) |\n| [8-daisy-chan](/8-daisy-chan/main.go)                     | Daisy chan pattern                                  | [play](https://play.golang.org/p/1y-4ERc3Xv4) |\n| [9-google1.0](/9-google1.0/main.go)                       | Build a concurrent google search from the ground-up | [play](https://play.golang.org/p/xMhEBlcYkfz) |\n| [10-google2.0](/10-google2.0/main.go)                     | Build a concurrent google search from the ground-up | [play](https://play.golang.org/p/-J5C9McGG9t) |\n| [11-google2.1](/11-google2.1/main.go)                     | Build a concurrent google search from the ground-up | [play](https://play.golang.org/p/hNc_HStC2BT) |\n| [12-google3.0](/12-google3.0/main.go)                     | Build a concurrent google search from the ground-up | [play](https://play.golang.org/p/uE82kcSDkSJ) |\n| [13-adv-pingpong](/13-adv-pingpong/main.go)               | A sample ping-pong table implemented in goroutine   | [play](https://play.golang.org/p/hT6knhJjBXY) |\n| [14-adv-subscription](/14-adv-subscription/main.go)       | Subscription                                        | [play](https://play.golang.org/p/J5cjAV-qtaR) |\n| [15-bounded-parallelism](/15-bounded-parallelism/main.go) | Bounded parallelism                                 | [play](https://play.golang.org/p/j_aq1dcGkGr) |\n| [16-context](/16-context/main.go)                         | How to user context in HTTP client and server       | [play](https://play.golang.org/p/ZKZfKtpEJqH) |\n| [17-ring-buffer-channel](/17-ring-buffer-channel/main.go) | Ring buffer channel                                 | [play](https://play.golang.org/p/aeUeCTWhgJ2) |\n| [18-worker-pool](/18-worker-pool/main.go)                 | worker pool pattern                                 | [play](https://play.golang.org/p/CxKoTnzb9Mx) |\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.0439453125,
          "content": "module github.com/lotusirous/gochan\n\ngo 1.21\n"
        }
      ]
    }
  ]
}