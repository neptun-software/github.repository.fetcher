{
  "metadata": {
    "timestamp": 1736566733158,
    "page": 287,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-policy-agent/gatekeeper",
      "stars": 3757,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.07421875,
          "content": "# Ignore unnecessary files\n**/*~\n**/*.log\n**/.DS_Store\n**/Thumbs.db\n\n./.tmp\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0107421875,
          "content": "*.sh eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.7998046875,
          "content": "# Staging and temporary dirs\n.staging/\n/.tmp\ngo.work\ngo.work.sum\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\nbin\n_dist\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Manager image patch file\nconfig/overlays/dev/manager_image_patch.yaml\nconfig/overlays/dev_mutation/manager_image_patch.yaml\n\n# Kubernetes Generated files - skip generated files, except for vendored files\n\n!vendor/**/zz_generated.*\n\n# editor and IDE paraphernalia\n.idea\n*.swp\n*.swo\n*~\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n/[Dd]ebug/\n/[Dd]ebugPublic/\n/[Rr]elease/\n/[Rr]eleases/\n/x64/\n/x86/\n/bld/\n/[Bb]in/\n/[Oo]bj/\n/[Ll]og/\n\n# Everything outside the src directory\n#/*\n#/*/\n#!/src/\n#/src/.packages\n#!owners*.txt\n/.corext\n/.gen*\n/deploy/secret\n/secret\njunit.xml\njunit_*.xml\n\n/images/*/shared/*\n*.pem\n\n.vscode/*\n\n# Mac .DS_Store files\n.DS_Store\n\n**/*.coverprofile\n\n# Build artifacts\nimages/nmi/nmi\nimages/demo/demo\nimages/mic/mic\n\n# Visual Studio 2015 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n**/Properties/launchSettings.json\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/packages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Typescript v1 declaration files\ntypings/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush\n.cr/\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# always include vendor directory\n!/vendor/**\n\n# tilt\ntilt-settings.json\n.tiltbuild\n\n# cluster-test\n/cluster-test\n\n# dummy provider's certificate directory\ntest/externaldata/dummy-provider/certs/\n\n# annotations for dapr\nannotations.yaml\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 0.876953125,
          "content": "run:\n  timeout: 5m\n\nissues:\n  exclude-files:\n    - pkg/target/matchcrd_constant.go\n\nlinters-settings:\n  gocritic:\n    enabled-tags:\n    - performance\n  gosec:\n    excludes:\n    - G108\n  importas:\n    no-unaliased: true\n    alias:\n      - pkg: \"github.com/open-policy-agent/frameworks/constraint/pkg/client\"\n        alias: constraintclient\n  lll:\n    line-length: 200\n\n  misspell:\n    locale: US\n  staticcheck:\n    # Select the Go version to target. The default is '1.13'.\n    go: \"1.23\"\n\nlinters:\n  disable-all: true\n  enable:\n    - errcheck\n    - errorlint\n    - exportloopref\n    - forcetypeassert\n    - gci\n    - gocritic\n    - goconst\n    - godot\n    - gofmt\n    - gofumpt\n    - goimports\n    - gosec\n    - gosimple\n    - govet\n    - importas\n    - ineffassign\n    - misspell\n    - revive # replacement for golint\n    - staticcheck\n    - typecheck\n    - unconvert\n    - unused\n    - whitespace\n"
        },
        {
          "name": ".trivyignore",
          "type": "blob",
          "size": 0.109375,
          "content": "# false positive due to prometheus versioning\n# https://github.com/aquasecurity/trivy/issues/2992\nCVE-2019-3826\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1337890625,
          "content": "## Community Code of Conduct\n  \nWe follow the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.248046875,
          "content": "# Contributing\n\nThanks for your interest in contributing to the Open Policy Agent (OPA) Gatekeeper project!\n\nPlease refer to [Gatekeeper's contribution guide](https://open-policy-agent.github.io/gatekeeper/website/docs/help)\nto find out how you can help."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7216796875,
          "content": "FROM --platform=$BUILDPLATFORM golang:1.23-bookworm@sha256:2e838582004fab0931693a3a84743ceccfbfeeafa8187e87291a1afea457ff7a AS builder\n\nARG TARGETPLATFORM\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT=\"\"\nARG LDFLAGS\nARG BUILDKIT_SBOM_SCAN_STAGE=true\n\nENV GO111MODULE=on \\\n    CGO_ENABLED=0 \\\n    GOOS=${TARGETOS} \\\n    GOARCH=${TARGETARCH} \\\n    GOARM=${TARGETVARIANT}\n\nWORKDIR /go/src/github.com/open-policy-agent/gatekeeper\nCOPY . .\n\nRUN go build -mod vendor -a -ldflags \"${LDFLAGS}\" -o manager\n\nFROM gcr.io/distroless/static-debian12@sha256:f4a57e8ffd7ba407bdd0eb315bb54ef1f21a2100a7f032e9102e4da34fe7c196\n\nWORKDIR /\nCOPY --from=builder /go/src/github.com/open-policy-agent/gatekeeper/manager .\nUSER 65532:65532\nENTRYPOINT [\"/manager\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 22.5947265625,
          "content": "# Image URL to use all building/pushing image targets\nREPOSITORY ?= openpolicyagent/gatekeeper\nCRD_REPOSITORY ?= openpolicyagent/gatekeeper-crds\nGATOR_REPOSITORY ?= openpolicyagent/gator\n\nGHCR_REPOSITORY ?= ghcr.io/open-policy-agent/gatekeeper\nGHCR_CRD_REPOSITORY ?= ghcr.io/open-policy-agent/gatekeeper-crds\nGHCR_GATOR_REPOSITORY ?= ghcr.io/open-policy-agent/gator\n\nIMG := $(REPOSITORY):latest\nCRD_IMG := $(CRD_REPOSITORY):latest\nGATOR_IMG := $(GATOR_REPOSITORY):latest\nPUSH_TO_GHCR ?= false\n# DEV_TAG will be replaced with short Git SHA on pre-release stage in CI\nDEV_TAG ?= dev\nUSE_LOCAL_IMG ?= false\nENABLE_GENERATOR_EXPANSION ?= false\nENABLE_PUBSUB ?= false\nAUDIT_CONNECTION ?= \"audit\"\nAUDIT_CHANNEL ?= \"audit\"\nLOG_LEVEL ?= \"INFO\"\nGENERATE_VAP ?= false\nGENERATE_VAPBINDING ?= false\n\nVERSION := v3.19.0-beta.1\n\nKIND_VERSION ?= 0.17.0\nKIND_CLUSTER_FILE ?= test/bats/tests/kindcluster.yml\n# note: k8s version pinned since KIND image availability lags k8s releases\nKUBERNETES_VERSION ?= 1.30.0\nKUSTOMIZE_VERSION ?= 3.8.9\nBATS_VERSION ?= 1.8.2\nORAS_VERSION ?= 0.16.0\nBATS_TESTS_FILE ?= test/bats/test.bats\nHELM_VERSION ?= 3.7.2\nNODE_VERSION ?= 16-bullseye-slim\nYQ_VERSION ?= 4.30.6\n\nHELM_ARGS ?=\nGATEKEEPER_NAMESPACE ?= gatekeeper-system\n\n# When updating this, make sure to update the corresponding action in\n# workflow.yaml\nGOLANGCI_LINT_VERSION := v1.57.1\n\n# Detects the location of the user golangci-lint cache.\nGOLANGCI_LINT_CACHE := $(shell pwd)/.tmp/golangci-lint\n\nBENCHMARK_FILE_NAME ?= benchmarks.txt\nFAKE_SUBSCRIBER_IMAGE ?= fake-subscriber:latest\n\nROOT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\nBIN_DIR := $(abspath $(ROOT_DIR)/bin)\n\nLDFLAGS := \"-X github.com/open-policy-agent/gatekeeper/v3/pkg/version.Version=$(VERSION)\"\n\nPLATFORM ?= linux/amd64\nOUTPUT_TYPE ?= type=docker\n\nMANAGER_IMAGE_PATCH := \"apiVersion: apps/v1\\\n\\nkind: Deployment\\\n\\nmetadata:\\\n\\n  name: controller-manager\\\n\\n  namespace: system\\\n\\nspec:\\\n\\n  template:\\\n\\n    spec:\\\n\\n      containers:\\\n\\n      - image: <your image file>\\\n\\n        name: manager\\\n\\n        args:\\\n\\n        - --port=8443\\\n\\n        - --logtostderr\\\n\\n        - --emit-admission-events\\\n\\n        - --admission-events-involved-namespace\\\n\\n        - --exempt-namespace=${GATEKEEPER_NAMESPACE}\\\n\\n        - --operation=webhook\\\n\\n        - --operation=mutation-webhook\\\n\\n        - --disable-opa-builtin=http.send\\\n\\n        - --log-mutations\\\n\\n        - --mutation-annotations\\\n\\n        - --log-level=${LOG_LEVEL}\\\n\\n---\\\n\\napiVersion: apps/v1\\\n\\nkind: Deployment\\\n\\nmetadata:\\\n\\n  name: audit\\\n\\n  namespace: system\\\n\\nspec:\\\n\\n  template:\\\n\\n    spec:\\\n\\n      containers:\\\n\\n      - image: <your image file>\\\n\\n        name: manager\\\n\\n        args:\\\n\\n        - --emit-audit-events\\\n\\n        - --audit-events-involved-namespace\\\n\\n        - --operation=audit\\\n\\n        - --operation=status\\\n\\n        - --operation=mutation-status\\\n\\n        - --operation=generate\\\n\\n        - --audit-chunk-size=500\\\n\\n        - --logtostderr\\\n\\n        - --default-create-vap-for-templates=${GENERATE_VAP}\\\n\\n        - --default-create-vap-binding-for-constraints=${GENERATE_VAPBINDING}\\\n\\n        - --log-level=${LOG_LEVEL}\\\n\\n\"\n\n# Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)\nifeq (,$(shell go env GOBIN))\nGOBIN=$(shell go env GOPATH)/bin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\n\nifdef GENERATE_ATTESTATIONS\n_ATTESTATIONS := --attest type=sbom --attest type=provenance,mode=max\nendif\n\nall: lint test manager\n\n# Run tests\nnative-test: envtest\n\tKUBEBUILDER_ASSETS=\"$(shell $(ENVTEST) use $(KUBERNETES_VERSION) --bin-dir $(LOCALBIN) -p path)\" \\\n\tGO111MODULE=on \\\n\tgo test -mod vendor ./pkg/... ./apis/... ./cmd/gator/... -race -bench . -coverprofile cover.out\n\n.PHONY: benchmark-test\nbenchmark-test:\n\tGOMAXPROCS=1 go test ./pkg/... -bench . -run=\"^#\" -count 10 > ${BENCHMARK_FILE_NAME}\n\n# Hook to run docker tests\n.PHONY: test\ntest: __test-image\n\tdocker run --rm -t -v $(shell pwd):/app \\\n\t\tgatekeeper-test make native-test\n\n.PHONY: test-e2e\ntest-e2e:\n\tbats -t ${BATS_TESTS_FILE}\n\n.PHONY: test-gator\ntest-gator: gator test-gator-verify test-gator-test test-gator-expand\n\n.PHONY: test-gator-containerized\ntest-gator-containerized: __test-image\n\tdocker run --privileged -v $(shell pwd):/app -v /var/lib/docker \\\n\tgatekeeper-test ./test/image/gator-test.sh\n\n.PHONY: test-gator-verify\ntest-gator-verify: gator\n\t./bin/gator verify test/gator/verify/suite.yaml\n\n.PHONY: test-gator-test\ntest-gator-test: gator\n\tbats test/gator/test\n\n.PHONY: test-gator-expand\ntest-gator-expand: gator\n\tbats test/gator/expand\n\ne2e-dependencies:\n\t# Download and install kind\n\tcurl -L https://github.com/kubernetes-sigs/kind/releases/download/v${KIND_VERSION}/kind-linux-amd64 --output ${GITHUB_WORKSPACE}/bin/kind && chmod +x ${GITHUB_WORKSPACE}/bin/kind\n\t# Download and install kubectl\n\tcurl -L https://dl.k8s.io/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl -o ${GITHUB_WORKSPACE}/bin/kubectl && chmod +x ${GITHUB_WORKSPACE}/bin/kubectl\n\t# Download and install kustomize\n\tcurl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -o kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && tar -zxvf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && chmod +x kustomize && mv kustomize ${GITHUB_WORKSPACE}/bin/kustomize\n\t# Download and install bats\n\tcurl -sSLO https://github.com/bats-core/bats-core/archive/v${BATS_VERSION}.tar.gz && tar -zxvf v${BATS_VERSION}.tar.gz && bash bats-core-${BATS_VERSION}/install.sh ${GITHUB_WORKSPACE}\n\t# Install yq\n\tcurl -L https://github.com/mikefarah/yq/releases/download/v$(YQ_VERSION)/yq_linux_amd64 -o ${GITHUB_WORKSPACE}/bin/yq && chmod +x ${GITHUB_WORKSPACE}/bin/yq\n\nKIND_NODE_VERSION := kindest/node:v$(KUBERNETES_VERSION)\ne2e-bootstrap: e2e-dependencies\n\t# Check for existing kind cluster\n\tif [ $$(${GITHUB_WORKSPACE}/bin/kind get clusters) ]; then ${GITHUB_WORKSPACE}/bin/kind delete cluster; fi\n\n\t# Create a new kind cluster\n\t# Only enabling VAP beta apis for 1.28, 1.29\n\tif [ $$(echo $(KUBERNETES_VERSION) | cut -d'.' -f2) -lt 28 ] || [ $$(echo $(KUBERNETES_VERSION) | cut -d'.' -f2) -gt 29 ]; then ${GITHUB_WORKSPACE}/bin/kind create cluster --image $(KIND_NODE_VERSION) --wait 5m; else ${GITHUB_WORKSPACE}/bin/kind create cluster --config $(KIND_CLUSTER_FILE) --image $(KIND_NODE_VERSION) --wait 5m; fi\n\ne2e-build-load-image: docker-buildx e2e-build-load-externaldata-image\n\tkind load docker-image --name kind ${IMG} ${CRD_IMG}\n\ne2e-build-load-externaldata-image: docker-buildx-builder\n\t./test/externaldata/dummy-provider/scripts/generate-tls-certificate.sh\n\tdocker buildx build \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t dummy-provider:test \\\n\t\t-f test/externaldata/dummy-provider/Dockerfile test/externaldata/dummy-provider\n\tkind load docker-image --name kind dummy-provider:test\n\ne2e-verify-release: e2e-build-load-externaldata-image patch-image deploy test-e2e\n\techo -e '\\n\\n======= manager logs =======\\n\\n' && kubectl logs -n ${GATEKEEPER_NAMESPACE} -l control-plane=controller-manager\n\ne2e-helm-install:\n\trm -rf .staging/helm\n\tmkdir -p .staging/helm\n\tcurl https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz > .staging/helm/helmbin.tar.gz\n\tcd .staging/helm && tar -xvf helmbin.tar.gz\n\t./.staging/helm/linux-amd64/helm version --client\n\ne2e-helm-deploy: e2e-helm-install\nifeq ($(ENABLE_PUBSUB),true)\n\t./.staging/helm/linux-amd64/helm install manifest_staging/charts/gatekeeper --name-template=gatekeeper \\\n\t\t--namespace ${GATEKEEPER_NAMESPACE} \\\n\t\t--debug --wait \\\n\t\t--set image.repository=${HELM_REPO} \\\n\t\t--set image.crdRepository=${HELM_CRD_REPO} \\\n\t\t--set image.release=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.image.repository=${HELM_CRD_REPO} \\\n\t\t--set postInstall.labelNamespace.image.tag=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.enabled=true \\\n\t\t--set postInstall.probeWebhook.enabled=true \\\n\t\t--set emitAdmissionEvents=true \\\n\t\t--set emitAuditEvents=true \\\n\t\t--set admissionEventsInvolvedNamespace=true \\\n\t\t--set auditEventsInvolvedNamespace=true \\\n\t\t--set disabledBuiltins={http.send} \\\n\t\t--set logMutations=true \\\n\t\t--set audit.enablePubsub=${ENABLE_PUBSUB} \\\n\t\t--set audit.connection=${AUDIT_CONNECTION} \\\n\t\t--set audit.channel=${AUDIT_CHANNEL} \\\n\t\t--set-string auditPodAnnotations.dapr\\\\.io/enabled=true \\\n\t\t--set-string auditPodAnnotations.dapr\\\\.io/app-id=audit \\\n\t\t--set-string auditPodAnnotations.dapr\\\\.io/metrics-port=9999 \\\n\t\t--set logLevel=${LOG_LEVEL} \\\n\t\t--set mutationAnnotations=true;\nelse\n\t./.staging/helm/linux-amd64/helm install manifest_staging/charts/gatekeeper --name-template=gatekeeper \\\n\t\t--namespace ${GATEKEEPER_NAMESPACE} --create-namespace \\\n\t\t--debug --wait \\\n\t\t--set image.repository=${HELM_REPO} \\\n\t\t--set image.crdRepository=${HELM_CRD_REPO} \\\n\t\t--set image.release=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.image.repository=${HELM_CRD_REPO} \\\n\t\t--set postInstall.labelNamespace.image.tag=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.enabled=true \\\n\t\t--set postInstall.probeWebhook.enabled=true \\\n\t\t--set emitAdmissionEvents=true \\\n\t\t--set emitAuditEvents=true \\\n\t\t--set admissionEventsInvolvedNamespace=true \\\n\t\t--set auditEventsInvolvedNamespace=true \\\n\t\t--set disabledBuiltins={http.send} \\\n\t\t--set logMutations=true \\\n\t\t--set logLevel=${LOG_LEVEL} \\\n\t\t--set defaultCreateVAPForTemplates=${GENERATE_VAP} \\\n\t\t--set defaultCreateVAPBindingForConstraints=${GENERATE_VAPBINDING} \\\n\t\t--set mutationAnnotations=true;\nendif\n\ne2e-helm-upgrade-init: e2e-helm-install\n\t./.staging/helm/linux-amd64/helm repo add gatekeeper https://open-policy-agent.github.io/gatekeeper/charts;\\\n\t./.staging/helm/linux-amd64/helm install gatekeeper gatekeeper/gatekeeper --version ${BASE_RELEASE} \\\n\t\t--namespace ${GATEKEEPER_NAMESPACE} --create-namespace \\\n\t\t--debug --wait \\\n\t\t--set emitAdmissionEvents=true \\\n\t\t--set emitAuditEvents=true \\\n\t\t--set admissionEventsInvolvedNamespace=true \\\n\t\t--set auditEventsInvolvedNamespace=true \\\n\t\t--set postInstall.labelNamespace.enabled=true \\\n\t\t--set postInstall.probeWebhook.enabled=true \\\n\t\t--set disabledBuiltins={http.send} \\\n\t\t--set enableExternalData=true \\\n\t\t--set logMutations=true \\\n\t\t--set logLevel=${LOG_LEVEL} \\\n\t\t--set mutationAnnotations=true;\\\n\ne2e-helm-upgrade:\n\t./helm_migrate.sh\n\t./.staging/helm/linux-amd64/helm upgrade gatekeeper manifest_staging/charts/gatekeeper \\\n\t\t--namespace ${GATEKEEPER_NAMESPACE} \\\n\t\t--debug --wait \\\n\t\t--set image.repository=${HELM_REPO} \\\n\t\t--set image.crdRepository=${HELM_CRD_REPO} \\\n\t\t--set image.release=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.image.repository=${HELM_CRD_REPO} \\\n\t\t--set postInstall.labelNamespace.image.tag=${HELM_RELEASE} \\\n\t\t--set postInstall.labelNamespace.enabled=true \\\n\t\t--set postInstall.probeWebhook.enabled=true \\\n\t\t--set emitAdmissionEvents=true \\\n\t\t--set emitAuditEvents=true \\\n\t\t--set admissionEventsInvolvedNamespace=true \\\n\t\t--set auditEventsInvolvedNamespace=true \\\n\t\t--set disabledBuiltins={http.send} \\\n\t\t--set logMutations=true \\\n\t\t--set logLevel=${LOG_LEVEL} \\\n\t\t--set defaultCreateVAPForTemplates=${GENERATE_VAP} \\\n\t\t--set defaultCreateVAPBindingForConstraints=${GENERATE_VAPBINDING} \\\n\t\t--set mutationAnnotations=true;\\\n\ne2e-subscriber-build-load-image:\n\tdocker buildx build --platform=\"linux/amd64\" -t ${FAKE_SUBSCRIBER_IMAGE} --load -f test/pubsub/fake-subscriber/Dockerfile test/pubsub/fake-subscriber\n\tkind load docker-image --name kind ${FAKE_SUBSCRIBER_IMAGE}\n\ne2e-subscriber-deploy:\n\tkubectl create ns fake-subscriber\n\tkubectl get secret redis --namespace=default -o yaml | sed 's/namespace: .*/namespace: fake-subscriber/' | kubectl apply -f -\n\tkubectl apply -f test/pubsub/fake-subscriber/manifest/subscriber.yaml\n\ne2e-publisher-deploy:\n\tkubectl get secret redis --namespace=default -o yaml | sed 's/namespace: .*/namespace: gatekeeper-system/' | kubectl apply -f -\n\tkubectl apply -f test/pubsub/publish-components.yaml\n\n# Build manager binary\nmanager: generate\n\tGO111MODULE=on go build -mod vendor -o bin/manager -ldflags $(LDFLAGS)\n\n# Build manager binary\nmanager-osx: generate\n\tGO111MODULE=on go build -mod vendor -o bin/manager GOOS=darwin -ldflags $(LDFLAGS)\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate manifests\n\tGO111MODULE=on go run -mod vendor ./main.go\n\n# Install CRDs into a cluster\ninstall: manifests\n\tdocker run -v $(shell pwd)/config:/config -v $(shell pwd)/vendor:/vendor \\\n\t\tregistry.k8s.io/kustomize/kustomize:v${KUSTOMIZE_VERSION} build \\\n\t\t/config/crd | kubectl apply -f -\n\n# Deploy controller in the configured Kubernetes cluster in ~/.kube/config\ndeploy: patch-image manifests\nifeq ($(ENABLE_GENERATOR_EXPANSION),true)\n\t@grep -q -v 'enable-generator-resource-expansion' ./config/overlays/dev/manager_image_patch.yaml && sed -i '/- --operation=webhook/a \\ \\ \\ \\ \\ \\ \\ \\ - --enable-generator-resource-expansion=true' ./config/overlays/dev/manager_image_patch.yaml\n\t@grep -q -v 'enable-generator-resource-expansion' ./config/overlays/dev/manager_image_patch.yaml && sed -i '/- --operation=audit/a \\ \\ \\ \\ \\ \\ \\ \\ - --enable-generator-resource-expansion=true' ./config/overlays/dev/manager_image_patch.yaml\nendif\n\tdocker run \\\n\t\t-v $(shell pwd)/config:/config \\\n\t\t-v $(shell pwd)/vendor:/vendor \\\n\t\tregistry.k8s.io/kustomize/kustomize:v${KUSTOMIZE_VERSION} build \\\n\t\t/config/overlays/dev | kubectl apply -f -\n\n# Generate manifests e.g. CRD, RBAC etc.\nmanifests: __controller-gen\n\t$(CONTROLLER_GEN) \\\n\t\tcrd \\\n\t\trbac:roleName=manager-role \\\n\t\twebhook \\\n\t\tpaths=\"./apis/...\" \\\n\t\tpaths=\"./pkg/...\" \\\n\t\toutput:crd:artifacts:config=config/crd/bases\n\t./build/update-match-schema.sh\n\trm -rf manifest_staging\n\tmkdir -p manifest_staging/deploy\n\tmkdir -p manifest_staging/charts/gatekeeper\n\tdocker run --rm -v $(shell pwd):/gatekeeper \\\n\t\tregistry.k8s.io/kustomize/kustomize:v${KUSTOMIZE_VERSION} build \\\n\t\t/gatekeeper/config/default -o /gatekeeper/manifest_staging/deploy/gatekeeper.yaml\n\tdocker run --rm -v $(shell pwd):/gatekeeper \\\n\t\tregistry.k8s.io/kustomize/kustomize:v${KUSTOMIZE_VERSION} build \\\n\t\t--load_restrictor LoadRestrictionsNone /gatekeeper/cmd/build/helmify | go run cmd/build/helmify/*.go\n\n# lint runs a dockerized golangci-lint, and should give consistent results\n# across systems.\n# Source: https://golangci-lint.run/usage/install/#docker\nlint:\n\tdocker run -t --rm -v $(shell pwd):/app \\\n\t\t-v ${GOLANGCI_LINT_CACHE}:/root/.cache/golangci-lint \\\n\t\t-w /app golangci/golangci-lint:${GOLANGCI_LINT_VERSION} \\\n\t\tgolangci-lint run -v --fix\n\n# Generate code\ngenerate: __conversion-gen __controller-gen\n\t$(CONTROLLER_GEN) object:headerFile=./hack/boilerplate.go.txt paths=\"./apis/...\" paths=\"./pkg/...\"\n\t$(CONVERSION_GEN) \\\n\t\t--output-base=/gatekeeper \\\n\t\t--input-dirs=./apis/mutations/v1,./apis/mutations/v1beta1,./apis/mutations/v1alpha1,./apis/expansion/v1alpha1,./apis/syncset/v1alpha1,./apis/gvkmanifest/v1alpha1 \\\n\t\t--go-header-file=./hack/boilerplate.go.txt \\\n\t\t--output-file-base=zz_generated.conversion\n\n# Prepare crds to be added to gatekeeper-crds image\nclean-crds:\n\trm -rf .staging/crds/*\n\nbuild-crds: clean-crds\n\tmkdir -p .staging/crds\nifdef CI\n\tcp -R manifest_staging/charts/gatekeeper/crds/ .staging/crds/\nelse\n\tcp -R charts/gatekeeper/crds/ .staging/crds/\nendif\n\n# Docker Login\ndocker-login:\n\t@docker login -u $(DOCKER_USER) -p $(DOCKER_PASSWORD) $(REGISTRY)\n\ndocker-build: docker-buildx\n\ndocker-buildx-builder:\n\tif ! docker buildx ls | grep -q container-builder; then\\\n\t\tdocker buildx create --name container-builder --use --bootstrap;\\\n\t\tdocker buildx inspect;\\\n\tfi\n\n# Build image with buildx to build cross platform multi-architecture docker images\n# https://docs.docker.com/buildx/working-with-buildx/\ndocker-buildx: docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(IMG) .\n\ndocker-buildx-crds: build-crds docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(CRD_IMG) \\\n\t\t-f crd.Dockerfile .staging/crds/\n\ndocker-buildx-dev: docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(REPOSITORY):$(DEV_TAG) \\\n\t\t-t $(REPOSITORY):dev \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_REPOSITORY):$(DEV_TAG)) \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_REPOSITORY):dev) .\n\ndocker-buildx-release: docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(REPOSITORY):$(VERSION) \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_REPOSITORY):$(VERSION)) .\n\ndocker-buildx-crds-dev: build-crds docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(CRD_REPOSITORY):$(DEV_TAG) \\\n\t\t-t $(CRD_REPOSITORY):dev \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_CRD_REPOSITORY):$(DEV_TAG)) \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_CRD_REPOSITORY):dev) \\\n\t\t-f crd.Dockerfile .staging/crds/\n\ndocker-buildx-crds-release: build-crds docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS}\\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t $(CRD_REPOSITORY):$(VERSION) \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t $(GHCR_CRD_REPOSITORY):$(VERSION)) \\\n\t\t-f crd.Dockerfile .staging/crds/\n\n# Build gator image\ndocker-buildx-gator-dev: docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t ${GATOR_REPOSITORY}:${DEV_TAG} \\\n\t\t-t ${GATOR_REPOSITORY}:dev \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t ${GHCR_GATOR_REPOSITORY}:${DEV_TAG}) \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t ${GHCR_GATOR_REPOSITORY}:dev) \\\n\t\t-f gator.Dockerfile .\n\ndocker-buildx-gator-release: docker-buildx-builder\n\tdocker buildx build \\\n\t\t$(_ATTESTATIONS) \\\n\t\t--build-arg LDFLAGS=${LDFLAGS} \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t ${GATOR_REPOSITORY}:${VERSION} \\\n\t\t$(if $(filter true,$(PUSH_TO_GHCR)),-t ${GHCR_GATOR_REPOSITORY}:${VERSION}) \\\n\t\t-f gator.Dockerfile .\n\n# Update manager_image_patch.yaml with image tag\npatch-image:\n\t@echo \"updating kustomize image patch file for manager resource\"\n\t@bash -c 'echo -e ${MANAGER_IMAGE_PATCH} > ./config/overlays/dev/manager_image_patch.yaml'\nifeq ($(USE_LOCAL_IMG),true)\n\t@sed -i '/^        name: manager/a \\ \\ \\ \\ \\ \\ \\ \\ imagePullPolicy: IfNotPresent' ./config/overlays/dev/manager_image_patch.yaml\nendif\n\t@sed -i'' -e 's@image: .*@image: '\"${IMG}\"'@' ./config/overlays/dev/manager_image_patch.yaml\n\nrelease-manifest:\n\t@sed -i'' -e 's@image: $(REPOSITORY):$(VERSION)@image: $(REPOSITORY):'\"$(NEWVERSION)\"'@' ./config/manager/manager.yaml\n\t@sed -i \"s/appVersion: $(VERSION)/appVersion: ${NEWVERSION}/\" ./cmd/build/helmify/static/Chart.yaml\n\t@sed -i \"s/version: $$(echo ${VERSION} | cut -c2-)/version: $$(echo ${NEWVERSION} | cut -c2-)/\" ./cmd/build/helmify/static/Chart.yaml\n\t@sed -i \"s/release: $(VERSION)/release: ${NEWVERSION}/\" ./cmd/build/helmify/static/values.yaml\n\t@sed -i \"s/tag: $(VERSION)/tag: ${NEWVERSION}/\" ./cmd/build/helmify/static/values.yaml\n\t@sed -i 's/Current release version: `$(VERSION)`/Current release version: `'\"${NEWVERSION}\"'`/' ./cmd/build/helmify/static/README.md\n\t@sed -i -e 's/^VERSION := $(VERSION)/VERSION := ${NEWVERSION}/' ./Makefile\n\texport\n\t$(MAKE) manifests\n\n# Tags a new version for docs\n.PHONY: version-docs\nversion-docs:\n\t@sed -i '10,$$c ${OPA_VERSIONS}' ./website/docs/opa-versions.md\n\tdocker run \\\n\t\t-v $(shell pwd)/website:/website \\\n\t\t-w /website \\\n\t\t-u $(shell id -u):$(shell id -g) \\\n\t\tnode:${NODE_VERSION} \\\n\t\tsh -c \"yarn install --frozen-lockfile && yarn run docusaurus docs:version ${NEWVERSION}\"\n\t@sed -i 's/https:\\/\\/raw\\.githubusercontent\\.com\\/open-policy-agent\\/gatekeeper\\/master\\/deploy\\/gatekeeper\\.yaml.*/https:\\/\\/raw\\.githubusercontent\\.com\\/open-policy-agent\\/gatekeeper\\/${TAG}\\/deploy\\/gatekeeper\\.yaml/' ./website/versioned_docs/version-${NEWVERSION}/install.md\n\n.PHONY: patch-version-docs\npatch-version-docs:\n\t@sed -i 's/https:\\/\\/raw\\.githubusercontent\\.com\\/open-policy-agent\\/gatekeeper\\/${OLDVERSION}\\/deploy\\/gatekeeper\\.yaml.*/https:\\/\\/raw\\.githubusercontent\\.com\\/open-policy-agent\\/gatekeeper\\/${TAG}\\/deploy\\/gatekeeper\\.yaml/' ./website/versioned_docs/version-${NEWVERSION}/install.md\n\t@sed -i '10,$$c ${OPA_VERSIONS}' ./website/docs/opa-versions.md\n\t@sed -i '10,$$c ${OPA_VERSIONS}' ./website/versioned_docs/version-${NEWVERSION}/opa-versions.md\n\npromote-staging-manifest:\n\t@rm -rf deploy\n\t@cp -r manifest_staging/deploy .\n\t@rm -rf charts\n\t@cp -r manifest_staging/charts .\n\n# Delete gatekeeper from a cluster. Note this is not a complete uninstall, just a dev convenience\nuninstall:\n\tdocker run -v $(shell pwd)/config:/config -v $(shell pwd)/vendor:/vendor \\\n\t\tregistry.k8s.io/kustomize/kustomize:v${KUSTOMIZE_VERSION} build \\\n\t\t/config/overlays/dev | kubectl delete -f -\n\n__controller-gen: __tooling-image\nCONTROLLER_GEN=docker run --rm -v $(shell pwd):/gatekeeper gatekeeper-tooling controller-gen\n\n__conversion-gen: __tooling-image\nCONVERSION_GEN=docker run --rm -v $(shell pwd):/gatekeeper gatekeeper-tooling conversion-gen\n\n__tooling-image:\n\tdocker buildx build build/tooling \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t-t gatekeeper-tooling\n\n__test-image:\n\tdocker buildx build test/image \\\n\t\t--platform=\"$(PLATFORM)\" \\\n\t\t--output=$(OUTPUT_TYPE) \\\n\t\t--build-arg YQ_VERSION=$(YQ_VERSION) \\\n\t\t--build-arg BATS_VERSION=$(BATS_VERSION) \\\n\t\t--build-arg ORAS_VERSION=$(ORAS_VERSION) \\\n\t\t--build-arg KUSTOMIZE_VERSION=$(KUSTOMIZE_VERSION) \\\n\t\t-t gatekeeper-test\n\n## Location to install dependencies to\nLOCALBIN ?= $(shell pwd)/.tmp/bin\n$(LOCALBIN):\n\tmkdir -p $(LOCALBIN)\n\nENVTEST ?= $(LOCALBIN)/setup-envtest\n\n.PHONY: envtest\nenvtest: $(ENVTEST) ## Download envtest-setup locally if necessary.\n$(ENVTEST): $(LOCALBIN)\n\ttest -s $(LOCALBIN)/setup-envtest || GOBIN=$(LOCALBIN) go install sigs.k8s.io/controller-runtime/tools/setup-envtest@v0.0.0-20230118154835-9241bceb3098\n\n.PHONY: vendor\nvendor:\n\tgo mod vendor\n\tgo mod tidy\n\n.PHONY: gator\ngator: bin/gator-$(GOOS)-$(GOARCH)\n\tmv bin/gator-$(GOOS)-$(GOARCH) bin/gator\n\nbin/gator-$(GOOS)-$(GOARCH):\n\tGOOS=$(GOOS) GOARCH=$(GOARCH) CGO_ENABLED=0 GO111MODULE=on go build -o $(BIN_DIR)/gator-$(GOOS)-$(GOARCH) -ldflags $(LDFLAGS) ./cmd/gator\n\ntilt-prepare:\n\tmkdir -p .tiltbuild/charts\n\trm -rf .tiltbuild/charts/gatekeeper\n\tcp -R manifest_staging/charts/gatekeeper .tiltbuild/charts\n\t# disable some configs from the security context so we can perform live update\n\tsed -i -e \"/readOnlyRootFilesystem: true/d\" .tiltbuild/charts/gatekeeper/values.yaml\n\tsed -i -e \"/run.*: .*/d\" .tiltbuild/charts/gatekeeper/values.yaml\n\ntilt: generate manifests tilt-prepare\n\ttilt up\n\ntilt-clean:\n\trm -rf .tiltbuild\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.3125,
          "content": "Gatekeeper\nCopyright 2018-2020 The Gatekeeper Authors\n\nThis product includes modified code from the following projects,\nas denoted by notifications in the source code headers:\n\ncontroller-runtime\nhttps://sigs.k8s.io/controller-runtime\nCopyright 2018 The Kubernetes Authors.\nLicensed under the Apache License, Version 2.0"
        },
        {
          "name": "PROJECT",
          "type": "blob",
          "size": 0.400390625,
          "content": "domain: gatekeeper.sh\nmultigroup: true\nrepo: github.com/open-policy-agent/gatekeeper\nresources:\n- group: config\n  kind: Config\n  version: v1alpha1\n- group: status\n  kind: ConstraintPodStatus\n  version: v1beta1\n- group: status\n  kind: ConstraintTemplatePodStatus\n  version: v1beta1\n- group: mutations\n  kind: AssignMetadata\n  version: v1alpha1\n- group: mutations\n  kind: Assign\n  version: v1alpha1\nversion: \"2\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.8515625,
          "content": "# Gatekeeper\n\n![Static Badge](https://img.shields.io/badge/OPA%20Version-v0.60.0-blue)\n\n## How is Gatekeeper different from OPA?\n\nCompared to using [OPA with its sidecar kube-mgmt](https://www.openpolicyagent.org/docs/kubernetes-admission-control.html) (aka Gatekeeper v1.0), Gatekeeper introduces the following functionality:\n\n   * An extensible, parameterized [policy library](https://open-policy-agent.github.io/gatekeeper-library/website/)\n   * Native Kubernetes CRDs for instantiating the policy library (aka \"constraints\")\n   * Native Kubernetes CRDs for extending the policy library (aka \"constraint templates\")\n   * Native Kubernetes CRDs for [mutation](https://open-policy-agent.github.io/gatekeeper/website/docs/mutation/) support\n   * Audit functionality\n   * External data support\n\n## Getting started\n\nCheck out the [installation instructions](https://open-policy-agent.github.io/gatekeeper/website/docs/install) to deploy Gatekeeper components to your Kubernetes cluster.\n\n## Documentation\n\nPlease see the [Gatekeeper website](https://open-policy-agent.github.io/gatekeeper/website/docs/howto) for more in-depth information.\n\n## Policy Library\n\nSee the [Gatekeeper policy library](https://open-policy-agent.github.io/gatekeeper-library/website/) for a collection of constraint templates and sample constraints that you can use with Gatekeeper.\n\n## Community & Contributing\n\nPlease refer to [Gatekeeper's contribution guide](https://open-policy-agent.github.io/gatekeeper/website/docs/help) to find out how you can help.\n\n## Code of conduct\n\nThis project is governed by the [CNCF Code of conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n\n## Security\n\nFor details on how to report vulnerabilities and security release process, please refer to [Gatekeeper Security](https://open-policy-agent.github.io/gatekeeper/website/docs/security) for more information.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2109375,
          "content": "# Security\n\nFor details on how to report vulnerabilities and security release process, please refer to [Gatekeeper Security](https://open-policy-agent.github.io/gatekeeper/website/docs/security) for more information."
        },
        {
          "name": "SECURITY_AUDIT.pdf",
          "type": "blob",
          "size": 301.5869140625,
          "content": null
        },
        {
          "name": "Tiltfile",
          "type": "blob",
          "size": 3.8232421875,
          "content": "# -*- mode: Python -*-\n\n# global settings\nsettings = {\n    \"allowed_contexts\": [\n        \"kind-gatekeeper\",\n    ],\n}\nsettings.update(read_json(\n    \"tilt-settings.json\",\n    default={},\n))\n\nallow_k8s_contexts(settings.get(\"allowed_contexts\", []))\n\nif settings.get(\"trigger_mode\", \"auto\").lower() == \"manual\":\n    trigger_mode(TRIGGER_MODE_MANUAL)\n\nTILT_DOCKERFILE = \"\"\"\nFROM golang:1.23-bookworm as tilt-helper\n# Support live reloading with Tilt\nRUN wget --output-document /restart.sh --quiet https://raw.githubusercontent.com/tilt-dev/rerun-process-wrapper/60eaa572cdf825c646008e1ea28b635f83cefb38/restart.sh && \\\n    wget --output-document /start.sh --quiet https://raw.githubusercontent.com/tilt-dev/rerun-process-wrapper/60eaa572cdf825c646008e1ea28b635f83cefb38/start.sh && \\\n    chmod +x /start.sh && chmod +x /restart.sh\n\nFROM gcr.io/distroless/base:debug as tilt\nWORKDIR /\nCOPY --from=tilt-helper /start.sh .\nCOPY --from=tilt-helper /restart.sh .\nCOPY bin/manager .\n\"\"\"\n\n# build_manager defines the build process for the manager binary and image.\ndef build_manager():\n    cmd = [\n        \"make tilt-prepare\",\n        \"GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod vendor -a -o .tiltbuild/bin/manager\",\n    ]\n    local_resource(\n        \"manager\",\n        cmd=\";\".join(cmd),\n        deps=[\"pkg\", \"third_party\", \"vendor\",\n              \"apis\", \"go.mod\", \"go.sum\", \"main.go\"],\n        labels=[\"bin\"],\n    )\n    docker_build(\n        ref=\"openpolicyagent/gatekeeper\",\n        dockerfile_contents=TILT_DOCKERFILE,\n        context=\".tiltbuild\",\n        target=\"tilt\",\n        entrypoint=[\"sh\", \"/start.sh\", \"/manager\"],\n        only=\"bin/manager\",\n        live_update=[\n            sync(\".tiltbuild/bin/manager\", \"/manager\"),\n            run(\"sh /restart.sh\"),\n        ],\n    )\n\n# build_crds defines the build process for the CRDs image.\ndef build_crds():\n    local_resource(\n        \"crds\",\n        cmd=\";\".join([\"rm -rf .staging\", \"mkdir -p .staging/crds\",\n                     \"cp -R .tiltbuild/charts/gatekeeper/crds/ .staging/crds/\"]),\n        deps=[\".tiltbuild/charts/gatekeeper/crds\"],\n        labels=[\"staging\"],\n    )\n    docker_build(\n        ref=\"openpolicyagent/gatekeeper-crds\",\n        dockerfile=\"./crd.Dockerfile\",\n        context=\".staging/crds/\",\n        target=\"build\",\n        only=\"crds\",\n        build_args={\"KUBE_VERSION\": \"1.28.0\"},\n        live_update=[\n            sync(\".staging/crds/\", \"/crds\"),\n        ],\n    )\n\n# deploy_gatekeeper defines the deploy process for the gatekeeper chart from manifest_staging/charts/gatekeeper.\ndef deploy_gatekeeper():\n    local(\"kubectl create namespace gatekeeper-system || true\")\n\n    helm_values = settings.get(\"helm_values\", {})\n    k8s_yaml(helm(\n        \".tiltbuild/charts/gatekeeper\",\n        name=\"gatekeeper\",\n        namespace=\"gatekeeper-system\",\n        values=[\".tiltbuild/charts/gatekeeper/values.yaml\"],\n        set=[\"{}={}\".format(k, str(v).lower())\n             for k, v in helm_values.items()],\n    ))\n\n    # add label to resources\n    for resource in [\"gatekeeper-audit\", \"gatekeeper-controller-manager\", \"gatekeeper-update-namespace-label\", \"gatekeeper-update-crds-hook\"]:\n        k8s_resource(resource, labels=[\"controllers\"])\n\n    # port-foward the metrics server\n    if \"audit.metricsPort\" in helm_values:\n        port = int(helm_values[\"audit.metricsPort\"])\n        k8s_resource(\n            workload=\"gatekeeper-audit\",\n            port_forwards=[port_forward(\n                port, name=\"View metrics\", link_path=\"/metrics\")],\n        )\n\n    if \"controllerManager.metricsPort\" in helm_values:\n        port = int(helm_values[\"controllerManager.metricsPort\"])\n        k8s_resource(\n            workload=\"gatekeeper-controller-manager\",\n            port_forwards=[port_forward(\n                port, name=\"View metrics\", link_path=\"/metrics\")],\n        )\n\n\nbuild_manager()\n\nbuild_crds()\n\ndeploy_gatekeeper()\n"
        },
        {
          "name": "_typos.toml",
          "type": "blob",
          "size": 0.0556640625,
          "content": "[default]\nextend-ignore-identifiers-re = [\n    \"ANDed\",\n]"
        },
        {
          "name": "apis",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "crd.Dockerfile",
          "type": "blob",
          "size": 0.2568359375,
          "content": "FROM --platform=$TARGETPLATFORM registry.k8s.io/kubectl:v1.32.0 AS builder\n\nARG TARGETPLATFORM\nARG TARGETOS\nARG TARGETARCH\n\nFROM scratch AS build\nUSER 65532:65532\nCOPY --chown=65532:65532 * /crds/\nCOPY --from=builder /bin/kubectl /kubectl\nENTRYPOINT [\"/kubectl\"]\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "deprecated",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "gator.Dockerfile",
          "type": "blob",
          "size": 0.740234375,
          "content": "FROM --platform=$BUILDPLATFORM golang:1.23-bookworm@sha256:2e838582004fab0931693a3a84743ceccfbfeeafa8187e87291a1afea457ff7a AS builder\n\nARG TARGETPLATFORM\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT=\"\"\nARG LDFLAGS\n\nENV GO111MODULE=on \\\n    CGO_ENABLED=0 \\\n    GOOS=${TARGETOS} \\\n    GOARCH=${TARGETARCH} \\\n    GOARM=${TARGETVARIANT}\n\nCOPY . /go/src/github.com/open-policy-agent/gatekeeper\nWORKDIR /go/src/github.com/open-policy-agent/gatekeeper/cmd/gator\n\nRUN go build -mod vendor -a -ldflags \"${LDFLAGS}\" -o /gator\n\nFROM --platform=$BUILDPLATFORM gcr.io/distroless/static-debian12@sha256:f4a57e8ffd7ba407bdd0eb315bb54ef1f21a2100a7f032e9102e4da34fe7c196 AS build\nUSER 65532:65532\nCOPY --from=builder --chown=65532:65532 /gator /gator\nENTRYPOINT [\"/gator\"]\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.568359375,
          "content": "module github.com/open-policy-agent/gatekeeper/v3\n\ngo 1.22.0\n\nrequire (\n\tcloud.google.com/go/trace v1.10.11\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.44.0\n\tgithub.com/dapr/go-sdk v1.8.0\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc\n\tgithub.com/dominikbraun/graph v0.16.2\n\tgithub.com/go-logr/logr v1.4.2\n\tgithub.com/go-logr/zapr v1.3.0\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/onsi/gomega v1.34.1\n\tgithub.com/open-policy-agent/cert-controller v0.11.0\n\tgithub.com/open-policy-agent/frameworks/constraint v0.0.0-20241101234656-e78c8abd754a\n\tgithub.com/open-policy-agent/opa v0.68.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/stretchr/testify v1.9.0\n\tgo.opentelemetry.io/contrib/detectors/aws/ec2 v1.21.1\n\tgo.opentelemetry.io/contrib/detectors/gcp v1.21.1\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v0.42.0\n\tgo.opentelemetry.io/otel/exporters/prometheus v0.40.0\n\tgo.opentelemetry.io/otel/metric v1.28.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/sdk/metric v1.28.0\n\tgo.uber.org/automaxprocs v1.5.3\n\tgo.uber.org/zap v1.26.0\n\tgolang.org/x/net v0.34.0\n\tgolang.org/x/oauth2 v0.21.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/time v0.6.0\n\tgoogle.golang.org/grpc v1.66.3\n\tgoogle.golang.org/protobuf v1.34.2\n\tgopkg.in/yaml.v2 v2.4.0\n\tgopkg.in/yaml.v3 v3.0.1\n\tk8s.io/api v0.30.6\n\tk8s.io/apiextensions-apiserver v0.30.6\n\tk8s.io/apimachinery v0.30.6\n\tk8s.io/apiserver v0.30.6\n\tk8s.io/client-go v0.30.6\n\tk8s.io/klog/v2 v2.120.1\n\tk8s.io/utils v0.0.0-20240502163921-fe8a2dddb1d0\n\toras.land/oras-go v1.2.5\n\tsigs.k8s.io/controller-runtime v0.18.5\n\tsigs.k8s.io/release-utils v0.7.7\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tcloud.google.com/go/auth v0.7.2 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.3 // indirect\n\tcloud.google.com/go/compute/metadata v0.5.0 // indirect\n\tcloud.google.com/go/monitoring v1.20.1 // indirect\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.20.0 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.44.0 // indirect\n\tgithub.com/OneOfOne/xxhash v1.2.8 // indirect\n\tgithub.com/agnivade/levenshtein v1.1.1 // indirect\n\tgithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230305170008-8188dc5388df // indirect\n\tgithub.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d // indirect\n\tgithub.com/aws/aws-sdk-go v1.47.9 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/blang/semver/v4 v4.0.0 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/common-nighthawk/go-figure v0.0.0-20210622060536-734e95fb86be // indirect\n\tgithub.com/containerd/containerd v1.7.21 // indirect\n\tgithub.com/containerd/errdefs v0.1.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/platforms v0.2.1 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/cli v25.0.1+incompatible // indirect\n\tgithub.com/docker/distribution v2.8.3+incompatible // indirect\n\tgithub.com/docker/docker v26.1.5+incompatible // indirect\n\tgithub.com/docker/docker-credential-helpers v0.7.0 // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-metrics v0.0.1 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.12.0 // indirect\n\tgithub.com/evanphx/json-patch v4.12.0+incompatible // indirect\n\tgithub.com/evanphx/json-patch/v5 v5.9.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/go-chi/chi/v5 v5.0.8 // indirect\n\tgithub.com/go-ini/ini v1.67.0 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.21.0 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/gobwas/glob v0.2.3 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/glog v1.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/cel-go v0.17.8 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.13.0 // indirect\n\tgithub.com/gorilla/mux v1.8.1 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/imdario/mergo v0.3.13 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/moby/locker v1.0.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stoewer/go-strcase v1.2.0 // indirect\n\tgithub.com/tchap/go-patricia/v2 v2.3.1 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgithub.com/yashtewari/glob-intersection v0.2.0 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric v0.42.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgo.uber.org/atomic v1.11.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/crypto v0.32.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/term v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgomodules.xyz/jsonpatch/v2 v2.4.0 // indirect\n\tgoogle.golang.org/api v0.189.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240722135656-d784300faade // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240722135656-d784300faade // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240722135656-d784300faade // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tk8s.io/component-base v0.30.6 // indirect\n\tk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f // indirect\n\tsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.29.0 // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 54.1328125,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.115.0 h1:CnFSK6Xo3lDYRoBKEcAtia6VSC837/ZkJuRduSFnr14=\ncloud.google.com/go/auth v0.7.2 h1:uiha352VrCDMXg+yoBtaD0tUF4Kv9vrtrWPYXwutnDE=\ncloud.google.com/go/auth v0.7.2/go.mod h1:VEc4p5NNxycWQTMQEDQF0bd6aTMb6VgYDXEwiJJQAbs=\ncloud.google.com/go/auth/oauth2adapt v0.2.3 h1:MlxF+Pd3OmSudg/b1yZ5lJwoXCEaeedAguodky1PcKI=\ncloud.google.com/go/auth/oauth2adapt v0.2.3/go.mod h1:tMQXOfZzFuNuUxOypHlQEXgdfX5cuhwU+ffUuXRJE8I=\ncloud.google.com/go/compute/metadata v0.5.0 h1:Zr0eK8JbFv6+Wi4ilXAR8FJ3wyNdpxHKJNPos6LTZOY=\ncloud.google.com/go/compute/metadata v0.5.0/go.mod h1:aHnloV2TPI38yx4s9+wAZhHykWvVCfu7hQbF+9CWoiY=\ncloud.google.com/go/logging v1.10.0 h1:f+ZXMqyrSJ5vZ5pE/zr0xC8y/M9BLNzQeLBwfeZ+wY4=\ncloud.google.com/go/logging v1.10.0/go.mod h1:EHOwcxlltJrYGqMGfghSet736KR3hX1MAj614mrMk9I=\ncloud.google.com/go/longrunning v0.5.9 h1:haH9pAuXdPAMqHvzX0zlWQigXT7B0+CL4/2nXXdBo5k=\ncloud.google.com/go/longrunning v0.5.9/go.mod h1:HD+0l9/OOW0za6UWdKJtXoFAX/BGg/3Wj8p10NeWF7c=\ncloud.google.com/go/monitoring v1.20.1 h1:XmM6uk4+mI2ZhWdI2n/2GNhJdpeQN+1VdG2UWEDhX48=\ncloud.google.com/go/monitoring v1.20.1/go.mod h1:FYSe/brgfuaXiEzOQFhTjsEsJv+WePyK71X7Y8qo6uQ=\ncloud.google.com/go/trace v1.10.11 h1:+Y1emOgcyGy6OdJ2KQbT4t2oecPp49GtJn8j3GM1pWo=\ncloud.google.com/go/trace v1.10.11/go.mod h1:fUr5L3wSXerNfT0f1bBg08W4axS2VbHGgYcfH4KuTXU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.20.0 h1:tk85AYGwOf6VNtoOQi8w/kVDi2vmPxp3/OU2FsUpdcA=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.20.0/go.mod h1:Xx0VKh7GJ4si3rmElbh19Mejxz68ibWg/J30ZOMrqzU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.44.0 h1:TKInLYWIqv/RrPM9IbpbcAxmtAU0+EtrxbZGZn2pzfQ=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.44.0/go.mod h1:shFWgjEP9WVKRUJbgyp61kOiFAd0AUPUyy16fgyhJ5Q=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.44.0 h1:ew7SfeajMJ3I4iXA1LERYY62fGCKO4TjVPw5QTPt47k=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.44.0/go.mod h1:OZ0OdcedAJJyQbJsfO97KMimDYkuOkzzO4AQPgV5QRI=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.44.0 h1:GjWPDY9PUlNWwTI95L/lktUp35BLtzBoBElH314eafM=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.44.0/go.mod h1:qkFPtMouQjW5ugdHIOthiTbweVHUTqbS0Qsu55KqXks=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.11.7 h1:vl/nj3Bar/CvJSYo7gIQPyRWc9f3c6IeSNavBTSZNZQ=\ngithub.com/Microsoft/hcsshim v0.11.7/go.mod h1:MV8xMfmECjl5HdO7U/3/hFVnkmSBjAjmA09d4bExKcU=\ngithub.com/OneOfOne/xxhash v1.2.8 h1:31czK/TI9sNkxIKfaUfGlU47BAxQ0ztGgd9vPyqimf8=\ngithub.com/OneOfOne/xxhash v1.2.8/go.mod h1:eZbhyaAYD41SGSSsnmcpxVoRiQ/MPUTjUdIIOT9Um7Q=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d h1:UrqY+r/OJnIp5u0s1SbQ8dVfLCZJsnvazdBP5hS4iRs=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=\ngithub.com/agnivade/levenshtein v1.1.1 h1:QY8M92nrzkmr798gCo3kmMyqXFzdQVpxLlGPRBij0P8=\ngithub.com/agnivade/levenshtein v1.1.1/go.mod h1:veldBMzWxcCG2ZvUTKD2kJNRdCk5hVbJomOvKkmgYbo=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230305170008-8188dc5388df h1:7RFfzj4SSt6nnvCPbCqijJi1nWCd+TqAT3bYCStRC18=\ngithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230305170008-8188dc5388df/go.mod h1:pSwJ0fSY5KhvocuWSx4fz3BA8OrA1bQn+K1Eli3BRwM=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0 h1:jfIu9sQUG6Ig+0+Ap1h4unLjW6YQJpKZVmUzxsD4E/Q=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0/go.mod h1:t2tdKJDJF9BV14lnkjHmOQgcvEKgtqs5a1N3LNdJhGE=\ngithub.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d h1:Byv0BzEl3/e6D5CLfI0j/7hiIEtvGVFPCZ7Ei2oq8iQ=\ngithub.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=\ngithub.com/aws/aws-sdk-go v1.47.9 h1:rarTsos0mA16q+huicGx0e560aYRtOucV5z2Mw23JRY=\ngithub.com/aws/aws-sdk-go v1.47.9/go.mod h1:LF8svs817+Nz+DmiMQKTO3ubZ/6IaTpq3TjupRn3Eqk=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0 h1:e+C0SB5R1pu//O4MQ3f9cFuPGoOVeF2fE4Og9otCc70=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0/go.mod h1:zsTqEiSzDgAa/8GZR7E1qaXrhYNDKBYy5/dWPTIflbk=\ngithub.com/bugsnag/bugsnag-go v0.0.0-20141110184014-b1d153021fcd h1:rFt+Y/IK1aEZkEHchZRSq9OQbsSzIT/OrI8YFFmRIng=\ngithub.com/bugsnag/bugsnag-go v0.0.0-20141110184014-b1d153021fcd/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b h1:otBG+dV+YK+Soembjv71DPz3uX/V/6MMlSyD9JBQ6kQ=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b/go.mod h1:obH5gd0BsqsP2LwDJ9aOkm/6J86V6lyAXCoQWGw3K50=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0 h1:nvj0OLI3YqYXer/kZD8Ri1aaunCxIEsOst1BVJswV0o=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0/go.mod h1:D/8v3kj0zr8ZAKg1AQ6crr+5VwKN5eIywRkfhyM/+dE=\ngithub.com/bytecodealliance/wasmtime-go/v3 v3.0.2 h1:3uZCA/BLTIu+DqCfguByNMJa2HVHpXvjfy0Dy7g6fuA=\ngithub.com/bytecodealliance/wasmtime-go/v3 v3.0.2/go.mod h1:RnUjnIXxEJcL6BgCvNyzCCRzZcxCgsZCi+RNlvYor5Q=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/common-nighthawk/go-figure v0.0.0-20210622060536-734e95fb86be h1:J5BL2kskAlV9ckgEsNQXscjIaLiOYiZ75d4e94E6dcQ=\ngithub.com/common-nighthawk/go-figure v0.0.0-20210622060536-734e95fb86be/go.mod h1:mk5IQ+Y0ZeO87b858TlA645sVcEcbiX6YqP98kt+7+w=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/containerd v1.7.21 h1:USGXRK1eOC/SX0L195YgxTHb0a00anxajOzgfN0qrCA=\ngithub.com/containerd/containerd v1.7.21/go.mod h1:e3Jz1rYRUZ2Lt51YrH9Rz0zPyJBOlSvB3ghr2jbVD8g=\ngithub.com/containerd/continuity v0.4.2 h1:v3y/4Yz5jwnvqPKJJ+7Wf93fyWoCB3F5EclWG023MDM=\ngithub.com/containerd/continuity v0.4.2/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=\ngithub.com/containerd/errdefs v0.1.0 h1:m0wCRBiu1WJT/Fr+iOoQHMQS/eP5myQ8lCv4Dz5ZURM=\ngithub.com/containerd/errdefs v0.1.0/go.mod h1:YgWiiHtLmSeBrvpw+UfPijzbLaB77mEG1WwJTDETIV0=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/dapr/go-sdk v1.8.0 h1:OEleeL3zUTqXxIZ7Vkk3PClAeCh1g8sZ1yR2JFZKfXM=\ngithub.com/dapr/go-sdk v1.8.0/go.mod h1:MBcTKXg8PmBc8A968tVWQg1Xt+DZtmeVR6zVVVGcmeA=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger/v3 v3.2103.5 h1:ylPa6qzbjYRQMU6jokoj4wzcaweHylt//CH0AKt0akg=\ngithub.com/dgraph-io/badger/v3 v3.2103.5/go.mod h1:4MPiseMeDQ3FNCYwRbbcBOGJLf5jsE0PPFzRiKjtcdw=\ngithub.com/dgraph-io/ristretto v0.1.1 h1:6CWw5tJNgpegArSHpNHJKldNeq03FQCwYvfMVWajOK8=\ngithub.com/dgraph-io/ristretto v0.1.1/go.mod h1:S1GPSBCYCIhmVNfcth17y2zZtQT6wzkzgwUve0VDWWA=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48 h1:fRzb/w+pyskVMQ+UbP35JkH8yB7MYb4q/qhBarqZE6g=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48/go.mod h1:if7Fbed8SFyPtHLHbg49SI7NAdJiC5WIA09pe59rfAA=\ngithub.com/distribution/distribution/v3 v3.0.0-20221208165359-362910506bc2 h1:aBfCb7iqHmDEIp6fBvC/hQUddQfg+3qdYjwzaiP9Hnc=\ngithub.com/distribution/distribution/v3 v3.0.0-20221208165359-362910506bc2/go.mod h1:WHNsWjnIn2V1LYOrME7e8KxSeKunYHsxEm4am0BUtcI=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli v25.0.1+incompatible h1:mFpqnrS6Hsm3v1k7Wa/BO23oz0k121MTbTO1lpcGSkU=\ngithub.com/docker/cli v25.0.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v26.1.5+incompatible h1:NEAxTwEjxV6VbBMBoGG3zPqbiJosIApZjxlbrG9q3/g=\ngithub.com/docker/docker v26.1.5+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.7.0 h1:xtCHsjxogADNZcdv1pKUHXryefjlVRqWqIhk/uXJp0A=\ngithub.com/docker/docker-credential-helpers v0.7.0/go.mod h1:rETQfLdHNT3foU5kuNkFR1R1V12OJRRO5lzt2D1b5X0=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/libtrust v0.0.0-20150114040149-fa567046d9b1 h1:ZClxb8laGDf5arXfYcAtECDFgAgHklGI8CxgjHnXKJ4=\ngithub.com/docker/libtrust v0.0.0-20150114040149-fa567046d9b1/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=\ngithub.com/dominikbraun/graph v0.16.2 h1:EUndsCgHNQDHBdT4Q4M9GBePH3Tt0sV7DDPVWzfbEh4=\ngithub.com/dominikbraun/graph v0.16.2/go.mod h1:yOjYyogZLY1LSG9E33JWZJiq5k83Qy2C6POAuiViluc=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/emicklei/go-restful/v3 v3.12.0 h1:y2DdzBAURM29NFF94q6RaY4vjIH1rtwDapwQtU84iWk=\ngithub.com/emicklei/go-restful/v3 v3.12.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/evanphx/json-patch v4.12.0+incompatible h1:4onqiflcdA9EOZ4RxV643DvftH5pOlLGNtQ5lPWQu84=\ngithub.com/evanphx/json-patch v4.12.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/evanphx/json-patch/v5 v5.9.0 h1:kcBlZQbplgElYIlo/n1hJbls2z/1awpXxpRi0/FOJfg=\ngithub.com/evanphx/json-patch/v5 v5.9.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fortytw2/leaktest v1.3.0 h1:u8491cBMTQ8ft8aeV+adlcytMZylmA5nnwwkRZjI8vw=\ngithub.com/fortytw2/leaktest v1.3.0/go.mod h1:jDsjWgpAGjm2CA7WthBh/CdZYEPF31XHquHwclZch5g=\ngithub.com/foxcpp/go-mockdns v1.1.0 h1:jI0rD8M0wuYAxL7r/ynTrCQQq0BVqfB99Vgk7DlmewI=\ngithub.com/foxcpp/go-mockdns v1.1.0/go.mod h1:IhLeSFGed3mJIAXPH2aiRQB+kqz7oqu8ld2qVbOu7Wk=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-chi/chi/v5 v5.0.8 h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\ngithub.com/go-chi/chi/v5 v5.0.8/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-ini/ini v1.67.0 h1:z6ZrTEZqSWOTyH2FlglNbNgARyHG8oLW9gMELqKr06A=\ngithub.com/go-ini/ini v1.67.0/go.mod h1:ByCAeIL28uOIIG0E3PJtZPDL8WnHpFKFOtgjp+3Ies8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-logr/zapr v1.3.0 h1:XGdV8XW8zdwFiwOA2Dryh1gj2KRQyOOoNmBy4EplIcQ=\ngithub.com/go-logr/zapr v1.3.0/go.mod h1:YKepepNBd1u/oyhd/yQmtjVXmm9uML4IXUgMOwR8/Gg=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.21.0 h1:Rs+Y7hSXT83Jacb7kFyjn4ijOuVGSvOdF2+tg1TRrwQ=\ngithub.com/go-openapi/jsonreference v0.21.0/go.mod h1:LmZmgsrTkVg9LG4EaHeY8cBDslNPMo06cago5JNLkm4=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gobwas/glob v0.2.3 h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=\ngithub.com/gobwas/glob v0.2.3/go.mod h1:d3Ez4x06l9bZtSvzIay5+Yzi0fmZzPgnTbPcKjJAkT8=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.2.1 h1:OptwRhECazUx5ix5TTWC3EZhsZEHWcYWY4FQHTIubm4=\ngithub.com/golang/glog v1.2.1/go.mod h1:6AhwSGph0fcJtXVM/PEHPqZlFeoLxhs7/t5UDAwmO+w=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/gomodule/redigo v1.8.2 h1:H5XSIre1MB5NbPYFp+i1NBbb5qN1W8Y8YAQoAYbkm8k=\ngithub.com/gomodule/redigo v1.8.2/go.mod h1:P9dn9mFrCBvWhGE1wpxx6fgq7BAeLBk+UUUzlpkBYO0=\ngithub.com/google/cel-go v0.17.8 h1:j9m730pMZt1Fc4oKhCLUHfjj6527LuhYcYw0Rl8gqto=\ngithub.com/google/cel-go v0.17.8/go.mod h1:HXZKzB0LXqer5lHHgfWAnlYwJaQBDKMjxjulNQzhwhY=\ngithub.com/google/flatbuffers v1.12.1 h1:MVlul7pQNoDzWRLTw5imwYsl+usrS1TXG2H4jg6ImGw=\ngithub.com/google/flatbuffers v1.12.1/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 h1:k7nVchz72niMH6YLQNvHSdIE7iqsQxK1P41mySCvssg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.13.0 h1:yitjD5f7jQHhyDsnhKEBU52NdvvdSeGzlAnDPT0hH1s=\ngithub.com/googleapis/gax-go/v2 v2.13.0/go.mod h1:Z/fvTZXF8/uw7Xu5GuslPw+bplx6SS338j1Is2S+B7A=\ngithub.com/gorilla/handlers v1.5.1 h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=\ngithub.com/gorilla/handlers v1.5.1/go.mod h1:t8XrUpc4KVXb7HGyJ4/cEnwQiaxrX/hz1Zv/4g96P1Q=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/imdario/mergo v0.3.13 h1:lFzP57bqS/wsqKssCGmtLAb8A0wKjLGrve2q3PPVcBk=\ngithub.com/imdario/mergo v0.3.13/go.mod h1:4lJ1jqUDcsbIECGy0RUJAXNIhg+6ocWgb1ALK2O4oXg=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.1.57 h1:Jzi7ApEIzwEPLHWRcafCN9LZSBbqQpxjt/wpgvg7wcM=\ngithub.com/miekg/dns v1.1.57/go.mod h1:uqRjCRUuEAA6qsOiJvDd+CFo/vW+y5WR6SNmHE55hZk=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/sys/mountinfo v0.6.2 h1:BzJjoreD5BMFNmD9Rus6gdd1pLuecOFPt8wC+Vygl78=\ngithub.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.34.1 h1:EUMJIKUjM8sKjYbtxQI9A4z2o+rruxnzNvpknOXie6k=\ngithub.com/onsi/gomega v1.34.1/go.mod h1:kU1QgUvBDLXBJq618Xvm2LUX6rSAfRaFRTcdOeDLwwY=\ngithub.com/open-policy-agent/cert-controller v0.11.0 h1:zXaXeaS4eRAZXhUH5SxWqky681Y2KWjQv/z3X8iMcaQ=\ngithub.com/open-policy-agent/cert-controller v0.11.0/go.mod h1:456gr2XKHzxDOjxJZUST5rLIX8olrHkBUymy49FZzps=\ngithub.com/open-policy-agent/frameworks/constraint v0.0.0-20241101234656-e78c8abd754a h1:gQtOJ50XFyL2Xh3lDD9zP4KQ2PY4mZKQ9hDcWc81Sp8=\ngithub.com/open-policy-agent/frameworks/constraint v0.0.0-20241101234656-e78c8abd754a/go.mod h1:tI7nc6H6os2UYZRvSm9Y7bq4oMoXqhwA0WfnqKpoAgc=\ngithub.com/open-policy-agent/opa v0.68.0 h1:Jl3U2vXRjwk7JrHmS19U3HZO5qxQRinQbJ2eCJYSqJQ=\ngithub.com/open-policy-agent/opa v0.68.0/go.mod h1:5E5SvaPwTpwt2WM177I9Z3eT7qUpmOGjk1ZdHs+TZ4w=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/phayes/freeport v0.0.0-20220201140144-74d24b5ae9f5 h1:Ii+DKncOVM8Cu1Hc+ETb5K+23HdAMvESYE3ZJ5b5cMI=\ngithub.com/phayes/freeport v0.0.0-20220201140144-74d24b5ae9f5/go.mod h1:iIss55rKnNBTvrwdmkUpLnDpZoAHvWaiq5+iMmen4AE=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stoewer/go-strcase v1.2.0 h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\ngithub.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tchap/go-patricia/v2 v2.3.1 h1:6rQp39lgIYZ+MHmdEq4xzuk1t7OdC35z/xm0BGhTkes=\ngithub.com/tchap/go-patricia/v2 v2.3.1/go.mod h1:VZRHKAb53DLaG+nA9EaYYiaEx6YztwDlLElMsnSHD4k=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/yashtewari/glob-intersection v0.2.0 h1:8iuHdN88yYuCzCdjt0gDe+6bAhUwBeEWqThExu54RFg=\ngithub.com/yashtewari/glob-intersection v0.2.0/go.mod h1:LK7pIC3piUjovexikBbJ26Yml7g8xa5bsjfx2v1fwok=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yvasiyarov/go-metrics v0.0.0-20140926110328-57bccd1ccd43 h1:+lm10QQTNSBd8DVTNGHx7o/IKu9HYDvLMffDhbyLccI=\ngithub.com/yvasiyarov/go-metrics v0.0.0-20140926110328-57bccd1ccd43/go.mod h1:aX5oPXxHm3bOH+xeAttToC8pqch2ScQN/JoXYupl6xs=\ngithub.com/yvasiyarov/gorelic v0.0.0-20141212073537-a9bba5b9ab50 h1:hlE8//ciYMztlGpl/VA+Zm1AcTPHYkHJPbHqE6WJUXE=\ngithub.com/yvasiyarov/gorelic v0.0.0-20141212073537-a9bba5b9ab50/go.mod h1:NUSPSUX/bi6SeDMUh6brw0nXpxHnc96TguQh0+r/ssA=\ngithub.com/yvasiyarov/newrelic_platform_go v0.0.0-20140908184405-b21fdbd4370f h1:ERexzlUfuTvpE74urLSbIQW0Z/6hF9t8U4NsJLaioAY=\ngithub.com/yvasiyarov/newrelic_platform_go v0.0.0-20140908184405-b21fdbd4370f/go.mod h1:GlGEuHIJweS1mbCqG+7vt2nvWLzLLnRHbXz5JKd/Qbg=\ngo.etcd.io/etcd/api/v3 v3.5.10 h1:szRajuUUbLyppkhs9K6BRtjY37l66XQQmw7oZRANE4k=\ngo.etcd.io/etcd/api/v3 v3.5.10/go.mod h1:TidfmT4Uycad3NM/o25fG3J07odo4GBB9hoxaodFCtI=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.10 h1:kfYIdQftBnbAq8pUWFXfpuuxFSKzlmM5cSn76JByiT0=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.10/go.mod h1:DYivfIviIuQ8+/lCq4vcxuseg2P2XbHygkKwFo9fc8U=\ngo.etcd.io/etcd/client/v3 v3.5.10 h1:W9TXNZ+oB3MCd/8UjxHTWK5J9Nquw9fQBLJd5ne5/Ao=\ngo.etcd.io/etcd/client/v3 v3.5.10/go.mod h1:RVeBnDz2PUEZqTpgqwAtUd8nAPf5kjyFyND7P1VkOKc=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/detectors/aws/ec2 v1.21.1 h1:CUYilK1UkIUpdtYrku1Rb6t2e7AJeIcCs37/fTTs+HI=\ngo.opentelemetry.io/contrib/detectors/aws/ec2 v1.21.1/go.mod h1:8X6bRmDQ4PMy7iVK7qor/eHnI00S2+q4BM0ukcMEl0s=\ngo.opentelemetry.io/contrib/detectors/gcp v1.21.1 h1:VLAa8mb2eMu2Iq9pnVhece0Yla2mIq1yKYLUoZ/ifJs=\ngo.opentelemetry.io/contrib/detectors/gcp v1.21.1/go.mod h1:yL1WBcIgLFgqHhuMqmxp6ddaXoNFPeUgk6ATnF4wBhI=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric v0.42.0 h1:ZtfnDL+tUrs1F0Pzfwbg2d59Gru9NCH3bgSHBM6LDwU=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric v0.42.0/go.mod h1:hG4Fj/y8TR/tlEDREo8tWstl9fO9gcFkn4xrx0Io8xU=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v0.42.0 h1:wNMDy/LVGLj2h3p6zg4d0gypKfWKSWI14E1C4smOgl8=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v0.42.0/go.mod h1:YfbDdXAAkemWJK3H/DshvlrxqFB2rtW4rY6ky/3x/H0=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/prometheus v0.40.0 h1:9h6lCssr1j5aYVvWT6oc+ERB6R034zmsHjBRLyxrAR8=\ngo.opentelemetry.io/otel/exporters/prometheus v0.40.0/go.mod h1:5USWZ0ovyQB5CIM3IO3bGRSoDPMXiT3t+15gu8Zo9HQ=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/automaxprocs v1.5.3 h1:kWazyxZUrS3Gs4qUpbwo5kEIMGe/DAvi5Z4tl2NW4j8=\ngo.uber.org/automaxprocs v1.5.3/go.mod h1:eRbA25aqJrxAbsLO0xy5jVwPt7FQnRgjW+efnwa1WM0=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.26.0 h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=\ngo.uber.org/zap v1.26.0/go.mod h1:dtElttAiwGvoJ/vj4IwHBS/gXsEu/pZ50mUIRWuG0so=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.19.0 h1:fEdghXQSo20giMthA7cd28ZC+jts4amQ3YMXiP5oMQ8=\ngolang.org/x/mod v0.19.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=\ngolang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=\ngolang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.23.0 h1:SGsXPZ+2l4JsgaCKkx+FQ9YZ5XEtA1GZYuoDjenLjvg=\ngolang.org/x/tools v0.23.0/go.mod h1:pnu6ufv6vQkll6szChhK3C3L/ruaIv5eBeztNG8wtsI=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngomodules.xyz/jsonpatch/v2 v2.4.0 h1:Ci3iUJyx9UeRx7CeFN8ARgGbkESwJK+KB9lLcWxY/Zw=\ngomodules.xyz/jsonpatch/v2 v2.4.0/go.mod h1:AH3dM2RI6uoBZxn3LVrfvJ3E0/9dG4cSrbuBJT4moAY=\ngoogle.golang.org/api v0.189.0 h1:equMo30LypAkdkLMBqfeIqtyAnlyig1JSZArl4XPwdI=\ngoogle.golang.org/api v0.189.0/go.mod h1:FLWGJKb0hb+pU2j+rJqwbnsF+ym+fQs73rbJ+KAUgy8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240722135656-d784300faade h1:lKFsS7wpngDgSCeFn7MoLy+wBDQZ1UQIJD4UNM1Qvkg=\ngoogle.golang.org/genproto v0.0.0-20240722135656-d784300faade/go.mod h1:FfBgJBJg9GcpPvKIuHSZ/aE1g2ecGL74upMzGZjiGEY=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240722135656-d784300faade h1:WxZOF2yayUHpHSbUE6NMzumUzBxYc3YGwo0YHnbzsJY=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240722135656-d784300faade/go.mod h1:mw8MG/Qz5wfgYr6VqVCiZcHe/GJEfI+oGGDCohaVgB0=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240722135656-d784300faade h1:oCRSWfwGXQsqlVdErcyTt4A93Y8fo0/9D4b1gnI++qo=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240722135656-d784300faade/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.66.3 h1:TWlsh8Mv0QI/1sIbs1W36lqRclxrmF+eFJ4DbI0fuhA=\ngoogle.golang.org/grpc v1.66.3/go.mod h1:s3/l6xSSCURdVfAnL+TqCNMyTDAGN6+lZeVxnZR128Y=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=\ngotest.tools/v3 v3.4.0/go.mod h1:CtbdzLSsqVhDgMtKsx03ird5YTGB3ar27v0u/yKBW5g=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/api v0.30.6 h1:uqRDLnFkmPLorI9D0x1dGXdYeRQMhQHlrHDgZ3/45RE=\nk8s.io/api v0.30.6/go.mod h1:6x759Hj7155pXRKStxzM7TMN9hW0x7WrBr51kuDMSHo=\nk8s.io/apiextensions-apiserver v0.30.6 h1:eXmd0cki9xjpUguN7zaWI8I6wo1utHQj6RWqeBaVmew=\nk8s.io/apiextensions-apiserver v0.30.6/go.mod h1:va7pN44YJJDHrShKhPSL9S5CyTJ8idAmqIARt5wY4j8=\nk8s.io/apimachinery v0.30.6 h1:dlplzGrUL/DiPOVVVjDcT9ZoQBOwYeB6hcFy90veggs=\nk8s.io/apimachinery v0.30.6/go.mod h1:iexa2somDaxdnj7bha06bhb43Zpa6eWH8N8dbqVjTUc=\nk8s.io/apiserver v0.30.6 h1:kMkE/pln4hJpc1OJGa/u8CzpLtr4URbmgkdfw37lzMA=\nk8s.io/apiserver v0.30.6/go.mod h1:kloaQDI0pBfhnHM0vfsgzOkWpTW7Z69rjPWEsMlIUzg=\nk8s.io/client-go v0.30.6 h1:hMo7AUkHy/UqnwPMH+oJvFR9gpvXVfQnsiO+G2fdE30=\nk8s.io/client-go v0.30.6/go.mod h1:DDN89/30A1DfatO+c3ksYMM12kL7a/CZvsBaVjwh33g=\nk8s.io/component-base v0.30.6 h1:t94cw6cQ7bplaS3Y5C/txkUXpaxG+wbgspTmudGUpNs=\nk8s.io/component-base v0.30.6/go.mod h1:GAemfIPE9Zc3bxOmeLPpHKKHzfuMlmTwsAjx/bWaJvQ=\nk8s.io/klog/v2 v2.120.1 h1:QXU6cPEOIslTGvZaXvFWiP9VKyeet3sawzTOvdXb4Vw=\nk8s.io/klog/v2 v2.120.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-aggregator v0.30.3 h1:hy5zfQ7p6BuJgc/XtGp3GBh2MPfOj6b1n3raKKMHOQE=\nk8s.io/kube-aggregator v0.30.3/go.mod h1:2SP0IckvQoOwwZN8lmtWUnTZTgIpwOWvidWtxyqLwuk=\nk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f h1:0LQagt0gDpKqvIkAMPaRGcXawNMouPECM1+F9BVxEaM=\nk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f/go.mod h1:S9tOR0FxgyusSNR+MboCuiDpVWkAifZvaYI1Q2ubgro=\nk8s.io/utils v0.0.0-20240502163921-fe8a2dddb1d0 h1:jgGTlFYnhF1PM1Ax/lAlxUPE+KfCIXHaathvJg1C3ak=\nk8s.io/utils v0.0.0-20240502163921-fe8a2dddb1d0/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\noras.land/oras-go v1.2.5 h1:XpYuAwAb0DfQsunIyMfeET92emK8km3W4yEzZvUbsTo=\noras.land/oras-go v1.2.5/go.mod h1:PuAwRShRZCsZb7g8Ar3jKKQR/2A/qN+pkYxIOd/FAoo=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.29.0 h1:/U5vjBbQn3RChhv7P11uhYvCSm5G2GaIi5AIGBS6r4c=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.29.0/go.mod h1:z7+wmGM2dfIiLRfrC6jb5kV2Mq/sK1ZP303cxzkV5Y4=\nsigs.k8s.io/controller-runtime v0.18.5 h1:nTHio/W+Q4aBlQMgbnC5hZb4IjIidyrizMai9P6n4Rk=\nsigs.k8s.io/controller-runtime v0.18.5/go.mod h1:TVoGrfdpbA9VRFaRnKgk9P5/atA0pMwq+f+msb9M8Sg=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/release-utils v0.7.7 h1:JKDOvhCk6zW8ipEOkpTGDH/mW3TI+XqtPp16aaQ79FU=\nsigs.k8s.io/release-utils v0.7.7/go.mod h1:iU7DGVNi3umZJ8q6aHyUFzsDUIaYwNnNKGHo3YE5E3s=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "helm_migrate.sh",
          "type": "blob",
          "size": 3.578125,
          "content": "#!/bin/bash\n\n# Delete the Helm release secret but keeps the resources\n# Updates the annotations so the resources can be imported by re-installed chart.\n\n\nRELEASE_NAMESPACE=${RELEASE_NAMESPACE:-default}\nRELEASE_NAME=${RELEASE_NAME:-gatekeeper}\nNEW_NAMESPACE=${NEW_NAMESPACE:-gatekeeper-system}\n\n\n\nkubectl -n ${RELEASE_NAMESPACE}  delete secrets --field-selector type=helm.sh/release.v1 -l name=${RELEASE_NAME} || true\nkubectl annotate --overwrite psp gatekeeper-admin meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite psp gatekeeper-admin meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite clusterrole gatekeeper-manager-role meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite clusterrole gatekeeper-manager-role meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite clusterrolebinding gatekeeper-manager-rolebinding meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite clusterrolebinding gatekeeper-manager-rolebinding meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite ValidatingWebhookConfiguration gatekeeper-validating-webhook-configuration meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite ValidatingWebhookConfiguration gatekeeper-validating-webhook-configuration meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system sa gatekeeper-admin meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system sa gatekeeper-admin meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system secret gatekeeper-webhook-server-cert meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system secret gatekeeper-webhook-server-cert meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system role gatekeeper-manager-role meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system role gatekeeper-manager-role meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system rolebinding gatekeeper-manager-rolebinding meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system rolebinding gatekeeper-manager-rolebinding meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system service gatekeeper-webhook-service meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system service gatekeeper-webhook-service meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system deployment gatekeeper-audit meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system deployment gatekeeper-audit meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system deployment gatekeeper-controller-manager meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system deployment gatekeeper-controller-manager meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n\nkubectl annotate --overwrite -n gatekeeper-system PodDisruptionBudget gatekeeper-controller-manager meta.helm.sh/release-name=${RELEASE_NAME} || true\nkubectl annotate --overwrite -n gatekeeper-system PodDisruptionBudget gatekeeper-controller-manager meta.helm.sh/release-namespace=${NEW_NAMESPACE} || true\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 20.5263671875,
          "content": "/*\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport (\n\t\"context\"\n\t\"crypto/tls\"\n\t\"crypto/x509\"\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t_ \"net/http/pprof\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t\"github.com/go-logr/zapr\"\n\t\"github.com/open-policy-agent/cert-controller/pkg/rotator\"\n\tconstraintclient \"github.com/open-policy-agent/frameworks/constraint/pkg/client\"\n\t\"github.com/open-policy-agent/frameworks/constraint/pkg/client/drivers/rego\"\n\tframeworksexternaldata \"github.com/open-policy-agent/frameworks/constraint/pkg/externaldata\"\n\tapi \"github.com/open-policy-agent/gatekeeper/v3/apis\"\n\tconfigv1alpha1 \"github.com/open-policy-agent/gatekeeper/v3/apis/config/v1alpha1\"\n\texpansionv1alpha1 \"github.com/open-policy-agent/gatekeeper/v3/apis/expansion/v1alpha1\"\n\texpansionv1beta1 \"github.com/open-policy-agent/gatekeeper/v3/apis/expansion/v1beta1\"\n\tmutationsv1alpha1 \"github.com/open-policy-agent/gatekeeper/v3/apis/mutations/v1alpha1\"\n\tmutationsv1beta1 \"github.com/open-policy-agent/gatekeeper/v3/apis/mutations/v1beta1\"\n\tstatusv1beta1 \"github.com/open-policy-agent/gatekeeper/v3/apis/status/v1beta1\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/audit\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/cachemanager\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/controller\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/controller/config/process\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/drivers/k8scel\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/expansion\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/externaldata\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/metrics\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/mutation\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/operations\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/pubsub\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/readiness\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/readiness/pruner\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/syncutil\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/target\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/upgrade\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/util\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/version\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/watch\"\n\t\"github.com/open-policy-agent/gatekeeper/v3/pkg/webhook\"\n\t_ \"go.uber.org/automaxprocs\" // set GOMAXPROCS to the number of container cores, if known.\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n\t\"k8s.io/apimachinery/pkg/runtime\"\n\t\"k8s.io/apimachinery/pkg/types\"\n\tclientgoscheme \"k8s.io/client-go/kubernetes/scheme\"\n\t_ \"k8s.io/client-go/plugin/pkg/client/auth/gcp\"\n\t\"k8s.io/klog/v2\"\n\tctrl \"sigs.k8s.io/controller-runtime\"\n\t\"sigs.k8s.io/controller-runtime/pkg/certwatcher\"\n\t\"sigs.k8s.io/controller-runtime/pkg/client/apiutil\"\n\t\"sigs.k8s.io/controller-runtime/pkg/event\"\n\t\"sigs.k8s.io/controller-runtime/pkg/healthz\"\n\tcrzap \"sigs.k8s.io/controller-runtime/pkg/log/zap\"\n\tmetricsserver \"sigs.k8s.io/controller-runtime/pkg/metrics/server\"\n\tcrWebhook \"sigs.k8s.io/controller-runtime/pkg/webhook\"\n)\n\nconst (\n\tsecretName     = \"gatekeeper-webhook-server-cert\"\n\tcaName         = \"gatekeeper-ca\"\n\tcaOrganization = \"gatekeeper\"\n\tcertName       = \"tls.crt\"\n\tkeyName        = \"tls.key\"\n)\n\nvar (\n\tscheme           = runtime.NewScheme()\n\tsetupLog         = ctrl.Log.WithName(\"setup\")\n\tlogLevelEncoders = map[string]zapcore.LevelEncoder{\n\t\t\"lower\":        zapcore.LowercaseLevelEncoder,\n\t\t\"capital\":      zapcore.CapitalLevelEncoder,\n\t\t\"color\":        zapcore.LowercaseColorLevelEncoder,\n\t\t\"capitalcolor\": zapcore.CapitalColorLevelEncoder,\n\t}\n)\n\nvar (\n\tlogFile                              = flag.String(\"log-file\", \"\", \"Log to file, if specified. Default is to log to stderr.\")\n\tlogLevel                             = flag.String(\"log-level\", \"INFO\", \"Minimum log level. For example, DEBUG, INFO, WARNING, ERROR. Defaulted to INFO if unspecified.\")\n\tlogLevelKey                          = flag.String(\"log-level-key\", \"level\", \"JSON key for the log level field, defaults to `level`\")\n\tlogLevelEncoder                      = flag.String(\"log-level-encoder\", \"lower\", \"Encoder for the value of the log level field. Valid values: [`lower`, `capital`, `color`, `capitalcolor`], default: `lower`\")\n\thealthAddr                           = flag.String(\"health-addr\", \":9090\", \"The address to which the health endpoint binds.\")\n\tmetricsAddr                          = flag.String(\"metrics-addr\", \"0\", \"The address the metric endpoint binds to.\")\n\tport                                 = flag.Int(\"port\", 443, \"port for the server. defaulted to 443 if unspecified \")\n\thost                                 = flag.String(\"host\", \"\", \"the host address the webhook server listens on. defaults to all addresses.\")\n\tcertDir                              = flag.String(\"cert-dir\", \"/certs\", \"The directory where certs are stored, defaults to /certs\")\n\tdisableCertRotation                  = flag.Bool(\"disable-cert-rotation\", false, \"disable automatic generation and rotation of webhook TLS certificates/keys\")\n\tenableProfile                        = flag.Bool(\"enable-pprof\", false, \"enable pprof profiling\")\n\tprofilePort                          = flag.Int(\"pprof-port\", 6060, \"port for pprof profiling. defaulted to 6060 if unspecified\")\n\tcertServiceName                      = flag.String(\"cert-service-name\", \"gatekeeper-webhook-service\", \"The service name used to generate the TLS cert's hostname. Defaults to gatekeeper-webhook-service\")\n\tenableTLSHealthcheck                 = flag.Bool(\"enable-tls-healthcheck\", false, \"enable probing webhook API with certificate stored in certDir\")\n\tdisabledBuiltins                     = util.NewFlagSet()\n\tenableK8sCel                         = flag.Bool(\"enable-k8s-native-validation\", true, \"enable the validating admission policy driver\")\n\texternaldataProviderResponseCacheTTL = flag.Duration(\"external-data-provider-response-cache-ttl\", 3*time.Minute, \"TTL for the external data provider response cache. Specify the duration in 'h', 'm', or 's' for hours, minutes, or seconds respectively. Defaults to 3 minutes if unspecified. Setting the TTL to 0 disables the cache.\")\n)\n\nfunc init() {\n\t_ = clientgoscheme.AddToScheme(scheme)\n\n\t_ = api.AddToScheme(scheme)\n\n\t_ = configv1alpha1.AddToScheme(scheme)\n\t_ = statusv1beta1.AddToScheme(scheme)\n\t_ = mutationsv1alpha1.AddToScheme(scheme)\n\t_ = mutationsv1beta1.AddToScheme(scheme)\n\t_ = expansionv1alpha1.AddToScheme(scheme)\n\t_ = expansionv1beta1.AddToScheme(scheme)\n\n\t// +kubebuilder:scaffold:scheme\n\tflag.Var(disabledBuiltins, \"disable-opa-builtin\", \"disable opa built-in function, this flag can be declared more than once.\")\n}\n\nfunc main() {\n\tos.Exit(innerMain())\n}\n\nfunc innerMain() int {\n\tflag.Parse()\n\tencoder, ok := logLevelEncoders[*logLevelEncoder]\n\tif !ok {\n\t\tsetupLog.Error(fmt.Errorf(\"invalid log level encoder: %v\", *logLevelEncoder), \"Invalid log level encoder\")\n\t\treturn 1\n\t}\n\n\tif *enableProfile {\n\t\tsetupLog.Info(fmt.Sprintf(\"Starting profiling on port %d\", *profilePort))\n\t\tgo func() {\n\t\t\taddr := fmt.Sprintf(\"%s:%d\", \"localhost\", *profilePort)\n\t\t\tserver := http.Server{\n\t\t\t\tAddr:        addr,\n\t\t\t\tReadTimeout: 5 * time.Second,\n\t\t\t}\n\t\t\tsetupLog.Error(server.ListenAndServe(), \"unable to start profiling server\")\n\t\t}()\n\t}\n\n\tvar logStream io.Writer\n\tif *logFile != \"\" {\n\t\thandle, err := os.OpenFile(*logFile, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0o644)\n\t\tif err != nil {\n\t\t\tsetupLog.Error(fmt.Errorf(\"unable to open log file %s: %w\", *logFile, err), \"error initializing logging\")\n\t\t\treturn 1\n\t\t}\n\t\tdefer handle.Close()\n\t\tlogStream = handle\n\t}\n\n\tswitch *logLevel {\n\tcase \"DEBUG\":\n\t\teCfg := zap.NewDevelopmentEncoderConfig()\n\t\teCfg.LevelKey = *logLevelKey\n\t\teCfg.EncodeLevel = encoder\n\t\topts := []crzap.Opts{\n\t\t\tcrzap.UseDevMode(true),\n\t\t\tcrzap.Encoder(zapcore.NewConsoleEncoder(eCfg)),\n\t\t}\n\t\tif logStream != nil {\n\t\t\topts = append(opts, crzap.WriteTo(logStream))\n\t\t}\n\t\tlogger := crzap.New(opts...)\n\t\tctrl.SetLogger(logger)\n\t\tklog.SetLogger(logger)\n\tcase \"WARNING\", \"ERROR\":\n\t\tsetLoggerForProduction(encoder, logStream)\n\tcase \"INFO\":\n\t\tfallthrough\n\tdefault:\n\t\teCfg := zap.NewProductionEncoderConfig()\n\t\teCfg.LevelKey = *logLevelKey\n\t\teCfg.EncodeLevel = encoder\n\t\topts := []crzap.Opts{\n\t\t\tcrzap.UseDevMode(false),\n\t\t\tcrzap.Encoder(zapcore.NewJSONEncoder(eCfg)),\n\t\t}\n\t\tif logStream != nil {\n\t\t\topts = append(opts, crzap.WriteTo(logStream))\n\t\t}\n\t\tlogger := crzap.New(opts...)\n\t\tctrl.SetLogger(logger)\n\t\tklog.SetLogger(logger)\n\t}\n\n\tif *mutation.DeprecatedMutationEnabled {\n\t\tsetupLog.Error(errors.New(\"--enable-mutation flag is deprecated\"), \"use of deprecated flag\")\n\t}\n\n\tconfig := ctrl.GetConfigOrDie()\n\tconfig.UserAgent = version.GetUserAgent(\"gatekeeper\")\n\tsetupLog.Info(\"setting up manager\", \"user agent\", config.UserAgent)\n\n\tvar webhooks []rotator.WebhookInfo\n\twebhooks = webhook.AppendValidationWebhookIfEnabled(webhooks)\n\twebhooks = webhook.AppendMutationWebhookIfEnabled(webhooks)\n\n\t// Disable high-cardinality REST client metrics (rest_client_request_latency).\n\t// Must be called before ctrl.NewManager!\n\tmetrics.DisableRESTClientMetrics()\n\n\ttlsVersion, err := webhook.ParseTLSVersion(*webhook.TLSMinVersion)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to parse TLS version\")\n\t\treturn 1\n\t}\n\tserverOpts := crWebhook.Options{\n\t\tHost:    *host,\n\t\tPort:    *port,\n\t\tCertDir: *certDir,\n\t\tTLSOpts: []func(c *tls.Config){func(c *tls.Config) { c.MinVersion = tlsVersion }},\n\t}\n\tif *webhook.ClientCAName != \"\" {\n\t\tserverOpts.ClientCAName = *webhook.ClientCAName\n\t\tserverOpts.TLSOpts = []func(*tls.Config){\n\t\t\tfunc(cfg *tls.Config) {\n\t\t\t\tcfg.VerifyConnection = webhook.GetCertNameVerifier()\n\t\t\t},\n\t\t}\n\t}\n\tmgr, err := ctrl.NewManager(config, ctrl.Options{\n\t\tScheme: scheme,\n\t\tMetrics: metricsserver.Options{\n\t\t\tBindAddress: *metricsAddr,\n\t\t},\n\t\tLeaderElection:         false,\n\t\tWebhookServer:          crWebhook.NewServer(serverOpts),\n\t\tHealthProbeBindAddress: *healthAddr,\n\t\tMapperProvider:         apiutil.NewDynamicRESTMapper,\n\t})\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to start manager\")\n\t\treturn 1\n\t}\n\n\t// Make sure certs are generated and valid if cert rotation is enabled.\n\tsetupFinished := make(chan struct{})\n\tif !*disableCertRotation {\n\t\tsetupLog.Info(\"setting up cert rotation\")\n\n\t\tkeyUsages := []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth}\n\t\tif *externaldata.ExternalDataEnabled {\n\t\t\tkeyUsages = append(keyUsages, x509.ExtKeyUsageClientAuth)\n\t\t}\n\n\t\tif err := rotator.AddRotator(mgr, &rotator.CertRotator{\n\t\t\tSecretKey: types.NamespacedName{\n\t\t\t\tNamespace: util.GetNamespace(),\n\t\t\t\tName:      secretName,\n\t\t\t},\n\t\t\tCertDir:        *certDir,\n\t\t\tCAName:         caName,\n\t\t\tCAOrganization: caOrganization,\n\t\t\tDNSName:        fmt.Sprintf(\"%s.%s.svc\", *certServiceName, util.GetNamespace()),\n\t\t\tIsReady:        setupFinished,\n\t\t\tWebhooks:       webhooks,\n\t\t\tExtKeyUsages:   &keyUsages,\n\t\t}); err != nil {\n\t\t\tsetupLog.Error(err, \"unable to set up cert rotation\")\n\t\t\treturn 1\n\t\t}\n\t} else {\n\t\tclose(setupFinished)\n\t}\n\n\t// ControllerSwitch will be used to disable controllers during our teardown process,\n\t// avoiding conflicts in finalizer cleanup.\n\tsw := watch.NewSwitch()\n\n\t// Setup tracker and register readiness probe.\n\ttracker, err := readiness.SetupTracker(mgr, mutation.Enabled(), *externaldata.ExternalDataEnabled, *expansion.ExpansionEnabled)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to register readiness tracker\")\n\t\treturn 1\n\t}\n\n\t// +kubebuilder:scaffold:builder\n\n\tif err := mgr.AddHealthzCheck(\"default\", healthz.Ping); err != nil {\n\t\tsetupLog.Error(err, \"unable to create health check\")\n\t\treturn 1\n\t}\n\n\t// only setup healthcheck when flag is set and available webhook count > 0\n\tif len(webhooks) > 0 && *enableTLSHealthcheck {\n\t\ttlsChecker := webhook.NewTLSChecker(*certDir, *port)\n\t\tsetupLog.Info(\"setting up TLS healthcheck probe\")\n\t\tif err := mgr.AddHealthzCheck(\"tls-check\", tlsChecker); err != nil {\n\t\t\tsetupLog.Error(err, \"unable to create tls health check\")\n\t\t\treturn 1\n\t\t}\n\t}\n\n\t// Setup controllers asynchronously, they will block for certificate generation if needed.\n\tsetupErr := make(chan error)\n\tctx := ctrl.SetupSignalHandler()\n\tgo func() {\n\t\tsetupErr <- setupControllers(ctx, mgr, sw, tracker, setupFinished)\n\t}()\n\n\tsetupLog.Info(\"starting manager\")\n\tmgrErr := make(chan error)\n\tgo func() {\n\t\tif err := mgr.Start(ctx); err != nil {\n\t\t\tsetupLog.Error(err, \"problem running manager\")\n\t\t\tmgrErr <- err\n\t\t}\n\t\tclose(mgrErr)\n\t}()\n\n\t// block until either setupControllers or mgr has an error, or mgr exits.\n\t// end after two events (one per goroutine) to guard against deadlock.\n\thadError := false\nblockingLoop:\n\tfor i := 0; i < 2; i++ {\n\t\tselect {\n\t\tcase err := <-setupErr:\n\t\t\tif err != nil {\n\t\t\t\thadError = true\n\t\t\t\tbreak blockingLoop\n\t\t\t}\n\t\tcase err := <-mgrErr:\n\t\t\tif err != nil {\n\t\t\t\thadError = true\n\t\t\t}\n\t\t\t// if manager has returned, we should exit the program\n\t\t\tbreak blockingLoop\n\t\t}\n\t}\n\n\t// Manager stops controllers asynchronously.\n\t// Instead, we use ControllerSwitch to synchronously prevent them from doing more work.\n\t// This can be removed when finalizer and status teardown is removed.\n\tsetupLog.Info(\"disabling controllers...\")\n\tsw.Stop()\n\n\tif hadError {\n\t\treturn 1\n\t}\n\treturn 0\n}\n\nfunc setupControllers(ctx context.Context, mgr ctrl.Manager, sw *watch.ControllerSwitch, tracker *readiness.Tracker, setupFinished chan struct{}) error {\n\t// Block until the setup (certificate generation) finishes.\n\t<-setupFinished\n\n\tvar providerCache *frameworksexternaldata.ProviderCache\n\targs := []rego.Arg{rego.Tracing(false), rego.DisableBuiltins(disabledBuiltins.ToSlice()...)}\n\tmutationOpts := mutation.SystemOpts{Reporter: mutation.NewStatsReporter()}\n\tif *externaldata.ExternalDataEnabled {\n\t\tproviderCache = frameworksexternaldata.NewCache()\n\t\targs = append(args, rego.AddExternalDataProviderCache(providerCache))\n\t\tmutationOpts.ProviderCache = providerCache\n\n\t\tswitch {\n\t\tcase *externaldataProviderResponseCacheTTL > 0:\n\t\t\tproviderResponseCache := frameworksexternaldata.NewProviderResponseCache(ctx, *externaldataProviderResponseCacheTTL)\n\t\t\targs = append(args, rego.AddExternalDataProviderResponseCache(providerResponseCache))\n\t\tcase *externaldataProviderResponseCacheTTL == 0:\n\t\t\tsetupLog.Info(\"external data provider response cache is disabled\")\n\t\tdefault:\n\t\t\terr := fmt.Errorf(\"invalid value for external-data-provider-response-cache-ttl: %d\", *externaldataProviderResponseCacheTTL)\n\t\t\tsetupLog.Error(err, \"unable to create external data provider response cache\")\n\t\t\treturn err\n\t\t}\n\n\t\tcertFile := filepath.Join(*certDir, certName)\n\t\tkeyFile := filepath.Join(*certDir, keyName)\n\n\t\t// certWatcher is used to watch for changes to Gatekeeper's certificate and key files.\n\t\tcertWatcher, err := certwatcher.New(certFile, keyFile)\n\t\tif err != nil {\n\t\t\tsetupLog.Error(err, \"unable to create client cert watcher\")\n\t\t\treturn err\n\t\t}\n\n\t\tsetupLog.Info(\"setting up client cert watcher\")\n\t\tif err := mgr.Add(certWatcher); err != nil {\n\t\t\tsetupLog.Error(err, \"unable to register client cert watcher\")\n\t\t\treturn err\n\t\t}\n\n\t\t// register the client cert watcher to the driver\n\t\targs = append(args, rego.EnableExternalDataClientAuth(), rego.AddExternalDataClientCertWatcher(certWatcher))\n\n\t\t// register the client cert watcher to the mutation system\n\t\tmutationOpts.ClientCertWatcher = certWatcher\n\t}\n\n\tcfArgs := []constraintclient.Opt{constraintclient.Targets(&target.K8sValidationTarget{})}\n\n\tif *enableK8sCel {\n\t\tk8sDriver, err := k8scel.New()\n\t\tif err != nil {\n\t\t\tsetupLog.Error(err, \"unable to set up K8s native driver\")\n\t\t\treturn err\n\t\t}\n\t\tcfArgs = append(cfArgs, constraintclient.Driver(k8sDriver))\n\t}\n\n\tdriver, err := rego.New(args...)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to set up Driver\")\n\t\treturn err\n\t}\n\tcfArgs = append(cfArgs, constraintclient.Driver(driver))\n\n\teps := []string{}\n\tif operations.IsAssigned(operations.Audit) {\n\t\teps = append(eps, util.AuditEnforcementPoint)\n\t}\n\tif operations.IsAssigned(operations.Webhook) {\n\t\teps = append(eps, util.WebhookEnforcementPoint)\n\t}\n\n\tcfArgs = append(cfArgs, constraintclient.EnforcementPoints(eps...))\n\n\tclient, err := constraintclient.NewClient(cfArgs...)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to set up OPA client\")\n\t\treturn err\n\t}\n\n\tmutationSystem := mutation.NewSystem(mutationOpts)\n\texpansionSystem := expansion.NewSystem(mutationSystem)\n\tpubsubSystem := pubsub.NewSystem()\n\n\tc := mgr.GetCache()\n\tdc, ok := c.(watch.RemovableCache)\n\tif !ok {\n\t\terr := fmt.Errorf(\"expected dynamic cache, got: %T\", c)\n\t\tsetupLog.Error(err, \"fetching dynamic cache\")\n\t\treturn err\n\t}\n\n\tsetupLog.Info(\"setting up metrics\")\n\tif err := metrics.AddToManager(mgr); err != nil {\n\t\tsetupLog.Error(err, \"unable to register metrics with the manager\")\n\t\treturn err\n\t}\n\n\twm, err := watch.New(dc)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to create watch manager\")\n\t\treturn err\n\t}\n\tif err := mgr.Add(wm); err != nil {\n\t\tsetupLog.Error(err, \"unable to register watch manager with the manager\")\n\t\treturn err\n\t}\n\n\t// processExcluder is used for namespace exclusion for specified processes in config\n\tprocessExcluder := process.Get()\n\n\t// Setup all Controllers\n\tsetupLog.Info(\"setting up controllers\")\n\n\t// Events ch will be used to receive events from dynamic watches registered\n\t// via the registrar below.\n\tevents := make(chan event.GenericEvent, 1024)\n\treg, err := wm.NewRegistrar(\n\t\tcachemanager.RegistrarName,\n\t\tevents)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to set up watch registrar for cache manager\")\n\t\treturn err\n\t}\n\n\tsyncMetricsCache := syncutil.NewMetricsCache()\n\tcm, err := cachemanager.NewCacheManager(&cachemanager.Config{\n\t\tCfClient:         client,\n\t\tSyncMetricsCache: syncMetricsCache,\n\t\tTracker:          tracker,\n\t\tProcessExcluder:  processExcluder,\n\t\tRegistrar:        reg,\n\t\tReader:           mgr.GetCache(),\n\t})\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to create cache manager\")\n\t\treturn err\n\t}\n\n\terr = mgr.Add(pruner.NewExpectationsPruner(cm, tracker))\n\tif err != nil {\n\t\tsetupLog.Error(err, \"adding expectations pruner to manager\")\n\t\treturn err\n\t}\n\n\topts := controller.Dependencies{\n\t\tCFClient:         client,\n\t\tWatchManger:      wm,\n\t\tSyncEventsCh:     events,\n\t\tCacheMgr:         cm,\n\t\tControllerSwitch: sw,\n\t\tTracker:          tracker,\n\t\tProcessExcluder:  processExcluder,\n\t\tMutationSystem:   mutationSystem,\n\t\tExpansionSystem:  expansionSystem,\n\t\tProviderCache:    providerCache,\n\t\tPubsubSystem:     pubsubSystem,\n\t}\n\n\tif err := controller.AddToManager(mgr, &opts); err != nil {\n\t\tsetupLog.Error(err, \"unable to register controllers with the manager\")\n\t\treturn err\n\t}\n\n\tif operations.IsAssigned(operations.Webhook) || operations.IsAssigned(operations.MutationWebhook) {\n\t\tsetupLog.Info(\"setting up webhooks\")\n\t\twebhookDeps := webhook.Dependencies{\n\t\t\tOpaClient:       client,\n\t\t\tProcessExcluder: processExcluder,\n\t\t\tMutationSystem:  mutationSystem,\n\t\t\tExpansionSystem: expansionSystem,\n\t\t}\n\t\tif err := webhook.AddToManager(mgr, webhookDeps); err != nil {\n\t\t\tsetupLog.Error(err, \"unable to register webhooks with the manager\")\n\t\t\treturn err\n\t\t}\n\t}\n\n\tif operations.IsAssigned(operations.Audit) {\n\t\tsetupLog.Info(\"setting up audit\")\n\t\tauditCache := audit.NewAuditCacheLister(mgr.GetCache(), cm)\n\t\tauditDeps := audit.Dependencies{\n\t\t\tClient:          client,\n\t\t\tProcessExcluder: processExcluder,\n\t\t\tCacheLister:     auditCache,\n\t\t\tExpansionSystem: expansionSystem,\n\t\t\tPubSubSystem:    pubsubSystem,\n\t\t}\n\t\tif err := audit.AddToManager(mgr, &auditDeps); err != nil {\n\t\t\tsetupLog.Error(err, \"unable to register audit with the manager\")\n\t\t\treturn err\n\t\t}\n\t}\n\n\tsetupLog.Info(\"setting up upgrade\")\n\tif err := upgrade.AddToManager(mgr); err != nil {\n\t\tsetupLog.Error(err, \"unable to register upgrade with the manager\")\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc setLoggerForProduction(encoder zapcore.LevelEncoder, dest io.Writer) {\n\tsink := zapcore.AddSync(os.Stderr)\n\tif dest != nil {\n\t\tsink = zapcore.AddSync(dest)\n\t}\n\tvar opts []zap.Option\n\tencCfg := zap.NewProductionEncoderConfig()\n\tencCfg.LevelKey = *logLevelKey\n\tencCfg.EncodeLevel = encoder\n\tenc := zapcore.NewJSONEncoder(encCfg)\n\tlvl := zap.NewAtomicLevelAt(zap.WarnLevel)\n\topts = append(opts, zap.AddStacktrace(zap.ErrorLevel),\n\t\tzap.WrapCore(func(core zapcore.Core) zapcore.Core {\n\t\t\treturn zapcore.NewSamplerWithOptions(core, time.Second, 100, 100)\n\t\t}),\n\t\tzap.AddCallerSkip(1), zap.ErrorOutput(sink))\n\tzlog := zap.New(zapcore.NewCore(&crzap.KubeAwareEncoder{Encoder: enc, Verbose: false}, sink, lvl))\n\tzlog = zlog.WithOptions(opts...)\n\tnewlogger := zapr.NewLogger(zlog)\n\tctrl.SetLogger(newlogger)\n\tklog.SetLogger(newlogger)\n}\n"
        },
        {
          "name": "manifest_staging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}