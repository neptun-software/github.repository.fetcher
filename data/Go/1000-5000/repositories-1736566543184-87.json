{
  "metadata": {
    "timestamp": 1736566543184,
    "page": 87,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shomali11/go-interview",
      "stars": 4621,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": ".idea/\n.vscode/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "language: go\n\ngo:\n  - 1.x"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2017 Raed Shomali\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8408203125,
          "content": "# go-interview [![Build Status](https://travis-ci.com/shomali11/go-interview.svg?branch=master)](https://travis-ci.com/shomali11/go-interview) [![Go Report Card](https://goreportcard.com/badge/github.com/shomali11/go-interview)](https://goreportcard.com/report/github.com/shomali11/go-interview) [![GoDoc](https://godoc.org/github.com/shomali11/go-interview?status.svg)](https://godoc.org/github.com/shomali11/go-interview) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nCollection of Technical Interview Questions solved with Go\n\n* [Algorithms](https://github.com/shomali11/go-interview/tree/master/algorithms)\n  * [A Star](https://github.com/shomali11/go-interview/tree/master/algorithms/astar)\n* [Datastructures](https://github.com/shomali11/go-interview/tree/master/datastructures)\n  * [Linked Lists](https://github.com/shomali11/go-interview/tree/master/datastructures/linkedlists)\n    * [Doubly Linked List](https://github.com/shomali11/go-interview/tree/master/datastructures/linkedlists/doublylinkedlists)\n    * [Singly Linked List](https://github.com/shomali11/go-interview/tree/master/datastructures/linkedlists/singlylinkedlists)\n  * [Maps](https://github.com/shomali11/go-interview/tree/master/datastructures/maps)\n    * [Hash Multi Maps](https://github.com/shomali11/go-interview/tree/master/datastructures/maps/hashmultimaps)\n    * [LRU Caches](https://github.com/shomali11/go-interview/tree/master/datastructures/maps/lrucaches)\n  * [Trees](https://github.com/shomali11/go-interview/tree/master/datastructures/trees)\n  * [Priority Queues](https://github.com/shomali11/go-interview/tree/master/datastructures/priorityqueues)\n  * [Queues](https://github.com/shomali11/go-interview/tree/master/datastructures/queues)\n  * [Sets](https://github.com/shomali11/go-interview/tree/master/datastructures/sets)\n    * [Hash Multi Sets](https://github.com/shomali11/go-interview/tree/master/datastructures/sets/hashmultisets)\n    * [Hash Sets](https://github.com/shomali11/go-interview/tree/master/datastructures/sets/hashsets)\n  * [Stacks](https://github.com/shomali11/go-interview/tree/master/datastructures/stacks)\n    * [Linked List Stacks](https://github.com/shomali11/go-interview/tree/master/datastructures/stacks/linkedliststacks)\n    * [Min/Max Stacks](https://github.com/shomali11/go-interview/tree/master/datastructures/stacks/minmaxstacks)\n    * [Slice Stacks](https://github.com/shomali11/go-interview/tree/master/datastructures/stacks/slicestacks)\n* [Evaluations](https://github.com/shomali11/go-interview/tree/master/evaluations)\n  * [Postfix](https://github.com/shomali11/go-interview/tree/master/evaluations/postfixes)\n  * [Repeating Fractions](https://github.com/shomali11/go-interview/tree/master/evaluations/repeatingfractions)\n* [Lists](https://github.com/shomali11/go-interview/tree/master/lists)\n  * [Detect Cycle](https://github.com/shomali11/go-interview/tree/master/lists/detectcycles)\n  * [Detect Intersection](https://github.com/shomali11/go-interview/tree/master/lists/detectintersections)\n  * [Reverse List](https://github.com/shomali11/go-interview/tree/master/lists/reverses)\n* [Numbers](https://github.com/shomali11/go-interview/tree/master/numbers)\n  * [Armstrong Number](https://github.com/shomali11/go-interview/tree/master/numbers/armstrongs)\n  * [Base Conversions](https://github.com/shomali11/go-interview/tree/master/numbers/bases)\n  * [Count Digits](https://github.com/shomali11/go-interview/tree/master/numbers/countdigits)\n  * [Count Primes](https://github.com/shomali11/go-interview/tree/master/numbers/countprimes)\n  * [Excel Column Conversions](https://github.com/shomali11/go-interview/tree/master/numbers/excels)\n  * [Fibonacci Number](https://github.com/shomali11/go-interview/tree/master/numbers/fibonaccis)\n  * [Leap Years](https://github.com/shomali11/go-interview/tree/master/numbers/leapyears)\n  * [Palindromes](https://github.com/shomali11/go-interview/tree/master/numbers/palindromes)\n  * [Perfect Number](https://github.com/shomali11/go-interview/tree/master/numbers/perfects)\n  * [Power Function](https://github.com/shomali11/go-interview/tree/master/numbers/powers)\n  * [Prime Number](https://github.com/shomali11/go-interview/tree/master/numbers/primes)\n  * [Reverse](https://github.com/shomali11/go-interview/tree/master/numbers/reverses)\n* [Stacks](https://github.com/shomali11/go-interview/tree/master/stacks)\n  * [Balanced Parantheses](https://github.com/shomali11/go-interview/tree/master/stacks/balancedparantheses)\n* [Slices](https://github.com/shomali11/go-interview/tree/master/slices)\n  * [Duplicates](https://github.com/shomali11/go-interview/tree/master/slices/duplicates)\n  * [Group Anagrams](https://github.com/shomali11/go-interview/tree/master/slices/groupanagrams)\n  * [Min Meeting Rooms](https://github.com/shomali11/go-interview/tree/master/slices/minmeetingrooms)\n  * [Rotations](https://github.com/shomali11/go-interview/tree/master/slices/rotations)\n    * [Count Rotations](https://github.com/shomali11/go-interview/tree/master/slices/rotations/countrotations)\n    * [Minimum in Rotated Array](https://github.com/shomali11/go-interview/tree/master/slices/rotations/minrotations)\n* [Streams](https://github.com/shomali11/go-interview/tree/master/streams)\n  * [Moving Average](https://github.com/shomali11/go-interview/tree/master/streams/movingaverages)\n  * [Running Average](https://github.com/shomali11/go-interview/tree/master/streams/runningaverages)\n  * [Running Median](https://github.com/shomali11/go-interview/tree/master/streams/runningmedians)\n* [Strings](https://github.com/shomali11/go-interview/tree/master/strings)\n  * [Add Binary Strings](https://github.com/shomali11/go-interview/tree/master/strings/addbinaries)\n  * [Palindromes](https://github.com/shomali11/go-interview/tree/master/strings/palindromes)\n    * [Palindrome Sentences](https://github.com/shomali11/go-interview/tree/master/strings/palindromes/palindromesentences)\n    * [Palindrome Strings](https://github.com/shomali11/go-interview/tree/master/strings/palindromes/palindromestrings)\n  * [Reverses](https://github.com/shomali11/go-interview/tree/master/strings/reverses)\n    * [Reverse Sentences](https://github.com/shomali11/go-interview/tree/master/strings/reverses/reversesentences)\n    * [Reverse Strings](https://github.com/shomali11/go-interview/tree/master/strings/reverses/reversestrings)\n  * [Sort](https://github.com/shomali11/go-interview/tree/master/strings/sorts)\n  * [Break Words](https://github.com/shomali11/go-interview/tree/master/strings/wordbreakers)\n* [Trees](https://github.com/shomali11/go-interview/tree/master/trees)\n  * [Balanced Trees](https://github.com/shomali11/go-interview/tree/master/trees/balancedtrees)\n    * [Balanced Binary Trees](https://github.com/shomali11/go-interview/tree/master/trees/balancedtrees/balancedbinarytrees)\n    * [Balanced Trees](https://github.com/shomali11/go-interview/tree/master/trees/balancedtrees/balancedmultitrees)\n  * [Heights](https://github.com/shomali11/go-interview/tree/master/trees/heights)\n    * [Binary Tree Heights](https://github.com/shomali11/go-interview/tree/master/trees/heights/binarytreeheights)\n    * [Tree Heights](https://github.com/shomali11/go-interview/tree/master/trees/heights/multitreeheights)\n  * [Invert Trees](https://github.com/shomali11/go-interview/tree/master/trees/inverttrees)\n    * [Invert Binary Trees](https://github.com/shomali11/go-interview/tree/master/trees/inverttrees/invertbinarytrees)\n    * [Invert Trees](https://github.com/shomali11/go-interview/tree/master/trees/inverttrees/invertmultitrees)\n  * [Longest Distinct Paths](https://github.com/shomali11/go-interview/tree/master/trees/longestdistinctpaths)\n  * [Print By Columns](https://github.com/shomali11/go-interview/tree/master/trees/printcolumns)\n  * [Print By Levels](https://github.com/shomali11/go-interview/tree/master/trees/printlevels)\n  * [Print Zig Zag](https://github.com/shomali11/go-interview/tree/master/trees/printzigzag)"
        },
        {
          "name": "algorithms",
          "type": "tree",
          "content": null
        },
        {
          "name": "datastructures",
          "type": "tree",
          "content": null
        },
        {
          "name": "evaluations",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.6201171875,
          "content": "module github.com/shomali11/go-interview\n\ngo 1.18\n\nrequire (\n\tgithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0\n\tgithub.com/shomali11/gridder v0.0.0-20210930173142-5f3b82d74585\n\tgithub.com/stretchr/testify v1.7.1\n\tgolang.org/x/exp v0.0.0-20220318154914-8dddf5d87bd8\n\tgolang.org/x/image v0.0.0-20220302094943-723b81ca9867\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/fogleman/gg v1.3.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/stretchr/objx v0.1.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.6201171875,
          "content": "github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/fogleman/gg v1.3.0 h1:/7zJX8F6AaYQc57WQCyN9cAIz+4bCJGO9B+dyW29am8=\ngithub.com/fogleman/gg v1.3.0/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 h1:DACJavvAHhabrF08vX0COfcOBJRhZ8lUbR+ZWIs0Y5g=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/shomali11/gridder v0.0.0-20200411014130-6eb52d16b35b h1:oQH8Xkir0/u+Fn7GUJLRpBNWvjMYwbpSTVtrfU1QF7c=\ngithub.com/shomali11/gridder v0.0.0-20200411014130-6eb52d16b35b/go.mod h1:Jk/769IHgi/W7e4vZf6D3QKWTm8i40LFn+63M3qJOrw=\ngithub.com/shomali11/gridder v0.0.0-20210930173142-5f3b82d74585 h1:WsfT2BQs5kovue4LeytDQEJAtli+gHl9q4JoRUSrfyM=\ngithub.com/shomali11/gridder v0.0.0-20210930173142-5f3b82d74585/go.mod h1:GkufrYjZLwzKPY2dBoteg8j6MEkDiywCqkXrZXAckgA=\ngithub.com/stretchr/objx v0.1.0 h1:4G4v2dO3VZwixGIRoQ5Lfboy6nUhCyYzaqnIAPPhYs4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.5.1 h1:nOGnQDM7FYENwehXlg/kFVnos3rEvtKTjRvOWSzb6H4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.1 h1:5TQK59W5E3v0r2duFAb7P95B6hEeOyEnHRa8MjYSMTY=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngolang.org/x/exp v0.0.0-20220318154914-8dddf5d87bd8 h1:s/+U+w0teGzcoH2mdIlFQ6KfVKGaYpgyGdUefZrn9TU=\ngolang.org/x/exp v0.0.0-20220318154914-8dddf5d87bd8/go.mod h1:lgLbSvA5ygNOMpwM/9anMpWVlVJ7Z+cHWq/eFuinpGE=\ngolang.org/x/image v0.0.0-20200119044424-58c23975cae1 h1:5h3ngYt7+vXCDZCup/HkCQgW5XwmSvR/nA2JmJ0RErg=\ngolang.org/x/image v0.0.0-20200119044424-58c23975cae1/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20220302094943-723b81ca9867 h1:TcHcE0vrmgzNH1v3ppjcMGbhG5+9fMuvOmUYwNEF4q4=\ngolang.org/x/image v0.0.0-20220302094943-723b81ca9867/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b h1:h8qDotaEPuJATrMmW04NCwg7v22aHH28wwpauUhK9Oo=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "lists",
          "type": "tree",
          "content": null
        },
        {
          "name": "numbers",
          "type": "tree",
          "content": null
        },
        {
          "name": "slices",
          "type": "tree",
          "content": null
        },
        {
          "name": "stacks",
          "type": "tree",
          "content": null
        },
        {
          "name": "streams",
          "type": "tree",
          "content": null
        },
        {
          "name": "strings",
          "type": "tree",
          "content": null
        },
        {
          "name": "trees",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}