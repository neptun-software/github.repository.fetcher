{
  "metadata": {
    "timestamp": 1736566944341,
    "page": 524,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prometheus/pushgateway",
      "stars": 3066,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1201171875,
          "content": ".build/\n.tarballs/\n\n!.build/linux-amd64/\n!.build/linux-armv7\n!.build/linux-arm64\n!.build/linux-ppc64le\n!.build/linux-s390x\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1943359375,
          "content": "resources/static/bootstrap-4.3.1-dist/* linguist-vendored\nresources/static/bootstrap4-glyphicons/* linguist-vendored\nresources/static/jquery-3.4.1.min.js linguist-vendored\nvendor/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0732421875,
          "content": "/pushgateway\n/.build\n/.release\n/.tarballs\n*.test\n*~\n*.exe\n*.tar.gz\n/vendor\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.13671875,
          "content": "---\n# Run only staticcheck for now. Additional linters will be enabled one-by-one.\nlinters:\n  enable:\n    - staticcheck\n  disable-all: true\n"
        },
        {
          "name": ".promu.yml",
          "type": "blob",
          "size": 0.6103515625,
          "content": "---\ngo:\n    # Whenever the Go version is updated here, .circle/config.yml should also\n    # be updated.\n    version: 1.23\nrepository:\n    path: github.com/prometheus/pushgateway\nbuild:\n    ldflags: |\n        -X github.com/prometheus/common/version.Version={{.Version}}\n        -X github.com/prometheus/common/version.Revision={{.Revision}}\n        -X github.com/prometheus/common/version.Branch={{.Branch}}\n        -X github.com/prometheus/common/version.BuildUser={{user}}@{{host}}\n        -X github.com/prometheus/common/version.BuildDate={{date \"20060102-15:04:05\"}}\ntarball:\n    files:\n        - LICENSE\n        - NOTICE\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.4521484375,
          "content": "---\nextends: default\nignore: |\n  **/node_modules\n\nrules:\n  braces:\n    max-spaces-inside: 1\n    level: error\n  brackets:\n    max-spaces-inside: 1\n    level: error\n  commas: disable\n  comments: disable\n  comments-indentation: disable\n  document-start: disable\n  indentation:\n    spaces: consistent\n    indent-sequences: consistent\n  key-duplicates:\n    ignore: |\n      config/testdata/section_key_dup.bad.yml\n  line-length: disable\n  truthy:\n    check-keys: false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.294921875,
          "content": "## 1.11.0 / 2025-01-09\n\n* [FEATURE] Support full UTF-8 character set in metric and label names. #689 #710\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.10.0 / 2024-09-19\n\n* [FEATURE] API: Support classic float histograms. #668\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.9.0 / 2024-06-06\n\n* [CHANGE] Command line: Print --version to stdout, not stderr. #651\n* [FEATURE] UI: Support native histograms. #596\n* [ENHANCEMENT] Log when liveness probes fail due to full write queue. #645\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.8.0 / 2024-04-03\n\n* [FEATURE] API: Support native histograms in api/v1/metrics. #611\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes, in particular a bug concerning multiple metric families pushed via protobuf.\n\n## 1.7.0 / 2024-01-18\n\n* [FEATURE] UI: Keep expansion state on page refresh. #581\n* [SECURITY] Build precompiled binaries with Go v1.21.6 to avoid security issues with previous Go releases.\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.6.2 / 2023-09-13\n\n* [SECURITY] Build precompiled binaries with Go v1.21.1 to avoid [security issues with Go v1.21.0](https://groups.google.com/g/golang-announce/c/Fm51GRLNRvM).\n\n## 1.6.1 / 2023-09-05\n\n* [SECURITY] Build precompiled binaries with current Go version (1.21.0) to avoid known bugs in older Go versions.\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.6.0 / 2023-05-25\n\n* [FEATURE] Add snappy encoding support for `/metrics` endpoint. #518\n* [ENHANCEMENT] Add pre-built binaries for the s390x architecture. #537\n* [BUGFIX] Fix possible leak of a file handle when using compression. #518\n\n## 1.5.1 / 2022-11-29\n\n* [SECURITY] Fix basic authentication bypass vulnerability (CVE-2022-46146). #516\n\n## 1.5.0 / 2022-11-24\n\n* [FEATURE] Add multiple listeners and systemd socket support. #512\n* [FEATURE] Accept a gzip'd body of a POST or PUT request. #477\n\n## 1.4.3 / 2022-05-30\n\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.4.2 / 2021-10-11\n\n* [BUGFIX] Do not log an error upon graceful shutdown. #428\n* [BUGFIX] Update dependencies to pull in possibly relevant bugfixes.\n\n## 1.4.1 / 2021-05-28\n\n* [BUGFIX] Persist labels properly when draining. #404\n* [BUGFIX] Use relative paths for web assets. #390\n\n## 1.4.0 / 2021-01-23\n\n* [FEATURE] **Experimental!** Add TLS and basic authentication to HTTP endpoints. #381\n\n## 1.3.1 / 2020-12-17\n\n* [ENHANCEMENT] Web UI: Improved metrics text alignment. #369\n* [BUGFIX] Web UI: Fix deletion of groups with empty label values. #377\n\n## 1.3.0 / 2020-10-01\n\n* [FEATURE] Add Docker image build for ppc64le architecture. #339\n* [ENHANCEMENT] Web UI: Add scroll bare to list of pushed metrics. #354\n* [ENHANCEMENT] Logging: Show remote address when failing to parse pushed metrics. #361\n* [BUGFIX] Web UI: Update JQuery to v3.5.1 to address security concerns. #360\n\n## 1.2.0 / 2020-03-11\n\n* [FEATURE] Add an HTTP API to query pushed metrics and runtime information. #184\n\n## 1.1.0 / 2020-01-27\n\n* [FEATURE] Add flag `--push.disable-consistency-check`. #318\n\n## 1.0.1 / 2019-12-21\n\n* [ENHANCEMENT] Remove excessive whitespace from HTML templates. #302\n* [BUGFIX] Fix docker manifest files for non-amd64 architectures. #310\n\n## 1.0.0 / 2019-10-15\n\n_This release does not support the storage format of v0.5–v0.9 anymore. Only persistence files created by v0.10+ are usable. Upgrade to v0.10 first to convert existing persistence files._\n\n* [CHANGE] Remove code to convert the legacy v0.5–v0.9 storage format.\n\n## 0.10.0 / 2019-10-10\n\n_This release changes the storage format. v0.10 can read the storage format of v0.5–v0.9. It will then persist the new format so that a downgrade won't be possible anymore._\n\n* [CHANGE] Change of the storage format (necessary for the hash collision bugfix below). #293\n* [CHANGE] Check pushed metrics immediately and reject them if inconsistent. Successful pushes now result in code 200 (not 202). Failures result in code 400 and are logged at error level. #290\n* [FEATURE] Shutdown via HTTP request. Enable with `--web.enable-lifecycle`. #292\n* [FEATURE] Wipe storage completely via HTTP request and via web UI. Enable with `--web.enable-admin-api`. #287 #285\n* [BUGFIX] Rule out hash collisions between metric groups. #293\n* [BUGFIX] Avoid multiple calls of `http.Error` in push handler. #291\n\n## 0.9.1 / 2019-08-01\n\n* [BUGFIX] Make `--web.external-url` and `--web.route-prefix` work as documented. #274\n\n## 0.9.0 / 2019-07-23\n\n* [CHANGE] Web: Update to Bootstrap 4.3.1 and jquery 3.4.1, changing appearance of the web UI to be more in line with the Prometheus server. Also add favicon and remove timestamp column. #261\n* [CHANGE] Update logging to be in line with other Prometheus projects, using gokit and promlog. #263\n* [FEATURE] Add optional base64 encoding for label values in the grouping key. #268\n* [FEATURE] Add ARM container images. #265\n* [FEATURE] Log errors during scrapes. #267\n* [BUGFIX] Web: Fixed Content-Type for js and css instead of using /etc/mime.types. #252\n\n## 0.8.0 / 2019-04-13\n\n_If you use the prebuilt Docker container or you build your own one based on the provided Dockerfile, note that this release changes the user to `nobody`. Should you use a persistence file, make sure it is readable and writable by user `nobody`._\n\n* [CHANGE] Run as user `nobody` in Docker. #242\n* [CHANGE] Adjust `--web.route-prefix` to work the same as in Prometheus. #190\n* [FEATURE] Add `--web.external-url` flag (like in Prometheus). #190\n\n## 0.7.0 / 2018-12-07\n\n_As preparation for the 1.0.0 release, this release removes the long deprecated legacy HTTP push endpoint (which uses `/jobs/` rather than `/job/` in the URL)._\n\n* [CHANGE] Remove legacy push API. #227\n* [ENHANCEMENT] Update dependencies. #230\n* [ENHANCEMENT] Support Go modules. #221\n* [BUGFIX] Avoid crash when started with v0.4 storage. #223\n\n## 0.6.0 / 2018-10-17\n\n_Persistence storage prior to 0.5.0 is unsupported. Upgrade to 0.5.2 first for conversion._\n\n* [CHANGE] Enforce consistency of help strings by changing them during exposition. (An INFO-level log message describes the change.) #194\n* [CHANGE] Drop support of pre-0.5 storage format.\n* [CHANGE] Use prometheus/client_golang v0.9, which changes the `http_...` metrics. (See README.md for full documentation of exposed metrics.)\n\n## 0.5.2 / 2018-06-15\n\n* [BUGFIX] Update client_golang/prometheus vendoring to allow inconsistent\n  labels. #185\n\n## 0.5.1 / 2018-05-30\n\n* [BUGFIX] Fix conversion of old persistency format (0.4.0 and earlier). #179\n* [BUGFIX] Make _Delete Group_ button work again. #177\n* [BUGFIX] Don't display useless flags on status page. #176\n\n## 0.5.0 / 2018-05-23\n\nBreaking change:\n* Flags now require double-dash.\n* The persistence storage format has been updated.  Upgrade is transparent, but downgrade to 0.4.0 and prior is unsupported.\n* Persistence storage prior to 0.1.0 is unsupported.\n\n* [CHANGE] Replaced Flags with Kingpin #152\n* [CHANGE] Slightly changed disk format for persistence. v0.5 can still read the pre-v0.5 format. #172\n* [ENHANCEMENT] Debug level logging now shows client-induced errors #123\n* [FEATURE] Add /-/ready and /-/healthy #135\n* [FEATURE] Add web.route-prefix flag #146\n* [BUGFIX] Fix incorrect persistence of certain values in a metric family. #172\n\n## 0.4.0 / 2017-06-09\n* [CHANGE] Pushes with timestamps are now rejected.\n* [FEATURE] Added push_time_seconds metric to each push.\n* [ENHANCEMENT] Point at community page rather than the dev list in the UI.\n* [BUGFIX] Return HTTP 400 on parse error, rather than 500.\n\n## 0.3.1 / 2016-11-03\n* [BUGFIX] Fixed a race condition in the storage layer.\n* [ENHANCEMENT] Improved README.md.\n\n## 0.3.0 / 2016-06-07\n* [CHANGE] Push now rejects improper and reserved labels.\n* [CHANGE] Required labels flag removed.\n* [BUGFIX] Docker image actually works now.\n* [ENHANCEMENT] Converted to Promu build process.\n* [CHANGE] As a consequence of the above, changed dir structure in tar ball.\n* [ENHANCEMENT] Updated dependencies, with all the necessary code changes.\n* [ENHANCEMENT] Dependencies now vendored.\n* [ENHANCEMENT] `bindata.go` checked in, Pushgateway now `go get`-able.\n* [ENHANCEMENT] Various documentation improvements.\n* [CLEANUP] Various code cleanups.\n\n## 0.2.0 / 2015-06-25\n* [CHANGE] Support arbitrary grouping of metrics.\n* [CHANGE] Changed behavior of HTTP DELETE method (see README.md for details).\n\n## 0.1.2 / 2015-06-08\n* [CHANGE] Move pushgateway binary in archive from bin/ to /.\n* [CHANGE] Migrate logging to prometheus/log.\n\n## 0.1.1 / 2015-05-05\n* [BUGFIX] Properly display histograms in web status.\n* [BUGFIX] Fix value formatting.\n* [CHANGE] Make flag names consistent across projects.\n* [ENHANCEMENT] Auto-fill instance with IPv6 address.\n* [BUGFIX] Fix Go download link for several archs and OSes.\n* [BUGFIX] Use HTTPS and golang.org for Go download.\n* [BUGFIX] Re-add pprof endpoints.\n\n## 0.1.0 / 2014-08-13\n* [FEATURE] When being scraped, metrics of the same name but with different job/instance label are now merged into one metric family.\n* [FEATURE] Added Dockerfile.\n* [CHANGE] Default HTTP port now 9091.\n* [BUGFIX] Fixed parsing of content-type header.\t\n* [BUGFIX] Fixed race condition in handlers.\n* [PERFORMANCE] Replaced Martini with Httprouter.\n* [ENHANCEMENT] Migrated to new client_golang.\n* [ENHANCEMENT]\tMade internal metrics more consistent.\n* [ENHANCEMENT]\tAdded http instrumentation.\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1484375,
          "content": "# Prometheus Community Code of Conduct\n\nPrometheus follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.927734375,
          "content": "# Contributing\n\nPrometheus uses GitHub to manage reviews of pull requests.\n\n* If you have a trivial fix or improvement, go ahead and create a pull request,\n  addressing (with `@...`) the maintainer of this repository (see\n  [MAINTAINERS.md](MAINTAINERS.md)) in the description of the pull request.\n\n* If you plan to do something more involved, first discuss your ideas\n  on our [mailing list](https://groups.google.com/forum/?fromgroups#!forum/prometheus-developers).\n  This will avoid unnecessary work and surely give you and us a good deal\n  of inspiration.\n\n* Relevant coding style guidelines are the [Go Code Review\n  Comments](https://code.google.com/p/go-wiki/wiki/CodeReviewComments)\n  and the _Formatting and style_ section of Peter Bourgon's [Go: Best\n  Practices for Production\n  Environments](http://peter.bourgon.org/go-in-production/#formatting-and-style).\n\n* Be sure to sign off on the [DCO](https://github.com/probot/dco#how-it-works)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4111328125,
          "content": "ARG ARCH=\"amd64\"\nARG OS=\"linux\"\nFROM quay.io/prometheus/busybox-${OS}-${ARCH}:latest\nLABEL maintainer=\"The Prometheus Authors <prometheus-developers@googlegroups.com>\"\n\nARG ARCH=\"amd64\"\nARG OS=\"linux\"\nCOPY --chown=nobody:nobody .build/${OS}-${ARCH}/pushgateway /bin/pushgateway\n\nEXPOSE 9091\nRUN mkdir -p /pushgateway && chown nobody:nobody /pushgateway\nWORKDIR /pushgateway\n\nUSER 65534\n\nENTRYPOINT [ \"/bin/pushgateway\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.046875,
          "content": "* Björn Rabenstein <beorn@grafana.com> @beorn7\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.8818359375,
          "content": "# Copyright 2016 The Prometheus Authors\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Needs to be defined before including Makefile.common to auto-generate targets\nDOCKER_ARCHS ?= amd64 armv7 arm64 ppc64le s390x\n\ninclude Makefile.common\n\nDOCKER_IMAGE_NAME ?= pushgateway\n\nassets:\n\t@echo \">> writing assets\"\n\t@cd $(PREFIX)/asset && GO111MODULE=$(GO111MODULE) $(GO) generate && $(GOFMT) -w assets_vfsdata.go\n"
        },
        {
          "name": "Makefile.common",
          "type": "blob",
          "size": 9.1123046875,
          "content": "# Copyright 2018 The Prometheus Authors\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# A common Makefile that includes rules to be reused in different prometheus projects.\n# !!! Open PRs only against the prometheus/prometheus/Makefile.common repository!\n\n# Example usage :\n# Create the main Makefile in the root project directory.\n# include Makefile.common\n# customTarget:\n# \t@echo \">> Running customTarget\"\n#\n\n# Ensure GOBIN is not set during build so that promu is installed to the correct path\nunexport GOBIN\n\nGO           ?= go\nGOFMT        ?= $(GO)fmt\nFIRST_GOPATH := $(firstword $(subst :, ,$(shell $(GO) env GOPATH)))\nGOOPTS       ?=\nGOHOSTOS     ?= $(shell $(GO) env GOHOSTOS)\nGOHOSTARCH   ?= $(shell $(GO) env GOHOSTARCH)\n\nGO_VERSION        ?= $(shell $(GO) version)\nGO_VERSION_NUMBER ?= $(word 3, $(GO_VERSION))\nPRE_GO_111        ?= $(shell echo $(GO_VERSION_NUMBER) | grep -E 'go1\\.(10|[0-9])\\.')\n\nPROMU        := $(FIRST_GOPATH)/bin/promu\npkgs          = ./...\n\nifeq (arm, $(GOHOSTARCH))\n\tGOHOSTARM ?= $(shell GOARM= $(GO) env GOARM)\n\tGO_BUILD_PLATFORM ?= $(GOHOSTOS)-$(GOHOSTARCH)v$(GOHOSTARM)\nelse\n\tGO_BUILD_PLATFORM ?= $(GOHOSTOS)-$(GOHOSTARCH)\nendif\n\nGOTEST := $(GO) test\nGOTEST_DIR :=\nifneq ($(CIRCLE_JOB),)\nifneq ($(shell command -v gotestsum 2> /dev/null),)\n\tGOTEST_DIR := test-results\n\tGOTEST := gotestsum --junitfile $(GOTEST_DIR)/unit-tests.xml --\nendif\nendif\n\nPROMU_VERSION ?= 0.17.0\nPROMU_URL     := https://github.com/prometheus/promu/releases/download/v$(PROMU_VERSION)/promu-$(PROMU_VERSION).$(GO_BUILD_PLATFORM).tar.gz\n\nSKIP_GOLANGCI_LINT :=\nGOLANGCI_LINT :=\nGOLANGCI_LINT_OPTS ?=\nGOLANGCI_LINT_VERSION ?= v1.62.0\n# golangci-lint only supports linux, darwin and windows platforms on i386/amd64/arm64.\n# windows isn't included here because of the path separator being different.\nifeq ($(GOHOSTOS),$(filter $(GOHOSTOS),linux darwin))\n\tifeq ($(GOHOSTARCH),$(filter $(GOHOSTARCH),amd64 i386 arm64))\n\t\t# If we're in CI and there is an Actions file, that means the linter\n\t\t# is being run in Actions, so we don't need to run it here.\n\t\tifneq (,$(SKIP_GOLANGCI_LINT))\n\t\t\tGOLANGCI_LINT :=\n\t\telse ifeq (,$(CIRCLE_JOB))\n\t\t\tGOLANGCI_LINT := $(FIRST_GOPATH)/bin/golangci-lint\n\t\telse ifeq (,$(wildcard .github/workflows/golangci-lint.yml))\n\t\t\tGOLANGCI_LINT := $(FIRST_GOPATH)/bin/golangci-lint\n\t\tendif\n\tendif\nendif\n\nPREFIX                  ?= $(shell pwd)\nBIN_DIR                 ?= $(shell pwd)\nDOCKER_IMAGE_TAG        ?= $(subst /,-,$(shell git rev-parse --abbrev-ref HEAD))\nDOCKERFILE_PATH         ?= ./Dockerfile\nDOCKERBUILD_CONTEXT     ?= ./\nDOCKER_REPO             ?= prom\n\nDOCKER_ARCHS            ?= amd64\n\nBUILD_DOCKER_ARCHS = $(addprefix common-docker-,$(DOCKER_ARCHS))\nPUBLISH_DOCKER_ARCHS = $(addprefix common-docker-publish-,$(DOCKER_ARCHS))\nTAG_DOCKER_ARCHS = $(addprefix common-docker-tag-latest-,$(DOCKER_ARCHS))\n\nSANITIZED_DOCKER_IMAGE_TAG := $(subst +,-,$(DOCKER_IMAGE_TAG))\n\nifeq ($(GOHOSTARCH),amd64)\n        ifeq ($(GOHOSTOS),$(filter $(GOHOSTOS),linux freebsd darwin windows))\n                # Only supported on amd64\n                test-flags := -race\n        endif\nendif\n\n# This rule is used to forward a target like \"build\" to \"common-build\".  This\n# allows a new \"build\" target to be defined in a Makefile which includes this\n# one and override \"common-build\" without override warnings.\n%: common-% ;\n\n.PHONY: common-all\ncommon-all: precheck style check_license lint yamllint unused build test\n\n.PHONY: common-style\ncommon-style:\n\t@echo \">> checking code style\"\n\t@fmtRes=$$($(GOFMT) -d $$(find . -path ./vendor -prune -o -name '*.go' -print)); \\\n\tif [ -n \"$${fmtRes}\" ]; then \\\n\t\techo \"gofmt checking failed!\"; echo \"$${fmtRes}\"; echo; \\\n\t\techo \"Please ensure you are using $$($(GO) version) for formatting code.\"; \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: common-check_license\ncommon-check_license:\n\t@echo \">> checking license header\"\n\t@licRes=$$(for file in $$(find . -type f -iname '*.go' ! -path './vendor/*') ; do \\\n               awk 'NR<=3' $$file | grep -Eq \"(Copyright|generated|GENERATED)\" || echo $$file; \\\n       done); \\\n       if [ -n \"$${licRes}\" ]; then \\\n               echo \"license header checking failed:\"; echo \"$${licRes}\"; \\\n               exit 1; \\\n       fi\n\n.PHONY: common-deps\ncommon-deps:\n\t@echo \">> getting dependencies\"\n\t$(GO) mod download\n\n.PHONY: update-go-deps\nupdate-go-deps:\n\t@echo \">> updating Go dependencies\"\n\t@for m in $$($(GO) list -mod=readonly -m -f '{{ if and (not .Indirect) (not .Main)}}{{.Path}}{{end}}' all); do \\\n\t\t$(GO) get -d $$m; \\\n\tdone\n\t$(GO) mod tidy\n\n.PHONY: common-test-short\ncommon-test-short: $(GOTEST_DIR)\n\t@echo \">> running short tests\"\n\t$(GOTEST) -short $(GOOPTS) $(pkgs)\n\n.PHONY: common-test\ncommon-test: $(GOTEST_DIR)\n\t@echo \">> running all tests\"\n\t$(GOTEST) $(test-flags) $(GOOPTS) $(pkgs)\n\n$(GOTEST_DIR):\n\t@mkdir -p $@\n\n.PHONY: common-format\ncommon-format:\n\t@echo \">> formatting code\"\n\t$(GO) fmt $(pkgs)\n\n.PHONY: common-vet\ncommon-vet:\n\t@echo \">> vetting code\"\n\t$(GO) vet $(GOOPTS) $(pkgs)\n\n.PHONY: common-lint\ncommon-lint: $(GOLANGCI_LINT)\nifdef GOLANGCI_LINT\n\t@echo \">> running golangci-lint\"\n\t$(GOLANGCI_LINT) run $(GOLANGCI_LINT_OPTS) $(pkgs)\nendif\n\n.PHONY: common-lint-fix\ncommon-lint-fix: $(GOLANGCI_LINT)\nifdef GOLANGCI_LINT\n\t@echo \">> running golangci-lint fix\"\n\t$(GOLANGCI_LINT) run --fix $(GOLANGCI_LINT_OPTS) $(pkgs)\nendif\n\n.PHONY: common-yamllint\ncommon-yamllint:\n\t@echo \">> running yamllint on all YAML files in the repository\"\nifeq (, $(shell command -v yamllint 2> /dev/null))\n\t@echo \"yamllint not installed so skipping\"\nelse\n\tyamllint .\nendif\n\n# For backward-compatibility.\n.PHONY: common-staticcheck\ncommon-staticcheck: lint\n\n.PHONY: common-unused\ncommon-unused:\n\t@echo \">> running check for unused/missing packages in go.mod\"\n\t$(GO) mod tidy\n\t@git diff --exit-code -- go.sum go.mod\n\n.PHONY: common-build\ncommon-build: promu\n\t@echo \">> building binaries\"\n\t$(PROMU) build --prefix $(PREFIX) $(PROMU_BINARIES)\n\n.PHONY: common-tarball\ncommon-tarball: promu\n\t@echo \">> building release tarball\"\n\t$(PROMU) tarball --prefix $(PREFIX) $(BIN_DIR)\n\n.PHONY: common-docker-repo-name\ncommon-docker-repo-name:\n\t@echo \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)\"\n\n.PHONY: common-docker $(BUILD_DOCKER_ARCHS)\ncommon-docker: $(BUILD_DOCKER_ARCHS)\n$(BUILD_DOCKER_ARCHS): common-docker-%:\n\tdocker build -t \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \\\n\t\t-f $(DOCKERFILE_PATH) \\\n\t\t--build-arg ARCH=\"$*\" \\\n\t\t--build-arg OS=\"linux\" \\\n\t\t$(DOCKERBUILD_CONTEXT)\n\n.PHONY: common-docker-publish $(PUBLISH_DOCKER_ARCHS)\ncommon-docker-publish: $(PUBLISH_DOCKER_ARCHS)\n$(PUBLISH_DOCKER_ARCHS): common-docker-publish-%:\n\tdocker push \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\"\n\nDOCKER_MAJOR_VERSION_TAG = $(firstword $(subst ., ,$(shell cat VERSION)))\n.PHONY: common-docker-tag-latest $(TAG_DOCKER_ARCHS)\ncommon-docker-tag-latest: $(TAG_DOCKER_ARCHS)\n$(TAG_DOCKER_ARCHS): common-docker-tag-latest-%:\n\tdocker tag \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:latest\"\n\tdocker tag \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:v$(DOCKER_MAJOR_VERSION_TAG)\"\n\n.PHONY: common-docker-manifest\ncommon-docker-manifest:\n\tDOCKER_CLI_EXPERIMENTAL=enabled docker manifest create -a \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME):$(SANITIZED_DOCKER_IMAGE_TAG)\" $(foreach ARCH,$(DOCKER_ARCHS),$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$(ARCH):$(SANITIZED_DOCKER_IMAGE_TAG))\n\tDOCKER_CLI_EXPERIMENTAL=enabled docker manifest push \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME):$(SANITIZED_DOCKER_IMAGE_TAG)\"\n\n.PHONY: promu\npromu: $(PROMU)\n\n$(PROMU):\n\t$(eval PROMU_TMP := $(shell mktemp -d))\n\tcurl -s -L $(PROMU_URL) | tar -xvzf - -C $(PROMU_TMP)\n\tmkdir -p $(FIRST_GOPATH)/bin\n\tcp $(PROMU_TMP)/promu-$(PROMU_VERSION).$(GO_BUILD_PLATFORM)/promu $(FIRST_GOPATH)/bin/promu\n\trm -r $(PROMU_TMP)\n\n.PHONY: proto\nproto:\n\t@echo \">> generating code from proto files\"\n\t@./scripts/genproto.sh\n\nifdef GOLANGCI_LINT\n$(GOLANGCI_LINT):\n\tmkdir -p $(FIRST_GOPATH)/bin\n\tcurl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/$(GOLANGCI_LINT_VERSION)/install.sh \\\n\t\t| sed -e '/install -d/d' \\\n\t\t| sh -s -- -b $(FIRST_GOPATH)/bin $(GOLANGCI_LINT_VERSION)\nendif\n\n.PHONY: precheck\nprecheck::\n\ndefine PRECHECK_COMMAND_template =\nprecheck:: $(1)_precheck\n\nPRECHECK_COMMAND_$(1) ?= $(1) $$(strip $$(PRECHECK_OPTIONS_$(1)))\n.PHONY: $(1)_precheck\n$(1)_precheck:\n\t@if ! $$(PRECHECK_COMMAND_$(1)) 1>/dev/null 2>&1; then \\\n\t\techo \"Execution of '$$(PRECHECK_COMMAND_$(1))' command failed. Is $(1) installed?\"; \\\n\t\texit 1; \\\n\tfi\nendef\n\ngovulncheck: install-govulncheck\n\tgovulncheck ./...\n\ninstall-govulncheck:\n\tcommand -v govulncheck > /dev/null || go install golang.org/x/vuln/cmd/govulncheck@latest\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.4755859375,
          "content": "Pushgateway for ephemeral and batch jobs\nCopyright 2014-2015 The Prometheus Authors\n\nThis product includes software developed at\nSoundCloud Ltd. (http://soundcloud.com/).\n\n\nThe following components are included in this product:\n\njQuery\nhttps://jquery.org\nCopyright jQuery Foundation and other contributors\nLicensed under the MIT License\n\nBootstrap\nhttp://getbootstrap.com\nCopyright (c) 2011-2019 Twitter, Inc.\nCopyright (c) 2011-2019 The Bootstrap Authors\nLicensed under the MIT License\n"
        },
        {
          "name": "README-containers.md",
          "type": "blob",
          "size": 3.44921875,
          "content": "# Prometheus Pushgateway\n\n[![CircleCI](https://circleci.com/gh/prometheus/pushgateway/tree/master.svg?style=shield)][circleci]\n[![Docker Repository on Quay](https://quay.io/repository/prometheus/pushgateway/status)][quay]\n[![Docker Pulls](https://img.shields.io/docker/pulls/prom/pushgateway.svg?maxAge=604800)][hub]\n\nThe Prometheus Pushgateway exists to allow ephemeral and batch jobs to\nexpose their metrics to Prometheus. Since these kinds of jobs may not\nexist long enough to be scraped, they can instead push their metrics\nto a Pushgateway. The Pushgateway then exposes these metrics to\nPrometheus.\n\n## Non-goals\n\nFirst of all, the Pushgateway is not capable of turning Prometheus into a\npush-based monitoring system. For a general description of use cases for the\nPushgateway, please read [When To Use The\nPushgateway](https://prometheus.io/docs/practices/pushing/).\n\nThe Pushgateway is explicitly not an _aggregator or distributed counter_ but\nrather a metrics cache. It does not have\n[statsd](https://github.com/etsy/statsd)-like semantics. The metrics pushed are\nexactly the same as you would present for scraping in a permanently running\nprogram. If you need distributed counting, you could either use the actual\nstatsd in combination with the [Prometheus statsd\nexporter](https://github.com/prometheus/statsd_exporter), or have a look at the\n[prom-aggregation-gateway](https://github.com/zapier/prom-aggregation-gateway). With more\nexperience gathered, the Prometheus project might one day be able to provide a\nnative solution, separate from or possibly even as part of the Pushgateway.\n\nFor machine-level metrics, the\n[textfile](https://github.com/prometheus/node_exporter/blob/master/README.md#textfile-collector)\ncollector of the Node exporter is usually more appropriate. The Pushgateway is\nintended for service-level metrics.\n\nThe Pushgateway is not an _event store_. While you can use Prometheus as a data\nsource for\n[Grafana annotations](http://docs.grafana.org/reference/annotations/), tracking\nsomething like release events has to happen with some event-logging framework.\n\nA while ago, we\n[decided to not implement a “timeout” or TTL for pushed metrics](https://github.com/prometheus/pushgateway/issues/19)\nbecause almost all proposed use cases turned out to be anti-patterns we\nstrongly discourage. You can follow a more recent discussion on the\n[prometheus-developers mailing list](https://groups.google.com/forum/#!topic/prometheus-developers/9IyUxRvhY7w).\n\n## Run it\n\nDownload binary releases for your platform from the\n[release page](https://github.com/prometheus/pushgateway/releases) and unpack\nthe tarball.\n\nIf you want to compile yourself from the sources, you need a working Go\nsetup. Then use the provided Makefile (type `make`).\n\nFor the most basic setup, just start the binary. To change the address\nto listen on, use the `--web.listen-address` flag (e.g. \"0.0.0.0:9091\" or \":9091\").\nBy default, Pushgateway does not persist metrics. However, the `--persistence.file` flag\nallows you to specify a file in which the pushed metrics will be\npersisted (so that they survive restarts of the Pushgateway).\n\n### Using Docker\n\nYou can deploy the Pushgateway using the [prom/pushgateway](https://hub.docker.com/r/prom/pushgateway) Docker image.\n\nFor example:\n\n```bash\ndocker pull prom/pushgateway\n\ndocker run -d -p 9091:9091 prom/pushgateway\n```\n\n## More documentation\n\nPlease refer to the [full length\nREADME.md](https://github.com/prometheus/pushgateway/blob/master/README.md) for\nmore documentation.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 29.9208984375,
          "content": "# Prometheus Pushgateway\n\n[![CircleCI](https://circleci.com/gh/prometheus/pushgateway/tree/master.svg?style=shield)][circleci]\n[![Docker Repository on Quay](https://quay.io/repository/prometheus/pushgateway/status)][quay]\n[![Docker Pulls](https://img.shields.io/docker/pulls/prom/pushgateway.svg?maxAge=604800)][hub]\n\nThe Prometheus Pushgateway exists to allow ephemeral and batch jobs to\nexpose their metrics to Prometheus. Since these kinds of jobs may not\nexist long enough to be scraped, they can instead push their metrics\nto a Pushgateway. The Pushgateway then exposes these metrics to\nPrometheus.\n\n## Non-goals\n\nFirst of all, the Pushgateway is not capable of turning Prometheus into a\npush-based monitoring system. For a general description of use cases for the\nPushgateway, please read [When To Use The\nPushgateway](https://prometheus.io/docs/practices/pushing/).\n\nThe Pushgateway is explicitly not an _aggregator or distributed counter_ but\nrather a metrics cache. It does not have\n[statsd](https://github.com/etsy/statsd)-like semantics. The metrics pushed are\nexactly the same as you would present for scraping in a permanently running\nprogram. If you need distributed counting, you could either use the actual\nstatsd in combination with the [Prometheus statsd\nexporter](https://github.com/prometheus/statsd_exporter), or have a look at the\n[prom-aggregation-gateway](https://github.com/zapier/prom-aggregation-gateway). With more\nexperience gathered, the Prometheus project might one day be able to provide a\nnative solution, separate from or possibly even as part of the Pushgateway.\n\nFor machine-level metrics, the\n[textfile](https://github.com/prometheus/node_exporter/blob/master/README.md#textfile-collector)\ncollector of the Node exporter is usually more appropriate. The Pushgateway is\nintended for service-level metrics.\n\nThe Pushgateway is not an _event store_. While you can use Prometheus as a data\nsource for\n[Grafana annotations](http://docs.grafana.org/reference/annotations/), tracking\nsomething like release events has to happen with some event-logging framework.\n\nA while ago, we\n[decided to not implement a “timeout” or TTL for pushed metrics](https://github.com/prometheus/pushgateway/issues/19)\nbecause almost all proposed use cases turned out to be anti-patterns we\nstrongly discourage. You can follow a more recent discussion on the\n[prometheus-developers mailing list](https://groups.google.com/forum/#!topic/prometheus-developers/9IyUxRvhY7w).\n\n## Run it\n\nDownload binary releases for your platform from the\n[release page](https://github.com/prometheus/pushgateway/releases) and unpack\nthe tarball.\n\nIf you want to compile yourself from the sources, you need a working Go\nsetup. Then use the provided Makefile (type `make`).\n\nFor the most basic setup, just start the binary. To change the address\nto listen on, use the `--web.listen-address` flag (e.g. \"0.0.0.0:9091\" or \":9091\").\nBy default, Pushgateway does not persist metrics. However, the `--persistence.file` flag\nallows you to specify a file in which the pushed metrics will be\npersisted (so that they survive restarts of the Pushgateway).\n\n### Using Docker\n\nYou can deploy the Pushgateway using the [prom/pushgateway](https://hub.docker.com/r/prom/pushgateway) Docker image.\n\nFor example:\n\n```bash\ndocker pull prom/pushgateway\n\ndocker run -d -p 9091:9091 prom/pushgateway\n```\n\n## Use it\n\n### Configure the Pushgateway as a target to scrape\n\nThe Pushgateway has to be configured as a target to scrape by Prometheus, using\none of the usual methods. _However, you should always set `honor_labels: true`\nin the scrape config_ (see [below](#about-the-job-and-instance-labels) for a\ndetailed explanation).\n\n### Libraries\n\nPrometheus client libraries should have a feature to push the\nregistered metrics to a Pushgateway. Usually, a Prometheus client\npassively presents metric for scraping by a Prometheus server. A\nclient library that supports pushing has a push function, which needs\nto be called by the client code. It will then actively push the\nmetrics to a Pushgateway, using the API described below.\n\n### Command line\n\nUsing the Prometheus text protocol, pushing metrics is so easy that no\nseparate CLI is provided. Simply use a command-line HTTP tool like\n`curl`. Your favorite scripting language has most likely some built-in\nHTTP capabilities you can leverage here as well.\n\n*Note that in the text protocol, each line has to end with a line-feed\ncharacter (aka 'LF' or '\\n'). Ending a line in other ways, e.g. with 'CR' aka\n'\\r', 'CRLF' aka '\\r\\n', or just the end of the packet, will result in a\nprotocol error.*\n\nPushed metrics are managed in groups, identified by a grouping key of any\nnumber of labels, of which the first must be the `job` label. The groups are\neasy to inspect via the web interface.\n\n*For implications of special characters in label values see the [URL\nsection](#url) below.*\n\nExamples:\n\n* Push a single sample into the group identified by `{job=\"some_job\"}`:\n\n        echo \"some_metric 3.14\" | curl --data-binary @- http://pushgateway.example.org:9091/metrics/job/some_job\n\n  Since no type information has been provided, `some_metric` will be of type `untyped`.\n\n* Push something more complex into the group identified by `{job=\"some_job\",instance=\"some_instance\"}`:\n\n        cat <<EOF | curl --data-binary @- http://pushgateway.example.org:9091/metrics/job/some_job/instance/some_instance\n        # TYPE some_metric counter\n        some_metric{label=\"val1\"} 42\n        # TYPE another_metric gauge\n        # HELP another_metric Just an example.\n        another_metric 2398.283\n        EOF\n\n  Note how type information and help strings are provided. Those lines\n  are optional, but strongly encouraged for anything more complex.\n\n* Delete all metrics in the group identified by\n  `{job=\"some_job\",instance=\"some_instance\"}`:\n\n        curl -X DELETE http://pushgateway.example.org:9091/metrics/job/some_job/instance/some_instance\n\n* Delete all metrics in the group identified by `{job=\"some_job\"}` (note that\n  this does not include metrics in the\n  `{job=\"some_job\",instance=\"some_instance\"}` group from the previous example,\n  even if those metrics have the same job label):\n\n        curl -X DELETE http://pushgateway.example.org:9091/metrics/job/some_job\n        \n* Delete all metrics in all groups (requires to enable the admin API via the command line flag `--web.enable-admin-api`):\n\n        curl -X PUT http://pushgateway.example.org:9091/api/v1/admin/wipe\n\n### About the job and instance labels\n\nThe Prometheus server will attach a `job` label and an `instance` label to each\nscraped metric. The value of the `job` label comes from the scrape\nconfiguration. When you configure the Pushgateway as a scrape target for your\nPrometheus server, you will probably pick a job name like `pushgateway`. The\nvalue of the `instance` label is automatically set to the host and port of the\ntarget scraped. Hence, all the metrics scraped from the Pushgateway will have\nthe host and port of the Pushgateway as the `instance` label and a `job` label\nlike `pushgateway`. The conflict with the `job` and `instance` labels you might\nhave attached to the metrics pushed to the Pushgateway is solved by renaming\nthose labels to `exported_job` and `exported_instance`.\n\nHowever, this behavior is usually undesired when scraping a\nPushgateway. Generally, you would like to retain the `job` and `instance`\nlabels of the metrics pushed to the Pushgateway. That's why you have to set\n`honor_labels: true` in the scrape config for the Pushgateway. It enables the\ndesired behavior. See the\n[documentation](https://prometheus.io/docs/operating/configuration/#scrape_config)\nfor details.\n\nThis leaves us with the case where the metrics pushed to the Pushgateway do not\nfeature an `instance` label. This case is quite common as the pushed metrics\nare often on a service level and therefore not related to a particular\ninstance. Even with `honor_labels: true`, the Prometheus server will attach an\n`instance` label if no `instance` label has been set in the first\nplace. Therefore, if a metric is pushed to the Pushgateway without an instance\nlabel (and without instance label in the grouping key, see below), the\nPushgateway will export it with an empty instance label (`{instance=\"\"}`),\nwhich is equivalent to having no `instance` label at all but prevents the\nserver from attaching one.\n\n### About metric inconsistencies\n\nThe Pushgateway exposes all pushed metrics together with its own metrics via\nthe same `/metrics` endpoint. (See the section about [exposed\nmetrics](#exposed-metrics) for details.) Therefore, all the metrics have to be\nconsistent with each other: Metrics of the same name must have\nthe same type, even if they are pushed to different groups, and there must be\nno duplicates, i.e. metrics with the same name and the exact same label\npairs. Pushes that would lead to inconsistencies are rejected with status\ncode 400.\n\nInconsistent help strings are tolerated, though. The Pushgateway will pick a\nwinning help string and log about it at info level.\n\n_Legacy note: The help string of Pushgateway's own `push_time_seconds` metric\nhas changed in v0.10.0. By using a persistence file, metrics pushed to a\nPushgateway of an earlier version can make it into a Pushgateway of v0.10.0 or\nlater. In this case, the above mentioned log message will show up. Once each\npreviously pushed group has been deleted or received a new push, the log\nmessage will disappear._\n\nThe consistency check performed during a push is the same as it happens anyway\nduring a scrape. In common use cases, scrapes happen more often than\npushes. Therefore, the performance cost of the push-time check isn't\nrelevant. However, if a large amount of metrics on the Pushgateway is combined\nwith frequent pushes, the push duration might become prohibitively long. In\nthis case, you might consider using the command line flag\n`--push.disable-consistency-check`, which saves the cost of the consistency\ncheck during a push but allows pushing inconsistent metrics. The check will\nstill happen during a scrape, thereby failing all scrapes for as long as\ninconsistent metrics are stored on the Pushgateway. Setting the flag therefore\nputs you at risk to disable the Pushgateway by a single inconsistent push.\n\n### About timestamps\n\nIf you push metrics at time *t*<sub>1</sub>, you might be tempted to believe\nthat Prometheus will scrape them with that same timestamp\n*t*<sub>1</sub>. Instead, what Prometheus attaches as a timestamp is the time\nwhen it scrapes the Pushgateway. Why so?\n\nIn the world view of Prometheus, a metric can be scraped at any\ntime. A metric that cannot be scraped has basically ceased to\nexist. Prometheus is somewhat tolerant, but if it cannot get any\nsamples for a metric in 5min, it will behave as if that metric does\nnot exist anymore. Preventing that is actually one of the reasons to\nuse a Pushgateway. The Pushgateway will make the metrics of your\nephemeral job scrapable at any time. Attaching the time of pushing as\na timestamp would defeat that purpose because 5min after the last\npush, your metric will look as stale to Prometheus as if it could not\nbe scraped at all anymore. (Prometheus knows only one timestamp per\nsample, there is no way to distinguish a 'time of pushing' and a 'time\nof scraping'.)\n\nAs there aren't any use cases where it would make sense to attach a\ndifferent timestamp, and many users attempting to incorrectly do so (despite no\nclient library supporting this), the Pushgateway rejects any pushes with\ntimestamps.\n\nIf you think you need to push a timestamp, please see [When To Use The\nPushgateway](https://prometheus.io/docs/practices/pushing/).\n\nIn order to make it easier to alert on failed pushers or those that have not\nrun recently, the Pushgateway will add in the metrics `push_time_seconds` and\n`push_failure_time_seconds` with the Unix timestamp of the last successful and\nfailed `POST`/`PUT` to each group. This will override any pushed metric by that\nname. A value of zero for either metric implies that the group has never seen a\nsuccessful or failed `POST`/`PUT`.\n\n## API\n\nAll pushes are done via HTTP. The interface is vaguely REST-like.\n\n### URL\n\nThe default port the Pushgateway is listening to is 9091. The path looks like\n\n    /metrics/job/<JOB_NAME>{/<LABEL_NAME>/<LABEL_VALUE>}\n\n`<JOB_NAME>` is used as the value of the `job` label, followed by any\nnumber of other label pairs (which might or might not include an\n`instance` label). The label set defined by the URL path is used as a\ngrouping key. Any of those labels already set in the body of the\nrequest (as regular labels, e.g. `name{job=\"foo\"} 42`)\n_will be overwritten to match the labels defined by the URL path!_\n\nIf `job` or any label name is suffixed with `@base64`, the following job name\nor label value is interpreted as a base64 encoded string according to [RFC\n4648, using the URL and filename safe\nalphabet](https://tools.ietf.org/html/rfc4648#section-5). (Padding is optional,\nbut a single `=` is required to encode an empty label value.) This is the only\nway to handle the following cases:\n\n* A job name or a label value that contains a `/`, because the plain (or even\n  URI-encoded) `/` would otherwise be interpreted as a path separator.\n* An empty label value, because the resulting `//` or trailing `/` would\n  disappear when the path is sanitized by the HTTP router code. Note that an\n  empty `job` name is invalid. Empty label values are valid but rarely\n  useful. To encode them with base64, you have to use at least one `=` padding\n  character to avoid a `//` or a trailing `/`.\n\nFor other special characters, the usual URI component encoding works, too, but\nthe base64 might be more convenient.\n\nIdeally, client libraries take care of the suffixing and encoding.\n\nExamples:\n\n* To use the grouping key `job=\"directory_cleaner\",path=\"/var/tmp\"`, the\n  following path will _not_ work:\n\n      /metrics/job/directory_cleaner/path//var/tmp\n      \n  Instead, use the base64 URL-safe encoding for the label value and mark it by\n  suffixing the label name with `@base64`:\n  \n      /metrics/job/directory_cleaner/path@base64/L3Zhci90bXA\n      \n  If you are not using a client library that handles the encoding for you, you\n  can use encoding tools. For example, there is a command line tool `base64url`\n  (Debian package `basez`), which you could combine with `curl` to push from\n  the command line in the following way:\n  \n      echo 'some_metric{foo=\"bar\"} 3.14' | curl --data-binary @- http://pushgateway.example.org:9091/metrics/job/directory_cleaner/path@base64/$(echo -n '/var/tmp' | base64url)\n\n* To use a grouping key containing an empty label value such as\n  `job=\"example\",first_label=\"\",second_label=\"foobar\"`, the following path will\n  _not_ work:\n  \n       /metrics/job/example/first_label//second_label/foobar\n\n  Instead, use the following path including the `=` padding character:\n  \n      /metrics/job/example/first_label@base64/=/second_label/foobar\n\n* The grouping key `job=\"titan\",name=\"Προμηθεύς\"` can be represented\n  “traditionally” with URI encoding:\n  \n      /metrics/job/titan/name/%CE%A0%CF%81%CE%BF%CE%BC%CE%B7%CE%B8%CE%B5%CF%8D%CF%82\n      \n  Or you can use the more compact base64 encoding:\n  \n      /metrics/job/titan/name@base64/zqDPgc6_zrzOt864zrXPjc-C\n\n### UTF-8 support for metric and label names\n\nNewer versions of the Prometheus exposition formats (text and protobuf)\nsupport the full UTF-8 character set in metric and label names. The\nPushgateway only accepts special characters in names if the command line\nflag `--push.enable-utf8-names` is set.\nTo allow special characters in label names that are part of the URL path, the flag also enables a\n[specific encoding mechanism](https://github.com/prometheus/proposals/blob/main/proposals/2023-08-21-utf8.md#text-escaping). This is similar to the base64 encoding for label _values_ described above,\nbut works differently in detail for technical and historical reasons. As before, client libraries\nshould usually take care of the encoding. It works as follows:\n\n* A label name containing encoded characters starts with `U__`.\n* All non-standard characters (i.e. characters other than letters, numbers, and underscores) are encoded as underscores surrounding their Unicode value, like `_1F60A_`.\n* All pre-existing underscores are encoded as a double-underscore: `__`.\n* If a label name starts with `U__` already, these characters have to be encoded as well, resulting in `U___55_____`. (That's `U__` + `_55_` (for `U`) + `__` + `__`).\n* A label name starting with `U__` in it's encoded form, but containing invalid sequences (e.g. `U__in_xxx_valid`) is left unchanged.\n\nFor example, the label `\"foo.bar\"=\"baz\"` would be encoded like: \n  \n    /metrics/job/example/U__foo_2e_bar/baz\n\nThis encoding is compatible with the base64 encoding for label values:\n\n    /metrics/job/example/U__foo_2e_bar@base64/YmF6\n\nNote that this method has an unlikely edge case that is not handled properly: \nA pusher unaware of the encoding mechanism might use a label name that is \nalso a valid encoded version of another label name. \nE.g. if a pusher intends to use the label name `U__foo_2e_bar`, but doesn't \nencode it as `U___55_____foo__2e__bar`, the Pushgateway will decode \n`U__foo_2e_bar` to `foo.bar`. This is the main reason why the decoding is \nopt-in via the `--push.enable-utf8-names` flag.\n\n### `PUT` method\n\n`PUT` is used to push a group of metrics. All metrics with the\ngrouping key specified in the URL are replaced by the metrics pushed\nwith `PUT`.\n\nThe body of the request contains the metrics to push either as delimited binary\nprotocol buffers or in the simple flat text format (both in version 0.0.4, see\nthe\n[data exposition format specification](https://docs.google.com/document/d/1ZjyKiKxZV83VI9ZKAXRGKaUKK2BIWCT7oiGBKDBpjEY/edit?usp=sharing)).\nDiscrimination between the two variants is done via the `Content-Type`\nheader. (Use the value `application/vnd.google.protobuf;\nproto=io.prometheus.client.MetricFamily; encoding=delimited` for protocol\nbuffers, otherwise the text format is tried as a fall-back.)\n\nThe response code upon success is either 200, 202, or 400. A 200 response\nimplies a successful push, either replacing an existing group of metrics or\ncreating a new one. A 400 response can happen if the request is malformed or if\nthe pushed metrics are inconsistent with metrics pushed to other groups or\ncollide with metrics of the Pushgateway itself. An explanation is returned in\nthe body of the response and logged on error level. A 202 can only occur if the\n`--push.disable-consistency-check` flag is set. In this case, pushed metrics\nare just queued and not checked for consistency. Inconsistencies will lead to\nfailed scrapes, however, as described [above](#about-metric-inconsistencies).\n\nIn rare cases, it is possible that the Pushgateway ends up with an inconsistent\nset of metrics already pushed. In that case, new pushes are also rejected as\ninconsistent even if the culprit is metrics that were pushed earlier. Delete\nthe offending metrics to get out of that situation.\n\n_If using the protobuf format, do not send duplicate MetricFamily\nproto messages (i.e. more than one with the same name) in one push, as\nthey will overwrite each other._\n\nNote that the Pushgateway doesn't provide any strong guarantees that the pushed\nmetrics are persisted to disk. (A server crash may cause data loss. Or the\nPushgateway is configured to not persist to disk at all.)\n\nA `PUT` request with an empty body effectively deletes all metrics with the\nspecified grouping key. However, in contrast to the\n[`DELETE` request](#delete-method) described below, it does update the\n`push_time_seconds` metrics.\n\n### `POST` method\n\n`POST` works exactly like the `PUT` method but only metrics with the\nsame name as the newly pushed metrics are replaced (among those with\nthe same grouping key).\n\nA `POST` request with an empty body merely updates the `push_time_seconds`\nmetrics but does not change any of the previously pushed metrics.\n\n### `DELETE` method\n\n`DELETE` is used to delete metrics from the Pushgateway. The request\nmust not contain any content. All metrics with the grouping key\nspecified in the URL are deleted.\n\nThe response code upon success is always 202. The delete\nrequest is merely queued at that moment. There is no guarantee that the\nrequest will actually be executed or that the result will make it to\nthe persistence layer (e.g. in case of a server crash). However, the\norder of `PUT`/`POST` and `DELETE` request is guaranteed, i.e. if you\nhave successfully sent a `DELETE` request and then send a `PUT`, it is\nguaranteed that the `DELETE` will be processed first (and vice versa).\n\nDeleting a grouping key without metrics is a no-op and will not result\nin an error.\n\n### Request compression\n\nThe body of a POST or PUT request may be gzip- or snappy-compressed. Add a\nheader `Content-Encoding: gzip` or `Content-Encoding: snappy` to do so.\n\nExamples:\n\n```bash\necho \"some_metric 3.14\" | gzip | curl -H 'Content-Encoding: gzip' --data-binary @- http://pushgateway.example.org:9091/metrics/job/some_job\necho \"some_metric 3.14\" | snzip | curl -H 'Content-Encoding: snappy' --data-binary @- http://pushgateway.example.org:9091/metrics/job/some_job\n```\n\n## Admin API\n\nThe Admin API provides administrative access to the Pushgateway, and must be\nexplicitly enabled by setting `--web.enable-admin-api` flag.\n\n### URL\n\nThe default port the Pushgateway is listening to is 9091. The path looks like:\n\n    /api/<API_VERSION>/admin/<HANDLER>\n    \n * Available endpoints:\n \n| HTTP_METHOD| API_VERSION |  HANDLER | DESCRIPTION |\n| :-------: |:-------------:| :-----:| :----- |\n| PUT     | v1 | wipe |  Safely deletes all metrics from the Pushgateway. |\n\n\n* For example to wipe all metrics from the Pushgateway:\n\n        curl -X PUT http://pushgateway.example.org:9091/api/v1/admin/wipe\n\n## Query API\n\nThe query API allows accessing pushed metrics and build and runtime information.\n\n### URL\n\n    /api/<API_VERSION>/<HANDLER>\n    \n * Available endpoints:\n \n| HTTP_METHOD| API_VERSION |  HANDLER | DESCRIPTION |\n| :-------: |:-------------:| :-----:| :----- |\n| GET     | v1 | status |  Returns build information, command line flags, and the start time in JSON format. |\n| GET     | v1 | metrics |  Returns the pushed metric families in JSON format. |\n\n\n* For example :\n\n        curl -X GET http://pushgateway.example.org:9091/api/v1/status | jq\n        \n        {\n          \"status\": \"success\",\n          \"data\": {\n            \"build_information\": {\n              \"branch\": \"master\",\n              \"buildDate\": \"20200310-20:14:39\",\n              \"buildUser\": \"flipbyte@localhost.localdomain\",\n              \"goVersion\": \"go1.13.6\",\n              \"revision\": \"eba0ec4100873d23666bcf4b8b1d44617d6430c4\",\n              \"version\": \"1.1.0\"\n            },\n            \"flags\": {\n              \"log.format\": \"logfmt\",\n              \"log.level\": \"info\",\n              \"persistence.file\": \"\",\n              \"persistence.interval\": \"5m0s\",\n              \"push.disable-consistency-check\": \"false\",\n              \"web.enable-admin-api\": \"false\",\n              \"web.enable-lifecycle\": \"false\",\n              \"web.external-url\": \"\",\n              \"web.listen-address\": \":9091\",\n              \"web.route-prefix\": \"\",\n              \"web.telemetry-path\": \"/metrics\"\n            },\n            \"start_time\": \"2020-03-11T01:44:49.9189758+05:30\"\n          }\n        }\n        \n        curl -X GET http://pushgateway.example.org:9091/api/v1/metrics | jq\n        \n        {\n          \"status\": \"success\",\n          \"data\": [\n            {\n              \"labels\": {\n                \"job\": \"batch\"\n              },\n              \"last_push_successful\": true,\n              \"my_job_duration_seconds\": {\n                \"time_stamp\": \"2020-03-11T02:02:27.716605811+05:30\",\n                \"type\": \"GAUGE\",\n                \"help\": \"Duration of my batch job in seconds\",\n                \"metrics\": [\n                  {\n                    \"labels\": {\n                      \"instance\": \"\",\n                      \"job\": \"batch\"\n                    },\n                    \"value\": \"0.2721322309989773\"\n                  }\n                ]\n              },\n              \"push_failure_time_seconds\": {\n                \"time_stamp\": \"2020-03-11T02:02:27.716605811+05:30\",\n                \"type\": \"GAUGE\",\n                \"help\": \"Last Unix time when changing this group in the Pushgateway failed.\",\n                \"metrics\": [\n                  {\n                    \"labels\": {\n                      \"instance\": \"\",\n                      \"job\": \"batch\"\n                    },\n                    \"value\": \"0\"\n                  }\n                ]\n              },\n              \"push_time_seconds\": {\n                \"time_stamp\": \"2020-03-11T02:02:27.716605811+05:30\",\n                \"type\": \"GAUGE\",\n                \"help\": \"Last Unix time when changing this group in the Pushgateway succeeded.\",\n                \"metrics\": [\n                  {\n                    \"labels\": {\n                      \"instance\": \"\",\n                      \"job\": \"batch\"\n                    },\n                    \"value\": \"1.5838723477166057e+09\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n        \n## Management API\n\nThe Pushgateway provides a set of management API to ease automation and integrations.\n\n* Available endpoints:\n \n| HTTP_METHOD |  PATH | DESCRIPTION |\n| :-------: | :-----| :----- |\n| GET    | /-/healthy |  Returns 200 whenever the Pushgateway is healthy. |\n| GET    | /-/ready |  Returns 200 whenever the Pushgateway is ready to serve traffic. |\n\n* The following endpoint is disabled by default and can be enabled via the `--web.enable-lifecycle` flag.\n\n| HTTP_METHOD |  PATH | DESCRIPTION |\n| :-------: | :-----| :----- |\n| PUT    | /-/quit |  Triggers a graceful shutdown of Pushgateway. |\n\nAlternatively, a graceful shutdown can be triggered by sending a `SIGTERM` to the Pushgateway process.\n\n## Exposed metrics\n\nThe Pushgateway exposes the following metrics via the configured\n`--web.telemetry-path` (default: `/metrics`):\n- The pushed metrics.\n- For each pushed group, a metric `push_time_seconds` and\n  `push_failure_time_seconds` as explained above.\n- The usual metrics provided by the [Prometheus Go client library](https://github.com/prometheus/client_golang), i.e.:\n  - `process_...`\n  - `go_...`\n  - `promhttp_metric_handler_requests_...`\n- A number of metrics specific to the Pushgateway, as documented by the example\n  scrape below.\n\n```\n# HELP pushgateway_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which pushgateway was built.\n# TYPE pushgateway_build_info gauge\npushgateway_build_info{branch=\"master\",goversion=\"go1.10.2\",revision=\"8f88ccb0343fc3382f6b93a9d258797dcb15f770\",version=\"0.5.2\"} 1\n# HELP pushgateway_http_push_duration_seconds HTTP request duration for pushes to the Pushgateway.\n# TYPE pushgateway_http_push_duration_seconds summary\npushgateway_http_push_duration_seconds{method=\"post\",quantile=\"0.1\"} 0.000116755\npushgateway_http_push_duration_seconds{method=\"post\",quantile=\"0.5\"} 0.000192608\npushgateway_http_push_duration_seconds{method=\"post\",quantile=\"0.9\"} 0.000327593\npushgateway_http_push_duration_seconds_sum{method=\"post\"} 0.001622878\npushgateway_http_push_duration_seconds_count{method=\"post\"} 8\n# HELP pushgateway_http_push_size_bytes HTTP request size for pushes to the Pushgateway.\n# TYPE pushgateway_http_push_size_bytes summary\npushgateway_http_push_size_bytes{method=\"post\",quantile=\"0.1\"} 166\npushgateway_http_push_size_bytes{method=\"post\",quantile=\"0.5\"} 182\npushgateway_http_push_size_bytes{method=\"post\",quantile=\"0.9\"} 196\npushgateway_http_push_size_bytes_sum{method=\"post\"} 1450\npushgateway_http_push_size_bytes_count{method=\"post\"} 8\n# HELP pushgateway_http_requests_total Total HTTP requests processed by the Pushgateway, excluding scrapes.\n# TYPE pushgateway_http_requests_total counter\npushgateway_http_requests_total{code=\"200\",handler=\"static\",method=\"get\"} 5\npushgateway_http_requests_total{code=\"200\",handler=\"status\",method=\"get\"} 8\npushgateway_http_requests_total{code=\"202\",handler=\"delete\",method=\"delete\"} 1\npushgateway_http_requests_total{code=\"202\",handler=\"push\",method=\"post\"} 6\npushgateway_http_requests_total{code=\"400\",handler=\"push\",method=\"post\"} 2\n\n```\n\n### Alerting on failed pushes\n\nIt is in general a good idea to alert on `push_time_seconds` being much farther\nbehind than expected. This will catch both failed pushes as well as pushers\nbeing down completely.\n\nTo detect failed pushes much earlier, alert on `push_failure_time_seconds >\npush_time_seconds`.\n\nPushes can also fail because they are malformed. In this case, they never reach\nany metric group and therefore won't set any `push_failure_time_seconds`\nmetrics. Those pushes are still counted as\n`pushgateway_http_requests_total{code=\"400\",handler=\"push\"}`. You can alert on\nthe `rate` of this metric, but you have to inspect the logs to identify the\noffending pusher.\n\n## TLS and basic authentication\n\nThe Pushgateway supports TLS and basic authentication. This enables better\ncontrol of the various HTTP endpoints.\n\nTo use TLS and/or basic authentication, you need to pass a configuration file\nusing the `--web.config.file` parameter. The format of the file is described\n[in the exporter-toolkit repository](https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md).\n\nNote that the TLS and basic authentication settings affect all HTTP endpoints:\n/metrics for scraping, the API to push metrics via /metrics/..., the admin API\nvia /api/..., and the web UI.\n\n## Development\n\nThe normal binary embeds the web files in the `resources` directory.\nFor development purposes, it is handy to have a running binary use\nthose files directly (so that you can see the effect of changes immediately).\nTo switch to direct usage, add `-tags dev` to the `flags` entry in\n`.promu.yml`, and then `make build`. Switch back to \"normal\" mode by\nreverting the changes to `.promu.yml` and typing `make assets`.\n\n##  Contributing\n\nRelevant style guidelines are the [Go Code Review\nComments](https://code.google.com/p/go-wiki/wiki/CodeReviewComments)\nand the _Formatting and style_ section of Peter Bourgon's [Go:\nBest Practices for Production\nEnvironments](http://peter.bourgon.org/go-in-production/#formatting-and-style).\n\n[hub]: https://hub.docker.com/r/prom/pushgateway/\n[circleci]: https://circleci.com/gh/prometheus/pushgateway\n[quay]: https://quay.io/repository/prometheus/pushgateway\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.16796875,
          "content": "# Reporting a security issue\n\nThe Prometheus security policy, including how to report vulnerabilities, can be\nfound here:\n\n<https://prometheus.io/docs/operating/security/>\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "1.11.0\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "asset",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.578125,
          "content": "module github.com/prometheus/pushgateway\n\ngo 1.23\n\ntoolchain go1.23.0\n\nrequire (\n\tgithub.com/alecthomas/kingpin/v2 v2.4.0\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/golang/snappy v0.0.4\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/prometheus/common v0.61.0\n\tgithub.com/prometheus/exporter-toolkit v0.13.2\n\tgithub.com/shurcooL/vfsgen v0.0.0-20230704071429-0000e147ea92\n\tgoogle.golang.org/protobuf v1.36.2\n)\n\nrequire (\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/mdlayher/socket v0.4.1 // indirect\n\tgithub.com/mdlayher/vsock v1.2.1 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgolang.org/x/crypto v0.32.0 // indirect\n\tgolang.org/x/net v0.34.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n)\n\nrequire (\n\tgithub.com/alecthomas/units v0.0.0-20240927000941-0f3dac36c52b // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/jpillora/backoff v1.0.0 // indirect\n\tgithub.com/julienschmidt/httprouter v1.3.0 // indirect\n\tgithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/prometheus/prometheus v0.301.0\n\tgithub.com/shurcooL/httpfs v0.0.0-20230704072500-f1e31cf0ba5c // indirect\n\tgithub.com/xhit/go-str2duration/v2 v2.1.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 8.7138671875,
          "content": "github.com/alecthomas/kingpin/v2 v2.4.0 h1:f48lwail6p8zpO1bC4TxtqACaGqHYA22qkHjHpqDjYY=\ngithub.com/alecthomas/kingpin/v2 v2.4.0/go.mod h1:0gyi0zQnjuFk8xrkNKamJoyUo382HRL7ATRpFZCw6tE=\ngithub.com/alecthomas/units v0.0.0-20240927000941-0f3dac36c52b h1:mimo19zliBX/vSQ6PWWSL9lK8qwHozUj03+zLoEB8O0=\ngithub.com/alecthomas/units v0.0.0-20240927000941-0f3dac36c52b/go.mod h1:fvzegU4vN3H1qMT+8wDmzjAcDONcgo2/SZ/TyfdUOFs=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/jpillora/backoff v1.0.0 h1:uvFg412JmmHBHw7iwprIxkPMI+sGQ4kzOWsMeHnm2EA=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/julienschmidt/httprouter v1.3.0 h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/mdlayher/vsock v1.2.1 h1:pC1mTJTvjo1r9n9fbm7S1j04rCgCzhCOS5DY0zqHlnQ=\ngithub.com/mdlayher/vsock v1.2.1/go.mod h1:NRfCibel++DgeMD8z/hP+PPTjlNJsdPOmxcnENvE+SE=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.61.0 h1:3gv/GThfX0cV2lpO7gkTUwZru38mxevy90Bj8YFSRQQ=\ngithub.com/prometheus/common v0.61.0/go.mod h1:zr29OCN/2BsJRaFwG8QOBr41D6kkchKbpeNH7pAjb/s=\ngithub.com/prometheus/exporter-toolkit v0.13.2 h1:Z02fYtbqTMy2i/f+xZ+UK5jy/bl1Ex3ndzh06T/Q9DQ=\ngithub.com/prometheus/exporter-toolkit v0.13.2/go.mod h1:tCqnfx21q6qN1KA4U3Bfb8uWzXfijIrJz3/kTIqMV7g=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/prometheus/prometheus v0.301.0 h1:0z8dgegmILivNomCd79RKvVkIols8vBGPKmcIBc7OyY=\ngithub.com/prometheus/prometheus v0.301.0/go.mod h1:BJLjWCKNfRfjp7Q48DrAjARnCi7GhfUVvUFEAWTssZM=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/shurcooL/httpfs v0.0.0-20230704072500-f1e31cf0ba5c h1:aqg5Vm5dwtvL+YgDpBcK1ITf3o96N/K7/wsRXQnUTEs=\ngithub.com/shurcooL/httpfs v0.0.0-20230704072500-f1e31cf0ba5c/go.mod h1:owqhoLW1qZoYLZzLnBw+QkPP9WZnjlSWihhxAJC1+/M=\ngithub.com/shurcooL/vfsgen v0.0.0-20230704071429-0000e147ea92 h1:OfRzdxCzDhp+rsKWXuOO2I/quKMJ/+TQwVbIP/gltZg=\ngithub.com/shurcooL/vfsgen v0.0.0-20230704071429-0000e147ea92/go.mod h1:7/OT02F6S6I7v6WXb+IjhMuZEYfH/RJ5RwEWnEo5BMg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/xhit/go-str2duration/v2 v2.1.0 h1:lxklc02Drh6ynqX+DdPyp5pCKLUQpRT8bp8Ydu2Bstc=\ngithub.com/xhit/go-str2duration/v2 v2.1.0/go.mod h1:ohY8p+0f07DiV6Em5LKB0s2YpLtXVyJfNt1+BlmyAsU=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngoogle.golang.org/protobuf v1.36.2 h1:R8FeyR1/eLmkutZOM5CWghmo5itiG9z0ktFlTVLuTmU=\ngoogle.golang.org/protobuf v1.36.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "handler",
          "type": "tree",
          "content": null
        },
        {
          "name": "histogram",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 10.0322265625,
          "content": "// Copyright 2014 The Prometheus Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage main\n\nimport (\n\t\"compress/gzip\"\n\t\"context\"\n\t\"fmt\"\n\t\"io\"\n\t\"log/slog\"\n\t\"net/http\"\n\t\"net/http/pprof\"\n\t\"net/url\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"syscall\"\n\n\t\"github.com/alecthomas/kingpin/v2\"\n\t\"github.com/golang/snappy\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n\t\"github.com/prometheus/client_golang/prometheus/promhttp\"\n\t\"github.com/prometheus/common/model\"\n\t\"github.com/prometheus/common/promslog\"\n\t\"github.com/prometheus/common/route\"\n\t\"github.com/prometheus/common/version\"\n\t\"github.com/prometheus/exporter-toolkit/web\"\n\n\tversioncollector \"github.com/prometheus/client_golang/prometheus/collectors/version\"\n\tdto \"github.com/prometheus/client_model/go\"\n\tpromslogflag \"github.com/prometheus/common/promslog/flag\"\n\twebflag \"github.com/prometheus/exporter-toolkit/web/kingpinflag\"\n\n\t\"github.com/prometheus/pushgateway/asset\"\n\t\"github.com/prometheus/pushgateway/handler\"\n\t\"github.com/prometheus/pushgateway/storage\"\n\n\tapi_v1 \"github.com/prometheus/pushgateway/api/v1\"\n)\n\nfunc init() {\n\tprometheus.MustRegister(versioncollector.NewCollector(\"pushgateway\"))\n}\n\nfunc main() {\n\tvar (\n\t\tapp                 = kingpin.New(filepath.Base(os.Args[0]), \"The Pushgateway\").UsageWriter(os.Stdout)\n\t\twebConfig           = webflag.AddFlags(app, \":9091\")\n\t\tmetricsPath         = app.Flag(\"web.telemetry-path\", \"Path under which to expose metrics.\").Default(\"/metrics\").String()\n\t\texternalURL         = app.Flag(\"web.external-url\", \"The URL under which the Pushgateway is externally reachable.\").Default(\"\").URL()\n\t\troutePrefix         = app.Flag(\"web.route-prefix\", \"Prefix for the internal routes of web endpoints. Defaults to the path of --web.external-url.\").Default(\"\").String()\n\t\tenableLifeCycle     = app.Flag(\"web.enable-lifecycle\", \"Enable shutdown via HTTP request.\").Default(\"false\").Bool()\n\t\tenableAdminAPI      = app.Flag(\"web.enable-admin-api\", \"Enable API endpoints for admin control actions.\").Default(\"false\").Bool()\n\t\tpersistenceFile     = app.Flag(\"persistence.file\", \"File to persist metrics. If empty, metrics are only kept in memory.\").Default(\"\").String()\n\t\tpersistenceInterval = app.Flag(\"persistence.interval\", \"The minimum interval at which to write out the persistence file.\").Default(\"5m\").Duration()\n\t\tpushUnchecked       = app.Flag(\"push.disable-consistency-check\", \"Do not check consistency of pushed metrics. DANGEROUS.\").Default(\"false\").Bool()\n\t\tpushUTF8Names       = app.Flag(\"push.enable-utf8-names\", \"Allow UTF-8 characters in metric and label names.\").Default(\"false\").Bool()\n\t\tpromlogConfig       = promslog.Config{Style: promslog.GoKitStyle}\n\t)\n\tpromslogflag.AddFlags(app, &promlogConfig)\n\tapp.Version(version.Print(\"pushgateway\"))\n\tapp.HelpFlag.Short('h')\n\tkingpin.MustParse(app.Parse(os.Args[1:]))\n\tlogger := promslog.New(&promlogConfig)\n\n\t*routePrefix = computeRoutePrefix(*routePrefix, *externalURL)\n\texternalPathPrefix := computeRoutePrefix(\"\", *externalURL)\n\n\tlogger.Info(\"starting pushgateway\", \"version\", version.Info())\n\tlogger.Info(\"Build context\", \"build_context\", version.BuildContext())\n\tlogger.Debug(\"external URL\", \"url\", *externalURL)\n\tlogger.Debug(\"path prefix used externally\", \"path\", externalPathPrefix)\n\tlogger.Debug(\"path prefix for internal routing\", \"path\", *routePrefix)\n\n\t// flags is used to show command line flags on the status page.\n\t// Kingpin default flags are excluded as they would be confusing.\n\tflags := map[string]string{}\n\tboilerplateFlags := kingpin.New(\"\", \"\").Version(\"\")\n\tfor _, f := range app.Model().Flags {\n\t\tif boilerplateFlags.GetFlag(f.Name) == nil {\n\t\t\tflags[f.Name] = f.Value.String()\n\t\t}\n\t}\n\n\tms := storage.NewDiskMetricStore(*persistenceFile, *persistenceInterval, prometheus.DefaultGatherer, logger)\n\n\tif *pushUTF8Names {\n\t\tmodel.NameValidationScheme = model.UTF8Validation\n\t\thandler.EscapingScheme = model.ValueEncodingEscaping\n\t} else {\n\t\tmodel.NameValidationScheme = model.LegacyValidation\n\t\thandler.EscapingScheme = model.NoEscaping\n\t}\n\n\t// Create a Gatherer combining the DefaultGatherer and the metrics from the metric store.\n\tg := prometheus.Gatherers{\n\t\tprometheus.DefaultGatherer,\n\t\tprometheus.GathererFunc(func() ([]*dto.MetricFamily, error) { return ms.GetMetricFamilies(), nil }),\n\t}\n\n\tr := route.New()\n\tr.Get(*routePrefix+\"/-/healthy\", handler.Healthy(ms).ServeHTTP)\n\tr.Get(*routePrefix+\"/-/ready\", handler.Ready(ms).ServeHTTP)\n\tr.Get(\n\t\tpath.Join(*routePrefix, *metricsPath),\n\t\tpromhttp.HandlerFor(g, promhttp.HandlerOpts{\n\t\t\tErrorLog: slog.NewLogLogger(logger.Handler(), slog.LevelError),\n\t\t}).ServeHTTP,\n\t)\n\n\t// Handlers for pushing and deleting metrics.\n\tpushAPIPath := *routePrefix + \"/metrics\"\n\tfor _, suffix := range []string{\"\", handler.Base64Suffix} {\n\t\tjobBase64Encoded := suffix == handler.Base64Suffix\n\t\tr.Put(pushAPIPath+\"/job\"+suffix+\"/:job/*labels\", handler.Push(ms, true, !*pushUnchecked, jobBase64Encoded, logger))\n\t\tr.Post(pushAPIPath+\"/job\"+suffix+\"/:job/*labels\", handler.Push(ms, false, !*pushUnchecked, jobBase64Encoded, logger))\n\t\tr.Del(pushAPIPath+\"/job\"+suffix+\"/:job/*labels\", handler.Delete(ms, jobBase64Encoded, logger))\n\t\tr.Put(pushAPIPath+\"/job\"+suffix+\"/:job\", handler.Push(ms, true, !*pushUnchecked, jobBase64Encoded, logger))\n\t\tr.Post(pushAPIPath+\"/job\"+suffix+\"/:job\", handler.Push(ms, false, !*pushUnchecked, jobBase64Encoded, logger))\n\t\tr.Del(pushAPIPath+\"/job\"+suffix+\"/:job\", handler.Delete(ms, jobBase64Encoded, logger))\n\t}\n\tr.Get(*routePrefix+\"/static/*filepath\", handler.Static(asset.Assets, *routePrefix).ServeHTTP)\n\n\tstatusHandler := handler.Status(ms, asset.Assets, flags, externalPathPrefix, logger)\n\tr.Get(*routePrefix+\"/status\", statusHandler.ServeHTTP)\n\tr.Get(*routePrefix+\"/\", statusHandler.ServeHTTP)\n\n\t// Re-enable pprof.\n\tr.Get(*routePrefix+\"/debug/pprof/*pprof\", handlePprof)\n\n\tquitCh := make(chan struct{})\n\tquitHandler := func(w http.ResponseWriter, r *http.Request) {\n\t\tfmt.Fprintf(w, \"Requesting termination... Goodbye!\")\n\t\tclose(quitCh)\n\t}\n\n\tforbiddenAPINotEnabled := func(w http.ResponseWriter, _ *http.Request) {\n\t\tw.WriteHeader(http.StatusForbidden)\n\t\tw.Write([]byte(\"Lifecycle API is not enabled.\"))\n\t}\n\n\tif *enableLifeCycle {\n\t\tr.Put(*routePrefix+\"/-/quit\", quitHandler)\n\t\tr.Post(*routePrefix+\"/-/quit\", quitHandler)\n\t} else {\n\t\tr.Put(*routePrefix+\"/-/quit\", forbiddenAPINotEnabled)\n\t\tr.Post(*routePrefix+\"/-/quit\", forbiddenAPINotEnabled)\n\t}\n\n\tr.Get(\"/-/quit\", func(w http.ResponseWriter, _ *http.Request) {\n\t\tw.WriteHeader(http.StatusMethodNotAllowed)\n\t\tw.Write([]byte(\"Only POST or PUT requests allowed.\"))\n\t})\n\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", decodeRequest(r))\n\n\tbuildInfo := map[string]string{\n\t\t\"version\":   version.Version,\n\t\t\"revision\":  version.Revision,\n\t\t\"branch\":    version.Branch,\n\t\t\"buildUser\": version.BuildUser,\n\t\t\"buildDate\": version.BuildDate,\n\t\t\"goVersion\": version.GoVersion,\n\t}\n\n\tapiv1 := api_v1.New(logger, ms, flags, buildInfo)\n\n\tapiPath := \"/api\"\n\tif *routePrefix != \"/\" {\n\t\tapiPath = *routePrefix + apiPath\n\t}\n\n\tav1 := route.New()\n\tapiv1.Register(av1)\n\tif *enableAdminAPI {\n\t\tav1.Put(\"/admin/wipe\", handler.WipeMetricStore(ms, logger).ServeHTTP)\n\t}\n\n\tmux.Handle(apiPath+\"/v1/\", http.StripPrefix(apiPath+\"/v1\", av1))\n\n\tserver := &http.Server{Handler: mux}\n\n\tgo shutdownServerOnQuit(server, quitCh, logger)\n\terr := web.ListenAndServe(server, webConfig, logger)\n\n\t// In the case of a graceful shutdown, do not log the error.\n\tif err == http.ErrServerClosed {\n\t\tlogger.Info(\"HTTP server stopped\")\n\t} else {\n\t\tlogger.Error(\"HTTP server stopped\", \"err\", err)\n\t}\n\n\tif err := ms.Shutdown(); err != nil {\n\t\tlogger.Error(\"problem shutting down metric storage\", \"err\", err)\n\t}\n}\n\nfunc decodeRequest(h http.Handler) http.Handler {\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tdefer r.Body.Close() // Make sure the underlying io.Reader is closed.\n\t\tswitch contentEncoding := r.Header.Get(\"Content-Encoding\"); strings.ToLower(contentEncoding) {\n\t\tcase \"gzip\":\n\t\t\tgr, err := gzip.NewReader(r.Body)\n\t\t\tif err != nil {\n\t\t\t\thttp.Error(w, err.Error(), http.StatusBadRequest)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdefer gr.Close()\n\t\t\tr.Body = gr\n\t\tcase \"snappy\":\n\t\t\tr.Body = io.NopCloser(snappy.NewReader(r.Body))\n\t\tdefault:\n\t\t\t// Do nothing.\n\t\t}\n\n\t\th.ServeHTTP(w, r)\n\t})\n}\n\nfunc handlePprof(w http.ResponseWriter, r *http.Request) {\n\tswitch route.Param(r.Context(), \"pprof\") {\n\tcase \"/cmdline\":\n\t\tpprof.Cmdline(w, r)\n\tcase \"/profile\":\n\t\tpprof.Profile(w, r)\n\tcase \"/symbol\":\n\t\tpprof.Symbol(w, r)\n\tdefault:\n\t\tpprof.Index(w, r)\n\t}\n}\n\n// computeRoutePrefix returns the effective route prefix based on the\n// provided flag values for --web.route-prefix and\n// --web.external-url. With prefix empty, the path of externalURL is\n// used instead. A prefix \"/\" results in an empty returned prefix. Any\n// non-empty prefix is normalized to start, but not to end, with \"/\".\nfunc computeRoutePrefix(prefix string, externalURL *url.URL) string {\n\tif prefix == \"\" {\n\t\tprefix = externalURL.Path\n\t}\n\n\tif prefix == \"/\" {\n\t\treturn \"\"\n\t}\n\n\t// Ensure prefix starts with \"/\".\n\tif !strings.HasPrefix(prefix, \"/\") {\n\t\tprefix = \"/\" + prefix\n\t}\n\n\tprefix = strings.TrimSuffix(prefix, \"/\")\n\n\treturn prefix\n}\n\n// shutdownServerOnQuit shutdowns the provided server upon closing the provided\n// quitCh or upon receiving a SIGINT or SIGTERM.\nfunc shutdownServerOnQuit(server *http.Server, quitCh <-chan struct{}, logger *slog.Logger) error {\n\tnotifier := make(chan os.Signal, 1)\n\tsignal.Notify(notifier, os.Interrupt, syscall.SIGTERM)\n\n\tselect {\n\tcase <-notifier:\n\t\tlogger.Info(\"received SIGINT/SIGTERM; exiting gracefully...\")\n\t\tbreak\n\tcase <-quitCh:\n\t\tlogger.Warn(\"received termination request via web service, exiting gracefully...\")\n\t\tbreak\n\t}\n\treturn server.Shutdown(context.Background())\n}\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}