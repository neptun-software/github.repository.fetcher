{
  "metadata": {
    "timestamp": 1736566863129,
    "page": 433,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "opencontainers/runtime-spec",
      "stars": 3269,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.068359375,
          "content": "# https://tools.ietf.org/html/rfc5545#section-3.1\n*.ics text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "output\nschema/validate\nversion.md\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.1298828125,
          "content": "Aleksa Sarai <cyphar@cyphar.com> <asarai@suse.de>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAmit Saha <amitsaha.in@gmail.com> <amitsaha@users.noreply.github.com>\nAntonio Murdaca <runcom@linux.com> <runcom@redhat.com>\nBrandon Philips <brandon@ifup.org> <brandon.philips@coreos.com>\nBrandon Philips <brandon@ifup.org> <brandon@ifup.co>\nChengTiesheng <chengtiesheng@huawei.com>\nDaniel, Dao Quang Minh <dqminh89@gmail.com>\nDoug Davis <dug@us.ibm.com> <duglin@users.noreply.github.com>\nJames O. D. Hunt <james.o.hunt@intel.com>\nJohn Howard <jhoward@microsoft.com> <John.Howard@microsoft.com>\nLinZhinan(Zen Lin) <linzhinan@huawei.com>\nMrunal Patel <mrunalp@gmail.com> <mrunal@Mrunals-iMac.local>\nMrunal Patel <mrunalp@gmail.com> <mrunal@dhcp-16-185.sjc.redhat.com>\nMrunal Patel <mrunalp@gmail.com> <mrunal@me.com>\nVincent Batts <vbatts@hashbangbash.com> <vbatts@hashbangbash.com>\nVincent Batts <vbatts@hashbangbash.com> <vbatts@redhat.com>\nVishnu Kannan <vishnuk@google.com>\nVishnu Kannan <vishnuk@google.com> <vishh@users.noreply.github.com>\nZefan Li <lizefan@huawei.com> <lizf1984@hotmail.com>\n梁辰晔 (Liang Chenye) <liangchenye@huawei.com>\n"
        },
        {
          "name": ".tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.1064453125,
          "content": "* @AkihiroSuda @crosbymichael @cyphar @dqminh @giuseppe @hqhq @kolyshkin @mrunalp @thaJeztah @tianon @utam0k\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 35.953125,
          "content": "OpenContainers Specifications\n\nChanges with v1.2.0:\n\n\tAdditions:\n\n\t* config: add idmap and ridmap mount options (#1222)\n\t* config.md: allow empty mappings for [r]idmap (#1224)\n\t* features-linux: Expose idmap information (#1219)\n\t* mount: Allow relative mount destinations on Linux (#1225)\n\t* features: add potentiallyUnsafeConfigAnnotations (#1205)\n\t* config: add support for org.opencontainers.image annotations #1197\n\n\tMinor fixes:\n\n\t* config: improve bind mount and propagation doc (#1228)\n\n\tDocumentation, CI & Governance:\n\n\t* fix link to hooks in features (#1226)\n\t* specs-go: add missing deprecation comment for Hooks.Prestart (#1232)\n\t* specs-go: mark LinuxMemory.Kernel as deprecated ()#1233)\n\nChanges with v1.1.0:\n\n\tBreaking changes (but rather conforms to the existing runc implementation):\n\n\t* config: change prestart hook spec to match reality (#1169)\n\n\tDeprecations:\n\n\t* config-linux: mark memory.kernel[TCP] as NOT RECOMMENDED (#1093)\n\n\tAdditions:\n\n\t* cgroup: add cgroup v2 support (#1040)\n\t* seccomp: allow to override errno return code (#1041)\n\t* seccomp: Add support for SCMP_ACT_KILL_PROCESS (#1044)\n\t* Update seccomp architectures to support RISCV64 (#1059)\n\t* Add support for SCMP_ACT_KILL_THREAD (#1064)\n\t* Add Seccomp Notify support using UNIX sockets and container metadata (#1074)\n\t* config-linux: Add Intel RDT CMT and MBM Linux support (#1076)\n\t* seccomp: allow to override default errno return code (#1087)\n\t* Introduce zos as platform (#1095)\n\t* config-linux: add idle option for container cgroup (#1136)\n\t* config-linux: add CFS bandwidth burst (#1120)\n\t* IDMapping field for mount point (#1143)\n\t* schema: add cpu idle (#1145)\n\t* add domainname spec entity (#1156)\n\t* config-linux: add memory.checkBeforeUpdate (#1158)\n\t* seccomp: Add flag SECCOMP_FILTER_FLAG_WAIT_KILLABLE_RECV (#1161)\n\t* config-linux: add support for rsvd hugetlb cgroup (#1116)\n\t* features: add `features.md` to formalize the `runc features` JSON (#1130)\n\t* config-linux: add support for time namespace (#1151)\n\t* config: add scheduler entity (#1188)\n\t* config: Add I/O Priority Configuration for process group in Linux Containers (#1191)\n\n\tMinor fixes:\n\n\t* seccomp: fix go-specs for errnoRet (#1042)\n\t* Define State for container and runtime namespace (#1045)\n\t* Add State status constants to spec-go (#1046)\n\t* config.go: make umask a pointer (#1058)\n\t* Update State structure to use the new ContainerState type (#1056)\n\t* Fix int64 and uint64 type value ranges (#1060)\n\t* Fix seccomp notify inconsistencies (#1096)\n\t* runtime should WARN / ignore capabilities that cannot be granted (#1094)\n\t* config-linux: clarify the handling of ClosID RDT parameter (#1104)\n\t* defs-zos: [Fix] prevent schema parsers from hitting recursion-loop while resolving types. (#1117)\n\t* fix the lifecycle reference in the states listing (#1118)\n\t* specify cgroup ownership semantics (#1123)\n\t* config-linux: MAY reject an unfit cgroup (#1125)\n\t* cgroup ownership: clarify that some files may not exist (#1137)\n\t* schema: update README.md (#1083)\n\t* schema: make with golang 1.16 (#1084)\n\t* Update Windows CPU comments (#1144)\n\t* specs-go: export LinuxBlockIODevice (#1103)\n\t* config-linux: update type of LinuxCPU.Idle to *int64 (#1146)\n\t* Add available LinuxSeccompFlags (#1138)\n\t* config-linux: clarify where device nodes can be created (#1148)\n\t* runtime: remove `When serialized in JSON, the format MUST adhere to the following pattern` (#1178)\n\t* config: clarify Linux mount options (#1181)\n\t* schema: fix schema for timeOffsets (#1193)\n\t* schema: remove duplicate keys (#1195)\n\t* config-linux: clarify I/O throttling differences between cgroup v1 and v2 (#1194)\n\t* releases: use +dev as in-development suffix (#1198)\n\t* features: update Example (#1204)\n\t* schema: fix definition for ioPriority (#1206)\n\t* features: add a note to avoid confusion about annotations (#1212)\n\n\tDocumentation, CI & Governance:\n\n\t* MAINTAINERS: Add @cyphar as maintainer (#1043)\n\t* Add Giuseppe Scrivano as a runtime spec maintainer (#1048)\n\t* Remove superfluous 'an' (#1049)\n\t* docs: Added enclave OCI runtime rune to implementations (#1055)\n\t* Change all references from whitelist to allowlist (#1054)\n\t* MAINTAINERS: update vbatts email (#1065)\n\t* travis: fix go_import_path (#1072)\n\t* Makefile: Fix golint URL used in go get (#1075)\n\t* config-linux: fix personality link (#1086)\n\t* README: Fix broken link for charter (#1091)\n\t* add youki to implementations.md (#1126)\n\t* Switch to GitHub Actions, CODEOWNERS, etc. (#1128)\n\t* typo: seccompFD -> seccompFd (#1133)\n\t* fix RFC link (#1153)\n\t* maintainer updates as per #1101 (#1150)\n\t* GOVERNANCE: correct the Charter URL (#1157)\n\t* CODEOWNERS: sync with MAINTAINERS (#1160)\n\t* Update CI to Go 1.20 (#1179)\n\t* config-linux: fix url error (#1184)\n\t* config-linux: chore: Update `ociVersion` in example (#1199)\n\t* MAINTAINERS: add Toru Komatsu (utam0k) (#1201)\n\t* glossary: `s/features document/Features structure/g` (#1203)\n\t* CODEOWNER: Add Toru Komatsu(@utam0k) to sync with MAINTAINERS (#1207)\n\t* README.md: update chat information (#1210)\n\t* Remove outdated meeting.ics (#1211)\n\nChanges with v1.0.2:\n\n\tAdditions:\n\n\t* Add create-container, create-runtime and start-container hooks (#1008)\n\t* config-linux: add Intel RDT CLOS name sharing support (#988)\n\t* config-linux: Add Intel RDT/MBA Linux support (#932)\n\t* config-linux: Add Memory cgroup's use_hierarchy (#985)\n\t* Add Linux personality support (#1012)\n\t* config: Add Windows Devices to Schema (#976)\n\t* Add support for SCMP_ACT_LOG (#1019)\n\t* config-linux: support seccomp flags (#1018)\n\n\tMinor fixes and documentation:\n\n\t* Makefile: avoid SELinux for making docs\n\t* Clarify case with pre-configured Intel RDT closID (#1034)\n\t* config-linux: describe more about rootfs mount propagation (#1035)\n\t* config-linux: add SHOULD to linux.namespaces.type (#1025)\n\t* Reduce DCO checks per PR from 3 to 1 (#1029)\n\t* Fix typo in RELEASES.md (#1033)\n\t* Remove some unneeded indent (#1031)\n\t* Add documentation how to do releases (#1027)\n\t* Removed Vishnu Kannan & Brandon Philips from maintainers (#1030 & #1028)\n\t* schema: drop id from umask (#1024)\n\t* implementations.md: fix repository for crun (#1017)\n\t* Update meeting info section to point to \"org\" repo (#1016)\n\t* Fix markdown escape in config-linux (#1013)\n\t* config-linux: add more info about hugetlb page size (#1011)\n\t* Fix ociVersion of Configuration Schema Example to support ambient capability (#1009)\n\t* Fix Namespaces to use LinuxNamespaceType (#1007)\n\t* change new pid namespace description (#1006)\n\t* updating link to code of conduct in org repository (#1001)\n\t* Update Windows LayerFolder docs (#999)\n\t* Windows:Have native CommandLine in Process (#998)\n\t* vm: fix parameters field (#994)\n\t* config-linux: documentation change for Intel RDT/MBA Software Controller support (#992)\n\t* Bump Go versions (#993)\n\t* Support for network namespace in windows (#989)\n\t* config: clarify source mount (#981)\n\t* Fix camelCasing on idType to align with other Windows spec conventions (#976)\n\t* meeting: Bump July meeting from the 4th to the 11th (#977)\n\t* docs: Added kata-runtime to implementations (#969)\n\t* Add gVisor to the implementations list (#970)\n\t* .travis.yml: Get schema dependencies in before_install (#968)\n\t* config: Clarify execution environment for hooks (#953)\n\t* config-linux: Drop console(4) reference (#965)\n\t* Linux devices: uid/gid relative to container (#959)\n\t* config: Add VM-based container configuration section (#949)\n\t* uidMappings: change order of fields for clarity (#956)\n\t* specs-go/config: Define RDMA cgroup (#942)\n\t* schema/Makefile: fix test (#947)\n\t* config: Fix Linux mount options links (#952)\n\t* glossary: Bump JSON spec to RFC 8259 (#951)\n\t* schema: Completely drop our JSON Schema 'id' properties (#945)\n\t* meeting: Bump January meeting from the 3rd to the 10th (#943)\n\t* config: add \"umask\" field to POSIX \"user\" section (#941)\n\t* schema: add allowed values for defaultAction (#940)\n\t* config: Dedent root paragraphs, since they aren't a list entry (#936)\n\t* fix the link to hook (#933)\n\t* config: Collapse extensibility to a single MUST (#916)\n\t* schema/defs-linux: change weight type to uint16 (#898)\n\t* runtime: Clarify ociVersion as based on the state schema (#903)\n\nChanges with v1.0.1:\n\n\tMinor fixes and documentation:\n\n\t* spec: Expand \"OCI\" in spec-title reference and add \"Initiative\"\n\t  (#900)\n\t* config: Simplify title to \"Configuration\" (#901)\n\t* config: Fix \"procfs_2\" -> \"proc_2\" link label (#906)\n\t* config: Fix IEEE Std 1003.1-2008 exec link markup (#913)\n\t* config: Add a trailing period to the \"cannot be mapped\" rlimits\n\t  line (#915)\n\t* config-linux: RFC 2119 MUST for absolute linux.namespaces[].path\n\t  (#925).  This is technically a breaking change, because a config\n\t  with a relative namespace path would have been compliant before,\n\t  but will be non compliant with this change. However, the previous\n\t  \"an absolute path to namespace file\" wording was clear enough that\n\t  config authors are unlikely to be relying on relative namespace\n\t  paths in configs.\n\t* config-linux: More specific documentation for weightDevice and\n\t  throttle* (#825)\n\t* config-linux: Modify procfs to proc (#905)\n\t* config-linux: Fix \"psuedo\" -> \"pseudo\" typo (#921)\n\t* config-windows: Make maximum a uint16 (was a uint) (#891)\n\t* runtime: Change \"process in the container\" -> \"container\n\t  process\" (#907)\n\t* schema/config-schema: Use ArrayOfStrings in capabilities\n\t  properties. (#886)\n\t* schema/config-linux:\n\t  s/throttleWriteIopsDevice/throttleWriteIOPSDevice/ (#899)\n\t* schema/config-linux: add intelRdt field (#889)\n\t* schema/config-solaris: Replaced refs with some fields\n\t  (cappedCPU.ncpus, etc.) (#892)\n\nChanges with v1.0.0:\n\n\tBreaking changes:\n\n\t* config: Shift disableOOMKiller from linux.resources to\n\t  linux.resources.memory (#896)\n\n\tDecreased restrictions:\n\n\t* runtime: Make the state JSON's pid optional on non-Linux platforms\n\t  (#897)\n\n\tMinor fixes and documentation:\n\n\t* schema/defs-linux: Require Syscall.action (#885)\n\t* specs-go/config: Fix 'omiempty' -> 'omitempty' typo for\n\t  LinuxSeccompArg.ValueTwo (#884)\n\t* ROAMAP: remove the pre-v1.0.0 roadmap (#890)\n\nChanges with v1.0.0-rc6:\n\n\tBreaking changes:\n\n\t* config: Shift oomScoreAdj to process and add RFC 2119 requirements\n\t  for the runtime (#781, #789, #836)\n\t* config: Forbid 'root' on Hyper-V (#820, #838).\n\t* config: process.capabilities and process.noNewPrivileges are\n\t  Linux-only again (#880).  This partially reverses #673, which had\n\t  landed in v1.0.0-rc5.\n\t* config: Remove process.rlimits from Windows (#880).  It is now\n\t  POSIX-only, while in v1.0.0-rc5 it was cross-platform (because of\n\t  #673).  Before #673 (in v1.0.0-rc4 and earlier), it was\n\t  Linux-only.\n\t* config-linux: Drop redundant 'blkio' prefix from blockIO\n\t  properties (#860)\n\t* config-linux: Make memory limits int64 instead of uint64 (#876).\n\t  This partially reverses #704, which had landed in v1.0.0-rc5.\n\t* config-windows: Change CPU 'percent' to 'maximum' (#777)\n\t* config-windows: Remove memory 'reservation' (#788)\n\t* config-windows: Remove 'resources.network' and add 'network' (#801)\n\n\tAdditions:\n\n\t* config: Windows runtimes MUST support the 'ro' mount option (#868)\n\t* config-linux: Add Intel RDT/CAT Linux support (#630, #787)\n\t* config-linux: Add Markdown specification for syscalls (#706)\n\t* config-linux: Add 'unbindable' rootfsPropagation value (#770, #775)\n\t* config-windows: Add 'credentialSpec' (#814, #859)\n\t* config-windows: Add 'servicing' (#815)\n\t* config-windows: Add 'ignoreFlushesDuringBoot' (#816, #859)\n\t* config-windows: Add 'hyperv' (#818, #849, #859)\n\t* config-windows: Add 'layerFolders' (#828)\n\n\tRemovals and increased restrictions:\n\n\t* config: Remove 'platform' (#850)\n\t* config: Require strictly-postitive 'timeout' values (#764)\n\t* config: Strengthen punt to kernel for valid capabilities strings\n\t  (#766, #790)\n\t* config: Require volume GUID paths for root.path (#849)\n\t* config: Forbid setting 'readonly' true on Windows (#819)\n\t* config: Forbid setting mount 'type' entirely on Windows and forbid\n\t  UNC paths and mapped drives in 'source' on Windows (#821)\n\t* config: Remove 'hooks' from Windows spec (#855, #869, #870)\n\t* config-linux: Clearly require absolute path for namespace (#720)\n\t* config-linux: RFC 2119 tightening for namespaces (#767)\n\t* config-linux: Require at least one entry in\n\t  linux.seccomp.syscalls[].names (#769)\n\t* config-linux: Remove syscall.comment (#714)\n\t* config-linux: Use MUST and MAY for weight and leafWeight (#751)\n\t* config-linux: Remove explicit 'null' from device cgroup values\n\t  (#804)\n\t* runtime: Remove \"features the runtime chooses to support\" (#732)\n\t* runtime: Drop \"not supported by the base OS\" loophole (#733)\n\t* runtime-linux: Condition /proc/self/fd symlinks on source\n\t  existence (#736)\n\n\tDecreased restrictions:\n\n\t* config: Make 'process' optional (#701, #805)\n\t* config-linux: Make linux.seccomp.syscalls optional (#768)\n\t* config-linux: valueTwo is now optional in\n\t  `linux.seccomp.syscalls[].args` entries (#877)\n\t* config-linux: Remove local range restrictions for blkioWeight,\n\t  blkioLeafWeight, weight, leafWeight, and shares (#780)\n\t* config-linux: Explicitly allow symlinks for providing devices (#873)\n\n\tMinor fixes and documentation:\n\n\t* config: Remove \"MAY support any valid values\" sentence (#851)\n\t* config: Remove the previously-forbidden mounts[].type from the\n\t  Windows spec (#854)\n\t* config: Clarify mounts[].source relative path anchor (#735)\n\t* config: Explicitly make consoleSize ignored if terminal is false or\n\t  unset (#863)\n\t* config: Specify height/width units (characters) for consoleSize (#761)\n\t* config: Use \"POSIX platforms\" instead of \"Linux and Solaris\" (#838)\n\t* config-linux: Explicit namespace for interface names (#713)\n\t* config-linux: Explicitly list cgroupsPath as optional (#823)\n\t* runtime: Clarify valid container states for 'start', 'kill', and\n\t  'delete' (#875)\n\t* runtime: Explicitly make process.* timing implementation-defined (#700)\n\t* specs-go/config: Remove range restrictions from Windows comments (#783)\n\t* specs-go/config: Add omitempty to LinuxSyscall.Args (#763)\n\t* specs-go/config: Use a pointer for Process.ConsoleSize (#792)\n\t* schema/README: Use v1.0.0 URL in examples to prepare for the 1.0.0\n\t  release (#881)\n\t* schema/Makefile: Make 'validate' the default target (#750)\n\t* schema/Makefile: Add 'clean' target (#774)\n\t* schema: Add 'test' target to the Makefile (#785)\n\t* *: Remove unnecessary .PHONY entries (#750, #778, #802)\n\t* *: Typo fixes and polishing (#681, #708, #702, #703, #709, #711,\n\t  #712, #721, #722, #723, #724, #730, #737, #738, #741, #744, #749,\n\t  #753, #756, #765, #773, #776, #784, #786, #793, #794, #796, #798,\n\t  #799, #800, #803, #807, #809, #811, #812, #822, #824, #826, #827,\n\t  #832, #839, #840, #846, #847, #848, #852, #856, #858, #862, #865,\n\t  #871, #874)\n\nChanges with v1.0.0-rc5:\n\n\tBreaking changes:\n\n\t* config: Explicitly require `platform` (#695).\n\t* config: The platform-specific sections (`linux`, `solaris`, and\n\t  `windows`) MUST NOT be set unless they match `platform.os` (#673).\n\t* config: `process.capabilities` is now an object instead of an\n\t  array of strings (#675).\n\t* config-linux: No longer allow negative values for some resources,\n\t  partially reversing #648 from v1.0.0-rc4 (#704).\n\t* config-linux: `linux.seccomp.syscalls` entries have `names`\n\t  instead of `name` (#657).\n\t* runtime: Rename the state `bundlePath` property to `bundle`\n\t  (#674).\n\n\tAdditions:\n\n\t* config: `process.capabilities` is no longer Linux-only (#673).\n\t* config-linux: `linux.seccomp.syscalls` entries have a new\n\t  `comment` property (#657).\n\t* config-linux: Add new architectures from libseccomp 2.3.2 (#705)\n\t* runtime: Add a `creating` state `status` (#507, #694).\n\n\tRemovals and increased restrictions:\n\n\t* runtime: Document hook timing and exit code handling (#532).\n\t* schema/config-linux: Explicit `null` values are no longer\n\t  compliant (#662).\n\n\tDecreased restrictions:\n\n\t* config: `type` and `source` properties are now optional for\n\t  `mounts` entries (#699).\n\t* config: `args` property is now optional for hooks (#685).\n\t* config-linux: Runtimes no longer need to provide `/proc` and\n\t  other filesystems unless they are explicitly requested in the\n\t  configuration JSON (#666).\n\n\tMinor fixes and documentation:\n\n\t* spec: Add OCI Runtime Abstract (#691).\n\t* config: Document the Go `platform` tag (#570).\n\t* config-linux: Remove local uid/gid mapping limit and punt to the\n\t  kernel (#693).\n\t* schema: Fix broken `string` and similar `$ref`s (#684).\n\t* schema: Remove `mounts` from required properties (#696).\n\t* schema: Remove `major` and `minor` from `linux.devices` entries\n\t  (#688).\n\t* schema: Check for the required `type`, `hard`, and `soft` in\n\t  `process.rlimits` entries (#696).\n\t* schema/validate: Gained usage documentation and fixed\n\t  `schemaPath` logic when the argument did not contain `://` (#552).\n\t* *: Add anchor tags to a number of spec locations (#707).\n\t* *: Consistent link syntax (#687).\n        * *: Minor cleanup and rewording (#697).\n\nChanges with v1.0.0-rc4:\n\tAdditions:\n\n\t* config-linux: Allow negative values for some resources (#648)\n\t* config-linux: Lift no-tweaking namespace restriction (#649)\n\n\tRemovals and increased restrictions:\n\n\t* config: Rlimit types must be unique (#607)\n\t* config: Forbid empty-string keys in 'annotations' (#645, #654)\n\t* config-linux: Require runtime errors for pre-existing devices\n\t  (#647)\n\t* runtime: Only require 'pid' in the state for created/running\n\t  statuses (#664)\n\t* schema: Add 'consoleSize' and update requirements (#646)\n\t* schema: Remove string pointers (#656)\n\t* schema/config-linux: Remove blockIODeviceThrottle and other\n\t  pointers (#545)\n\n\tBreaking Go changes:\n\n\t* specs-go/config: Remove string pointers (#653)\n\t* specs-go/config: Make Spec.Hooks a pointer (#427)\n\t* specs-go/config: Convert some resources from unsigned integers\n\t  to signed integers (#648)\n\n\tMinor fixes and documentation:\n\n\t* config: Explicitly list 'hooks' as optional and cite POSIX for\n\t  'env' and 'args' (#427)\n\t* runtime: Replace \"process is stopped\" with \"process exits\"\n\t  (#465)\n\t* schema/config-linux: Add missing kernelTCP (#655)\n\t* schema/validate: Allow schema identifiers to contain a URL\n\t  scheme (#490)\n\t* .travis: Fix git-validation commit ranges (#216)\n\t* *: Add anchor tags to a number of spec locations (#612, #636,\n\t  #637, #638, #639, #640)\n\t* *: Typo fixes and polishing (#643, #650, #652, #656, #660, #665)\n\nChanges with v1.0.0-rc3:\n\tAdditions:\n\n\t* config: Add support for Windows-based containers (#565, #573)\n\t* config: Add process.consoleSize (#563)\n\t* config: Explicitly allow unknown extensions and document\n\t  annotations key conventions (#510)\n\t* config: Define mounts entries for Solaris (#588)\n\n\tRemovals and increased restrictions:\n\n\t* config: Require absolute paths for mount destinations (#609)\n\t* config-linux: Require absolute path for maskedPaths and\n\t  readonlyPaths (#587)\n\t* config-linux: Only require /dev/console when process.terminal is\n\t  true.  Also require /dev/console to be provided by a bind mount\n\t  (#518)\n\t* runtime: Require runtimes to generate errors when the container\n\t  specified in config.json cannot be created (#559)\n\n\tBreaking Go changes:\n\n\t* specs-go/config: Aggressive namespacing (#567)\n\t* specs-go/config: Remove pointers from LinuxHugepageLimit,\n\t  LinuxInterfacePriority, and LinuxPids properties (#586)\n\t* specs-go/state: Rename version to ociVersion (#633)\n\t  LinuxInterfacePriority, and LinuxPids properties (#586)\n\n\tMinor fixes and documentation:\n\n\t* spec: Separate the spec from project scaffolding (#626)\n\t* README: Define \"unspecified\", \"undefined\", and\n\t \"implementation-defined\" (#575)\n\t* config: Clarify absolue and relative values for root.path (#558)\n\t* config: Clarify ociVersion covering the configuration <->\n\t  runtime API (#523)\n\t* config-linux: Forbid duplicated namespaces with same `type`\n\t  (#597)\n\t* glossary: Make objects explicitly unordered and forbid duplicate\n\t  names (#584)\n\t* specs-go/config: Add platform tags to Rlimits and\n\t  NoNewPRivileges (#564)\n\t* schema/defs-linux: Use int64 for major/minor types (#610)\n\t* Makefile: Add support for Go 1.7 (#547)\n\t* Makefile: Require Go >= 1.6 for golint (#589)\n\t* Makefile: Use a POSIX-compatible test ('==' -> '=') (#542)\n\t* implementations: Rename ocitools -> runtime-tools (#585)\n\t* *: Typo fixes and polishing (#556, #566, #568, #569, #571, #572,\n\t  #574, #595, #596, #599, #600, #601, #603, #605, #608, #613, #617,\n\t  #619, #621, #622, #623, #624, #625, #627, #629)\n\nChanges with v1.0.0-rc2:\n\tAdditions:\n\n\t* config-linux: Add new architectures from libseccomp 2.3.0 (#505)\n\t* schema: Add JSON Schema for state JSON and move schema.json to\n\t  config-schema.json and similar (#481, #498, #519)\n\n\tMinor fixes and documentation:\n\n\t* Add compliance language for platforms and architectures (#527)\n\t* Remove \"unconditionally compliant\" language (#553)\n\t* bundle: Remove distribution references (#487)\n\t* runtime: Fix sub-bullet indentation (#495)\n\t* config: Replace Arch fstab reference with mount(8) (#443)\n\t* config: Synchronize comments between Markdown and Go (#525)\n\t* config: Drop v0.x compatibility statement (#488)\n\t* config-linux: RFC 2119 wording for cgroupsPath (#493)\n\t* config-linux: Make linux.devices and linux.resources.devices\n\t  optional (#526)\n\t* config-linux: Extend no-tweak requirement to runtime namespaces (#538)\n\t* schema: Add hook.timeout (#544)\n\t* schema: Add missing '\"type\": \"object\"' (#528)\n\t* schema: Run 'make fmt' and remove duplicates (#546, #551)\n\t* schema/config: Make 'hostname' optional (#491)\n\t* schema/config-linux: Add linux.resources.devices (#550)\n\t* specs-go/config: Add Solaris tags to User properties (#496)\n\t* specs-go/config: Make Linux and Solaris omitempty again (#502)\n\t* specs-go/config: Make KernelTCP and ClassID omitempty (#531)\n\t* specs-go/config: Fix \"specified\" typo for ApparmorProfile (#503)\n\t* Makefile: Remove code-of-conduct.md and version.md when clean (#541)\n\t* implementations: Mention cc-oci-runtime (#539)\n\t* Use filesystem instead of file system (#529)\n\t* .pullapprove: Add DCO check via PullApprove\n\t* GOVERNANCE: Add governance and release process docs (#521)\n\t* README: Change meeting time from 10am to 2pm Pacific (#524)\n\t* README: Update conference-call phone number (#512, #515)\n\nChanges with v1.0.0-rc1:\n\tBreaking changes:\n\n\t* runtime: Split create and start, #384, #450, #463, #464, #467,\n\t  #468\n\t* runtime: Remove exec, #388\n\t* runtime: Enviroment MUST match the configuration, #397\n\t* config: Runtime MUST generate errors for unsupported platforms,\n\t  #441\n\t* config: Windows mount destinations MUST NOT be nested, #437\n\n\tAdditions:\n\n\t* solaris: Added platform-specific configuration, #411, #424, #431,\n\t  #436\n\t* runtime: Add 'annotations' and 'status' to the state structure,\n\t  #462, #484, #485\n\t* runtime: State no longer needs to be serialized as JSON, #446\n\t* runtime-linux: Add /dev symbolic links, #449\n\t* config: Allow absolute paths for root.path (which previously\n\t  required relative paths), #394\n\t* config-linux: Add linux.mountLabel, #393\n\t* config-linux: Add suport for cgroup namespace, #397\n\t* config-linux: Runtime SHOULD NOT modify ownership of any\n\t  referenced filesystem (previously the restriction only applied to\n\t  the root filesystem), #452\n\t* specs-go/seccomp: Add ppc and s390x to specs-go/config.go, #475\n\n\tMinor fixes and documentation:\n\n\t* README: Add project.md to the Table of Contents, #376\n\t* README: Consistenly indent the Table of Contents, #400\n\t* README: Link to LICENSE, #442\n\t* README: Weekly call is OCI-wide, #378\n\t* config: Explicit runtime namespace for hooks, #415\n\t* config: Explicit container namespace for uid, gid, and\n\t  additionalGids, #412\n\t* config: Fix 'string' -> 'array of strings' typo for process.args,\n\t  #416\n\t* runtime: The runtime MAY validate config.json, #418\n\t* runtime: Move errors section out of operations, #445\n\t* runtime: MAY -> SHOULD for post-stop error logging, #410\n\t* schema/README: Document JSON Schema usage, #360, #385\n\t* schema: Minor description updates, #456, #461\n\t* schema/validate: Support reading documents via stdin, #482\n\t* .pullapprove: Automate review approval, #458, #474\n\t* .gitignore: Hide more auto-generated files, #386, #392\n\t* .travis: git-validation detects Travis now, #366\n\t* .travis: Regress on failure to produce docs, #479\n\t* Makefile: Filename docs.* -> oci-runtime-spec.*, #478\n\t* Makefile: Add install.tools target, #349\n\t* Makefile: Allow native pandoc implementations, #428, #448\n\t* Makefile: Prefer Bash, #455\n\t* Makefile: Travis support for .gitvalidation, #422\n\t* specs-go/config: Add missing omitempties for Process.Terminal,\n\t  Root.Readonly, Spec.Linux, and Spec.Mounts, #408, #429, #430, #431\n\t* specs-go/config: Remove incorrect omitempties for User.UID and\n\t  User.GID, #425\n\t* specs-go/config: Drop platform-independent comment, #451\n\t* version: Include version in generated documentation, #406\n\t* *: Anchor examples, #348\n\t* *: Fix remnants from SelinuxProcessLabel to SelinuxLabel rename,\n\t   #396\n\t* *: Outsource code-of-conduct to TOB repository, #375, #413\n\t* *: RFC 2119 consistency, #407, #409, #438, #444, #449\n\t* *: Typo fixes, #390, #401\n\t* *: Whitespace fixes and validation, #380, #381, #426\n\t* ROADMAP: Remove stale targets, #435\n\nChanges with v0.5.0:\n\tBreaking changes:\n\n\t* specs-go: Renamed the repository from opencontainers/specs to\n\t  opencontainers/runtime-spec, #365\n\n\tAdditions:\n\n\t* config: Add 'timeout' for hooks, #346\n\t* config-linux: Add 'maskedPaths' and 'readonlyPaths', #364\n\n\tMinor fixes and documentation:\n\n\t* JSON Schema bug-fixes and improved examples, #370\n\t* README: Define \"unconditionally compliant\", #374\n\t* config: Make Markdown canonical, #342\n\t* config: Explicitly list mapping from symbolic names to UID/GIDs as\n\t  out-of-scope, #347\n\t* config-linux: Require the runtime mount namespace for namespace\n\t  'path' values, #275\n\t* config-linux: Reword kernelTCP docs, #377\n\t* specs-go: Add omitempty to 'Device' and 'Namespace', #340\n\t* .travis.yml: Use built-in 'go vet' and current 'go lint', dropping\n\t  Go < 1.5, #372, #352\n\t* implementations: Expand ocitools scope to include testing, #328\n\t* style: Move one-sentence-per-line rule from the README, #369\n\t* style: Remove dangling parenthesis, #359\n\t* README: Add a link to the IRC logs, #358\n\t* Fix \"manadate\", \"exmaple\", \"paramters\", and \"preferrably\" typos,\n\t  #353, #354\n\nChanges with v0.4.0:\n\tBreaking changes:\n\n\t* config: Move capabilities, selinuxProcessLabel, apparmorProfile,\n\t  and noNewPrivileges from the linux setting to the process setting\n\t  and make them optional, renaming selinuxProcessLabel to\n\t  selinuxLabel, #329, #330, #339\n\t* runtime: Rename version to ociVerison in the state JSON, #225\n\t* runtime: Remove the directory requirement for storing state, now\n\t  that there is a 'state' operation, #225, #334\n\t* go: Shift *.go to specs-go/*.go, #276\n\t* config: Move rlimits to process, #341\n\t* go: Move config_linux.go content into config.go, removing\n\t  LinuxSpec, #310\n\n\tAdditions:\n\n\t* schema: Add JSON Schema (and validator) for `config.json`, #313\n\t* config: Add annotations for opaque-to-the-runtime data, #331\n\t* config-linux: Make seccomp optional, #333\n\t* runtime: Added additional operations: state, stop, and exec.\n\t  #225\n\n\tMinor fixes and documentation:\n\n\t* config-linux: Change mount type from *rune to *string and fix\n\t  octal fileMode examples, #323\n\t* runtime: RFC 2119 phrasing for the lifecycle, #225\n\t* README: Add a full example of config.json, #276\n\t* README: Replace BlueJeans with UberConference, #326, #338\n\t* style: Document Go-pointer exceptions, #317\n\nChanges with v0.3.0:\n\tBreaking changes:\n\n\t* config: Single, unified config file, #284\n\t* config: cwd is a required default, and must be absolute, #286,\n\t  #307, #308, #312\n\t* config: qualify the name of the version field, #309\n\t* config-linux: Convert classID from hex to uint32, #296\n\t* config-linux: Separate mknod from cgroups, #298\n\n\tAdditions:\n\n\t* config-linux: Add NoNewPrivileges setting for linux, #290\n\n\tMinor fixes and documentation:\n\n\t* config-linux: clarify oom_score_adj, #236, #292\n\t* config-linux: Update links to cgroups documentation, #318\n\t* config-linux: Remove pointers for slices preferring omitempty\n\t  tag instead, #316\n\t* README: add runtime, bundle, and hook author user, #280\n\t* ROADMAP: reshuffled and split into GitHub issues, #300, #301,\n\t  #304, #306\n\t* style: Collect established styles in a discoverable location, #287, #311\n\nChanges with v0.2.0:\n\t* Add Apparmor, Selinux and Seccomp\n\t* Add Apparmor, Selinux and Seccomp sections\n\t* Add bind mount example\n\t* Add fd section for linux container process\n\t* Add Go types for specification\n\t* *: adding a code of conduct\n\t* Adding cgroups path to the Spec.\n\t* .: Adding listing of implementations\n\t* .: adding travis file for future CI\n\t* Add license and DCO information for contributions\n\t* Add linux spec description\n\t* Add MAINTAINERS file\n\t* Add memory swappiness to linux spec\n\t* Add runtime state configuration and structs\n\t* Adds a section for user namespace mappings\n\t* Adds link to kernel cgroups documentation\n\t* Adds section for Linux Rlimits\n\t* Adds section for Linux Sysctl.\n\t* Adds user namespace to the list of namespaces\n\t* bundle: add initial run use case\n\t* bundle: Fix 'and any number of   and other related' typo\n\t* bundle.md: clarify arbitrary/conventional dirnames\n\t* bundle.md: fix link formatting\n\t* bundle.md: fix off-by-one error\n\t* bundle.md: various updates to latest spec\n\t* bundle: Move 'Linux sysctl' header to its own line\n\t* Change commiter to committer\n\t* Change Device field order in spec_linux.go, 'Path' should be top of the 'Type' field, according to the different of the config-linux.md, 'Path' field is the unique key.\n\t* Change layout of mountpoints and mounts\n\t* Change the rlimit type to string instead of int\n\t* Clarify behavior around namespaces paths.\n\t* config: Add example additionalGids\n\t* config: Add example cwd\n\t* config: cleanup language on readonly parameter\n\t* config: fix links to go files\n\t* config-linux: specify the default devices/filesystems available\n\t* config.md: clarify destination for mounts\n\t* config.md: make the version a semver\n\t* config.md: make the version field example a semver\n\t* config.md: minor clean up of process specification\n\t* config.md: reformat into a standard style\n\t* config.md: update links to spec schema code\n\t* config.md: various cleanup/consistency fixes\n\t* config: minor cleanup\n\t* Deduplicate the field of RootfsPropagation\n\t* Define constants for Linux Namespace names\n\t* Fix LinuxRuntime field\n\t* Fix root object keys\n\t* Fix typos in config.md\n\t* Fix typos in the \"Namespace types\" section\n\t* Fix typos in the rlimits section\n\t* Fix Windows path escaping in example mount JSON\n\t* JSON objects are easier to parse/manipulate\n\t* made repo public. Added warning in README\n\t* Make namespaces match runc\n\t* make rootfs mount propagation mode settable\n\t* Makes namespaces description linux specific\n\t* *.md: markdown formatting\n\t* Modify the capabilities constants to match header files like other constants\n\t* Move linux specific options to linux spec\n\t* README: add a rule for paragraph formatting in markdown\n\t* README: Document BlueJeans and wiki archive for meetings\n\t* README: Document pre-meeting agenda alteration\n\t* README: Document YouTube and IRC backchannel for meetings\n\t* README: Focus on local runtime (create/start/stop)\n\t* README.md: Add a git commit style guide\n\t* README.md: contribution about discussion\n\t* README: releases section\n\t* README: Remove blank line from infrastructure-agnostic paragraph\n\t* removed boilerplate file\n\t* *: remove superfluous comma in code-of-conduct\n\t* Remove trailing whitespace\n\t* Rename SystemProperties to Sysctl\n\t* Rename the header \"Access to devices\" to \"Devices\" to fit with the config\n\t* *: re-org the spec\n\t* Replace Linux.Device with more specific config\n\t* restore formatting\n\t* Return golang compliant names for UID and GID in User\n\t* Return golint-compliant naming for mappings\n\t* runtime: Add prestart/poststop hooks\n\t* runtime_config: comments for golint\n\t* runtime-config-linux: Drop 'Linux' from headers\n\t* runtime_config_linux: Fix 'LinuxSpec' -> 'LinuxRuntimeSpec' in comment\n\t* runtime-config-linux: One sentence per line for opening two paragraphs\n\t* runtime-config: Remove blank lines from the end of files\n\t* runtime-config: Remove 'destination' docs from mounts\n\t* runtime.md: convert oc to runc\n\t* runtime: use opencontainer vs oci\n\t* *: small spelling fixes\n\t* Specific platform specific user struct for spec\n\t* spec: linux: add support for the PIDs cgroup\n\t* spec_linux: conform to `golint`\n\t* spec_linux.go: Rename IDMapping fields to follow syscall.SysProcIDMap\n\t* spec_linux: remove ending periods on one-line comments\n\t* spec: rename ocp to oci and add a link\n\t* specs: add json notation\n\t* specs: align the ascii graph\n\t* specs: fix the description for the [ug]idMappings\n\t* specs: introduce the concept of a runtime.json\n\t* .tools: cleanup the commit entry\n\t* .tools: repo validation tool\n\t* travis: fix DCO validation for merges\n\t* typo: containers -> container's\n\t* typo: the -> for\n\t* Update config-linux for better formatting on values\n\t* Update README.md\n\t* Update readme with weekly call and mailing list\n\t* Update runtime.md\n\t* Update runtime.md\n\t* Update runtime.md\n\t* version: more explicit version for comparison\n\nChanges with v0.1.0:\n\t* Add Architecture field to Seccomp configuration in Linux runtime\n\t* Add @hqhq as maintainer\n\t* Add hyphen for host specific\n\t* Adding Vishnu Kannan as a Maintainer.\n\t* Add initial roadmap\n\t* Add lifecycle for containers\n\t* Add oom_score_adj to the runtime Spec.\n\t* Add post-start hooks\n\t* Add Seccomp constants to description of Linux runtime spec\n\t* Add Seccomp constants to Linux runtime config\n\t* Add some clarity around the state.json file\n\t* adds text describing the upper-case keywords used in the spec\n\t* add testing framework to ROADMAP\n\t* Appropriately mark optional fields as omitempty\n\t* cgroup: Add support for memory.kmem.tcp.limit_in_bytes\n\t* Change HugepageLimit.Limit type to uint64\n\t* Change the behavior when cgroupsPath is absent\n\t* Change version from 0.1.0 to 0.2.0\n\t* Clarify the semantics of hook elements\n\t* Cleanup bundle.md\n\t* Cleanup principles\n\t* config: linux: update description of PidsLimit\n\t* config: Require a new UTS namespace for config.json's hostname\n\t* config: Require the runtime to mount Spec.Mounts in order\n\t* convert **name** to **`name`**\n\t* Example lists \"root' but text mentions \"bundlePath\"\n\t* Fix an extra space in VersionMinor\n\t* Fix golint warnings\n\t* Fix typo in BlockIO struct comment\n\t* Fix typo in Filesystem Bundle\n\t* Fix value of swappiness\n\t* glossary: Provide a quick overview of important terms\n\t* glossary: Specify UTF-8 for all our JSON\n\t* hooks: deduplicate the hooks docs\n\t* implementations: Link to kunalkushwaha/octool\n\t* implementations: Link to mrunalp/ocitools\n\t* lifecycle: Don't require /run/opencontainer/<runtime>/containers\n\t* lifecycle: Mention runtime.json\n\t* lifecycle: no hypens\n\t* MAINTAINERS: add tianon per the charter\n\t* MAINTAINERS: correct Vish's github account\n\t* Makefile: Add glossary to DOC_FILES\n\t* Make optional Cgroup related config params pointers along with `omitempty` json tag.\n\t* Mark RootfsPropagation as omitempty\n\t* *.md: update TOC and links\n\t* move the description of Rlimits before example\n\t* move the description of user ns mapping to proper file\n\t* principles: Give principles their own home\n\t* *: printable documents\n\t* Project: document release process\n\t* README: Fix some headers\n\t* README: make header more concise\n\t* remove blank char from blank line\n\t* Remove the unneeded build tag from the config_linux.go\n\t* Remove trailing comma in hooks json example\n\t* Rename State's Root to Bundle\n\t* ROADMAP.md: remove the tail spaces\n\t* roadmap: update links and add wiki reference\n\t* runtime: Add 'version' to the state.json example\n\t* runtime-config: add example label before json example\n\t* runtime-config: add section about Hooks\n\t* runtime: config: linux: add cgroups information\n\t* runtime: config: linux: Edit BlockIO struct\n\t* runtime: config: linux: Fix typo and trailing commas in json example\n\t* runtime_config_linux.go: add missing pointer\n\t* runtime-config-linux.md: fix the type of cpus and mems\n\t* runtime.md: fix spacing\n\t* Talk about host specific/independent instead of mutability\n\t* .tools: commit validator is a separate project\n\t* .tools: make GetFetchHeadCommit do what it says\n\t* .travis.yml: add go 1.5.1, update from 1.4.2 to 1.4.3\n\t* Update readme with wiki link to minutes\n\t* Update Typo in ROADMAP.md\n\t* Use unsigned for IDs\n\t* version: introduce a string for dev indication\n"
        },
        {
          "name": "EMERITUS.md",
          "type": "blob",
          "size": 0.353515625,
          "content": "# Emeritus\n\nWe would like to acknowledge previous OCI runtime spec maintainers and their huge contributions to our collective success:\n\n- Rohit Jnagal (@rjnagal)\n- Victor Marmol (@vmarmol)\n- Alexander Morozov (@LK4D4)\n- Vishnu Kannan (@vishh)\n- Brandon Philips (@philips)\n- Vincent Batts (@vbatts)\n\nWe thank these members for their service to the OCI community.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 3.78515625,
          "content": "# Project governance\n\nThe [OCI charter][charter] §5.b.viii tasks an OCI Project's maintainers (listed in the repository's MAINTAINERS file and sometimes referred to as \"the TDC\", [§5.e][charter]) with:\n\n> Creating, maintaining and enforcing governance guidelines for the TDC, approved by the maintainers, and which shall be posted visibly for the TDC.\n\nThis section describes generic rules and procedures for fulfilling that mandate.\n\n## Proposing a motion\n\nA maintainer SHOULD propose a motion on the dev@opencontainers.org mailing list (except [security issues](#security-issues)) with another maintainer as a co-sponsor.\n\n## Voting\n\nVoting on a proposed motion SHOULD happen on the dev@opencontainers.org mailing list (except [security issues](#security-issues)) with maintainers posting LGTM or REJECT.\nMaintainers MAY also explicitly not vote by posting ABSTAIN (which is useful to revert a previous vote).\nMaintainers MAY post multiple times (e.g. as they revise their position based on feedback), but only their final post counts in the tally.\nA proposed motion is adopted if two-thirds of votes cast, a quorum having voted, are in favor of the release.\n\nVoting SHOULD remain open for a week to collect feedback from the wider community and allow the maintainers to digest the proposed motion.\nUnder exceptional conditions (e.g. non-major security fix releases) proposals which reach quorum with unanimous support MAY be adopted earlier.\n\nA maintainer MAY choose to reply with REJECT.\nA maintainer posting a REJECT MUST include a list of concerns or links to written documentation for those concerns (e.g. GitHub issues or mailing-list threads).\nThe maintainers SHOULD try to resolve the concerns and wait for the rejecting maintainer to change their opinion to LGTM.\nHowever, a motion MAY be adopted with REJECTs, as outlined in the previous paragraphs.\n\n## Quorum\n\nA quorum is established when at least two-thirds of maintainers have voted.\n\nFor projects that are not specifications, a [motion to release](#release-approval) MAY be adopted if the tally is at least three LGTMs and no REJECTs, even if three votes does not meet the usual two-thirds quorum.\n\n## Security issues\n\nMotions with sensitive security implications MUST be proposed on the security@opencontainers.org mailing list instead of dev@opencontainers.org, but should otherwise follow the standard [proposal](#proposing-a-motion) process.\nThe security@opencontainers.org mailing list includes all members of the TOB.\nThe TOB will contact the project maintainers and provide a channel for discussing and voting on the motion, but voting will otherwise follow the standard [voting](#voting) and [quorum](#quorum) rules.\nThe TOB and project maintainers will work together to notify affected parties before making an adopted motion public.\n\n## Amendments\n\nThe [project governance](#project-governance) rules and procedures MAY be amended or replaced using the procedures themselves.\nThe MAINTAINERS of this project governance document is the total set of MAINTAINERS from all Open Containers projects (runC, runtime-spec, and image-spec).\n\n## Subject templates\n\nMaintainers are busy and get lots of email.\nTo make project proposals recognizable, proposed motions SHOULD use the following subject templates.\n\n### Proposing a motion\n\n> [{project} VOTE]: {motion description} (closes {end of voting window})\n\nFor example:\n\n> [runtime-spec VOTE]: Tag 0647920 as 1.0.0-rc (closes 2016-06-03 20:00 UTC)\n\n### Tallying results\n\nAfter voting closes, a maintainer SHOULD post a tally to the motion thread with a subject template like:\n\n> [{project} {status}]: {motion description} (+{LGTMs} -{REJECTs} #{ABSTAINs})\n\nWhere `{status}` is either `adopted` or `rejected`.\nFor example:\n\n> [runtime-spec adopted]: Tag 0647920 as 1.0.0-rc (+6 -0 #3)\n\n[charter]: https://github.com/opencontainers/tob/blob/main/CHARTER.md\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5146484375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2015 The Linux Foundation.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.521484375,
          "content": "Michael Crosby <michael@docker.com> (@crosbymichael)\nMrunal Patel <mpatel@redhat.com> (@mrunalp)\nDaniel, Dao Quang Minh <dqminh89@gmail.com> (@dqminh)\nTianon Gravi <admwiggin@gmail.com> (@tianon)\nQiang Huang <h.huangqiang@huawei.com> (@hqhq)\nAleksa Sarai <asarai@suse.de> (@cyphar)\nGiuseppe Scrivano <gscrivan@redhat.com> (@giuseppe)\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> (@AkihiroSuda)\nKir Kolyshkin <kolyshkin@gmail.com> (@kolyshkin)\nSebastiaan van Stijn <github@gone.nl> (@thaJeztah)\nToru Komatsu <k0ma@utam0k.jp> (@utam0k)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.6484375,
          "content": "\nEPOCH_TEST_COMMIT := 78e6667ae2d67aad100b28ee9580b41b7a24e667\nOUTPUT_DIRNAME    ?= output\nDOC_FILENAME      ?= oci-runtime-spec\nDOCKER            ?= $(shell command -v docker 2>/dev/null)\nPANDOC            ?= $(shell command -v pandoc 2>/dev/null)\nPANDOC_IMAGE      ?= ghcr.io/opencontainers/pandoc:2.9.2.1-9.fc34.x86_64@sha256:590c5c7aaa6e8e7a4debae7e9102c837daa0c8a76f8f5b5c9831ea5f755e3e95\nifeq \"$(strip $(PANDOC))\" ''\n\tifneq \"$(strip $(DOCKER))\" ''\n\t\tPANDOC = $(DOCKER) run \\\n\t\t\t--security-opt label=disable \\\n\t\t\t--rm \\\n\t\t\t-v $(shell pwd)/:/input/:ro \\\n\t\t\t-v $(shell pwd)/$(OUTPUT_DIRNAME)/:/$(OUTPUT_DIRNAME)/ \\\n\t\t\t-u $(shell id -u) \\\n\t\t\t$(PANDOC_IMAGE)\n\t\tPANDOC_SRC := /input/\n\t\tPANDOC_DST := /\n\tendif\nendif\n\n# These docs are in an order that determines how they show up in the PDF/HTML docs.\nDOC_FILES := \\\n\tversion.md \\\n\tspec.md \\\n\tprinciples.md \\\n\tbundle.md \\\n\truntime.md \\\n\truntime-linux.md \\\n\tconfig.md \\\n\tconfig-linux.md \\\n\tconfig-solaris.md \\\n\tfeatures.md \\\n\tfeatures-linux.md \\\n\tglossary.md\n\ndefault: docs\n\ndocs: $(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf $(OUTPUT_DIRNAME)/$(DOC_FILENAME).html\n\nifeq \"$(strip $(PANDOC))\" ''\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf $(OUTPUT_DIRNAME)/$(DOC_FILENAME).html:\n\t$(error cannot build $@ without either pandoc or docker)\nelse\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).pdf: $(DOC_FILES)\n\tmkdir -p $(OUTPUT_DIRNAME)/ && \\\n\t$(PANDOC) -f markdown_github -t latex -o $(PANDOC_DST)$@ $(patsubst %,$(PANDOC_SRC)%,$(DOC_FILES))\n\n$(OUTPUT_DIRNAME)/$(DOC_FILENAME).html: $(DOC_FILES)\n\tmkdir -p $(OUTPUT_DIRNAME)/ && \\\n\t$(PANDOC) -f markdown_github -t html5 -o $(PANDOC_DST)$@ $(patsubst %,$(PANDOC_SRC)%,$(DOC_FILES))\nendif\n\nversion.md: ./specs-go/version.go\n\tgo run ./.tool/version-doc.go > $@\n\nHOST_GOLANG_VERSION\t= $(shell go version | cut -d ' ' -f3 | cut -c 3-)\n# this variable is used like a function. First arg is the minimum version, Second arg is the version to be checked.\nALLOWED_GO_VERSION\t= $(shell test '$(shell /bin/echo -e \"$(1)\\n$(2)\" | sort -V | head -n1)' = '$(1)' && echo 'true')\n\ntest: .govet .golint .gitvalidation\n\n.govet:\n\tgo vet -x ./...\n\n# When this is running in GitHub, it will only check the GitHub commit range\n.gitvalidation:\n\t@which git-validation > /dev/null 2>/dev/null || (echo \"ERROR: git-validation not found. Consider 'make install.tools' target\" && false)\nifdef GITHUB_SHA\n\tgit-validation -q -run DCO,short-subject,dangling-whitespace -range $(GITHUB_SHA)..HEAD\nelse\n\tgit-validation -v -run DCO,short-subject,dangling-whitespace -range $(EPOCH_TEST_COMMIT)..HEAD\nendif\n\ninstall.tools: .install.gitvalidation\n\n.install.gitvalidation:\n\tgo install github.com/vbatts/git-validation@v1.2.0\n\nclean:\n\trm -rf $(OUTPUT_DIRNAME) *~\n\trm -f version.md\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.7705078125,
          "content": "# Open Container Initiative Runtime Specification\n\n[![GitHub Actions status](https://github.com/opencontainers/runtime-spec/workflows/build/badge.svg)](https://github.com/opencontainers/runtime-spec/actions?query=workflow%3Abuild)\n\nThe [Open Container Initiative][oci] develops specifications for standards on Operating System process and application containers.\n\nThe specification can be found [here](spec.md).\n\n## Table of Contents\n\nAdditional documentation about how this group operates:\n\n- [Code of Conduct][code-of-conduct]\n- [Style and Conventions](style.md)\n- [Implementations](implementations.md)\n- [Releases](RELEASES.md)\n- [charter][charter]\n\n## Use Cases\n\nTo provide context for users the following section gives example use cases for each part of the spec.\n\n### Application Bundle Builders\n\nApplication bundle builders can create a [bundle](bundle.md) directory that includes all of the files required for launching an application as a container.\nThe bundle contains an OCI [configuration file](config.md) where the builder can specify host-independent details such as [which executable to launch](config.md#process) and host-specific settings such as [mount](config.md#mounts) locations, [hook](config.md#posix-platform-hooks) paths, Linux [namespaces](config-linux.md#namespaces) and [cgroups](config-linux.md#control-groups).\nBecause the configuration includes host-specific settings, application bundle directories copied between two hosts may require configuration adjustments.\n\n### Hook Developers\n\n[Hook](config.md#posix-platform-hooks) developers can extend the functionality of an OCI-compliant runtime by hooking into a container's lifecycle with an external application.\nExample use cases include sophisticated network configuration, volume garbage collection, etc.\n\n### Runtime Developers\n\nRuntime developers can build runtime implementations that run OCI-compliant bundles and container configuration, containing low-level OS and host-specific details, on a particular platform.\n\n## Contributing\n\nDevelopment happens on GitHub for the spec.\nIssues are used for bugs and actionable items and longer discussions can happen on the [mailing list](#mailing-list).\n\nThe specification and code is licensed under the Apache 2.0 license found in the [LICENSE](./LICENSE) file.\n\n### Discuss your design\n\nThe project welcomes submissions, but please let everyone know what you are working on.\n\nBefore undertaking a nontrivial change to this specification, send mail to the [mailing list](#mailing-list) to discuss what you plan to do.\nThis gives everyone a chance to validate the design, helps prevent duplication of effort, and ensures that the idea fits.\nIt also guarantees that the design is sound before code is written; a GitHub pull-request is not the place for high-level discussions.\n\nTypos and grammatical errors can go straight to a pull-request.\nWhen in doubt, start on the [mailing-list](#mailing-list).\n\n### Meetings\n\nPlease see the [OCI org repository README](https://github.com/opencontainers/org#meetings) for the most up-to-date\ninformation on OCI contributor and maintainer meeting schedules. You can also find links to meeting agendas and\nminutes for all prior meetings.\n\n### Mailing List\n\nYou can subscribe and join the mailing list on [Google Groups][dev-list].\n\n### Chat\n\nOCI discussion happens in the following chat rooms, which are all bridged together:\n\n- #general channel on [OCI Slack](https://opencontainers.org/community/overview/#chat)\n- #opencontainers:matrix.org\n\n### Git commit\n\n#### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch, which certifies that you wrote it or otherwise have the right to pass it on as an open-source patch.\nThe rules are pretty simple: if you can certify the below (from https://developercertificate.org):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nthen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe@gmail.com>\n\nusing your real name (sorry, no pseudonyms or anonymous contributions.)\n\nYou can add the sign off when creating the git commit via `git commit -s`.\n\n#### Commit Style\n\nSimple house-keeping for clean git history.\nRead more on [How to Write a Git Commit Message][how-to-git-commit] or the Discussion section of [git-commit(1)][git-commit.1].\n\n1. Separate the subject from body with a blank line\n2. Limit the subject line to 50 characters\n3. Capitalize the subject line\n4. Do not end the subject line with a period\n5. Use the imperative mood in the subject line\n6. Wrap the body at 72 characters\n7. Use the body to explain what and why vs. how\n    * If there was important/useful/essential conversation or information, copy or include a reference\n8. When possible, one keyword to scope the change in the subject (i.e. \"README: ...\", \"runtime: ...\")\n\n\n[charter]: https://github.com/opencontainers/tob/blob/master/CHARTER.md\n[code-of-conduct]: https://github.com/opencontainers/org/blob/master/CODE_OF_CONDUCT.md\n[dev-list]: https://groups.google.com/a/opencontainers.org/forum/#!forum/dev\n[how-to-git-commit]: https://cbea.ms/git-commit/\n[iso-week]: https://en.wikipedia.org/wiki/ISO_week_date#Calculating_the_week_number_of_a_given_date\n[minutes]: https://ircbot.wl.linuxfoundation.org/meetings/opencontainers/\n[oci]: https://www.opencontainers.org\n[rfc5545]: https://tools.ietf.org/html/rfc5545\n[runtime-wiki]: https://github.com/opencontainers/runtime-spec/wiki\n[uberconference]: https://www.uberconference.com/opencontainers\n\n[git-commit.1]: https://git-scm.com/docs/git-commit\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 5.92578125,
          "content": "# Releases\n\nThe release process hopes to encourage early, consistent consensus-building during project development.\nThe mechanisms used are regular community communication on the mailing list about progress, scheduled meetings for issue resolution and release triage, and regularly paced and communicated releases.\nReleases are proposed and adopted or rejected using the usual [project governance](GOVERNANCE.md) rules and procedures.\n\nAn anti-pattern that we want to avoid is heavy development or discussions \"late cycle\" around major releases.\nWe want to build a community that is involved and communicates consistently through all releases instead of relying on \"silent periods\" as a judge of stability.\n\n## Parallel releases\n\nA single project MAY consider several motions to release in parallel.\nHowever each motion to release after the initial 0.1.0 MUST be based on a previous release that has already landed.\n\nFor example, runtime-spec maintainers may propose a v1.0.0-rc2 on the 1st of the month and a v0.9.1 bugfix on the 2nd of the month.\nThey may not propose a v1.0.0-rc3 until the v1.0.0-rc2 is accepted (on the 7th if the vote initiated on the 1st passes).\n\n## Specifications\n\nThe OCI maintains three categories of projects: specifications, applications, and conformance-testing tools.\nHowever, specification releases have special restrictions in the [OCI charter][charter]:\n\n* They are the target of backwards compatibility (§7.g), and\n* They are subject to the OFWa patent grant (§8.d and e).\n\nTo avoid unfortunate side effects (onerous backwards compatibility requirements or Member resignations), the following additional procedures apply to specification releases:\n\n### Planning a release\n\nEvery OCI specification project SHOULD hold meetings that involve maintainers reviewing pull requests, debating outstanding issues, and planning releases.\nThis meeting MUST be advertised on the project README and MAY happen on a phone call, video conference, or on IRC.\nMaintainers MUST send updates to the dev@opencontainers.org with results of these meetings.\n\nBefore the specification reaches v1.0.0, the meetings SHOULD be weekly.\nOnce a specification has reached v1.0.0, the maintainers may alter the cadence, but a meeting MUST be held within four weeks of the previous meeting.\n\nThe release plans, corresponding milestones and estimated due dates MUST be published on GitHub (e.g. https://github.com/opencontainers/runtime-spec/milestones).\nGitHub milestones and issues are only used for community organization and all releases MUST follow the [project governance](GOVERNANCE.md) rules and procedures.\n\n### Timelines\n\nSpecifications have a variety of different timelines in their lifecycle.\n\n* Pre-v1.0.0 specifications SHOULD release on a monthly cadence to garner feedback.\n* Major specification releases MUST release at least three release candidates spaced a minimum of one week apart.\n    This means a major release like a v1.0.0 or v2.0.0 release will take 1 month at minimum: one week for rc1, one week for rc2, one week for rc3, and one week for the major release itself.\n    Maintainers SHOULD strive to make zero breaking changes during this cycle of release candidates and SHOULD restart the three-candidate count when a breaking change is introduced.\n    For example if a breaking change is introduced in v1.0.0-rc2 then the series would end with v1.0.0-rc4 and v1.0.0.\n* Minor and patch releases SHOULD be made on an as-needed basis.\n\n[charter]: https://github.com/opencontainers/tob/blob/main/CHARTER.md\n\n## Checklist\n\nReleases usually follow a few steps:\n\n* [ ] prepare a pull-request for the release\n  * [ ] a commit updating `./ChangeLog`\n    * [ ] `git log --oneline --no-merges --decorate --name-status v1.0.1..HEAD | vim -`\n    * [ ] `:% s/(pr\\/\\(\\d*\\))\\(.*\\)/\\2 (#\\1)/` to move the PR to the end of line and match previous formatting\n    * [ ] review `(^M|^A|^D)` for impact of the commit\n    * [ ] group commits to `Additions:`, `Minor fixes and documentation:`, `Breaking changes:`\n    * [ ] delete the `(^M|^A|^D)` lines, `:%!grep -vE '(^M|^A|^D)'`\n    * [ ] merge multi-commit PRs (so each line has a `(#num)` suffix)\n    * [ ] drop hash and indent, `:'<,'> s/^\\w*  /^I* /`\n  * [ ] a commit bumping `./specs-go/version.go` to next version and empty the `VersionDev` variable\n  * [ ] a commit adding back the \"+dev\" to `VersionDev`\n* [ ] send email to dev@opencontainers.org\n  * [ ] copy the exact commit hash for bumping the version from the pull-request (since master always stays as \"-dev\")\n  * [ ] count the PRs since last release (that this version is tracking, in the cases of multiple branching), like `git log --pretty=oneline --no-merges --decorate $priorTag..$versionBumpCommit  | grep \\(pr\\/ | wc -l`\n  * [ ] get the date for a week from now, like `TZ=UTC date --date='next week'`\n  * [ ] OPTIONAL find a cute animal gif to attach to the email, and subsequently the release description\n  * [ ] subject line like `[runtime-spec VOTE] tag $versionBumpCommit as $version (closes $dateWeekFromNowUTC)`\n  * [ ] email body like\n```\nHey everyone,\n\nThere have been $numPRs PRs merged since $priorTag release (https://github.com/opencontainers/runtime-spec/compare/$priorTag...$versionBumpCommit).\n\n$linkToPullRequest\n\nPlease respond LGTM or REJECT (with reasoning).\n\n$sig\n```\n* [ ] edit/update the pull-request to link to the VOTE thread, from https://groups.google.com/a/opencontainers.org/forum/#!forum/dev\n* [ ] a week later, if the vote passes, merge the PR\n  * [ ] `git tag -s $version $versionBumpCommit`\n  * [ ] `git push --tags`\n* [ ] produce release documents\n  * [ ] git checkout the release tag, like `git checkout $version`\n  * [ ] `make docs`\n  * [ ] rename the output PDF and HTML file to include version, like `mv output/oci-runtime-spec.pdf output/oci-runtime-spec-$version.pdf``\n  * [ ] attach these docs to the release on https://github.com/opencontainers/runtime-spec/releases\n  * [ ] link to the the VOTE thread and include the passing vote count\n  * [ ] link to the pull request that merged the release\n"
        },
        {
          "name": "bundle.md",
          "type": "blob",
          "size": 1.474609375,
          "content": "# <a name=\"filesystemBundle\" />Filesystem Bundle\n\n## <a name=\"containerFormat\" />Container Format\n\nThis section defines a format for encoding a container as a *filesystem bundle* - a set of files organized in a certain way, and containing all the necessary data and metadata for any compliant runtime to perform all standard operations against it.\nSee also [MacOS application bundles][macos_bundle] for a similar use of the term *bundle*.\n\nThe definition of a bundle is only concerned with how a container, and its configuration data, are stored on a local filesystem so that it can be consumed by a compliant runtime.\n\nA Standard Container bundle contains all the information needed to load and run a container.\nThis includes the following artifacts:\n\n1. <a name=\"containerFormat01\" />`config.json`: contains configuration data.\n    This REQUIRED file MUST reside in the root of the bundle directory and MUST be named `config.json`.\n    See [`config.json`](config.md) for more details.\n\n2. <a name=\"containerFormat02\" />container's root filesystem: the directory referenced by [`root.path`](config.md#root), if that property is set in `config.json`.\n\nWhen supplied, while these artifacts MUST all be present in a single directory on the local filesystem, that directory itself is not part of the bundle.\nIn other words, a tar archive of a *bundle* will have these artifacts at the root of the archive, not nested within a top-level directory.\n\n[macos_bundle]: https://en.wikipedia.org/wiki/Bundle_%28macOS%29\n"
        },
        {
          "name": "config-linux.md",
          "type": "blob",
          "size": 42.8857421875,
          "content": "# <a name=\"linuxContainerConfiguration\" />Linux Container Configuration\n\nThis document describes the schema for the [Linux-specific section](config.md#platform-specific-configuration) of the [container configuration](config.md).\nThe Linux container specification uses various kernel features like namespaces, cgroups, capabilities, LSM, and filesystem jails to fulfill the spec.\n\n## <a name=\"configLinuxDefaultFilesystems\" />Default Filesystems\n\nThe Linux ABI includes both syscalls and several special file paths.\nApplications expecting a Linux environment will very likely expect these file paths to be set up correctly.\n\nThe following filesystems SHOULD be made available in each container's filesystem:\n\n| Path     | Type   |\n| -------- | ------ |\n| /proc    | [proc][] |\n| /sys     | [sysfs][]  |\n| /dev/pts | [devpts][] |\n| /dev/shm | [tmpfs][]  |\n\n## <a name=\"configLinuxNamespaces\" />Namespaces\n\nA namespace wraps a global system resource in an abstraction that makes it appear to the processes within the namespace that they have their own isolated instance of the global resource.\nChanges to the global resource are visible to other processes that are members of the namespace, but are invisible to other processes.\nFor more information, see the [namespaces(7)][namespaces.7_2] man page.\n\nNamespaces are specified as an array of entries inside the `namespaces` root field.\nThe following parameters can be specified to set up namespaces:\n\n* **`type`** *(string, REQUIRED)* - namespace type. The following namespace types SHOULD be supported:\n    * **`pid`** processes inside the container will only be able to see other processes inside the same container or inside the same pid namespace.\n    * **`network`** the container will have its own network stack.\n    * **`mount`** the container will have an isolated mount table.\n    * **`ipc`** processes inside the container will only be able to communicate to other processes inside the same container via system level IPC.\n    * **`uts`** the container will be able to have its own hostname and domain name.\n    * **`user`** the container will be able to remap user and group IDs from the host to local users and groups within the container.\n    * **`cgroup`** the container will have an isolated view of the cgroup hierarchy.\n    * **`time`** the container will be able to have its own clocks.\n* **`path`** *(string, OPTIONAL)* - namespace file.\n    This value MUST be an absolute path in the [runtime mount namespace](glossary.md#runtime-namespace).\n    The runtime MUST place the container process in the namespace associated with that `path`.\n    The runtime MUST [generate an error](runtime.md#errors) if `path` is not associated with a namespace of type `type`.\n\n    If `path` is not specified, the runtime MUST create a new [container namespace](glossary.md#container-namespace) of type `type`.\n\nIf a namespace type is not specified in the `namespaces` array, the container MUST inherit the [runtime namespace](glossary.md#runtime-namespace) of that type.\nIf a `namespaces` field contains duplicated namespaces with same `type`, the runtime MUST [generate an error](runtime.md#errors).\n\n### Example\n\n```json\n\"namespaces\": [\n    {\n        \"type\": \"pid\",\n        \"path\": \"/proc/1234/ns/pid\"\n    },\n    {\n        \"type\": \"network\",\n        \"path\": \"/var/run/netns/neta\"\n    },\n    {\n        \"type\": \"mount\"\n    },\n    {\n        \"type\": \"ipc\"\n    },\n    {\n        \"type\": \"uts\"\n    },\n    {\n        \"type\": \"user\"\n    },\n    {\n        \"type\": \"cgroup\"\n    },\n    {\n        \"type\": \"time\"\n    }\n]\n```\n\n## <a name=\"configLinuxUserNamespaceMappings\" />User namespace mappings\n\n**`uidMappings`** (array of objects, OPTIONAL) describes the user namespace uid mappings from the host to the container.\n**`gidMappings`** (array of objects, OPTIONAL) describes the user namespace gid mappings from the host to the container.\n\nEach entry has the following structure:\n\n* **`containerID`** *(uint32, REQUIRED)* - is the starting uid/gid in the container.\n* **`hostID`** *(uint32, REQUIRED)* - is the starting uid/gid on the host to be mapped to *containerID*.\n* **`size`** *(uint32, REQUIRED)* - is the number of ids to be mapped.\n\nThe runtime SHOULD NOT modify the ownership of referenced filesystems to realize the mapping.\nNote that the number of mapping entries MAY be limited by the [kernel][user-namespaces].\n\n### Example\n\n```json\n\"uidMappings\": [\n    {\n        \"containerID\": 0,\n        \"hostID\": 1000,\n        \"size\": 32000\n    }\n],\n\"gidMappings\": [\n    {\n        \"containerID\": 0,\n        \"hostID\": 1000,\n        \"size\": 32000\n    }\n]\n```\n\n## <a name=\"configLinuxTimeOffset\" />Offset for Time Namespace\n\n**`timeOffsets`** (object, OPTIONAL) sets the offset for Time Namespace. For more information\nsee the [time_namespaces][time_namespaces.7].\n\nThe name of the clock is the entry key.\nEntry values are objects with the following properties:\n\n* **`secs`** *(int64, OPTIONAL)* - is the offset of clock (in seconds) in the container.\n* **`nanosecs`** *(uint32, OPTIONAL)* - is the offset of clock (in nanoseconds) in the container.\n\n## <a name=\"configLinuxDevices\" />Devices\n\n**`devices`** (array of objects, OPTIONAL) lists devices that MUST be available in the container.\nThe runtime MAY supply them however it likes (with [`mknod`][mknod.2], by bind mounting from the runtime mount namespace, using symlinks, etc.).\n\nEach entry has the following structure:\n\n* **`type`** *(string, REQUIRED)* - type of device: `c`, `b`, `u` or `p`.\n    More info in [mknod(1)][mknod.1].\n* **`path`** *(string, REQUIRED)* - full path to device inside container.\n    If a [file][] already exists at `path` that does not match the requested device, the runtime MUST generate an error.\n    The path MAY be anywhere in the container filesystem, notably outside of `/dev`.\n* **`major, minor`** *(int64, REQUIRED unless `type` is `p`)* - [major, minor numbers][devices] for the device.\n* **`fileMode`** *(uint32, OPTIONAL)* - file mode for the device.\n    You can also control access to devices [with cgroups](#configLinuxDeviceAllowedlist).\n* **`uid`** *(uint32, OPTIONAL)* - id of device owner in the [container namespace](glossary.md#container-namespace).\n* **`gid`** *(uint32, OPTIONAL)* - id of device group in the [container namespace](glossary.md#container-namespace).\n\nThe same `type`, `major` and `minor` SHOULD NOT be used for multiple devices.\n\nContainers MAY NOT access any device node that is not either explicitly\nreferenced in the **`devices`** array or listed as being part of the\n[default devices](#configLinuxDefaultDevices).\nRationale: runtimes based on virtual machines need to be able to adjust the node\ndevices, and accessing device nodes that were not adjusted could have undefined\nbehaviour.\n\n\n### Example\n\n```json\n\"devices\": [\n    {\n        \"path\": \"/dev/fuse\",\n        \"type\": \"c\",\n        \"major\": 10,\n        \"minor\": 229,\n        \"fileMode\": 438,\n        \"uid\": 0,\n        \"gid\": 0\n    },\n    {\n        \"path\": \"/dev/sda\",\n        \"type\": \"b\",\n        \"major\": 8,\n        \"minor\": 0,\n        \"fileMode\": 432,\n        \"uid\": 0,\n        \"gid\": 0\n    }\n]\n```\n\n### <a name=\"configLinuxDefaultDevices\" />Default Devices\n\nIn addition to any devices configured with this setting, the runtime MUST also supply:\n\n* [`/dev/null`][null.4]\n* [`/dev/zero`][zero.4]\n* [`/dev/full`][full.4]\n* [`/dev/random`][random.4]\n* [`/dev/urandom`][random.4]\n* [`/dev/tty`][tty.4]\n* `/dev/console` is set up if [`terminal`](config.md#process) is enabled in the config by bind mounting the pseudoterminal pty to `/dev/console`.\n* [`/dev/ptmx`][pts.4].\n  A [bind-mount or symlink of the container's `/dev/pts/ptmx`][devpts].\n\n## <a name=\"configLinuxControlGroups\" />Control groups\n\nAlso known as cgroups, they are used to restrict resource usage for a container and handle device access.\ncgroups provide controls (through controllers) to restrict cpu, memory, IO, pids, network and RDMA resources for the container.\nFor more information, see the [kernel cgroups documentation][cgroup-v1].\n\nA runtime MAY, during a particular [container operation](runtime.md#operation),\nsuch as [create](runtime.md#create), [start](runtime.md#start), or\n[exec](runtime.md#exec), check if the container cgroup is fit for purpose,\nand MUST [generate an error](runtime.md#errors) if such a check fails.\nFor example, a frozen cgroup or (for [create](runtime.md#create) operation)\na non-empty cgroup. The reason for this is that accepting such configurations\ncould cause container operation outcomes that users may not anticipate or\nunderstand, such as operation on one container inadvertently affecting other\ncontainers.\n\n### <a name=\"configLinuxCgroupsPath\" />Cgroups Path\n\n**`cgroupsPath`** (string, OPTIONAL) path to the cgroups.\nIt can be used to either control the cgroups hierarchy for containers or to run a new process in an existing container.\n\nThe value of `cgroupsPath` MUST be either an absolute path or a relative path.\n\n* In the case of an absolute path (starting with `/`), the runtime MUST take the path to be relative to the cgroups mount point.\n* In the case of a relative path (not starting with `/`), the runtime MAY interpret the path relative to a runtime-determined location in the cgroups hierarchy.\n\nIf the value is specified, the runtime MUST consistently attach to the same place in the cgroups hierarchy given the same value of `cgroupsPath`.\nIf the value is not specified, the runtime MAY define the default cgroups path.\nRuntimes MAY consider certain `cgroupsPath` values to be invalid, and MUST generate an error if this is the case.\n\nImplementations of the Spec can choose to name cgroups in any manner.\nThe Spec does not include naming schema for cgroups.\nThe Spec does not support per-controller paths for the reasons discussed in the [cgroupv2 documentation][cgroup-v2].\nThe cgroups will be created if they don't exist.\n\nYou can configure a container's cgroups via the `resources` field of the Linux configuration.\nDo not specify `resources` unless limits have to be updated.\nFor example, to run a new process in an existing container without updating limits, `resources` need not be specified.\n\nRuntimes MAY attach the container process to additional cgroup controllers beyond those necessary to fulfill the `resources` settings.\n\n### Cgroup ownership\n\nRuntimes MAY, according to the following rules, change (or cause to\nbe changed) the owner of the container's cgroup to the host uid that\nmaps to the value of `process.user.uid` in the [container\nnamespace](glossary.md#container-namespace); that is, the user that\nwill execute the container process.\n\nRuntimes SHOULD NOT change the ownership of container cgroups when\ncgroups v1 is in use.  Cgroup delegation is not secure in cgroups\nv1.\n\nA runtime SHOULD NOT change the ownership of a container cgroup\nunless it will also create a new cgroup namespace for the container.\nTypically this occurs when the `linux.namespaces` array contains an\nobject with `type` equal to `\"cgroup\"` and `path` unset.\n\nRuntimes SHOULD change the cgroup ownership if and only if the\ncgroup filesystem is to be mounted read/write; that is, when the\nconfiguration's `mounts` array contains an object where:\n\n- The `source` field is equal to `\"cgroup\"`\n- The `destination` field is equal to `\"/sys/fs/cgroup\"`\n- The `options` field does not contain the value `\"ro\"`\n\nIf the configuration does not specify such a mount, the runtime\nSHOULD NOT change the cgroup ownership.\n\nA runtime that changes the cgroup ownership SHOULD only change the\nownership of the container's cgroup directory and files within that\ndirectory that are listed in `/sys/kernel/cgroup/delegate`.  See\n`cgroups(7)` for details about this file.  Note that not all files\nlisted in `/sys/kernel/cgroup/delegate` necessarily exist in every\ncgroup.  Runtimes MUST NOT fail in this scenario, and SHOULD change\nthe ownership of the listed files that do exist in the cgroup.\n\nIf the `/sys/kernel/cgroup/delegate` file does not exist, the\nruntime MUST fall back to using the following list of files:\n\n```\ncgroup.procs\ncgroup.subtree_control\ncgroup.threads\n```\n\nThe runtime SHOULD NOT change the ownership of any other files.\nChanging other files may allow the container to elevate its own\nresource limits or perform other unwanted behaviour.\n\n### Example\n\n```json\n\"cgroupsPath\": \"/myRuntime/myContainer\",\n\"resources\": {\n    \"memory\": {\n    \"limit\": 100000,\n    \"reservation\": 200000\n    },\n    \"devices\": [\n        {\n            \"allow\": false,\n            \"access\": \"rwm\"\n        }\n    ]\n}\n```\n\n### <a name=\"configLinuxDeviceAllowedlist\" />Allowed Device list\n\n**`devices`** (array of objects, OPTIONAL) configures the [allowed device list][cgroup-v1-devices].\nThe runtime MUST apply entries in the listed order.\n\nEach entry has the following structure:\n\n* **`allow`** *(boolean, REQUIRED)* - whether the entry is allowed or denied.\n* **`type`** *(string, OPTIONAL)* - type of device: `a` (all), `c` (char), or `b` (block).\n    Unset values mean \"all\", mapping to `a`.\n* **`major, minor`** *(int64, OPTIONAL)* - [major, minor numbers][devices] for the device.\n    Unset values mean \"all\", mapping to [`*` in the filesystem API][cgroup-v1-devices].\n* **`access`** *(string, OPTIONAL)* - cgroup permissions for device.\n    A composition of `r` (read), `w` (write), and `m` (mknod).\n\n#### Example\n\n```json\n\"devices\": [\n    {\n        \"allow\": false,\n        \"access\": \"rwm\"\n    },\n    {\n        \"allow\": true,\n        \"type\": \"c\",\n        \"major\": 10,\n        \"minor\": 229,\n        \"access\": \"rw\"\n    },\n    {\n        \"allow\": true,\n        \"type\": \"b\",\n        \"major\": 8,\n        \"minor\": 0,\n        \"access\": \"r\"\n    }\n]\n```\n\n### <a name=\"configLinuxMemory\" />Memory\n\n**`memory`** (object, OPTIONAL) represents the cgroup subsystem `memory` and it's used to set limits on the container's memory usage.\nFor more information, see the kernel cgroups documentation about [memory][cgroup-v1-memory].\n\nValues for memory specify the limit in bytes, or `-1` for unlimited memory.\n\n* **`limit`** *(int64, OPTIONAL)* - sets limit of memory usage\n* **`reservation`** *(int64, OPTIONAL)* - sets soft limit of memory usage\n* **`swap`** *(int64, OPTIONAL)* - sets limit of memory+Swap usage\n* **`kernel`** *(int64, OPTIONAL, NOT RECOMMENDED)* - sets hard limit for kernel memory\n* **`kernelTCP`** *(int64, OPTIONAL, NOT RECOMMENDED)* - sets hard limit for kernel TCP buffer memory\n\nThe following properties do not specify memory limits, but are covered by the `memory` controller:\n\n* **`swappiness`** *(uint64, OPTIONAL)* - sets swappiness parameter of vmscan (See sysctl's vm.swappiness)\n    The values are from 0 to 100. Higher means more swappy.\n* **`disableOOMKiller`** *(bool, OPTIONAL)* - enables or disables the OOM killer.\n    If enabled (`false`), tasks that attempt to consume more memory than they are allowed are immediately killed by the OOM killer.\n    The OOM killer is enabled by default in every cgroup using the `memory` subsystem.\n    To disable it, specify a value of `true`.\n* **`useHierarchy`** *(bool, OPTIONAL)* - enables or disables hierarchical memory accounting.\n    If enabled (`true`), child cgroups will share the memory limits of this cgroup.\n* **`checkBeforeUpdate`** *(bool, OPTIONAL)* - enables container memory usage check before setting a new limit.\n    If enabled (`true`), runtime MAY check if a new memory limit is lower than the current usage, and MUST\n    reject the new limit. Practically, when cgroup v1 is used, the kernel rejects the limit lower than the\n    current usage, and when cgroup v2 is used, an OOM killer is invoked. This setting can be used on\n    cgroup v2 to mimic the cgroup v1 behavior.\n\n#### Example\n\n```json\n\"memory\": {\n    \"limit\": 536870912,\n    \"reservation\": 536870912,\n    \"swap\": 536870912,\n    \"kernel\": -1,\n    \"kernelTCP\": -1,\n    \"swappiness\": 0,\n    \"disableOOMKiller\": false\n}\n```\n\n### <a name=\"configLinuxCPU\" />CPU\n\n**`cpu`** (object, OPTIONAL) represents the cgroup subsystems `cpu` and `cpusets`.\nFor more information, see the kernel cgroups documentation about [cpusets][cgroup-v1-cpusets].\n\nThe following parameters can be specified to set up the controller:\n\n* **`shares`** *(uint64, OPTIONAL)* - specifies a relative share of CPU time available to the tasks in a cgroup\n* **`quota`** *(int64, OPTIONAL)* - specifies the total amount of time in microseconds for which all tasks in a cgroup can run during one period (as defined by **`period`** below)\n    If specified with any (valid) positive value, it MUST be no smaller than `burst` (runtimes MAY generate an error).\n* **`burst`** *(uint64, OPTIONAL)* - specifies the maximum amount of accumulated time in microseconds for which all tasks in a cgroup can run additionally for burst during one period (as defined by **`period`** below)\n    If specified, this value MUST be no larger than any positive `quota` (runtimes MAY generate an error).\n* **`period`** *(uint64, OPTIONAL)* - specifies a period of time in microseconds for how regularly a cgroup's access to CPU resources should be reallocated (CFS scheduler only)\n* **`realtimeRuntime`** *(int64, OPTIONAL)* - specifies a period of time in microseconds for the longest continuous period in which the tasks in a cgroup have access to CPU resources\n* **`realtimePeriod`** *(uint64, OPTIONAL)* - same as **`period`** but applies to realtime scheduler only\n* **`cpus`** *(string, OPTIONAL)* - list of CPUs the container will run on. This is a comma-separated list, with dashes to represent ranges. For example, `0-3,7` represents CPUs 0,1,2,3, and 7.\n* **`mems`** *(string, OPTIONAL)* - list of memory nodes the container will run on. This is a comma-separated list, with dashes to represent ranges. For example, `0-3,7` represents memory nodes 0,1,2,3, and 7.\n* **`idle`** *(int64, OPTIONAL)* - cgroups are configured with minimum weight, 0: default behavior, 1: SCHED_IDLE.\n\n#### Example\n\n```json\n\"cpu\": {\n    \"shares\": 1024,\n    \"quota\": 1000000,\n    \"burst\": 1000000,\n    \"period\": 500000,\n    \"realtimeRuntime\": 950000,\n    \"realtimePeriod\": 1000000,\n    \"cpus\": \"2-3\",\n    \"mems\": \"0-7\",\n    \"idle\": 0\n}\n```\n\n### <a name=\"configLinuxBlockIO\" />Block IO\n\n**`blockIO`** (object, OPTIONAL) represents the cgroup subsystem `blkio` which implements the block IO controller.\nFor more information, see the kernel cgroups documentation about [blkio][cgroup-v1-blkio] of cgroup v1 or [io][cgroup-v2-io] of cgroup v2, .\n\nNote that I/O throttling settings in cgroup v1 apply only to Direct I/O due to kernel implementation constraints, while this limitation does not exist in cgroup v2.\n\nThe following parameters can be specified to set up the controller:\n\n* **`weight`** *(uint16, OPTIONAL)* - specifies per-cgroup weight. This is default weight of the group on all devices until and unless overridden by per-device rules.\n* **`leafWeight`** *(uint16, OPTIONAL)* - equivalents of `weight` for the purpose of deciding how much weight tasks in the given cgroup has while competing with the cgroup's child cgroups.\n* **`weightDevice`** *(array of objects, OPTIONAL)* - an array of per-device bandwidth weights.\n    Each entry has the following structure:\n    * **`major, minor`** *(int64, REQUIRED)* - major, minor numbers for device.\n        For more information, see the [mknod(1)][mknod.1] man page.\n    * **`weight`** *(uint16, OPTIONAL)* - bandwidth weight for the device.\n    * **`leafWeight`** *(uint16, OPTIONAL)* - bandwidth weight for the device while competing with the cgroup's child cgroups, CFQ scheduler only\n\n    You MUST specify at least one of `weight` or `leafWeight` in a given entry, and MAY specify both.\n\n* **`throttleReadBpsDevice`**, **`throttleWriteBpsDevice`** *(array of objects, OPTIONAL)* - an array of per-device bandwidth rate limits.\n    Each entry has the following structure:\n    * **`major, minor`** *(int64, REQUIRED)* - major, minor numbers for device.\n        For more information, see the [mknod(1)][mknod.1] man page.\n    * **`rate`** *(uint64, REQUIRED)* - bandwidth rate limit in bytes per second for the device\n\n* **`throttleReadIOPSDevice`**, **`throttleWriteIOPSDevice`** *(array of objects, OPTIONAL)* - an array of per-device IO rate limits.\n    Each entry has the following structure:\n    * **`major, minor`** *(int64, REQUIRED)* - major, minor numbers for device.\n        For more information, see the [mknod(1)][mknod.1] man page.\n    * **`rate`** *(uint64, REQUIRED)* - IO rate limit for the device\n\n#### Example\n\n```json\n\"blockIO\": {\n    \"weight\": 10,\n    \"leafWeight\": 10,\n    \"weightDevice\": [\n        {\n            \"major\": 8,\n            \"minor\": 0,\n            \"weight\": 500,\n            \"leafWeight\": 300\n        },\n        {\n            \"major\": 8,\n            \"minor\": 16,\n            \"weight\": 500\n        }\n    ],\n    \"throttleReadBpsDevice\": [\n        {\n            \"major\": 8,\n            \"minor\": 0,\n            \"rate\": 600\n        }\n    ],\n    \"throttleWriteIOPSDevice\": [\n        {\n            \"major\": 8,\n            \"minor\": 16,\n            \"rate\": 300\n        }\n    ]\n}\n```\n\n### <a name=\"configLinuxHugePageLimits\" />Huge page limits\n\n**`hugepageLimits`** (array of objects, OPTIONAL) represents the `hugetlb` controller which allows to limit the HugeTLB reservations (if supported) or usage (page fault).\nBy default if supported by the kernel, `hugepageLimits` defines the hugepage sizes and limits for HugeTLB controller\nreservation accounting, which allows to limit the HugeTLB reservations per control group and enforces the controller\nlimit at reservation time and at the fault of HugeTLB memory for which no reservation exists.\nOtherwise if not supported by the kernel, this should fallback to the page fault accounting, which allows users to limit\nthe HugeTLB usage (page fault) per control group and enforces the limit during page fault.\n\nNote that reservation limits are superior to page fault limits, since reservation limits are enforced at reservation\ntime (on mmap or shget), and never causes the application to get SIGBUS signal if the memory was reserved before hand.\nThis allows for easier fallback to alternatives such as non-HugeTLB memory for example. In the case of page fault\naccounting, it's very hard to avoid processes getting SIGBUS since the sysadmin needs precisely know the HugeTLB usage\nof all the tasks in the system and make sure there is enough pages to satisfy all requests. Avoiding tasks getting\nSIGBUS on overcommited systems is practically impossible with page fault accounting.\n\nFor more information, see the kernel cgroups documentation about [HugeTLB][cgroup-v1-hugetlb].\n\nEach entry has the following structure:\n\n* **`pageSize`** *(string, REQUIRED)* - hugepage size.\n    The value has the format `<size><unit-prefix>B` (64KB, 2MB, 1GB), and must match the `<hugepagesize>` of the\n    corresponding control file found in `/sys/fs/cgroup/hugetlb/hugetlb.<hugepagesize>.rsvd.limit_in_bytes` (if\n    hugetlb_cgroup reservation is supported) or `/sys/fs/cgroup/hugetlb/hugetlb.<hugepagesize>.limit_in_bytes` (if not\n    supported).\n    Values of `<unit-prefix>` are intended to be parsed using base 1024 (\"1KB\" = 1024, \"1MB\" = 1048576, etc).\n* **`limit`** *(uint64, REQUIRED)* - limit in bytes of *hugepagesize* HugeTLB reservations (if supported) or usage.\n\n#### Example\n\n```json\n\"hugepageLimits\": [\n    {\n        \"pageSize\": \"2MB\",\n        \"limit\": 209715200\n    },\n    {\n        \"pageSize\": \"64KB\",\n        \"limit\": 1000000\n    }\n]\n```\n\n### <a name=\"configLinuxNetwork\" />Network\n\n**`network`** (object, OPTIONAL) represents the cgroup subsystems `net_cls` and `net_prio`.\nFor more information, see the kernel cgroups documentations about [net\\_cls cgroup][cgroup-v1-net-cls] and [net\\_prio cgroup][cgroup-v1-net-prio].\n\nThe following parameters can be specified to set up the controller:\n\n* **`classID`** *(uint32, OPTIONAL)* - is the network class identifier the cgroup's network packets will be tagged with\n* **`priorities`** *(array of objects, OPTIONAL)* - specifies a list of objects of the priorities assigned to traffic originating from processes in the group and egressing the system on various interfaces.\n    The following parameters can be specified per-priority:\n    * **`name`** *(string, REQUIRED)* - interface name in [runtime network namespace](glossary.md#runtime-namespace)\n    * **`priority`** *(uint32, REQUIRED)* - priority applied to the interface\n\n#### Example\n\n```json\n\"network\": {\n    \"classID\": 1048577,\n    \"priorities\": [\n        {\n            \"name\": \"eth0\",\n            \"priority\": 500\n        },\n        {\n            \"name\": \"eth1\",\n            \"priority\": 1000\n        }\n    ]\n}\n```\n\n### <a name=\"configLinuxPIDS\" />PIDs\n\n**`pids`** (object, OPTIONAL) represents the cgroup subsystem `pids`.\nFor more information, see the kernel cgroups documentation about [pids][cgroup-v1-pids].\n\nThe following parameters can be specified to set up the controller:\n\n* **`limit`** *(int64, REQUIRED)* - specifies the maximum number of tasks in the cgroup\n\n#### Example\n\n```json\n\"pids\": {\n    \"limit\": 32771\n}\n```\n\n### <a name=\"configLinuxRDMA\" />RDMA\n\n**`rdma`** (object, OPTIONAL) represents the cgroup subsystem `rdma`.\nFor more information, see the kernel cgroups documentation about [rdma][cgroup-v1-rdma].\n\nThe name of the device to limit is the entry key.\nEntry values are objects with the following properties:\n\n* **`hcaHandles`** *(uint32, OPTIONAL)* - specifies the maximum number of hca_handles in the cgroup\n* **`hcaObjects`** *(uint32, OPTIONAL)* - specifies the maximum number of hca_objects in the cgroup\n\nYou MUST specify at least one of the `hcaHandles` or `hcaObjects` in a given entry, and MAY specify both.\n\n#### Example\n\n```json\n\"rdma\": {\n    \"mlx5_1\": {\n        \"hcaHandles\": 3,\n        \"hcaObjects\": 10000\n    },\n    \"mlx4_0\": {\n        \"hcaObjects\": 1000\n    },\n    \"rxe3\": {\n        \"hcaObjects\": 10000\n    }\n}\n```\n\n## <a name=\"configLinuxUnified\" />Unified\n\n**`unified`** (object, OPTIONAL) allows cgroup v2 parameters to be to be set and modified for the container.\n\nEach key in the map refers to a file in the cgroup unified hierarchy.\n\nThe OCI runtime MUST ensure that the needed cgroup controllers are enabled for the cgroup.\n\nConfiguration unknown to the runtime MUST still be written to the relevant file.\n\nThe runtime MUST generate an error when the configuration refers to a cgroup controller that is not present or that cannot be enabled.\n\n### Example\n\n```json\n\"unified\": {\n    \"io.max\": \"259:0 rbps=2097152 wiops=120\\n253:0 rbps=2097152 wiops=120\",\n    \"hugetlb.1GB.max\": \"1073741824\"\n}\n```\n\nIf a controller is enabled on the cgroup v2 hierarchy but the configuration is provided for the cgroup v1 equivalent controller, the runtime MAY attempt a conversion.\n\nIf the conversion is not possible the runtime MUST generate an error.\n\n## <a name=\"configLinuxIntelRdt\" />IntelRdt\n\n**`intelRdt`** (object, OPTIONAL) represents the [Intel Resource Director Technology][intel-rdt-cat-kernel-interface].\nIf `intelRdt` is set, the runtime MUST write the container process ID to the `tasks` file in a proper sub-directory in a mounted `resctrl` pseudo-filesystem. That sub-directory name is specified by `closID` parameter.\nIf no mounted `resctrl` pseudo-filesystem is available in the [runtime mount namespace](glossary.md#runtime-namespace), the runtime MUST [generate an error](runtime.md#errors).\n\nIf `intelRdt` is not set, the runtime MUST NOT manipulate any `resctrl` pseudo-filesystems.\n\nThe following parameters can be specified for the container:\n\n* **`closID`** *(string, OPTIONAL)* - specifies the identity for RDT Class of Service (CLOS).\n\n* **`l3CacheSchema`** *(string, OPTIONAL)* - specifies the schema for L3 cache id and capacity bitmask (CBM).\n    The value SHOULD start with `L3:` and SHOULD NOT contain newlines.\n* **`memBwSchema`** *(string, OPTIONAL)* - specifies the schema of memory bandwidth per L3 cache id.\n    The value MUST start with `MB:` and MUST NOT contain newlines.\n\nThe following rules on parameters MUST be applied:\n\n* If both `l3CacheSchema` and `memBwSchema` are set, runtimes MUST write the combined value to the `schemata` file in that sub-directory discussed in `closID`.\n\n* If `l3CacheSchema` contains a line beginning with `MB:`, the value written to `schemata` file MUST be the non-`MB:` line(s) from `l3CacheSchema` and the line from `memBWSchema`.\n\n* If either `l3CacheSchema` or `memBwSchema` is set, runtimes MUST write the value to the `schemata` file in the that sub-directory discussed in `closID`.\n\n* If neither `l3CacheSchema` nor `memBwSchema` is set, runtimes MUST NOT write to `schemata` files in any `resctrl` pseudo-filesystems.\n\n* If `closID` is not set, runtimes MUST use the container ID from [`start`](runtime.md#start) and create the `<container-id>` directory.\n\n* If `closID` is set, `l3CacheSchema` and/or `memBwSchema` is set\n  * if `closID` directory in a mounted `resctrl` pseudo-filesystem doesn't exist, the runtimes MUST create it.\n  * if `closID` directory in a mounted `resctrl` pseudo-filesystem exists, runtimes MUST compare `l3CacheSchema` and/or `memBwSchema` value with `schemata` file, and [generate an error](runtime.md#errors) if doesn't match.\n\n* If `closID` is set, and neither of `l3CacheSchema` and `memBwSchema` are set, runtime MUST check if corresponding pre-configured directory `closID` is present in mounted `resctrl`. If such pre-configured directory `closID` exists, runtime MUST assign container to this `closID` and [generate an error](runtime.md#errors) if directory does not exist.\n\n* **`enableCMT`** *(boolean, OPTIONAL)* - specifies if Intel RDT CMT should be enabled:\n    * CMT (Cache Monitoring Technology) supports monitoring of the last-level cache (LLC) occupancy\n      for the container.\n\n* **`enableMBM`** *(boolean, OPTIONAL)* - specifies if Intel RDT MBM should be enabled:\n    * MBM (Memory Bandwidth Monitoring) supports monitoring of total and local memory bandwidth\n      for the container.\n\n### Example\n\nConsider a two-socket machine with two L3 caches where the default CBM is 0x7ff and the max CBM length is 11 bits,\nand minimum memory bandwidth of 10% with a memory bandwidth granularity of 10%.\n\nTasks inside the container only have access to the \"upper\" 7/11 of L3 cache on socket 0 and the \"lower\" 5/11 L3 cache on socket 1,\nand may use a maximum memory bandwidth of 20% on socket 0 and 70% on socket 1.\n\n```json\n\"linux\": {\n    \"intelRdt\": {\n        \"closID\": \"guaranteed_group\",\n        \"l3CacheSchema\": \"L3:0=7f0;1=1f\",\n        \"memBwSchema\": \"MB:0=20;1=70\"\n    }\n}\n```\n\n## <a name=\"configLinuxSysctl\" />Sysctl\n\n**`sysctl`** (object, OPTIONAL) allows kernel parameters to be modified at runtime for the container.\nFor more information, see the [sysctl(8)][sysctl.8] man page.\n\n### Example\n\n```json\n\"sysctl\": {\n    \"net.ipv4.ip_forward\": \"1\",\n    \"net.core.somaxconn\": \"256\"\n}\n```\n\n## <a name=\"configLinuxSeccomp\" />Seccomp\n\nSeccomp provides application sandboxing mechanism in the Linux kernel.\nSeccomp configuration allows one to configure actions to take for matched syscalls and furthermore also allows matching on values passed as arguments to syscalls.\nFor more information about Seccomp, see [Seccomp][seccomp] kernel documentation.\nThe actions, architectures, and operators are strings that match the definitions in seccomp.h from [libseccomp][] and are translated to corresponding values.\n\n**`seccomp`** (object, OPTIONAL)\n\nThe following parameters can be specified to set up seccomp:\n\n* **`defaultAction`** *(string, REQUIRED)* - the default action for seccomp. Allowed values are the same as `syscalls[].action`.\n* **`defaultErrnoRet`** *(uint, OPTIONAL)* - the errno return code to use.\n    Some actions like `SCMP_ACT_ERRNO` and `SCMP_ACT_TRACE` allow to specify the errno code to return.\n    When the action doesn't support an errno, the runtime MUST print and error and fail.\n    If not specified then its default value is `EPERM`.\n* **`architectures`** *(array of strings, OPTIONAL)* - the architecture used for system calls.\n    A valid list of constants as of libseccomp v2.5.0 is shown below.\n\n    * `SCMP_ARCH_X86`\n    * `SCMP_ARCH_X86_64`\n    * `SCMP_ARCH_X32`\n    * `SCMP_ARCH_ARM`\n    * `SCMP_ARCH_AARCH64`\n    * `SCMP_ARCH_MIPS`\n    * `SCMP_ARCH_MIPS64`\n    * `SCMP_ARCH_MIPS64N32`\n    * `SCMP_ARCH_MIPSEL`\n    * `SCMP_ARCH_MIPSEL64`\n    * `SCMP_ARCH_MIPSEL64N32`\n    * `SCMP_ARCH_PPC`\n    * `SCMP_ARCH_PPC64`\n    * `SCMP_ARCH_PPC64LE`\n    * `SCMP_ARCH_S390`\n    * `SCMP_ARCH_S390X`\n    * `SCMP_ARCH_PARISC`\n    * `SCMP_ARCH_PARISC64`\n    * `SCMP_ARCH_RISCV64`\n\n<!--\nThe following constants are defined in the main branch of libseccomp,\nbut not included in its latest release (v2.5) yet:\nhttps://github.com/seccomp/libseccomp/commits/main/include/seccomp.h.in\n\n* SCMP_ARCH_LOONGARCH64\n* SCMP_ARCH_M68K\n* SCMP_ARCH_SH\n* SCMP_ARCH_SHEB\n-->\n\n* **`flags`** *(array of strings, OPTIONAL)* - list of flags to use with seccomp(2).\n\n    A valid list of constants is shown below.\n\n    * `SECCOMP_FILTER_FLAG_TSYNC`\n    * `SECCOMP_FILTER_FLAG_LOG`\n    * `SECCOMP_FILTER_FLAG_SPEC_ALLOW`\n    * `SECCOMP_FILTER_FLAG_WAIT_KILLABLE_RECV`\n\n* **`listenerPath`** *(string, OPTIONAL)* - specifies the path of UNIX domain socket over which the runtime will send the [container process state](#containerprocessstate) data structure when the `SCMP_ACT_NOTIFY` action is used.\n    This socket MUST use `AF_UNIX` domain and `SOCK_STREAM` type.\n    The runtime MUST send exactly one [container process state](#containerprocessstate) per connection.\n    The connection MUST NOT be reused and it MUST be closed after sending a seccomp state.\n    If sending to this socket fails, the runtime MUST [generate an error](runtime.md#errors).\n    If the `SCMP_ACT_NOTIFY` action is not used this value is ignored.\n\n    The runtime sends the following file descriptors using `SCM_RIGHTS` and set their names in the `fds` array of the [container process state](#containerprocessstate):\n\n    * **`seccompFd`** (string, REQUIRED) is the seccomp file descriptor returned by the seccomp syscall.\n\n* **`listenerMetadata`** *(string, OPTIONAL)* - specifies an opaque data to pass to the seccomp agent.\n    This string will be sent as the `metadata` field in the [container process state](#containerprocessstate).\n    This field MUST NOT be set if `listenerPath` is not set.\n\n* **`syscalls`** *(array of objects, OPTIONAL)* - match a syscall in seccomp.\n    While this property is OPTIONAL, some values of `defaultAction` are not useful without `syscalls` entries.\n    For example, if `defaultAction` is `SCMP_ACT_KILL` and `syscalls` is empty or unset, the kernel will kill the container process on its first syscall.\n    Each entry has the following structure:\n\n    * **`names`** *(array of strings, REQUIRED)* - the names of the syscalls.\n        `names` MUST contain at least one entry.\n    * **`action`** *(string, REQUIRED)* - the action for seccomp rules.\n        A valid list of constants as of libseccomp v2.5.0 is shown below.\n\n        * `SCMP_ACT_KILL`\n        * `SCMP_ACT_KILL_PROCESS`\n        * `SCMP_ACT_KILL_THREAD`\n        * `SCMP_ACT_TRAP`\n        * `SCMP_ACT_ERRNO`\n        * `SCMP_ACT_TRACE`\n        * `SCMP_ACT_ALLOW`\n        * `SCMP_ACT_LOG`\n        * `SCMP_ACT_NOTIFY`\n\n    * **`errnoRet`** *(uint, OPTIONAL)* - the errno return code to use.\n        Some actions like `SCMP_ACT_ERRNO` and `SCMP_ACT_TRACE` allow to specify the errno code to return.\n        When the action doesn't support an errno, the runtime MUST print and error and fail.\n        If not specified its default value is `EPERM`.\n\n    * **`args`** *(array of objects, OPTIONAL)* - the specific syscall in seccomp.\n        Each entry has the following structure:\n\n        * **`index`** *(uint, REQUIRED)* - the index for syscall arguments in seccomp.\n        * **`value`** *(uint64, REQUIRED)* - the value for syscall arguments in seccomp.\n        * **`valueTwo`** *(uint64, OPTIONAL)* - the value for syscall arguments in seccomp.\n        * **`op`** *(string, REQUIRED)* - the operator for syscall arguments in seccomp.\n            A valid list of constants as of libseccomp v2.3.2 is shown below.\n\n            * `SCMP_CMP_NE`\n            * `SCMP_CMP_LT`\n            * `SCMP_CMP_LE`\n            * `SCMP_CMP_EQ`\n            * `SCMP_CMP_GE`\n            * `SCMP_CMP_GT`\n            * `SCMP_CMP_MASKED_EQ`\n\n### Example\n\n```json\n\"seccomp\": {\n    \"defaultAction\": \"SCMP_ACT_ALLOW\",\n    \"architectures\": [\n        \"SCMP_ARCH_X86\",\n        \"SCMP_ARCH_X32\"\n    ],\n    \"syscalls\": [\n        {\n            \"names\": [\n                \"getcwd\",\n                \"chmod\"\n            ],\n            \"action\": \"SCMP_ACT_ERRNO\"\n        }\n    ]\n}\n```\n\n### <a name=\"containerprocessstate\" />The Container Process State\n\nThe container process state is a data structure passed via a UNIX socket.\nThe container runtime MUST send the container process state over the UNIX socket as regular payload serialized in JSON and file descriptors MUST be sent using `SCM_RIGHTS`.\nThe container runtime MAY use several `sendmsg(2)` calls to send the aforementioned data.\nIf more than one `sendmsg(2)` is used, the file descriptors MUST be sent only in the first call.\n\nThe container process state includes the following properties:\n\n* **`ociVersion`** (string, REQUIRED) is version of the Open Container Initiative Runtime Specification with which the container process state complies.\n* **`fds`** (array, OPTIONAL) is a string array containing the names of the file descriptors passed.\n    The index of the name in this array corresponds to index of the file descriptors in the `SCM_RIGHTS` array.\n* **`pid`** (int, REQUIRED) is the container process ID, as seen by the runtime.\n* **`metadata`** (string, OPTIONAL) opaque metadata.\n* **`state`** ([state](runtime.md#state), REQUIRED) is the state of the container.\n\nExample sending a single `seccompFd` file descriptor in the `SCM_RIGHTS` array:\n\n```json\n{\n    \"ociVersion\": \"1.0.2\",\n    \"fds\": [\n        \"seccompFd\"\n    ],\n    \"pid\": 4422,\n    \"metadata\": \"MKNOD=/dev/null,/dev/net/tun;BPF_MAP_TYPES=hash,array\",\n    \"state\": {\n        \"ociVersion\": \"1.0.2\",\n        \"id\": \"oci-container1\",\n        \"status\": \"creating\",\n        \"pid\": 4422,\n        \"bundle\": \"/containers/redis\",\n        \"annotations\": {\n            \"myKey\": \"myValue\"\n        }\n    }\n}\n```\n\n## <a name=\"configLinuxRootfsMountPropagation\" />Rootfs Mount Propagation\n\n**`rootfsPropagation`** (string, OPTIONAL) sets the rootfs's mount propagation.\nIts value is either `shared`, `slave`, `private` or `unbindable`.\nIt's worth noting that a peer group is defined as a group of VFS mounts that propagate events to each other.\nA nested container is defined as a container launched inside an existing container.\n\n* **`shared`**: the rootfs mount belongs to a new peer group.\n    This means that further mounts (e.g. nested containers) will also belong to that peer group and will propagate events to the rootfs.\n    Note this does not mean that it's shared with the host.\n* **`slave`**: the rootfs mount receives propagation events from the host (e.g. if something is mounted on the host it will also appear in the container) but not the other way around.\n* **`private`**: the rootfs mount doesn't receive mount propagation events from the host and further mounts in nested containers will be isolated from the host and from the rootfs (even if the nested container `rootfsPropagation` option is shared).\n* **`unbindable`**: the rootfs mount is a private mount that cannot be bind-mounted.\n\nThe [Shared Subtrees][sharedsubtree] article in the kernel documentation has more information about mount propagation.\n\n### Example\n\n```json\n\"rootfsPropagation\": \"slave\",\n```\n\n## <a name=\"configLinuxMaskedPaths\" />Masked Paths\n\n**`maskedPaths`** (array of strings, OPTIONAL) will mask over the provided paths inside the container so that they cannot be read.\nThe values MUST be absolute paths in the [container namespace](glossary.md#container_namespace).\n\n### Example\n\n```json\n\"maskedPaths\": [\n    \"/proc/kcore\"\n]\n```\n\n## <a name=\"configLinuxReadonlyPaths\" />Readonly Paths\n\n**`readonlyPaths`** (array of strings, OPTIONAL) will set the provided paths as readonly inside the container.\nThe values MUST be absolute paths in the [container namespace](glossary.md#container-namespace).\n\n### Example\n\n```json\n\"readonlyPaths\": [\n    \"/proc/sys\"\n]\n```\n\n## <a name=\"configLinuxMountLabel\" />Mount Label\n\n**`mountLabel`** (string, OPTIONAL) will set the Selinux context for the mounts in the container.\n\n### Example\n\n```json\n\"mountLabel\": \"system_u:object_r:svirt_sandbox_file_t:s0:c715,c811\"\n```\n\n## <a name=\"configLinuxPersonality\" />Personality\n\n**`personality`** (object, OPTIONAL) sets the Linux execution personality. For more information\nsee the [personality][personality.2] syscall documentation. As most of the options are\nobsolete and rarely used, and some reduce security, the currently supported set is a small\nsubset of the available options.\n\n* **`domain`** *(string, REQUIRED)* - the execution domain.\n    The valid list of constants is shown below. `LINUX32` will set the `uname` system call to show\n    a 32 bit CPU type, such as `i686`.\n\n    * `LINUX`\n    * `LINUX32`\n\n* **`flags`** *(array of strings, OPTIONAL)* - the additional flags to apply.\n    Currently no flag values are supported.\n\n\n[cgroup-v1]: https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt\n[cgroup-v1-blkio]: https://www.kernel.org/doc/Documentation/cgroup-v1/blkio-controller.txt\n[cgroup-v1-cpusets]: https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt\n[cgroup-v1-devices]: https://www.kernel.org/doc/Documentation/cgroup-v1/devices.txt\n[cgroup-v1-hugetlb]: https://www.kernel.org/doc/Documentation/cgroup-v1/hugetlb.txt\n[cgroup-v1-memory]: https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt\n[cgroup-v1-net-cls]: https://www.kernel.org/doc/Documentation/cgroup-v1/net_cls.txt\n[cgroup-v1-net-prio]: https://www.kernel.org/doc/Documentation/cgroup-v1/net_prio.txt\n[cgroup-v1-pids]: https://www.kernel.org/doc/Documentation/cgroup-v1/pids.txt\n[cgroup-v1-rdma]: https://www.kernel.org/doc/Documentation/cgroup-v1/rdma.txt\n[cgroup-v2]: https://www.kernel.org/doc/Documentation/cgroup-v2.txt\n[cgroup-v2-io]: https://docs.kernel.org/admin-guide/cgroup-v2.html#io\n[devices]: https://www.kernel.org/doc/Documentation/admin-guide/devices.txt\n[devpts]: https://www.kernel.org/doc/Documentation/filesystems/devpts.txt\n[file]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_164\n[libseccomp]: https://github.com/seccomp/libseccomp\n[proc]: https://www.kernel.org/doc/Documentation/filesystems/proc.txt\n[seccomp]: https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt\n[sharedsubtree]: https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt\n[sysfs]: https://www.kernel.org/doc/Documentation/filesystems/sysfs.txt\n[tmpfs]: https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt\n\n[full.4]: https://man7.org/linux/man-pages/man4/full.4.html\n[mknod.1]: https://man7.org/linux/man-pages/man1/mknod.1.html\n[mknod.2]: https://man7.org/linux/man-pages/man2/mknod.2.html\n[namespaces.7_2]: https://man7.org/linux/man-pages/man7/namespaces.7.html\n[null.4]: https://man7.org/linux/man-pages/man4/null.4.html\n[personality.2]: https://man7.org/linux/man-pages/man2/personality.2.html\n[pts.4]: https://man7.org/linux/man-pages/man4/pts.4.html\n[random.4]: https://man7.org/linux/man-pages/man4/random.4.html\n[sysctl.8]: https://man7.org/linux/man-pages/man8/sysctl.8.html\n[tty.4]: https://man7.org/linux/man-pages/man4/tty.4.html\n[zero.4]: https://man7.org/linux/man-pages/man4/zero.4.html\n[user-namespaces]: https://man7.org/linux/man-pages/man7/user_namespaces.7.html\n[intel-rdt-cat-kernel-interface]: https://www.kernel.org/doc/Documentation/x86/intel_rdt_ui.txt\n[time_namespaces.7]: https://man7.org/linux/man-pages/man7/time_namespaces.7.html\n"
        },
        {
          "name": "config-solaris.md",
          "type": "blob",
          "size": 5.9638671875,
          "content": "# <a name=\"solarisApplicationContainerConfiguration\" />Solaris Application Container Configuration\n\nSolaris application containers can be configured using the following properties, all of the below properties have mappings to properties specified under [zonecfg(1M)][zonecfg.1m_2] man page, except milestone.\n\n## <a name=\"configSolarisMilestone\" />milestone\nThe SMF(Service Management Facility) FMRI which should go to \"online\" state before we start the desired process within the container.\n\n**`milestone`** *(string, OPTIONAL)*\n\n### Example\n```json\n\"milestone\": \"svc:/milestone/container:default\"\n```\n\n## <a name=\"configSolarisLimitpriv\" />limitpriv\nThe maximum set of privileges any process in this container can obtain.\nThe property should consist of a comma-separated privilege set specification as described in [priv_str_to_set(3C)][priv-str-to-set.3c] man page for the respective release of Solaris.\n\n**`limitpriv`** *(string, OPTIONAL)*\n\n### Example\n```json\n\"limitpriv\": \"default\"\n```\n\n## <a name=\"configSolarisMaxShmMemory\" />maxShmMemory\nThe maximum amount of shared memory allowed for this application container.\nA scale (K, M, G, T) can be applied to the value for each of these numbers (for example, 1M is one megabyte).\nMapped to `max-shm-memory` in [zonecfg(1M)][zonecfg.1m_2] man page.\n\n**`maxShmMemory`** *(string, OPTIONAL)*\n\n### Example\n```json\n\"maxShmMemory\": \"512m\"\n```\n\n## <a name=\"configSolarisCappedCpu\" />cappedCPU\nSets a limit on the amount of CPU time that can be used by a container.\nThe unit used translates to the percentage of a single CPU that can be used by all user threads in a container, expressed as a fraction (for example, .75) or a mixed number (whole number and fraction, for example, 1.25).\nAn ncpu value of 1 means 100% of a CPU, a value of 1.25 means 125%, .75 mean 75%, and so forth.\nWhen projects within a capped container have their own caps, the minimum value takes precedence.\ncappedCPU is mapped to `capped-cpu` in [zonecfg(1M)][zonecfg.1m_2] man page.\n\n* **`ncpus`** *(string, OPTIONAL)*\n\n### Example\n```json\n\"cappedCPU\": {\n    \"ncpus\": \"8\"\n}\n```\n\n## <a name=\"configSolarisCappedMemory\" />cappedMemory\nThe physical and swap caps on the memory that can be used by this application container.\nA scale (K, M, G, T) can be applied to the value for each of these numbers (for example, 1M is one megabyte).\ncappedMemory is mapped to `capped-memory` in [zonecfg(1M)][zonecfg.1m_2] man page.\n\n* **`physical`** *(string, OPTIONAL)*\n* **`swap`** *(string, OPTIONAL)*\n\n### Example\n```json\n\"cappedMemory\": {\n    \"physical\": \"512m\",\n    \"swap\": \"512m\"\n}\n```\n\n## <a name=\"configSolarisNetwork\" />Network\n\n### <a name=\"configSolarisAutomaticNetwork\" />Automatic Network (anet)\nanet is specified as an array that is used to set up networking for Solaris application containers.\nThe anet resource represents the automatic creation of a network resource for an application container.\nThe zones administration daemon, zoneadmd, is the primary process for managing the container's virtual platform.\nOne of the daemon's responsibilities is creation and teardown of the networks for the container.\nFor more information on the daemon see the [zoneadmd(1M)][zoneadmd.1m] man page.\nWhen such a container is started, a temporary VNIC(Virtual NIC) is automatically created for the container.\nThe VNIC is deleted when the container is torn down.\nThe following properties can be used to set up automatic networks.\nFor additional information on properties, check the [zonecfg(1M)][zonecfg.1m_2] man page for the respective release of Solaris.\n\n* **`linkname`** *(string, OPTIONAL)* Specify a name for the automatically created VNIC datalink.\n* **`lowerLink`** *(string, OPTIONAL)* Specify the link over which the VNIC will be created.\nMapped to `lower-link` in the [zonecfg(1M)][zonecfg.1m_2] man page.\n* **`allowedAddress`** *(string, OPTIONAL)* The set of IP addresses that the container can use might be constrained by specifying the `allowedAddress` property.\n    If `allowedAddress` has not been specified, then they can use any IP address on the associated physical interface for the network resource.\n    Otherwise, when `allowedAddress` is specified, the container cannot use IP addresses that are not in the `allowedAddress` list for the physical address.\n    Mapped to `allowed-address` in the [zonecfg(1M)][zonecfg.1m_2] man page.\n* **`configureAllowedAddress`** *(string, OPTIONAL)* If `configureAllowedAddress` is set to true, the addresses specified by `allowedAddress` are automatically configured on the interface each time the container starts.\n    When it is set to false, the `allowedAddress` will not be configured on container start.\n    Mapped to `configure-allowed-address` in the [zonecfg(1M)][zonecfg.1m_2] man page.\n* **`defrouter`** *(string, OPTIONAL)* The value for the OPTIONAL default router.\n* **`macAddress`** *(string, OPTIONAL)* Set the VNIC's MAC addresses based on the specified value or keyword.\n    If not a keyword, it is interpreted as a unicast MAC address.\n    For a list of the supported keywords please refer to the [zonecfg(1M)][zonecfg.1m_2] man page of the respective Solaris release.\n    Mapped to `mac-address` in the [zonecfg(1M)][zonecfg.1m_2] man page.\n* **`linkProtection`** *(string, OPTIONAL)* Enables one or more types of link protection using comma-separated values.\n    See the protection property in dladm(8) for supported values in respective release of Solaris.\n    Mapped to `link-protection` in the [zonecfg(1M)][zonecfg.1m_2] man page.\n\n#### Example\n```json\n\"anet\": [\n    {\n        \"allowedAddress\": \"172.17.0.2/16\",\n        \"configureAllowedAddress\": \"true\",\n        \"defrouter\": \"172.17.0.1/16\",\n        \"linkProtection\": \"mac-nospoof, ip-nospoof\",\n        \"linkname\": \"net0\",\n        \"lowerLink\": \"net2\",\n        \"macAddress\": \"02:42:f8:52:c7:16\"\n    }\n]\n```\n\n\n[priv-str-to-set.3c]: https://docs.oracle.com/cd/E86824_01/html/E54766/priv-str-to-set-3c.html\n[zoneadmd.1m]: https://docs.oracle.com/cd/E86824_01/html/E54764/zoneadmd-1m.html\n[zonecfg.1m_2]: https://docs.oracle.com/cd/E86824_01/html/E54764/zonecfg-1m.html\n"
        },
        {
          "name": "config-vm.md",
          "type": "blob",
          "size": 3.552734375,
          "content": "# <a name=\"VirtualMachineSpecificContainerConfiguration\" /> Virtual-machine-specific Container Configuration\n\nThis section describes the schema for the [virtual-machine-specific section](config.md#platform-specific-configuration) of the [container configuration](config.md).\nThe virtual-machine container specification provides additional configuration for the hypervisor, kernel, and image.\n\n## <a name=\"HypervisorObject\" /> Hypervisor Object\n\n**`hypervisor`** (object, OPTIONAL) specifies details of the hypervisor that manages the container virtual machine.\n* **`path`** (string, REQUIRED) path to the hypervisor binary that manages the container virtual machine.\n    This value MUST be an absolute path in the [runtime mount namespace](glossary.md#runtime-namespace).\n* **`parameters`** (array of strings, OPTIONAL) specifies an array of parameters to pass to the hypervisor.\n\n### Example\n\n```json\n    \"hypervisor\": {\n        \"path\": \"/path/to/vmm\",\n        \"parameters\": [\"opts1=foo\", \"opts2=bar\"]\n    }\n```\n\n## <a name=\"KernelObject\" /> Kernel Object\n\n**`kernel`** (object, REQUIRED) specifies details of the kernel to boot the container virtual machine with.\n* **`path`** (string, REQUIRED) path to the kernel used to boot the container virtual machine.\n    This value MUST be an absolute path in the [runtime mount namespace](glossary.md#runtime-namespace).\n* **`parameters`** (array of strings, OPTIONAL) specifies an array of parameters to pass to the kernel.\n* **`initrd`** (string, OPTIONAL) path to an initial ramdisk to be used by the container virtual machine.\n    This value MUST be an absolute path in the [runtime mount namespace](glossary.md#runtime-namespace).\n\n### Example\n\n```json\n    \"kernel\": {\n        \"path\": \"/path/to/vmlinuz\",\n        \"parameters\": [\"foo=bar\", \"hello world\"],\n        \"initrd\": \"/path/to/initrd.img\"\n    }\n```\n\n## <a name=\"ImageObject\" /> Image Object\n\n**`image`** (object, OPTIONAL) specifies details of the image that contains the root filesystem for the container virtual machine.\n* **`path`** (string, REQUIRED) path to the container virtual machine root image.\n    This value MUST be an absolute path in the [runtime mount namespace](glossary.md#runtime-namespace).\n* **`format`** (string, REQUIRED) format of the container virtual machine root image. Commonly supported formats are:\n    * **`raw`** [raw disk image format][raw-image-format]. Unset values for `format` will default to that format.\n    * **`qcow2`** [QEMU image format][qcow2-image-format].\n    * **`vdi`** [VirtualBox 1.1 compatible image format][vdi-image-format].\n    * **`vmdk`** [VMware compatible image format][vmdk-image-format].\n    * **`vhd`** [Virtual Hard Disk image format][vhd-image-format].\n\nThis image contains the root filesystem that the virtual machine **`kernel`** will boot into, not to be confused with the container root filesystem itself. The latter, as specified by **`path`** from the [Root Configuration](config.md#Root-Configuration) section, will be mounted inside the virtual machine at a location chosen by the virtual-machine-based runtime.\n\n### Example\n\n```json\n    \"image\": {\n        \"path\": \"/path/to/vm/rootfs.img\",\n\t\"format\": \"raw\"\n    }\n```\n\n[raw-image-format]: https://en.wikipedia.org/wiki/IMG_(file_format)\n[qcow2-image-format]: https://git.qemu.org/?p=qemu.git;a=blob_plain;f=docs/interop/qcow2.txt;hb=HEAD\n[vdi-image-format]: https://forensicswiki.org/wiki/Virtual_Disk_Image_(VDI)\n[vmdk-image-format]: http://www.vmware.com/app/vmdk/?src=vmdk\n[vhd-image-format]: https://github.com/libyal/libvhdi/blob/master/documentation/Virtual%20Hard%20Disk%20(VHD)%20image%20format.asciidoc\n"
        },
        {
          "name": "config-windows.md",
          "type": "blob",
          "size": 7.919921875,
          "content": "# <a name=\"windowsSpecificContainerConfiguration\" />Windows-specific Container Configuration\n\nThis document describes the schema for the [Windows-specific section](config.md#platform-specific-configuration) of the [container configuration](config.md).\nThe Windows container specification uses APIs provided by the Windows Host Compute Service (HCS) to fulfill the spec.\n\n## <a name=\"configWindowsLayerFolders\" />LayerFolders\n\n**`layerFolders`** (array of strings, REQUIRED) specifies a list of layer folders the container image relies on. The list is ordered from topmost layer to base layer with the last entry being the scratch.\n`layerFolders` MUST contain at least one entry.\n\n### Example\n\n```json\n\"windows\": {\n    \"layerFolders\": [\n        \"C:\\\\Layers\\\\layer2\",\n        \"C:\\\\Layers\\\\layer1\",\n        \"C:\\\\Layers\\\\layer-base\",\n        \"C:\\\\scratch\",\n    ]\n}\n```\n\n## <a name=\"configWindowsDevices\" />Devices\n\n**`devices`** (array of objects, OPTIONAL) lists devices that MUST be available in the container.\n\nEach entry has the following structure:\n\n* **`id`** *(string, REQUIRED)* - specifies the device which the runtime MUST make available in the container.\n* **`idType`** *(string, REQUIRED)* - tells the runtime how to interpret `id`. Today, Windows only supports a value of `class`, which identifies `id` as a [device interface class GUID][interfaceGUID].\n\n[interfaceGUID]: https://docs.microsoft.com/en-us/windows-hardware/drivers/install/overview-of-device-interface-classes\n\n### Example\n\n```json\n\"windows\": {\n    \"devices\": [\n        {\n            \"id\": \"24E552D7-6523-47F7-A647-D3465BF1F5CA\",\n            \"idType\": \"class\"\n        },\n        {\n            \"id\": \"5175d334-c371-4806-b3ba-71fd53c9258d\",\n            \"idType\": \"class\"\n        }\n    ]\n}\n```\n\n## <a name=\"configWindowsResources\" />Resources\n\nYou can configure a container's resource limits via the OPTIONAL `resources` field of the Windows configuration.\n\n### <a name=\"configWindowsMemory\" />Memory\n\n`memory` is an OPTIONAL configuration for the container's memory usage.\n\nThe following parameters can be specified:\n\n* **`limit`** *(uint64, OPTIONAL)* - sets limit of memory usage in bytes.\n\n#### Example\n\n```json\n\"windows\": {\n    \"resources\": {\n        \"memory\": {\n            \"limit\": 2097152\n        }\n    }\n}\n```\n\n### <a name=\"configWindowsCpu\" />CPU\n\n`cpu` is an OPTIONAL configuration for the container's CPU usage.\n\nThe following parameters can be specified (mutually exclusive):\n\n* **`count`** *(uint64, OPTIONAL)* - specifies the number of CPUs available to the container. It represents the fraction of the configured processor `count` in a container in relation to the processors available in the host. The fraction ultimately determines the portion of processor cycles that the threads in a container can use during each scheduling interval, as the number of cycles per 10,000 cycles.\n* **`shares`** *(uint16, OPTIONAL)* - limits the share of processor time given to the container relative to other workloads on the processor. The processor `shares` (`weight` at the platform level) is a value between 0 and 10,000.\n* **`maximum`** *(uint16, OPTIONAL)* - determines the portion of processor cycles that the threads in a container can use during each scheduling interval, as the number of cycles per 10,000 cycles. Set processor `maximum` to a percentage times 100.\n* **`affinity`** *(array of objects, OPTIONAL)* - specifies the set of CPU to affinitize for this container.\n\n  Each entry has the following structure:\n\n  Ref: https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/miniport/ns-miniport-_group_affinity\n\n  * **`mask`** *(uint64, REQUIRED)* - specifies the CPU mask relative to this CPU group.\n  * **`group`** *(uint32, REQUIRED)* - specifies the processor group this mask refers to, as returned by GetLogicalProcessorInformationEx.\n\nRef: https://docs.microsoft.com/en-us/virtualization/api/hcs/schemareference#Container_Processor\n\n#### Example\n\n```json\n\"windows\": {\n    \"resources\": {\n        \"cpu\": {\n            \"maximum\": 5000\n        }\n    }\n}\n```\n\n### <a name=\"configWindowsStorage\" />Storage\n\n`storage` is an OPTIONAL configuration for the container's storage usage.\n\nThe following parameters can be specified:\n\n* **`iops`** *(uint64, OPTIONAL)* - specifies the maximum IO operations per second for the system drive of the container.\n* **`bps`** *(uint64, OPTIONAL)* - specifies the maximum bytes per second for the system drive of the container.\n* **`sandboxSize`** *(uint64, OPTIONAL)* - specifies the minimum size of the system drive in bytes.\n\n#### Example\n\n```json\n\"windows\": {\n    \"resources\": {\n        \"storage\": {\n            \"iops\": 50\n        }\n    }\n}\n```\n\n## <a name=\"configWindowsNetwork\" />Network\n\nYou can configure a container's networking options via the OPTIONAL `network` field of the Windows configuration.\n\nThe following parameters can be specified:\n\n* **`endpointList`** *(array of strings, OPTIONAL)* - list of HNS (Host Network Service) endpoints that the container should connect to.\n* **`allowUnqualifiedDNSQuery`** *(bool, OPTIONAL)* - specifies if unqualified DNS name resolution is allowed.\n* **`DNSSearchList`** *(array of strings, OPTIONAL)* - comma separated list of DNS suffixes to use for name resolution.\n* **`networkSharedContainerName`** *(string, OPTIONAL)* - name (ID) of the container that we will share with the network stack.\n* **`networkNamespace`** *(string, OPTIONAL)* - name (ID) of the network namespace that will be used for the container. If a network namespace is specified no other parameter must be specified.\n\n### Example\n\n```json\n\"windows\": {\n    \"network\": {\n        \"endpointList\": [\n            \"7a010682-17e0-4455-a838-02e5d9655fe6\"\n        ],\n        \"allowUnqualifiedDNSQuery\": true,\n        \"DNSSearchList\": [\n            \"a.com\",\n            \"b.com\"\n        ],\n        \"networkSharedContainerName\": \"containerName\",\n        \"networkNamespace\": \"168f3daf-efc6-4377-b20a-2c86764ba892\"\n    }\n}\n```\n\n## <a name=\"configWindowsCredentialSpec\" />Credential Spec\n\nYou can configure a container's group Managed Service Account (gMSA) via the OPTIONAL `credentialSpec` field of the Windows configuration.\nThe `credentialSpec` is a JSON object whose properties are implementation-defined.\nFor more information about gMSAs, see [Active Directory Service Accounts for Windows Containers][gMSAOverview].\nFor more information about tooling to generate a gMSA, see [Deployment Overview][gMSATooling].\n\n\n[gMSAOverview]: https://aka.ms/windowscontainers/manage-serviceaccounts\n[gMSATooling]: https://aka.ms/windowscontainers/credentialspec-tools\n\n## <a name=\"configWindowsServicing\" />Servicing\n\nWhen a container terminates, the Host Compute Service indicates if a Windows update servicing operation is pending.\nYou can indicate that a container should be started in a mode to apply pending servicing operations via the OPTIONAL `servicing` field of the Windows configuration.\n\n### Example\n\n```json\n\"windows\": {\n    \"servicing\": true\n}\n```\n\n## <a name=\"configWindowsIgnoreFlushesDuringBoot\" />IgnoreFlushesDuringBoot\n\nYou can indicate that a container should be started in a mode where disk flushes are not performed during container boot via the OPTIONAL `ignoreFlushesDuringBoot` field of the Windows configuration.\n\n### Example\n\n```json\n\"windows\": {\n    \"ignoreFlushesDuringBoot\": true\n}\n```\n\n## <a name=\"configWindowsHyperV\" />HyperV\n\n`hyperv` is an OPTIONAL field of the Windows configuration.\nIf present, the container MUST be run with Hyper-V isolation.\nIf omitted, the container MUST be run as a Windows Server container.\n\nThe following parameters can be specified:\n\n* **`utilityVMPath`** *(string, OPTIONAL)* - specifies the path to the image used for the utility VM.\n    This would be specified if using a base image which does not contain a utility VM image.\n    If not supplied, the runtime will search the container filesystem layers from the bottom-most layer upwards, until it locates \"UtilityVM\", and default to that path.\n\n### Example\n\n```json\n\"windows\": {\n    \"hyperv\": {\n        \"utilityVMPath\": \"C:\\\\path\\\\to\\\\utilityvm\"\n    }\n}\n```\n"
        },
        {
          "name": "config-zos.md",
          "type": "blob",
          "size": 0.98046875,
          "content": "_This document is a work in progress._\n\n# <a name=\"ZOSContainerConfiguration\" />z/OS Container Configuration\n\nThis document describes the schema for the [z/OS-specific section](config.md#platform-specific-configuration) of the [container configuration](config.md).\n\n## <a name=\"configZOSDevices\" />Devices\n\n**`devices`** (array of objects, OPTIONAL) lists devices that MUST be available in the container.\nThe runtime MAY supply them however it likes.\n\nEach entry has the following structure:\n\n* **`type`** *(string, REQUIRED)* - type of device: `c`, `b`, `u` or `p`.\n* **`path`** *(string, REQUIRED)* - full path to device inside container.\n    If a file already exists at `path` that does not match the requested device, the runtime MUST generate an error.\n* **`major, minor`** *(int64, REQUIRED unless `type` is `p`)* - major, minor numbers for the device.\n* **`fileMode`** *(uint32, OPTIONAL)* - file mode for the device.\n\nThe same `type`, `major` and `minor` SHOULD NOT be used for multiple devices.\n"
        },
        {
          "name": "config.md",
          "type": "blob",
          "size": 55.34765625,
          "content": "# <a name=\"configuration\" />Configuration\n\nThis configuration file contains metadata necessary to implement [standard operations](runtime.md#operations) against the container.\nThis includes the process to run, environment variables to inject, sandboxing features to use, etc.\n\nThe canonical schema is defined in this document, but there is a JSON Schema in [`schema/config-schema.json`](schema/config-schema.json) and Go bindings in [`specs-go/config.go`](specs-go/config.go).\n[Platform](spec.md#platforms)-specific configuration schema are defined in the [platform-specific documents](#platform-specific-configuration) linked below.\nFor properties that are only defined for some [platforms](spec.md#platforms), the Go property has a `platform` tag listing those protocols (e.g. `platform:\"linux,solaris\"`).\n\nBelow is a detailed description of each field defined in the configuration format and valid values are specified.\nPlatform-specific fields are identified as such.\nFor all platform-specific configuration values, the scope defined below in the [Platform-specific configuration](#platform-specific-configuration) section applies.\n\n\n## <a name=\"configSpecificationVersion\" />Specification version\n\n* **`ociVersion`** (string, REQUIRED) MUST be in [SemVer v2.0.0][semver-v2.0.0] format and specifies the version of the Open Container Initiative Runtime Specification with which the bundle complies.\n    The Open Container Initiative Runtime Specification follows semantic versioning and retains forward and backward compatibility within major versions.\n    For example, if a configuration is compliant with version 1.1 of this specification, it is compatible with all runtimes that support any 1.1 or later release of this specification, but is not compatible with a runtime that supports 1.0 and not 1.1.\n\n### Example\n\n```json\n\"ociVersion\": \"0.1.0\"\n```\n\n## <a name=\"configRoot\" />Root\n\n**`root`** (object, OPTIONAL) specifies the container's root filesystem.\nOn Windows, for Windows Server Containers, this field is REQUIRED.\nFor [Hyper-V Containers](config-windows.md#hyperv), this field MUST NOT be set.\n\nOn all other platforms, this field is REQUIRED.\n\n* **`path`** (string, REQUIRED) Specifies the path to the root filesystem for the container.\n    * On Windows, `path` MUST be a [volume GUID path][naming-a-volume].\n    * On POSIX platforms, `path` is either an absolute path or a relative path to the bundle.\n        For example, with a bundle at `/to/bundle` and a root filesystem at `/to/bundle/rootfs`, the `path` value can be either `/to/bundle/rootfs` or `rootfs`.\n        The value SHOULD be the conventional `rootfs`.\n\n    A directory MUST exist at the path declared by the field.\n\n* **`readonly`** (bool, OPTIONAL) If true then the root filesystem MUST be read-only inside the container, defaults to false.\n    * On Windows, this field MUST be omitted or false.\n\n### Example (POSIX platforms)\n\n```json\n\"root\": {\n    \"path\": \"rootfs\",\n    \"readonly\": true\n}\n```\n\n### Example (Windows)\n\n```json\n\"root\": {\n    \"path\": \"\\\\\\\\?\\\\Volume{ec84d99e-3f02-11e7-ac6c-00155d7682cf}\\\\\"\n}\n```\n\n## <a name=\"configMounts\" />Mounts\n\n**`mounts`** (array of objects, OPTIONAL) specifies additional mounts beyond [`root`](#root).\nThe runtime MUST mount entries in the listed order.\nFor Linux, the parameters are as documented in [mount(2)][mount.2] system call man page.\nFor Solaris, the mount entry corresponds to the 'fs' resource in the [zonecfg(1M)][zonecfg.1m] man page.\n\n* **`destination`** (string, REQUIRED) Destination of mount point: path inside container.\n    * Linux: This value SHOULD be an absolute path.\n      For compatibility with old tools and configurations, it MAY be a relative path, in which case it MUST be interpreted as relative to \"/\".\n      Relative paths are **deprecated**.\n    * Windows: This value MUST be an absolute path.\n      One mount destination MUST NOT be nested within another mount (e.g., c:\\\\foo and c:\\\\foo\\\\bar).\n    * Solaris: This value MUST be an absolute path.\n      Corresponds to \"dir\" of the fs resource in [zonecfg(1M)][zonecfg.1m].\n    * For all other platforms: This value MUST be an absolute path.\n* **`source`** (string, OPTIONAL) A device name, but can also be a file or directory name for bind mounts or a dummy.\n    Path values for bind mounts are either absolute or relative to the bundle.\n    A mount is a bind mount if it has either `bind` or `rbind` in the options.\n    * Windows: a local directory on the filesystem of the container host. UNC paths and mapped drives are not supported.\n    * Solaris: corresponds to \"special\" of the fs resource in [zonecfg(1M)][zonecfg.1m].\n* **`options`** (array of strings, OPTIONAL) Mount options of the filesystem to be used.\n    * Linux: See [Linux mount options](#configLinuxMountOptions) below.\n    * Solaris: corresponds to \"options\" of the fs resource in [zonecfg(1M)][zonecfg.1m].\n    * Windows: runtimes MUST support `ro`, mounting the filesystem read-only when `ro` is given.\n\n### <a name=\"configLinuxMountOptions\" />Linux mount options\n\nRuntimes MUST/SHOULD/MAY implement the following option strings for Linux:\n\n Option name      | Requirement | Description\n------------------|-------------|-----------------------------------------------------\n `async`          | MUST        | [^1]\n `atime`          | MUST        | [^1]\n `bind`           | MUST        | Bind mount [^2]\n `defaults`       | MUST        | [^1]\n `dev`            | MUST        | [^1]\n `diratime`       | MUST        | [^1]\n `dirsync`        | MUST        | [^1]\n `exec`           | MUST        | [^1]\n `iversion`       | MUST        | [^1]\n `lazytime`       | MUST        | [^1]\n `loud`           | MUST        | [^1]\n `mand`           | MAY         | [^1] (Deprecated in kernel 5.15, util-linux 2.38)\n `noatime`        | MUST        | [^1]\n `nodev`          | MUST        | [^1]\n `nodiratime`     | MUST        | [^1]\n `noexec`         | MUST        | [^1]\n `noiversion`     | MUST        | [^1]\n `nolazytime`     | MUST        | [^1]\n `nomand`         | MAY         | [^1]\n `norelatime`     | MUST        | [^1]\n `nostrictatime`  | MUST        | [^1]\n `nosuid`         | MUST        | [^1]\n `nosymfollow`    | SHOULD      | [^1] (Introduced in kernel 5.10, util-linux 2.38)\n `private`        | MUST        | Bind mount propagation [^2]\n `ratime`         | SHOULD      | Recursive `atime` [^3]\n `rbind`          | MUST        | Recursive bind mount [^2]\n `rdev`           | SHOULD      | Recursive `dev` [^3]\n `rdiratime`      | SHOULD      | Recursive `diratime` [^3]\n `relatime`       | MUST        | [^1]\n `remount`        | MUST        | [^1]\n `rexec`          | SHOULD      | Recursive `dev` [^3]\n `rnoatime`       | SHOULD      | Recursive `noatime` [^3]\n `rnodiratime`    | SHOULD      | Recursive `nodiratime` [^3]\n `rnoexec`        | SHOULD      | Recursive `noexec` [^3]\n `rnorelatime`    | SHOULD      | Recursive `norelatime` [^3]\n `rnostrictatime` | SHOULD      | Recursive `nostrictatime` [^3]\n `rnosuid`        | SHOULD      | Recursive `nosuid` [^3]\n `rnosymfollow`   | SHOULD      | Recursive `nosymfollow` [^3]\n `ro`             | MUST        | [^1]\n `rprivate`       | MUST        | Bind mount propagation [^2]\n `rrelatime  `    | SHOULD      | Recursive `relatime` [^3]\n `rro`            | SHOULD      | Recursive `ro` [^3]\n `rrw`            | SHOULD      | Recursive `rw` [^3]\n `rshared`        | MUST        | Bind mount propagation [^2]\n `rslave`         | MUST        | Bind mount propagation [^2]\n `rstrictatime`   | SHOULD      | Recursive `strictatime` [^3]\n `rsuid`          | SHOULD      | Recursive `suid` [^3]\n `rsymfollow`     | SHOULD      | Recursive `symfollow` [^3]\n `runbindable`    | MUST        | Bind mount propagation [^2]\n `rw`             | MUST        | [^1]\n `shared`         | MUST        | [^1]\n `silent`         | MUST        | [^1]\n `slave`          | MUST        | Bind mount propagation [^2]\n `strictatime`    | MUST        | [^1]\n `suid`           | MUST        | [^1]\n `symfollow`      | SHOULD      | Opposite of `nosymfollow`\n `sync`           | MUST        | [^1]\n `tmpcopyup`      | MAY         | copy up the contents to a tmpfs\n `unbindable`     | MUST        | Bind mount propagation [^2]\n `idmap`          | SHOULD      | Indicates that the mount MUST have an idmapping applied. This option SHOULD NOT be passed to the underlying [`mount(2)`][mount.2] call. If `uidMappings` or `gidMappings` are specified for the mount, the runtime MUST use those values for the mount's mapping. If they are not specified, the runtime MAY use the container's user namespace mapping, otherwise an [error MUST be returned](runtime.md#errors).  If there are no `uidMappings` and `gidMappings` specified and the container isn't using user namespaces, an [error MUST be returned](runtime.md#errors). This SHOULD be implemented using [`mount_setattr(MOUNT_ATTR_IDMAP)`][mount_setattr.2], available since Linux 5.12.\n `ridmap`         | SHOULD      | Indicates that the mount MUST have an idmapping applied, and the mapping is applied recursively [^3]. This option SHOULD NOT be passed to the underlying [`mount(2)`][mount.2] call. If `uidMappings` or `gidMappings` are specified for the mount, the runtime MUST use those values for the mount's mapping. If they are not specified, the runtime MAY use the container's user namespace mapping, otherwise an [error MUST be returned](runtime.md#errors).  If there are no `uidMappings` and `gidMappings` specified and the container isn't using user namespaces, an [error MUST be returned](runtime.md#errors). This SHOULD be implemented using [`mount_setattr(MOUNT_ATTR_IDMAP)`][mount_setattr.2], available since Linux 5.12.\n\n[^1]: Corresponds to [`mount(8)` (filesystem-independent)][mount.8-filesystem-independent].\n[^2]: Corresponds to [bind mounts and shared subtrees][mount-bind].\n[^3]: These `AT_RECURSIVE` options need kernel 5.12 or later. See [`mount_setattr(2)`][mount_setattr.2]\n\nThe \"MUST\" options correspond to [`mount(8)`][mount.8].\n\nRuntimes MAY also implement custom option strings that are not listed in the table above.\nIf a custom option string is already recognized by [`mount(8)`][mount.8], the runtime SHOULD follow the behavior of [`mount(8)`][mount.8].\n\nRuntimes SHOULD treat unknown options as [filesystem-specific ones][mount.8-filesystem-specific])\nand pass those as a comma-separated string to the fifth (`const void *data`) argument of [`mount(2)`][mount.2].\n\n### Example (Windows)\n\n```json\n\"mounts\": [\n    {\n        \"destination\": \"C:\\\\folder-inside-container\",\n        \"source\": \"C:\\\\folder-on-host\",\n        \"options\": [\"ro\"]\n    }\n]\n```\n\n### <a name=\"configPOSIXMounts\" />POSIX-platform Mounts\n\nFor POSIX platforms the `mounts` structure has the following fields:\n\n* **`type`** (string, OPTIONAL) The type of the filesystem to be mounted.\n    * Linux: filesystem types supported by the kernel as listed in */proc/filesystems* (e.g., \"minix\", \"ext2\", \"ext3\", \"jfs\", \"xfs\", \"reiserfs\", \"msdos\", \"proc\", \"nfs\", \"iso9660\"). For bind mounts (when `options` include either `bind` or `rbind`), the type is a dummy, often \"none\" (not listed in */proc/filesystems*).\n    * Solaris: corresponds to \"type\" of the fs resource in [zonecfg(1M)][zonecfg.1m].\n* **`uidMappings`** (array of type LinuxIDMapping, OPTIONAL) The mapping to convert UIDs from the source file system to the destination mount point.\n  This SHOULD be implemented using [`mount_setattr(MOUNT_ATTR_IDMAP)`][mount_setattr.2], available since Linux 5.12.\n  If specified, the `options` field of the `mounts` structure SHOULD contain either `idmap` or `ridmap` to specify whether the mapping should be applied recursively for `rbind` mounts, as well as to ensure that older runtimes will not silently ignore this field.\n  The format is the same as [user namespace mappings](config-linux.md#user-namespace-mappings).\n  If specified, it MUST be specified along with `gidMappings`.\n* **`gidMappings`** (array of type LinuxIDMapping, OPTIONAL) The mapping to convert GIDs from the source file system to the destination mount point.\n  This SHOULD be implemented using [`mount_setattr(MOUNT_ATTR_IDMAP)`][mount_setattr.2], available since Linux 5.12.\n  If specified, the `options` field of the `mounts` structure SHOULD contain either `idmap` or `ridmap` to specify whether the mapping should be applied recursively for `rbind` mounts, as well as to ensure that older runtimes will not silently ignore this field.\n  For more details see `uidMappings`.\n  If specified, it MUST be specified along with `uidMappings`.\n\n\n### Example (Linux)\n\n```json\n\"mounts\": [\n    {\n        \"destination\": \"/tmp\",\n        \"type\": \"tmpfs\",\n        \"source\": \"tmpfs\",\n        \"options\": [\"nosuid\",\"strictatime\",\"mode=755\",\"size=65536k\"]\n    },\n    {\n        \"destination\": \"/data\",\n        \"type\": \"none\",\n        \"source\": \"/volumes/testing\",\n        \"options\": [\"rbind\",\"rw\"]\n    }\n]\n```\n\n### Example (Solaris)\n\n```json\n\"mounts\": [\n    {\n        \"destination\": \"/opt/local\",\n        \"type\": \"lofs\",\n        \"source\": \"/usr/local\",\n        \"options\": [\"ro\",\"nodevices\"]\n    },\n    {\n        \"destination\": \"/opt/sfw\",\n        \"type\": \"lofs\",\n        \"source\": \"/opt/sfw\"\n    }\n]\n```\n\n## <a name=\"configProcess\" />Process\n\n**`process`** (object, OPTIONAL) specifies the container process.\nThis property is REQUIRED when [`start`](runtime.md#start) is called.\n\n* **`terminal`** (bool, OPTIONAL) specifies whether a terminal is attached to the process, defaults to false.\n    As an example, if set to true on Linux a pseudoterminal pair is allocated for the process and the pseudoterminal pty is duplicated on the process's [standard streams][stdin.3].\n* **`consoleSize`** (object, OPTIONAL) specifies the console size in characters of the terminal.\n    Runtimes MUST ignore `consoleSize` if `terminal` is `false` or unset.\n    * **`height`** (uint, REQUIRED)\n    * **`width`** (uint, REQUIRED)\n* **`cwd`** (string, REQUIRED) is the working directory that will be set for the executable.\n    This value MUST be an absolute path.\n* **`env`** (array of strings, OPTIONAL) with the same semantics as [IEEE Std 1003.1-2008's `environ`][ieee-1003.1-2008-xbd-c8.1].\n* **`args`** (array of strings, OPTIONAL) with similar semantics to [IEEE Std 1003.1-2008 `execvp`'s *argv*][ieee-1003.1-2008-functions-exec].\n    This specification extends the IEEE standard in that at least one entry is REQUIRED (non-Windows), and that entry is used with the same semantics as `execvp`'s *file*. This field is OPTIONAL on Windows, and `commandLine` is REQUIRED if this field is omitted.\n* **`commandLine`** (string, OPTIONAL) specifies the full command line to be executed on Windows.\n    This is the preferred means of supplying the command line on Windows. If omitted, the runtime will fall back to escaping and concatenating fields from `args` before making the system call into Windows.\n\n\n### <a name=\"configPOSIXProcess\" />POSIX process\n\nFor systems that support POSIX rlimits (for example Linux and Solaris), the `process` object supports the following process-specific properties:\n\n* **`rlimits`** (array of objects, OPTIONAL) allows setting resource limits for the process.\n    Each entry has the following structure:\n\n    * **`type`** (string, REQUIRED) the platform resource being limited.\n        * Linux: valid values are defined in the [`getrlimit(2)`][getrlimit.2] man page, such as `RLIMIT_MSGQUEUE`.\n        * Solaris: valid values are defined in the [`getrlimit(3)`][getrlimit.3] man page, such as `RLIMIT_CORE`.\n\n        The runtime MUST [generate an error](runtime.md#errors) for any values which cannot be mapped to a relevant kernel interface.\n        For each entry in `rlimits`, a [`getrlimit(3)`][getrlimit.3] on `type` MUST succeed.\n        For the following properties, `rlim` refers to the status returned by the `getrlimit(3)` call.\n\n    * **`soft`** (uint64, REQUIRED) the value of the limit enforced for the corresponding resource.\n        `rlim.rlim_cur` MUST match the configured value.\n    * **`hard`** (uint64, REQUIRED) the ceiling for the soft limit that could be set by an unprivileged process.\n        `rlim.rlim_max` MUST match the configured value.\n        Only a privileged process (e.g. one with the `CAP_SYS_RESOURCE` capability) can raise a hard limit.\n\n    If `rlimits` contains duplicated entries with same `type`, the runtime MUST [generate an error](runtime.md#errors).\n\n### <a name=\"configLinuxProcess\" />Linux Process\n\nFor Linux-based systems, the `process` object supports the following process-specific properties.\n\n* **`apparmorProfile`** (string, OPTIONAL) specifies the name of the AppArmor profile for the process.\n    For more information about AppArmor, see [AppArmor documentation][apparmor].\n* **`capabilities`** (object, OPTIONAL) is an object containing arrays that specifies the sets of capabilities for the process.\n    Valid values are defined in the [capabilities(7)][capabilities.7] man page, such as `CAP_CHOWN`.\n    Any value which cannot be mapped to a relevant kernel interface, or cannot\n    be granted otherwise MUST be [logged as a warning](runtime.md#warnings) by\n    the runtime. Runtimes SHOULD NOT fail if the container configuration requests\n    capabilities that cannot be granted, for example, if the runtime operates in\n    a restricted environment with a limited set of capabilities.\n    `capabilities` contains the following properties:\n\n    * **`effective`** (array of strings, OPTIONAL) the `effective` field is an array of effective capabilities that are kept for the process.\n    * **`bounding`** (array of strings, OPTIONAL) the `bounding` field is an array of bounding capabilities that are kept for the process.\n    * **`inheritable`** (array of strings, OPTIONAL) the `inheritable` field is an array of inheritable capabilities that are kept for the process.\n    * **`permitted`** (array of strings, OPTIONAL) the `permitted` field is an array of permitted capabilities that are kept for the process.\n    * **`ambient`** (array of strings, OPTIONAL) the `ambient` field is an array of ambient capabilities that are kept for the process.\n* **`noNewPrivileges`** (bool, OPTIONAL) setting `noNewPrivileges` to true prevents the process from gaining additional privileges.\n    As an example, the [`no_new_privs`][no-new-privs] article in the kernel documentation has information on how this is achieved using a `prctl` system call on Linux.\n* **`oomScoreAdj`** *(int, OPTIONAL)* adjusts the oom-killer score in `[pid]/oom_score_adj` for the process's `[pid]` in a [proc pseudo-filesystem][proc_2].\n    If `oomScoreAdj` is set, the runtime MUST set `oom_score_adj` to the given value.\n    If `oomScoreAdj` is not set, the runtime MUST NOT change the value of `oom_score_adj`.\n\n    This is a per-process setting, where as [`disableOOMKiller`](config-linux.md#memory) is scoped for a memory cgroup.\n    For more information on how these two settings work together, see [the memory cgroup documentation section 10. OOM Contol][cgroup-v1-memory_2].\n* **`scheduler`** (object, OPTIONAL) is an object describing the scheduler properties for the process.  The `scheduler` contains the following properties:\n\n    * **`policy`** (string, REQUIRED) represents the scheduling policy.  A valid list of values is:\n\n        * `SCHED_OTHER`\n        * `SCHED_FIFO`\n        * `SCHED_RR`\n        * `SCHED_BATCH`\n        * `SCHED_ISO`\n        * `SCHED_IDLE`\n        * `SCHED_DEADLINE`\n\n    * **`nice`** (int32, OPTIONAL) is the nice value for the process, affecting its priority. A lower nice value corresponds to a higher priority. If not set, the runtime must use the value 0.\n    * **`priority`** (int32, OPTIONAL) represents the static priority of the process, used by real-time policies like SCHED_FIFO and SCHED_RR. If not set, the runtime must use the value 0.\n    * **`flags`** (array of strings, OPTIONAL) is an array of strings representing scheduling flags.  A valid list of values is:\n\n        * `SCHED_FLAG_RESET_ON_FORK`\n        * `SCHED_FLAG_RECLAIM`\n        * `SCHED_FLAG_DL_OVERRUN`\n        * `SCHED_FLAG_KEEP_POLICY`\n        * `SCHED_FLAG_KEEP_PARAMS`\n        * `SCHED_FLAG_UTIL_CLAMP_MIN`\n        * `SCHED_FLAG_UTIL_CLAMP_MAX`\n\n    * **`runtime`** (uint64, OPTIONAL) represents the amount of time in nanoseconds during which the process is allowed to run in a given period, used by the deadline scheduler. If not set, the runtime must use the value 0.\n    * **`deadline`** (uint64, OPTIONAL) represents the absolute deadline for the process to complete its execution, used by the deadline scheduler. If not set, the runtime must use the value 0.\n    * **`period`** (uint64, OPTIONAL) represents the length of the period in nanoseconds used for determining the process runtime, used by the deadline scheduler. If not set, the runtime must use the value 0.\n* **`selinuxLabel`** (string, OPTIONAL) specifies the SELinux label for the process.\n    For more information about SELinux, see  [SELinux documentation][selinux].\n* **`ioPriority`** (object, OPTIONAL) configures the I/O priority settings for the container's processes within the process group.\n    The I/O priority settings will be automatically applied to the entire process group, affecting all processes within the container.\n    The following properties are available:\n\n    * **`class`** (string, REQUIRED) specifies the I/O scheduling class. Possible values are `IOPRIO_CLASS_RT`, `IOPRIO_CLASS_BE`, and `IOPRIO_CLASS_IDLE`.\n    * **`priority`** (int, REQUIRED) specifies the priority level within the class. The value should be an integer ranging from 0 (highest) to 7 (lowest).\n* **`execCPUAffinity`** (object, OPTIONAL) specifies CPU affinity used to execute the process.\n    This setting is not applicable to the container's init process.\n    The following properties are available:\n    * **`initial`** (string, OPTIONAL) is a list of CPUs a runtime parent\n      process to be run on initially, before the transition to container's\n      cgroup. This is a a comma-separated list, with dashes to represent\n      ranges. For example, `0-3,7` represents CPUs 0,1,2,3, and 7.\n    * **`final`** (string, OPTIONAL) is a list of CPUs the process will be run\n      on after the transition to container's cgroup. The format is the same as\n      for `initial`. If omitted or empty, runtime SHOULD NOT change process'\n      CPU affinity after the process is moved to container's cgroup, and the\n      final affinity is determined by the Linux kernel.\n\n### <a name=\"configUser\" />User\n\nThe user for the process is a platform-specific structure that allows specific control over which user the process runs as.\n\n#### <a name=\"configPOSIXUser\" />POSIX-platform User\n\nFor POSIX platforms the `user` structure has the following fields:\n\n* **`uid`** (int, REQUIRED) specifies the user ID in the [container namespace](glossary.md#container-namespace).\n* **`gid`** (int, REQUIRED) specifies the group ID in the [container namespace](glossary.md#container-namespace).\n* **`umask`** (int, OPTIONAL) specifies the [umask][umask_2] of the user. If unspecified, the umask should not be changed from the calling process' umask.\n* **`additionalGids`** (array of ints, OPTIONAL) specifies additional group IDs in the [container namespace](glossary.md#container-namespace) to be added to the process.\n\n_Note: symbolic name for uid and gid, such as uname and gname respectively, are left to upper levels to derive (i.e. `/etc/passwd` parsing, NSS, etc)_\n\n### Example (Linux)\n\n```json\n\"process\": {\n    \"terminal\": true,\n    \"consoleSize\": {\n        \"height\": 25,\n        \"width\": 80\n    },\n    \"user\": {\n        \"uid\": 1,\n        \"gid\": 1,\n        \"umask\": 63,\n        \"additionalGids\": [5, 6]\n    },\n    \"env\": [\n        \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n        \"TERM=xterm\"\n    ],\n    \"cwd\": \"/root\",\n    \"args\": [\n        \"sh\"\n    ],\n    \"apparmorProfile\": \"acme_secure_profile\",\n    \"selinuxLabel\": \"system_u:system_r:svirt_lxc_net_t:s0:c124,c675\",\n    \"ioPriority\": {\n        \"class\": \"IOPRIO_CLASS_IDLE\",\n        \"priority\": 4\n    },\n    \"noNewPrivileges\": true,\n    \"capabilities\": {\n        \"bounding\": [\n            \"CAP_AUDIT_WRITE\",\n            \"CAP_KILL\",\n            \"CAP_NET_BIND_SERVICE\"\n        ],\n       \"permitted\": [\n            \"CAP_AUDIT_WRITE\",\n            \"CAP_KILL\",\n            \"CAP_NET_BIND_SERVICE\"\n        ],\n       \"inheritable\": [\n            \"CAP_AUDIT_WRITE\",\n            \"CAP_KILL\",\n            \"CAP_NET_BIND_SERVICE\"\n        ],\n        \"effective\": [\n            \"CAP_AUDIT_WRITE\",\n            \"CAP_KILL\"\n        ],\n        \"ambient\": [\n            \"CAP_NET_BIND_SERVICE\"\n        ]\n    },\n    \"rlimits\": [\n        {\n            \"type\": \"RLIMIT_NOFILE\",\n            \"hard\": 1024,\n            \"soft\": 1024\n        }\n    ],\n    \"execCPUAffinity\": {\n        \"initial\": \"7\",\n        \"final\": \"0-3,7\"\n    }\n}\n```\n### Example (Solaris)\n\n```json\n\"process\": {\n    \"terminal\": true,\n    \"consoleSize\": {\n        \"height\": 25,\n        \"width\": 80\n    },\n    \"user\": {\n        \"uid\": 1,\n        \"gid\": 1,\n        \"umask\": 7,\n        \"additionalGids\": [2, 8]\n    },\n    \"env\": [\n        \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n        \"TERM=xterm\"\n    ],\n    \"cwd\": \"/root\",\n    \"args\": [\n        \"/usr/bin/bash\"\n    ]\n}\n```\n\n#### <a name=\"configWindowsUser\" />Windows User\n\nFor Windows based systems the user structure has the following fields:\n\n* **`username`** (string, OPTIONAL) specifies the user name for the process.\n\n### Example (Windows)\n\n```json\n\"process\": {\n    \"terminal\": true,\n    \"user\": {\n        \"username\": \"containeradministrator\"\n    },\n    \"env\": [\n        \"VARIABLE=1\"\n    ],\n    \"cwd\": \"c:\\\\foo\",\n    \"args\": [\n        \"someapp.exe\",\n    ]\n}\n```\n\n\n## <a name=\"configHostname\" />Hostname\n\n* **`hostname`** (string, OPTIONAL) specifies the container's hostname as seen by processes running inside the container.\n    On Linux, for example, this will change the hostname in the [container](glossary.md#container-namespace) [UTS namespace][uts-namespace.7].\n    Depending on your [namespace configuration](config-linux.md#namespaces), the container UTS namespace may be the [runtime](glossary.md#runtime-namespace) [UTS namespace][uts-namespace.7].\n\n### Example\n\n```json\n\"hostname\": \"mrsdalloway\"\n```\n\n## <a name=\"configDomainname\" />Domainname\n\n* **`domainname`** (string, OPTIONAL) specifies the container's domainname as seen by processes running inside the container.\n    On Linux, for example, this will change the domainname in the [container](glossary.md#container-namespace) [UTS namespace][uts-namespace.7].\n    Depending on your [namespace configuration](config-linux.md#namespaces), the container UTS namespace may be the [runtime](glossary.md#runtime-namespace) [UTS namespace][uts-namespace.7].\n\n### Example\n\n```json\n\"domainname\": \"foobarbaz.test\"\n```\n\n## <a name=\"configPlatformSpecificConfiguration\" />Platform-specific configuration\n\n* **`linux`** (object, OPTIONAL) [Linux-specific configuration](config-linux.md).\n    This MAY be set if the target platform of this spec is `linux`.\n* **`windows`** (object, OPTIONAL) [Windows-specific configuration](config-windows.md).\n    This MUST be set if the target platform of this spec is `windows`.\n* **`solaris`** (object, OPTIONAL) [Solaris-specific configuration](config-solaris.md).\n    This MAY be set if the target platform of this spec is `solaris`.\n* **`vm`** (object, OPTIONAL) [Virtual-machine-specific configuration](config-vm.md).\n    This MAY be set if the target platform and architecture of this spec support hardware virtualization.\n* **`zos`** (object, OPTIONAL) [z/OS-specific configuration](config-zos.md).\n    This MAY be set if the target platform of this spec is `zos`.\n\n### Example (Linux)\n\n```json\n{\n    \"linux\": {\n        \"namespaces\": [\n            {\n                \"type\": \"pid\"\n            }\n        ]\n    }\n}\n```\n\n## <a name=\"configHooks\" />POSIX-platform Hooks\n\nFor POSIX platforms, the configuration structure supports `hooks` for configuring custom actions related to the [lifecycle](runtime.md#lifecycle) of the container.\n\n* **`hooks`** (object, OPTIONAL) MAY contain any of the following properties:\n    * **`prestart`** (array of objects, OPTIONAL, **DEPRECATED**) is an array of [`prestart` hooks](#prestart).\n        * Entries in the array contain the following properties:\n            * **`path`** (string, REQUIRED) with similar semantics to [IEEE Std 1003.1-2008 `execv`'s *path*][ieee-1003.1-2008-functions-exec].\n                This specification extends the IEEE standard in that **`path`** MUST be absolute.\n            * **`args`** (array of strings, OPTIONAL) with the same semantics as [IEEE Std 1003.1-2008 `execv`'s *argv*][ieee-1003.1-2008-functions-exec].\n            * **`env`** (array of strings, OPTIONAL) with the same semantics as [IEEE Std 1003.1-2008's `environ`][ieee-1003.1-2008-xbd-c8.1].\n            * **`timeout`** (int, OPTIONAL) is the number of seconds before aborting the hook.\n                If set, `timeout` MUST be greater than zero.\n        * The value of `path` MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\n        * The `prestart` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n    * **`createRuntime`** (array of objects, OPTIONAL) is an array of [`createRuntime` hooks](#createRuntime-hooks).\n        * Entries in the array contain the following properties (the entries are identical to the entries in the deprecated `prestart` hooks):\n            * **`path`** (string, REQUIRED) with similar semantics to [IEEE Std 1003.1-2008 `execv`'s *path*][ieee-1003.1-2008-functions-exec].\n                This specification extends the IEEE standard in that **`path`** MUST be absolute.\n            * **`args`** (array of strings, OPTIONAL) with the same semantics as [IEEE Std 1003.1-2008 `execv`'s *argv*][ieee-1003.1-2008-functions-exec].\n            * **`env`** (array of strings, OPTIONAL) with the same semantics as [IEEE Std 1003.1-2008's `environ`][ieee-1003.1-2008-xbd-c8.1].\n            * **`timeout`** (int, OPTIONAL) is the number of seconds before aborting the hook.\n                If set, `timeout` MUST be greater than zero.\n        * The value of `path` MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\n        * The `createRuntime` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n    * **`createContainer`** (array of objects, OPTIONAL) is an array of [`createContainer` hooks](#createContainer-hooks).\n        * Entries in the array have the same schema as `createRuntime` entries.\n        * The value of `path` MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\n        * The `createContainer` hooks MUST be executed in the [container namespace](glossary.md#container-namespace).\n    * **`startContainer`** (array of objects, OPTIONAL) is an array of [`startContainer` hooks](#startContainer-hooks).\n        * Entries in the array have the same schema as `createRuntime` entries.\n        * The value of `path` MUST resolve in the [container namespace](glossary.md#container-namespace).\n        * The `startContainer` hooks MUST be executed in the [container namespace](glossary.md#container-namespace).\n    * **`poststart`** (array of objects, OPTIONAL) is an array of [`poststart` hooks](#poststart).\n        * Entries in the array have the same schema as `createRuntime` entries.\n        * The value of `path` MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\n        * The `poststart` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n    * **`poststop`** (array of objects, OPTIONAL) is an array of [`poststop` hooks](#poststop).\n        * Entries in the array have the same schema as `createRuntime` entries.\n        * The value of `path` MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\n        * The `poststop` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n\nHooks allow users to specify programs to run before or after various lifecycle events.\nHooks MUST be called in the listed order.\nThe [state](runtime.md#state) of the container MUST be passed to hooks over stdin so that they may do work appropriate to the current state of the container.\n\n### <a name=\"configHooksPrestart\" />Prestart\n\nThe `prestart` hooks MUST be called as part of the [`create`](runtime.md#create) operation after the runtime environment has been created (according to the configuration in config.json) but before the `pivot_root` or any equivalent operation has been executed.\nOn Linux, for example, they are called after the container namespaces are created, so they provide an opportunity to customize the container (e.g. the network namespace could be specified in this hook).\nThe `prestart` hooks MUST be called before the `createRuntime` hooks.\n\nNote: `prestart` hooks were deprecated in favor of `createRuntime`, `createContainer` and `startContainer` hooks, which allow more granular hook control during the create and start phase.\n\nThe `prestart` hooks' path MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\nThe `prestart` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n\n### <a name=\"configHooksCreateRuntime\" />CreateRuntime Hooks\n\nThe `createRuntime` hooks MUST be called as part of the [`create`](runtime.md#create) operation after the runtime environment has been created (according to the configuration in config.json) but before the `pivot_root` or any equivalent operation has been executed.\n\nThe `createRuntime` hooks' path MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\nThe `createRuntime` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n\nOn Linux, for example, they are called after the container namespaces are created, so they provide an opportunity to customize the container (e.g. the network namespace could be specified in this hook).\n\nThe definition of `createRuntime` hooks is currently underspecified and hooks authors, should only expect from the runtime that the mount namespace have been created and the mount operations performed. Other operations such as cgroups and SELinux/AppArmor labels might not have been performed by the runtime.\n\n### <a name=\"configHooksCreateContainer\" />CreateContainer Hooks\n\nThe `createContainer` hooks MUST be called as part of the [`create`](runtime.md#create) operation after the runtime environment has been created (according to the configuration in config.json) but before the `pivot_root` or any equivalent operation has been executed.\nThe `createContainer` hooks MUST be called after the `createRuntime` hooks.\n\nThe `createContainer` hooks' path MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\nThe `createContainer` hooks MUST be executed in the [container namespace](glossary.md#container-namespace).\n\nFor example, on Linux this would happen before the `pivot_root` operation is executed but after the mount namespace was created and setup.\n\nThe definition of `createContainer` hooks is currently underspecified and hooks authors, should only expect from the runtime that the mount namespace and different mounts will be setup. Other operations such as cgroups and SELinux/AppArmor labels might not have been performed by the runtime.\n\n### <a name=\"configHooksStartContainer\" />StartContainer Hooks\n\nThe `startContainer` hooks MUST be called [before the user-specified process is executed](runtime.md#lifecycle) as part of the [`start`](runtime.md#start) operation.\nThis hook can be used to execute some operations in the container, for example running the `ldconfig` binary on linux before the container process is spawned.\n\nThe `startContainer` hooks' path MUST resolve in the [container namespace](glossary.md#container-namespace).\nThe `startContainer` hooks MUST be executed in the [container namespace](glossary.md#container-namespace).\n\n### <a name=\"configHooksPoststart\" />Poststart\n\nThe `poststart` hooks MUST be called [after the user-specified process is executed](runtime.md#lifecycle) but before the [`start`](runtime.md#start) operation returns.\nFor example, this hook can notify the user that the container process is spawned.\n\nThe `poststart` hooks' path MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\nThe `poststart` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n\n### <a name=\"configHooksPoststop\" />Poststop\n\nThe `poststop` hooks MUST be called [after the container is deleted](runtime.md#lifecycle) but before the [`delete`](runtime.md#delete) operation returns.\nCleanup or debugging functions are examples of such a hook.\n\nThe `poststop` hooks' path MUST resolve in the [runtime namespace](glossary.md#runtime-namespace).\nThe `poststop` hooks MUST be executed in the [runtime namespace](glossary.md#runtime-namespace).\n\n### Summary\n\nSee the below table for a summary of hooks and when they are called:\n\n|           Name          | Namespace |                                                            When                                                                    |\n| ----------------------- | --------- | -----------------------------------------------------------------------------------------------------------------------------------|\n| `prestart` (Deprecated) | runtime   | After the start  operation is called but before the user-specified program command is executed.                                    |\n| `createRuntime`         | runtime   | During the create operation, after the runtime environment has been created and before the pivot root or any equivalent operation. |\n| `createContainer`       | container | During the create operation, after the runtime environment has been created and before the pivot root or any equivalent operation. |\n| `startContainer`        | container | After the start operation is called but before the user-specified program command is executed.                                     |\n| `poststart`             | runtime   | After the user-specified process is executed but before the start operation returns.                                               |\n| `poststop`              | runtime   | After the container is deleted but before the delete operation returns.                                                            |\n\n### Example\n\n```json\n\"hooks\": {\n    \"prestart\": [\n        {\n            \"path\": \"/usr/bin/fix-mounts\",\n            \"args\": [\"fix-mounts\", \"arg1\", \"arg2\"],\n            \"env\":  [ \"key1=value1\"]\n        },\n        {\n            \"path\": \"/usr/bin/setup-network\"\n        }\n    ],\n    \"createRuntime\": [\n        {\n            \"path\": \"/usr/bin/fix-mounts\",\n            \"args\": [\"fix-mounts\", \"arg1\", \"arg2\"],\n            \"env\":  [ \"key1=value1\"]\n        },\n        {\n            \"path\": \"/usr/bin/setup-network\"\n        }\n    ],\n    \"createContainer\": [\n        {\n            \"path\": \"/usr/bin/mount-hook\",\n            \"args\": [\"-mount\", \"arg1\", \"arg2\"],\n            \"env\":  [ \"key1=value1\"]\n        }\n    ],\n    \"startContainer\": [\n        {\n            \"path\": \"/usr/bin/refresh-ldcache\"\n        }\n    ],\n    \"poststart\": [\n        {\n            \"path\": \"/usr/bin/notify-start\",\n            \"timeout\": 5\n        }\n    ],\n    \"poststop\": [\n        {\n            \"path\": \"/usr/sbin/cleanup.sh\",\n            \"args\": [\"cleanup.sh\", \"-f\"]\n        }\n    ]\n}\n```\n\n## <a name=\"configAnnotations\" />Annotations\n\n**`annotations`** (object, OPTIONAL) contains arbitrary metadata for the container.\nThis information MAY be structured or unstructured.\nAnnotations MUST be a key-value map.\nIf there are no annotations then this property MAY either be absent or an empty map.\n\nKeys MUST be strings.\nKeys MUST NOT be an empty string.\nKeys SHOULD be named using a reverse domain notation - e.g. `com.example.myKey`.\n\nThe `org.opencontainers` namespace for keys is reserved for use by this specification, annotations using keys in this namespace MUST be as described in this section.\nThe following keys in the `org.opencontainers` namespaces MAY be used:\n|                   Key                   | Definition                                                         |\n| --------------------------------------- | -----------------------------------------------------------------------------------------------------------------------------------|\n| `org.opencontainers.image.os`           | Indicates the operating system the container image was built to run on. The annotation value MUST have a valid value for the `os` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.os.version`   | Indicates the operating system version targeted by the container image. The annotation value MUST have a valid value for the `os.version` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.os.features`  | Indicates mandatory operating system features required by the container image. The annotation value MUST have a valid value for the `os.features` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.architecture` | Indicates the architecture that binaries in the container image are built to run on. The annotation value MUST have a valid value for the `architecture` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.variant`      | Indicates the variant of the architecture that binaries in the container image are built to run on. The annotation value MUST have a valid value for the `variant` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.author`       | Indicates the author of the container image. The annotation value MUST have a valid value for the `author` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.created`      | Indicates the date and time when the container image was created. The annotation value MUST have a valid value for the `created` property as defined in [the OCIimage specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n| `org.opencontainers.image.stopSignal`   | Indicates signal that SHOULD be sent by the container runtimes to [kill the container](runtime.md#kill). The annotation value MUST have a valid value for the `config.StopSignal` property as defined in [the OCI image specification][oci-image-config-properties]. This annotation SHOULD only be used in accordance with the [OCI image specification's runtime conversion specification][oci-image-conversion]. |\n\nAll other keys in the `org.opencontainers` namespace not specified in this above table are reserved and MUST NOT be used by subsequent specifications.\nRuntimes MUST handle unknown annotation keys like any other [unknown property](#extensibility).\n\nValues MUST be strings.\nValues MAY be an empty string.\n\n```json\n\"annotations\": {\n    \"com.example.gpu-cores\": \"2\"\n}\n```\n\n## <a name=\"configExtensibility\" />Extensibility\n\nRuntimes MAY [log](runtime.md#warnings) unknown properties but MUST otherwise ignore them.\nThat includes not [generating errors](runtime.md#errors) if they encounter an unknown property.\n\n## Valid values\n\nRuntimes MUST generate an error when invalid or unsupported values are encountered.\nUnless support for a valid value is explicitly required, runtimes MAY choose which subset of the valid values it will support.\n\n## Configuration Schema Example\n\nHere is a full example `config.json` for reference.\n\n```json\n{\n    \"ociVersion\": \"1.0.1\",\n    \"process\": {\n        \"terminal\": true,\n        \"user\": {\n            \"uid\": 1,\n            \"gid\": 1,\n            \"additionalGids\": [\n                5,\n                6\n            ]\n        },\n        \"args\": [\n            \"sh\"\n        ],\n        \"env\": [\n            \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n            \"TERM=xterm\"\n        ],\n        \"cwd\": \"/\",\n        \"capabilities\": {\n            \"bounding\": [\n                \"CAP_AUDIT_WRITE\",\n                \"CAP_KILL\",\n                \"CAP_NET_BIND_SERVICE\"\n            ],\n            \"permitted\": [\n                \"CAP_AUDIT_WRITE\",\n                \"CAP_KILL\",\n                \"CAP_NET_BIND_SERVICE\"\n            ],\n            \"inheritable\": [\n                \"CAP_AUDIT_WRITE\",\n                \"CAP_KILL\",\n                \"CAP_NET_BIND_SERVICE\"\n            ],\n            \"effective\": [\n                \"CAP_AUDIT_WRITE\",\n                \"CAP_KILL\"\n            ],\n            \"ambient\": [\n                \"CAP_NET_BIND_SERVICE\"\n            ]\n        },\n        \"rlimits\": [\n            {\n                \"type\": \"RLIMIT_CORE\",\n                \"hard\": 1024,\n                \"soft\": 1024\n            },\n            {\n                \"type\": \"RLIMIT_NOFILE\",\n                \"hard\": 1024,\n                \"soft\": 1024\n            }\n        ],\n        \"apparmorProfile\": \"acme_secure_profile\",\n        \"oomScoreAdj\": 100,\n        \"selinuxLabel\": \"system_u:system_r:svirt_lxc_net_t:s0:c124,c675\",\n        \"ioPriority\": {\n            \"class\": \"IOPRIO_CLASS_IDLE\",\n            \"priority\": 4\n        },\n        \"noNewPrivileges\": true\n    },\n    \"root\": {\n        \"path\": \"rootfs\",\n        \"readonly\": true\n    },\n    \"hostname\": \"slartibartfast\",\n    \"mounts\": [\n        {\n            \"destination\": \"/proc\",\n            \"type\": \"proc\",\n            \"source\": \"proc\"\n        },\n        {\n            \"destination\": \"/dev\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/pts\",\n            \"type\": \"devpts\",\n            \"source\": \"devpts\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"newinstance\",\n                \"ptmxmode=0666\",\n                \"mode=0620\",\n                \"gid=5\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/shm\",\n            \"type\": \"tmpfs\",\n            \"source\": \"shm\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"mode=1777\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/mqueue\",\n            \"type\": \"mqueue\",\n            \"source\": \"mqueue\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/sys\",\n            \"type\": \"sysfs\",\n            \"source\": \"sysfs\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/sys/fs/cgroup\",\n            \"type\": \"cgroup\",\n            \"source\": \"cgroup\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"relatime\",\n                \"ro\"\n            ]\n        }\n    ],\n    \"hooks\": {\n        \"prestart\": [\n            {\n                \"path\": \"/usr/bin/fix-mounts\",\n                \"args\": [\n                    \"fix-mounts\",\n                    \"arg1\",\n                    \"arg2\"\n                ],\n                \"env\": [\n                    \"key1=value1\"\n                ]\n            },\n            {\n                \"path\": \"/usr/bin/setup-network\"\n            }\n        ],\n        \"poststart\": [\n            {\n                \"path\": \"/usr/bin/notify-start\",\n                \"timeout\": 5\n            }\n        ],\n        \"poststop\": [\n            {\n                \"path\": \"/usr/sbin/cleanup.sh\",\n                \"args\": [\n                    \"cleanup.sh\",\n                    \"-f\"\n                ]\n            }\n        ]\n    },\n    \"linux\": {\n        \"devices\": [\n            {\n                \"path\": \"/dev/fuse\",\n                \"type\": \"c\",\n                \"major\": 10,\n                \"minor\": 229,\n                \"fileMode\": 438,\n                \"uid\": 0,\n                \"gid\": 0\n            },\n            {\n                \"path\": \"/dev/sda\",\n                \"type\": \"b\",\n                \"major\": 8,\n                \"minor\": 0,\n                \"fileMode\": 432,\n                \"uid\": 0,\n                \"gid\": 0\n            }\n        ],\n        \"uidMappings\": [\n            {\n                \"containerID\": 0,\n                \"hostID\": 1000,\n                \"size\": 32000\n            }\n        ],\n        \"gidMappings\": [\n            {\n                \"containerID\": 0,\n                \"hostID\": 1000,\n                \"size\": 32000\n            }\n        ],\n        \"sysctl\": {\n            \"net.ipv4.ip_forward\": \"1\",\n            \"net.core.somaxconn\": \"256\"\n        },\n        \"cgroupsPath\": \"/myRuntime/myContainer\",\n        \"resources\": {\n            \"network\": {\n                \"classID\": 1048577,\n                \"priorities\": [\n                    {\n                        \"name\": \"eth0\",\n                        \"priority\": 500\n                    },\n                    {\n                        \"name\": \"eth1\",\n                        \"priority\": 1000\n                    }\n                ]\n            },\n            \"pids\": {\n                \"limit\": 32771\n            },\n            \"hugepageLimits\": [\n                {\n                    \"pageSize\": \"2MB\",\n                    \"limit\": 9223372036854772000\n                },\n                {\n                    \"pageSize\": \"64KB\",\n                    \"limit\": 1000000\n                }\n            ],\n            \"memory\": {\n                \"limit\": 536870912,\n                \"reservation\": 536870912,\n                \"swap\": 536870912,\n                \"kernel\": -1,\n                \"kernelTCP\": -1,\n                \"swappiness\": 0,\n                \"disableOOMKiller\": false\n            },\n            \"cpu\": {\n                \"shares\": 1024,\n                \"quota\": 1000000,\n                \"period\": 500000,\n                \"realtimeRuntime\": 950000,\n                \"realtimePeriod\": 1000000,\n                \"cpus\": \"2-3\",\n                \"idle\": 1,\n                \"mems\": \"0-7\"\n            },\n            \"devices\": [\n                {\n                    \"allow\": false,\n                    \"access\": \"rwm\"\n                },\n                {\n                    \"allow\": true,\n                    \"type\": \"c\",\n                    \"major\": 10,\n                    \"minor\": 229,\n                    \"access\": \"rw\"\n                },\n                {\n                    \"allow\": true,\n                    \"type\": \"b\",\n                    \"major\": 8,\n                    \"minor\": 0,\n                    \"access\": \"r\"\n                }\n            ],\n            \"blockIO\": {\n                \"weight\": 10,\n                \"leafWeight\": 10,\n                \"weightDevice\": [\n                    {\n                        \"major\": 8,\n                        \"minor\": 0,\n                        \"weight\": 500,\n                        \"leafWeight\": 300\n                    },\n                    {\n                        \"major\": 8,\n                        \"minor\": 16,\n                        \"weight\": 500\n                    }\n                ],\n                \"throttleReadBpsDevice\": [\n                    {\n                        \"major\": 8,\n                        \"minor\": 0,\n                        \"rate\": 600\n                    }\n                ],\n                \"throttleWriteIOPSDevice\": [\n                    {\n                        \"major\": 8,\n                        \"minor\": 16,\n                        \"rate\": 300\n                    }\n                ]\n            }\n        },\n        \"rootfsPropagation\": \"slave\",\n        \"seccomp\": {\n            \"defaultAction\": \"SCMP_ACT_ALLOW\",\n            \"architectures\": [\n                \"SCMP_ARCH_X86\",\n                \"SCMP_ARCH_X32\"\n            ],\n            \"syscalls\": [\n                {\n                    \"names\": [\n                        \"getcwd\",\n                        \"chmod\"\n                    ],\n                    \"action\": \"SCMP_ACT_ERRNO\"\n                }\n            ]\n        },\n        \"timeOffsets\": {\n            \"monotonic\": {\n                \"secs\": 172800,\n                \"nanosecs\": 0\n            },\n            \"boottime\": {\n                \"secs\": 604800,\n                \"nanosecs\": 0\n            }\n        },\n        \"namespaces\": [\n            {\n                \"type\": \"pid\"\n            },\n            {\n                \"type\": \"network\"\n            },\n            {\n                \"type\": \"ipc\"\n            },\n            {\n                \"type\": \"uts\"\n            },\n            {\n                \"type\": \"mount\"\n            },\n            {\n                \"type\": \"user\"\n            },\n            {\n                \"type\": \"cgroup\"\n            },\n            {\n                \"type\": \"time\"\n            }\n        ],\n        \"maskedPaths\": [\n            \"/proc/kcore\",\n            \"/proc/latency_stats\",\n            \"/proc/timer_stats\",\n            \"/proc/sched_debug\"\n        ],\n        \"readonlyPaths\": [\n            \"/proc/asound\",\n            \"/proc/bus\",\n            \"/proc/fs\",\n            \"/proc/irq\",\n            \"/proc/sys\",\n            \"/proc/sysrq-trigger\"\n        ],\n        \"mountLabel\": \"system_u:object_r:svirt_sandbox_file_t:s0:c715,c811\"\n    },\n    \"annotations\": {\n        \"com.example.key1\": \"value1\",\n        \"com.example.key2\": \"value2\"\n    }\n}\n```\n\n\n[apparmor]: https://wiki.ubuntu.com/AppArmor\n[cgroup-v1-memory_2]: https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt\n[selinux]:https://selinuxproject.org/page/Main_Page\n[no-new-privs]: https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt\n[proc_2]: https://www.kernel.org/doc/Documentation/filesystems/proc.txt\n[umask.2]: https://pubs.opengroup.org/onlinepubs/009695399/functions/umask.html\n[semver-v2.0.0]: https://semver.org/spec/v2.0.0.html\n[ieee-1003.1-2008-xbd-c8.1]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_08_01\n[ieee-1003.1-2008-functions-exec]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html\n[naming-a-volume]: https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-volume\n[oci-image-config-properties]: https://github.com/opencontainers/image-spec/blob/v1.1.0-rc2/config.md#properties\n[oci-image-conversion]: https://github.com/opencontainers/image-spec/blob/v1.1.0-rc2/conversion.md\n\n[capabilities.7]: https://man7.org/linux/man-pages/man7/capabilities.7.html\n[mount.2]: https://man7.org/linux/man-pages/man2/mount.2.html\n[mount.8]: https://man7.org/linux/man-pages/man8/mount.8.html\n[mount.8-filesystem-independent]: https://man7.org/linux/man-pages/man8/mount.8.html#FILESYSTEM-INDEPENDENT_MOUNT_OPTIONS\n[mount.8-filesystem-specific]: https://man7.org/linux/man-pages/man8/mount.8.html#FILESYSTEM-SPECIFIC_MOUNT_OPTIONS\n[mount_setattr.2]: https://man7.org/linux/man-pages/man2/mount_setattr.2.html\n[mount-bind]: https://docs.kernel.org/filesystems/sharedsubtree.html\n[getrlimit.2]: https://man7.org/linux/man-pages/man2/getrlimit.2.html\n[getrlimit.3]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/getrlimit.html\n[stdin.3]: https://man7.org/linux/man-pages/man3/stdin.3.html\n[uts-namespace.7]: https://man7.org/linux/man-pages/man7/namespaces.7.html\n[zonecfg.1m]: https://docs.oracle.com/cd/E86824_01/html/E54764/zonecfg-1m.html\n"
        },
        {
          "name": "features-linux.md",
          "type": "blob",
          "size": 7.2177734375,
          "content": "# <a name=\"linuxFeatures\" />Linux Features Structure\n\nThis document describes the [Linux-specific section](features.md#platform-specific-features) of the [Features structure](features.md).\n\n## <a name=\"linuxFeaturesNamespaces\" />Namespaces\n\n* **`namespaces`** (array of strings, OPTIONAL) The recognized names of the namespaces, including namespaces that might not be supported by the host operating system.\n  The runtime MUST recognize the elements in this array as the [`type` of `linux.namespaces` objects in `config.json`](config-linux.md#namespaces).\n\n### Example\n\n```json\n\"namespaces\": [\n  \"cgroup\",\n  \"ipc\",\n  \"mount\",\n  \"network\",\n  \"pid\",\n  \"user\",\n  \"uts\"\n]\n```\n\n## <a name=\"linuxFeaturesCapabilities\" />Capabilities\n\n* **`capabilities`** (array of strings, OPTIONAL) The recognized names of the capabilities, including capabilities that might not be supported by the host operating system.\n  The runtime MUST recognize the elements in this array in the [`process.capabilities` object of `config.json`](config.md#linux-process).\n\n### Example\n\n```json\n\"capabilities\": [\n  \"CAP_CHOWN\",\n  \"CAP_DAC_OVERRIDE\",\n  \"CAP_DAC_READ_SEARCH\",\n  \"CAP_FOWNER\",\n  \"CAP_FSETID\",\n  \"CAP_KILL\",\n  \"CAP_SETGID\",\n  \"CAP_SETUID\",\n  \"CAP_SETPCAP\",\n  \"CAP_LINUX_IMMUTABLE\",\n  \"CAP_NET_BIND_SERVICE\",\n  \"CAP_NET_BROADCAST\",\n  \"CAP_NET_ADMIN\",\n  \"CAP_NET_RAW\",\n  \"CAP_IPC_LOCK\",\n  \"CAP_IPC_OWNER\",\n  \"CAP_SYS_MODULE\",\n  \"CAP_SYS_RAWIO\",\n  \"CAP_SYS_CHROOT\",\n  \"CAP_SYS_PTRACE\",\n  \"CAP_SYS_PACCT\",\n  \"CAP_SYS_ADMIN\",\n  \"CAP_SYS_BOOT\",\n  \"CAP_SYS_NICE\",\n  \"CAP_SYS_RESOURCE\",\n  \"CAP_SYS_TIME\",\n  \"CAP_SYS_TTY_CONFIG\",\n  \"CAP_MKNOD\",\n  \"CAP_LEASE\",\n  \"CAP_AUDIT_WRITE\",\n  \"CAP_AUDIT_CONTROL\",\n  \"CAP_SETFCAP\",\n  \"CAP_MAC_OVERRIDE\",\n  \"CAP_MAC_ADMIN\",\n  \"CAP_SYSLOG\",\n  \"CAP_WAKE_ALARM\",\n  \"CAP_BLOCK_SUSPEND\",\n  \"CAP_AUDIT_READ\",\n  \"CAP_PERFMON\",\n  \"CAP_BPF\",\n  \"CAP_CHECKPOINT_RESTORE\"\n]\n```\n\n## <a name=\"linuxFeaturesCgroup\" />Cgroup\n\n**`cgroup`** (object, OPTIONAL) represents the runtime's implementation status of cgroup managers.\nIrrelevant to the cgroup version of the host operating system.\n\n* **`v1`** (bool, OPTIONAL) represents whether the runtime supports cgroup v1.\n* **`v2`** (bool, OPTIONAL) represents whether the runtime supports cgroup v2.\n* **`systemd`** (bool, OPTIONAL) represents whether the runtime supports system-wide systemd cgroup manager.\n* **`systemdUser`** (bool, OPTIONAL) represents whether the runtime supports user-scoped systemd cgroup manager.\n* **`rdma`** (bool, OPTIONAL) represents whether the runtime supports RDMA cgroup controller.\n\n### Example\n\n```json\n\"cgroup\": {\n  \"v1\": true,\n  \"v2\": true,\n  \"systemd\": true,\n  \"systemdUser\": true,\n  \"rdma\": false\n}\n```\n\n## <a name=\"linuxFeaturesSeccomp\" />Seccomp\n\n**`seccomp`** (object, OPTIONAL) represents the runtime's implementation status of seccomp.\nIrrelevant to the kernel version of the host operating system.\n\n* **`enabled`** (bool, OPTIONAL) represents whether the runtime supports seccomp.\n* **`actions`** (array of strings, OPTIONAL) The recognized names of the seccomp actions.\n  The runtime MUST recognize the elements in this array in the [`syscalls[].action` property of the `linux.seccomp` object in `config.json`](config-linux.md#seccomp).\n* **`operators`** (array of strings, OPTIONAL) The recognized names of the seccomp operators.\n  The runtime MUST recognize the elements in this array in the [`syscalls[].args[].op` property of the `linux.seccomp` object in `config.json`](config-linux.md#seccomp).\n* **`archs`** (array of strings, OPTIONAL) The recognized names of the seccomp architectures.\n  The runtime MUST recognize the elements in this array in the [`architectures` property of the `linux.seccomp` object in `config.json`](config-linux.md#seccomp).\n* **`knownFlags`** (array of strings, OPTIONAL) The recognized names of the seccomp flags.\n  The runtime MUST recognize the elements in this array in the [`flags` property of the `linux.seccomp` object in `config.json`](config-linux.md#seccomp).\n* **`supportedFlags`** (array of strings, OPTIONAL) The recognized and supported names of the seccomp flags.\n  This list may be a subset of `knownFlags` due to some flags not supported by the current kernel and/or libseccomp.\n  The runtime MUST recognize and support the elements in this array in the [`flags` property of the `linux.seccomp` object in `config.json`](config-linux.md#seccomp).\n\n### Example\n\n```json\n\"seccomp\": {\n  \"enabled\": true,\n  \"actions\": [\n    \"SCMP_ACT_ALLOW\",\n    \"SCMP_ACT_ERRNO\",\n    \"SCMP_ACT_KILL\",\n    \"SCMP_ACT_LOG\",\n    \"SCMP_ACT_NOTIFY\",\n    \"SCMP_ACT_TRACE\",\n    \"SCMP_ACT_TRAP\"\n  ],\n  \"operators\": [\n    \"SCMP_CMP_EQ\",\n    \"SCMP_CMP_GE\",\n    \"SCMP_CMP_GT\",\n    \"SCMP_CMP_LE\",\n    \"SCMP_CMP_LT\",\n    \"SCMP_CMP_MASKED_EQ\",\n    \"SCMP_CMP_NE\"\n  ],\n  \"archs\": [\n    \"SCMP_ARCH_AARCH64\",\n    \"SCMP_ARCH_ARM\",\n    \"SCMP_ARCH_MIPS\",\n    \"SCMP_ARCH_MIPS64\",\n    \"SCMP_ARCH_MIPS64N32\",\n    \"SCMP_ARCH_MIPSEL\",\n    \"SCMP_ARCH_MIPSEL64\",\n    \"SCMP_ARCH_MIPSEL64N32\",\n    \"SCMP_ARCH_PPC\",\n    \"SCMP_ARCH_PPC64\",\n    \"SCMP_ARCH_PPC64LE\",\n    \"SCMP_ARCH_S390\",\n    \"SCMP_ARCH_S390X\",\n    \"SCMP_ARCH_X32\",\n    \"SCMP_ARCH_X86\",\n    \"SCMP_ARCH_X86_64\"\n  ],\n  \"knownFlags\": [\n    \"SECCOMP_FILTER_FLAG_LOG\"\n  ],\n  \"supportedFlags\": [\n    \"SECCOMP_FILTER_FLAG_LOG\"\n  ]\n}\n```\n\n## <a name=\"linuxFeaturesApparmor\" />AppArmor\n\n**`apparmor`** (object, OPTIONAL) represents the runtime's implementation status of AppArmor.\nIrrelevant to the availability of AppArmor on the host operating system.\n\n* **`enabled`** (bool, OPTIONAL) represents whether the runtime supports AppArmor.\n\n### Example\n\n```json\n\"apparmor\": {\n  \"enabled\": true\n}\n```\n\n## <a name=\"linuxFeaturesApparmor\" />SELinux\n\n**`selinux`** (object, OPTIONAL) represents the runtime's implementation status of SELinux.\nIrrelevant to the availability of SELinux on the host operating system.\n\n* **`enabled`** (bool, OPTIONAL) represents whether the runtime supports SELinux.\n\n### Example\n\n```json\n\"selinux\": {\n  \"enabled\": true\n}\n```\n\n## <a name=\"linuxFeaturesIntelRdt\" />Intel RDT\n\n**`intelRdt`** (object, OPTIONAL) represents the runtime's implementation status of Intel RDT.\nIrrelevant to the availability of Intel RDT on the host operating system.\n\n* **`enabled`** (bool, OPTIONAL) represents whether the runtime supports Intel RDT.\n\n### Example\n\n```json\n\"intelRdt\": {\n  \"enabled\": true\n}\n```\n\n## <a name=\"linuxFeaturesMountExtensions\" />MountExtensions\n\n**`mountExtensions`** (object, OPTIONAL) represents whether the runtime supports certain mount features, irrespective of the availability of the features on the host operating system.\n\n* **`idmap`** (object, OPTIONAL) represents whether the runtime supports idmap mounts using the `uidMappings` and `gidMappings` properties of the mount.\n  * **`enabled`** (bool, OPTIONAL) represents whether the runtime parses and attempts to use the `uidMappings` and `gidMappings` properties of mounts if provided.\n    Note that it is possible for runtimes to have partial implementations of id-mapped mounts support (such as only allowing mounts which have mappings matching the container's user namespace, or only allowing the id-mapped bind-mounts).\n    In such cases, runtimes MUST still set this value to `true`, to indicate that the runtime recognises the `uidMappings` and `gidMappings` properties.\n\n### Example\n\n```json\n\"mountExtensions\": {\n  \"idmap\":{\n    \"enabled\": true\n  }\n}\n```\n"
        },
        {
          "name": "features.md",
          "type": "blob",
          "size": 9.025390625,
          "content": "# <a name=\"features\" />Features Structure\n\nA [runtime](glossary.md#runtime) MAY provide a JSON structure about its implemented features to [runtime callers](glossary.md#runtime-caller).\nThis JSON structure is called [\"Features structure\"](glossary.md#features-structure).\n\nThe Features structure is irrelevant to the actual availability of the features in the host operating system.\nHence, the content of the Features structure SHOULD be determined on the compilation time of the runtime, not on the execution time.\n\nAll properties in the Features structure except `ociVersionMin` and `ociVersionMax` MAY either be absent or have the `null` value.\nThe `null` value MUST NOT be confused with an empty value such as `0`, `false`, `\"\"`, `[]`, and `{}`.\n\n## <a name=\"featuresSpecificationVersion\" />Specification version\n\n* **`ociVersionMin`** (string, REQUIRED) The minimum recognized version of the Open Container Initiative Runtime Specification.\n  The runtime MUST accept this value as the [`ociVersion` property of `config.json`](config.md#specification-version).\n\n* **`ociVersionMax`** (string, REQUIRED) The maximum recognized version of the Open Container Initiative Runtime Specification.\n  The runtime MUST accept this value as the [`ociVersion` property of `config.json`](config.md#specification-version).\n  The value MUST NOT be less than the value of the `ociVersionMin` property.\n  The Features structure MUST NOT contain properties that are not defined in this version of the Open Container Initiative Runtime Specification.\n\n### Example\n```json\n{\n  \"ociVersionMin\": \"1.0.0\",\n  \"ociVersionMax\": \"1.1.0\"\n}\n```\n\n## <a name=\"featuresHooks\" />Hooks\n* **`hooks`** (array of strings, OPTIONAL) The recognized names of the [hooks](config.md#posix-platform-hooks).\n  The runtime MUST support the elements in this array as the [`hooks` property of `config.json`](config.md#posix-platform-hooks).\n\n### Example\n```json\n\"hooks\": [\n  \"prestart\",\n  \"createRuntime\",\n  \"createContainer\",\n  \"startContainer\",\n  \"poststart\",\n  \"poststop\"\n]\n```\n\n## <a name=\"featuresMountOptions\" />Mount Options\n\n* **`mountOptions`** (array of strings, OPTIONAL) The recognized names of the mount options, including options that might not be supported by the host operating system.\n  The runtime MUST recognize the elements in this array as the [`options` of `mounts` objects in `config.json`](config.md#mounts).\n  * Linux: this array SHOULD NOT contain filesystem-specific mount options that are passed to the [mount(2)][mount.2] syscall as `const void *data`.\n\n### Example\n\n```json\n\"mountOptions\": [\n  \"acl\",\n  \"async\",\n  \"atime\",\n  \"bind\",\n  \"defaults\",\n  \"dev\",\n  \"diratime\",\n  \"dirsync\",\n  \"exec\",\n  \"iversion\",\n  \"lazytime\",\n  \"loud\",\n  \"mand\",\n  \"noacl\",\n  \"noatime\",\n  \"nodev\",\n  \"nodiratime\",\n  \"noexec\",\n  \"noiversion\",\n  \"nolazytime\",\n  \"nomand\",\n  \"norelatime\",\n  \"nostrictatime\",\n  \"nosuid\",\n  \"nosymfollow\",\n  \"private\",\n  \"ratime\",\n  \"rbind\",\n  \"rdev\",\n  \"rdiratime\",\n  \"relatime\",\n  \"remount\",\n  \"rexec\",\n  \"rnoatime\",\n  \"rnodev\",\n  \"rnodiratime\",\n  \"rnoexec\",\n  \"rnorelatime\",\n  \"rnostrictatime\",\n  \"rnosuid\",\n  \"rnosymfollow\",\n  \"ro\",\n  \"rprivate\",\n  \"rrelatime\",\n  \"rro\",\n  \"rrw\",\n  \"rshared\",\n  \"rslave\",\n  \"rstrictatime\",\n  \"rsuid\",\n  \"rsymfollow\",\n  \"runbindable\",\n  \"rw\",\n  \"shared\",\n  \"silent\",\n  \"slave\",\n  \"strictatime\",\n  \"suid\",\n  \"symfollow\",\n  \"sync\",\n  \"tmpcopyup\",\n  \"unbindable\"\n]\n```\n\n\n## <a name=\"featuresPlatformSpecificFeatures\" />Platform-specific features\n\n* **`linux`** (object, OPTIONAL) [Linux-specific features](features-linux.md).\n  This MAY be set if the runtime supports `linux` platform.\n\n## <a name=\"featuresAnnotations\" />Annotations\n\n**`annotations`** (object, OPTIONAL) contains arbitrary metadata of the runtime.\nThis information MAY be structured or unstructured.\nAnnotations MUST be a key-value map that follows the same convention as the Key and Values of the [`annotations` property of `config.json`](config.md#annotations).\nHowever, annotations do not need to contain the possible values of the [`annotations` property of `config.json`](config.md#annotations).\nThe current version of the spec do not provide a way to enumerate the possible values of the [`annotations` property of `config.json`](config.md#annotations).\n\n### Example\n```json\n\"annotations\": {\n  \"org.opencontainers.runc.checkpoint.enabled\": \"true\",\n  \"org.opencontainers.runc.version\": \"1.1.0\"\n}\n```\n\n## <a name=\"featuresPotentiallyUnsafeConfigAnnotations\" />Unsafe annotations in `config.json`\n\n**`potentiallyUnsafeConfigAnnotations`** (array of strings, OPTIONAL) contains values of [`annotations` property of `config.json`](config.md#annotations)\nthat may potentially change the behavior of the runtime.\n\nA value that ends with \".\" is interpreted as a prefix of annotations.\n\n### Example\n```json\n\"potentiallyUnsafeConfigAnnotations\": [\n  \"com.example.foo.bar\",\n  \"org.systemd.property.\"\n]\n```\n\nThe example above matches `com.example.foo.bar`, `org.systemd.property.ExecStartPre`, etc.\nThe example does not match `com.example.foo.bar.baz`.\n\n# Example\n\nHere is a full example for reference.\n\n```json\n{\n  \"ociVersionMin\": \"1.0.0\",\n  \"ociVersionMax\": \"1.1.0-rc.2\",\n  \"hooks\": [\n    \"prestart\",\n    \"createRuntime\",\n    \"createContainer\",\n    \"startContainer\",\n    \"poststart\",\n    \"poststop\"\n  ],\n  \"mountOptions\": [\n    \"async\",\n    \"atime\",\n    \"bind\",\n    \"defaults\",\n    \"dev\",\n    \"diratime\",\n    \"dirsync\",\n    \"exec\",\n    \"iversion\",\n    \"lazytime\",\n    \"loud\",\n    \"mand\",\n    \"noatime\",\n    \"nodev\",\n    \"nodiratime\",\n    \"noexec\",\n    \"noiversion\",\n    \"nolazytime\",\n    \"nomand\",\n    \"norelatime\",\n    \"nostrictatime\",\n    \"nosuid\",\n    \"nosymfollow\",\n    \"private\",\n    \"ratime\",\n    \"rbind\",\n    \"rdev\",\n    \"rdiratime\",\n    \"relatime\",\n    \"remount\",\n    \"rexec\",\n    \"rnoatime\",\n    \"rnodev\",\n    \"rnodiratime\",\n    \"rnoexec\",\n    \"rnorelatime\",\n    \"rnostrictatime\",\n    \"rnosuid\",\n    \"rnosymfollow\",\n    \"ro\",\n    \"rprivate\",\n    \"rrelatime\",\n    \"rro\",\n    \"rrw\",\n    \"rshared\",\n    \"rslave\",\n    \"rstrictatime\",\n    \"rsuid\",\n    \"rsymfollow\",\n    \"runbindable\",\n    \"rw\",\n    \"shared\",\n    \"silent\",\n    \"slave\",\n    \"strictatime\",\n    \"suid\",\n    \"symfollow\",\n    \"sync\",\n    \"tmpcopyup\",\n    \"unbindable\"\n  ],\n  \"linux\": {\n    \"namespaces\": [\n      \"cgroup\",\n      \"ipc\",\n      \"mount\",\n      \"network\",\n      \"pid\",\n      \"user\",\n      \"uts\"\n    ],\n    \"capabilities\": [\n      \"CAP_CHOWN\",\n      \"CAP_DAC_OVERRIDE\",\n      \"CAP_DAC_READ_SEARCH\",\n      \"CAP_FOWNER\",\n      \"CAP_FSETID\",\n      \"CAP_KILL\",\n      \"CAP_SETGID\",\n      \"CAP_SETUID\",\n      \"CAP_SETPCAP\",\n      \"CAP_LINUX_IMMUTABLE\",\n      \"CAP_NET_BIND_SERVICE\",\n      \"CAP_NET_BROADCAST\",\n      \"CAP_NET_ADMIN\",\n      \"CAP_NET_RAW\",\n      \"CAP_IPC_LOCK\",\n      \"CAP_IPC_OWNER\",\n      \"CAP_SYS_MODULE\",\n      \"CAP_SYS_RAWIO\",\n      \"CAP_SYS_CHROOT\",\n      \"CAP_SYS_PTRACE\",\n      \"CAP_SYS_PACCT\",\n      \"CAP_SYS_ADMIN\",\n      \"CAP_SYS_BOOT\",\n      \"CAP_SYS_NICE\",\n      \"CAP_SYS_RESOURCE\",\n      \"CAP_SYS_TIME\",\n      \"CAP_SYS_TTY_CONFIG\",\n      \"CAP_MKNOD\",\n      \"CAP_LEASE\",\n      \"CAP_AUDIT_WRITE\",\n      \"CAP_AUDIT_CONTROL\",\n      \"CAP_SETFCAP\",\n      \"CAP_MAC_OVERRIDE\",\n      \"CAP_MAC_ADMIN\",\n      \"CAP_SYSLOG\",\n      \"CAP_WAKE_ALARM\",\n      \"CAP_BLOCK_SUSPEND\",\n      \"CAP_AUDIT_READ\",\n      \"CAP_PERFMON\",\n      \"CAP_BPF\",\n      \"CAP_CHECKPOINT_RESTORE\"\n    ],\n    \"cgroup\": {\n      \"v1\": true,\n      \"v2\": true,\n      \"systemd\": true,\n      \"systemdUser\": true,\n      \"rdma\": true\n    },\n    \"seccomp\": {\n      \"enabled\": true,\n      \"actions\": [\n        \"SCMP_ACT_ALLOW\",\n        \"SCMP_ACT_ERRNO\",\n        \"SCMP_ACT_KILL\",\n        \"SCMP_ACT_KILL_PROCESS\",\n        \"SCMP_ACT_KILL_THREAD\",\n        \"SCMP_ACT_LOG\",\n        \"SCMP_ACT_NOTIFY\",\n        \"SCMP_ACT_TRACE\",\n        \"SCMP_ACT_TRAP\"\n      ],\n      \"operators\": [\n        \"SCMP_CMP_EQ\",\n        \"SCMP_CMP_GE\",\n        \"SCMP_CMP_GT\",\n        \"SCMP_CMP_LE\",\n        \"SCMP_CMP_LT\",\n        \"SCMP_CMP_MASKED_EQ\",\n        \"SCMP_CMP_NE\"\n      ],\n      \"archs\": [\n        \"SCMP_ARCH_AARCH64\",\n        \"SCMP_ARCH_ARM\",\n        \"SCMP_ARCH_MIPS\",\n        \"SCMP_ARCH_MIPS64\",\n        \"SCMP_ARCH_MIPS64N32\",\n        \"SCMP_ARCH_MIPSEL\",\n        \"SCMP_ARCH_MIPSEL64\",\n        \"SCMP_ARCH_MIPSEL64N32\",\n        \"SCMP_ARCH_PPC\",\n        \"SCMP_ARCH_PPC64\",\n        \"SCMP_ARCH_PPC64LE\",\n        \"SCMP_ARCH_RISCV64\",\n        \"SCMP_ARCH_S390\",\n        \"SCMP_ARCH_S390X\",\n        \"SCMP_ARCH_X32\",\n        \"SCMP_ARCH_X86\",\n        \"SCMP_ARCH_X86_64\"\n      ],\n      \"knownFlags\": [\n        \"SECCOMP_FILTER_FLAG_TSYNC\",\n        \"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\n        \"SECCOMP_FILTER_FLAG_LOG\"\n      ],\n      \"supportedFlags\": [\n        \"SECCOMP_FILTER_FLAG_TSYNC\",\n        \"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\n        \"SECCOMP_FILTER_FLAG_LOG\"\n      ]\n    },\n    \"apparmor\": {\n      \"enabled\": true\n    },\n    \"selinux\": {\n      \"enabled\": true\n    },\n    \"intelRdt\": {\n      \"enabled\": true\n    }\n  },\n  \"annotations\": {\n    \"io.github.seccomp.libseccomp.version\": \"2.5.4\",\n    \"org.opencontainers.runc.checkpoint.enabled\": \"true\",\n    \"org.opencontainers.runc.commit\": \"v1.1.0-534-g26851168\",\n    \"org.opencontainers.runc.version\": \"1.1.0+dev\"\n  }\n}\n```\n\n[mount.2]: https://man7.org/linux/man-pages/man2/mount.2.html\n"
        },
        {
          "name": "glossary.md",
          "type": "blob",
          "size": 2.482421875,
          "content": "# <a name=\"glossary\" />Glossary\n\n## <a name=\"glossaryBundle\" />Bundle\n\nA [directory structure](bundle.md) that is written ahead of time, distributed, and used to seed the runtime for creating a [container](#container) and launching a process within it.\n\n## <a name=\"glossaryConfiguration\" />Configuration\n\nThe [`config.json`](config.md) file in a [bundle](#bundle) which defines the intended [container](#container) and container process.\n\n## <a name=\"glossaryContainer\" />Container\n\nAn environment for executing processes with configurable isolation and resource limitations.\nFor example, namespaces, resource limits, and mounts are all part of the container environment.\n\n## <a name=\"glossaryContainerNamespace\" />Container namespace\n\nOn Linux,the [namespaces][namespaces.7] in which the [configured process](config.md#process) executes.\n\n## <a name=\"glossaryFeaturesDocument\" />Features Structure\n\nA [JSON][] structure that represents [the implemented features](#features.md) of the [runtime](#runtime).\nIrrelevant to the actual availability of the features in the host operating system.\n\n## <a name=\"glossaryJson\" />JSON\n\nAll configuration [JSON][] MUST be encoded in [UTF-8][].\nJSON objects MUST NOT include duplicate names.\nThe order of entries in JSON objects is not significant.\n\n## <a name=\"glossaryRuntime\" />Runtime\n\nAn implementation of this specification.\nIt reads the [configuration files](#configuration) from a [bundle](#bundle), uses that information to create a [container](#container), launches a process inside the container, and performs other [lifecycle actions](runtime.md).\n\n## <a name=\"glossaryRuntimeCaller\" />Runtime caller\nAn external program to execute a [runtime](#runtime), directly or indirectly.\n\nExamples of direct callers include containerd, CRI-O, and Podman.\nExamples of indirect callers include Docker/Moby and Kubernetes.\n\nRuntime callers often execute a runtime via [runc][]-compatible command line interface, however, its interaction interface is currently out of the scope of the Open Container Initiative Runtime Specification.\n\n## <a name=\"glossaryRuntimeNamespace\" />Runtime namespace\n\nOn Linux, the namespaces from which new [container namespaces](#container-namespace) are [created](config-linux.md#namespaces) and from which some configured resources are accessed.\n\n[JSON]: https://tools.ietf.org/html/rfc8259\n[UTF-8]: https://www.unicode.org/versions/Unicode8.0.0/ch03.pdf\n[runc]: https://github.com/opencontainers/runc\n\n[namespaces.7]: https://man7.org/linux/man-pages/man7/namespaces.7.html\n"
        },
        {
          "name": "implementations.md",
          "type": "blob",
          "size": 2.314453125,
          "content": "# <a name=\"implementations\" />Implementations\n\nThe following sections link to associated projects, some of which are maintained by the OCI and some of which are maintained by external organizations.\nIf you know of any associated projects that are not listed here, please file a pull request adding a link to that project.\n\n## <a name=\"implementationsRuntimeContainer\" />Runtime (Container)\n\n* [alibaba/inclavare-containers][rune] - Enclave OCI runtime for confidential computing\n* [containers/crun][crun] - Runtime implementation in C\n* [containers/youki][youki] - Runtime implementation in Rust\n* [opencontainers/runc][runc] - Reference implementation of OCI runtime\n* [projectatomic/bwrap-oci][bwrap-oci] - Convert the OCI spec file to a command line for [bubblewrap][bubblewrap]\n\n## <a name=\"implementationsRuntimeVirtualMachine\" />Runtime (Virtual Machine)\n\n* [clearcontainers/runtime][cc-runtime] - Hypervisor-based OCI runtime utilising [virtcontainers][virtcontainers] by Intel®.\n* [google/gvisor][gvisor] - gVisor is a user-space kernel, contains runsc to run sandboxed containers.\n* [hyperhq/runv][runv] - Hypervisor-based runtime for OCI\n* [kata-containers/runtime][kata-runtime] - Hypervisor-based OCI runtime combining technology from [clearcontainers/runtime][cc-runtime] and [hyperhq/runv][runv].\n\n## <a name=\"implementationsTestingTools\" />Testing & Tools\n\n* [huawei-openlab/oct][oct] - Open Container Testing framework for OCI configuration and runtime\n* [kunalkushwaha/octool][octool] - A config linter and validator.\n* [opencontainers/runtime-tools][runtime-tools] - A config generator and runtime/bundle testing framework.\n\n[bubblewrap]: https://github.com/projectatomic/bubblewrap\n[bwrap-oci]: https://github.com/projectatomic/bwrap-oci\n[cc-runtime]: https://github.com/clearcontainers/runtime\n[crun]: https://github.com/containers/crun\n[gvisor]: https://github.com/google/gvisor\n[kata-runtime]: https://github.com/kata-containers/runtime\n[oct]: https://github.com/huawei-openlab/oct\n[octool]: https://github.com/kunalkushwaha/octool\n[runc]: https://github.com/opencontainers/runc\n[rune]: https://github.com/alibaba/inclavare-containers\n[runtime-tools]: https://github.com/opencontainers/runtime-tools\n[runv]: https://github.com/hyperhq/runv\n[virtcontainers]: https://github.com/containers/virtcontainers\n[youki]: https://github.com/containers/youki"
        },
        {
          "name": "principles.md",
          "type": "blob",
          "size": 3.591796875,
          "content": "# <a name=\"the5PrinciplesOfStandardContainers\" />The 5 principles of Standard Containers\n\nDefine a unit of software delivery called a Standard Container.\nThe goal of a Standard Container is to encapsulate a software component and all its dependencies in a format that is self-describing and portable, so that any compliant runtime can run it without extra dependencies, regardless of the underlying machine and the contents of the container.\n\nThe specification for Standard Containers defines:\n\n1. configuration file formats\n2. a set of standard operations\n3. an execution environment.\n\nA great analogy for this is the physical shipping container used by the transportation industry.\nShipping containers are a fundamental unit of delivery, they can be lifted, stacked, locked, loaded, unloaded and labelled.\nIrrespective of their contents, by standardizing the container itself it allowed for a consistent, more streamlined and efficient set of processes to be defined.\nFor software Standard Containers offer similar functionality by being the fundamental, standardized, unit of delivery for a software package.\n\n## <a name=\"standardOperations\" />1. Standard operations\n\nStandard Containers define a set of STANDARD OPERATIONS.\nThey can be created, started, and stopped using standard container tools; copied and snapshotted using standard filesystem tools; and downloaded and uploaded using standard network tools.\n\n## <a name=\"contentAgnostic\" />2. Content-agnostic\n\nStandard Containers are CONTENT-AGNOSTIC: all standard operations have the same effect regardless of the contents.\nThey are started in the same way whether they contain a postgres database, a php application with its dependencies and application server, or Java build artifacts.\n\n## <a name=\"infrastructureAgnostic\" />3. Infrastructure-agnostic\n\nStandard Containers are INFRASTRUCTURE-AGNOSTIC: they can be run in any OCI supported infrastructure.\nFor example, a standard container can be bundled on a laptop, uploaded to cloud storage, downloaded, run and snapshotted by a build server at a fiber hotel in Virginia, uploaded to 10 staging servers in a home-made private cloud cluster, then sent to 30 production instances across 3 public cloud regions.\n\n## <a name=\"designedForAutomation\" />4. Designed for automation\n\nStandard Containers are DESIGNED FOR AUTOMATION: because they offer the same standard operations regardless of content and infrastructure, Standard Containers, are extremely well-suited for automation.\nIn fact, you could say automation is their secret weapon.\n\nMany things that once required time-consuming and error-prone human effort can now be programmed.\nBefore Standard Containers, by the time a software component ran in production, it had been individually built, configured, bundled, documented, patched, vendored, templated, tweaked and instrumented by 10 different people on 10 different computers.\nBuilds failed, libraries conflicted, mirrors crashed, post-it notes were lost, logs were misplaced, cluster updates were half-broken.\nThe process was slow, inefficient and cost a fortune - and was entirely different depending on the language and infrastructure provider.\n\n## <a name=\"industrialGradeDelivery\" />5. Industrial-grade delivery\n\nStandard Containers make INDUSTRIAL-GRADE DELIVERY of software a reality.\nLeveraging all of the properties listed above, Standard Containers are enabling large and small enterprises to streamline and automate their software delivery pipelines.\nWhether it is in-house devOps flows, or external customer-based software delivery mechanisms, Standard Containers are changing the way the community thinks about software packaging and delivery.\n"
        },
        {
          "name": "runtime-linux.md",
          "type": "blob",
          "size": 1.0009765625,
          "content": "# <a name=\"linuxRuntime\" />Linux Runtime\n\n## <a name=\"runtimeLinuxFileDescriptors\" />File descriptors\n\nBy default, only the `stdin`, `stdout` and `stderr` file descriptors are kept open for the application by the runtime.\nThe runtime MAY pass additional file descriptors to the application to support features such as [socket activation][socket-activated-containers].\nSome of the file descriptors MAY be redirected to `/dev/null` even though they are open.\n\n## <a name=\"runtimeLinuxDevSymbolicLinks\" /> Dev symbolic links\n\nWhile creating the container (step 2 in the [lifecycle](runtime.md#lifecycle)), runtimes MUST create the following symlinks if the source file exists after processing [`mounts`](config.md#mounts):\n\n|    Source       | Destination |\n| --------------- | ----------- |\n| /proc/self/fd   | /dev/fd     |\n| /proc/self/fd/0 | /dev/stdin  |\n| /proc/self/fd/1 | /dev/stdout |\n| /proc/self/fd/2 | /dev/stderr |\n\n\n[socket-activated-containers]: https://0pointer.de/blog/projects/socket-activated-containers.html\n"
        },
        {
          "name": "runtime.md",
          "type": "blob",
          "size": 9.8447265625,
          "content": "# <a name=\"runtimeAndLifecycle\" />Runtime and Lifecycle\n\n## <a name=\"runtimeScopeContainer\" />Scope of a Container\n\nThe entity using a runtime to create a container MUST be able to use the operations defined in this specification against that same container.\nWhether other entities using the same, or other, instance of the runtime can see that container is out of scope of this specification.\n\n## <a name=\"runtimeState\" />State\n\nThe state of a container includes the following properties:\n\n* **`ociVersion`** (string, REQUIRED) is version of the Open Container Initiative Runtime Specification with which the state complies.\n* **`id`** (string, REQUIRED) is the container's ID.\n    This MUST be unique across all containers on this host.\n    There is no requirement that it be unique across hosts.\n* **`status`** (string, REQUIRED) is the runtime state of the container.\n    The value MAY be one of:\n\n    * `creating`: the container is being created (step 2 in the [lifecycle](#lifecycle))\n    * `created`: the runtime has finished the [create operation](#create) (after step 2 in the [lifecycle](#lifecycle)), and the container process has neither exited nor executed the user-specified program\n    * `running`: the container process has executed the user-specified program but has not exited (after step 8 in the [lifecycle](#lifecycle))\n    * `stopped`: the container process has exited (step 10 in the [lifecycle](#lifecycle))\n\n    Additional values MAY be defined by the runtime, however, they MUST be used to represent new runtime states not defined above.\n* **`pid`** (int, REQUIRED when `status` is `created` or `running` on Linux, OPTIONAL on other platforms) is the ID of the container process.\n  For hooks executed in the runtime namespace, it is the pid as seen by the runtime.\n  For hooks executed in the container namespace, it is the pid as seen by the container.\n* **`bundle`** (string, REQUIRED) is the absolute path to the container's bundle directory.\n    This is provided so that consumers can find the container's configuration and root filesystem on the host.\n* **`annotations`** (map, OPTIONAL) contains the list of annotations associated with the container.\n    If no annotations were provided then this property MAY either be absent or an empty map.\n\nThe state MAY include additional properties.\n\nWhen serialized in JSON, the format MUST adhere to the JSON Schema [`schema/state-schema.json`](schema/state-schema.json).\n\nSee [Query State](#query-state) for information on retrieving the state of a container.\n\n### Example\n\n```json\n{\n    \"ociVersion\": \"0.2.0\",\n    \"id\": \"oci-container1\",\n    \"status\": \"running\",\n    \"pid\": 4422,\n    \"bundle\": \"/containers/redis\",\n    \"annotations\": {\n        \"myKey\": \"myValue\"\n    }\n}\n```\n\n## <a name=\"runtimeLifecycle\" />Lifecycle\nThe lifecycle describes the timeline of events that happen from when a container is created to when it ceases to exist.\n\n1. OCI compliant runtime's [`create`](runtime.md#create) command is invoked with a reference to the location of the bundle and a unique identifier.\n2. The container's runtime environment MUST be created according to the configuration in [`config.json`](config.md).\n    If the runtime is unable to create the environment specified in the [`config.json`](config.md), it MUST [generate an error](#errors).\n    While the resources requested in the [`config.json`](config.md) MUST be created, the user-specified program (from [`process`](config.md#process)) MUST NOT be run at this time.\n    Any updates to [`config.json`](config.md) after this step MUST NOT affect the container.\n3. The [`prestart` hooks](config.md#prestart) MUST be invoked by the runtime.\n    If any `prestart` hook fails, the runtime MUST [generate an error](#errors), stop the container, and continue the lifecycle at step 12.\n4. The [`createRuntime` hooks](config.md#createRuntime-hooks) MUST be invoked by the runtime.\n    If any `createRuntime` hook fails, the runtime MUST [generate an error](#errors), stop the container, and continue the lifecycle at step 12.\n5. The [`createContainer` hooks](config.md#createContainer-hooks) MUST be invoked by the runtime.\n    If any `createContainer` hook fails, the runtime MUST [generate an error](#errors), stop the container, and continue the lifecycle at step 12.\n6. Runtime's [`start`](runtime.md#start) command is invoked with the unique identifier of the container.\n7. The [`startContainer` hooks](config.md#startContainer-hooks) MUST be invoked by the runtime.\n    If any `startContainer` hook fails, the runtime MUST [generate an error](#errors), stop the container, and continue the lifecycle at step 12.\n8. The runtime MUST run the user-specified program, as specified by [`process`](config.md#process).\n9. The [`poststart` hooks](config.md#poststart) MUST be invoked by the runtime.\n    If any `poststart` hook fails, the runtime MUST [log a warning](#warnings), but the remaining hooks and lifecycle continue as if the hook had succeeded.\n10. The container process exits.\n    This MAY happen due to erroring out, exiting, crashing or the runtime's [`kill`](runtime.md#kill) operation being invoked.\n11. Runtime's [`delete`](runtime.md#delete) command is invoked with the unique identifier of the container.\n12. The container MUST be destroyed by undoing the steps performed during create phase (step 2).\n13. The [`poststop` hooks](config.md#poststop) MUST be invoked by the runtime.\n    If any `poststop` hook fails, the runtime MUST [log a warning](#warnings), but the remaining hooks and lifecycle continue as if the hook had succeeded.\n\n## <a name=\"runtimeErrors\" />Errors\n\nIn cases where the specified operation generates an error, this specification does not mandate how, or even if, that error is returned or exposed to the user of an implementation.\nUnless otherwise stated, generating an error MUST leave the state of the environment as if the operation were never attempted - modulo any possible trivial ancillary changes such as logging.\n\n## <a name=\"runtimeWarnings\" />Warnings\n\nIn cases where the specified operation logs a warning, this specification does not mandate how, or even if, that warning is returned or exposed to the user of an implementation.\nUnless otherwise stated, logging a warning does not change the flow of the operation; it MUST continue as if the warning had not been logged.\n\n## <a name=\"runtimeOperations\" />Operations\n\nUnless otherwise stated, runtimes MUST support the following operations.\n\nNote: these operations are not specifying any command-line APIs, and the parameters are inputs for general operations.\n\n### <a name=\"runtimeQueryState\" />Query State\n\n`state <container-id>`\n\nThis operation MUST [generate an error](#errors) if it is not provided the ID of a container.\nAttempting to query a container that does not exist MUST [generate an error](#errors).\nThis operation MUST return the state of a container as specified in the [State](#state) section.\n\n### <a name=\"runtimeCreate\" />Create\n\n`create <container-id> <path-to-bundle>`\n\nThis operation MUST [generate an error](#errors) if it is not provided a path to the bundle and the container ID to associate with the container.\nIf the ID provided is not unique across all containers within the scope of the runtime, or is not valid in any other way, the implementation MUST [generate an error](#errors) and a new container MUST NOT be created.\nThis operation MUST create a new container.\n\nAll of the properties configured in [`config.json`](config.md) except for [`process`](config.md#process) MUST be applied.\n[`process.args`](config.md#process) MUST NOT be applied until triggered by the [`start`](#start) operation.\nThe remaining `process` properties MAY be applied by this operation.\nIf the runtime cannot apply a property as specified in the [configuration](config.md), it MUST [generate an error](#errors) and a new container MUST NOT be created.\n\nThe runtime MAY validate `config.json` against this spec, either generically or with respect to the local system capabilities, before creating the container ([step 2](#lifecycle)).\n[Runtime callers](glossary.md#runtime-caller) who are interested in pre-create validation can run [bundle-validation tools](implementations.md#testing--tools) before invoking the create operation.\n\nAny changes made to the [`config.json`](config.md) file after this operation will not have an effect on the container.\n\n### <a name=\"runtimeStart\" />Start\n`start <container-id>`\n\nThis operation MUST [generate an error](#errors) if it is not provided the container ID.\nAttempting to `start` a container that is not [`created`](#state) MUST have no effect on the container and MUST [generate an error](#errors).\nThis operation MUST run the user-specified program as specified by [`process`](config.md#process).\nThis operation MUST generate an error if `process` was not set.\n\n### <a name=\"runtimeKill\" />Kill\n`kill <container-id> <signal>`\n\nThis operation MUST [generate an error](#errors) if it is not provided the container ID.\nAttempting to send a signal to a container that is neither [`created` nor `running`](#state) MUST have no effect on the container and MUST [generate an error](#errors).\nThis operation MUST send the specified signal to the container process.\n\n### <a name=\"runtimeDelete\" />Delete\n`delete <container-id>`\n\nThis operation MUST [generate an error](#errors) if it is not provided the container ID.\nAttempting to `delete` a container that is not [`stopped`](#state) MUST have no effect on the container and MUST [generate an error](#errors).\nDeleting a container MUST delete the resources that were created during the `create` step.\nNote that resources associated with the container, but not created by this container, MUST NOT be deleted.\nOnce a container is deleted its ID MAY be used by a subsequent container.\n\n\n## <a name=\"runtimeHooks\" />Hooks\nMany of the operations specified in this specification have \"hooks\" that allow for additional actions to be taken before or after each operation.\nSee [runtime configuration for hooks](./config.md#posix-platform-hooks) for more information.\n"
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec.md",
          "type": "blob",
          "size": 3.263671875,
          "content": "# <a name=\"openContainerInitiativeRuntimeSpecification\" />Open Container Initiative Runtime Specification\n\nThe [Open Container Initiative][oci] develops specifications for standards on Operating System process and application containers.\n\n# <a name=\"ociRuntimeSpecAbstract\" />Abstract\n\nThe Open Container Initiative Runtime Specification aims to specify the configuration, execution environment, and lifecycle of a container.\n\nA container's configuration is specified as the `config.json` for the supported platforms and details the fields that enable the creation of a container.\nThe execution environment is specified to ensure that applications running inside a container have a consistent environment between runtimes along with common actions defined for the container's lifecycle.\n\n# <a name=\"ociRuntimeSpecPlatforms\" />Platforms\n\nPlatforms defined by this specification are:\n\n* `linux`: [runtime.md](runtime.md), [config.md](config.md), [features.md](features.md), [config-linux.md](config-linux.md), [runtime-linux.md](runtime-linux.md), and [features-linux.md](features-linux.md).\n* `solaris`: [runtime.md](runtime.md), [config.md](config.md), [features.md](features.md), and [config-solaris.md](config-solaris.md).\n* `windows`: [runtime.md](runtime.md), [config.md](config.md), [features.md](features.md), and [config-windows.md](config-windows.md).\n* `vm`: [runtime.md](runtime.md), [config.md](config.md), [features.md](features.md), and [config-vm.md](config-vm.md).\n* `zos`: [runtime.md](runtime.md), [config.md](config.md), [features.md](features.md), and [config-zos.md](config-zos.md).\n\n# <a name=\"ociRuntimeSpecTOC\" />Table of Contents\n\n- [Introduction](spec.md)\n    - [Notational Conventions](#notational-conventions)\n    - [Container Principles](principles.md)\n- [Filesystem Bundle](bundle.md)\n- [Runtime and Lifecycle](runtime.md)\n    - [Linux-specific Runtime and Lifecycle](runtime-linux.md)\n- [Configuration](config.md)\n    - [Linux-specific Configuration](config-linux.md)\n    - [Solaris-specific Configuration](config-solaris.md)\n    - [Windows-specific Configuration](config-windows.md)\n    - [Virtual-Machine-specific Configuration](config-vm.md)\n    - [z/OS-specific Configuration](config-zos.md)\n- [Features Structure](features.md)\n    - [Linux-specific Features Structure](features-linux.md)\n- [Glossary](glossary.md)\n\n# <a name=\"ociRuntimeSpecNotationalConventions\" />Notational Conventions\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as described in [RFC 2119][rfc2119].\n\nThe key words \"unspecified\", \"undefined\", and \"implementation-defined\" are to be interpreted as described in the [rationale for the C99 standard][c99-unspecified].\n\nAn implementation is not compliant for a given CPU architecture if it fails to satisfy one or more of the MUST, REQUIRED, or SHALL requirements for the [platforms](#platforms) it implements.\nAn implementation is compliant for a given CPU architecture if it satisfies all the MUST, REQUIRED, and SHALL requirements for the [platforms](#platforms) it implements.\n\n\n[c99-unspecified]: https://www.open-std.org/jtc1/sc22/wg14/www/C99RationaleV5.10.pdf#page=18\n[oci]: https://opencontainers.org\n[rfc2119]: https://www.rfc-editor.org/rfc/rfc2119.html\n"
        },
        {
          "name": "specs-go",
          "type": "tree",
          "content": null
        },
        {
          "name": "style.md",
          "type": "blob",
          "size": 5.2646484375,
          "content": "# <a name=\"styleAndConventions\" />Style and conventions\n\n## <a name=\"styleOneSentence\" />One sentence per line\n\nTo keep consistency throughout the Markdown files in the Open Container spec all files should be formatted one sentence per line.\nThis fixes two things: it makes diffing easier with git and it resolves fights about line wrapping length.\nFor example, this paragraph will span three lines in the Markdown source.\n\n## <a name=\"styleHex\" />Traditionally hex settings should use JSON integers, not JSON strings\n\nFor example, [`\"classID\": 1048577`](config-linux.md#network) instead of `\"classID\": \"0x100001\"`.\nThe config JSON isn't enough of a UI to be worth jumping through string <-> integer hoops to support an 0x… form ([source][integer-over-hex]).\n\n## <a name=\"styleConstantNames\" />Constant names should keep redundant prefixes\n\nFor example, `CAP_KILL` instead of `KILL` in [**`process.capabilities`**](config.md#process).\nThe redundancy reduction from removing the namespacing prefix is not useful enough to be worth trimming the upstream identifier ([source][keep-prefix]).\n\n## <a name=\"styleOptionalSettings\" />Optional settings should not have pointer Go types\n\nBecause in many cases the Go default for the type is a no-op in the spec (sources [here][no-pointer-for-strings], [here][no-pointer-for-slices], and [here][no-pointer-for-boolean]).\nThe exceptions are entries where we need to distinguish between “not set” and “set to the Go default for that type” ([source][pointer-when-updates-require-changes]), and this decision should be made on a per-setting case.\n\n## Links\n\nInternal links should be [relative links][markdown-relative-links] when linking to content within the repository.\nInternal links should be used inline.\n\nExternal links should be collected at the bottom of a markdown file and used as referenced links.\nSee 'Referenced Links' in this [markdown quick reference][markdown-quick-reference].\nThe use of referenced links in the markdown body helps to keep files clean and organized.\nThis also facilitates updates of external link targets on a per-file basis.\n\nReferenced links should be kept in two alphabetically sorted sets, a general reference section followed by a man page section.\nTo keep Pandoc happy, duplicate naming of links within pages listed in the Makefile's `DOC_FILES` variable should be avoided by appending an `_N` to the link tagname, where `N` is some number not currently in use.\nThe organization and style of an existing reference section should be maintained unless it violates these style guidelines.\n\nAn exception to these rules is when a URL is needed contextually, for example when showing an explicit link to the reader.\n\n## Examples\n\n### <a name=\"styleAnchoring\" />Anchoring\n\nFor any given section that provides a notable example, it is ideal to have it denoted with [markdown headers][markdown-headers].\nThe level of header should be such that it is a subheader of the header it is an example of.\n\n#### Example\n\n```markdown\n## Some Topic\n\n### Some Subheader\n\n#### Further Subheader\n\n##### Example\n\nTo use Further Subheader, ...\n\n### Example\n\nTo use Some Topic, ...\n\n```\n\n### <a name=\"styleContent\" />Content\n\nWhere necessary, the values in the example can be empty or unset, but accommodate with comments regarding this intention.\n\nWhere feasible, the content and values used in an example should convey the fullest use of the data structures concerned.\nMost commonly onlookers will intend to copy-and-paste a \"working example\".\nIf the intention of the example is to be a fully utilized example, rather than a copy-and-paste example, perhaps add a comment as such.\n\n```markdown\n### Example\n```\n```json\n{\n    \"foo\": null,\n    \"bar\": \"\"\n}\n```\n\n**vs.**\n\n```markdown\n### Example\n\nFollowing is a fully populated example (not necessarily for copy/paste use)\n```\n```json\n{\n    \"foo\": [\n        1,\n        2,\n        3\n    ],\n    \"bar\": \"waffles\",\n    \"bif\": {\n        \"baz\": \"potatoes\"\n    }\n}\n```\n\n### Links\n\nThe following is an example of different types of links.\nThis is shown as a complete markdown file, where the referenced links are at the bottom.\n\n```markdown\nThe specification repository's [glossary](glossary.md) is where readers can find definitions of commonly used terms.\n\nReaders may click through to the [Open Containers namespace][open-containers] on [GitHub][github].\n\nThe URL for the Open Containers link above is: https://github.com/opencontainers\n\n\n[github]: https://github.com\n[open-containers]: https://github.com/opencontainers\n```\n\n\n[integer-over-hex]: https://github.com/opencontainers/runtime-spec/pull/267#r48360013\n[keep-prefix]: https://github.com/opencontainers/runtime-spec/pull/159#issuecomment-138728337\n[no-pointer-for-boolean]: https://github.com/opencontainers/runtime-spec/pull/290#r50296396\n[no-pointer-for-slices]: https://github.com/opencontainers/runtime-spec/pull/316#r50782982\n[no-pointer-for-strings]: https://github.com/opencontainers/runtime-spec/pull/653#issue-200439192\n[pointer-when-updates-require-changes]: https://github.com/opencontainers/runtime-spec/pull/317#r50932706\n[markdown-headers]: https://help.github.com/articles/basic-writing-and-formatting-syntax/#headings\n[markdown-quick-reference]: https://en.support.wordpress.com/markdown-quick-reference\n[markdown-relative-links]: https://help.github.com/articles/basic-writing-and-formatting-syntax/#relative-links\n"
        }
      ]
    }
  ]
}