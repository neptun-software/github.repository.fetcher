{
  "metadata": {
    "timestamp": 1736567174050,
    "page": 768,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HACKERALERT/Picocrypt",
      "stars": 2501,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0234375,
          "content": "web/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0458984375,
          "content": "Thank you for your interest in contributing to Picocrypt! Before getting started though, please read through this paragraph carefully. While Picocrypt is an open-source project hosted on GitHub, the primary use of GitHub is to distribute the source code to users and package maintainers as opposed to fostering collaboration on it. While I realize that well-intentioned people are often willing to contribute their time and skill to improve projects like Picocrypt, it's important to consider the developer's perspective too. As the developer of a security-focused project like Picocrypt, I prefer to not make changes to the code unless it's absolutely necessary, since new code can often break existing code that works just fine. Also, as an open-source developer, my time and resources are limited as well, and I don't want to have people contributing code that I ultimately won't accept. As such, I express my gratitude to all potential contributors for their willingness to help, but respectfully discourage anyone from opening PRs. Thank you for your understanding!\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 13.17578125,
          "content": "# Future\n<ul>\n\t<li>Migrate golang.org/x/crypto to standard library imports (https://github.com/golang/go/issues/65269)</li>\n</ul>\n\n# v1.34 (Released 04/29/2024)\n<ul>\n\t<li>✓ New CLI with support for files, folders, globs, paranoid mode, and Reed-Solomon</li>\n\t<li>✓ Migrate github.com/HACKERALERT/crypto back to golang.org/x/crypto</li>\n\t<li>✓ Distribute raw Linux binary instead of AppImage for better portability</li>\n\t<li>✓ Distribute macOS binaries for both Intel and Apple silicon</li>\n</ul>\n\n# v1.33 (Released 06/27/2023)\n<ul>\n\t<li>✓ Add tooltip warning that comments are not encrypted (#164)</li>\n\t<li>✓ Hash keyfiles in chunks to reduce memory usage (#168)</li>\n\t<li>✓ Prevent using identical keyfiles under different filenames (#170)</li>\n</ul>\n\n# v1.32 (Released 04/28/2023)\n<ul>\n\t<li>✓ Added a command-line interface</li>\n\t<li>✓ Use Debian 11 as the base for the AppImage instead of Debian 10</li>\n\t<li>✓ Include software rendering DLLs in the Paranoid Pack for future proofing</li>\n\t<li>✓ Add plausible deniability and recursive encryption</li>\n\t<li>✓ Added an installer for Windows (made using Inno Setup)</li>\n</ul>\n\n# v1.31 (Released 11/18/2022)\n<ul>\n\t<li>✓ Force software OpenGL rendering on macOS</li>\n\t<li>✓ Use native clipboard APIs instead of external package (removes need for xclip)</li>\n\t<li>✓ Revert using system temporary folder due to size issues</li>\n</ul>\n\n# v1.30 (Released 09/24/2022)\n<ul>\n\t<li>✓ Improve tooltip word choice</li>\n\t<li>✓ Add FAQ to README</li>\n\t<li>✓ Fix scaling issue when moving between monitors with different DPIs (on Windows)</li>\n\t<li>✓ Strip periods from custom output filename to prevent file extension problems</li>\n\t<li>✓ Minor tweaks to keyfile modal</li>\n\t<li>✓ Use temporary .zip file to prevent overwriting when encrypting</li>\n\t<li>✓ Check if files already exist when recombining and splitting to prevent overwriting</li>\n\t<li>✓ Show \".*\" in the output box if splitting</li>\n\t<li>✓ Skip temporary and inaccessible files when combining/compressing</li>\n\t<li>✓ Improve file scanning performance by precomputing total size</li>\n\t<li>✓ Stability improvements and fixes for edge cases</li>\n\t<li>✓ Check for clipboard support on Linux</li>\n</ul>\n\n# v1.29 (Released 05/23/2022)\n<ul>\n\t<li>✓ Review/improve Internals.md</li>\n\t<li>✓ Add option to compress when encrypting a single file</li>\n\t<li>✓ Check for errors when not enough disk space</li>\n\t<li>✓ Show MiB/GiB instead of M/G in the input label to prevent confusion</li>\n\t<li>✓ Minor consistency improvements</li>\n</ul>\n\n# v1.28 (Released 05/16/2022)\n<ul>\n\t<li>✓ Fix bug when decrypting a splitted volume with a custom output name and \"Delete files\" selected</li>\n\t<li>✓ Improve responsiveness of cancel button (instant cancel when pressed instead of delays)</li>\n\t<li>✓ Software OpenGL rendering on Windows (for Windows on ARM compatibility and older hardware)</li>\n\t<li>✓ Progress, speed, and ETA for combining/compressing files, recombining files, and splitting files</li>\n\t<li>✓ Improve overall IO performance</li>\n\t<li>✓ Much smoother Reed-Solomon decryption flow, slightly better performance</li>\n\t<li>✓ Major code cleanups and organizing</li>\n\t<li>✓ <i>Much better</i> file permission handling</li>\n\t<li>✓ Numerous minor fixes and improvements</li>\n\t<li>✓ Improve Reed-Solomon performance (only rebuild data if corruption is detected)</li>\n\t<li>✓ `gofmt` and `go mod tidy` all dependencies</li>\n\t<li>✓ Fix bad pointer issue when running with `-race`</li>\n\t<li>✓ Fix focus bug where input boxes are not cleared if they are focused when file is dropped</li>\n\t<li>✓ Fix bug on Windows where copying from the password field using Ctrl+C and then pasting with the \"Paste\" button would cause a crash</li>\n\t<li>✓ Make sure at least one password characters category is checked when generating</li>\n\t<li>✓ Use `desktop-file-validate` to find and remove deprecated fields and fix invalid ones in the .desktop for .deb and AppImage</li>\n\t<li>✓ .deb and AppImage optimizations, reliability improvements</li>\n\t<li>✓ Snapcraft uses software OpenGL rendering as well now</li>\n\t<li>✓ Statically linked libc6, etc. for best cross-platform compatibility for Snapcraft</li>\n\t<li>✓ Added NO_AT_BRIDGE=1 to Snapcraft to fix an issue on Arch Linux (#75)</li>\n\t<li>✓ Clean up unnecessary files in dependencies</li>\n\t<li>✓ Sign executables with OpenPGP</li>\n</ul>\n\n# v1.27 (Released 05/02/2022)\n<ul>\n\t<li>✓ Input validation for split size</li>\n\t<li>✓ Ability to split into a custom number of total chunks in addition to by size</li>\n\t<li>✓ Fix issue with long comments</li>\n\t<li>✓ Deprecate Snapcraft and provide a .deb and AppImage instead</li>\n</ul>\n\n# v1.26 (Released 04/18/2022)\n<ul>\n\t<li>✓ Fix a race condition</li>\n\t<li>✓ Fix invalid pointer crash when decrypting files >256GB</li>\n\t<li>✓ UI improvements and tweaks</li>\n\t<li>✓ Fix crash on Windows when saving to the root directory of a drive</li>\n\t<li>✓ Max file size limit removed! Picocrypt can now encrypt files of unlimited size instead of being capped at 256 GiB</li>\n\t<li>✓ Shows total input size along with input label</li>\n\t<li>✓ Update to GLFW 3.3.6 for better stability</li>\n</ul>\n\n# v1.25 (Released 04/13/2022)\n<ul>\n\t<li>✓ Improve Internals documentation (header format, etc.)</li>\n\t<li>✓ Save as and keyfile file dialog now opens in the same directory as dropped files</li>\n\t<li>✓ Improvements for long file names</li>\n\t<li>✓ Minor UI improvements and fixes</li>\n</ul>\n\n# v1.24 (Released 04/02/2022)\n<ul>\n\t<li>✓ Fixed layout bug that allowed scrolling within window</li>\n\t<li>✓ Optimize dependencies</li>\n\t<li>✓ Numerous code and UI optimizations, including better comments</li>\n\t<li>✓ Keyfile modal will recenter automatically upon dropping a keyfile</li>\n\t<li>✓ Fix modals moving around randomly when open and closed numerous times</li>\n\t<li>✓ Fixed: Progressbar modal moves around weirdly sometimes</li>\n\t<li>✓ Better error handling</li>\n\t<li>✓ Show compression speed and percentage</li>\n\t<li>✓ Smoothen splitting file and recombing file progress bars</li>\n\t<li>✓ Finish adding tooltips</li>\n</ul>\n\n# v1.23 (Released 03/19/2022)\n<ul>\n\t<li>✓ Removed the checksum generator to get back on track with original Picocrypt ideology</li>\n\t<li>✓ Cleaned up and optimized code</li>\n\t<li>✓ Compiled with MinGW GCC11 instead of TDM-GCC, Go 1.18 instead of Go 1.17</li>\n\t<li>✓ Picocrypt no longer checks for new versions, so no network requests are ever made</li>\n</ul>\n\n# v1.22 (Released 12/22/2021)\n<ul>\n\t<li>✓ Remove fast mode, as a change for the normal mode will make fast mode obselete</li>\n\t<li>✓ For normal mode, change HMAC-SHA3 to a keyed Blake2b</li>\n</ul>\n\n# v1.21 (Released 11/19/2021)\n<ul>\n\t<li>✓ Remove file shredder because it won't be very effective in the future</li>\n\t<li>✓ Fix minor temporary file bug</li>\n\t<li>✓ Improve decryption UI</li>\n</ul>\n\n# v1.20 (Released 11/12/2021)\n<ul>\n\t<li>✓ Fix keyfile modal UI layout</li>\n\t<li>✓ Fix keyfile modal typo</li>\n\t<li>✓ Fix minor keyfile bug</li>\n\t<li>✓ Improve shredding window layout</li>\n\t<li>✓ Fork all dependencies and recursive dependencies into \"offline\" repos for hardening and better stability</li>\n\t<li>✓ Fix UI scaling issues</li>\n\t<li>✓ Fix high DPI layout issues</li>\n\t<li>✓ Optimize zip compressor</li>\n</ul>\n\n# v1.19 (Released 09/26/2021)\n<ul>\n\t<li>✓ UI scaling hotfix</li>\n</ul>\n\n# v1.18 (Released 09/24/2021)\n<ul>\n\t<li>✓ Make UI more consistent (minor DPI issues)</li>\n\t<li>✓ Fix crashing when OS denies permission to access file</li>\n\t<li>✓ Fixed bug where file object was not closed properly</li>\n\t<li>✓ Encryption/decryption file naming and extension bugs</li>\n\t<li>✓ Many fixes, optimizations, and linting</li>\n</ul>\n\n# v1.17 (Released 09/04/2021)\n<ul>\n\t<li>✓ (abandoned due to UI issues with ASCII codes >128) Extended ASCII set in password generator</li>\n\t<li>✓ Tooltips for all advanced options</li>\n\t<li>✓ Localization support (use system default where possible)</li>\n\t<li>✓ Auto detect system locale, fallback to English</li>\n\t<li>✓ Fix ETA negative number bug</li>\n\t<li>✓ Add clear button to password field</li>\n\t<li>✓ Multiple keyfiles support and DND</li>\n\t<li>✓ Option to require specific keyfile order</li>\n\t<li>✓ Keyfile generator</li>\n\t<li>✓ Bug: Red error label shown in main window during successful decryption after selecting incorrect keyfiles</li>\n\t<li>✓ Prevent duplicate keyfile</li>\n\t<li>✓ Add a select keyfile button</li>\n\t<li>✓ Make sure only one of \"Fast mode\" and \"Paranoid mode\" can be enabled</li>\n\t<li>✓ Fix bug where metadata says \"read-only\", but the textbox is modifiable</li>\n\t<li>✓ Add option to delete encrypted files after decryption</li>\n</ul>\n<strong>Note: v1.17 will be incompatible with all previous releases!</strong>\n\n# v1.16 (Released 08/11/2021)\n<ul>\n\t<li>✓ Fixed bug when entering a wrong password when decrypting a splitted file</li>\n\t<li>✓ Fixed bug where an existing file is delete when a wrong password is used</li>\n\t<li>✓ The password generator is now customizable</li>\n\t<li>✓ Make keyfile support more reliable (keyfile now out of Beta)</li>\n\t<li>✓ Fix keyfile user flow issue</li>\n\t<li>✓ Bug fixes</li>\n\t<li>✓ UI fixes improvements</li>\n</ul>\n\n# v1.15 (Released 08/09/2021)\n<ul>\n\t<li>✓ Add cancel button to file shredder and custom number of passes</li>\n\t<li>✓ Password generator</li>\n\t<li>✓ Make password strength circle start at top</li>\n\t<li>✓ Fix shredder UI bugs</li>\n</ul>\n\n# v1.14 (Released 08/07/2021)\n<ul>\n\t<li>✓ Low-severity security fix for the recently discovered partitioning oracle attacks</li>\n\t<li>✓ Move from Monocypher to Go's standard supplemental ChaCha20 in favour of the latter being stateful</li>\n\t<li>✓ Add SHA3 (normal mode) and BLAKE2b (fast mode) as HMAC to replace Poly1305 and prevent partitioning oracle attacks</li>\n\t<li>✓ Removed ~100 lines of unnecessary code now that Picocrypt uses Go's ChaCha20 (cleaner and stabler code)</li>\n\t<li>✓ Added window icons</li>\n\t<li>✓ Switch to a new Reed-Solomon encoder that automatically corrects errors</li>\n\t<li>✓ Add a \"Paranoid mode\", which will use the Serpent cipher in addition to XChaCha20</li>\n\t<li>✓ Cleaner code with plenty of comments for people taking a look</li>\n\t<li>✓ Metadata is now Reed-Solomon encoded (everything bit of header data is now RS-encoded for redundancy)</li>\n\t<li>✓ Reed-Solomon checkbox is now enabled and Reed-Solomon works</li>\n\t<li>✓ Implemented Dropbox's zxcvbn password strength checker</li>\n\t<li>✓ Removed paranoid shredding as it is too hard to implement correctly and not cross platform</li>\n\t<li>✓ Fixed Windows zip extract error notice that doesn't appear in 7-Zip (edit: it was a backslash issue)</li>\n\t<li>✓ Optional shred temporary files checkbox</li>\n\t<li>✓ Remove BLAKE3 from the checksum generator tab, as it has no practical use and requires a non-standard library</li>\n\t<li>✓ Advanced options are shown dynamically depending on whether encrypting or decrypting</li>\n\t<li>✓ Window closing disabled during encryption/decryption/shredding to prevent leakage of temporary files</li>\n\t<li>✓ Reduce padding of metadataLength from 10 to 5 (you probably won't type more than 99999 metadata characters)</li>\n\t<li>✓ Use regex to check if an input file is a valid Picocrypt volume or not during decryption</li>\n\t<li>✓ Improved user flow as well as fix UI bugs</li>\n\t<li>✓ Code optimizations</li>\n\t<li>✓ Many bug fixes/stability improvments</li>\n</ul>\n<strong>Note: v1.14 will be incompatible with all previous releases!</strong>\n\n# v1.13 (Released 5/29/2021)\n<ul>\n\t<li>✓ Picocrypt has been ported from Python to Go, thus completely rewritten</li>\n\t<li>✓ Added fast mode, which can achieve ~250MB/s</li>\n\t<li>✓ Added file shredder and file checksum generator</li>\n\t<li>✓ Automatically checks for newer versions</li>\n\t<li>✓ Added file chunking support</li>\n</ul>\n<strong>Note: v1.13 will be incompatible with all previous releases!</strong>\n\n# v1.12.1 (Released 04/11/2021)\n<ul>\n\t<li>✓ Fixed a bug that caused \"Secure wipe\" feature to show \"Unknown error\" when done</li>\n</ul>\n\n# v1.12 (Released 04/07/2021)\n<ul>\n\t<li>✓ Beautiful UI</li>\n\t<li>✓ More than x2 as fast as previous versions</li>\n\t<li>✓ Add cancel button to cancel encryption/decryption</li>\n\t<li>✓ (Bug) Delete existing file only if password is correct</li>\n\t<li>✓ Minor aesthetic fixes</li>\n\t<li>✓ Complete rewrite from scratch, to ensure reliability and security</li>\n\t<li>✓ Better anti-corruption (re-defined header format)</li>\n\t<li>✓ Switch to Argon2d instead Argon2id for better security</li>\n\t<li>✓ Switch from SHA3 to BLAKE3 for corruption check</li>\n\t<li>✓ Better user flow</li>\n</ul>\n<strong>Note: v1.12 will be incompatible with all previous releases!</strong>\n\n# v1.11 (Released 03/23/2021)\n<ul>\n\t<li>✓ Much more secure wipe via <code>sdelete64</code> for Windows, <code>shred</code> for Linux, and <code>rm -P</code> for MacOS</li>\n\t<li>✓ Much more beautiful UI for macOS</li>\n\t<li>✓ Robust secure wipe support for drag and dropped files/folders</li>\n\t<li>✓ Only open input files in read mode, since write mode is unnecessary</li>\n\t<li>✓ Clean up source code, add better comments</li>\n\t<li>✓ Drag and drop support (multiple files, a folder, a file and a folder, etc.)</li>\n</ul>\n"
        },
        {
          "name": "Internals.md",
          "type": "blob",
          "size": 5.140625,
          "content": "# Internals\nIf you're wondering about how Picocrypt handles cryptography, you've come to the right place! This page contains the technical details about the cryptographic algorithms and parameters used, as well as how cryptographic values are stored in the header format.\n\n# Core Cryptography\nPicocrypt uses the following cryptographic primitives:\n- XChaCha20 (cascaded with Serpent in counter mode for paranoid mode)\n- Keyed-BLAKE2b for normal mode, HMAC-SHA3 for paranoid mode (256-bit key, 512-bit digest)\n- HKDF-SHA3 for deriving a subkey for the MAC above, as well as a key for Serpent\n- Argon2id:\n    - Normal mode: 4 passes, 1 GiB memory, 4 threads\n    - Paranoid mode: 8 passes, 1 GiB memory, 8 threads\n\nAll primitives used are from the well-known [golang.org/x/crypto](https://pkg.go.dev/golang.org/x/crypto) module.\n\n# Counter Overflow\nSince XChaCha20 has a max message size of 256 GiB, Picocrypt will use the HKDF-SHA3 mentioned above to generate a new nonce for XChaCha20 and a new IV for Serpent if the total encrypted data is more than 60 GiB. While this threshold can be increased up to 256 GiB, Picocrypt uses 60 GiB to prevent any edge cases with blocks or the counter used by Serpent.\n\n# Header Format\nA Picocrypt volume's header is encoded with Reed-Solomon by default since it is, after all, the most important part of the entire file. An encoded value will take up three times the size of the unencoded value.\n\n**All offsets and sizes below are in bytes.**\n| Offset | Encoded size | Decoded size | Description\n| ------ | ------------ | ------------ | -----------\n| 0      | 15           | 5            | Version number (ex. \"v1.15\")\n| 15     | 15           | 5            | Length of comments, zero-padded to 5 bytes\n| 30     | 3C           | C            | Comments with a length of C characters\n| 30+3C  | 15           | 5            | Flags (paranoid mode, use keyfiles, etc.)\n| 45+3C  | 48           | 16           | Salt for Argon2\n| 93+3C  | 96           | 32           | Salt for HKDF-SHA3\n| 189+3C | 48           | 16           | IV for Serpent\n| 237+3C | 72           | 24           | Nonce for XChaCha20\n| 309+3C | 192          | 64           | SHA3-512 of encryption key\n| 501+3C | 96           | 32           | SHA3-256 of keyfile key\n| 597+3C | 192          | 64           | Authentication tag (BLAKE2b/HMAC-SHA3)\n| 789+3C |              |              | Encrypted contents of input data\n\n# Keyfile Design\nPicocrypt allows the use of keyfiles as an additional form of authentication. Picocrypt's unique \"Require correct order\" feature enforces the user to drop keyfiles into the window in the same order as they did when encrypting in order to decrypt the volume successfully. Here's how it works:\n\nIf correct order is not required, Picocrypt will take the SHA3-256 of each keyfile individually and XOR the hashes together. Finally, the result is XORed with the master key. Because the XOR operation is both commutative and associative, the order in which the keyfile hashes are XORed with each other doesn't matter - the end result is the same.\n\nIf correct order is required, Picocrypt will concatenate the keyfiles together in the order they were dropped into the window and take the SHA3-256 of the combined keyfiles. If the order is not correct, the keyfiles, when appended to each other, will result in a different file, and thus a different hash. So, the correct order of keyfiles is required to decrypt the volume successfully.\n\n# Reed-Solomon\nBy default, all Picocrypt volume headers are encoded with Reed-Solomon to improve resiliency against bit rot. The header uses N+2N encoding, where N is the size of a particular header field such as the version number, and 2N is the number of parity bytes added. Using the Berlekamp-Welch algorithm, Picocrypt is able to automatically detect and correct up to 2N/2=N broken bytes.\n\nIf Reed-Solomon is to be used with the input data itself, the data will be encoded using 128+8 encoding, with the data being read in 1 MiB chunks and encoded in 128-byte blocks, and the final block padded to 128 bytes using PKCS#7.\n\nTo address the edge case where the final 128-byte block happens to be padded so that it completes a full 1 MiB chunk, a flag is used to distinguish whether the last 128-byte block was padded originally or if it is just a full 128-byte block of data.\n\n# Deniability\nPlausible deniability in Picocrypt is achieved by simply re-encrypting the volume but without storing any identifiable header data. A new Argon2 salt and XChaCha20 nonce will be generated and stored in the deniable volume, but since both values are random, they don't reveal anything. A deniable volume will look something like this:\n```\n[argon2 salt][xchacha20 nonce][encrypted stream of bytes]\n```\n\n# Just Read the Code\nPicocrypt is a very simple tool and only has one source file. The source Go file is just 2K lines and a lot of the code is dealing with the UI. The core cryptography code is only about 1K lines of code, and even so, a lot of that code deals with the UI and other features of Picocrypt. So if you need more information about how Picocrypt works, just read the code. It's not long, and it is well commented and will explain what happens under the hood better than a document can.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.955078125,
          "content": "# ✨We've Moved!✨\nThis repository has permanently moved to [github.com/Picocrypt](https://github.com/Picocrypt).\n\n# Picocrypt\n\n<p align=\"center\"><img align=\"center\" src=\"/images/logo.svg\" width=\"512\" alt=\"Picocrypt\"></p> \n\nPicocrypt is a very small (hence <i>Pico</i>), very simple, yet very secure encryption tool that you can use to protect your files. It's designed to be the <i>go-to</i> tool for encryption, with a focus on security, simplicity, and reliability. Picocrypt uses the secure XChaCha20 cipher and the Argon2id key derivation function to provide a high level of security, even from three-letter agencies like the NSA. <strong>Your privacy and security is under attack. Take it back with confidence by protecting your files with Picocrypt.</strong>\n\n<br>\n<p align=\"center\"><img align=\"center\" src=\"/images/screenshot.png\" width=\"318\" alt=\"Picocrypt\"></p>\n\n# Downloads\n**Important**: There are multiple entities under the name \"Picocrypt\". For example, there's an old encryption tool called PicoCrypt that uses a broken cipher. There's also an ERC-funded research project called PICOCRYPT. There are even domains related to Picocrypt that I've never registered like picocrypt.com and picocrypt.org. Please don't confuse any of these unrelated (and potentially malicious) projects/domains with Picocrypt (this project). **Make sure to only download Picocrypt from this repository** to ensure that you get the authentic and backdoor-free Picocrypt. When sharing Picocrypt with others, be sure to link to this repository to prevent any confusion.\n\n**Beware of picocrypt.org, which claims to be the official website for this project! Remember, there is no official website for Picocrypt.** Even if this self-proclaimed website is taken down, I will not remove this message; let it be a real-world warning to stay vigilant.\n\n## Windows\nPicocrypt for Windows is as simple as it gets. To download the latest, standalone, and portable executable for Windows, click <a href=\"https://github.com/HACKERALERT/Picocrypt/releases/download/1.33/Picocrypt.exe\">here</a>. If Microsoft Defender or your antivirus flags Picocrypt as a virus, please do your part and submit it as a false positive for the betterment of everyone.\n\nIf you use Picocrypt frequently, you can also download the installable version from <a href=\"https://github.com/HACKERALERT/Picocrypt/releases/download/1.33/Installer.exe\">here</a>, which will install Picocrypt onto your system and add it to your start menu for easy access. The installer also includes extra compatibility helpers, so if the portable executable doesn't work, this likely will.\n\n## macOS\nPicocrypt for macOS is very simple as well. Download Picocrypt for Apple silicon <a href=\"https://github.com/HACKERALERT/Picocrypt/releases/download/1.34/Picocrypt-arm64.dmg\">here</a>, open the container, and drag Picocrypt to your Downloads or Applications. If you can't open Picocrypt because it's not from a verified developer, control-click on Picocrypt and hit Open to bypass the warning. If the app appears to be \"damaged\" and can't be opened, try manually trusting it from a terminal:\n```\nxattr -d com.apple.quarantine /Applications/Picocrypt.app\n```\nNote that Picocrypt requires OpenGL, and may not work in the future if Apple removes it.\n\n## Linux\nTo use Picocrypt on Linux, you can download the raw binary <a href=\"https://github.com/HACKERALERT/Picocrypt/releases/download/1.34/Picocrypt\">here</a>. Alternatively, you can try the <a href=\"https://snapcraft.io/picocrypt\">Snap</a>, run Picocrypt through Wine, or compile from source using the instructions in the `src/` directory.\n\n## CLI\nA command-line interface is available for Picocrypt <a href=\"/cli/v2/picocrypt\">here</a>. It can encrypt and decrypt files, folders, and globs, and supports paranoid mode and Reed-Solomon encoding. You can use it on systems that don't have a GUI or can't run the GUI app, or to write automated shell scripts for backups, etc.\n\n## Web\nA web interface for Picocrypt is available <a href=\"https://picocrypt.pages.dev/\">here</a>, allowing you to use a lite version of Picocrypt on any device. Keep in mind that its functionality is very limited and you won't be able to use any advanced features or encrypt large files. It is also quite slow compared to the native app.\n\n## Paranoid Pack\nThe Paranoid Pack is a compressed archive that contains executables for Windows, macOS, and Linux, including the source code and dependencies. As long as you have it stored in a place you can access, you'll be able to open it and use Picocrypt on any desktop operating system in case this repository mysteriously vanishes or the entire Internet burns down. Think of it as a seed vault for Picocrypt; as long as one person has the Paranoid Pack within reach, they can share it with the rest of the world and keep Picocrypt functional in case of catastrophic events. The best way to ensure Picocrypt is accessible many decades from now is to keep a Paranoid Pack in a safe place. Get your copy <a href=\"https://github.com/HACKERALERT/Picocrypt/releases/download/1.33/Paranoid.zip\">here</a>.\n\n# Why Picocrypt?\nWhy should you use Picocrypt instead of VeraCrypt, 7-Zip, BitLocker, or Cryptomator? Here are a few reasons why you should choose Picocrypt:\n<ul>\n\t<li>Unlike BitLocker and most cloud services, Picocrypt and its dependencies are completely open-source and auditable. You can verify for yourself that there aren't any backdoors or flaws.</li>\n\t<li>Picocrypt is <i>tiny</i>. While Cryptomator is over 50 MiB and VeraCrypt is over 20 MiB, Picocrypt sits at just 3 MiB, about the size of a medium-resolution photo. And that's not all - Picocrypt is portable (doesn't need to be installed) and doesn't require administrator/root privileges.</li>\n\t<li>Picocrypt is easier and more productive to use than VeraCrypt. To encrypt files with VeraCrypt, you'd have to spend a minute or two just setting up a volume. With Picocrypt's simple UI, all you have to do is drag and drop your files, enter a password, and hit Encrypt. All the complex procedures are handled by Picocrypt internally. Who said secure encryption can't be simple?</li>\n\t<li>Picocrypt is designed for security. 7-Zip is an archive utility and not an encryption tool, so its focus is not on security. Picocrypt, however, is built with security as the number one priority. Every part of Picocrypt exists for a reason and anything that could impact the security of Picocrypt is removed. Picocrypt is built with cryptography you can trust.</li>\n\t<li>Picocrypt authenticates data in addition to protecting it, preventing hackers from maliciously modifying sensitive data. This is useful when you are sending encrypted files over an insecure channel and want to be sure that it arrives untouched.</li>\n\t<li>Picocrypt actively protects header data from corruption by adding extra Reed-Solomon parity bytes, so if part of a volume's header (which contains important cryptographic components) corrupts (e.g., hard drive bit rot), Picocrypt can still recover the header and decrypt your data with a high success rate. Picocrypt can also encode the entire volume with Reed-Solomon to prevent any corruption to your important files.</li>\n</ul>\n\n# Comparison\nHere's how Picocrypt compares to other popular encryption tools.\n\n|                | Picocrypt      | VeraCrypt      | 7-Zip GUI      | BitLocker      | Cryptomator    |\n| -------------- | -------------- | -------------- | -------------- | -------------- | -------------- |\n| Free           |✅ Yes         |✅ Yes          |✅ Yes         |✅ Bundled      |✅ Yes         |\n| Open Source    |✅ GPLv3       |✅ Multi        |✅ LGPL        |❌ No           |✅ GPLv3       |\n| Cross-Platform |✅ Yes         |✅ Yes          |❌ No          |❌ No           |✅ Yes         |\n| Size           |✅ 3 MiB       |❌ 20 MiB       |✅ 2 MiB       |✅ N/A          |❌ 50 MiB      |\n| Portable       |✅ Yes         |✅ Yes          |❌ No          |✅ Yes          |❌ No          |\n| Permissions    |✅ None        |❌ Admin        |❌ Admin       |❌ Admin        |❌ Admin       |\n| Ease-Of-Use    |✅ Easy        |❌ Hard         |✅ Easy        |✅ Easy         |🟧 Medium      |\n| Cipher         |✅ XChaCha20   |✅ AES-256      |✅ AES-256     |🟧 AES-128      |✅ AES-256     |\n| Key Derivation |✅ Argon2      |🟧 PBKDF2       |❌ SHA-256     |❓ Unknown      |✅ Scrypt      |\n| Data Integrity |✅ Always      |❌ No           |❌ No          |❓ Unknown      |✅ Always      |\n| Deniability    |✅ Supported   |✅ Supported    |❌ No          |❌ No           |❌ No          |\n| Reed-Solomon   |✅ Yes         |❌ No           |❌ No          |❌ No           |❌ No          |\n| Compression    |✅ Yes         |❌ No           |✅ Yes         |✅ Yes          |❌ No          |\n| Telemetry      |✅ None        |✅ None         |✅ None        |❓ Unknown      |✅ None        |\n| Audited        |✅ Yes         |✅ Yes          |❌ No          |❓ Unknown      |✅ Yes         |\n\nKeep in mind that while Picocrypt does most things better than other tools, it's not a one-size-fits-all and doesn't try to be. There are use cases such as full-disk encryption where VeraCrypt and BitLocker would be a better choice. So while Picocrypt is a great choice for the majority of people, you should still do your own research and use what's best for you.\n\n# Features\nPicocrypt is a very simple tool, and most users will intuitively understand how to use it in a few seconds. On a basic level, simply dropping your files, entering a password, and hitting Encrypt is all that's needed to encrypt your files. Dropping the output back into Picocrypt, entering the password, and hitting Decrypt is all that's needed to decrypt those files. Pretty simple, right?\n\nWhile being simple, Picocrypt also strives to be powerful in the hands of knowledgeable and advanced users. Thus, there are some additional options that you may use to suit your needs.\n<ul>\n\t<li><strong>Password generator</strong>: Picocrypt provides a secure password generator that you can use to create cryptographically secure passwords. You can customize the password length, as well as the types of characters to include.</li>\n\t<li><strong>Comments</strong>: Use this to store notes, information, and text along with the file (it won't be encrypted). For example, you can put a description of the file you're encrypting before sending it to someone. When the person you sent it to drops the file into Picocrypt, your description will be shown to that person.</li>\n\t<li><strong>Keyfiles</strong>: Picocrypt supports the use of keyfiles as an additional form of authentication (or the only form of authentication). Any file can be used as a keyfile, and a secure keyfile generator is provided for convenience. Not only can you use multiple keyfiles, but you can also require the correct order of keyfiles to be present for a successful decryption to occur. A particularly good use case of multiple keyfiles is creating a shared volume, where each person holds a keyfile, and all of them (and their keyfiles) must be present to decrypt the shared volume. By checking the \"Require correct order\" box and dropping your keyfile in last, you can also ensure that you'll always be the one clicking the Decrypt button.</li>\n\t<li><strong>Paranoid mode</strong>: Using this mode will encrypt your data with both XChaCha20 and Serpent in a cascade fashion, and use HMAC-SHA3 to authenticate data instead of BLAKE2b. Argon2 parameters will be increased significantly as well. This is recommended for protecting top-secret files and provides the highest level of practical security attainable. For a hacker to break into your encrypted data, both the XChaCha20 cipher and the Serpent cipher must be broken, assuming you've chosen a good password. It's safe to say that in this mode, your files are impossible to crack. Keep in mind, however, that this mode is slower and isn't really necessary unless you're a government agent with classified data or a whistleblower under threat.</li>\n\t<li><strong>Reed-Solomon</strong>: This feature is very useful if you are planning to archive important data on a cloud provider or external medium for a long time. If checked, Picocrypt will use the Reed-Solomon error correction code to add 8 extra bytes for every 128 bytes of data to prevent file corruption. This means that up to ~3% of your file can corrupt and Picocrypt will still be able to correct the errors and decrypt your files with no corruption. Of course, if your file corrupts very badly (e.g., you dropped your hard drive), Picocrypt won't be able to fully recover your files, but it will try its best to recover what it can. Note that this option will slow down encryption and decryption speeds significantly.</li>\n\t<li><strong>Force decrypt</strong>: Picocrypt automatically checks for file integrity upon decryption. If the file has been modified or is corrupted, Picocrypt will automatically delete the output for the user's safety. If you would like to override these safeguards, check this option. Also, if this option is checked and the Reed-Solomon feature was used on the encrypted volume, Picocrypt will attempt to recover as much of the file as possible during decryption.</li>\n\t<li><strong>Split into chunks</strong>: Don't feel like dealing with gargantuan files? No worries! With Picocrypt, you can choose to split your output file into custom-sized chunks, so large files can become more manageable and easier to upload to cloud providers. Simply choose a unit (KiB, MiB, GiB, or TiB) and enter your desired chunk size for that unit. To decrypt the chunks, simply drag one of them into Picocrypt and the chunks will be automatically recombined during decryption.</li>\n\t<li><strong>Compress files</strong>: By default, Picocrypt uses a zip file with no compression to quickly merge files together when encrypting multiple files. If you would like to compress these files, however, simply check this box and the standard Deflate compression algorithm will be applied during encryption.</li>\n\t<li><strong>Deniability</strong>: Picocrypt volumes typically follow an easily recognizable header format. However, if you want to hide the fact that you are encrypting your files, enabling this option will provide you with plausible deniability. The output volume will indistinguishable from a stream of random bytes, and no one can prove it is a volume without the correct password. This can be useful in an authoritarian country where the only way to transport your files safely is if they don't \"exist\" in the first place. Keep in mind that this mode slows down encryption and decryption speeds, requires you to manually rename the volume afterward, renders comments useless, and also voids the extra security precautions of the paranoid mode, so you should only use it if absolutely necessary.</li>\n\t<li><strong>Recursively</strong>: If you want to encrypt and/or decrypt a large set of files individually, this option will tell Picocrypt to go through every recursive file that you drop in and encrypt/decrypt it separately. This is useful, for example, if you are encrypting thousands of large documents and want to be able to decrypt any one of them in particular without having to download and decrypt the entire set of documents. Keep in mind that this is a very complex feature that should only be used if you know what you are doing.</li>\n</ul>\n\n# Security\nFor more information on how Picocrypt handles cryptography, see <a href=\"Internals.md\">Internals</a> for the technical details. If you're worried about the safety of me or this project, let me assure you that this repository won't be hijacked or backdoored. I have 2FA (TOTP) enabled on all accounts with a tie to Picocrypt (GitHub, Reddit, Google, etc.), in addition to full-disk encryption on all of my portable devices. For further hardening, Picocrypt uses my isolated forks of dependencies and I fetch upstream only when I have taken a look at the changes and believe that there aren't any security issues. This means that if a dependency gets hacked or deleted by the author, Picocrypt will be using my fork of it and remain completely unaffected. You can feel confident about using Picocrypt.\n\n## Signatures\nFor the paranoid, Picocrypt is signed with PGP. The fingerprint and public key are listed below.\n\n<pre>B342A744BDEEA57B6A583E33A247E73798946F55</pre>\n<pre>-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEYoGUHxYJKwYBBAHaRw8BAQdAvmQA+pdbDB/ynJxHhNDpz6Sb5tgkNuuNJIvw\nHYwZtqi0CVBpY29jcnlwdIiTBBMWCgA7FiEEs0KnRL3upXtqWD4zokfnN5iUb1UF\nAmKBlB8CGwMFCwkIBwICIgIGFQoJCAsCBBYCAwECHgcCF4AACgkQokfnN5iUb1UZ\nRgEA8jbIsdqCr21DWxcqW/eLlbxRkuA8kflVYvWWUxtVqsUA/jQPSDpvA8rakvaL\nPIbXjQvrAMkEVIc0HbCzLxr1k3sH\n=YFwz\n-----END PGP PUBLIC KEY BLOCK-----</pre>\n\n# Community\nKeep an eye on <a href=\"https://www.reddit.com/r/Picocrypt/\">r/Picocrypt</a>. While I won't be active in this subreddit myself, it's still a great place to ask questions and help one another out, especially if something happens to me or this repository in the future. Remember to only trust this specific subreddit and be aware of hackers that might try to impersonate me on other platforms. I will never ask you for your password, and anyone who does is not me. I will never tell you to download a file from a suspicious link, and anyone who does is not me.\n\n# Donations\nWhen I was actively developing Picocrypt, I accepted donations, but now that Picocrypt is complete and production-ready, there's no need anymore. Instead, take your time and effort to share the love of Picocrypt with others. Donations are nice, but being able to help others is a lot more valuable to me than a few spare dollars. Knowing that Picocrypt is helping people secure their files is plenty enough for me.\n\n# FAQ\n\n**Is Picocrypt accepting new features?**\n\nNo, Picocrypt is considered feature-complete and won't be getting any new features. Unlike other tools which try to constantly add new features (which introduces new bugs and security holes), Picocrypt focuses on just a few core features but does each of them exceptionally well. Remember Picocrypt's ideology: small, simple, and secure.\n\n**Will Android/iOS be supported?**\n\nNo, I don't plan on supporting Android or iOS because they are very different from traditional desktop operating systems and require different toolchains to develop apps for. Due to the nature of open-source software, however, a community-built version of Picocrypt for Android or iOS may appear in the future.\n\n**Why is Picocrypt not updated frequently?**\n\nPeople seem to have the notion that software must be constantly updated to stay relevant and secure. While this may be true for a lot of the software we use today, it is not for Picocrypt. Picocrypt is \"good software\" and good software doesn't need constant updates to remain relevant and secure. Good software will always be good software.\n\n**Does the \"Delete files\" feature shred files?**\n\nNo, it doesn't shred any files and just deletes them as your file manager would. On modern storage mediums like SSDs, there is no such thing as shredding a file since wear leveling makes it impossible to overwrite a particular sector. Thus, to prevent giving users a false sense of security, Picocrypt doesn't include any shredding features at all.\n\n**Is Picocrypt quantum-secure?**\n\nYes, Picocrypt is secure against quantum computers. All of the cryptography used in Picocrypt works off of a private key, and private-key cryptography is considered to be resistant against all current and future developments, including quantum computers.\n\n# Acknowledgements\nA thank you from the bottom of my heart to the significant contributors on Open Collective:\n<ul>\n\t<li>donor39 (backer)</li>\n\t<li>Pokabu (backer)</li>\n\t<li>akp (backer)</li>\n\t<li>Marvin (backer)</li>\n\t<li>Kenichi Nakasaka (backer)</li>\n\t<li>EN (backer)</li>\n\t<li>JC (backer)</li>\n\t<li>Guest ($842)</li>\n\t<li>YellowNight ($818)</li>\n\t<li>evelian ($50)</li>\n\t<li>jp26 ($50)</li>\n\t<li>guest-116103ad ($50)</li>\n\t<li>Guest ($27)</li>\n\t<li>oli ($20)</li>\n\t<li>Bright ($20)</li>\n\t<li>Incognito ($20)</li>\n\t<li>Guest ($20)</li>\n\t<li>Markus ($15)</li>\n\t<li>Tybbs ($10)</li>\n\t<li>N. Chin ($10)</li>\n\t<li>Manjot ($10)</li>\n\t<li>Phil P. ($10)</li>\n\t<li>Raymond ($10)</li>\n\t<li>Cohen ($10)</li>\n\t<li>EuA ($10)</li>\n\t<li>geevade ($10)</li>\n\t<li>Guest ($10)</li>\n\t<li>Hilebrinest ($10)</li>\n\t<li>gabu.gu ($10)</li>\n\t<li>Boat ($10)</li>\n\t<li>Guest ($10)</li>\n</ul>\n<!-- Last updated April 16, 2024 -->\n\nAlso, a huge thanks to the following people who were the first to donate and support Picocrypt:\n<ul>\n\t<li>W.Graham</li>\n\t<li>N. Chin</li>\n\t<li>Manjot</li>\n\t<li>Phil P.</li>\n\t<li>E. Zahard</li>\n</ul>\n\nFinally, thanks to these people/organizations for helping me out when needed:\n<ul>\n\t<li>[ REDACTED ] for helping me create an AppImage for Picocrypt</li>\n\t<li>u/Upstairs-Fishing867 for helping me test PGP signatures</li>\n\t<li>u/greenreddits for constant feedback and support</li>\n\t<li>u/Tall_Escape for helping me test Picocrypt</li>\n\t<li>u/NSABackdoors for doing plenty of testing</li>\n\t<li>@samuel-lucas6 for feedback, suggestions, and support</li>\n\t<li>@AsuxAX and @Minibus93 for testing new features</li>\n\t<li>@mdanish-kh and @stephengillie for WinGet package</li>\n\t<li><a href=\"https://privacyguides.org\">PrivacyGuides</a> for listing Picocrypt</li>\n</ul>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.294921875,
          "content": "# Security Policy\n\nIf you discover a security vulnerability, please email <a href=\"mailto:evansu@duck.com\">me</a>. I don't have any bounties available, but I will put your name on the homepage as a thanks. Please do not post the vulnerability publicly, as it could be exploited by a hacker. Thank you.\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}