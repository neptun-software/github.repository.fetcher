{
  "metadata": {
    "timestamp": 1736567284844,
    "page": 881,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "didi/sharingan",
      "stars": 2315,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.703125,
          "content": ".idea/\n.statsd/\n.vscode/\n*.swp\n*.log\n*.log.*\n\n# example\nexample/example\nexample/example.test\nexample/nohup.out\nexample/recorder/recorder\nexample/replayer/replayer\nexample/replayer/replayer.test\nexample/replayer/example.test\nexample/replayer/example\nexample/replayer/sut.pid\nexample/replayer/sut.log\nexample/replayer/gocov*\nexample/replayer/gocov-html\nexample/replayer/nohup.out\n\n# agent\nrecorder-agent/agent\nrecorder-agent/recorder-agent\nrecorder-agent/agent.log\nrecorder-agent/agent.pid\nreplayer-agent/agent\nreplayer-agent/replayer-agent\nreplayer-agent/agent.log\nreplayer-agent/agent.pid\nreplayer-agent/conf.tar\nreplayer-agent/template.tar\nreplayer-agent/replayer-agent.linux\nreplayer-agent/replayer-agent.mac\n\nvendor/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.146484375,
          "content": "language: go\n\ngo:\n  - 1.13.x\n\nenv:\n  - GO111MODULE=on\n\nscript:\n  - go get ./...\n  - go test ./recorder/...\n  - go test ./replayer/...\n  - sh build.sh\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7705078125,
          "content": "# Contribution Guideline\n\nThanks for considering to contribute this project. All issues and pull requests are highly appreciated.\n\n## Pull Requests\n\nBefore sending pull request to this project, please read and follow guidelines below.\n\n* Branch: We only accept pull request on master branch.\n* Coding style: Follow the coding style used in sharingan.\n* Commit message: Use English and be aware of your spell.\n* Test: Make sure to test your code.\n\nNOTE: We assume all your contribution can be licensed under the [Apache License 2.0](./LICENSE).\n\n## Issues\n\nWe love clearly described issues. :)\n\nFollowing information can help us to resolve the issue faster.\n\n* golang version、os、sharingan version.（eg: go1.10、linux、v1.0.0）\n* Steps to reproduce the issue.\n* Logs or Screenshots.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.5595703125,
          "content": "﻿                              Apache License\r\n \r\n                        Version 2.0, January 2004\r\n \r\n                     http://www.apache.org/licenses/\r\n \r\n \r\n \r\n \r\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n \r\n \r\n \r\n \r\n1. Definitions.\r\n \r\n \r\n \r\n \r\n   \"License\" shall mean the terms and conditions for use, reproduction,\r\n \r\n   and distribution as defined by Sections 1 through 9 of this document.\r\n \r\n \r\n \r\n \r\n   \"Licensor\" shall mean the copyright owner or entity authorized by\r\n \r\n   the copyright owner that is granting the License.\r\n \r\n \r\n \r\n \r\n   \"Legal Entity\" shall mean the union of the acting entity and all\r\n \r\n   other entities that control, are controlled by, or are under common\r\n \r\n   control with that entity. For the purposes of this definition,\r\n \r\n   \"control\" means (i) the power, direct or indirect, to cause the\r\n \r\n   direction or management of such entity, whether by contract or\r\n \r\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n \r\n   outstanding shares, or (iii) beneficial ownership of such entity.\r\n \r\n \r\n \r\n \r\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n \r\n   exercising permissions granted by this License.\r\n \r\n \r\n \r\n \r\n   \"Source\" form shall mean the preferred form for making modifications,\r\n \r\n   including but not limited to software source code, documentation\r\n \r\n   source, and configuration files.\r\n \r\n \r\n \r\n \r\n   \"Object\" form shall mean any form resulting from mechanical\r\n \r\n   transformation or translation of a Source form, including but\r\n \r\n   not limited to compiled object code, generated documentation,\r\n \r\n   and conversions to other media types.\r\n \r\n \r\n \r\n \r\n   \"Work\" shall mean the work of authorship, whether in Source or\r\n \r\n   Object form, made available under the License, as indicated by a\r\n \r\n   copyright notice that is included in or attached to the work\r\n \r\n   (an example is provided in the Appendix below).\r\n \r\n \r\n \r\n \r\n   \"Derivative Works\" shall mean any work, whether in Source or Object\r\n \r\n   form, that is based on (or derived from) the Work and for which the\r\n \r\n   editorial revisions, annotations, elaborations, or other modifications\r\n \r\n   represent, as a whole, an original work of authorship. For the purposes\r\n \r\n   of this License, Derivative Works shall not include works that remain\r\n \r\n   separable from, or merely link (or bind by name) to the interfaces of,\r\n \r\n   the Work and Derivative Works thereof.\r\n \r\n \r\n \r\n \r\n   \"Contribution\" shall mean any work of authorship, including\r\n \r\n   the original version of the Work and any modifications or additions\r\n \r\n   to that Work or Derivative Works thereof, that is intentionally\r\n \r\n   submitted to Licensor for inclusion in the Work by the copyright owner\r\n \r\n   or by an individual or Legal Entity authorized to submit on behalf of\r\n \r\n   the copyright owner. For the purposes of this definition, \"submitted\"\r\n \r\n   means any form of electronic, verbal, or written communication sent\r\n \r\n   to the Licensor or its representatives, including but not limited to\r\n \r\n   communication on electronic mailing lists, source code control systems,\r\n \r\n   and issue tracking systems that are managed by, or on behalf of, the\r\n \r\n   Licensor for the purpose of discussing and improving the Work, but\r\n \r\n   excluding communication that is conspicuously marked or otherwise\r\n \r\n   designated in writing by the copyright owner as \"Not a Contribution.\"\r\n \r\n \r\n \r\n \r\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n \r\n   on behalf of whom a Contribution has been received by Licensor and\r\n \r\n   subsequently incorporated within the Work.\r\n \r\n \r\n \r\n \r\n2. Grant of Copyright License. Subject to the terms and conditions of\r\n \r\n   this License, each Contributor hereby grants to You a perpetual,\r\n \r\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n \r\n   copyright license to reproduce, prepare Derivative Works of,\r\n \r\n   publicly display, publicly perform, sublicense, and distribute the\r\n \r\n   Work and such Derivative Works in Source or Object form.\r\n \r\n \r\n \r\n \r\n3. Grant of Patent License. Subject to the terms and conditions of\r\n \r\n   this License, each Contributor hereby grants to You a perpetual,\r\n \r\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n \r\n   (except as stated in this section) patent license to make, have made,\r\n \r\n   use, offer to sell, sell, import, and otherwise transfer the Work,\r\n \r\n   where such license applies only to those patent claims licensable\r\n \r\n   by such Contributor that are necessarily infringed by their\r\n \r\n   Contribution(s) alone or by combination of their Contribution(s)\r\n \r\n   with the Work to which such Contribution(s) was submitted. If You\r\n \r\n   institute patent litigation against any entity (including a\r\n \r\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n \r\n   or a Contribution incorporated within the Work constitutes direct\r\n \r\n   or contributory patent infringement, then any patent licenses\r\n \r\n   granted to You under this License for that Work shall terminate\r\n \r\n   as of the date such litigation is filed.\r\n \r\n \r\n \r\n \r\n4. Redistribution. You may reproduce and distribute copies of the\r\n \r\n   Work or Derivative Works thereof in any medium, with or without\r\n \r\n   modifications, and in Source or Object form, provided that You\r\n \r\n   meet the following conditions:\r\n \r\n \r\n \r\n \r\n   (a) You must give any other recipients of the Work or\r\n \r\n       Derivative Works a copy of this License; and\r\n \r\n \r\n \r\n \r\n   (b) You must cause any modified files to carry prominent notices\r\n \r\n       stating that You changed the files; and\r\n \r\n \r\n \r\n \r\n   (c) You must retain, in the Source form of any Derivative Works\r\n \r\n       that You distribute, all copyright, patent, trademark, and\r\n \r\n       attribution notices from the Source form of the Work,\r\n \r\n       excluding those notices that do not pertain to any part of\r\n \r\n       the Derivative Works; and\r\n \r\n \r\n \r\n \r\n   (d) If the Work includes a \"NOTICE\" text file as part of its\r\n \r\n       distribution, then any Derivative Works that You distribute must\r\n \r\n       include a readable copy of the attribution notices contained\r\n \r\n       within such NOTICE file, excluding those notices that do not\r\n \r\n       pertain to any part of the Derivative Works, in at least one\r\n \r\n       of the following places: within a NOTICE text file distributed\r\n \r\n       as part of the Derivative Works; within the Source form or\r\n \r\n       documentation, if provided along with the Derivative Works; or,\r\n \r\n       within a display generated by the Derivative Works, if and\r\n \r\n       wherever such third-party notices normally appear. The contents\r\n \r\n       of the NOTICE file are for informational purposes only and\r\n \r\n       do not modify the License. You may add Your own attribution\r\n \r\n       notices within Derivative Works that You distribute, alongside\r\n \r\n       or as an addendum to the NOTICE text from the Work, provided\r\n \r\n       that such additional attribution notices cannot be construed\r\n \r\n       as modifying the License.\r\n \r\n \r\n \r\n \r\n   You may add Your own copyright statement to Your modifications and\r\n \r\n   may provide additional or different license terms and conditions\r\n \r\n   for use, reproduction, or distribution of Your modifications, or\r\n \r\n   for any such Derivative Works as a whole, provided Your use,\r\n \r\n   reproduction, and distribution of the Work otherwise complies with\r\n \r\n   the conditions stated in this License.\r\n \r\n \r\n \r\n \r\n5. Submission of Contributions. Unless You explicitly state otherwise,\r\n \r\n   any Contribution intentionally submitted for inclusion in the Work\r\n \r\n   by You to the Licensor shall be under the terms and conditions of\r\n \r\n   this License, without any additional terms or conditions.\r\n \r\n   Notwithstanding the above, nothing herein shall supersede or modify\r\n \r\n   the terms of any separate license agreement you may have executed\r\n \r\n   with Licensor regarding such Contributions.\r\n \r\n \r\n \r\n \r\n6. Trademarks. This License does not grant permission to use the trade\r\n \r\n   names, trademarks, service marks, or product names of the Licensor,\r\n \r\n   except as required for reasonable and customary use in describing the\r\n \r\n   origin of the Work and reproducing the content of the NOTICE file.\r\n \r\n \r\n \r\n \r\n7. Disclaimer of Warranty. Unless required by applicable law or\r\n \r\n   agreed to in writing, Licensor provides the Work (and each\r\n \r\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n \r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n \r\n   implied, including, without limitation, any warranties or conditions\r\n \r\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n \r\n   PARTICULAR PURPOSE. You are solely responsible for determining the\r\n \r\n   appropriateness of using or redistributing the Work and assume any\r\n \r\n   risks associated with Your exercise of permissions under this License.\r\n \r\n \r\n \r\n \r\n8. Limitation of Liability. In no event and under no legal theory,\r\n \r\n   whether in tort (including negligence), contract, or otherwise,\r\n \r\n   unless required by applicable law (such as deliberate and grossly\r\n \r\n   negligent acts) or agreed to in writing, shall any Contributor be\r\n \r\n   liable to You for damages, including any direct, indirect, special,\r\n \r\n   incidental, or consequential damages of any character arising as a\r\n \r\n   result of this License or out of the use or inability to use the\r\n \r\n   Work (including but not limited to damages for loss of goodwill,\r\n \r\n   work stoppage, computer failure or malfunction, or any and all\r\n \r\n   other commercial damages or losses), even if such Contributor\r\n \r\n   has been advised of the possibility of such damages.\r\n \r\n \r\n \r\n \r\n9. Accepting Warranty or Additional Liability. While redistributing\r\n \r\n   the Work or Derivative Works thereof, You may choose to offer,\r\n \r\n   and charge a fee for, acceptance of support, warranty, indemnity,\r\n \r\n   or other liability obligations and/or rights consistent with this\r\n \r\n   License. However, in accepting such obligations, You may act only\r\n \r\n   on Your own behalf and on Your sole responsibility, not on behalf\r\n \r\n   of any other Contributor, and only if You agree to indemnify,\r\n \r\n   defend, and hold each Contributor harmless for any liability\r\n \r\n   incurred by, or claims asserted against, such Contributor by reason\r\n \r\n   of your accepting any such warranty or additional liability.\r\n \r\n \r\n \r\n \r\nEND OF TERMS AND CONDITIONS\r\n \r\n \r\n \r\n \r\nAPPENDIX: How to apply the Apache License to your work.\r\n \r\n \r\n \r\n \r\n   To apply the Apache License to your work, attach the following\r\n \r\n   boilerplate notice, with the fields enclosed by brackets \"{}\"\r\n \r\n   replaced with your own identifying information. (Don't include\r\n \r\n   the brackets!)  The text should be enclosed in the appropriate\r\n \r\n   comment syntax for the file format. We also recommend that a\r\n \r\n   file or class name and description of purpose be included on the\r\n \r\n   same \"printed page\" as the copyright notice for easier\r\n \r\n   identification within third-party archives.\r\n \r\n \r\n \r\n \r\nCopyright (C) 2017 Beijing Didi Infinity Technology and Development Co.,Ltd. All rights reserved.\r\n \r\n \r\n \r\n \r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\n \r\nyou may not use this file except in compliance with the License.\r\n \r\nYou may obtain a copy of the License at\r\n \r\n \r\n \r\n \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n \r\n \r\n \r\n \r\nUnless required by applicable law or agreed to in writing, software\r\n \r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\n \r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n \r\nSee the License for the specific language governing permissions and\r\n \r\nlimitations under the License.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.1689453125,
          "content": "# Sharingan\n\n[![Build Status](https://www.travis-ci.org/didi/sharingan.svg?branch=master)](https://www.travis-ci.org/didi/sharingan)\n[![Gitter](https://badges.gitter.im/didi-sharingan/community.svg)](https://gitter.im/didi-sharingan/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/didi/sharingan/blob/master/LICENSE)\n[![GoDoc](https://godoc.org/github.com/didi/sharingan?status.svg)](https://godoc.org/github.com/didi/sharingan)\n\n<div align=\"center\">\n    <img alt=\"Sharingan\" src=\"https://dpubstatic.udache.com/static/dpubimg/614bd23f-b9dc-4225-9e39-76373edc35cf.png\" width=\"150\">\n</div>\n\nSharingan，中文名：写轮眼，是漫画《火影忍者》中的一种瞳术，具有复制、幻术等能力，在幻术世界里，一切因素包括时间，地点，质量等，都由施术者掌控。\n\n## 一、简介\n\nSharingan是一个基于golang的流量录制回放工具，录制线上真实请求流量进行回放测试，适合项目重构、回归测试等。\n\n### 1.1、背景\n\n随着微服务架构的兴起，服务之间的依赖关系变的越来越复杂，软件测试也面临新的挑战：系统升级频繁、服务依赖众多等等。\n\n* 常见的测试方案（如：单元测试、系统测试等）构造和维护测试用例成本高，特别是业务复杂的场景。「构造测试数据**难**」\n* 依赖第三方服务众多，线下测试环境不太稳定，经常出现下游服务不可用导致测试失败的情况发生。「维护测试环境成本**高**」\n\n为此，我们需要开发一套工具来缓解上述问题。\n\n### 1.2、方案\n\n* 录制线上服务真实请求流量（包括下游调用流量），在线下进行回放，解决构造测试数据难的问题。「复制能力」\n* 回放的时候匹配Mock下游调用，不再依赖具体的下游服务，解决维护测试环境成本高的问题。「幻术能力」\n\n### 1.3、特性\n\n* 支持下游流量录制。相比[tcpcopy](https://github.com/session-replay-tools/tcpcopy)、[goreplay](https://github.com/buger/goreplay)等方案，回放不依赖下游环境。\n* 支持并发流量录制和回放。录制对服务影响小，回放速度更快。\n* 支持时间重置、噪音去除、批量回放、覆盖率报告、常见协议解析等等。\n* 支持写流量回放，不会污染应用数据。\n* 不依赖业务框架，低应用浸入。\n\n## 二、快速开始\n\n### 2.1、使用示例\n\n```shell\n# Step1: 下载sharingan项目\n$ git clone https://github.com/didi/sharingan.git\n$ cd sharingan\n\n# Step2: 使用定制版golang，以go1.13为例「慢？科学上网试试」\n$ sudo sh install.sh go1.13 # 支持go1.10 ~ go1.15，限mac、linux、amd64「执行出错？请查看底部常见问题」\n$ export GOROOT=/tmp/recorder-go1.13\n$ export PATH=$GOROOT/bin:$PATH\n\n# Step3: 编译、后台启动replayer-agent「默认会占用3515、8998端口，可修改」\n# [回放接入文档]内有直接下载bin文件的链接，无需build\n$ cd replayer-agent\n$ go build\n$ nohup ./replayer-agent >> run.log 2>&1 &\n\n# Step4: 编译、后台启动example示例「默认会占用9999端口，可修改」\n$ cd ../example\n$ go build -tags=\"replayer\" -gcflags=\"all=-N -l\"\n$ nohup ./example >> run.log 2>&1 &\n\n# Step5: 打开回放页面\n$ 浏览器打开，http://127.0.0.1:8998 # 非本机替换IP即可\n$ 页面选择要回放的流量点执行          # 内置提前录制好的3条example示例流量\n```\n\n### 2.2、接入文档\n\n* [录制接入文档](./doc/recorder/README.md) 「先录制」\n* [回放接入文档](./doc/replayer/README.md) 「后回放」\n\n## 三、技术方案\n\n### 3.1、模块划分\n\n* recorder: 流量录制模块，录制流量本地文件存储、发送流量到录制agent等。\n* recorder-agent：流量录制agent，单独进程启动，控制录制比例、流量存储等。\n* replayer: 流量回放模块，重定向连接到Mock Server、Mock时间、添加流量标识等。\n* replayer-agent：流量回放agent，单独进程启动，查询流量、查询/上报噪音、流量diff、批量回放、生成覆盖率报告等。\n\n### 3.2、整体架构图\n\n![架构图](http://img-hxy021.didistatic.com/static/sharingan/arch_v2.png)\n\n### 3.3、录制方案\n\n* 修改golang源码，对外暴露Hook接口。「所有改动通过官方测试用例」\n* 提供API串联不同goroutine之间的网络调用。「常见的http、mysql、redis流量都不需要特别设置」\n* 提供单独的agent筛选流量、控制比例。\n* 更多参考：[流量录制实现原理](https://github.com/didi/sharingan/wiki/%E6%B5%81%E9%87%8F%E5%BD%95%E5%88%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86)。\n\n### 3.4、回放方案\n\n* 连接重定向：将服务所有Connect网络调用重定向到Mock Server。「安装replayer-agent时候自带」\n* 流量匹配：Mock Server会根据服务真实的下游请求匹配一个返回。「mock下游调用」\n* 时间重置：将程序执行时间回退到录制执行时刻，尽量避免时间因素带来的干扰。\n* 噪音去除：提供API可以将已知的噪音流量去掉，如：traceID，每次请求本来就不一样。\n* 常见协议解析：会解析http、mysql、redis、thrift等协议，方便diff对比。\n* 更多参考：[流量回放实现原理](https://github.com/didi/sharingan/wiki/%E6%B5%81%E9%87%8F%E5%9B%9E%E6%94%BE%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86)。\n\n## 四、演进之路\n\n关于流量录制和回放，在内部进行过多次探索，主要经历下面三个阶段：\n\n### 4.1、月光宝盒（串行录制、串行回放）\n\n录制：利用tcpdump录制流量，改造router层将请求串行化，利用时间来分割请求。\n\n回放：利用iptables转发流量到mock服务，匹配请求并mock返回。支持时间重置、流量对比等。\n\n不足：录制流量覆盖率低，一次只能录制一个请求。iptables转发，噪音干扰严重。\n\n### 4.2、Fastdev（并行录制、串行回放）\n\n录制：改造golang源码，利用goroutine+工作委托技术串联区分请求。[链路追踪原理](https://github.com/didi/sharingan/wiki/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA)\n\n回放：利用mock库重定向connect系统调用，转发流量到mock服务。支持Dashboard、噪音去除等。[monkey mock原理](https://bou.ke/blog/monkey-patching-in-go/)\n\n不足：录制接口和实现混合，golang多版本支持困难。不支持并发回放，启动阶段流量无法代理会失败，定时任务流量干扰严重。\n\n### 4.3、Sharingan（并行录制、并行回放）\n\n录制：接口和实现分离，golang源码改造部分只暴露接口，具体录制实现单独提供包支持。确保golang源码改动通过官方测试，支持1.10~1.14所有版本；优化录制服务性能。\n\n回放：添加流量标识，支持并发回放；支持启动阶段流量代理；利用定制版golang，消除定时任务流量干扰；时间重置不再依赖本地文件，支持replayer-agent单独部署；支持常见协议解析。\n\n## 五、效果展示\n\n### 5.1、流量回放\n\n#### 5.1.1、单个回放\n\n![单个回放](http://img-hxy021.didistatic.com/static/sharingan/replayer_s_v2.png)\n\n对于下游请求很多且复杂的情况，支持对下游协议进行筛选\n![单个回放-协议刷选](http://img-hxy021.didistatic.com/static/sharingan/protocol_v2.png)\n\n#### 5.1.2、批量回放\n\n批量回放的并发度默认是10，可通过增加[-parallel](https://github.com/didi/sharingan/blob/master/replayer-agent/control.sh#L160)参数修改。\n![批量回放](http://img-hxy021.didistatic.com/static/sharingan/replayer_p_v2.png)\n\n### 5.2、覆盖率报告\n\n#### 5.2.1、整体报告\n\n覆盖率报告支持覆盖率结果累计，即支持 多次 单个回放和批量回放后，统一生成覆盖率结果。\n![整体报告](http://img-hxy021.didistatic.com/static/sharingan/codeCover_v2.png)\n\n#### 5.2.1、覆盖详情\n\n![覆盖详情](http://img-hxy021.didistatic.com/static/sharingan/codeCover_detail_v2.png)\n\n## 六、更多\n\n### 6.1、如何贡献\n\n欢迎大家参与进来，更多参考[Contribute](./CONTRIBUTING.md)。\n\n### 6.2、许可\n\n基于Apache-2.0协议进行分发和使用，更多参考[LICENSE](./LICENSE)。\n\n### 6.3、成员\n\n[hueng](https://github.com/hueng)、[yj20060714](https://github.com/yj20060714)、[qiaodandedidi](https://github.com/qiaodandedidi)、[bikong0411](https://github.com/bikong0411)、[plpan](https://github.com/plpan)、[fzl-yty](https://github.com/fzl-yty)。\n\n### 6.4、感谢\n\n特别感谢[TaoWen](https://github.com/taowen) ，流量录制和回放初版设计者，为后续开源奠定了很好的基础。\n\n### 6.5、联系我们\n\n* 微信交流群 【加管理员微信，拉进交流群】\n\n![WEIXIN](http://img-ys011.didistatic.com/static/dhack_wakeup/weixin_sharingan_v3.jpg)\n\n## 七、常见问题\n\n- 执行 `$ sudo sh install.sh go1.13` 提示 `wget: command not found...`\n\n  - 使用 [brew](http://brew.sh/)\n  ```shell\n  # 首先安装 brew\n  $ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n  # 然后用 `brew` 安装 `wget`：\n  $ brew install wget\n  ```\n  - 使用 [MacPorts](https://www.macports.org/install.php)\n  ```shell\n  # 下载并运行上述连接中安装包后\n  $ sudo port install wget\n  ```"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.8154296875,
          "content": "#!/bin/bash\n\nworkspace=$(cd $(dirname $0) && pwd -P)\ninfo_msg=\"\\033[;32m[INFO]\\033[0m\\t\"\n\necho \"${info_msg}-> install go1.13\"\ncurl -s https://raw.githubusercontent.com/didi/sharingan-go/recorder/install/go1.13 | sh > /dev/null 2>&1\nexport GOROOT=/tmp/recorder-go1.13\nexport PATH=$GOROOT/bin:$PATH\n\ncd ${workspace}/example\necho \"${info_msg}-> build example with recorder tag\"\ngo build -tags=\"recorder\"\nif [ $? -ne 0 ]; then\n    exit 1\nfi\n\ncd ${workspace}/example\necho \"${info_msg}-> build example with replayer tag\"\ngo build -tags=\"replayer\" -gcflags=\"all=-N -l\"\nif [ $? -ne 0 ]; then\n    exit 1\nfi\n\ncd ${workspace}/recorder-agent\necho \"${info_msg}-> build recorder-agent\"\ngo build\nif [ $? -ne 0 ]; then\n    exit 1\nfi\n\ncd ${workspace}/replayer-agent\necho \"${info_msg}-> build replayer-agent\"\ngo build\nif [ $? -ne 0 ]; then\n    exit 1\nfi"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_test.go",
          "type": "blob",
          "size": 0.3583984375,
          "content": "package sharingan_test\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/didi/sharingan\"\n)\n\nfunc Example() {\n\tdoneChan := make(chan bool)\n\n\tgo func(delegatedID int64) {\n\t\tsharingan.SetDelegatedFromGoRoutineID(delegatedID)\n\t\tdefer sharingan.SetDelegatedFromGoRoutineID(0)\n\n\t\thttp.Get(\"http://127.0.0.1:8888\")\n\n\t\tdoneChan <- true\n\t}(sharingan.GetCurrentGoRoutineID())\n\n\t<-doneChan\n}\n"
        },
        {
          "name": "glide.lock",
          "type": "blob",
          "size": 4.52734375,
          "content": "hash: 55784f2dc1f431f989c78993f31b4ccbaffd2f2f9b83cd0b15db9bd3d6e51674\nupdated: 2020-05-03T15:26:16.81662534+08:00\nimports:\n- name: github.com/agiledragon/gomonkey\n  version: 0efac5c532e56ba54d129124fc3e76e8b863b214\n- name: github.com/fsnotify/fsnotify\n  version: c2828203cd70a50dcccfb2761f8b1f8ceef9a8e9\n- name: github.com/golang/protobuf\n  version: 1b794fe86dd6a0c7c52ae69b5c9cb0aeedc52afa\n  subpackages:\n  - proto\n- name: github.com/google/gopacket\n  version: 6d3e2615da4ed2ed2a349918fe74e7e6d03482fa\n  subpackages:\n  - layers\n- name: github.com/hashicorp/hcl\n  version: 8cb6e5b959231cc1119e43259c4a608f9c51a241\n  subpackages:\n  - hcl/ast\n  - hcl/parser\n  - hcl/printer\n  - hcl/scanner\n  - hcl/strconv\n  - hcl/token\n  - json/parser\n  - json/scanner\n  - json/token\n- name: github.com/json-iterator/go\n  version: acfec88f7a0d5140ace3dcdbee10184e3684a9e1\n- name: github.com/juju/ratelimit\n  version: 59fac5042749a5afb9af70e813da1dd5474f0167\n- name: github.com/julienschmidt/httprouter\n  version: 4eec211fa4e8df74ed978dc5681612131854144f\n- name: github.com/lestrrat-go/file-rotatelogs\n  version: e0a88b0fe8408240e1560882fc17cb0bf66765cd\n  subpackages:\n  - internal/option\n- name: github.com/lestrrat-go/strftime\n  version: 6b63b6de4db1514785520f626319d12516ee6932\n- name: github.com/magiconair/properties\n  version: de8848e004dd33dc07a2947b3d76f618a7fc7ef1\n- name: github.com/mitchellh/mapstructure\n  version: 3536a929edddb9a5b34bd6861dc4a9647cb459fe\n- name: github.com/modern-go/concurrent\n  version: bacd9c7ef1dd9b15be4a9909b8ac7a4e313eec94\n- name: github.com/modern-go/parse\n  version: df475295147b722b8485fca53839e17290e7de7d\n  subpackages:\n  - model\n  - read\n- name: github.com/modern-go/reflect2\n  version: 94122c33edd36123c84d5368cfb2b69df93a0ec8\n- name: github.com/pelletier/go-toml\n  version: c01d1270ff3e442a8a57cddc1c92dc1138598194\n- name: github.com/pkg/errors\n  version: 614d223910a179a466c1767a985424175c39b465\n- name: github.com/ppltools/binding\n  version: a6ba4005d4f84a72c9a8329c7f9c5521ec5c2636\n- name: github.com/spf13/afero\n  version: d40851caa0d747393da1ffb28f7f9d8b4eeffebd\n  subpackages:\n  - mem\n- name: github.com/spf13/cast\n  version: 8c9545af88b134710ab1cd196795e7f2388358d7\n- name: github.com/spf13/jwalterweatherman\n  version: 4a4406e478ca629068e7768fc33f3f044173c0a6\n- name: github.com/spf13/pflag\n  version: 298182f68c66c05229eb03ac171abe6e309ee79a\n- name: github.com/spf13/viper\n  version: 59b19175035095196a623aac8d0f5c83481f3d77\n- name: github.com/subosito/gotenv\n  version: 2ef7124db659d49edac6aa459693a15ae36c671a\n- name: github.com/ugorji/go\n  version: 23ab95ef5dc3b70286760af84ce2327a2b64ed62\n  subpackages:\n  - codec\n- name: github.com/v2pro/plz\n  version: 03cb46d336e021ccc579800e033a9a48d09a87d0\n  subpackages:\n  - countlog\n- name: go.uber.org/atomic\n  version: df976f2515e274675050de7b3f42545de80594fd\n- name: go.uber.org/multierr\n  version: 3c4937480c32f4c13a875a1829af76c98ca3d40a\n- name: go.uber.org/zap\n  version: feeb9a050b31b40eec6f2470e7599eeeadfe5bdd\n  subpackages:\n  - buffer\n  - internal/bufferpool\n  - internal/color\n  - internal/exit\n  - zapcore\n- name: golang.org/x/sys\n  version: 1f5687305801d4db70d30c51ccc82bf644f9e4d6\n  subpackages:\n  - unix\n- name: golang.org/x/text\n  version: 342b2e1fbaa52c93f31447ad2c6abc048c63e475\n  subpackages:\n  - transform\n  - unicode/norm\n- name: google.golang.org/protobuf\n  version: 3b9eee12916ce611400f93d6c2fed2fc2911b0ad\n  subpackages:\n  - encoding/prototext\n  - encoding/protowire\n  - internal/descfmt\n  - internal/descopts\n  - internal/detrand\n  - internal/encoding/defval\n  - internal/encoding/messageset\n  - internal/encoding/tag\n  - internal/encoding/text\n  - internal/errors\n  - internal/fieldnum\n  - internal/fieldsort\n  - internal/filedesc\n  - internal/filetype\n  - internal/flags\n  - internal/genname\n  - internal/impl\n  - internal/mapsort\n  - internal/pragma\n  - internal/set\n  - internal/strs\n  - internal/version\n  - proto\n  - reflect/protoreflect\n  - reflect/protoregistry\n  - runtime/protoiface\n  - runtime/protoimpl\n- name: gopkg.in/go-playground/validator.v8\n  version: 5f57d2222ad794d0dffb07e664ea05e2ee07d60c\n- name: gopkg.in/ini.v1\n  version: 87e589f4917038ae250cff2446db7573f47e97ca\n- name: gopkg.in/yaml.v2\n  version: f221b8435cfb71e54062f6c6e99e9ade30b124d5\ntestImports:\n- name: github.com/davecgh/go-spew\n  version: 8991bc29aa16c548c550c7ff78260e27b9ab7c73\n  subpackages:\n  - spew\n- name: github.com/pmezard/go-difflib\n  version: 792786c7400a136282c1664665ae0a8db921c6c2\n  subpackages:\n  - difflib\n- name: github.com/stretchr/testify\n  version: 3ebf1ddaeb260c4b1ae502a01c7844fa8c1fa0e9\n  subpackages:\n  - assert\n  - require\n"
        },
        {
          "name": "glide.yaml",
          "type": "blob",
          "size": 0.9912109375,
          "content": "package: github.com/didi/sharingan\nimport:\n- package: github.com/agiledragon/gomonkey\n  version: ^2.0.1\n- package: github.com/google/gopacket\n  version: ^1.1.17\n  subpackages:\n  - layers\n- package: github.com/json-iterator/go\n  version: ^1.1.9\n- package: github.com/juju/ratelimit\n  version: ^1.0.1\n- package: github.com/julienschmidt/httprouter\n  version: ^1.3.0\n- package: github.com/lestrrat-go/file-rotatelogs\n  version: ^2.3.0\n- package: github.com/modern-go/parse\n  version: ^0.9.3\n  subpackages:\n  - model\n  - read\n- package: github.com/pkg/errors\n  version: ^0.9.1\n- package: github.com/ppltools/binding\n  version: ^0.0.7\n- package: github.com/spf13/viper\n  version: ^1.6.3\n- package: github.com/v2pro/plz\n  version: 03cb46d336e021ccc579800e033a9a48d09a87d0\n  subpackages:\n  - countlog\n- package: go.uber.org/zap\n  version: ^1.14.1\n  subpackages:\n  - zapcore\n- package: golang.org/x/sys\n  subpackages:\n  - unix\ntestImport:\n- package: github.com/stretchr/testify\n  version: ^1.5.1\n  subpackages:\n  - require\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2783203125,
          "content": "module github.com/didi/sharingan\n\ngo 1.13\n\nrequire (\n\tgithub.com/agiledragon/gomonkey v2.0.1+incompatible\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/stretchr/testify v1.5.1\n\tgithub.com/v2pro/plz v0.0.0-20171129053502-03cb46d336e0\n\tgopkg.in/yaml.v2 v2.2.8 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.671875,
          "content": "github.com/agiledragon/gomonkey v2.0.1+incompatible h1:DIQT3ZshgGz9pTwBddRSZWDutIRPx2d7UzmjzgWo9q0=\ngithub.com/agiledragon/gomonkey v2.0.1+incompatible/go.mod h1:2NGfXu1a80LLr2cmWXGBDaHEjb1idR6+FVlX5T3D9hw=\ngithub.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.5.1 h1:nOGnQDM7FYENwehXlg/kFVnos3rEvtKTjRvOWSzb6H4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/v2pro/plz v0.0.0-20171129053502-03cb46d336e0 h1:iDUJ1dPbPQ3RASxAhSUKSK4xC3YULCMoWbwlnY70md4=\ngithub.com/v2pro/plz v0.0.0-20171129053502-03cb46d336e0/go.mod h1:6xoYDIZTeCY25tlsJC/zNlCh84xCKwBSAXwKF32tdIg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8 h1:obN1ZagJSUGI0Ek/LBmuj4SNLPfIny3KsKFopxRdj10=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n"
        },
        {
          "name": "grpc-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 1.5693359375,
          "content": "#!/bin/bash\n\n# To run this shell script to set $GOROOT; First run will wait a few minutes, keep patience!\n#   `sh install.sh go1.13`\n#   `export GOROOT=/tmp/recorder-go1.13`\n#   `export PATH=${GOROOT}/bin:${PATH}`\n\n# set msg\ninfo_msg=\"\\033[;32m[INFO]\\033[0m\\t\"\nwarn_msg=\"\\033[;33m[WARN]\\033[0m\\t\"\nerror_msg=\"\\033[;31m[ERROR]\\033[0m\\t\"\n\n# only support amd64\nif [ `getconf LONG_BIT` != \"64\" ] ; then\n    printf \"${warn_msg}-> only support amd64!!!\\n\"\n    exit\nfi\n\n# nead version param\nif [ ! -n \"$1\" ] ; then\n    printf \"${warn_msg}-> please input version!!!\\n\"\n    printf \"${info_msg}--> usage: sh install.sh go1.13\\n\"\n    exit\nfi\n\n# only support go1.10 ~ go1.15\nif [ \"$1\" != \"go1.10\" ] && [ \"$1\" != \"go1.11\" ] && [ \"$1\" != \"go1.12\" ] && [ \"$1\" != \"go1.13\" ] && [ \"$1\" != \"go1.14\" ] && [ \"$1\" != \"go1.15\" ]; then\n    printf \"${warn_msg}-> only support go1.10 ~ go1.15!!!\\n\"\n    printf \"${info_msg}--> usage: sh install.sh go1.13\\n\"\n    exit\nfi\n\nfunction install(){\n    VERSION=$1\n\n    # base set\n    GIT_URL=\"https://github.com/didi/sharingan-go\"\n\n    # param\n    uname=`uname`\n    uname=`echo $uname | tr '[:upper:]' '[:lower:]'`\n    file_name=${VERSION}.${uname}-amd64\n    recorder_dir=/tmp/recorder-${VERSION}\n    should_update=true\n\n    rm -rf ${recorder_dir} && mkdir -p ${recorder_dir}\n    tmp_file=${recorder_dir}.tar.gz\n\n    # download\n    download_url=${GIT_URL}/releases/download/${VERSION}.recorder/${file_name}.tar.gz\n    wget ${download_url} -O ${tmp_file}\n\n    # tar && set version\n    tar -xzf ${tmp_file} -C ${recorder_dir} --strip-components=1\n\n    # rm\n    rm -rf ${tmp_file}\n}\n\ninstall $1\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "recorder-agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "recorder",
          "type": "tree",
          "content": null
        },
        {
          "name": "replayer-agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "replayer",
          "type": "tree",
          "content": null
        },
        {
          "name": "tag_with_origin.go",
          "type": "blob",
          "size": 0.376953125,
          "content": "// +build !recorder\n// +build !recorder_grpc\n// +build !replayer\n\npackage sharingan\n\n// GetCurrentGoRoutineID get current goroutineID incase SetDelegatedFromGoRoutineID\nfunc GetCurrentGoRoutineID() int64 {\n\treturn 0\n}\n\n// SetDelegatedFromGoRoutineID should be used when this goroutine is doing work for another goroutine\nfunc SetDelegatedFromGoRoutineID(gID int64) {\n}\n\nfunc init() {\n}\n"
        },
        {
          "name": "tag_with_recorder.go",
          "type": "blob",
          "size": 0.931640625,
          "content": "// +build recorder\n\npackage sharingan\n\nimport (\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/didi/sharingan/plugins\"\n\t\"github.com/didi/sharingan/recorder\"\n\t\"github.com/didi/sharingan/recorder/koala/hook\"\n\t\"github.com/didi/sharingan/recorder/koala/logger\"\n\t\"github.com/didi/sharingan/recorder/koala/sut\"\n)\n\n// GetCurrentGoRoutineID get current goroutineID incase SetDelegatedFromGoRoutineID\nfunc GetCurrentGoRoutineID() int64 {\n\treturn recorder.GetCurrentGoRoutineID()\n}\n\n// SetDelegatedFromGoRoutineID should be used when this goroutine is doing work for another goroutine\nfunc SetDelegatedFromGoRoutineID(gID int64) {\n\trecorder.SetDelegatedFromGoRoutineID(gID)\n}\n\nfunc init() {\n\tif os.Getenv(\"RECORDER_ENABLED\") != \"true\" {\n\t\treturn\n\t}\n\n\t// init logger\n\tlogger.Init()\n\n\t// init plugin && start recorder\n\tplugins.InitRecorderPlugin()\n\tplugins.StartRecorder()\n\n\t// start hook\n\thook.Start()\n\n\t// start gc\n\tsut.StartGC()\n\n\t// log\n\tlog.Println(\"mode\", \"=====recorder=====\")\n}\n"
        },
        {
          "name": "tag_with_recorder_grpc.go",
          "type": "blob",
          "size": 1.0693359375,
          "content": "// +build recorder_grpc\n\npackage sharingan\n\nimport (\n\t\"context\"\n\t\"log\"\n\t\"os\"\n\t\"runtime\"\n\n\trecorderPKG \"github.com/didi/sharingan/recorder\"\n\t\"github.com/didi/sharingan/recorder/koala_grpc/hook\"\n\t\"github.com/didi/sharingan/recorder/koala_grpc/logger\"\n\t\"github.com/didi/sharingan/recorder/koala_grpc/recording\"\n)\n\n// GetCurrentGoRoutineID GetCurrentGoRoutineID\nfunc GetCurrentGoRoutineID() int64 {\n\treturn runtime.GetCurrentGoRoutineId()\n}\n\n// SetDelegatedFromGoRoutineID SetDelegatedFromGoRoutineID\nfunc SetDelegatedFromGoRoutineID(gID int64) {\n\truntime.SetDelegatedFromGoRoutineId(gID)\n}\n\nfunc init() {\n\tif os.Getenv(\"RECORDER_ENABLED\") != \"true\" {\n\t\treturn\n\t}\n\n\t// set recorder\n\trecorder := recording.NewAsyncRecorder(recorderPKG.NewRecorderGrpc())\n\trecorder.Context = context.Background()\n\trecorder.Start()\n\trecording.Recorders = append(recording.Recorders, recorder)\n\n\t// set action which should record\n\trecording.ShouldRecordAction = recorderPKG.ShouldRecordActionGrpc\n\n\t// setup logger\n\tlogger.Setup()\n\n\t// start hook\n\thook.Start()\n\n\t// log\n\tlog.Println(\"mode\", \"=====grpc recorder=====\")\n}\n"
        },
        {
          "name": "tag_with_replayer.go",
          "type": "blob",
          "size": 0.59375,
          "content": "// +build replayer\n\npackage sharingan\n\nimport (\n\t\"log\"\n\n\t\"github.com/didi/sharingan/replayer\"\n\t\"github.com/didi/sharingan/replayer/fastmock\"\n)\n\n// GetCurrentGoRoutineID get current goroutineID incase SetDelegatedFromGoRoutineID\nfunc GetCurrentGoRoutineID() int64 {\n\treturn replayer.GetCurrentGoRoutineID()\n}\n\n// SetDelegatedFromGoRoutineID should be used when this goroutine is doing work for another goroutine\nfunc SetDelegatedFromGoRoutineID(gID int64) {\n\treplayer.SetDelegatedFromGoRoutineID(gID)\n}\n\nfunc init() {\n\tfastmock.MockSyscall()\n\tfastmock.MockTime()\n\n\tlog.Println(\"mode\", \"=====replayer=====\")\n}\n"
        }
      ]
    }
  ]
}