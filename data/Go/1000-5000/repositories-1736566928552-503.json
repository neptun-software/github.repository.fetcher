{
  "metadata": {
    "timestamp": 1736566928552,
    "page": 503,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/differential-privacy",
      "stars": 3099,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.8095703125,
          "content": "#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Platform specific compiler flags\nbuild --enable_platform_specific_config\nbuild:linux --copt=\"-Wno-sign-compare\" --cxxopt=\"-std=c++17\"\nbuild:macos --copt=\"-Wno-sign-compare\" --cxxopt=\"-std=c++17\"\nbuild:windows --copt=\"/wd4244\" --cxxopt=\"/std:c++17\"\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "6.4.0\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0615234375,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Google\nSortIncludes: false\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.056640625,
          "content": "**/bazel-bin\n**/bazel-java\n**/bazel-out\n**/bazel-testlogs\n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 0.685546875,
          "content": "#\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\"\"\" Additional bazel imports for differential privacy library \"\"\"\n\nexports_files([\n    \"differential_privacy_deps.bzl\",\n])\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.0107421875,
          "content": "# How to Contribute\n\nWe are happy to accept contributions to this project. Please follow these\nguidelines when sending us a pull request.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n## Community Guidelines\n\nThis project follows\n[Google's Open Source Community Guidelines](https://opensource.google.com/conduct/).\n\n## Does my new feature belong here?\n\nWe use the following principles to guide what we add to our libraries. If your\ncontribution doesn't align with these principles, we're likely to decline.\n\n* **Simplicity over completeness:** the libraries should provide simple features\nwhich are easy to use, such as noise generation and aggregation functions. To be\nconsidered for inclusion into the library, a feature's usefulness will be\nweighed against the technical complexity it adds to the library. Very basic\noperations like noise addition should stay as simple as possible.\n* **Simplicity over consistency:** given the language differences, we\nacknowledge that the exact interfaces may differ between C++, Java, Python and\nGo. We will try to keep the overall API and architecture consistent between the\nlanguages, but will prioritize idiomatic interfaces over strict consistency.\n* **Support for distributed calculations:** all functions requiring aggregations\nmust offer an API that lets them be used in large-scale parallel computing\nframeworks.\n* **Fine building blocks over large aggregates:** one should be able to\nuse sub-operations like noise generation and bounds approximation separately\nfrom aggregation functions.\n* **Unbiasedness:** aggregations should be unbiased if possible. In particular,\nwe prefer unbiased aggregations over aggregations that post process results for\nconsistency reasons (e.g. we do not clipp negative count values to 0 as this\nwould introduce bias). However, we may use biased aggregations if an unbiased\nsolution is not known, provides inferior utility, does not support distributed\ncomputation or is significantly more complex to understand/implement/maintain.\nThe library should clearly indicate which aggregations are unbiased and test for\nthis property.\n* **Robust Testing:** each feature must come with a full set of unit tests, and\nthe privacy guarantees must be tested end-to-end.\n* Markdown is preferred for explaining complex concepts and math over lengthy\ncode documentation.\n\nIf you're uncertain whether a planned contribution fits with these principles,\n[open an issue](https://github.com/google/differential-privacy/issues/new)\nand describe what you want to add. We'll let you know whether it's something we\nwant to include and will help you figure out the best way to implement it.\n\n## Guidelines for pull requests\n\n* For large or speculative changes, or significant new functionality, please\n[open an issue](https://github.com/google/differential-privacy/issues/new)\nfirst and discuss your idea with us.\n* If you are a Googler, it is preferable to create an internal CL and have\nit reviewed and submitted. The code publication process will deliver the change\nto GitHub. If you want to discuss your changes with us, please open an issue in\nthe GitHub project.\n* Create small PRs that are narrowly focused on addressing a single concern.\nSmall PRs are easier to review, and less likely to see one change get held up\ndue to problems with an unrelated change in the same PR.\n* Code should follow the\n[Google style guide](https://google.github.io/styleguide/) in the relevant\nlanguage.\n* Provide a good PR description as a record of what change is being made and\nwhy. Link to a GitHub issue if it exists.\n* Don't fix code style and formatting unless you are already changing that line\nto address an issue. PRs with irrelevant changes won't be merged. If you do want\nto fix formatting or style, do that in a separate PR.\n* Unless your PR is trivial, you should expect there will be reviewer comments\nthat you'll need to address before merging. We expect you to be reasonably\nresponsive to those comments, otherwise the PR will be closed after 2-3 weeks of\ninactivity.\n* Maintain clean commit history and use meaningful commit messages. PRs with\nmessy commit history are difficult to review and won't be merged. Use\n`rebase -i upstream/main` to curate your commit history and/or to bring in\nlatest changes from main (but avoid rebasing in the middle of a code review).\n* Keep your PR up to date with upstream/head (if there are merge conflicts,\nwe can't really merge your change).\n* All tests need to be passing before your change can be merged. We recommend\nyou run tests locally.\n* All submissions, including submissions by project members, require review.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 13.0205078125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n-------------------------------------------------------------------------------\nFiles: third_party/cephes/*\n\n  Distributed under 3-clause BSD license with permission from the author,\n  see https://lists.debian.org/debian-legal/2004/12/msg00295.html\n\n  Cephes Math Library Release 2.8:  June, 2000\n\n  Copyright 1984, 1995, 2000 by Stephen L. Moshier\n\n  This software is derived from the Cephes Math Library and is\n  incorporated herein by permission of the author.\n\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n      * Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n      * Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n      * Neither the name of the <organization> nor the\n        names of its contributors may be used to endorse or promote products\n        derived from this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.109375,
          "content": "# Differential Privacy\n\n> **Note**<br>\n> If you are unfamiliar with differential privacy (DP), you might want to go through [\"A friendly, non-technical introduction to differential privacy\"](https://desfontain.es/privacy/friendly-intro-to-differential-privacy.html).\n\nThis repository contains libraries to generate ε- and (ε, δ)-differentially\nprivate statistics over datasets. It contains the following tools.\n\n* [Privacy on Beam](privacy-on-beam) is an end-to-end differential privacy\n  framework built on top of [Apache Beam](https://beam.apache.org/documentation/).\n  It is intended to be easy to use, even by non-experts.\n* [PipelineDP4j](pipelinedp4j) is an end-to-end differential privacy framework\n  for JVM languages (Java, Kotlin, Scala). It supports different data\n  processing frameworks such as\n  [Apache Beam](https://beam.apache.org/documentation/) and\n  [Apache Spark](https://spark.apache.org/) (coming soon). It is intended to\n  be easy to use, even by non-experts.\n* Three \"DP building block\" libraries, in [C++](cc), [Go](go), and [Java](java).\n  These libraries implement basic noise addition primitives and differentially\n  private aggregations. Privacy on Beam is implemented using these libraries.\n* A [stochastic tester](cc/testing), used to help catch regressions that could\n  make the differential privacy property no longer hold.\n* A [differential privacy accounting library](python/dp_accounting), used for\n  tracking privacy budget.\n* A [command line interface](examples/zetasql) for running differentially\n  private SQL queries with [ZetaSQL](https://github.com/google/zetasql).\n* [DP Auditorium](python/dp_auditorium) is a library for auditing differential\n  privacy guarantees.\n\nTo get started on generating differentially private data, we recommend you follow\nthe [Privacy on Beam codelab](https://codelabs.developers.google.com/codelabs/privacy-on-beam/).\n\nCurrently, the DP building block libraries support the following algorithms:\n\n| Algorithm                        | C++       | Go        | Java      |\n| :------------------------------- | :-------: | :-------: | :-------: |\n| Laplace mechanism                | Supported | Supported | Supported |\n| Gaussian mechanism               | Supported | Supported | Supported |\n| Count                            | Supported | Supported | Supported |\n| Sum                              | Supported | Supported | Supported |\n| Mean                             | Supported | Supported | Supported |\n| Variance                         | Supported | Supported | Supported |\n| Standard deviation               | Supported | Supported | Planned   |\n| Quantiles                        | Supported | Supported | Supported |\n| Automatic bounds approximation   | Supported | Planned   | Supported |\n| Truncated geometric thresholding | Supported | Supported | Supported |\n| Laplace thresholding             | Supported | Supported | Supported |\n| Gaussian thresholding            | Planned   | Supported | Supported |\n| Pre-thresholding                 | Supported | Supported | Supported |\n\nImplementations of the Laplace mechanism and the Gaussian mechanism use [secure\nnoise generation]. These mechanisms can be used to perform computations that\naren't covered by the algorithms implemented in our libraries.\n\n[secure noise generation]: ./common_docs/Secure_Noise_Generation.pdf\n\nThe DP building block libraries and Privacy on Beam are suitable for research,\nexperimental, or production use cases, while the other tools are currently\nexperimental and subject to change.\n\n## How to Build\n\nIn order to run the differential privacy library, you need to install bazelisk,\nif you don't have it already. Bazelisk manages [Bazel](https://bazel.build/)\nversions and installs correct one.\n[Follow the instructions for your platform on the bazelisk github page](https://github.com/bazelbuild/bazelisk?tab=readme-ov-file#installation)\n\nYou also need to install Git, if you don't have it already.\n[Follow the instructions for your platform on the Git website.](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n\nOnce you've installed bazelisk and Git, open a Terminal and clone the\ndifferential privacy directory into a local folder:\n\n```shell\ngit clone https://github.com/google/differential-privacy.git\n```\n\nNavigate into the `differential-privacy` folder you just created,\nand build the differential privacy library and dependencies using bazelisk\n(note: *...* is a part of the command and not a placeholder):\n\nTo build the C++ library, run:\n```shell\ncd cc\nbazelisk build ...\n```\nTo build the Go library, run:\n```shell\ncd go\nbazelisk build ...\n```\n\nTo build the Java library, run:\n```shell\ncd java\nbazelisk build ...\n```\n\nTo build the PipelineDP4j library, run:\n```shell\ncd pipelinedp4j\nbazelisk build ...\n```\n\nTo build Privacy on Beam, run:\n```shell\ncd privacy-on-beam\nbazelisk build ...\n```\n\nYou may need to install additional dependencies when building the PostgreSQL\nextension, for example on Ubuntu you will need these packages:\n\n```shell\nsudo apt-get install make libreadline-dev bison flex\n```\n\n## Caveats of the DP building block libraries\n\nDifferential privacy requires some bound on maximum number of contributions\neach user can make to a single aggregation. The DP building block libraries\ndon't perform such bounding: their implementation assumes that each user\ncontributes only a fixed number of rows to each partition. That number\ncan be configured by the user. The library neither verifies nor\nenforces this limit; it is the caller's responsibility to pre-process data to\nenforce this.\n\nWe chose not to implement this step at the DP building block level because it\nrequires some *global* operation over the data: group by user, and aggregate or\nsubsample the contributions of each user before passing them on to the DP\nbuilding block aggregators. Given scalability constraints, this pre-processing\nmust be done by a higher-level part of the infrastructure, typically a\ndistributed processing framework: for example, Privacy on Beam relies on Apache\nBeam for this operation.\n\nFor more detail about our approach to building scalable end-to-end differential\nprivacy frameworks, we recommend reading:\n\n1. [Differential privacy computations in data pipelines reference doc](https://github.com/google/differential-privacy/blob/main/common_docs/Differential_Privacy_Computations_In_Data_Pipelines.pdf),\nwhich describes how to build such a system using any data pipeline framework\n(e.g. Apache Beam).\n2. Our\n[paper about differentially private SQL](https://arxiv.org/abs/1909.01917),\nwhich describes such a system. Even though the interface of Privacy on Beam is\ndifferent, it conceptually uses the same framework as the one described in this\npaper.\n\n## Known issues\n\nOur floating-point implementations are subject to the vulnerabilities described\nin [Casacuberta et al. \"Widespread Underestimation of\nSensitivity in Differentially Private Libraries and How to Fix it\"](https://arxiv.org/abs/2207.10635)\n(specifically the rounding, repeated rounding, and re-ordering attacks). These\nvulnerabilities are particularly concerning when an attacker can control some of\nthe contents of a dataset and/or its order. Our integer implementations are not\nsubject to the vulnerabilities described in the paper (though note that Java\ndoes not have an integer implementation).\n\nPlease refer to our [attack model](common_docs/attack_model.md) to learn more\nabout how to use our libraries in a safe way.\n\n## Support\n\nWe will continue to publish updates and improvements to the library. We are\nhappy to accept contributions to this project. Please follow\n[our guidelines](CONTRIBUTING.md) when sending pull requests. We will respond to\nissues filed in this project. If we intend to stop publishing improvements and\nresponding to issues we will publish notice here at least 3 months in advance.\n\n## License\n\n[Apache License 2.0](LICENSE)\n\n## Support Disclaimer\n\nThis is not an officially supported Google product.\n\n## Reach out\n\nWe are always keen on learning about how you use this library and what use cases\nit helps you to solve. We have two communication channels:\n\n  * A [public discussion\n    group](https://groups.google.com/g/dp-open-source-users) where we will also\n    share our preliminary roadmap, updates, events, etc.\n\n  * A private email alias at dp-open-source@google.com where you can reach us\n    directly about your use cases and what more we can do to help.\n\nPlease refrain from sending any personal identifiable information. If you wish\nto delete a message you've previously sent, please contact us.\n\n## Related projects\n\n- [PyDP](https://github.com/OpenMined/PyDP), a Python wrapper of our C++ DP\n  building block library, driven by the [OpenMined](https://www.openmined.org/)\n  open-source community.\n- [PipelineDP](https://github.com/OpenMined/PipelineDP), an end-to-end\n  differential privacy framework (similar to [Privacy on Beam](privacy-on-beam))\n  that works with Apache Beam & Apache Spark in Python, co-developed by Google\n  and [OpenMined](https://www.openmined.org/).\n- [OpenDP](https://opendp.org), a community effort around tools for statistical\n  analysis of sensitive private data.\n- [TensorFlow Privacy](https://github.com/tensorflow/privacy), a library to\n  train machine learning models with differential privacy.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 0.93359375,
          "content": "#\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\"\"\" Workspace for Open Source differential privacy library \"\"\"\n\nworkspace(name = \"com_google_differential_privacy\")\n\n# Differential privacy library dependencies.\nload(\":differential_privacy_deps.bzl\", \"differential_privacy_deps\")\ndifferential_privacy_deps()\n\n# Protobuf transitive dependencies.\nload(\"@com_google_protobuf//:protobuf_deps.bzl\", \"protobuf_deps\")\nprotobuf_deps()\n"
        },
        {
          "name": "cc",
          "type": "tree",
          "content": null
        },
        {
          "name": "common_docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "differential_privacy.md",
          "type": "blob",
          "size": 2.095703125,
          "content": "# Differential privacy\n\nDifferential privacy offers a tradeoff between the accuracy of aggregations over\nstatistical databases (for example, mean) and the chance of learning something about\nindividual records in the database. This tradeoff is an easily configured\nparameter; you can increase privacy by decreasing the accuracy of your statistics\n(or vice versa). Unlike other anonymization schemes (such as k-anonymity) that\ncompletely fail once too much data is released, differential privacy degrades\nslowly when more data is released.\n\nYou can find a very high-level, non-technical introduction to differential\nprivacy in this\n[blog post](https://desfontain.es/privacy/differential-privacy-awesomeness.html),\nand a more detailed explanation of how it works in the book,\n[The Algorithmic Foundations of Differential Privacy](https://www.cis.upenn.edu/~aaroth/Papers/privacybook.pdf)\n(linked as a PDF).\n\nThis library provides a collection of algorithms for computing differentially\nprivate statistics over data. The algorithms are designed to require little\nfancy mathematical knowledge to use; all the math is bundled into them.\n\n# Key definitions\n*A partition* is a subset of the data corresponding to a given value of the\naggregation criterion. Usually we want to aggregate each partition separately.\nFor example, if we count visits to restaurants, the visits for one particular\nrestaurant are a single partition, and the count of visits to that restaurant\nwould be the aggregate for that partition.\n\n*A privacy unit* is an entity that we’re trying to protect with differential\nprivacy. Often, this refers to a single individual. An example of a more complex\nprivacy unit is a person+restaurant pair, which protects all visits by an\nindividual to a particular restaurant or, in other words, the fact that a\nparticular person visited any particular restaurant.\n\n*Contribution bounding* is a process of limiting contributions by a single\nindividual (or an entity represented by a privacy key) to the output dataset\nor its partition. This is key for DP algorithms, since protecting unbounded\ncontributions would require adding infinite noise.\n"
        },
        {
          "name": "differential_privacy_deps.bzl",
          "type": "blob",
          "size": 1.14453125,
          "content": "#\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\"\"\" Declares dependencies of the differential privacy library \"\"\"\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\ndef differential_privacy_deps():\n    \"\"\" Macro to include the differential privacy library's critical dependencies in a WORKSPACE.\n\n    \"\"\"\n\n    # Protobuf\n    http_archive(\n        name = \"com_google_protobuf\",\n        url = \"https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protobuf-all-21.12.tar.gz\",\n        sha256 = \"2c6a36c7b5a55accae063667ef3c55f2642e67476d96d355ff0acb13dbb47f09\",\n        strip_prefix = \"protobuf-21.12\",\n    )\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "learning",
          "type": "tree",
          "content": null
        },
        {
          "name": "pipelinedp4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "privacy-on-beam",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}