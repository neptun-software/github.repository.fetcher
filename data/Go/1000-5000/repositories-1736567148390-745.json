{
  "metadata": {
    "timestamp": 1736567148390,
    "page": 745,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hyper0x/Golang_Puzzlers",
      "stars": 2554,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\npkg/\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# IDE\n.idea/\n.vscode/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.033203125,
          "content": "# Golang_Puzzlers\n\n我在极客时间开设的专栏《Go语言核心36讲》的配套项目，也可以称之为“Go语言谜题”项目。其中几乎包含了此专栏涉及到的所有代码。\n\n这个专栏的地址[在这里](https://time.geekbang.org/column/intro/112?code=ti58hl0Fap2y5S-OE0G-O-2CiCtjLT94OxcNaBDzI6k%3D)。本项目中的代码携带的信息相对较少，往往需要配合专栏的内容去看。欢迎大家到“极客时间”订阅我的专栏。\n\n欢迎广大的专栏读者和Go语言爱好者们查阅和下载！如果此项目对你有所裨益，还请轻点鼠标、`Star`⭐一下。谢谢！\n\n## 项目结构说明\n\n项目中会有很多像`article3`这样的代码包。这种代码包下面还会有像`q0`或`q2`这样的子代码包。对于这些代码包的层次和命名是有一套潜在的规则的。如下：\n\n1. `article3`是第三篇正文的专属代码包。其他名称相似的代码包含义可类推。\n2. 在每个文章代码包中，都可能会有`q0`、`q1`、`q2`、`q3`这类的子代码包。\n3. 此专栏的主体文章是有固定的结构的。它们一般被分为几个部分：\n\t- 主问题提出之前的部分，也被称为前导部分。\n\t- 主问题部分，是文章主体内容的切入点。\n\t- 扩展问题部分，是切入点的延伸和深入，一般由若干个扩展问题组成，比如：扩展问题1、扩展问题2，等等。\n\t- 总结部分，是对前面的阐述和问题的总结。\n\t- 思考题部分，由一到两个思考题组成。这部分的题目没有答案，仅供大家思考和讨论。\n4. 以上述文章结构为基础，`q0`子包中会包含与前导部分对应的示例代码，`q1`子包中会包含与主问题部分对应的代码，而`q2`子包中会包含与扩展问题部分的扩展问题1对应的代码，以此类推。总结部分和思考题部分一般没有与之对应的代码包。\n\n一般只有像`q0`、`q1`、`q2`这样的代码包下才会包含源码文件。若文章的某个部分存在对应的代码则至少会有一个源码文件，并且总会有一个命令源码文件作为示例的入口，也就是示例入口文件。每个示例入口文件都会以`demoX.go`为名，其中的`X`代表序号。所有的示例入口文件的序号都是唯一的，并且从第一个出现的示例入口文件开始以自然数的顺序确定序号。这样做可以统计示例的总数量。\n\n欢迎大家与我一起学习Go语言。如果你怀疑或确定本项目的代码有错误，请通过专栏找到我，我们一起讨论。谢谢！\n\n## 项目状态更新\n\n- `2018-11-09`：此专栏在此时已更新到了`39`讲，早已超过了原本约定的`36`讲。不过这还没完，预计它最终会达到`50`讲，并且一直更新到12月初。之后，我仍然会对专栏的内容进行专项增补，比如：补充配图、添加思考题的答案，等等。这些增补也同样都会被及时地更新到专栏的在线版中。这些工作都做完了恐怕要到明年的春节了。所以，专栏的读者们，你们赚到了；）。\n- `2018-11-20`：此专栏的全部文章都已经写作完成，历时`4`个多月。专栏文章共计`54`篇，其中的主题文章共`49`篇。\n- `2019-01-21`：此专栏的所有配图和思考题简答的原稿都已完成。\n- `2019-02-02`：发布“新年彩蛋：完整版思考题答案”。\n- `2019-02-18`：此专栏的付费读者已突破`20000`！\n- `2019-02-21`：此专栏已基于之前的所有工作进行了全面的升级！\n- `2019-05-31`：发布“儿童节彩蛋”：添加[序号映射表](mapping_table.md)，对应专栏中文章的序号与源码目录中的序号。\n- `2020-05-27`：此专栏的付费读者已突破`25000`！\n- `2021-10-24`：此专栏的付费读者已突破`31000`！\n\n## 进一步学习交流\n\n大家可通过以下几个渠道进一步与我交流，并一起学习：\n\n- 极客时间App中《Go语言核心36讲》专栏的留言区（我几乎每天都会回复留言区中的问题）\n- QQ群：GoHackers（群号：361287127）\n- 微信公众号：GoHackers\n"
        },
        {
          "name": "gohackers_planet.jpeg",
          "type": "blob",
          "size": 44.6806640625,
          "content": null
        },
        {
          "name": "mapping_table.md",
          "type": "blob",
          "size": 2.6533203125,
          "content": "## 序号映射表\n\n由于一些比较长的文章会被极客时间的编辑们拆成多篇，所以专栏中文章的序号与源码目录中的序号并未对齐。因此，我特意创建了下面这张表，以便读者们做对照阅读。\n\n\n| 文章 | 源码目录  |\n| :------ | :------ |\n| 01 工作区和GOPATH | article1  |\n| 02 命令源码文件 | article2  |\n| 03 库源码文件 | article3  |\n| 04 程序实体的那些事儿（上） | article4  |\n| 05 程序实体的那些事儿（中） | article5  |\n| 06 程序实体的那些事儿（下） | article6  |\n| 07 数组和切片 | article7  |\n| 08 container包中的那些容器 | article8  |\n| 09 字典的操作和约束 | article9  |\n| 10 通道的基本操作 | article10 |\n| 11 通道的高级玩法 | article11 |\n| 12 使用函数的正确姿势 | article12 |\n| 13 结构体及其方法的使用法门 | article13 |\n| 14 接口类型的合理运用 | article14 |\n| 15 关于指针的有限操作 | article15 |\n| 16 go语句及其执行规则（上） | article16 |\n| 17 go语句及其执行规则（下） | article16 |\n| 18 if语句、for语句和switch语句 | article17 |\n| 19 错误处理（上） | article18 |\n| 20 错误处理（下） | article18 |\n| 21 panic函数、recover函数以及defer语句（上） | article19 |\n| 22 panic函数、recover函数以及defer语句（下） | article19 |\n| 23 测试的基本规则和流程（上） | article20 |\n| 24 测试的基本规则和流程（下） | article20 |\n| 25 更多的测试手法 | article21 |\n| 26 sync.Mutex与sync.RWMutex | article22 |\n| 27 条件变量sync.Cond（上） | article23 |\n| 28 条件变量sync.Cond（下） | article23 |\n| 29 原子操作（上） | article24 |\n| 30 原子操作（下） | article24 |\n| 31 sync.WaitGroup和sync.Once | article25 |\n| 32 context.Context类型 | article26 |\n| 33 临时对象池sync.Pool | article27 |\n| 34 并发安全字典sync.Map（上） | article28 |\n| 35 并发安全字典sync.Map（下） | article28 |\n| 36 unicode与字符编码 | article29 |\n| 37 strings包与字符串操作 | article30 |\n| 38 bytes包与字节串操作（上） | article31 |\n| 39 bytes包与字节串操作（下） | article31 |\n| 40 io包中的接口和工具（上） | article32 |\n| 41 io包中的接口和工具（下） | article32 |\n| 42 bufio包中的数据类型（上） | article33 |\n| 43 bufio包中的数据类型（下） | article33 |\n| 44 使用os包中的API（上） | article34 |\n| 45 使用os包中的API（下） | article34 |\n| 46 访问网络服务 | article35 |\n| 47 基于HTTP协议的网络服务 | article36 |\n| 48 程序性能分析基础（上） | article37 |\n| 49 程序性能分析基础（下） | article37 |\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}