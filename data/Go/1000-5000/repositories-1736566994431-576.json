{
  "metadata": {
    "timestamp": 1736566994431,
    "page": 576,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DarthSim/overmind",
      "stars": 2927,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1337890625,
          "content": "# compilled binary\novermind\n\n# Test Procfile\nProcfile\nProcfile.*\n\n# Test env\n.env\n.env.*\n.overmind.env\n\n.overmind.sock\n\ntmp/\n.tmp/\ndist/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.4111328125,
          "content": "run:\n  skip-dirs:\n    - .tmp\n    - vendor\n\nlinters:\n  disable-all: true\n  enable:\n    # - errcheck\n    - gocritic\n    - goconst\n    - goimports\n    - gosimple\n    - govet\n    - ineffassign\n    - staticcheck\n    - stylecheck\n    - typecheck\n    - unused\n\nlinters-settings:\n  govet:\n    # report about shadowed variables\n    check-shadowing: true\n\nissues:\n  exclude-rules:\n    - linters: [stylecheck]\n      text: \"ST1005:\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2646484375,
          "content": "language: go\ngo:\n  - \"1.12\"\n  - \"1.13\"\n  - \"1.14\"\nenv:\n  - GO111MODULE=on\ninstall:\n  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.20.0\nscript:\n  - go mod download\n  - golangci-lint run\n  - go build\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0615234375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Sergey Alexandrovich\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.1689453125,
          "content": "<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"logo-dark.svg\" />\n    <img src=\"logo.svg\" alt=\"Overmind\" />\n  </picture>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/DarthSim/overmind/releases/latest\"><img alt=\"Release\" src=\"https://img.shields.io/github/release/DarthSim/overmind.svg?style=for-the-badge\" /></a>\n  <a href=\"https://github.com/DarthSim/overmind/actions\"><img alt=\"GH Build\" src=\"https://img.shields.io/github/actions/workflow/status/DarthSim/overmind/build.yml?branch=master&label=Build&style=for-the-badge\" /></a>\n  <a href=\"https://github.com/DarthSim/overmind/actions\"><img alt=\"GH Lint\" src=\"https://img.shields.io/github/actions/workflow/status/DarthSim/overmind/lint.yml?branch=master&label=Lint&style=for-the-badge\" /></a>\n</p>\n\n---\n\nOvermind is a process manager for Procfile-based applications and [tmux](https://tmux.github.io/). With Overmind, you can easily run several processes from your `Procfile` in a single terminal.\n\nProcfile is a simple format to specify types of processes your application provides (such as web application server, background queue process, front-end builder) and commands to run those processes. It can significantly simplify process management for developers and is used by popular hosting platforms, such as Heroku and Deis. You can learn more about the `Procfile` format [here](https://devcenter.heroku.com/articles/procfile).\n\nThere are some good Procfile-based process management tools, including [foreman](https://github.com/ddollar/foreman) by David Dollar, which started it all. The problem with most of those tools is that processes you want to manage start to think they are logging their output into a file, and that can lead to all sorts of problems: severe lagging, and losing or breaking colored output. Tools can also add vanity information (unneeded timestamps in logs). Overmind was created to fix those problems once and for all.\n\nSee this article for a good intro and all the juicy details! [Introducing\nOvermind and Hivemind](https://evilmartians.com/chronicles/introducing-overmind-and-hivemind)\n\n<a href=\"https://evilmartians.com/?utm_source=opensource\">\n  <picture>\n    <source\n      media=\"(prefers-color-scheme: dark)\"\n      srcset=\"https://evilmartians.com/badges/sponsored-by-evil-martians_v2.0_for-dark-bg@2x.png\"\n    >\n    <img\n      src=\"https://evilmartians.com/badges/sponsored-by-evil-martians_v2.0@2x.png\"\n      alt=\"Sponsored by Evil Martians\"\n      width=\"236\"\n      height=\"54\"\n    >\n  </picture>\n</a>\n\n## Overmind features\n\nYou may know several Procfile process management tools, but Overmind has some unique, _extraterrestrial_ powers others don't:\n\n* Overmind starts processes in a tmux session, so you can easily connect to any process and gain control over it;\n* Overmind can restart a single process on the fly — you don't need to restart the whole stack;\n* Overmind allows a specified process to die without interrupting all of the other ones;\n* Overmind can restart specified processes automatically when they die;\n* Overmind uses tmux's control mode to capture process output — so it won't be clipped, delayed, and it won't break colored output;\n* Overmind can read environment variables from a file and use them as parameters so that you can configure Overmind behavior globally and/or per directory.\n\n**If a lot of those features seem like overkill for you, especially the tmux integration, you should take a look at Overmind's little sister — [Hivemind](https://github.com/DarthSim/hivemind)!**\n\n![Overmind screenshot](http://i.imgur.com/lfrFKMf.png)\n\n## Installation\n\n**Note:** At the moment, Overmind supports Linux, *BSD, and macOS only.\n\nOvermind works with [tmux](https://tmux.github.io/), so you need to install it first:\n\n```bash\n# on macOS (with homebrew)\n$ brew install tmux\n\n# on Ubuntu\n$ apt-get install tmux\n```\n\n**Note:** You can find installation manuals for other systems here: https://github.com/tmux/tmux\n\nThere are three ways to install Overmind:\n\n### With Homebrew (macOS)\n\n```bash\nbrew install overmind\n```\n\n### With Ruby\n\n```bash\ngem install overmind\n```\n\nYou can read about installing on Ruby On Rails [here] (https://github.com/DarthSim/overmind/blob/master/packaging/rubygems/README.md)\n\n### Download the latest Overmind release binary\n\nYou can download the latest release [here](https://github.com/DarthSim/overmind/releases/latest).\n\n### Build Overmind from source\n\nYou need Go 1.21 or later to build the project.\n\n```bash\n$ go install github.com/DarthSim/overmind/v2@latest\n```\n\nThe Overmind binary will be installed to `$(go env GOPATH)/bin`. Make sure that you added it to your `PATH`.\n\n**Note:** You can update Overmind the same way.\n\n## Usage\n\n**In short:** You can get help by running `overmind -h` and `overmind help [command]`.\n\n### Running processes\n\nOvermind reads the list of processes you want to manage from a file named `Procfile`. It may look like this:\n\n```Procfile\nweb: bin/rails server\nworker: bundle exec sidekiq\nassets: gulp watch\n```\n\nTo get started, you just need to run Overmind from your working directory containing a `Procfile`:\n\n```bash\n$ overmind start\n```\n\nYou can also use the short alias:\n\n```bash\n$ overmind s\n```\n\n#### Specifying a Procfile\n\nIf a `Procfile` isn't located in your working directory, you can specify the exact path:\n\n```bash\n$ overmind start -f path/to/your/Procfile\n$ OVERMIND_PROCFILE=path/to/your/Procfile overmind start\n```\n\n#### Specifying the ports\n\nOvermind sets the environment variable `PORT` for each process in your Procfile so that you can do things like this:\n\n```Procfile\nweb: bin/rails server -p $PORT\n```\n\nOvermind assigns the port base (5000 by default) to `PORT` for the first process and increases `PORT` by port step (100 by default) for each subsequent one. You can specify the port base and port step like this:\n\n```bash\n$ overmind start -p 3000 -P 10\n$ OVERMIND_PORT=3000 OVERMIND_PORT_STEP=10 overmind start\n```\n\n#### Disabling `PORT`\n\nIf you don't want Overmind to set the `PORT` variable, you can disable it:\n\n```bash\n$ overmind start -N\n$ OVERMIND_NO_PORT=1 overmind start\n```\n\n#### Running only the specified processes\n\nYou can specify the names of processes you want to run:\n\n```bash\n$ overmind start -l web,sidekiq\n$ OVERMIND_PROCESSES=web,sidekiq overmind start\n```\n\n#### Not running the specified processes\n\nSimilar to the above, if there are some processes in the Procfile that you do not want to run:\n\n```bash\n$ overmind start -x web,sidekiq\n$ OVERMIND_IGNORED_PROCESSES=web,sidekiq overmind start\n```\n\nThis takes precedence over the previous `-l` flag. i.e. if you:\n\n```bash\n$ overmind start -l web -x web\n$ OVERMIND_IGNORED_PROCESSES=web OVERMIND_PROCESSES=web overmind start\n```\n\nNothing will start.\n\n#### Scaling processes (formation)\n\nBy default, Overmind starts one instance of each process, but you can set the number of each process instances to run:\n\n```bash\n$ overmind start -m web=2,worker=5\n$ OVERMIND_FORMATION=web=2,worker=5 overmind start\n```\n\nThere is a special name `all` that you can use to scale all processes at once:\n\n```bash\n$ overmind start -m all=2,worker=5\n$ OVERMIND_FORMATION=all=2,worker=5 overmind start\n```\n\nIf you set instances number of some process to zero, this process won't be run:\n\n```bash\n$ overmind start -m some_production_task=0\n$ OVERMIND_FORMATION=some_production_task=0 overmind start\n```\n\n#### Processes that can die\n\nUsually, when a process dies, Overmind will interrupt all other processes. However, you can specify processes that can die without interrupting all other ones:\n\n```bash\n$ overmind start -c assets,npm_install\n$ OVERMIND_CAN_DIE=assets,npm_install overmind start\n```\n\nAlso, you can allow all processes to die:\n\n```bash\n$ overmind start --any-can-die\n$ OVERMIND_ANY_CAN_DIE=1 overmind start\n```\n\n#### Auto-restarting processes\n\nIf some of your processes tend to randomly crash, you can tell Overmind to restart them automatically when they die:\n\n```bash\n$ overmind start -r rails,webpack\n$ OVERMIND_AUTO_RESTART=rails,webpack overmind start\n```\n\nThe special name `all` can also be used to restart all processes automatically when they die:\n\n```bash\n$ overmind start -r all\n$ OVERMIND_AUTO_RESTART=all overmind start\n```\n\n> [!NOTE] \n> `OVERMIND_CAN_DIE` supersedes `OVERMIND_AUTO_RESTART`; if you want a restarting process, only put it in `OVERMIND_AUTO_RESTART` \n\n#### Specifying the colors\n\nOvermind colorizes process names with different colors. It may happen that these colors don't match well with your color scheme. In that case, you can specify your own colors using xterm color codes:\n\n```bash\n$ overmind start -b 123,123,125,126,127\n$ OVERMIND_COLORS=123,123,125,126,127 overmind start\n```\n\nIf you want Overmind to always use these colors, you can specify them in the [environment file](https://github.com/DarthSim/overmind#overmind-environment) located in your home directory.\n\n### Show timestamps\n\nBy default, Overmind doesn't show timestamps in its output since it expects your processes to add timestamps to their own output. But you can make Overmind to add timestamps to its output:\n\n```bash\n$ overmind start -T\n$ OVERMIND_SHOW_TIMESTAMPS=1 overmind start\n```\n\n### Connecting to a process\n\nIf you need to gain access to process input, you can connect to its `tmux` window:\n\n```bash\n$ overmind connect <process_name>\n```\n\nYou can safely disconnect from the window by hitting `Ctrl b` (or your tmux prefix) and then `d`.\n\nYou can omit the process name to connect to the first process defined in the Procfile.\n\n### Restarting a process\n\nYou can restart a single process without restarting all the other ones:\n\n```bash\n$ overmind restart sidekiq\n```\n\nYou can restart multiple processes the same way:\n\n```bash\n$ overmind restart sidekiq assets\n```\n\nIt's also possible to use wildcarded process names:\n\n```bash\n$ overmind restart 'sidekiq*'\n```\n\nWhen the command is called without any arguments, it will restart all the processes.\n\n### Stopping a process\n\nYou can stop a single process without stopping all the other ones:\n\n```bash\n$ overmind stop sidekiq\n```\n\nYou can stop multiple processes the same way:\n\n```bash\n$ overmind stop sidekiq assets\n```\n\nIt's also possible to use wildcarded process names:\n\n```bash\n$ overmind stop 'sidekiq*'\n```\n\nWhen the command is called without any arguments, it will stop all the processes without stopping Overmind itself.\n\n### Killing processes\n\nIf something goes wrong, you can kill all running processes:\n\n```bash\n$ overmind kill\n```\n\n### Overmind environment\n\nIf you need to set specific environment variables before running a `Procfile`, you can specify them in the `.overmind.env` file in the current working directory, your home directory, or/and in the `.env` file in in the current working directory. The file should contain `variable=value` pairs, one per line:\n\n```\nPATH=$PATH:/additional/path\nOVERMIND_CAN_DIE=npm_install\nOVERMIND_PORT=3000\n```\n\nFor example, if you want to use a separate `Procfile.dev` by default on a local environment, create `.overmind.env` file with `OVERMIND_PROCFILE=Procfile.dev`. Now, Overmind uses `Procfile.dev` by default.\n\nYou can specify additional env files to load with `OVERMIND_ENV` variable:\n\n```bash\n$ OVERMIND_ENV=./.env.local,./.env.development overmind s\n```\n\nThe files will be loaded in the following order:\n\n* `~/.overmind.env`\n* `./.overmind.env`\n* `./.env`\n* `$OVERMIND_ENV`\n\nYou can also opt to skip loading the `.env` file entirely (`.overmind.env` will still be read) by setting the variable `OVERMIND_SKIP_ENV`.\n\n#### Running a command in the Overmind environment\n\nSince you set up an environment with `.env` files, you may want to run a command inside this environment. You can do this using `run` command:\n\n```bash\n$ overmind run yarn install\n```\n\n### Run as a daemon\n\nOvermind can be run as a daemon:\n\n```bash\n$ overmind start -D\n$ OVERMIND_DAEMONIZE=1 overmind start\n```\n\nUse the `echo` command for the logs:\n\n```bash\n$ overmind echo\n```\n\nYou can quit daemonized Overmind with `quit`:\n\n```bash\n$ overmind quit\n```\n\n### Specifying a socket\n\nOvermind receives commands via a Unix socket. Usually, it opens a socket named `.overmind.sock` in a working directory, but you can specify the full path:\n\n```bash\n$ overmind start -s path/to/socket\n$ OVERMIND_SOCKET=path/to/socket overmind start\n```\n\nAll other commands support the same flag:\n\n```bash\n$ overmind connect -s path/to/socket web\n$ overmind restart -s path/to/socket sidekiq\n$ overmind kill -s path/to/socket\n```\n\n#### Using TCP network\n\nOvermind can bind its command center to a TCP address instead of Unix socket. This is useful when you run it on a remote machine.\n\n```bash\n$ overmind start -s \"0.0.0.0:4321\" -S \"tcp\"\n$ OVERMIND_SOCKET=\"0.0.0.0:4321\" OVERMIND_NETWORK=\"tcp\" overmind start\n```\n\nYou need to pass the same flags to other commands:\n\n```bash\n$ overmind connect -s \"0.0.0.0:4321\" -S \"tcp\" web\n```\n\n### Specifying tmux config\n\nOvermind can use a specified tmux config. This is useful if you want to differentiate from your main tmux window, for example adding a custom status line for Overmind or a different prefix key.\n\n```bash\novermind start -F ~/overmind.tmux.conf\nOVERMIND_TMUX_CONFIG=~/.overmind.tmux.conf overmind start\n```\n\n## Known issues\n\n### Overmind uses the system Ruby/Node/etc instead of a custom-defined one\n\nThis may happen if your Ruby/Node/etc version manager isn't configured properly. Make sure that the path to your custom binaries is included in your `PATH` before the system binaries path.\n\n### Overmind does not stop the Docker process properly\n\nUnfortunately, this is how Docker works. When you send `SIGINT` to a `docker run ...` process, it just detaches container and exits. You can solve this by using named containers and signal traps:\n\n```procfile\nmydocker: trap 'docker stop mydocker' EXIT > /dev/null; docker run --name mydocker ...\n```\n\n### Overmind can't start because of a `bind: invalid argument` error\n\nAll operating systems have limits on Unix socket path length. Try to use a shorter socket path.\n\n### Overmind exits after `pg_ctl --wait start` and keeps PostgreSQL server running\n\nSince version 12.0 `pg_ctl --wait start` exits right after starting the server. Just use the `postgres` command directly.\n\n## Author\n\nSergey \"DarthSim\" Aleksandrovich\n\nHighly inspired by [Foreman](https://github.com/ddollar/foreman).\n\nMany thanks to @antiflasher for the awesome logo.\n\n## License\n\nOvermind is licensed under the MIT license.\n\nSee LICENSE for the full license text.\n"
        },
        {
          "name": "build-all.sh",
          "type": "blob",
          "size": 1.44921875,
          "content": "#!/bin/sh\nversion=$(/bin/sh -c 'git describe --always --tags --abbrev=0')\nrm -rf ./dist\n\nenv CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-linux-arm.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-linux-arm64.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-linux-386.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-linux-amd64.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-macos-amd64.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-macos-arm64.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=freebsd GOARCH=arm go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-freebsd-arm.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=freebsd GOARCH=386 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-freebsd-386.gz\" dist/overmind\n\nenv CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -ldflags \"-s -w\" -a -o dist/overmind .\ngzip -9 -S \"-$version-freebsd-amd64.gz\" dist/overmind\n\nfor filename in dist/*.gz; do\n  sha256sum -bz $filename | awk '{printf \"%s\",$1}' > \"$filename.sha256sum\"\ndone\n"
        },
        {
          "name": "cmd_connect.go",
          "type": "blob",
          "size": 1.0166015625,
          "content": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/exec\"\n\t\"strings\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdConnectHandler struct {\n\tdialer\n\n\tControlMode bool\n}\n\nfunc (h *cmdConnectHandler) Run(c *cli.Context) error {\n\tif c.NArg() > 1 {\n\t\tutils.Fatal(\"Specify a single name of process\")\n\t}\n\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintf(conn, \"get-connection %s\\n\", c.Args().First())\n\n\tresponse, err := bufio.NewReader(conn).ReadString('\\n')\n\tutils.FatalOnErr(err)\n\n\tresponse = strings.TrimSpace(response)\n\tif response == \"\" {\n\t\tutils.Fatal(fmt.Sprintf(\"Unknown process name: %s\", c.Args().First()))\n\t}\n\n\tparts := strings.Split(response, \" \")\n\tif len(parts) < 2 {\n\t\tutils.Fatal(\"Invalid server response\")\n\t}\n\n\targs := []string{\"-L\", parts[0], \"attach\", \"-t\", parts[1]}\n\n\tif h.ControlMode {\n\t\targs = append([]string{\"-CC\"}, args...)\n\t}\n\n\tcmd := exec.Command(\"tmux\", args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tcmd.Stdin = os.Stdin\n\n\tutils.FatalOnErr(cmd.Run())\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_echo.go",
          "type": "blob",
          "size": 0.623046875,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdEchoHandler struct{ dialer }\n\nfunc (h *cmdEchoHandler) Run(c *cli.Context) error {\n\tif c.Args().Present() {\n\t\tutils.Fatal(\"Echo doesn't accept any arguments\")\n\t}\n\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tstop := make(chan os.Signal, 1)\n\n\tgo func() {\n\t\tutils.ScanLines(conn, func(b []byte) bool {\n\t\t\tfmt.Fprintf(os.Stdout, \"%s\\n\", b)\n\t\t\treturn true\n\t\t})\n\n\t\tstop <- syscall.SIGINT\n\t}()\n\n\tfmt.Fprintln(conn, \"echo\")\n\n\tsignal.Notify(stop, syscall.SIGINT, syscall.SIGTERM)\n\n\t<-stop\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_kill.go",
          "type": "blob",
          "size": 0.2744140625,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdKillHandler struct{ dialer }\n\nfunc (h *cmdKillHandler) Run(_ *cli.Context) error {\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintf(conn, \"kill\")\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_quit.go",
          "type": "blob",
          "size": 0.2744140625,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdQuitHandler struct{ dialer }\n\nfunc (h *cmdQuitHandler) Run(_ *cli.Context) error {\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintf(conn, \"quit\")\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_restart.go",
          "type": "blob",
          "size": 0.3271484375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdRestartHandler struct{ dialer }\n\nfunc (h *cmdRestartHandler) Run(c *cli.Context) error {\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintf(conn, \"restart %v\\n\", strings.Join(c.Args(), \" \"))\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_run.go",
          "type": "blob",
          "size": 0.7490234375,
          "content": "package main\n\nimport (\n\t\"os\"\n\t\"os/exec\"\n\t\"syscall\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdRunHandler struct{}\n\nfunc (h *cmdRunHandler) Run(c *cli.Context) error {\n\tif !c.Args().Present() {\n\t\tutils.Fatal(\"Specify a command to run\")\n\t}\n\n\tcommand := c.Args()[0]\n\n\tvar args []string\n\n\tif c.NArg() > 1 {\n\t\targs = c.Args()[1:]\n\t} else {\n\t\targs = []string{}\n\t}\n\n\tcmd := exec.Command(command, args...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tcmd.Stdin = os.Stdin\n\n\terr := cmd.Run()\n\n\tif err != nil {\n\t\tif exitErr, ok := err.(*exec.ExitError); ok {\n\t\t\tif status, ok := exitErr.Sys().(syscall.WaitStatus); ok {\n\t\t\t\tos.Exit(status.ExitStatus())\n\t\t\t} else {\n\t\t\t\tos.Exit(1)\n\t\t\t}\n\t\t} else {\n\t\t\tutils.Fatal(err)\n\t\t}\n\t}\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_status.go",
          "type": "blob",
          "size": 0.46484375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdStatusHandler struct{ dialer }\n\nfunc (h *cmdStatusHandler) Run(c *cli.Context) error {\n\tif c.Args().Present() {\n\t\tutils.Fatal(\"Status doesn't accept any arguments\")\n\t}\n\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintln(conn, \"status\")\n\n\tutils.ScanLines(conn, func(b []byte) bool {\n\t\tfmt.Fprintf(os.Stdout, \"%s\\n\", b)\n\t\treturn true\n\t})\n\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_stop.go",
          "type": "blob",
          "size": 0.318359375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/DarthSim/overmind/v2/utils\"\n\n\t\"github.com/urfave/cli\"\n)\n\ntype cmdStopHandler struct{ dialer }\n\nfunc (h *cmdStopHandler) Run(c *cli.Context) error {\n\tconn, err := h.Dial()\n\tutils.FatalOnErr(err)\n\n\tfmt.Fprintf(conn, \"stop %v\\n\", strings.Join(c.Args(), \" \"))\n\n\treturn nil\n}\n"
        },
        {
          "name": "dialer.go",
          "type": "blob",
          "size": 0.173828125,
          "content": "package main\n\nimport \"net\"\n\ntype dialer struct {\n\tSocketPath string\n\tNetwork    string\n}\n\nfunc (d *dialer) Dial() (net.Conn, error) {\n\treturn net.Dial(d.Network, d.SocketPath)\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.48828125,
          "content": "module github.com/DarthSim/overmind/v2\n\ngo 1.21\n\nrequire (\n\tgithub.com/matoous/go-nanoid v1.5.0\n\tgithub.com/sevlyar/go-daemon v0.1.6\n\tgithub.com/urfave/cli v1.22.12\n\tgolang.org/x/term v0.4.0\n)\n\nrequire (\n\tgithub.com/Envek/godotenv v0.0.0-20240326021258-e36c8a003587 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgolang.org/x/sys v0.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.150390625,
          "content": "github.com/BurntSushi/toml v1.2.1/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/Envek/godotenv v0.0.0-20240326021258-e36c8a003587 h1:8oTcABPw+30WG+jMYb/uNKgIuIlk2W+GSv9kX+mdkOU=\ngithub.com/Envek/godotenv v0.0.0-20240326021258-e36c8a003587/go.mod h1:byf6gDXuYSvbwm1fZ4B1x40aOLxgcMx1AdF+/UPly/0=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 h1:iQTw/8FWTuc7uiaSepXwyf3o52HaUYcV+Tu66S3F5GA=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0/go.mod h1:1NbS8ALrpOvjt0rHPNLyCIeMtbizbir8U//inJ+zuB8=\ngithub.com/matoous/go-nanoid v1.5.0 h1:VRorl6uCngneC4oUQqOYtO3S0H5QKFtKuKycFG3euek=\ngithub.com/matoous/go-nanoid v1.5.0/go.mod h1:zyD2a71IubI24efhpvkJz+ZwfwagzgSO6UNiFsZKN7U=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sevlyar/go-daemon v0.1.6 h1:EUh1MDjEM4BI109Jign0EaknA2izkOyi0LV3ro3QQGs=\ngithub.com/sevlyar/go-daemon v0.1.6/go.mod h1:6dJpPatBT9eUwM5VCw9Bt6CdX9Tk6UWvhW3MebLDRKE=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/urfave/cli v1.22.12 h1:igJgVw1JdKH+trcLWLeLwZjU9fEfPesQ+9/e4MQ44S8=\ngithub.com/urfave/cli v1.22.12/go.mod h1:sSBEIC79qR6OvcmsD4U3KABeOTxDqQtdDnaFuUN30b8=\ngolang.org/x/sys v0.4.0 h1:Zr2JFtRQNX3BCZ8YtxRE9hNJYC8J6I1MVbMg6owUp18=\ngolang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.4.0 h1:O7UWfv5+A2qiuulQk30kVinPoMtoIPeVaKLEgLpVkvg=\ngolang.org/x/term v0.4.0/go.mod h1:9P2UbLfCdcvo3p/nzKvsmas4TnlujnuoV9hGgYzW1lQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "lefthook.yml",
          "type": "blob",
          "size": 0.080078125,
          "content": "pre-commit:\n  commands:\n    lint:\n      glob: \"*.go\"\n      run: golangci-lint run\n"
        },
        {
          "name": "logo-dark.svg",
          "type": "blob",
          "size": 9.806640625,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"224\" height=\"74\">\n  <defs>\n    <path id=\"a\" d=\"M29.2 2.185S8.136 12.752 6.738 13.415C2.246 15.662 0 17.908 0 23.523v26.954c0 5.615 2.246 7.873 6.738 10.119L29.2 71.816c4.492 2.246 8.985 2.246 13.477 0 4.497-2.246 20.215-10.108 22.461-11.231 4.493-2.247 6.739-4.493 6.739-10.108V23.523c0-5.67-2.242-7.873-6.739-10.108L42.677 2.185c-4.492-2.247-8.985-2.247-13.477 0Z\"/>\n  </defs>\n  <g fill=\"none\" fill-rule=\"evenodd\">\n    <mask id=\"b\" fill=\"#fff\">\n      <use xlink:href=\"#a\"/>\n    </mask>\n    <path fill=\"#9012FE\" d=\"M30 6s-18.755 9.409-20 10c-4 2-6 4-6 9v24c0 5 2 7.01 6 9.01L30 68c4 2 8 2 12 0 4.004-1.999 18-9 20-10 4-2 6-4 6-9V25c0-5.048-1.996-7.01-6-9L42 6c-4-2-8-2-12 0Z\" mask=\"url(#b)\"/>\n    <path fill=\"#D01BF5\" d=\"M36 .996c0 2.032-.363 2.94-1.664 4.893C32.636 8.44 32 10.032 32 13c0 2.969.637 4.561 2.336 7.11C35.636 22.06 36 22.968 36 25c0 2.031-.363 2.939-1.664 4.89C32.636 32.44 32 34.032 32 37c0 2.969.637 4.561 2.336 7.11C35.636 46.06 36 46.968 36 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C35.637 70.062 36 70.969 36 73h4c0-2.969-.637-4.56-2.336-7.108C36.363 63.942 36 63.035 36 61.004c0-2.032.363-2.94 1.664-4.893C39.364 53.56 40 51.968 40 49c0-2.969-.637-4.561-2.336-7.11C36.364 39.94 36 39.032 36 37c0-2.031.363-2.939 1.664-4.89C39.364 29.56 40 27.968 40 25c0-2.969-.637-4.561-2.336-7.11C36.364 15.94 36 15.032 36 13c0-2.032.363-2.94 1.664-4.893C39.364 5.557 40 3.965 40 .997h-4ZM44 .996c0 2.032-.363 2.94-1.664 4.893C40.636 8.44 40 10.032 40 13c0 2.969.637 4.561 2.336 7.11C43.636 22.06 44 22.968 44 25c0 2.031-.363 2.939-1.664 4.89C40.636 32.44 40 34.032 40 37c0 2.969.637 4.561 2.336 7.11C43.636 46.06 44 46.968 44 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C43.637 70.062 44 70.969 44 73h4c0-2.969-.637-4.56-2.336-7.108C44.363 63.942 44 63.035 44 61.004c0-2.032.363-2.94 1.664-4.893C47.364 53.56 48 51.968 48 49c0-2.969-.637-4.561-2.336-7.11C44.364 39.94 44 39.032 44 37c0-2.031.363-2.939 1.664-4.89C47.364 29.56 48 27.968 48 25c0-2.969-.637-4.561-2.336-7.11C44.364 15.94 44 15.032 44 13c0-2.032.363-2.94 1.664-4.893C47.364 5.557 48 3.965 48 .997h-4ZM52 .996c0 2.032-.363 2.94-1.664 4.893C48.636 8.44 48 10.032 48 13c0 2.969.637 4.561 2.336 7.11C51.636 22.06 52 22.968 52 25c0 2.031-.363 2.939-1.664 4.89C48.636 32.44 48 34.032 48 37c0 2.969.637 4.561 2.336 7.11C51.636 46.06 52 46.968 52 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C51.637 70.062 52 70.969 52 73h4c0-2.969-.637-4.56-2.336-7.108C52.363 63.942 52 63.035 52 61.004c0-2.032.363-2.94 1.664-4.893C55.364 53.56 56 51.968 56 49c0-2.969-.637-4.561-2.336-7.11C52.364 39.94 52 39.032 52 37c0-2.031.363-2.939 1.664-4.89C55.364 29.56 56 27.968 56 25c0-2.969-.637-4.561-2.336-7.11C52.364 15.94 52 15.032 52 13c0-2.032.363-2.94 1.664-4.893C55.364 5.557 56 3.965 56 .997h-4ZM60 .996c0 2.032-.363 2.94-1.664 4.893C56.636 8.44 56 10.032 56 13c0 2.969.637 4.561 2.336 7.11C59.636 22.06 60 22.968 60 25c0 2.031-.363 2.939-1.664 4.89C56.636 32.44 56 34.032 56 37c0 2.969.637 4.561 2.336 7.11C59.636 46.06 60 46.968 60 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C59.637 70.062 60 70.969 60 73h4c0-2.969-.637-4.56-2.336-7.108C60.363 63.942 60 63.035 60 61.004c0-2.032.363-2.94 1.664-4.893C63.364 53.56 64 51.968 64 49c0-2.969-.637-4.561-2.336-7.11C60.364 39.94 60 39.032 60 37c0-2.031.363-2.939 1.664-4.89C63.364 29.56 64 27.968 64 25c0-2.969-.637-4.561-2.336-7.11C60.364 15.94 60 15.032 60 13c0-2.032.363-2.94 1.664-4.893C63.364 5.557 64 3.965 64 .997h-4ZM68 .996c0 2.032-.363 2.94-1.664 4.893C64.636 8.44 64 10.032 64 13c0 2.969.637 4.561 2.336 7.11C67.636 22.06 68 22.968 68 25c0 2.031-.363 2.939-1.664 4.89C64.636 32.44 64 34.032 64 37c0 2.969.637 4.561 2.336 7.11C67.636 46.06 68 46.968 68 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C67.637 70.062 68 70.969 68 73h4c0-2.969-.637-4.56-2.336-7.108C68.363 63.942 68 63.035 68 61.004c0-2.032.363-2.94 1.664-4.893C71.364 53.56 72 51.968 72 49c0-2.969-.637-4.561-2.336-7.11C68.364 39.94 68 39.032 68 37c0-2.031.363-2.939 1.664-4.89C71.364 29.56 72 27.968 72 25c0-2.969-.637-4.561-2.336-7.11C68.364 15.94 68 15.032 68 13c0-2.032.363-2.94 1.664-4.893C71.364 5.557 72 3.965 72 .997h-4ZM28 .996c0 2.032-.363 2.94-1.664 4.893C24.636 8.44 24 10.032 24 13c0 2.969.637 4.561 2.336 7.11C27.636 22.06 28 22.968 28 25c0 2.031-.363 2.939-1.664 4.89C24.636 32.44 24 34.032 24 37c0 2.969.637 4.561 2.336 7.11C27.636 46.06 28 46.968 28 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C27.637 70.062 28 70.969 28 73h4c0-2.969-.637-4.56-2.336-7.108C28.363 63.942 28 63.035 28 61.004c0-2.032.363-2.94 1.664-4.893C31.364 53.56 32 51.968 32 49c0-2.969-.637-4.561-2.336-7.11C28.364 39.94 28 39.032 28 37c0-2.031.363-2.939 1.664-4.89C31.364 29.56 32 27.968 32 25c0-2.969-.637-4.561-2.336-7.11C28.364 15.94 28 15.032 28 13c0-2.032.363-2.94 1.664-4.893C31.364 5.557 32 3.965 32 .997h-4ZM20 .996c0 2.032-.363 2.94-1.664 4.893C16.636 8.44 16 10.032 16 13c0 2.969.637 4.561 2.336 7.11C19.636 22.06 20 22.968 20 25c0 2.031-.363 2.939-1.664 4.89C16.636 32.44 16 34.032 16 37c0 2.969.637 4.561 2.336 7.11C19.636 46.06 20 46.968 20 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C19.637 70.062 20 70.969 20 73h4c0-2.969-.637-4.56-2.336-7.108C20.363 63.942 20 63.035 20 61.004c0-2.032.363-2.94 1.664-4.893C23.364 53.56 24 51.968 24 49c0-2.969-.637-4.561-2.336-7.11C20.364 39.94 20 39.032 20 37c0-2.031.363-2.939 1.664-4.89C23.364 29.56 24 27.968 24 25c0-2.969-.637-4.561-2.336-7.11C20.364 15.94 20 15.032 20 13c0-2.032.363-2.94 1.664-4.893C23.364 5.557 24 3.965 24 .997h-4Z\" mask=\"url(#b)\"/>\n    <path fill=\"#D01BF5\" d=\"M12 .996c0 2.032-.363 2.94-1.664 4.893C8.636 8.44 8 10.032 8 13c0 2.969.637 4.561 2.336 7.11C11.636 22.06 12 22.968 12 25c0 2.031-.363 2.939-1.664 4.89C8.636 32.44 8 34.032 8 37c0 2.969.637 4.561 2.336 7.11C11.636 46.06 12 46.968 12 49c0 2.032-.363 2.94-1.664 4.893C8.636 56.443 8 58.035 8 61.003c0 2.97.637 4.562 2.336 7.109C11.637 70.062 12 70.969 12 73h4c0-2.969-.637-4.56-2.336-7.108C12.363 63.942 12 63.035 12 61.004c0-2.032.363-2.94 1.664-4.893C15.364 53.56 16 51.968 16 49c0-2.969-.637-4.561-2.336-7.11C12.364 39.94 12 39.032 12 37c0-2.031.363-2.939 1.664-4.89C15.364 29.56 16 27.968 16 25c0-2.969-.637-4.561-2.336-7.11C12.364 15.94 12 15.032 12 13c0-2.032.363-2.94 1.664-4.893C15.364 5.557 16 3.965 16 .997h-4ZM4 .996c0 2.032-.363 2.94-1.664 4.893C.636 8.44 0 10.032 0 13c0 2.969.637 4.561 2.336 7.11C3.636 22.06 4 22.968 4 25c0 2.031-.363 2.939-1.664 4.89C.636 32.44 0 34.032 0 37c0 2.969.637 4.561 2.336 7.11C3.636 46.06 4 46.968 4 49c0 2.032-.363 2.94-1.664 4.893C.636 56.443 0 58.035 0 61.003c0 2.97.637 4.562 2.336 7.109C3.637 70.062 4 70.969 4 73h4c0-2.969-.637-4.56-2.336-7.108C4.363 63.942 4 63.035 4 61.004c0-2.032.363-2.94 1.664-4.893C7.364 53.56 8 51.968 8 49c0-2.969-.637-4.561-2.336-7.11C4.364 39.94 4 39.032 4 37c0-2.031.363-2.939 1.664-4.89C7.364 29.56 8 27.968 8 25c0-2.969-.637-4.561-2.336-7.11C4.364 15.94 4 15.032 4 13c0-2.032.363-2.94 1.664-4.893C7.364 5.557 8 3.965 8 .997H4Z\" mask=\"url(#b)\"/>\n    <path fill=\"#FFF\" d=\"M36 47c10 0 14-10 14-10s-4-10-14-10-14 10-14 10 4 10 14 10Zm0-3a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-3a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z\" mask=\"url(#b)\"/>\n    <path fill=\"#FFF\" d=\"M98.46 46.49c6.79 0 10.92-4.025 10.92-12.25 0-8.295-4.13-12.285-10.92-12.285s-10.92 3.99-10.92 12.285c0 8.225 4.13 12.25 10.92 12.25Zm0-22.365c5.355 0 8.47 3.255 8.47 10.115 0 6.825-3.115 10.08-8.47 10.08s-8.47-3.255-8.47-10.08c0-6.86 3.115-10.115 8.47-10.115Zm20.125 22.155c.455 0 .84-.245 1.05-.7l5.95-14.14c.035-.105.105-.245.105-.49 0-.63-.49-1.12-1.12-1.12-.63 0-.91.385-1.05.735l-4.935 12.075-4.935-12.075c-.14-.35-.42-.735-1.05-.735-.63 0-1.12.49-1.12 1.12 0 .245.07.385.105.49l5.95 14.14c.21.455.595.7 1.05.7Zm8.89-8.26c0 5.88 2.905 8.435 7.56 8.435 3.115 0 4.935-1.435 5.46-1.96.21-.21.385-.42.385-.805 0-.56-.455-1.015-1.015-1.015-.28 0-.42.07-.63.21-.98.735-2.17 1.505-4.2 1.505-3.29 0-5.285-2.24-5.285-5.705h10.22c1.4 0 1.4-1.225 1.4-2.24 0-2.38-1.085-6.825-6.685-6.825-4.55 0-7.21 3.01-7.21 8.4Zm11.69-1.295h-9.415c.21-3.115 1.89-5.075 4.935-5.075 3.605 0 4.48 2.555 4.48 5.075Zm7.91-5.775c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-7.84c0-3.22 1.645-5.46 4.865-5.46a1.09 1.09 0 0 0 1.085-1.085 1.09 1.09 0 0 0-1.085-1.085c-2.415 0-4.165 1.19-4.865 2.8v-1.54Zm26.04-1.33c-2.695 0-4.235 1.085-5.11 2.45-.84-1.4-2.695-2.45-5.565-2.45-2.275 0-3.955 1.155-4.55 2.45v-1.12c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-8.645c0-2.94 1.05-4.9 4.305-4.9 3.43 0 4.305 1.89 4.305 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.59 1.365-4.2 4.375-4.2 3.395 0 4.375 1.89 4.375 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.975-1.225-6.195-6.615-6.195Zm13.02 1.33c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12V30.95Zm-1.12-4.41c.84 0 1.33-.49 1.33-1.33 0-1.015-.49-1.4-1.33-1.4-.84 0-1.33.385-1.33 1.4 0 .84.49 1.33 1.33 1.33Zm12.565 3.08c-2.275 0-3.99 1.12-4.655 2.45v-1.12c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-8.645c0-2.8 1.19-4.9 4.655-4.9 3.395 0 4.2 1.89 4.2 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.975-1.05-6.195-6.44-6.195Zm21.385 9.94c0 3.325-1.925 4.865-4.62 4.865-3.22 0-4.935-2.03-4.935-6.405 0-4.305 1.75-6.37 4.935-6.37 3.29 0 4.62 3.08 4.62 3.08v4.83Zm-4.76-9.94c-4.515 0-7.035 2.66-7.035 8.4s2.66 8.435 7.175 8.435c3.99 0 6.86-2.275 6.86-6.895V22.2c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v9.695c-.805-1.12-2.52-2.275-4.76-2.275Z\"/>\n  </g>\n</svg>\n"
        },
        {
          "name": "logo-sign-only.svg",
          "type": "blob",
          "size": 12.921875,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 72 74\">\n  <defs>\n    <path id=\"overmind-sign-only-a\" d=\"M29.2,2.18461538 C29.2,2.18461538 8.13636894,12.7515454 6.73846154,13.4153846 C2.24615385,15.6615385 0,17.9076923 0,23.5230769 L0,50.4769231 C0,56.0923077 2.24615385,58.3497033 6.73846154,60.5958571 C12.7356403,63.5917178 29.2,71.8153846 29.2,71.8153846 C33.6923077,74.0615385 38.1846154,74.0615385 42.6769231,71.8153846 C47.173892,69.5704646 62.8923077,61.7076923 65.1384615,60.5846154 C69.6307692,58.3384615 71.8769231,56.0923077 71.8769231,50.4769231 C71.8769231,56.0923077 71.8769231,23.5230769 71.8769231,23.5230769 C71.8769231,17.8536771 69.6351563,15.6500225 65.1384615,13.4153846 C65.1384615,13.4153846 47.1692308,4.43076923 42.6769231,2.18461538 C38.1846154,-0.0615384615 33.6923077,-0.0615384615 29.2,2.18461538 Z\"/>\n  </defs>\n  <g fill=\"none\" fill-rule=\"evenodd\">\n    <mask id=\"overmind-sign-only-b\" fill=\"#fff\">\n      <use xlink:href=\"#overmind-sign-only-a\"/>\n    </mask>\n    <use fill=\"#FFF\" opacity=\"0\" xlink:href=\"#overmind-sign-only-a\"/>\n    <path fill=\"#9013FE\" d=\"M30,6 C30,6 11.2447121,15.4089103 10,16 C6,18 4,20 4,25 L4,49 C4,54 6,56.0100098 10,58.0100098 C15.3399537,60.677557 30,68 30,68 C34,70 38,70 42,68 C46.0041504,66.0010986 60,59 62,58 C66,56 68,54 68,49 C68,54 68,25 68,25 C68,19.9519043 66.0039062,17.9897461 62,16 C62,16 46,8 42,6 C38,4 34,4 30,6 Z\" mask=\"url(#overmind-sign-only-b)\"/>\n    <path fill=\"#CF1BF4\" fill-rule=\"nonzero\" d=\"M36 .996337891C36 3.02790218 35.6368082 3.93621424 34.3355871 5.88923718 32.6368082 8.43896082 32 10.0315643 32 13 32 15.9686111 32.6369402 17.5609615 34.3358994 20.1094004 35.6369402 22.0609615 36 22.9686111 36 25 36 27.0313889 35.6369402 27.9390385 34.3358994 29.8905996 32.6369402 32.4390385 32 34.0313889 32 37 32 39.9686111 32.6369402 41.5609615 34.3358994 44.1094004 35.6369402 46.0609615 36 46.9686111 36 49 36 51.031576 35.6367994 51.9399322 34.3355663 53.8930526 32.6367994 56.4428619 32 58.0354822 32 61.0039062 32 63.9727046 32.6370811 65.5647853 34.336233 68.1118537 35.6370811 70.0618556 36 70.9687983 36 73L40 73C40 70.0312017 39.3629189 68.439121 37.663767 65.8920525 36.3629189 63.9420507 36 63.0351079 36 61.0039062 36 58.9723303 36.3632006 58.063974 37.6644337 56.1108537 39.3632006 53.5610444 40 51.968424 40 49 40 46.0313889 39.3630598 44.4390385 37.6641006 41.8905996 36.3630598 39.9390385 36 39.0313889 36 37 36 34.9686111 36.3630598 34.0609615 37.6641006 32.1094004 39.3630598 29.5609615 40 27.9686111 40 25 40 22.0313889 39.3630598 20.4390385 37.6641006 17.8905996 36.3630598 15.9390385 36 15.0313889 36 13 36 10.9684357 36.3631918 10.0601236 37.6644129 8.10710071 39.3631918 5.55737707 40 3.96477361 40 .996337891L36 .996337891zM44 .996337891C44 3.02790218 43.6368082 3.93621424 42.3355871 5.88923718 40.6368082 8.43896082 40 10.0315643 40 13 40 15.9686111 40.6369402 17.5609615 42.3358994 20.1094004 43.6369402 22.0609615 44 22.9686111 44 25 44 27.0313889 43.6369402 27.9390385 42.3358994 29.8905996 40.6369402 32.4390385 40 34.0313889 40 37 40 39.9686111 40.6369402 41.5609615 42.3358994 44.1094004 43.6369402 46.0609615 44 46.9686111 44 49 44 51.031576 43.6367994 51.9399322 42.3355663 53.8930526 40.6367994 56.4428619 40 58.0354822 40 61.0039062 40 63.9727046 40.6370811 65.5647853 42.336233 68.1118537 43.6370811 70.0618556 44 70.9687983 44 73L48 73C48 70.0312017 47.3629189 68.439121 45.663767 65.8920525 44.3629189 63.9420507 44 63.0351079 44 61.0039062 44 58.9723303 44.3632006 58.063974 45.6644337 56.1108537 47.3632006 53.5610444 48 51.968424 48 49 48 46.0313889 47.3630598 44.4390385 45.6641006 41.8905996 44.3630598 39.9390385 44 39.0313889 44 37 44 34.9686111 44.3630598 34.0609615 45.6641006 32.1094004 47.3630598 29.5609615 48 27.9686111 48 25 48 22.0313889 47.3630598 20.4390385 45.6641006 17.8905996 44.3630598 15.9390385 44 15.0313889 44 13 44 10.9684357 44.3631918 10.0601236 45.6644129 8.10710071 47.3631918 5.55737707 48 3.96477361 48 .996337891L44 .996337891zM52 .996337891C52 3.02790218 51.6368082 3.93621424 50.3355871 5.88923718 48.6368082 8.43896082 48 10.0315643 48 13 48 15.9686111 48.6369402 17.5609615 50.3358994 20.1094004 51.6369402 22.0609615 52 22.9686111 52 25 52 27.0313889 51.6369402 27.9390385 50.3358994 29.8905996 48.6369402 32.4390385 48 34.0313889 48 37 48 39.9686111 48.6369402 41.5609615 50.3358994 44.1094004 51.6369402 46.0609615 52 46.9686111 52 49 52 51.031576 51.6367994 51.9399322 50.3355663 53.8930526 48.6367994 56.4428619 48 58.0354822 48 61.0039062 48 63.9727046 48.6370811 65.5647853 50.336233 68.1118537 51.6370811 70.0618556 52 70.9687983 52 73L56 73C56 70.0312017 55.3629189 68.439121 53.663767 65.8920525 52.3629189 63.9420507 52 63.0351079 52 61.0039062 52 58.9723303 52.3632006 58.063974 53.6644337 56.1108537 55.3632006 53.5610444 56 51.968424 56 49 56 46.0313889 55.3630598 44.4390385 53.6641006 41.8905996 52.3630598 39.9390385 52 39.0313889 52 37 52 34.9686111 52.3630598 34.0609615 53.6641006 32.1094004 55.3630598 29.5609615 56 27.9686111 56 25 56 22.0313889 55.3630598 20.4390385 53.6641006 17.8905996 52.3630598 15.9390385 52 15.0313889 52 13 52 10.9684357 52.3631918 10.0601236 53.6644129 8.10710071 55.3631918 5.55737707 56 3.96477361 56 .996337891L52 .996337891zM60 .996337891C60 3.02790218 59.6368082 3.93621424 58.3355871 5.88923718 56.6368082 8.43896082 56 10.0315643 56 13 56 15.9686111 56.6369402 17.5609615 58.3358994 20.1094004 59.6369402 22.0609615 60 22.9686111 60 25 60 27.0313889 59.6369402 27.9390385 58.3358994 29.8905996 56.6369402 32.4390385 56 34.0313889 56 37 56 39.9686111 56.6369402 41.5609615 58.3358994 44.1094004 59.6369402 46.0609615 60 46.9686111 60 49 60 51.031576 59.6367994 51.9399322 58.3355663 53.8930526 56.6367994 56.4428619 56 58.0354822 56 61.0039062 56 63.9727046 56.6370811 65.5647853 58.336233 68.1118537 59.6370811 70.0618556 60 70.9687983 60 73L64 73C64 70.0312017 63.3629189 68.439121 61.663767 65.8920525 60.3629189 63.9420507 60 63.0351079 60 61.0039062 60 58.9723303 60.3632006 58.063974 61.6644337 56.1108537 63.3632006 53.5610444 64 51.968424 64 49 64 46.0313889 63.3630598 44.4390385 61.6641006 41.8905996 60.3630598 39.9390385 60 39.0313889 60 37 60 34.9686111 60.3630598 34.0609615 61.6641006 32.1094004 63.3630598 29.5609615 64 27.9686111 64 25 64 22.0313889 63.3630598 20.4390385 61.6641006 17.8905996 60.3630598 15.9390385 60 15.0313889 60 13 60 10.9684357 60.3631918 10.0601236 61.6644129 8.10710071 63.3631918 5.55737707 64 3.96477361 64 .996337891L60 .996337891zM68 .996337891C68 3.02790218 67.6368082 3.93621424 66.3355871 5.88923718 64.6368082 8.43896082 64 10.0315643 64 13 64 15.9686111 64.6369402 17.5609615 66.3358994 20.1094004 67.6369402 22.0609615 68 22.9686111 68 25 68 27.0313889 67.6369402 27.9390385 66.3358994 29.8905996 64.6369402 32.4390385 64 34.0313889 64 37 64 39.9686111 64.6369402 41.5609615 66.3358994 44.1094004 67.6369402 46.0609615 68 46.9686111 68 49 68 51.031576 67.6367994 51.9399322 66.3355663 53.8930526 64.6367994 56.4428619 64 58.0354822 64 61.0039062 64 63.9727046 64.6370811 65.5647853 66.336233 68.1118537 67.6370811 70.0618556 68 70.9687983 68 73L72 73C72 70.0312017 71.3629189 68.439121 69.663767 65.8920525 68.3629189 63.9420507 68 63.0351079 68 61.0039062 68 58.9723303 68.3632006 58.063974 69.6644337 56.1108537 71.3632006 53.5610444 72 51.968424 72 49 72 46.0313889 71.3630598 44.4390385 69.6641006 41.8905996 68.3630598 39.9390385 68 39.0313889 68 37 68 34.9686111 68.3630598 34.0609615 69.6641006 32.1094004 71.3630598 29.5609615 72 27.9686111 72 25 72 22.0313889 71.3630598 20.4390385 69.6641006 17.8905996 68.3630598 15.9390385 68 15.0313889 68 13 68 10.9684357 68.3631918 10.0601236 69.6644129 8.10710071 71.3631918 5.55737707 72 3.96477361 72 .996337891L68 .996337891zM28 .996337891C28 3.02790218 27.6368082 3.93621424 26.3355871 5.88923718 24.6368082 8.43896082 24 10.0315643 24 13 24 15.9686111 24.6369402 17.5609615 26.3358994 20.1094004 27.6369402 22.0609615 28 22.9686111 28 25 28 27.0313889 27.6369402 27.9390385 26.3358994 29.8905996 24.6369402 32.4390385 24 34.0313889 24 37 24 39.9686111 24.6369402 41.5609615 26.3358994 44.1094004 27.6369402 46.0609615 28 46.9686111 28 49 28 51.031576 27.6367994 51.9399322 26.3355663 53.8930526 24.6367994 56.4428619 24 58.0354822 24 61.0039062 24 63.9727046 24.6370811 65.5647853 26.336233 68.1118537 27.6370811 70.0618556 28 70.9687983 28 73L32 73C32 70.0312017 31.3629189 68.439121 29.663767 65.8920525 28.3629189 63.9420507 28 63.0351079 28 61.0039062 28 58.9723303 28.3632006 58.063974 29.6644337 56.1108537 31.3632006 53.5610444 32 51.968424 32 49 32 46.0313889 31.3630598 44.4390385 29.6641006 41.8905996 28.3630598 39.9390385 28 39.0313889 28 37 28 34.9686111 28.3630598 34.0609615 29.6641006 32.1094004 31.3630598 29.5609615 32 27.9686111 32 25 32 22.0313889 31.3630598 20.4390385 29.6641006 17.8905996 28.3630598 15.9390385 28 15.0313889 28 13 28 10.9684357 28.3631918 10.0601236 29.6644129 8.10710071 31.3631918 5.55737707 32 3.96477361 32 .996337891L28 .996337891zM20 .996337891C20 3.02790218 19.6368082 3.93621424 18.3355871 5.88923718 16.6368082 8.43896082 16 10.0315643 16 13 16 15.9686111 16.6369402 17.5609615 18.3358994 20.1094004 19.6369402 22.0609615 20 22.9686111 20 25 20 27.0313889 19.6369402 27.9390385 18.3358994 29.8905996 16.6369402 32.4390385 16 34.0313889 16 37 16 39.9686111 16.6369402 41.5609615 18.3358994 44.1094004 19.6369402 46.0609615 20 46.9686111 20 49 20 51.031576 19.6367994 51.9399322 18.3355663 53.8930526 16.6367994 56.4428619 16 58.0354822 16 61.0039062 16 63.9727046 16.6370811 65.5647853 18.336233 68.1118537 19.6370811 70.0618556 20 70.9687983 20 73L24 73C24 70.0312017 23.3629189 68.439121 21.663767 65.8920525 20.3629189 63.9420507 20 63.0351079 20 61.0039062 20 58.9723303 20.3632006 58.063974 21.6644337 56.1108537 23.3632006 53.5610444 24 51.968424 24 49 24 46.0313889 23.3630598 44.4390385 21.6641006 41.8905996 20.3630598 39.9390385 20 39.0313889 20 37 20 34.9686111 20.3630598 34.0609615 21.6641006 32.1094004 23.3630598 29.5609615 24 27.9686111 24 25 24 22.0313889 23.3630598 20.4390385 21.6641006 17.8905996 20.3630598 15.9390385 20 15.0313889 20 13 20 10.9684357 20.3631918 10.0601236 21.6644129 8.10710071 23.3631918 5.55737707 24 3.96477361 24 .996337891L20 .996337891zM12 .996337891C12 3.02790218 11.6368082 3.93621424 10.3355871 5.88923718 8.63680818 8.43896082 8 10.0315643 8 13 8 15.9686111 8.63694018 17.5609615 10.3358994 20.1094004 11.6369402 22.0609615 12 22.9686111 12 25 12 27.0313889 11.6369402 27.9390385 10.3358994 29.8905996 8.63694018 32.4390385 8 34.0313889 8 37 8 39.9686111 8.63694018 41.5609615 10.3358994 44.1094004 11.6369402 46.0609615 12 46.9686111 12 49 12 51.031576 11.6367994 51.9399322 10.3355663 53.8930526 8.63679938 56.4428619 8 58.0354822 8 61.0039062 8 63.9727046 8.63708114 65.5647853 10.336233 68.1118537 11.6370811 70.0618556 12 70.9687983 12 73L16 73C16 70.0312017 15.3629189 68.439121 13.663767 65.8920525 12.3629189 63.9420507 12 63.0351079 12 61.0039062 12 58.9723303 12.3632006 58.063974 13.6644337 56.1108537 15.3632006 53.5610444 16 51.968424 16 49 16 46.0313889 15.3630598 44.4390385 13.6641006 41.8905996 12.3630598 39.9390385 12 39.0313889 12 37 12 34.9686111 12.3630598 34.0609615 13.6641006 32.1094004 15.3630598 29.5609615 16 27.9686111 16 25 16 22.0313889 15.3630598 20.4390385 13.6641006 17.8905996 12.3630598 15.9390385 12 15.0313889 12 13 12 10.9684357 12.3631918 10.0601236 13.6644129 8.10710071 15.3631918 5.55737707 16 3.96477361 16 .996337891L12 .996337891zM4 .996337891C4 3.02790218 3.63680818 3.93621424 2.33558709 5.88923718.636808178 8.43896082 0 10.0315643 0 13 0 15.9686111.636940177 17.5609615 2.33589941 20.1094004 3.63694018 22.0609615 4 22.9686111 4 25 4 27.0313889 3.63694018 27.9390385 2.33589941 29.8905996.636940177 32.4390385 0 34.0313889 0 37 0 39.9686111.636940177 41.5609615 2.33589941 44.1094004 3.63694018 46.0609615 4 46.9686111 4 49 4 51.031576 3.63679938 51.9399322 2.33556628 53.8930526.636799383 56.4428619 0 58.0354822 0 61.0039062 0 63.9727046.637081144 65.5647853 2.33623299 68.1118537 3.63708114 70.0618556 4 70.9687983 4 73L8 73C8 70.0312017 7.36291886 68.439121 5.66376701 65.8920525 4.36291886 63.9420507 4 63.0351079 4 61.0039062 4 58.9723303 4.36320062 58.063974 5.66443372 56.1108537 7.36320062 53.5610444 8 51.968424 8 49 8 46.0313889 7.36305982 44.4390385 5.66410059 41.8905996 4.36305982 39.9390385 4 39.0313889 4 37 4 34.9686111 4.36305982 34.0609615 5.66410059 32.1094004 7.36305982 29.5609615 8 27.9686111 8 25 8 22.0313889 7.36305982 20.4390385 5.66410059 17.8905996 4.36305982 15.9390385 4 15.0313889 4 13 4 10.9684357 4.36319182 10.0601236 5.66441291 8.10710071 7.36319182 5.55737707 8 3.96477361 8 .996337891L4 .996337891z\" mask=\"url(#overmind-sign-only-b)\"/>\n    <path fill=\"#FFF\" d=\"M36,47 C26,47 22,37 22,37 C22,37 26,27 36,27 C46,27 50,37 50,37 C50,37 46,47 36,47 Z M36,44 C39.8659932,44 43,40.8659932 43,37 C43,33.1340068 39.8659932,30 36,30 C32.1340068,30 29,33.1340068 29,37 C29,40.8659932 32.1340068,44 36,44 Z M36,41 C33.790861,41 32,39.209139 32,37 C32,34.790861 33.790861,33 36,33 C38.209139,33 40,34.790861 40,37 C40,39.209139 38.209139,41 36,41 Z\" mask=\"url(#overmind-sign-only-b)\"/>\n  </g>\n</svg>\n"
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 9.806640625,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"224\" height=\"74\">\n  <defs>\n    <path id=\"a\" d=\"M29.2 2.185S8.136 12.752 6.738 13.415C2.246 15.662 0 17.908 0 23.523v26.954c0 5.615 2.246 7.873 6.738 10.119L29.2 71.816c4.492 2.246 8.985 2.246 13.477 0 4.497-2.246 20.215-10.108 22.461-11.231 4.493-2.247 6.739-4.493 6.739-10.108V23.523c0-5.67-2.242-7.873-6.739-10.108L42.677 2.185c-4.492-2.247-8.985-2.247-13.477 0Z\"/>\n  </defs>\n  <g fill=\"none\" fill-rule=\"evenodd\">\n    <mask id=\"b\" fill=\"#fff\">\n      <use xlink:href=\"#a\"/>\n    </mask>\n    <path fill=\"#9012FE\" d=\"M30 6s-18.755 9.409-20 10c-4 2-6 4-6 9v24c0 5 2 7.01 6 9.01L30 68c4 2 8 2 12 0 4.004-1.999 18-9 20-10 4-2 6-4 6-9V25c0-5.048-1.996-7.01-6-9L42 6c-4-2-8-2-12 0Z\" mask=\"url(#b)\"/>\n    <path fill=\"#D01BF5\" d=\"M36 .996c0 2.032-.363 2.94-1.664 4.893C32.636 8.44 32 10.032 32 13c0 2.969.637 4.561 2.336 7.11C35.636 22.06 36 22.968 36 25c0 2.031-.363 2.939-1.664 4.89C32.636 32.44 32 34.032 32 37c0 2.969.637 4.561 2.336 7.11C35.636 46.06 36 46.968 36 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C35.637 70.062 36 70.969 36 73h4c0-2.969-.637-4.56-2.336-7.108C36.363 63.942 36 63.035 36 61.004c0-2.032.363-2.94 1.664-4.893C39.364 53.56 40 51.968 40 49c0-2.969-.637-4.561-2.336-7.11C36.364 39.94 36 39.032 36 37c0-2.031.363-2.939 1.664-4.89C39.364 29.56 40 27.968 40 25c0-2.969-.637-4.561-2.336-7.11C36.364 15.94 36 15.032 36 13c0-2.032.363-2.94 1.664-4.893C39.364 5.557 40 3.965 40 .997h-4ZM44 .996c0 2.032-.363 2.94-1.664 4.893C40.636 8.44 40 10.032 40 13c0 2.969.637 4.561 2.336 7.11C43.636 22.06 44 22.968 44 25c0 2.031-.363 2.939-1.664 4.89C40.636 32.44 40 34.032 40 37c0 2.969.637 4.561 2.336 7.11C43.636 46.06 44 46.968 44 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C43.637 70.062 44 70.969 44 73h4c0-2.969-.637-4.56-2.336-7.108C44.363 63.942 44 63.035 44 61.004c0-2.032.363-2.94 1.664-4.893C47.364 53.56 48 51.968 48 49c0-2.969-.637-4.561-2.336-7.11C44.364 39.94 44 39.032 44 37c0-2.031.363-2.939 1.664-4.89C47.364 29.56 48 27.968 48 25c0-2.969-.637-4.561-2.336-7.11C44.364 15.94 44 15.032 44 13c0-2.032.363-2.94 1.664-4.893C47.364 5.557 48 3.965 48 .997h-4ZM52 .996c0 2.032-.363 2.94-1.664 4.893C48.636 8.44 48 10.032 48 13c0 2.969.637 4.561 2.336 7.11C51.636 22.06 52 22.968 52 25c0 2.031-.363 2.939-1.664 4.89C48.636 32.44 48 34.032 48 37c0 2.969.637 4.561 2.336 7.11C51.636 46.06 52 46.968 52 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C51.637 70.062 52 70.969 52 73h4c0-2.969-.637-4.56-2.336-7.108C52.363 63.942 52 63.035 52 61.004c0-2.032.363-2.94 1.664-4.893C55.364 53.56 56 51.968 56 49c0-2.969-.637-4.561-2.336-7.11C52.364 39.94 52 39.032 52 37c0-2.031.363-2.939 1.664-4.89C55.364 29.56 56 27.968 56 25c0-2.969-.637-4.561-2.336-7.11C52.364 15.94 52 15.032 52 13c0-2.032.363-2.94 1.664-4.893C55.364 5.557 56 3.965 56 .997h-4ZM60 .996c0 2.032-.363 2.94-1.664 4.893C56.636 8.44 56 10.032 56 13c0 2.969.637 4.561 2.336 7.11C59.636 22.06 60 22.968 60 25c0 2.031-.363 2.939-1.664 4.89C56.636 32.44 56 34.032 56 37c0 2.969.637 4.561 2.336 7.11C59.636 46.06 60 46.968 60 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C59.637 70.062 60 70.969 60 73h4c0-2.969-.637-4.56-2.336-7.108C60.363 63.942 60 63.035 60 61.004c0-2.032.363-2.94 1.664-4.893C63.364 53.56 64 51.968 64 49c0-2.969-.637-4.561-2.336-7.11C60.364 39.94 60 39.032 60 37c0-2.031.363-2.939 1.664-4.89C63.364 29.56 64 27.968 64 25c0-2.969-.637-4.561-2.336-7.11C60.364 15.94 60 15.032 60 13c0-2.032.363-2.94 1.664-4.893C63.364 5.557 64 3.965 64 .997h-4ZM68 .996c0 2.032-.363 2.94-1.664 4.893C64.636 8.44 64 10.032 64 13c0 2.969.637 4.561 2.336 7.11C67.636 22.06 68 22.968 68 25c0 2.031-.363 2.939-1.664 4.89C64.636 32.44 64 34.032 64 37c0 2.969.637 4.561 2.336 7.11C67.636 46.06 68 46.968 68 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C67.637 70.062 68 70.969 68 73h4c0-2.969-.637-4.56-2.336-7.108C68.363 63.942 68 63.035 68 61.004c0-2.032.363-2.94 1.664-4.893C71.364 53.56 72 51.968 72 49c0-2.969-.637-4.561-2.336-7.11C68.364 39.94 68 39.032 68 37c0-2.031.363-2.939 1.664-4.89C71.364 29.56 72 27.968 72 25c0-2.969-.637-4.561-2.336-7.11C68.364 15.94 68 15.032 68 13c0-2.032.363-2.94 1.664-4.893C71.364 5.557 72 3.965 72 .997h-4ZM28 .996c0 2.032-.363 2.94-1.664 4.893C24.636 8.44 24 10.032 24 13c0 2.969.637 4.561 2.336 7.11C27.636 22.06 28 22.968 28 25c0 2.031-.363 2.939-1.664 4.89C24.636 32.44 24 34.032 24 37c0 2.969.637 4.561 2.336 7.11C27.636 46.06 28 46.968 28 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C27.637 70.062 28 70.969 28 73h4c0-2.969-.637-4.56-2.336-7.108C28.363 63.942 28 63.035 28 61.004c0-2.032.363-2.94 1.664-4.893C31.364 53.56 32 51.968 32 49c0-2.969-.637-4.561-2.336-7.11C28.364 39.94 28 39.032 28 37c0-2.031.363-2.939 1.664-4.89C31.364 29.56 32 27.968 32 25c0-2.969-.637-4.561-2.336-7.11C28.364 15.94 28 15.032 28 13c0-2.032.363-2.94 1.664-4.893C31.364 5.557 32 3.965 32 .997h-4ZM20 .996c0 2.032-.363 2.94-1.664 4.893C16.636 8.44 16 10.032 16 13c0 2.969.637 4.561 2.336 7.11C19.636 22.06 20 22.968 20 25c0 2.031-.363 2.939-1.664 4.89C16.636 32.44 16 34.032 16 37c0 2.969.637 4.561 2.336 7.11C19.636 46.06 20 46.968 20 49c0 2.032-.363 2.94-1.664 4.893-1.7 2.55-2.336 4.142-2.336 7.11 0 2.97.637 4.562 2.336 7.109C19.637 70.062 20 70.969 20 73h4c0-2.969-.637-4.56-2.336-7.108C20.363 63.942 20 63.035 20 61.004c0-2.032.363-2.94 1.664-4.893C23.364 53.56 24 51.968 24 49c0-2.969-.637-4.561-2.336-7.11C20.364 39.94 20 39.032 20 37c0-2.031.363-2.939 1.664-4.89C23.364 29.56 24 27.968 24 25c0-2.969-.637-4.561-2.336-7.11C20.364 15.94 20 15.032 20 13c0-2.032.363-2.94 1.664-4.893C23.364 5.557 24 3.965 24 .997h-4Z\" mask=\"url(#b)\"/>\n    <path fill=\"#D01BF5\" d=\"M12 .996c0 2.032-.363 2.94-1.664 4.893C8.636 8.44 8 10.032 8 13c0 2.969.637 4.561 2.336 7.11C11.636 22.06 12 22.968 12 25c0 2.031-.363 2.939-1.664 4.89C8.636 32.44 8 34.032 8 37c0 2.969.637 4.561 2.336 7.11C11.636 46.06 12 46.968 12 49c0 2.032-.363 2.94-1.664 4.893C8.636 56.443 8 58.035 8 61.003c0 2.97.637 4.562 2.336 7.109C11.637 70.062 12 70.969 12 73h4c0-2.969-.637-4.56-2.336-7.108C12.363 63.942 12 63.035 12 61.004c0-2.032.363-2.94 1.664-4.893C15.364 53.56 16 51.968 16 49c0-2.969-.637-4.561-2.336-7.11C12.364 39.94 12 39.032 12 37c0-2.031.363-2.939 1.664-4.89C15.364 29.56 16 27.968 16 25c0-2.969-.637-4.561-2.336-7.11C12.364 15.94 12 15.032 12 13c0-2.032.363-2.94 1.664-4.893C15.364 5.557 16 3.965 16 .997h-4ZM4 .996c0 2.032-.363 2.94-1.664 4.893C.636 8.44 0 10.032 0 13c0 2.969.637 4.561 2.336 7.11C3.636 22.06 4 22.968 4 25c0 2.031-.363 2.939-1.664 4.89C.636 32.44 0 34.032 0 37c0 2.969.637 4.561 2.336 7.11C3.636 46.06 4 46.968 4 49c0 2.032-.363 2.94-1.664 4.893C.636 56.443 0 58.035 0 61.003c0 2.97.637 4.562 2.336 7.109C3.637 70.062 4 70.969 4 73h4c0-2.969-.637-4.56-2.336-7.108C4.363 63.942 4 63.035 4 61.004c0-2.032.363-2.94 1.664-4.893C7.364 53.56 8 51.968 8 49c0-2.969-.637-4.561-2.336-7.11C4.364 39.94 4 39.032 4 37c0-2.031.363-2.939 1.664-4.89C7.364 29.56 8 27.968 8 25c0-2.969-.637-4.561-2.336-7.11C4.364 15.94 4 15.032 4 13c0-2.032.363-2.94 1.664-4.893C7.364 5.557 8 3.965 8 .997H4Z\" mask=\"url(#b)\"/>\n    <path fill=\"#FFF\" d=\"M36 47c10 0 14-10 14-10s-4-10-14-10-14 10-14 10 4 10 14 10Zm0-3a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-3a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z\" mask=\"url(#b)\"/>\n    <path fill=\"#000\" d=\"M98.46 46.49c6.79 0 10.92-4.025 10.92-12.25 0-8.295-4.13-12.285-10.92-12.285s-10.92 3.99-10.92 12.285c0 8.225 4.13 12.25 10.92 12.25Zm0-22.365c5.355 0 8.47 3.255 8.47 10.115 0 6.825-3.115 10.08-8.47 10.08s-8.47-3.255-8.47-10.08c0-6.86 3.115-10.115 8.47-10.115Zm20.125 22.155c.455 0 .84-.245 1.05-.7l5.95-14.14c.035-.105.105-.245.105-.49 0-.63-.49-1.12-1.12-1.12-.63 0-.91.385-1.05.735l-4.935 12.075-4.935-12.075c-.14-.35-.42-.735-1.05-.735-.63 0-1.12.49-1.12 1.12 0 .245.07.385.105.49l5.95 14.14c.21.455.595.7 1.05.7Zm8.89-8.26c0 5.88 2.905 8.435 7.56 8.435 3.115 0 4.935-1.435 5.46-1.96.21-.21.385-.42.385-.805 0-.56-.455-1.015-1.015-1.015-.28 0-.42.07-.63.21-.98.735-2.17 1.505-4.2 1.505-3.29 0-5.285-2.24-5.285-5.705h10.22c1.4 0 1.4-1.225 1.4-2.24 0-2.38-1.085-6.825-6.685-6.825-4.55 0-7.21 3.01-7.21 8.4Zm11.69-1.295h-9.415c.21-3.115 1.89-5.075 4.935-5.075 3.605 0 4.48 2.555 4.48 5.075Zm7.91-5.775c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-7.84c0-3.22 1.645-5.46 4.865-5.46a1.09 1.09 0 0 0 1.085-1.085 1.09 1.09 0 0 0-1.085-1.085c-2.415 0-4.165 1.19-4.865 2.8v-1.54Zm26.04-1.33c-2.695 0-4.235 1.085-5.11 2.45-.84-1.4-2.695-2.45-5.565-2.45-2.275 0-3.955 1.155-4.55 2.45v-1.12c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-8.645c0-2.94 1.05-4.9 4.305-4.9 3.43 0 4.305 1.89 4.305 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.59 1.365-4.2 4.375-4.2 3.395 0 4.375 1.89 4.375 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.975-1.225-6.195-6.615-6.195Zm13.02 1.33c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12V30.95Zm-1.12-4.41c.84 0 1.33-.49 1.33-1.33 0-1.015-.49-1.4-1.33-1.4-.84 0-1.33.385-1.33 1.4 0 .84.49 1.33 1.33 1.33Zm12.565 3.08c-2.275 0-3.99 1.12-4.655 2.45v-1.12c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v14.21c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-8.645c0-2.8 1.19-4.9 4.655-4.9 3.395 0 4.2 1.89 4.2 4.655v8.89c0 .63.49 1.12 1.12 1.12.63 0 1.12-.49 1.12-1.12v-9.345c0-2.975-1.05-6.195-6.44-6.195Zm21.385 9.94c0 3.325-1.925 4.865-4.62 4.865-3.22 0-4.935-2.03-4.935-6.405 0-4.305 1.75-6.37 4.935-6.37 3.29 0 4.62 3.08 4.62 3.08v4.83Zm-4.76-9.94c-4.515 0-7.035 2.66-7.035 8.4s2.66 8.435 7.175 8.435c3.99 0 6.86-2.275 6.86-6.895V22.2c0-.63-.49-1.12-1.12-1.12-.63 0-1.12.49-1.12 1.12v9.695c-.805-1.12-2.52-2.275-4.76-2.275Z\"/>\n  </g>\n</svg>\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 8.380859375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path\"\n\t\"strings\"\n\n\t\"github.com/DarthSim/overmind/v2/start\"\n\t\"github.com/Envek/godotenv\"\n\n\t\"github.com/urfave/cli\"\n)\n\nconst version = \"2.5.1\"\n\nfunc socketFlags(s, n *string) []cli.Flag {\n\treturn []cli.Flag{\n\t\tcli.StringFlag{\n\t\t\tName:        \"socket, s\",\n\t\t\tEnvVar:      \"OVERMIND_SOCKET\",\n\t\t\tUsage:       \"Path to overmind socket (in case of using unix socket) or address to bind (in other cases)\",\n\t\t\tValue:       \"./.overmind.sock\",\n\t\t\tDestination: s,\n\t\t},\n\t\tcli.StringFlag{\n\t\t\tName:        \"network, S\",\n\t\t\tEnvVar:      \"OVERMIND_NETWORK\",\n\t\t\tUsage:       \"Network to use for commands. Can be 'tcp', 'tcp4', 'tcp6' or 'unix'\",\n\t\t\tValue:       \"unix\",\n\t\t\tDestination: n,\n\t\t},\n\t}\n}\n\nfunc setupStartCmd() cli.Command {\n\tc := start.Handler{}\n\n\treturn cli.Command{\n\t\tName:    \"start\",\n\t\tAliases: []string{\"s\"},\n\t\tUsage:   \"Run procfile\",\n\t\tAction:  c.Run,\n\t\tFlags: append(\n\t\t\t[]cli.Flag{\n\t\t\t\tcli.StringFlag{Name: \"title, w\", EnvVar: \"OVERMIND_TITLE\", Usage: \"Specify a title of the application\", Destination: &c.Title},\n\t\t\t\tcli.StringFlag{Name: \"procfile, f\", EnvVar: \"OVERMIND_PROCFILE\", Usage: \"Specify a Procfile to load\", Value: \"./Procfile\", Destination: &c.Procfile},\n\t\t\t\tcli.StringFlag{Name: \"processes, l\", EnvVar: \"OVERMIND_PROCESSES\", Usage: \"Specify process names to launch. Divide names with comma\", Destination: &c.ProcNames},\n\t\t\t\tcli.StringFlag{Name: \"root, d\", Usage: \"Specify a working directory of application. Default: directory containing the Procfile\", Destination: &c.Root},\n\t\t\t\tcli.IntFlag{Name: \"timeout, t\", EnvVar: \"OVERMIND_TIMEOUT\", Usage: \"Specify the amount of time (in seconds) processes have to shut down gracefully before being brutally killed\", Value: 5, Destination: &c.Timeout},\n\t\t\t\tcli.IntFlag{Name: \"port, p\", EnvVar: \"OVERMIND_PORT,PORT\", Usage: \"Specify a port to use as the base\", Value: 5000, Destination: &c.PortBase},\n\t\t\t\tcli.IntFlag{Name: \"port-step, P\", EnvVar: \"OVERMIND_PORT_STEP\", Usage: \"Specify a step to increase port number\", Value: 100, Destination: &c.PortStep},\n\t\t\t\tcli.BoolFlag{Name: \"no-port, N\", EnvVar: \"OVERMIND_NO_PORT\", Usage: \"Don't set $PORT variable for processes\", Destination: &c.NoPort},\n\t\t\t\tcli.StringFlag{Name: \"can-die, c\", EnvVar: \"OVERMIND_CAN_DIE\", Usage: \"Specify names of process which can die without interrupting the other processes. Divide names with comma\", Destination: &c.CanDie},\n\t\t\t\tcli.BoolFlag{Name: \"any-can-die\", EnvVar: \"OVERMIND_ANY_CAN_DIE\", Usage: \"No dead processes should stop Overmind. Overrides can-die\", Destination: &c.AnyCanDie},\n\t\t\t\tcli.StringFlag{Name: \"auto-restart, r\", EnvVar: \"OVERMIND_AUTO_RESTART\", Usage: \"Specify names of process which will be auto restarted on death. Divide names with comma. Use 'all' as a process name to auto restart all processes on death.\", Destination: &c.AutoRestart},\n\t\t\t\tcli.StringFlag{Name: \"colors, b\", EnvVar: \"OVERMIND_COLORS\", Usage: \"Specify the xterm color codes that will be used to colorize process names. Divide codes with comma\"},\n\t\t\t\tcli.BoolFlag{Name: \"show-timestamps, T\", EnvVar: \"OVERMIND_SHOW_TIMESTAMPS\", Usage: \"Add timestamps to the output\", Destination: &c.ShowTimestamps},\n\t\t\t\tcli.StringFlag{Name: \"formation, m\", EnvVar: \"OVERMIND_FORMATION\", Usage: \"Specify the number of each process type to run. The value passed in should be in the format process=num,process=num. Use 'all' as a process name to set value for all processes\"},\n\t\t\t\tcli.IntFlag{Name: \"formation-port-step\", EnvVar: \"OVERMIND_FORMATION_PORT_STEP\", Usage: \"Specify a step to increase port number for the next instance of a process\", Value: 10, Destination: &c.FormationPortStep},\n\t\t\t\tcli.StringFlag{Name: \"stop-signals, i\", EnvVar: \"OVERMIND_STOP_SIGNALS\", Usage: \"Specify a signal that will be sent to each process when Overmind will try to stop them. The value passed in should be in the format process=signal,process=signal. Supported signals are: ABRT, INT, KILL, QUIT, STOP, TERM, USR1, USR2\"},\n\t\t\t\tcli.BoolFlag{Name: \"daemonize, D\", EnvVar: \"OVERMIND_DAEMONIZE\", Usage: \"Launch Overmind as a daemon. Use 'overmind echo' to view logs and 'overmind quit' to gracefully quit daemonized instance\", Destination: &c.Daemonize},\n\t\t\t\tcli.StringFlag{Name: \"tmux-config, F\", EnvVar: \"OVERMIND_TMUX_CONFIG\", Usage: \"Specify an alternative tmux config path to be used by Overmind\", Destination: &c.TmuxConfigPath},\n\t\t\t\tcli.StringFlag{Name: \"ignored-processes, x\", EnvVar: \"OVERMIND_IGNORED_PROCESSES\", Usage: \"Specify process names to prevent from launching. Useful if you want to run all but one or two processes. Divide names with comma. Takes precedence over the 'processes' flag.\", Destination: &c.IgnoredProcNames},\n\t\t\t\tcli.StringFlag{Name: \"shell, H\", EnvVar: \"OVERMIND_SHELL\", Usage: \"Specify shell to run processes with.\", Value: \"sh\", Destination: &c.Shell},\n\t\t\t},\n\t\t\tsocketFlags(&c.SocketPath, &c.Network)...,\n\t\t),\n\t}\n}\n\nfunc setupRestartCmd() cli.Command {\n\tc := cmdRestartHandler{}\n\n\treturn cli.Command{\n\t\tName:      \"restart\",\n\t\tAliases:   []string{\"r\"},\n\t\tUsage:     \"Restart specified processes\",\n\t\tAction:    c.Run,\n\t\tArgsUsage: \"[process name...]\",\n\t\tFlags:     socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc setupStopCmd() cli.Command {\n\tc := cmdStopHandler{}\n\n\treturn cli.Command{\n\t\tName:      \"stop\",\n\t\tAliases:   []string{\"interrupt\", \"i\"},\n\t\tUsage:     \"Stop specified processes without quitting Overmind itself\",\n\t\tAction:    c.Run,\n\t\tArgsUsage: \"[process name...]\",\n\t\tFlags:     socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc setupConnectCmd() cli.Command {\n\tc := cmdConnectHandler{}\n\n\treturn cli.Command{\n\t\tName:      \"connect\",\n\t\tAliases:   []string{\"c\"},\n\t\tUsage:     \"Connect to the tmux session of the specified process\",\n\t\tAction:    c.Run,\n\t\tArgsUsage: \"[process name]\",\n\t\tFlags: append(\n\t\t\t[]cli.Flag{\n\t\t\t\tcli.BoolFlag{Name: \"control-mode, c\", EnvVar: \"OVERMIND_CONTROL_MODE\", Usage: \"Connect to the tmux session in control mode\", Destination: &c.ControlMode},\n\t\t\t},\n\t\t\tsocketFlags(&c.SocketPath, &c.Network)...,\n\t\t),\n\t}\n}\n\nfunc setupQuitCmd() cli.Command {\n\tc := cmdQuitHandler{}\n\n\treturn cli.Command{\n\t\tName:    \"quit\",\n\t\tAliases: []string{\"q\"},\n\t\tUsage:   \"Gracefully quits Overmind. Same as sending SIGINT\",\n\t\tAction:  c.Run,\n\t\tFlags:   socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc setupKillCmd() cli.Command {\n\tc := cmdKillHandler{}\n\n\treturn cli.Command{\n\t\tName:    \"kill\",\n\t\tAliases: []string{\"k\"},\n\t\tUsage:   \"Kills all processes\",\n\t\tAction:  c.Run,\n\t\tFlags:   socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc setupRunCmd() cli.Command {\n\tc := cmdRunHandler{}\n\n\treturn cli.Command{\n\t\tName:            \"run\",\n\t\tAliases:         []string{\"exec\", \"e\"},\n\t\tUsage:           \"Runs provided command within the Overmind environment\",\n\t\tAction:          c.Run,\n\t\tSkipFlagParsing: true,\n\t}\n}\n\nfunc setupEchoCmd() cli.Command {\n\tc := cmdEchoHandler{}\n\n\treturn cli.Command{\n\t\tName:   \"echo\",\n\t\tUsage:  \"Echoes output from master Overmind instance\",\n\t\tAction: c.Run,\n\t\tFlags:  socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc setupStatusCmd() cli.Command {\n\tc := cmdStatusHandler{}\n\n\treturn cli.Command{\n\t\tName:    \"status\",\n\t\tAliases: []string{\"ps\"},\n\t\tUsage:   \"Prints process statuses\",\n\t\tAction:  c.Run,\n\t\tFlags:   socketFlags(&c.SocketPath, &c.Network),\n\t}\n}\n\nfunc main() {\n\tloadEnvFiles()\n\n\tapp := cli.NewApp()\n\n\tapp.Name = \"Overmind\"\n\tapp.HelpName = \"overmind\"\n\tapp.Usage = \"The mind to rule processes of your development environment\"\n\tapp.Description = strings.Join([]string{\n\t\t\"Overmind runs commands specified in procfile in a tmux session.\",\n\t\t\"This allows to connect to each process and manage processes on fly.\",\n\t}, \" \")\n\tapp.Author = \"Sergey \\\"DarthSim\\\" Alexandrovich\"\n\tapp.Email = \"darthsim@gmail.com\"\n\tapp.Version = version\n\n\tapp.Commands = []cli.Command{\n\t\tsetupStartCmd(),\n\t\tsetupRestartCmd(),\n\t\tsetupStopCmd(),\n\t\tsetupConnectCmd(),\n\t\tsetupQuitCmd(),\n\t\tsetupKillCmd(),\n\t\tsetupRunCmd(),\n\t\tsetupEchoCmd(),\n\t\tsetupStatusCmd(),\n\t}\n\n\tapp.Run(os.Args)\n}\n\nfunc loadEnvFiles() {\n\t// First load the specifically named overmind env files\n\tuserHomeDir, _ := os.UserHomeDir()\n\tloadEnvFile(path.Join(userHomeDir, \".overmind.env\"))\n\tloadEnvFile(\"./.overmind.env\")\n\n\t_, skipEnv := os.LookupEnv(\"OVERMIND_SKIP_ENV\")\n\tif !skipEnv {\n\t\tloadEnvFile(\"./.env\")\n\t}\n\n\tenvs := strings.Split(os.Getenv(\"OVERMIND_ENV\"), \",\")\n\tfor _, e := range envs {\n\t\tif len(e) > 0 {\n\t\t\tloadEnvFile(e)\n\t\t}\n\t}\n}\n\nfunc loadEnvFile(file string) {\n\terr := godotenv.Overload(file)\n\tif err != nil {\n\t\tif !os.IsNotExist(err) {\n\t\t\tfmt.Fprintln(os.Stderr, \"overmind: skipping\", file, \"due to error:\", err)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "start",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}