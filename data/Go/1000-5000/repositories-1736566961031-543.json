{
  "metadata": {
    "timestamp": 1736566961031,
    "page": 543,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FxPool/FXMinerProxy",
      "stars": 3013,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0556640625,
          "content": "*.tar.gz linguist-language=GO\n*.zip linguist-language=GO\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2022 FxPool\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.7607421875,
          "content": "[homeicon]:https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/home-en.png\n[rtlogicon]:https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/rt-log.png\n[fxminerproxyv3.zip]:https://github.com/FxPool/FXMinerProxy/releases/download/13.3.3/fxminerproxyv3windows.zip\n[简体中文]:https://github.com/FxPool/FXMinerProxy/blob/main/readmes/zh.md\n[English]:https://github.com/FxPool/FXMinerProxy/blob/main/readmes/English.md\n[randlogin]:https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/randlogin.png\n[bigminerexample]:https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/zh-example.png\n[app-x]:https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/app-x.png\n<p align=\"center\"><a  target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"500\" src=\"https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/logo.png\" alt=\"Vue logo\"></a></p>\n<p align=\"center\">\n  <a>\n    <img src=\"https://img.shields.io/badge/Release-13.3.3-orgin.svg\" alt=\"travis\">\n  </a>\n  <a>\n    <img src=\"https://img.shields.io/badge/Last_Update-2024 12 18-orgin.svg\" alt=\"travis\">\n  </a>\n  <a>\n    <img src=\"https://img.shields.io/badge/Language-GoLang-green.svg\" alt=\"travis\">\n  </a>\n  <a>\n    <img src=\"https://img.shields.io/badge/License-MIT-blue.svg\" alt=\"travis\">\n  </a>\n</p>\n<p align=\"center\">\n  6000台BTC矿机大矿场已长时间稳定运行超几个月以上\n</p>\n<p align=\"center\">\n  <a href=\"https://fxpool.github.io/cn/\" target=\"_blank\">使用教程-中文</a> •\n</p>\n<p align=\"center\">\n  <a href=\"https://www.youtube.com/watch?v=fAce-zatHqA\" target=\"_blank\">油管演示视频</a> •\n</p>\n<p align=\"center\">\n  <a href=\"https://www.youtube.com/watch?v=A0oGFG7CRIM&t=110s\" target=\"_blank\">隧道加密视频教程</a> •\n</p>\n\n# FXMinerProxy(原创正版)\n虚拟货币矿池中转抽水收费代理软件支持币种: `BTC`, `LTC`, `ZEC`, `ETC`, `ETHF`, `ETHW`, `RVN`, `CFX`, `BEAM`, `ERGO`, `BTG`, `AE`, `FLUX`, `FIRO`, `NEOXA`,`XMR`, `KASPA`, `GRIN`, `KDA`, `DASH`, `CKB`, `RXD`,`ZIL`,`ETHW_ZIL`,`ETHF_ZIL`,`ETC_ZIL`,`KDA`, `DASH`, `CKB` , `ZEN` , `NEXA`, `HNS`, `BCH`, `IRON`等等 币种一直在更新中可能这里没有展示完全请安装软件查看\n\n## 联系我们\n- 邮件: hansenloveyou520@gmail.com\n- [飞机新群](https://t.me/fxminerproxy_chat_cn)\n- 没有飞机群的一定要下载安装注册一个飞机群,可以先通过邮件联系,qq联系方式已经下线了\n\n## 免责声明\n    1.本客户端设计、维护人员仅提供技术服务，不以营利为目的，本客户端的运行遵守服务器所在地的法律法规。本客户端用户必须严格按照当地法律法规使用本软件，如使用本客户端违反当地法律，应承担相应的法律责任。\n    2.在使用本应用程序之前，请详细阅读本应用程序的描述。如果用户没有因本应用程序的技术问题造成任何损失，由用户自行负责，损失由应用程序开发和维护人员负责。无论如何，用户不得就此向开发者或维护者提出索赔或诉讼。\n    3.您应确保您不是中国大陆、古巴、伊朗、朝鲜、叙利亚、俄罗斯或其他受相关国家或政府或国际机构管理或执行的制裁的国家或地区的居民。由此产生的法律责任由本人承担。\n    4.Fxminerproxy是唯一一个正式的软件名称。\n\n## 收费系统模型\n<p><a target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"1200\" height=\"240\" src=\"https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/TollSys.png\"></a></p>\n\n## 后台面板\n![homeicon]\n![rtlogicon]\n\n## 支持语言\n  * [English]\n  * [简体中文]\n    \n## 手机APP\n- 老版本不在使用新版本即将上线开发中...\n![app-x]\n\n## 部署\n\n- `系统采用随机端口用户名和密码，启动的时候请注意控制台的打印`\n\n  ![randlogin]\n\n- 推荐配置`(理论单台矿机内存:100K~150K)`\n  | 矿机数 |     CPU |     内存 | 带宽    |\n  | ------- | ------- | ------- |  -------     |\n  | n<200       | 1 core |     1Gb | 2Mbps     |\n  |200<n<500    | 1 core |     2Gb | 4Mbps     |\n  |500<n<1000   | 2 core |     2Gb | 10Mbps    |\n  |1000<n<5000  | 2 core |     4Gb | 50Mbps    |\n  |5000<n<10000 | 4 core |     6Gb | 300Mbps   |\n  |n>10000      | 8 core |     16Gb| 500Mbps   |\n\n\n#### Linux 系统\n- **权限** `root`\n- **支持的系统** `centOS 7+ / debian 8+ / ubuntu 16+`\n- **推荐系统** `debian`\n- **需要curl** 工具 **debian ubuntu 下载:** `apt-get install curl`\n- **需要wget** 工具 **debian ubuntu 下载:** `apt-get install wget`\n- 最新的版本\n  * 外网\n  ```shell\n  bash <(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/install_zh.sh)\n  ```\n- 安装指定版本\n  * 外网\n  ```shell\n  bash <(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/oldversion/install_zh.sh) 版本号\n  ```\n- 稳定的版本\n  * 外网\n  ```shell\n  bash <(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/oldversion/install_zh.sh) 13.0.4\n  ```\n#### windows系统\n- **权限** `administrator`\n- **系统支持** `windows8+`\n- **推荐系统** `WindowsServer2012`\n- **如何运行**\n\n  * 1 解压 fxminerproxyv3.zip\n  * 2 打开 fxminerproxyv3 文件夹然后运行 `run.exe` 只能运行run.exe可保证程序不死机\n\n- **下载**\n\n  | 版本 | 名称                |\n  | ------- | -------             |\n  | 最新   | [fxminerproxyv3.zip]|\n  \n- 下载老版本 [github releases](https://github.com/FxPool/FXMinerProxy/releases)\n\n## 特色\n* 支持 Windows & Linux.\n* 日志系统.\n  * 矿机实时日志.`(模拟矿工内核显示的日志可以分析矿机有效无效份额提交延迟信息等)`\n  * 矿机历史日志. `(算力日志, 上线离线日志, 抽水日志等)`\n  * 系统日志\n* 钱包.`(支持接入第三方API显示历史算力曲线和收益数据等)`\n  * 支持 鱼池\n  * 支持 币印\n  * 支持 微比特\n  * 支持 蚂蚁池\n  * 支持 E池\n* 曲线\n  * 单个矿机的历史算力曲线统计\n  * 份额曲线. `(抽水份额 矿机总份额 矿工份额 1小时份额 24小时份额)`\n  * 延迟历史曲线.\n  * 总算力曲线.\n* 事件通知.`(如矿机离线和一些核心操作的事件通知(可以通过邮件或者server酱))`\n* 超高并发超低内存.\n* 端口参数热更新(不用重启).\n* 支持单台矿机抽水比例修改(只支持在线矿机).\n* 支持芯片机器的跨矿池抽水.\n* 支持快速响应`(矿机本地显示的延迟是当前服务器到矿机的延迟而不是矿池到矿机的延迟)`\n* 支持自定义ssl/tls证书上传.\n* 支持代理端口数据通过配置文件导入快速配置.\n* 支持动态计算芯片机器和一些不上报本地算力机器的算力(10分中计算一次会有误差只做参考).\n* 支持隧道加密技术。[sslmix隧道加密](https://github.com/FxPool/SSLMIX)。[aesmix隧道加密](https://github.com/FxPool/AESMIX)\n* 支持服务器到矿池使用ssl连接.\n* 开发费用: \n  * 所有币种 0.27%\n  * 个人 0%\n  * 激活后:(默认)\n    * **前提:** 矿机数量 > `200`\n    * 矿机数 200-1000: 0.24%\n    * 矿机数 1000-5000: 0.2%\n    * 矿机数 5000-10000: 0.15%\n    * 矿机数 > 10000: 0.1%\n\n## 看门狗程序\n保证程序出现意外死机后立即重启程序\n* linux使用这个脚本(一键启动脚本已经自动加载手动安装的用户请使用这个脚本启动程序): **running.sh**\n* windows使用: **run.exe**\n\n## 使用说明书\n[User guide](https://fxpool.github.io/cn/)\n\n## API 开发文档\n[API Reference](https://fxpool.github.io/cn/)\n\n## 5000+的BTC大矿场长时间稳定运行\n![bigminerexample]\n\n## 稳定的抽水算力曲线\n- **鱼池 BTC 例子**\n<p><a target=\"_blank\" rel=\"noopener noreferrer\"><img width=\"1200\" height=\"300\" src=\"https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/image/stable-chart.png\"></a></p>\n\n## 历史版本\n[release notes](https://github.com/FxPool/FXMinerProxy/releases).\n\n"
        },
        {
          "name": "brg",
          "type": "tree",
          "content": null
        },
        {
          "name": "custominstall.sh",
          "type": "blob",
          "size": 10.837890625,
          "content": "#bin\ndownloadurl=$1\nversion=$2\nshell_version='4.1'\nuiname='FXMinerProxyV3-shell'\npkgname='FXMinerProxy'\nauthorname='FxPool'\ninstallname='install.sh'\nwebuiname='ui'\nsofname='fxminerproxyv3'\nwdog='runningFXMPV3'\ninstallfolder='/etc/fxpool-fxminerproxyv3/runningFXMPV3'\ninstalldir='/etc/fxpool-fxminerproxyv3/'\nmyFile=$version.tar.gz\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n#检查当前下载的文件收有记录\nif [ ! -f \"$myFile\" ]; then\n    echo \"\\n\"\nelse\n    rm $version.tar.gz\nfi\n#停止老版本\nPROCESS=$(ps -ef | grep porttran | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\nPROCESS=$(ps -ef | grep ppexec | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\n\nchange_limit() {\n    changeLimit=\"n\"\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"连接数限制已修改为65535,重启服务器后生效\"\n    else\n        echo -n \"当前连接数限制：\"\n        ulimit -n\n    fi\n    before_show_menu\n}\n\ncheck_limit() {\n    echo \"当前系统连接数：\"\n    ulimit -n\n    before_show_menu\n}\n\ncheckProcess() {\n    COUNT=$(ps -ef | grep $1 | grep -v \"grep\" | wc -l)\n    if [ $COUNT -eq 0 ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nkillProcess() {\n    #停止主程序\n    PROCESS=$(ps -ef | grep $sofname|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nkill_wdog(){\n    #停止看门狗\n    PROCESS=$(ps -ef | grep $wdog|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\ninstall() {\n    if [ ! -f \"$installfolder\" ]; then\n        wget $downloadurl -O $version.tar.gz\n        if [ -f \"$version.tar.gz\" ]; then\n            tar -zxvf $version.tar.gz\n            cd $pkgname-$version/\n            tar -zxvf fxminerproxyv3linux.tar.gz\n            mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n            #判断文件夹是否创建成功\n            if [ ! -d \"fxpool-$sofname\" ]; then\n                echo && echo -n -e \"${yellow}安装失败,请重新操作: ${plain}\" && read temp\n                rm -rf $pkgname-$version && rm $version.tar.gz\n                return\n            fi\n            mv fxminerproxyv3linux/$sofname fxpool-$sofname\n            mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n            cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n            cp -r fxpool-$sofname /etc/ && cd ../\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            if [ ! -f \"$installfolder\" ]; then\n                rm -rf  $installdir\n                echo -e \"${red}安装时失败，请输入一键安装脚本重新安装\"\n                return\n            fi\n            changeLimit=\"n\"\n            if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n                echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n                echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n                changeLimit=\"y\"\n            fi\n            if [[ \"$changeLimit\" = \"y\" ]]; then\n                echo \"连接数限制已修改为65535,重启服务器后生效\"\n            else\n                echo -n \"当前连接数限制：\"\n                ulimit -n\n            fi\n            autorun\n            echo && echo -n -e \"${yellow}安装完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            start\n        else\n            echo -e \"${red}下载安装包失败，请输入一键安装脚本重新安装\"\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            retutn\n        fi\n    else\n        echo -e \"${red}转发已经安装,不要重复安装\"\n        before_show_menu\n    fi\n}\n\ncheck_install() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"             ${red}<<转发没有安装>>\"\n    else\n        echo -e \"             ${green}<<转发已经安装>>\"\n    fi\n}\n\nbefore_show_menu() {\n    echo && echo -n -e \"${yellow}操作完成按回车返回主菜单: ${plain}\" && read temp\n    show_menu\n}\n\nupdate_app() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,请先安装转发\"\n        before_show_menu\n    fi\n    echo && echo -n -e \"${yellow}确定更新吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    wget $downloadurl -O $version.tar.gz\n    if [ ! -f \"$version.tar.gz\" ]; then\n        echo -e \"${red}下载安装包失败，请输入一键安装脚本重新更新\"\n        retutn\n    fi\n    rm /etc/fxpool-$sofname/*.cache\n    kill_wdog\n    killProcess\n    tar -zxvf $version.tar.gz\n    cd $pkgname-$version/\n    tar -zxvf fxminerproxyv3linux.tar.gz\n    mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n    #判断文件夹是否创建成功\n    if [ ! -d \"fxpool-$sofname\" ]; then\n        echo && echo -n -e \"${yellow}更新失败,请重新操作,按回车返回主菜单: ${plain}\" && read temp\n        show_menu\n    else\n        mv fxminerproxyv3linux/$sofname fxpool-$sofname\n        mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n        cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n        #判断重命名是否成功\n        if [ ! -f \"fxpool-$sofname/$wdog\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,重命名失败,请重新操作: ${plain}\" && read temp\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            return\n        fi\n        cp -r fxpool-$sofname /etc/ && cd ../\n        rm -rf $pkgname-$version && rm $version.tar.gz\n        if [ ! -f \"$installfolder\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,请程序打开脚本操作\"\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            return\n        else\n            #echo && echo -n -e \"${yellow}更新完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            autorun\n            start\n        fi\n    fi\n}\nuninstall_app() {\n    echo && echo -n -e \"${yellow}确定卸载吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    rm -rf /etc/fxpool-$sofname/\n    before_show_menu\n}\nstart() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,无法启动\"\n    else\n        checkProcess \"$wdog\"\n        if [ $? -eq 1 ]; then\n            echo -e \"${red}转发已经启动,不要重复启动\"\n            before_show_menu\n        else\n            echo -e \"${green}启动中...\"\n            cd $installdir\n            sed -i 's/\"is_open_general_swap\": true/\"is_open_general_swap\": false/g' localconfig.json\n            setsid ./$wdog &\n            sleep 3\n        fi\n    fi\n    before_show_menu\n}\nstop() {\n    echo && echo -n -e \"${yellow}确定停止吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    before_show_menu\n}\nautorun() {\n    cd /etc\n    rm rc.local\n    touch rc.local\n    chmod 777 rc.local\n    echo \"#!/bin/bash\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# rc.local\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# This script is executed at the end of each multiuser runlevel.\" >>rc.local\n    echo \"# Make sure that the script will \" #exit 0\" on success or any other\" >> rc.local\n    echo \"# value on error.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# In order to enable or disable this script just change the execution\" >>rc.local\n    echo \"# bits.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# By default this script does nothing.\" >>rc.local\n    echo \"#exit 0\" >>rc.local\n    echo \"cd $installdir && setsid ./$wdog &\" >>rc.local\n    echo \"exit 0\" >>rc.local\n    cd /root\n    echo -e \"${green}开机启动设置成功\"\n}\ncloseWhiteList(){\n    cd $installdir\n    sed -i 's/\"is_open_white_list_mode\": true/\"is_open_white_list_mode\": false/g' localconfig.json\n    echo -e \"${green}关闭成功\"\n}\nshow_menu() {\n    clear\n    check_install\n    echo -e \"\n     ${green}$uiname脚本管理界面安装完成(建议使用debian8.*版本内存控制更好)\n     ${green}脚本版本${shell_version}\n     ${green}软件版本${version}\n     ${green}安装时linux默认最大连接数据已修改为最大65535(需重启服务器生效)\n     ${green}安装时软件已经自动设置开机启动\n     ${red}浏览器默认端口用户名和密码全部使用随机生成，启动成功后会在控制台上打印出来请注意${plain}\n     ${green}0.${plain} 退出\n     ${green}1.${plain} 安装\n     ${green}2.${plain} 更新\n     ${green}3.${plain} 卸载\n     ${green}4.${plain} 启动\n     ${green}5.${plain} 停止\n     ${green}6.${plain} 查看linux最大连接\n     ${green}7.${plain} linux大连接数改为65535(需重启服务器生效)\n     ${green}8.${plain} 手动设置开机启动\n     ${green}9.${plain} 关闭IP白名单功能(关闭后重新登录即可)\n    \n   \"\n    echo && read -p \"请输入选择 [0-8]: \" num\n\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        install\n        ;;\n    2)\n        update_app\n        ;;\n    3)\n        uninstall_app\n        ;;\n    4)\n        start\n        ;;\n    5)\n        stop\n        ;;\n    6)\n        check_limit\n        ;;\n    7)\n        change_limit\n        ;;\n    8)\n        autorun\n        ;;\n    9)\n        closeWhiteList\n        ;;\n    *)\n        echo -e \"${red}请输入正确的数字 [0-9]${plain}\"\n        ;;\n    esac\n}\nshow_menu\n"
        },
        {
          "name": "fake",
          "type": "tree",
          "content": null
        },
        {
          "name": "fakeserver.sh",
          "type": "blob",
          "size": 5.9189453125,
          "content": "#bin\n\nwdog='runproMMEE'\nsofname='netswap0034'\necho \"v1.6\"\n\nOsSupport()\n{\n    if grep -Eqii \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        DISTRO='CentOS'\n        PM='yum'\n    elif grep -Eqi \"Red Hat Enterprise Linux Server\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux Server\" /etc/*-release; then\n        DISTRO='RHEL'\n        PM='yum'\n    elif grep -Eqi \"Aliyun\" /etc/issue || grep -Eq \"Aliyun\" /etc/*-release; then\n        DISTRO='Aliyun'\n        PM='yum'\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        DISTRO='Fedora'\n        PM='yum'\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        DISTRO='Debian'\n        PM='apt'\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        DISTRO='Ubuntu'\n        PM='apt'\n    elif grep -Eqi \"Raspbian\" /etc/issue || grep -Eq \"Raspbian\" /etc/*-release; then\n        DISTRO='Raspbian'\n        PM='apt'\n    else\n        DISTRO='unknow'\n    fi\n    echo $DISTRO;\n    str1=\"CentOS,Ubuntu,Debian\"\n    if [[ $str1 =~ $DISTRO ]]\n    then\n       # echo support this os system \n       return\n    else\n       # echo not support this os system pls use CentOS,Ubuntu,Debian\n       echo && echo -n -e \"${yellow}可能不支持的操作系统，建议使用CentOS或Ubuntu或Debian,回车继续安装,CTRL+C退出: ${plain}\" && read temp\n    fi\n}\nautorun() {\n    if grep -Eqii \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        DISTRO='CentOS'\n        PM='yum'\n    elif grep -Eqi \"Red Hat Enterprise Linux Server\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux Server\" /etc/*-release; then\n        DISTRO='RHEL'\n        PM='yum'\n    elif grep -Eqi \"Aliyun\" /etc/issue || grep -Eq \"Aliyun\" /etc/*-release; then\n        DISTRO='Aliyun'\n        PM='yum'\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        DISTRO='Fedora'\n        PM='yum'\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        DISTRO='Debian'\n        PM='apt'\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        DISTRO='Ubuntu'\n        PM='apt'\n    elif grep -Eqi \"Raspbian\" /etc/issue || grep -Eq \"Raspbian\" /etc/*-release; then\n        DISTRO='Raspbian'\n        PM='apt'\n    else\n        DISTRO='unknow'\n    fi\n    str1=\"Raspbian,Ubuntu,Debian\"\n    if [[ $str1 =~ $DISTRO ]]\n    then\n        cd /etc\n        rm rc.local\n        touch rc.local\n        chmod 777 rc.local\n        echo \"#!/bin/bash\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# rc.local\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# This script is executed at the end of each multiuser runlevel.\" >>rc.local\n        echo \"# Make sure that the script will \" #exit 0\" on success or any other\" >> rc.local\n        echo \"# value on error.\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# In order to enable or disable this script just change the execution\" >>rc.local\n        echo \"# bits.\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# By default this script does nothing.\" >>rc.local\n        echo \"#exit 0\" >>rc.local\n        echo \"cd /root && setsid ./$wdog &\" >>rc.local\n        echo \"exit 0\" >>rc.local\n        cd /root\n        echo -e \"${green}开机启动设置成功，linux发布类型:$DISTRO  ${plain}\"\n    else\n        cd /etc/rc.d/\n        rm rc.local\n        touch rc.local\n        chmod 777 rc.local\n        echo \"#!/bin/bash\" >>rc.local\n        echo \"cd /root && setsid ./$wdog &\" >>rc.local\n        echo \"exit 0\" >>rc.local\n        cd /root\n        echo -e \"${green}开机启动设置成功，linux发布类型:$DISTRO  ${plain}\"\n    fi\n}\n\nkillProcess() {\n    #停止主程序\n    PROCESS=$(ps -ef | grep $sofname|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nkill_wdog(){\n    #停止看门狗\n    PROCESS=$(ps -ef | grep $wdog|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nstart(){\n    changeLimit=\"n\"\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"连接数限制已修改为65535,重启服务器后生效\"\n    else\n        echo -n \"当前连接数限制：\"\n        ulimit -n\n    fi\n    setsid ./$wdog &\n    autorun\n}\nstop(){\n     kill_wdog\n    killProcess\n}\ninstall(){\n    rm $wdog\n    rm autorun.sh\n    rm netswap0034\n    wget https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/fake/runpro.sh\n    wget https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/fake/autorun.sh\n    wget https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/fake/netswap0034\n    chmod 777 runpro.sh\n    mv runpro.sh $wdog\n    chmod 777 $wdog\n    chmod 777 autorun.sh\n    chmod 777 netswap0034\n}\nshow_menu() {\n    OsSupport\n    echo && read -p \"请输入选择 [0-3]: \" num\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        install\n        ;;\n    2)\n        start\n        ;;\n    3)\n        stop\n        ;;\n    *)\n        echo -e \"${red}请输入正确的数字 [0-3]${plain}\"\n        ;;\n    esac\n}\nshow_menu\n\n\n"
        },
        {
          "name": "fxminerproxyv3linux.tar.gz",
          "type": "blob",
          "size": 20136.046875,
          "content": ""
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "install_en.sh",
          "type": "blob",
          "size": 11.51953125,
          "content": "#bin\nversion='13.3.3'\nshell_version='5.1'\nuiname='FXMinerProxyV3-shell'\npkgname='FXMinerProxy'\nauthorname='FxPool'\ninstallname='install.sh'\nwebuiname='ui'\nsofname='fxminerproxyv3'\nwdog='runningFXMPV3'\ninstallfolder='/etc/fxpool-fxminerproxyv3/runningFXMPV3'\ninstalldir='/etc/fxpool-fxminerproxyv3/'\nmyFile=$version.tar.gz\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n#检查当前下载的文件收有记录\nif [ ! -f \"$myFile\" ]; then\n    echo \"\\n\"\nelse\n    rm $version.tar.gz\nfi\n#停止老版本\nPROCESS=$(ps -ef | grep porttran | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\nPROCESS=$(ps -ef | grep ppexec | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\n\nchange_limit() {\n    changeLimit=\"n\"\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"The connection limit is changed to 65535. The value takes effect after the server is restarted\"\n    else\n        echo -n \"Current connection limit:\"\n        ulimit -n\n    fi\n    before_show_menu\n}\n\ncheck_limit() {\n    echo \"Current system limit connections:\"\n    ulimit -n\n    before_show_menu\n}\n\ncheckProcess() {\n    COUNT=$(ps -ef | grep $1 | grep -v \"grep\" | wc -l)\n    if [ $COUNT -eq 0 ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nkillProcess() {\n    #停止主程序\n    PROCESS=$(ps -ef | grep $sofname|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nkill_wdog(){\n    #停止看门狗\n    PROCESS=$(ps -ef | grep $wdog|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\ninstall() {\n    if [ ! -f \"$installfolder\" ]; then\n        wget https://github.com/$authorname/$pkgname/archive/refs/tags/$version.tar.gz\n        if [ -f \"$version.tar.gz\" ]; then\n            tar -zxvf $version.tar.gz\n            cd $pkgname-$version/\n            tar -zxvf fxminerproxyv3linux.tar.gz\n            mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n            #判断文件夹是否创建成功\n            if [ ! -d \"fxpool-$sofname\" ]; then\n                echo && echo -n -e \"${yellow}Installation failed. Please try again: ${plain}\" && read temp\n                return\n            fi\n            mv fxminerproxyv3linux/$sofname fxpool-$sofname\n            mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n            cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n            cp -r fxpool-$sofname /etc/ && cd ../\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            if [ ! -f \"$installfolder\" ]; then\n                rm -rf  $installdir\n                echo -e \"${red}The installation fails. Enter the one-click installation script to reinstall it${plain}\"\n                return\n            fi\n            changeLimit=\"n\"\n            if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n                echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n                echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n                changeLimit=\"y\"\n            fi\n            if [[ \"$changeLimit\" = \"y\" ]]; then\n                echo \"The connection limit is changed to 65535. The value takes effect after the server is restarted\"\n            else\n                echo -n \"Current connection limit:\"\n                ulimit -n\n            fi\n            autorun\n            echo && echo -n -e \"${yellow}When the installation is complete, press Enter to start,CTRL+C to exit: ${plain}\" && read temp\n            start\n        else\n            echo -e \"${red}Failed to download the installation package. Enter the auto installation script to reinstall it ${plain}\"\n            retutn\n        fi\n    else\n        echo -e \"${red}App is already installed. Do not install it again ${plain}\"\n        before_show_menu\n    fi\n}\n\ncheck_install() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"             ${red}<<App is not installed>>${plain}\"\n    else\n        echo -e \"             ${green}<<App has been installed>>${plain}\"\n    fi\n}\n\nbefore_show_menu() {\n    echo && echo -n -e \"${yellow}After operation, press Enter to return to the main menu: ${plain}\" && read temp\n    show_menu\n}\n\nupdate_app() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}Appis not installed. Please install app first${plain}\"\n        before_show_menu\n    fi\n    echo && echo -n -e \"${yellow}Are you sure to update, press Enter to confirm,CTRL+C to exit: ${plain}\" && read temp\n    wget https://github.com/$authorname/$pkgname/archive/refs/tags/$version.tar.gz\n    if [ ! -f \"$version.tar.gz\" ]; then\n        echo -e \"${red}Failed to download the installation package. Please enter the auto installation script to update it again${plain}\"\n        retutn\n    fi\n    rm /etc/fxpool-$sofname/*.cache\n    kill_wdog\n    killProcess\n    tar -zxvf $version.tar.gz\n    cd $pkgname-$version/\n    tar -zxvf fxminerproxyv3linux.tar.gz\n    mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n    #判断文件夹是否创建成功\n    if [ ! -d \"fxpool-$sofname\" ]; then\n        echo && echo -n -e \"${yellow}Update failed, please re-operate, press Enter to return to the main menu: ${plain}\" && read temp\n        show_menu\n    else\n        mv fxminerproxyv3linux/$sofname fxpool-$sofname\n        mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n        cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n        #判断重命名是否成功\n        if [ ! -f \"fxpool-$sofname/$wdog\" ]; then\n            echo && echo -n -e \"${yellow}Update failed, rename failed, please try again: ${plain}\" && read temp\n            return\n        fi\n        cp -r fxpool-$sofname /etc/ && cd ../\n        rm -rf $pkgname-$version && rm $version.tar.gz\n        if [ ! -f \"$installfolder\" ]; then\n            echo && echo -n -e \"${yellow}Update failed. Please restart script operation ${plain}\"\n            return\n        else\n            #echo && echo -n -e \"${yellow}When the update is complete, press Enter to start,CTRL+C to exit: ${plain}\" && read temp\n            autorun\n            start\n        fi\n    fi\n}\nuninstall_app() {\n    echo && echo -n -e \"${yellow}Do you want to uninstall it? Press Enter OK,CTRL+C to exit:${plain}\" && read temp\n    kill_wdog\n    killProcess\n    rm -rf /etc/fxpool-$sofname/\n    before_show_menu\n}\nstart() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}App is not installed and cannot be started${plain}\"\n    else\n        checkProcess \"$wdog\"\n        if [ $? -eq 1 ]; then\n            echo -e \"${red}App is already started. Do not start it again${plain}\"\n            before_show_menu\n        else\n            echo -e \"${green}Start...${plain}\"\n            cd $installdir\n            sed -i 's/\"is_open_general_swap\": true/\"is_open_general_swap\": false/g' localconfig.json\n            sed -i 's/\"language\": \"zh\"/\"language\": \"en\"/g' localconfig.json\n            setsid ./$wdog -language=en &\n            sleep 3\n        fi\n    fi\n    before_show_menu\n}\nstop() {\n    echo && echo -n -e \"${yellow}Are you sure to stop? Press Enter yes,CTRL+C to exit:${plain}\" && read temp\n    kill_wdog\n    killProcess\n    before_show_menu\n}\nautorun() {\n    cd /etc\n    rm rc.local\n    touch rc.local\n    chmod 777 rc.local\n    echo \"#!/bin/bash\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# rc.local\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# This script is executed at the end of each multiuser runlevel.\" >>rc.local\n    echo \"# Make sure that the script will \" #exit 0\" on success or any other\" >> rc.local\n    echo \"# value on error.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# In order to enable or disable this script just change the execution\" >>rc.local\n    echo \"# bits.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# By default this script does nothing.\" >>rc.local\n    echo \"#exit 0\" >>rc.local\n    echo \"cd $installdir && setsid ./$wdog &\" >>rc.local\n    echo \"exit 0\" >>rc.local\n    cd /root\n    echo -e \"${green}The startup setting is successful ${plain}\"\n}\ncloseWhiteList(){\n    cd $installdir\n    sed -i 's/\"is_open_white_list_mode\": true/\"is_open_white_list_mode\": false/g' localconfig.json\n    echo -e \"${green}close ok ${plain}\"\n}\ndelErrFile(){\n    echo \"\" >/etc/fxpool-fxminerproxyv3/error.log\n    echo -e \"${green}del ok ${plain}\"\n}\nshow_menu() {\n    clear\n    check_install\n    echo -e \"\n     ${green}$uiname The script management interface is installed\n     ${green}Script version:${shell_version}\n     ${green}Software version:${version}\n     ${green}The default maximum connection value of Linux has been changed to 65535(for this to take effect, restart the server).\n     ${green}During installation, the software is automatically set to boot\n     ${red}The user name and password of the default browser port are randomly generated.\\n After successful startup, the user name and password are printed on the console. Note${plain}\n     ${green}0.${plain} exit\n     ${green}1.${plain} install\n     ${green}2.${plain} update\n     ${green}3.${plain} uninstall\n     ${green}4.${plain} start\n     ${green}5.${plain} stop\n     ${green}6.${plain} View the maximum Linux connection\n     ${green}7.${plain} Number of Linux connections changed to 65535(the server needs to be restarted to take effect)\n     ${green}8.${plain} autorun\n     ${green}9.${plain} close ip white list(Re-login takes effect)\n     ${green}10.${plain} delete error.log file \n   \"\n    echo && read -p \"Please enter selection [0-10]: \" num\n\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        install\n        ;;\n    2)\n        update_app\n        ;;\n    3)\n        uninstall_app\n        ;;\n    4)\n        start\n        ;;\n    5)\n        stop\n        ;;\n    6)\n        check_limit\n        ;;\n    7)\n        change_limit\n        ;;\n    8)\n        autorun\n        ;;\n    9)\n        closeWhiteList\n        ;;\n   10)\n        delErrFile\n        ;;    \n    *)\n        echo -e \"${red}Please enter the correct number [0-10]${plain}\"\n        ;;\n    esac\n}\nshow_menu\n"
        },
        {
          "name": "install_zh.sh",
          "type": "blob",
          "size": 14.818359375,
          "content": "#bin\n\nrouter_line=$1\n\nversion='13.3.3'\nshell_version='6.0.5'\nuiname='FXMinerProxyV3-shell'\npkgname='FXMinerProxy'\nauthorname='FxPool'\ninstallname='install.sh'\nwebuiname='ui'\nsofname='fxminerproxyv3'\nwdog='runningFXMPV3'\ninstallfolder='/etc/fxpool-fxminerproxyv3/runningFXMPV3'\ninstalldir='/etc/fxpool-fxminerproxyv3/'\nmyFile=$version.tar.gz\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\nclearscr='\\033c'\n\nstr2='backline'\nif [[ $str2 == $router_line ]]\nthen\n    echo \"特殊线路\"\n   download_url=https://raw.githubusercontent.com/FxPool/fxminerbin/main/$version.tar.gz\nelse\n   download_url=https://github.com/$authorname/$pkgname/archive/refs/tags/$version.tar.gz\n   router_line='默认'\nfi\n\n#检查当前下载的文件收有记录\nif [ ! -f \"$myFile\" ]; then\n    echo \"\\n\"\nelse\n    rm $version.tar.gz\nfi\n#停止老版本\nPROCESS=$(ps -ef | grep porttran | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\nPROCESS=$(ps -ef | grep ppexec | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\n\nOsSupport()\n{\n    if grep -Eqii \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        DISTRO='CentOS'\n        PM='yum'\n    elif grep -Eqi \"Red Hat Enterprise Linux Server\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux Server\" /etc/*-release; then\n        DISTRO='RHEL'\n        PM='yum'\n    elif grep -Eqi \"Aliyun\" /etc/issue || grep -Eq \"Aliyun\" /etc/*-release; then\n        DISTRO='Aliyun'\n        PM='yum'\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        DISTRO='Fedora'\n        PM='yum'\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        DISTRO='Debian'\n        PM='apt'\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        DISTRO='Ubuntu'\n        PM='apt'\n    elif grep -Eqi \"Raspbian\" /etc/issue || grep -Eq \"Raspbian\" /etc/*-release; then\n        DISTRO='Raspbian'\n        PM='apt'\n    else\n        DISTRO='unknow'\n    fi\n    echo $DISTRO;\n    str1=\"CentOS,Ubuntu,Debian\"\n    if [[ $str1 =~ $DISTRO ]]\n    then\n       # echo support this os system \n       return\n    else\n       # echo not support this os system pls use CentOS,Ubuntu,Debian\n       echo && echo -n -e \"${yellow}可能不支持的操作系统，建议使用CentOS或Ubuntu或Debian,回车继续安装,CTRL+C退出: ${plain}\" && read temp\n    fi\n}\n\nchange_limit() {\n    changeLimit=\"n\"\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"连接数限制已修改为65535,重启服务器后生效\"\n    else\n        echo -n \"当前连接数限制：\"\n        ulimit -n\n    fi\n    before_show_menu\n}\n\ncheck_limit() {\n    echo \"当前系统连接数：\"\n    ulimit -n\n    before_show_menu\n}\n\ncheckProcess() {\n    COUNT=$(ps -ef | grep $1 | grep -v \"grep\" | wc -l)\n    if [ $COUNT -eq 0 ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nkillProcess() {\n    #停止主程序\n    PROCESS=$(ps -ef | grep $sofname|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nkill_wdog(){\n    #停止看门狗\n    PROCESS=$(ps -ef | grep $wdog|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\ninstall() {\n    OsSupport\n    if [ ! -f \"$installfolder\" ]; then\n        wget $download_url\n        if [ -f \"$version.tar.gz\" ]; then\n            tar -zxvf $version.tar.gz\n            cd $pkgname-$version/\n            tar -zxvf fxminerproxyv3linux.tar.gz\n            mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n            #判断文件夹是否创建成功\n            if [ ! -d \"fxpool-$sofname\" ]; then\n                echo && echo -n -e \"${yellow}安装失败,请重新操作: ${plain}\" && read temp\n                rm -rf $pkgname-$version && rm $version.tar.gz\n                return\n            fi\n            mv fxminerproxyv3linux/$sofname fxpool-$sofname\n            mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n            cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n            cp -r fxpool-$sofname /etc/ && cd ../\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            if [ ! -f \"$installfolder\" ]; then\n                rm -rf  $installdir\n                echo -e \"${red}安装时失败，请输入一键安装脚本重新安装\"\n                return\n            fi\n            changeLimit=\"n\"\n            if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n                echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n                echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n                changeLimit=\"y\"\n            fi\n            if [[ \"$changeLimit\" = \"y\" ]]; then\n                echo \"连接数限制已修改为65535,重启服务器后生效\"\n            else\n                echo -n \"当前连接数限制：\"\n                ulimit -n\n            fi\n            autorun\n            echo && echo -n -e \"${yellow}安装完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            start\n        else\n            echo -e \"${red}下载安装包失败，请输入一键安装脚本重新安装\"\n            echo -e \"${yellow}请使用备用脚本试试: >> bash <(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/install_zh.sh) backline <<\"\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            return\n        fi\n    else\n        echo -e \"${red}转发已经安装,不要重复安装 ${plain}\"\n        before_show_menu\n    fi\n}\n\ncheck_install() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"             ${red}<<转发没有安装>> ${plain}\"\n    else\n        echo -e \"             ${green}<<转发已经安装>> ${plain}\"\n    fi\n}\n\nbefore_show_menu() {\n    echo && echo -n -e \"${yellow}操作完成按回车返回主菜单: ${plain}\" && read temp\n    show_menu\n}\n\nupdate_app() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,请先安装转发\"\n        before_show_menu\n    fi\n    echo && echo -n -e \"${yellow}确定更新吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    wget $download_url\n    if [ ! -f \"$version.tar.gz\" ]; then\n        echo -e \"${red}下载安装包失败，请输入一键安装脚本重新更新\"\n        echo -e \"${yellow}请使用备用脚本试试: >> bash <(curl -s -L https://raw.githubusercontent.com/FxPool/FXMinerProxy/main/install_zh.sh) backline <<\"\n        return\n    fi\n    rm /etc/fxpool-$sofname/*.cache\n    kill_wdog\n    killProcess\n    tar -zxvf $version.tar.gz\n    cd $pkgname-$version/\n    tar -zxvf fxminerproxyv3linux.tar.gz\n    mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n    #判断文件夹是否创建成功\n    if [ ! -d \"fxpool-$sofname\" ]; then\n        echo && echo -n -e \"${yellow}更新失败,请重新操作,按回车返回主菜单: ${plain}\" && read temp\n        show_menu\n    else\n        mv fxminerproxyv3linux/$sofname fxpool-$sofname\n        mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n        cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n        #判断重命名是否成功\n        if [ ! -f \"fxpool-$sofname/$wdog\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,重命名失败,请重新操作: ${plain}\" && read temp\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            return\n        fi\n        cp -r fxpool-$sofname /etc/ && cd ../\n        rm -rf $pkgname-$version && rm $version.tar.gz\n        if [ ! -f \"$installfolder\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,请程序打开脚本操作\"\n            rm -rf $pkgname-$version && rm $version.tar.gz\n            return\n        else\n            #echo && echo -n -e \"${yellow}更新完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            autorun\n            start\n        fi\n    fi\n}\nuninstall_app() {\n    echo && echo -n -e \"${yellow}确定卸载吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    rm -rf /etc/fxpool-$sofname/\n    before_show_menu\n}\nstart() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,无法启动 ${plain}\"\n    else\n        checkProcess \"$wdog\"\n        if [ $? -eq 1 ]; then\n            echo -e \"${red}转发已经启动,不要重复启动 ${plain}\"\n            before_show_menu\n        else\n            echo -e \"${green}启动中... ${plain}\"\n            cd $installdir\n            sed -i 's/\"is_open_general_swap\": true/\"is_open_general_swap\": false/g' localconfig.json\n            echo -e ${clearscr}\n            setsid ./$wdog &\n            sleep 3\n        fi\n    fi\n    before_show_menu\n}\nstop() {\n    echo && echo -n -e \"${yellow}确定停止吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    before_show_menu\n}\nautorun() {\n    if grep -Eqii \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        DISTRO='CentOS'\n        PM='yum'\n    elif grep -Eqi \"Red Hat Enterprise Linux Server\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux Server\" /etc/*-release; then\n        DISTRO='RHEL'\n        PM='yum'\n    elif grep -Eqi \"Aliyun\" /etc/issue || grep -Eq \"Aliyun\" /etc/*-release; then\n        DISTRO='Aliyun'\n        PM='yum'\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        DISTRO='Fedora'\n        PM='yum'\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        DISTRO='Debian'\n        PM='apt'\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        DISTRO='Ubuntu'\n        PM='apt'\n    elif grep -Eqi \"Raspbian\" /etc/issue || grep -Eq \"Raspbian\" /etc/*-release; then\n        DISTRO='Raspbian'\n        PM='apt'\n    else\n        DISTRO='unknow'\n    fi\n    str1=\"Raspbian,Ubuntu,Debian\"\n    if [[ $str1 =~ $DISTRO ]]\n    then\n        cd /etc\n        rm rc.local\n        touch rc.local\n        chmod 777 rc.local\n        echo \"#!/bin/bash\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# rc.local\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# This script is executed at the end of each multiuser runlevel.\" >>rc.local\n        echo \"# Make sure that the script will \" #exit 0\" on success or any other\" >> rc.local\n        echo \"# value on error.\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# In order to enable or disable this script just change the execution\" >>rc.local\n        echo \"# bits.\" >>rc.local\n        echo \"#\" >>rc.local\n        echo \"# By default this script does nothing.\" >>rc.local\n        echo \"#exit 0\" >>rc.local\n        echo \"cd $installdir && setsid ./$wdog &\" >>rc.local\n        echo \"exit 0\" >>rc.local\n        cd /root\n        echo -e \"${green}开机启动设置成功，linux发布类型:$DISTRO  ${plain}\"\n    else\n        cd /etc/rc.d/\n        rm rc.local\n        touch rc.local\n        chmod 777 rc.local\n        echo \"#!/bin/bash\" >>rc.local\n        echo \"cd $installdir && setsid ./$wdog &\" >>rc.local\n        echo \"exit 0\" >>rc.local\n        cd /root\n        echo -e \"${green}开机启动设置成功，linux发布类型:$DISTRO  ${plain}\"\n    fi\n}\ncloseWhiteList(){\n    cd $installdir\n    sed -i 's/\"is_open_white_list_mode\": true/\"is_open_white_list_mode\": false/g' localconfig.json\n    echo -e \"${green}关闭成功\"\n}\ncheckConfigFile(){\n    cat /etc/fxpool-fxminerproxyv3/localconfig.json\n}\ndelErrFile(){\n    echo \"\" >/etc/fxpool-fxminerproxyv3/error.log\n    echo -e \"${green}删除成功${plain}\"\n}\nshow_menu() {\n    clear\n    check_install\n    echo -e \"\n     ${yellow}注意:之前安装过盗版软件的(nbminerproxy)请先重新安装操作系统否则会影响抽水\n     ${green}$uiname脚本管理界面安装完成(建议使用debian8.*版本内存控制更好)\n     ${green}线路:${router_line}\n     ${green}脚本版本${shell_version}\n     ${green}软件版本${version}\n     ${green}安装时linux默认最大连接数据已修改为最大65535(需重启服务器生效)\n     ${green}安装时软件已经自动设置开机启动\n     ${red}浏览器默认端口用户名和密码全部使用随机生成，启动成功后会在控制台上打印出来请注意${plain}\n     ${green}0.${plain} 退出\n     ${green}1.${plain} 安装\n     ${green}2.${plain} 更新\n     ${green}3.${plain} 卸载\n     ${green}4.${plain} 启动\n     ${green}5.${plain} 停止\n     ${green}6.${plain} 查看linux最大连接\n     ${green}7.${plain} linux大连接数改为65535(需重启服务器生效)\n     ${green}8.${plain} 手动设置开机启动\n     ${green}9.${plain} 关闭IP白名单功能(关闭后重新登录即可)\n     ${green}10.${plain} 查看配置文件(登录信息等)\n     ${green}11.${plain} 删除错误日志\n    \n   \"\n    echo && read -p \"请输入选择 [0-11]: \" num\n\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        install\n        ;;\n    2)\n        update_app\n        ;;\n    3)\n        uninstall_app\n        ;;\n    4)\n        start\n        ;;\n    5)\n        stop\n        ;;\n    6)\n        check_limit\n        ;;\n    7)\n        change_limit\n        ;;\n    8)\n        autorun\n        ;;\n    9)\n        closeWhiteList\n        ;;\n    10)\n        checkConfigFile\n        ;;\n    11)\n        delErrFile\n        ;;    \n    *)\n        echo -e \"${red}请输入正确的数字 [0-11]${plain}\"\n        ;;\n    esac\n}\nshow_menu\n"
        },
        {
          "name": "install_zh_cdn1.sh",
          "type": "blob",
          "size": 11.1259765625,
          "content": "﻿#bin\nversion='13.3.3'\nshell_version='4.3'\nuiname='FXMinerProxyV3-shell'\npkgname='FXMinerProxy'\nauthorname='FxPool'\ninstallname='install.sh'\nwebuiname='ui'\nsofname='fxminerproxyv3'\nappinstalname='fxminerproxyv3linux'\nwdog='runningFXMPV3'\ninstallfolder='/etc/fxpool-fxminerproxyv3/runningFXMPV3'\ninstalldir='/etc/fxpool-fxminerproxyv3/'\nmyFile=$appinstalname.tar.gz\n\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n#检查当前下载的文件收有记录1\nif [ ! -f \"$myFile\" ]; then\n    echo \"\\n\"\nelse\n    rm $appinstalname.tar.gz\nfi\n#停止老版本\nPROCESS=$(ps -ef | grep porttran | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\nPROCESS=$(ps -ef | grep ppexec | grep -v grep | grep -v PPID | awk '{ print $2}')\nfor i in $PROCESS; do\n    echo \"Kill the $1 process [ $i ]\"\n    kill -9 $i\ndone\n\nchange_limit() {\n    changeLimit=\"n\"\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"连接数限制已修改为65535,重启服务器后生效\"\n    else\n        echo -n \"当前连接数限制：\"\n        ulimit -n\n    fi\n    before_show_menu\n}\n\ncheck_limit() {\n    echo \"当前系统连接数：\"\n    ulimit -n\n    before_show_menu\n}\n\ncheckProcess() {\n    COUNT=$(ps -ef | grep $1 | grep -v \"grep\" | wc -l)\n    if [ $COUNT -eq 0 ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\nkillProcess() {\n    #停止主程序\n    PROCESS=$(ps -ef | grep $sofname|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\nkill_wdog(){\n    #停止看门狗\n    PROCESS=$(ps -ef | grep $wdog|grep -v grep | grep -v PPID | awk '{ print $2}')\n    for i in $PROCESS; do\n        echo \"Kill the $1 process [ $i ]\"\n        kill -9 $i\n    done\n}\n\ninstall() {\n    if [ ! -f \"$installfolder\" ]; then\n        wget https://cdn.jsdelivr.net/gh/$authorname/$pkgname@$version/fxminerproxyv3linux.tar.gz\n        if [ -f \"$appinstalname.tar.gz\" ]; then\n            tar -zxvf $appinstalname.tar.gz\n            mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n            #判断文件夹是否创建成功\n            if [ ! -d \"fxpool-$sofname\" ]; then\n                echo && echo -n -e \"${yellow}安装失败,请重新操作: ${plain}\" && read temp\n                rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n                return\n            fi\n            mv fxminerproxyv3linux/$sofname fxpool-$sofname\n            mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n            cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n            cp -r fxpool-$sofname /etc/\n            rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n            if [ ! -f \"$installfolder\" ]; then\n                rm -rf  $installdir\n                echo -e \"${red}安装时失败，请输入一键安装脚本重新安装\"\n                rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n                return\n            fi\n            changeLimit=\"n\"\n            if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n                echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n                echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n                echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n                changeLimit=\"y\"\n            fi\n            if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n                echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n                changeLimit=\"y\"\n            fi\n            if [[ \"$changeLimit\" = \"y\" ]]; then\n                echo \"连接数限制已修改为65535,重启服务器后生效\"\n            else\n                echo -n \"当前连接数限制：\"\n                ulimit -n\n            fi\n            autorun\n            echo && echo -n -e \"${yellow}安装完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            start\n        else\n            echo -e \"${red}下载安装包失败，请输入一键安装脚本重新安装\"\n            rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n            retutn\n        fi\n    else\n        echo -e \"${red}转发已经安装,不要重复安装\"\n        before_show_menu\n    fi\n}\n\ncheck_install() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"             ${red}<<转发没有安装>>\"\n    else\n        echo -e \"             ${green}<<转发已经安装>>\"\n    fi\n}\n\nbefore_show_menu() {\n    echo && echo -n -e \"${yellow}操作完成按回车返回主菜单: ${plain}\" && read temp\n    show_menu\n}\n\nupdate_app() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,请先安装转发\"\n        before_show_menu\n    fi\n    echo && echo -n -e \"${yellow}确定更新吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    wget https://cdn.jsdelivr.net/gh/$authorname/$pkgname@$version/fxminerproxyv3linux.tar.gz\n    if [ ! -f \"$appinstalname.tar.gz\" ]; then\n        echo -e \"${red}下载安装包失败，请输入一键安装脚本重新更新\"\n        retutn\n    fi\n    rm /etc/fxpool-$sofname/*.cache\n    kill_wdog\n    killProcess\n    tar -zxvf $appinstalname.tar.gz\n    mkdir fxpool-$sofname && chmod 777 fxpool-$sofname\n    #判断文件夹是否创建成功\n    if [ ! -d \"fxpool-$sofname\" ]; then\n        echo && echo -n -e \"${yellow}更新失败,请重新操作,按回车返回主菜单: ${plain}\" && read temp\n        show_menu\n    else\n        mv fxminerproxyv3linux/$sofname fxpool-$sofname\n        mv fxminerproxyv3linux/running.sh fxpool-$sofname/$wdog\n        cd fxpool-$sofname && chmod +x $wdog && chmod +x $sofname && cd ../\n        #判断重命名是否成功\n        if [ ! -f \"fxpool-$sofname/$wdog\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,重命名失败,请重新操作: ${plain}\" && read temp\n            rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n            return\n        fi\n        cp -r fxpool-$sofname /etc/\n        rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n        if [ ! -f \"$installfolder\" ]; then\n            echo && echo -n -e \"${yellow}更新失败,请程序打开脚本操作\"\n            rm -rf $appinstalname && rm $appinstalname.tar.gz && rm -rf fxpool-$sofname\n            return\n        else\n            #echo && echo -n -e \"${yellow}更新完成,按回车启动,CTRL+C退出: ${plain}\" && read temp\n            autorun\n            start\n        fi\n    fi\n}\nuninstall_app() {\n    echo && echo -n -e \"${yellow}确定卸载吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    rm -rf /etc/fxpool-$sofname/\n    before_show_menu\n}\nstart() {\n    if [ ! -f \"$installfolder\" ]; then\n        echo -e \"${red}转发没有安装,无法启动\"\n    else\n        checkProcess \"$wdog\"\n        if [ $? -eq 1 ]; then\n            echo -e \"${red}转发已经启动,不要重复启动\"\n            before_show_menu\n        else\n            echo -e \"${green}启动中...\"\n            cd $installdir\n            sed -i 's/\"is_open_general_swap\": true/\"is_open_general_swap\": false/g' localconfig.json\n            setsid ./$wdog &\n            sleep 3\n        fi\n    fi\n    before_show_menu\n}\nstop() {\n    echo && echo -n -e \"${yellow}确定停止吗,按回车确定,CTRL+C退出: ${plain}\" && read temp\n    kill_wdog\n    killProcess\n    before_show_menu\n}\nautorun() {\n    cd /etc\n    rm rc.local\n    touch rc.local\n    chmod 777 rc.local\n    echo \"#!/bin/bash\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# rc.local\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# This script is executed at the end of each multiuser runlevel.\" >>rc.local\n    echo \"# Make sure that the script will \" #exit 0\" on success or any other\" >> rc.local\n    echo \"# value on error.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# In order to enable or disable this script just change the execution\" >>rc.local\n    echo \"# bits.\" >>rc.local\n    echo \"#\" >>rc.local\n    echo \"# By default this script does nothing.\" >>rc.local\n    echo \"#exit 0\" >>rc.local\n    echo \"cd $installdir && setsid ./$wdog &\" >>rc.local\n    echo \"exit 0\" >>rc.local\n    cd /root\n    echo -e \"${green}开机启动设置成功\"\n}\ncloseWhiteList(){\n    cd $installdir\n    sed -i 's/\"is_open_white_list_mode\": true/\"is_open_white_list_mode\": false/g' localconfig.json\n    echo -e \"${green}关闭成功\"\n}\nshow_menu() {\n    clear\n    check_install\n    echo -e \"\n     ${green}大陆版本\n     ${green}$uiname脚本管理界面安装完成(建议使用debian8.*版本内存控制更好)\n     ${green}脚本版本${shell_version}\n     ${green}软件版本${version}\n     ${green}安装时linux默认最大连接数据已修改为最大65535(需重启服务器生效)\n     ${green}安装时软件已经自动设置开机启动\n     ${red}浏览器默认端口用户名和密码全部使用随机生成，启动成功后会在控制台上打印出来请注意${plain}\n     ${green}0.${plain} 退出\n     ${green}1.${plain} 安装\n     ${green}2.${plain} 更新\n     ${green}3.${plain} 卸载\n     ${green}4.${plain} 启动\n     ${green}5.${plain} 停止\n     ${green}6.${plain} 查看linux最大连接\n     ${green}7.${plain} linux大连接数改为65535(需重启服务器生效)\n     ${green}8.${plain} 手动设置开机启动\n     ${green}9.${plain} 关闭IP白名单功能(关闭后重新登录即可)\n    \n   \"\n    echo && read -p \"请输入选择 [0-8]: \" num\n\n    case \"${num}\" in\n    0)\n        exit 0\n        ;;\n    1)\n        install\n        ;;\n    2)\n        update_app\n        ;;\n    3)\n        uninstall_app\n        ;;\n    4)\n        start\n        ;;\n    5)\n        stop\n        ;;\n    6)\n        check_limit\n        ;;\n    7)\n        change_limit\n        ;;\n    8)\n        autorun\n        ;;\n    9)\n        closeWhiteList\n        ;;\n    *)\n        echo -e \"${red}请输入正确的数字 [0-9]${plain}\"\n        ;;\n    esac\n}\nshow_menu\n"
        },
        {
          "name": "netconfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "oldversion",
          "type": "tree",
          "content": null
        },
        {
          "name": "readmes",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssh",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}