{
  "metadata": {
    "timestamp": 1736566830720,
    "page": 399,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gobuffalo/packr",
      "stars": 3410,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.279296875,
          "content": "---\nengines:\n  golint:\n    enabled: true\n    checks:\n      GoLint/Naming/MixedCaps:\n        enabled: false\n  govet:\n    enabled: true\n  gofmt:\n    enabled: true\n  fixme:\n    enabled: true\nratings:\n  paths:\n    - \"**.go\"\nexclude_paths:\n  - \"**/*_test.go\"\n  - \"*_test.go\"\n  - \"fixtures/\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3359375,
          "content": "*.log\n./packr2\n.DS_Store\ndoc\ntmp\npkg\n*.gem\n*.pid\ncoverage\ncoverage.data\nbuild/*\n*.pbxuser\n*.mode1v3\n.svn\nprofile\n.console_history\n.sass-cache/*\n.rake_tasks~\n*.log.lck\nsolr/\n.jhw-cache/\njhw.*\n*.sublime*\nnode_modules/\ndist/\ngenerated/\n.vendor/\nbin/*\ngin-bin\n/packr_darwin_amd64\n/packr_linux_amd64\n.vscode/\ndebug.test\n.grifter/\n*-packr.go\n.idea/\n\n"
        },
        {
          "name": ".gometalinter.json",
          "type": "blob",
          "size": 0.142578125,
          "content": "{\n  \"Enable\": [\"vet\", \"golint\", \"goimports\", \"deadcode\", \"gotype\", \"ineffassign\", \"misspell\", \"nakedret\", \"unconvert\", \"megacheck\", \"varcheck\"]\n}\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 0.6025390625,
          "content": "# Code generated by github.com/gobuffalo/release. DO NOT EDIT.\n# Edit .goreleaser.yml.plush instead\n\nbuilds:\n-\n  goos:\n    - darwin\n    - linux\n    - windows\n  goarch:\n    - ppc64le\n    - 386\n    - amd64\n  env:\n    - CGO_ENABLED=0\n  ignore:\n    - goos: darwin\n      goarch: ppc64le\n    - goos: windows\n      goarch: ppc64le\n  main: ./packr2/main.go\n  binary: packr2\n\nchecksum:\n  name_template: 'checksums.txt'\n\nsnapshot:\n  name_template: \"{{ .Tag }}-next\"\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n\nbrews:\n  -\n      github:\n        owner: gobuffalo\n        name: homebrew-tap\n\n"
        },
        {
          "name": ".goreleaser.yml.plush",
          "type": "blob",
          "size": 0.5283203125,
          "content": "builds:\n-\n  goos:\n    - darwin\n    - linux\n    - windows\n  goarch:\n    - ppc64le\n    - 386\n    - amd64\n  env:\n    - CGO_ENABLED=0\n  ignore:\n    - goos: darwin\n      goarch: ppc64le\n    - goos: windows\n      goarch: ppc64le\n  main: ./packr2/main.go\n  binary: packr2\n\nchecksum:\n  name_template: 'checksums.txt'\n\nsnapshot:\n  name_template: \"{{ .Tag }}-next\"\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n<%= if (brew) { %>\nbrews:\n  -\n      github:\n        owner: gobuffalo\n        name: homebrew-tap\n<% } %>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\nCopyright (c) 2016 Mark Bates\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.66015625,
          "content": "TAGS ?= \"sqlite\"\nGO_BIN ?= go\n\ninstall: deps\n\techo \"installing packr v2\"\n\tpackr2\n\t$(GO_BIN) install -v ./packr2\n\ntidy:\nifeq ($(GO111MODULE),on)\n\t$(GO_BIN) mod tidy\nelse\n\techo skipping go mod tidy\nendif\n\ndeps:\n\t$(GO_BIN) get -tags ${TAGS} -t ./...\n\t$(GO_BIN) install -v ./packr2\n\tmake tidy\n\nbuild: deps\n\tpackr2\n\t$(GO_BIN) build -v ./packr2\n\tmake tidy\n\ntest:\n\tpackr2\n\t$(GO_BIN) test -tags ${TAGS} ./...\n\tmake tidy\n\nlint:\n\tgometalinter --vendor ./... --deadline=1m --skip=internal\n\nupdate:\n\t$(GO_BIN) get -u -tags ${TAGS} ./...\n\tmake tidy\n\tmake install\n\tmake test\n\tmake tidy\n\nrelease-test:\n\t$(GO_BIN) test -tags ${TAGS} -race ./...\n\nrelease:\n\trelease -y -f version.go\n\tmake tidy\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.7509765625,
          "content": "**NOTICE: Please consider migrating your projects to\n[embed](https://pkg.go.dev/embed) which is native file embedding feature of Go,\nor github.com/markbates/pkger. It has an idiomatic API, minimal dependencies, a stronger test suite (tested directly against the std lib counterparts), transparent tooling, and more.**\n\nhttps://blog.gobuffalo.io/introducing-pkger-static-file-embedding-in-go-1ce76dc79c65\n\n# Packr (v2)\n\n[![GoDoc](https://godoc.org/github.com/gobuffalo/packr/v2?status.svg)](https://godoc.org/github.com/gobuffalo/packr/v2)\n[![Actions Status](https://github.com/gobuffalo/packr/workflows/Tests/badge.svg)](https://github.com/gobuffalo/packr/actions)\n\nPackr is a simple solution for bundling static assets inside of Go binaries. Most importantly it does it in a way that is friendly to developers while they are developing.\n\nAt this moment, supported go versions are:\n\n* 1.16.x\n* 1.17.x\n\neven though it may (or may not) working well with older versions.\n\n## Intro Video\n\nTo get an idea of the what and why of Packr, please enjoy this short video: [https://vimeo.com/219863271](https://vimeo.com/219863271).\n\n## Library Installation\n\n### Go 1.16 and above\n\n```console\n$ go install github.com/gobuffalo/packr/v2@v2.8.3\n```\n\nor\n\n```console\n$ go install github.com/gobuffalo/packr/v2@latest\n```\n\n### Go 1.15 and below\n\n```console\n$ go get -u github.com/gobuffalo/packr/...\n```\n\n## Binary Installation\n\n### Go 1.16 and above\n\n```console\n$ go install github.com/gobuffalo/packr/v2/packr2@v2.8.3\n```\n\nor\n\n```console\n$ go install github.com/gobuffalo/packr/v2/packr2@latest\n```\n\n### Go 1.15 and below\n\n```console\n$ go get -u github.com/gobuffalo/packr/packr2\n```\n\n## New File Format FAQs\n\nIn version `v2.0.0` the file format changed and is not backward compatible with the `packr-v1.x` library.\n\n#### Can `packr-v1.x` read the new format?\n\nNo, it can not. Because of the way the new file format works porting it to `packr-v1.x` would be difficult. PRs are welcome though. :)\n\n#### Can `packr-v2.x` read `packr-v1.x` files?\n\nYes it can, but that ability will eventually be phased out. Because of that we recommend moving to the new format.\n\n#### Can `packr-v2.x` generate `packr-v1.x` files?\n\nYes it can, but that ability will eventually be phased out. Because of that we recommend moving to the new format.\n\nThe `--legacy` command is available on all commands that generate `-packr.go` files.\n\n```bash\n$ packr2 --legacy\n```\n\n## Usage\n\n### In Code\n\nThe first step in using Packr is to create a new box. A box represents a folder on disk. Once you have a box you can get `string` or `[]byte` representations of the file.\n\n```go\n// set up a new box by giving it a name and an optional (relative) path to a folder on disk:\nbox := packr.New(\"My Box\", \"./templates\")\n\n// Get the string representation of a file, or an error if it doesn't exist:\nhtml, err := box.FindString(\"index.html\")\n\n// Get the []byte representation of a file, or an error if it doesn't exist:\nhtml, err := box.Find(\"index.html\")\n```\n\n### What is a Box?\n\nA box represents a folder, and any sub-folders, on disk that you want to have access to in your binary. When compiling a binary using the `packr2` CLI the contents of the folder will be converted into Go files that can be compiled inside of a \"standard\" go binary. Inside of the compiled binary the files will be read from memory. When working locally the files will be read directly off of disk. This is a seamless switch that doesn't require any special attention on your part.\n\n#### Example\n\nAssume the follow directory structure:\n\n```\n├── main.go\n└── templates\n    ├── admin\n    │   └── index.html\n    └── index.html\n```\n\nThe following program will read the `./templates/admin/index.html` file and print it out.\n\n```go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com/gobuffalo/packr/v2\"\n)\n\nfunc main() {\n  box := packr.New(\"myBox\", \"./templates\")\n\n  s, err := box.FindString(\"admin/index.html\")\n  if err != nil {\n    log.Fatal(err)\n  }\n  fmt.Println(s)\n}\n```\n\n### Development Made Easy\n\nIn order to get static files into a Go binary, those files must first be converted to Go code. To do that, Packr, ships with a few tools to help build binaries. See below.\n\nDuring development, however, it is painful to have to keep running a tool to compile those files.\n\nPackr uses the following resolution rules when looking for a file:\n\n1. Look for the file in-memory (inside a Go binary)\n1. Look for the file on disk (during development)\n\nBecause Packr knows how to fall through to the file system, developers don't need to worry about constantly compiling their static files into a binary. They can work unimpeded.\n\nPackr takes file resolution a step further. When declaring a new box you use a relative path, `./templates`. When Packr receives this call it calculates out the absolute path to that directory. By doing this it means you can be guaranteed that Packr can find your files correctly, even if you're not running in the directory that the box was created in. This helps with the problem of testing, where Go changes the `pwd` for each package, making relative paths difficult to work with. This is not a problem when using Packr.\n\n---\n\n## Usage with HTTP\n\nA box implements the [`http.FileSystem`](https://golang.org/pkg/net/http/#FileSystem) interface, meaning it can be used to serve static files.\n\n```go\npackage main\n\nimport (\n\t\"net/http\"\n\n\t\"github.com/gobuffalo/packr/v2\"\n)\n\nfunc main() {\n\tbox := packr.New(\"someBoxName\", \"./templates\")\n\n\thttp.Handle(\"/\", http.FileServer(box))\n\thttp.ListenAndServe(\":3000\", nil)\n}\n```\n\n---\n\n## Building a Binary\n\nBefore you build your Go binary, run the `packr2` command first. It will look for all the boxes in your code and then generate `.go` files that pack the static files into bytes that can be bundled into the Go binary.\n\n```\n$ packr2\n```\n\nThen run your `go build command` like normal.\n\n*NOTE*: It is not recommended to check-in these generated `-packr.go` files. They can be large, and can easily become out of date if not careful. It is recommended that you always run `packr2 clean` after running the `packr2` tool.\n\n#### Cleaning Up\n\nWhen you're done it is recommended that you run the `packr2 clean` command. This will remove all of the generated files that Packr created for you.\n\n```\n$ packr2 clean\n```\n\nWhy do you want to do this? Packr first looks to the information stored in these generated files, if the information isn't there it looks to disk. This makes it easy to work with in development.\n\n---\n\n## Debugging\n\nThe `packr2` command passes all arguments down to the underlying `go` command, this includes the `-v` flag to print out `go build` information. Packr looks for the `-v` flag, and will turn on its own verbose logging. This is very useful for trying to understand what the `packr` command is doing when it is run.\n\n---\n\n## FAQ\n\n### Compilation Errors with Go Templates\n\nQ: I have a program with Go template files, those files are named `foo.go` and look like the following:\n\n```\n// Copyright {{.Year}} {{.Author}}. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage {{.Project}}\n```\n\nWhen I run `packr2` I get errors like:\n\n```\nexpected 'IDENT', found '{'\n```\n\nA: Packr works by searching your `.go` files for [`github.com/gobuffalo/packr/v2#New`](https://godoc.org/github.com/gobuffalo/packr/v2#New) or [`github.com/gobuffalo/packr/v2#NewBox`](https://godoc.org/github.com/gobuffalo/packr/v2#NewBox) calls. Because those files aren't \"proper\" Go files, Packr can't parse them to find the box declarations. To fix this you need to tell Packr to ignore those files when searching for boxes. A couple solutions to this problem are:\n\n* Name the files something else. The `.tmpl` extension is the idiomatic way of naming these types of files.\n* Rename the folder containing these files to start with an `_`, for example `_templates`. Packr, like Go, will ignore folders starting with the `_` character when searching for boxes.\n\n### Dynamic Box Paths\n\nQ: I need to set the path of a box using a variable, but `packr.New(\"foo\", myVar)` doesn't work correctly.\n\nA: Packr attempts to \"automagically\" set it's resolution directory when using [`github.com/gobuffalo/packr/v2#New`](https://godoc.org/github.com/gobuffalo/packr/v2#New), however, for dynamic paths you need to set it manually:\n\n```go\nbox := packr.New(\"foo\", \"|\")\nbox.ResolutionDir = myVar\n```\n\n### I don't want to pack files, but still use the Packr interface.\n\nQ: I want to write code that using the Packr tools, but doesn't actually pack the files into my binary. How can I do that?\n\nA: Using [`github.com/gobuffalo/packr/v2#Folder`](https://godoc.org/github.com/gobuffalo/packr/v2#Folder) gives you back a `*packr.Box` that can be used as normal, but is excluded by the Packr tool when compiling.\n\n### Packr Finds No Boxes\n\nQ: I run `packr2 -v` but it doesn't find my boxes:\n\n```\nDEBU[2019-03-18T18:48:52+01:00] *parser.Parser#NewFromRoots found prospects=0\nDEBU[2019-03-18T18:48:52+01:00] found 0 boxes\n```\n\nA: Packr works by parsing `.go` files to find [`github.com/gobuffalo/packr/v2#Box`](https://godoc.org/github.com/gobuffalo/packr/v2#Box) and [`github.com/gobuffalo/packr/v2#NewBox`](https://godoc.org/github.com/gobuffalo/packr/v2#NewBox) declarations. If there aren't any `.go` in the folder that `packr2` is run in it can not find those declarations. To fix this problem run the `packr2` command in the directory containing your `.go` files.\n\n### Box Interfaces\n\nQ: I want to be able to easily test my applications by passing in mock boxes. How do I do that?\n\nA: Packr boxes and files conform to the interfaces found at [`github.com/gobuffalo/packd`](https://godoc.org/github.com/gobuffalo/packd). Change your application to use those interfaces instead of the concrete Packr types.\n\n```go\n// using concrete type\nfunc myFunc(box *packr.Box) {}\n\n// using interfaces\nfunc myFunc(box packd.Box) {}\n```\n"
        },
        {
          "name": "SHOULDERS.md",
          "type": "blob",
          "size": 1.4345703125,
          "content": "# github.com/gobuffalo/packr/v2 Stands on the Shoulders of Giants\n\ngithub.com/gobuffalo/packr/v2 does not try to reinvent the wheel! Instead, it uses the already great wheels developed by the Go community and puts them all together in the best way possible. Without these giants, this project would not be possible. Please make sure to check them out and thank them for all of their hard work.\n\nThank you to the following **GIANTS**:\n\n\n* [github.com/gobuffalo/logger](https://godoc.org/github.com/gobuffalo/logger)\n\n* [github.com/gobuffalo/packd](https://godoc.org/github.com/gobuffalo/packd)\n\n* [github.com/karrick/godirwalk](https://godoc.org/github.com/karrick/godirwalk)\n\n* [github.com/konsorten/go-windows-terminal-sequences](https://godoc.org/github.com/konsorten/go-windows-terminal-sequences)\n\n* [github.com/markbates/errx](https://godoc.org/github.com/markbates/errx)\n\n* [github.com/markbates/oncer](https://godoc.org/github.com/markbates/oncer)\n\n* [github.com/markbates/safe](https://godoc.org/github.com/markbates/safe)\n\n* [github.com/rogpeppe/go-internal](https://godoc.org/github.com/rogpeppe/go-internal)\n\n* [github.com/sirupsen/logrus](https://godoc.org/github.com/sirupsen/logrus)\n\n* [github.com/spf13/cobra](https://godoc.org/github.com/spf13/cobra)\n\n* [github.com/stretchr/testify](https://godoc.org/github.com/stretchr/testify)\n\n* [golang.org/x/sync](https://godoc.org/golang.org/x/sync)\n\n* [golang.org/x/tools](https://godoc.org/golang.org/x/tools)\n"
        },
        {
          "name": "_fixtures",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.go",
          "type": "blob",
          "size": 5.6484375,
          "content": "package packr\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"sort\"\n\t\"strings\"\n\n\t\"github.com/gobuffalo/packd\"\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/gobuffalo/packr/v2/plog\"\n\t\"github.com/markbates/oncer\"\n)\n\nvar _ packd.Box = &Box{}\nvar _ packd.HTTPBox = &Box{}\nvar _ packd.Addable = &Box{}\nvar _ packd.Walkable = &Box{}\nvar _ packd.Finder = &Box{}\n\n// Box represent a folder on a disk you want to\n// have access to in the built Go binary.\ntype Box struct {\n\tPath            string            `json:\"path\"`\n\tName            string            `json:\"name\"`\n\tResolutionDir   string            `json:\"resolution_dir\"`\n\tDefaultResolver resolver.Resolver `json:\"default_resolver\"`\n\tresolvers       resolversMap\n\tdirs            dirsMap\n}\n\n// NewBox returns a Box that can be used to\n// retrieve files from either disk or the embedded\n// binary.\n// Deprecated: Use New instead.\nfunc NewBox(path string) *Box {\n\toncer.Deprecate(0, \"packr.NewBox\", \"Use packr.New instead.\")\n\treturn New(path, path)\n}\n\n// New returns a new Box with the name of the box\n// and the path of the box.\nfunc New(name string, path string) *Box {\n\tplog.Debug(\"packr\", \"New\", \"name\", name, \"path\", path)\n\tb, _ := findBox(name)\n\tif b != nil {\n\t\treturn b\n\t}\n\n\tb = construct(name, path)\n\tplog.Debug(b, \"New\", \"Box\", b, \"ResolutionDir\", b.ResolutionDir)\n\tb, err := placeBox(b)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn b\n}\n\n// Folder returns a Box that will NOT be packed.\n// This is useful for writing tests or tools that\n// need to work with a folder at runtime.\nfunc Folder(path string) *Box {\n\treturn New(path, path)\n}\n\n// SetResolver allows for the use of a custom resolver for\n// the specified file\nfunc (b *Box) SetResolver(file string, res resolver.Resolver) {\n\td := filepath.Dir(file)\n\tb.dirs.Store(d, true)\n\tplog.Debug(b, \"SetResolver\", \"file\", file, \"resolver\", fmt.Sprintf(\"%T\", res))\n\tb.resolvers.Store(resolver.Key(file), res)\n}\n\n// AddString converts t to a byteslice and delegates to AddBytes to add to b.data\nfunc (b *Box) AddString(path string, t string) error {\n\treturn b.AddBytes(path, []byte(t))\n}\n\n// AddBytes sets t in b.data by the given path\nfunc (b *Box) AddBytes(path string, t []byte) error {\n\tm := map[string]file.File{}\n\tf, err := file.NewFile(path, t)\n\tif err != nil {\n\t\treturn err\n\t}\n\tm[resolver.Key(path)] = f\n\tres := resolver.NewInMemory(m)\n\tb.SetResolver(path, res)\n\treturn nil\n}\n\n// FindString returns either the string of the requested\n// file or an error if it can not be found.\nfunc (b *Box) FindString(name string) (string, error) {\n\tbb, err := b.Find(name)\n\treturn string(bb), err\n}\n\n// Find returns either the byte slice of the requested\n// file or an error if it can not be found.\nfunc (b *Box) Find(name string) ([]byte, error) {\n\tf, err := b.Resolve(name)\n\tif err != nil {\n\t\treturn []byte(\"\"), err\n\t}\n\tbb := &bytes.Buffer{}\n\tio.Copy(bb, f)\n\treturn bb.Bytes(), nil\n}\n\n// Has returns true if the resource exists in the box\nfunc (b *Box) Has(name string) bool {\n\t_, err := b.Find(name)\n\treturn err == nil\n}\n\n// HasDir returns true if the directory exists in the box\nfunc (b *Box) HasDir(name string) bool {\n\toncer.Do(\"packr2/box/HasDir\"+b.Name, func() {\n\t\tfor _, f := range b.List() {\n\t\t\tfor d := filepath.Dir(f); d != \".\"; d = filepath.Dir(d) {\n\t\t\t\tb.dirs.Store(d, true)\n\t\t\t}\n\t\t}\n\t})\n\tif name == \"/\" {\n\t\treturn b.Has(\"index.html\")\n\t}\n\t_, ok := b.dirs.Load(name)\n\treturn ok\n}\n\n// Open returns a File using the http.File interface\nfunc (b *Box) Open(name string) (http.File, error) {\n\tplog.Debug(b, \"Open\", \"name\", name)\n\tf, err := b.Resolve(name)\n\tif err != nil {\n\t\tif len(filepath.Ext(name)) == 0 {\n\t\t\treturn b.openWoExt(name)\n\t\t}\n\t\treturn f, err\n\t}\n\tf, err = file.NewFileR(name, f)\n\tplog.Debug(b, \"Open\", \"name\", f.Name(), \"file\", f.Name())\n\treturn f, err\n}\n\nfunc (b *Box) openWoExt(name string) (http.File, error) {\n\tif !b.HasDir(name) {\n\t\tid := path.Join(name, \"index.html\")\n\t\tif b.Has(id) {\n\t\t\treturn b.Open(id)\n\t\t}\n\t\treturn nil, os.ErrNotExist\n\t}\n\td, err := file.NewDir(name)\n\tplog.Debug(b, \"Open\", \"name\", name, \"dir\", d)\n\treturn d, err\n}\n\n// List shows \"What's in the box?\"\nfunc (b *Box) List() []string {\n\tvar keys []string\n\n\tb.Walk(func(path string, info File) error {\n\t\tif info == nil {\n\t\t\treturn nil\n\t\t}\n\t\tfinfo, _ := info.FileInfo()\n\t\tif !finfo.IsDir() {\n\t\t\tkeys = append(keys, path)\n\t\t}\n\t\treturn nil\n\t})\n\tsort.Strings(keys)\n\treturn keys\n}\n\n// Resolve will attempt to find the file in the box,\n// returning an error if the find can not be found.\nfunc (b *Box) Resolve(key string) (file.File, error) {\n\tkey = strings.TrimPrefix(key, \"/\")\n\n\tvar r resolver.Resolver\n\n\tb.resolvers.Range(func(k string, vr resolver.Resolver) bool {\n\t\tlk := strings.ToLower(resolver.Key(k))\n\t\tlkey := strings.ToLower(resolver.Key(key))\n\t\tif lk == lkey {\n\t\t\tr = vr\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t})\n\n\tif r == nil {\n\t\tr = b.DefaultResolver\n\t\tif r == nil {\n\t\t\tr = resolver.DefaultResolver\n\t\t\tif r == nil {\n\t\t\t\treturn nil, fmt.Errorf(\"resolver.DefaultResolver is nil\")\n\t\t\t}\n\t\t}\n\t}\n\tplog.Debug(r, \"Resolve\", \"box\", b.Name, \"key\", key)\n\n\tf, err := r.Resolve(b.Name, key)\n\tif err != nil {\n\t\tz, err := resolver.ResolvePathInBase(resolver.OsPath(b.ResolutionDir), filepath.FromSlash(path.Clean(\"/\"+resolver.OsPath(key))))\n\t\tif err != nil {\n\t\t\tplog.Debug(r, \"Resolve\", \"box\", b.Name, \"key\", key, \"err\", err)\n\t\t\treturn f, err\n\t\t}\n\n\t\tf, err = r.Resolve(b.Name, z)\n\t\tif err != nil {\n\t\t\tplog.Debug(r, \"Resolve\", \"box\", b.Name, \"key\", z, \"err\", err)\n\t\t\treturn f, err\n\t\t}\n\t\tb, err := ioutil.ReadAll(f)\n\t\tif err != nil {\n\t\t\treturn f, err\n\t\t}\n\t\tf, err = file.NewFile(key, b)\n\t\tif err != nil {\n\t\t\treturn f, err\n\t\t}\n\t}\n\tplog.Debug(r, \"Resolve\", \"box\", b.Name, \"key\", key, \"file\", f.Name())\n\treturn f, nil\n}\n"
        },
        {
          "name": "box_import_test.go",
          "type": "blob",
          "size": 0.2783203125,
          "content": "package packr_test\n\nimport (\n\t\"testing\"\n\n\t\"github.com/gobuffalo/packr/v2/_fixtures/import_pkg\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_ImportWithBox(t *testing.T) {\n\tr := require.New(t)\n\n\tr.Len(import_pkg.BoxTestNew.List(), 2)\n\n\tr.Len(import_pkg.BoxTestNewBox.List(), 2)\n}\n"
        },
        {
          "name": "box_map.go",
          "type": "blob",
          "size": 1.611328125,
          "content": "//go:generate mapgen -name \"box\" -zero \"nil\" -go-type \"*Box\" -pkg \"\" -a \"New(`test-a`, ``)\" -b \"New(`test-b`, ``)\" -c \"New(`test-c`, ``)\" -bb \"New(`test-bb`, ``)\" -destination \"packr\"\n// Code generated by github.com/gobuffalo/mapgen. DO NOT EDIT.\n\npackage packr\n\nimport (\n\t\"sort\"\n\t\"sync\"\n)\n\n// boxMap wraps sync.Map and uses the following types:\n// key:   string\n// value: *Box\ntype boxMap struct {\n\tdata sync.Map\n}\n\n// Delete the key from the map\nfunc (m *boxMap) Delete(key string) {\n\tm.data.Delete(key)\n}\n\n// Load the key from the map.\n// Returns *Box or bool.\n// A false return indicates either the key was not found\n// or the value is not of type *Box\nfunc (m *boxMap) Load(key string) (*Box, bool) {\n\ti, ok := m.data.Load(key)\n\tif !ok {\n\t\treturn nil, false\n\t}\n\ts, ok := i.(*Box)\n\treturn s, ok\n}\n\n// LoadOrStore will return an existing key or\n// store the value if not already in the map\nfunc (m *boxMap) LoadOrStore(key string, value *Box) (*Box, bool) {\n\ti, _ := m.data.LoadOrStore(key, value)\n\ts, ok := i.(*Box)\n\treturn s, ok\n}\n\n// Range over the *Box values in the map\nfunc (m *boxMap) Range(f func(key string, value *Box) bool) {\n\tm.data.Range(func(k, v interface{}) bool {\n\t\tkey, ok := k.(string)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\tvalue, ok := v.(*Box)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\treturn f(key, value)\n\t})\n}\n\n// Store a *Box in the map\nfunc (m *boxMap) Store(key string, value *Box) {\n\tm.data.Store(key, value)\n}\n\n// Keys returns a list of keys in the map\nfunc (m *boxMap) Keys() []string {\n\tvar keys []string\n\tm.Range(func(key string, value *Box) bool {\n\t\tkeys = append(keys, key)\n\t\treturn true\n\t})\n\tsort.Strings(keys)\n\treturn keys\n}\n"
        },
        {
          "name": "box_map_test.go",
          "type": "blob",
          "size": 0.8798828125,
          "content": "// Code generated by github.com/gobuffalo/mapgen. DO NOT EDIT.\n\npackage packr\n\nimport (\n\t\"sort\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_boxMap(t *testing.T) {\n\tr := require.New(t)\n\n\tsm := &boxMap{}\n\n\tsm.Store(\"a\", New(`test-a`, ``))\n\n\ts, ok := sm.Load(\"a\")\n\tr.True(ok)\n\tr.Equal(New(`test-a`, ``), s)\n\n\ts, ok = sm.LoadOrStore(\"b\", New(`test-b`, ``))\n\tr.True(ok)\n\tr.Equal(New(`test-b`, ``), s)\n\n\ts, ok = sm.LoadOrStore(\"b\", New(`test-bb`, ``))\n\tr.True(ok)\n\tr.Equal(New(`test-b`, ``), s)\n\n\tvar keys []string\n\n\tsm.Range(func(key string, value *Box) bool {\n\t\tkeys = append(keys, key)\n\t\treturn true\n\t})\n\n\tsort.Strings(keys)\n\n\tr.Equal(sm.Keys(), keys)\n\n\tsm.Delete(\"b\")\n\tr.Equal([]string{\"a\", \"b\"}, keys)\n\n\tsm.Delete(\"b\")\n\t_, ok = sm.Load(\"b\")\n\tr.False(ok)\n\n\tfunc(m *boxMap) {\n\t\tm.Store(\"c\", New(`test-c`, ``))\n\t}(sm)\n\ts, ok = sm.Load(\"c\")\n\tr.True(ok)\n\tr.Equal(New(`test-c`, ``), s)\n}\n"
        },
        {
          "name": "box_test.go",
          "type": "blob",
          "size": 5.626953125,
          "content": "package packr\n\nimport (\n\t\"bytes\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_New(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_NewBox\", filepath.Join(\"_fixtures\", \"list_test\"))\n\tr.Len(box.List(), 4)\n\n}\nfunc Test_Box_AddString(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_AddString\", \"./templates\")\n\ts, err := box.FindString(\"foo.txt\")\n\tr.Error(err)\n\tr.Equal(\"\", s)\n\n\tr.NoError(box.AddString(\"foo.txt\", \"foo!!\"))\n\ts, err = box.FindString(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"foo!!\", s)\n}\n\nfunc Test_Box_AddBytes(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_AddBytes\", \"\")\n\ts, err := box.FindString(\"foo.txt\")\n\tr.Error(err)\n\tr.Equal(\"\", s)\n\n\tr.NoError(box.AddBytes(\"foo.txt\", []byte(\"foo!!\")))\n\ts, err = box.FindString(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"foo!!\", s)\n}\n\nfunc Test_Box_String(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_String\", \"./templates\")\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\": qfile(\"foo.txt\", \"foo!\"),\n\t})\n\tbox.SetResolver(\"foo.txt\", d)\n\n\ts := box.String(\"foo.txt\")\n\tr.Equal(\"foo!\", s)\n\n\ts = box.String(\"idontexist\")\n\tr.Equal(\"\", s)\n}\n\nfunc Test_Box_String_Miss(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_String_Miss\", filepath.Join(\"_fixtures\", \"templates\"))\n\n\ts := box.String(\"foo.txt\")\n\tr.Equal(\"FOO!!!\", strings.TrimSpace(s))\n\n\ts = box.String(\"idontexist\")\n\tr.Equal(\"\", s)\n}\n\nfunc Test_Box_FindString(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_FindString\", \"./templates\")\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\": qfile(\"foo.txt\", \"foo!\"),\n\t})\n\tbox.SetResolver(\"foo.txt\", d)\n\n\ts, err := box.FindString(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"foo!\", s)\n\n\ts, err = box.FindString(\"idontexist\")\n\tr.Error(err)\n\tr.Equal(\"\", s)\n}\n\nfunc Test_Box_FindString_Miss(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_FindString_Miss\", filepath.Join(\"_fixtures\", \"templates\"))\n\n\ts, err := box.FindString(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"FOO!!!\", strings.TrimSpace(s))\n\n\ts, err = box.FindString(\"idontexist\")\n\tr.Error(err)\n\tr.Equal(\"\", s)\n}\n\nfunc Test_Box_Bytes(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_Bytes\", \"./templates\")\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\": qfile(\"foo.txt\", \"foo!\"),\n\t})\n\tbox.SetResolver(\"foo.txt\", d)\n\n\ts := box.Bytes(\"foo.txt\")\n\tr.Equal([]byte(\"foo!\"), s)\n\n\ts = box.Bytes(\"idontexist\")\n\tr.Equal([]byte(\"\"), s)\n}\n\nfunc Test_Box_Bytes_Miss(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_Bytes_Miss\", filepath.Join(\"_fixtures\", \"templates\"))\n\n\ts := box.Bytes(\"foo.txt\")\n\tr.Equal([]byte(\"FOO!!!\"), bytes.TrimSpace(s))\n\n\ts = box.Bytes(\"idontexist\")\n\tr.Equal([]byte(\"\"), s)\n}\n\nfunc Test_Box_Find(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_Find\", \"./templates\")\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\": qfile(\"foo.txt\", \"foo!\"),\n\t})\n\tbox.SetResolver(\"foo.txt\", d)\n\n\ts, err := box.Find(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"foo!\", string(s))\n\n\ts, err = box.Find(\"idontexist\")\n\tr.Error(err)\n\tr.Equal(\"\", string(s))\n}\n\nfunc Test_Box_Find_Miss(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_Find_Miss\", \"./_fixtures/templates\")\n\ts, err := box.Find(\"foo.txt\")\n\tr.NoError(err)\n\tr.Equal(\"FOO!!!\", strings.TrimSpace(string(s)))\n\n\ts, err = box.Find(\"idontexist\")\n\tr.Error(err)\n\tr.Equal(\"\", string(s))\n}\n\nfunc Test_Box_Has(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_Has\", \"./templates\")\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\": qfile(\"foo.txt\", \"foo!\"),\n\t})\n\tbox.SetResolver(\"foo.txt\", d)\n\n\tr.True(box.Has(\"foo.txt\"))\n\tr.False(box.Has(\"idontexist\"))\n}\n\nfunc Test_Box_Open(t *testing.T) {\n\tr := require.New(t)\n\n\td := resolver.NewInMemory(map[string]file.File{\n\t\t\"foo.txt\":        qfile(\"foo.txt\", \"foo!\"),\n\t\t\"bar\":            qfile(\"bar\", \"bar!\"),\n\t\t\"baz/index.html\": qfile(\"baz\", \"baz!\"),\n\t})\n\tbox := New(\"Test_Box_Open\", \"./templates\")\n\n\tbox.DefaultResolver = d\n\n\tfor _, x := range []string{\"foo.txt\", \"/foo.txt\", \"bar\", \"/bar\", \"baz\", \"/baz\"} {\n\t\tf, err := box.Open(x)\n\t\tr.NoError(err)\n\t\tr.NotZero(f)\n\t}\n\n\tf, err := box.Open(\"idontexist.txt\")\n\tr.Error(err)\n\tr.Zero(f)\n}\n\nfunc Test_Box_List(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_List\", filepath.Join(\"_fixtures\", \"list_test\"))\n\tr.NoError(box.AddString(filepath.Join(\"d\", \"d.txt\"), \"D\"))\n\n\tact := box.List()\n\texp := []string{\"a.txt\", filepath.Join(\"b\", \"b.txt\"), filepath.Join(\"b\", \"b2.txt\"), filepath.Join(\"c\", \"c.txt\"), filepath.Join(\"d\", \"d.txt\")}\n\tr.Equal(exp, act)\n}\n\nfunc Test_Box_HasDir(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_Box_HasDir\", filepath.Join(\"_fixtures\", \"list_test\"))\n\tr.NoError(box.AddString(\"d/e/f.txt\", \"D\"))\n\n\tr.True(box.HasDir(\"d/e\"))\n\tr.True(box.HasDir(\"d\"))\n\tr.True(box.HasDir(\"c\"))\n\tr.False(box.HasDir(\"a\"))\n}\n\nfunc Test_Box_Traversal_Standard(t *testing.T) {\n\tr := require.New(t)\n\tbox := New(\"Test_Box_Traversal_Standard\", \"\")\n\t_, err := box.FindString(\"../fixtures/hello.txt\")\n\tr.Error(err)\n}\n\nfunc Test_Box_Traversal_Standard_Depth2(t *testing.T) {\n\tr := require.New(t)\n\tbox := New(\"Test_Box_Traversal_Standard_Depth2\", \"\")\n\t_, err := box.FindString(\"../../packr/fixtures/hello.txt\")\n\tr.Error(err)\n}\n\nfunc Test_Box_Traversal_Backslash(t *testing.T) {\n\tr := require.New(t)\n\tbox := New(\"Test_Box_Traversal_Backslash\", \"\")\n\t_, err := box.FindString(\"..\\\\fixtures\\\\hello.txt\")\n\tr.Error(err)\n}\n\nfunc Test_Box_Traversal_Backslash_Depth2(t *testing.T) {\n\tr := require.New(t)\n\tbox := New(\"Test_Box_Traversal_Backslash_Depth2\", \"\")\n\t_, err := box.FindString(\"..\\\\..\\\\packr2\\\\fixtures\\\\hello.txt\")\n\tr.Error(err)\n}\n"
        },
        {
          "name": "deprecated.go",
          "type": "blob",
          "size": 2.2431640625,
          "content": "package packr\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/markbates/oncer\"\n)\n\n// File has been deprecated and file.File should be used instead\ntype File = file.File\n\nvar (\n\t// ErrResOutsideBox gets returned in case of the requested resources being outside the box\n\t// Deprecated\n\tErrResOutsideBox = fmt.Errorf(\"can't find a resource outside the box\")\n)\n\n// PackBytes packs bytes for a file into a box.\n// Deprecated\nfunc PackBytes(box string, name string, bb []byte) {\n\tb := NewBox(box)\n\td := resolver.NewInMemory(map[string]file.File{})\n\tf, err := file.NewFile(name, bb)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tif err := d.Pack(name, f); err != nil {\n\t\tpanic(err)\n\t}\n\tb.SetResolver(name, d)\n}\n\n// PackBytesGzip packets the gzipped compressed bytes into a box.\n// Deprecated\nfunc PackBytesGzip(box string, name string, bb []byte) error {\n\t// TODO: this function never did what it was supposed to do!\n\tPackBytes(box, name, bb)\n\treturn nil\n}\n\n// PackJSONBytes packs JSON encoded bytes for a file into a box.\n// Deprecated\nfunc PackJSONBytes(box string, name string, jbb string) error {\n\tvar bb []byte\n\terr := json.Unmarshal([]byte(jbb), &bb)\n\tif err != nil {\n\t\treturn err\n\t}\n\tPackBytes(box, name, bb)\n\treturn nil\n}\n\n// Bytes is deprecated. Use Find instead\nfunc (b *Box) Bytes(name string) []byte {\n\tbb, _ := b.Find(name)\n\toncer.Deprecate(0, \"github.com/gobuffalo/packr/v2#Box.Bytes\", \"Use github.com/gobuffalo/packr/v2#Box.Find instead.\")\n\treturn bb\n}\n\n// MustBytes is deprecated. Use Find instead.\nfunc (b *Box) MustBytes(name string) ([]byte, error) {\n\toncer.Deprecate(0, \"github.com/gobuffalo/packr/v2#Box.MustBytes\", \"Use github.com/gobuffalo/packr/v2#Box.Find instead.\")\n\treturn b.Find(name)\n}\n\n// String is deprecated. Use FindString instead\nfunc (b *Box) String(name string) string {\n\toncer.Deprecate(0, \"github.com/gobuffalo/packr/v2#Box.String\", \"Use github.com/gobuffalo/packr/v2#Box.FindString instead.\")\n\treturn string(b.Bytes(name))\n}\n\n// MustString is deprecated. Use FindString instead\nfunc (b *Box) MustString(name string) (string, error) {\n\toncer.Deprecate(0, \"github.com/gobuffalo/packr/v2#Box.MustString\", \"Use github.com/gobuffalo/packr/v2#Box.FindString instead.\")\n\treturn b.FindString(name)\n}\n"
        },
        {
          "name": "deprecated_test.go",
          "type": "blob",
          "size": 0.89453125,
          "content": "package packr\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_PackBytes(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := NewBox(\"my/box\")\n\tname := \"foo.txt\"\n\tbody := []byte(\"foo!!\")\n\tPackBytes(box.Name, name, body)\n\n\tf, err := box.FindString(name)\n\tr.NoError(err)\n\tr.Equal(string(body), f)\n}\n\nfunc Test_PackBytesGzip(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := NewBox(\"my/box\")\n\tname := \"foo.txt\"\n\tbody := []byte(\"foo!!\")\n\tPackBytesGzip(box.Name, name, body)\n\n\tf, err := box.FindString(name)\n\tr.NoError(err)\n\tr.Equal(string(body), f)\n}\n\nfunc Test_PackJSONBytes(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := NewBox(\"my/box\")\n\tname := \"foo.txt\"\n\tbody := \"\\\"PGgxPnRlbXBsYXRlcy9tYWlsZXJzL2xheW91dC5odG1sPC9oMT4KCjwlPSB5aWVsZCAlPgo=\\\"\"\n\tPackJSONBytes(box.Name, name, body)\n\n\tf, err := box.FindString(name)\n\tr.NoError(err)\n\tr.Equal(\"<h1>templates/mailers/layout.html</h1>\\n\\n<%= yield %>\\n\", f)\n}\n"
        },
        {
          "name": "dirs_map.go",
          "type": "blob",
          "size": 1.8056640625,
          "content": "//go:generate mapgen -name \"dirs\" -zero \"false\" -go-type \"bool\" -pkg \"\" -a \"nil\" -b \"nil\" -c \"nil\" -bb \"nil\" -destination \"packr\"\n// Code generated by github.com/gobuffalo/mapgen. DO NOT EDIT.\n\npackage packr\n\nimport (\n\t\"sort\"\n\t\"strings\"\n\t\"sync\"\n)\n\n// dirsMap wraps sync.Map and uses the following types:\n// key:   string\n// value: bool\ntype dirsMap struct {\n\tdata sync.Map\n}\n\n// Delete the key from the map\nfunc (m *dirsMap) Delete(key string) {\n\tm.data.Delete(m.normalizeKey(key))\n}\n\n// Load the key from the map.\n// Returns bool or bool.\n// A false return indicates either the key was not found\n// or the value is not of type bool\nfunc (m *dirsMap) Load(key string) (bool, bool) {\n\ti, ok := m.data.Load(m.normalizeKey(key))\n\tif !ok {\n\t\treturn false, false\n\t}\n\ts, ok := i.(bool)\n\treturn s, ok\n}\n\n// LoadOrStore will return an existing key or\n// store the value if not already in the map\nfunc (m *dirsMap) LoadOrStore(key string, value bool) (bool, bool) {\n\ti, _ := m.data.LoadOrStore(m.normalizeKey(key), value)\n\ts, ok := i.(bool)\n\treturn s, ok\n}\n\n// Range over the bool values in the map\nfunc (m *dirsMap) Range(f func(key string, value bool) bool) {\n\tm.data.Range(func(k, v interface{}) bool {\n\t\tkey, ok := k.(string)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\tvalue, ok := v.(bool)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\treturn f(key, value)\n\t})\n}\n\n// Store a bool in the map\nfunc (m *dirsMap) Store(key string, value bool) {\n\td := m.normalizeKey(key)\n\tm.data.Store(d, value)\n\tm.data.Store(strings.TrimPrefix(d, \"/\"), value)\n}\n\n// Keys returns a list of keys in the map\nfunc (m *dirsMap) Keys() []string {\n\tvar keys []string\n\tm.Range(func(key string, value bool) bool {\n\t\tkeys = append(keys, key)\n\t\treturn true\n\t})\n\tsort.Strings(keys)\n\treturn keys\n}\n\nfunc (m *dirsMap) normalizeKey(key string) string {\n\tkey = strings.Replace(key, \"\\\\\", \"/\", -1)\n\n\treturn key\n}\n"
        },
        {
          "name": "file",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.482421875,
          "content": "module github.com/gobuffalo/packr/v2\n\ngo 1.16\n\nrequire (\n\tgithub.com/gobuffalo/logger v1.0.6\n\tgithub.com/gobuffalo/packd v1.0.1\n\tgithub.com/karrick/godirwalk v1.16.1\n\tgithub.com/markbates/errx v1.1.0\n\tgithub.com/markbates/oncer v1.0.0\n\tgithub.com/markbates/safe v1.0.1\n\tgithub.com/rogpeppe/go-internal v1.8.0\n\tgithub.com/sirupsen/logrus v1.8.1\n\tgithub.com/spf13/cobra v1.2.1\n\tgithub.com/stretchr/testify v1.7.0\n\tgolang.org/x/sync v0.0.0-20210220032951-036812b2e83c\n\tgolang.org/x/tools v0.1.7\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 58.5234375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bketelsen/crypt v0.0.4/go.mod h1:aI6NrJ0pMGgvZKL1iVgXLnfIFJtfV+bKCoqOes/6LfM=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd/v22 v22.3.2/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/gobuffalo/logger v1.0.6 h1:nnZNpxYo0zx+Aj9RfMPBm+x9zAU2OayFh/xrAWi34HU=\ngithub.com/gobuffalo/logger v1.0.6/go.mod h1:J31TBEHR1QLV2683OXTAItYIg8pv2JMHnF/quuAbMjs=\ngithub.com/gobuffalo/packd v1.0.1 h1:U2wXfRr4E9DH8IdsDLlRFwTZTK7hLfq9qT/QHXGVe/0=\ngithub.com/gobuffalo/packd v1.0.1/go.mod h1:PP2POP3p3RXGz7Jh6eYEf93S7vA2za6xM7QT85L4+VY=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=\ngithub.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/karrick/godirwalk v1.16.1 h1:DynhcF+bztK8gooS0+NDJFrdNZjJ3gzVzC545UNA9iw=\ngithub.com/karrick/godirwalk v1.16.1/go.mod h1:j4mkqPuvaLI8mp1DroR3P6ad7cyYd4c1qeJ3RV7ULlk=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/magiconair/properties v1.8.5/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/markbates/errx v1.1.0 h1:QDFeR+UP95dO12JgW+tgi2UVfo0V8YBHiUIOaeBPiEI=\ngithub.com/markbates/errx v1.1.0/go.mod h1:PLa46Oex9KNbVDZhKel8v1OT7hD5JZ2eI7AHhA0wswc=\ngithub.com/markbates/oncer v1.0.0 h1:E83IaVAHygyndzPimgUYJjbshhDTALZyXxvk9FOlQRY=\ngithub.com/markbates/oncer v1.0.0/go.mod h1:Z59JA581E9GP6w96jai+TGqafHPW+cPfRxz2aSZ0mcI=\ngithub.com/markbates/safe v1.0.1 h1:yjZkbvRM6IzKj9tlu/zMJLS0n/V351OZWRnF3QfaUxI=\ngithub.com/markbates/safe v1.0.1/go.mod h1:nAqgmRi7cY2nqMc92/bSEeQA+R4OheNU2T1kNSCBdG0=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.3/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.8.1 h1:dJKuHgqk1NNQlqoA6BTlM1Wf9DOH3NBjQyu0h9+AZZE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/spf13/afero v1.6.0/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v1.2.1 h1:+KmjbUw1hriSNMF55oPrkZcb27aECyrj8V2ytv7kWDw=\ngithub.com/spf13/cobra v1.2.1/go.mod h1:ExllRjgxM/piMAM+3tAZvg8fsklGAf3tPfi+i8t68Nk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.8.1/go.mod h1:o0Pch8wJ9BVSWGQMbra6iw0oQ5oktSIBaujf1rJH9Ns=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0 h1:nwc3DEeHmmLAfoZucVR881uASk0Mfjw8xYJ99tb5CcY=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.0/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngo.etcd.io/etcd/api/v3 v3.5.0/go.mod h1:cbVKeC6lCfl7j/8jBhAK6aIYO9XOjdptoxU/nLQcPvs=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.0/go.mod h1:IJHfcCEKxYu1Os13ZdwCwIUTUVGYTSAM3YSwc9/Ac1g=\ngo.etcd.io/etcd/client/v2 v2.305.0/go.mod h1:h9puh54ZTgAKtEbut2oe9P4L/oqKCVB6xsXlzd7alYQ=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210402161424-2e8d93401602/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c h1:5KslGYwFpkhGh+Q16bwMP3cOontH8FOep7tGV86Y7SQ=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e h1:WUoyKPm6nCo1BnNUvPGnFG3T5DUVem42yDJZZ4CNxMA=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211 h1:JGgROgKl9N8DuW20oFS5gxc+lE67/N3FcwmBPMe7ArY=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.7 h1:6j8CgantCy3yc8JGBqkDLMKWqZ0RDU2g1HVgacojGWQ=\ngolang.org/x/tools v0.1.7/go.mod h1:LGqMHiF4EqQNHR1JncWGqT5BVaXmza+X+BDGol+dOxo=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.44.0/go.mod h1:EBOGZqzyhtvMDoxwS97ctnh0zUmYY6CxqXsc1AvkYD8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b h1:h8qDotaEPuJATrMmW04NCwg7v22aHH28wwpauUhK9Oo=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "helpers.go",
          "type": "blob",
          "size": 1.353515625,
          "content": "package packr\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strings\"\n\n\t\"github.com/gobuffalo/packr/v2/plog\"\n)\n\nfunc construct(name string, path string) *Box {\n\treturn &Box{\n\t\tPath:          path,\n\t\tName:          name,\n\t\tResolutionDir: resolutionDir(path),\n\t\tresolvers:     resolversMap{},\n\t\tdirs:          dirsMap{},\n\t}\n}\n\nfunc resolutionDirTestFilename(filename, og string) (string, bool) {\n\tng := filepath.Join(filepath.Dir(filename), og)\n\n\t// // this little hack courtesy of the `-cover` flag!!\n\tcov := filepath.Join(\"_test\", \"_obj_test\")\n\tng = strings.Replace(ng, string(filepath.Separator)+cov, \"\", 1)\n\n\tif resolutionDirExists(ng, og) {\n\t\treturn ng, true\n\t}\n\n\tng = filepath.Join(os.Getenv(\"GOPATH\"), \"src\", ng)\n\tif resolutionDirExists(ng, og) {\n\t\treturn ng, true\n\t}\n\n\treturn og, false\n}\n\nfunc resolutionDirExists(s, og string) bool {\n\t_, err := os.Stat(s)\n\tif err != nil {\n\t\treturn false\n\t}\n\tplog.Debug(\"packr\", \"resolutionDir\", \"original\", og, \"resolved\", s)\n\treturn true\n}\n\nfunc resolutionDir(og string) string {\n\tng, _ := filepath.Abs(og)\n\n\tif resolutionDirExists(ng, og) {\n\t\treturn ng\n\t}\n\n\t// packr.New\n\t_, filename, _, _ := runtime.Caller(3)\n\tng, ok := resolutionDirTestFilename(filename, og)\n\tif ok {\n\t\treturn ng\n\t}\n\n\t// packr.NewBox (deprecated)\n\t_, filename, _, _ = runtime.Caller(4)\n\tng, ok = resolutionDirTestFilename(filename, og)\n\tif ok {\n\t\treturn ng\n\t}\n\n\treturn og\n}\n"
        },
        {
          "name": "http_box_test.go",
          "type": "blob",
          "size": 3.5166015625,
          "content": "package packr\n\nimport (\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/gobuffalo/packd\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nvar httpBox = func() packd.Box {\n\tbox := New(\"http box\", \"\")\n\n\tind, err := resolver.HexGzipString(\"<h1>Index!</h1>\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\thello, err := resolver.HexGzipString(\"hello world!\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\thg, err := resolver.NewHexGzip(map[string]string{\n\t\t\"index.html\": ind,\n\t\t\"hello.txt\":  hello,\n\t})\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tbox.DefaultResolver = hg\n\treturn box\n}()\n\nfunc Test_HTTPBox(t *testing.T) {\n\tr := require.New(t)\n\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", http.FileServer(httpBox))\n\n\treq, err := http.NewRequest(\"GET\", \"/hello.txt\", nil)\n\tr.NoError(err)\n\n\tres := httptest.NewRecorder()\n\n\tmux.ServeHTTP(res, req)\n\n\tr.Equal(200, res.Code)\n\tr.Equal(\"hello world!\", strings.TrimSpace(res.Body.String()))\n}\n\nfunc Test_HTTPBox_NotFound(t *testing.T) {\n\tr := require.New(t)\n\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", http.FileServer(httpBox))\n\n\treq, err := http.NewRequest(\"GET\", \"/notInBox.txt\", nil)\n\tr.NoError(err)\n\n\tres := httptest.NewRecorder()\n\n\tmux.ServeHTTP(res, req)\n\n\tr.Equal(404, res.Code)\n}\n\nfunc Test_HTTPBox_Handles_IndexHTML_Nested(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"Test_HTTPBox_Handles_IndexHTML_Nested\", \"!\")\n\tbox.AddString(\"foo/index.html\", \"foo\")\n\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", http.FileServer(box))\n\n\treq, err := http.NewRequest(\"GET\", \"/foo\", nil)\n\tr.NoError(err)\n\n\tres := httptest.NewRecorder()\n\n\tmux.ServeHTTP(res, req)\n\n\tr.Equal(200, res.Code)\n\n\tr.Equal(\"foo\", strings.TrimSpace(res.Body.String()))\n}\n\nfunc Test_HTTPBox_Handles_IndexHTML(t *testing.T) {\n\tr := require.New(t)\n\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", http.FileServer(httpBox))\n\n\treq, err := http.NewRequest(\"GET\", \"/\", nil)\n\tr.NoError(err)\n\n\tres := httptest.NewRecorder()\n\n\tmux.ServeHTTP(res, req)\n\n\tr.Equal(200, res.Code)\n\n\tr.Equal(\"<h1>Index!</h1>\", strings.TrimSpace(res.Body.String()))\n}\n\nfunc Test_HTTPBox_CaseInsensitive(t *testing.T) {\n\tmux := http.NewServeMux()\n\thttpBox.AddString(\"myfile.txt\", \"this is my file\")\n\tmux.Handle(\"/\", http.FileServer(httpBox))\n\n\tfor _, path := range []string{\"/MyFile.txt\", \"/myfile.txt\", \"/Myfile.txt\"} {\n\t\tt.Run(path, func(st *testing.T) {\n\t\t\tr := require.New(st)\n\n\t\t\treq, err := http.NewRequest(\"GET\", path, nil)\n\t\t\tr.NoError(err)\n\n\t\t\tres := httptest.NewRecorder()\n\n\t\t\tmux.ServeHTTP(res, req)\n\n\t\t\tr.Equal(200, res.Code)\n\t\t\tr.Equal(\"this is my file\", strings.TrimSpace(res.Body.String()))\n\t\t})\n\t}\n}\n\nfunc Test_HTTPBox_Disk(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := New(\"http disk box\", \"./_fixtures/http_test\")\n\tmux := http.NewServeMux()\n\tmux.Handle(\"/\", http.FileServer(box))\n\n\ttype testcase struct {\n\t\tURL, Content, Location string\n\t\tCode                   int\n\t}\n\n\ttestcases := []testcase{\n\t\t{\"/\", \"Index\", \"\", 200},\n\t\t{\"/sub\", \"Sub\", \"\", 200},\n\t\t{\"/index.html\", \"\", \"./\", 301},\n\t\t{\"/sub/index.html\", \"\", \"./\", 301},\n\t\t{\"/sub/\", \"\", \"../sub\", 301},\n\t\t{\"/footer.html\", \"Footer\", \"\", 200},\n\t\t{\"/css/main.css\", \"Css\", \"\", 200},\n\t\t{\"/css\", \"404 page not found\", \"\", 404},\n\t\t{\"/css/\", \"404 page not found\", \"\", 404},\n\t}\n\n\tfor _, tc := range testcases {\n\t\tt.Run(\"path\"+tc.URL, func(t *testing.T) {\n\t\t\treq, err := http.NewRequest(\"GET\", tc.URL, nil)\n\t\t\tr.NoError(err)\n\t\t\tres := httptest.NewRecorder()\n\t\t\tmux.ServeHTTP(res, req)\n\n\t\t\tr.Equal(tc.Code, res.Code)\n\t\t\tr.Equal(tc.Location, res.Header().Get(\"location\"))\n\t\t\tr.Equal(tc.Content, strings.TrimSpace(res.Body.String()))\n\t\t})\n\t}\n}\n"
        },
        {
          "name": "jam",
          "type": "tree",
          "content": null
        },
        {
          "name": "packr.go",
          "type": "blob",
          "size": 1.130859375,
          "content": "package packr\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/gobuffalo/packr/v2/jam/parser\"\n\t\"github.com/gobuffalo/packr/v2/plog\"\n\t\"github.com/markbates/safe\"\n)\n\nvar boxes = &boxMap{}\n\nvar _ = safe.Run(func() {\n\tp, err := parser.NewFromRoots([]string{}, nil)\n\tif err != nil {\n\t\tplog.Logger.Error(err)\n\t\treturn\n\t}\n\tboxes, err := p.Run()\n\tif err != nil {\n\t\tplog.Logger.Error(err)\n\t\treturn\n\t}\n\tfor _, box := range boxes {\n\t\tb := construct(box.Name, box.AbsPath)\n\t\t_, err = placeBox(b)\n\t\tif err != nil {\n\t\t\tplog.Logger.Error(err)\n\t\t\treturn\n\t\t}\n\t}\n\n})\n\nfunc findBox(name string) (*Box, error) {\n\tkey := resolver.Key(name)\n\tplog.Debug(\"packr\", \"findBox\", \"name\", name, \"key\", key)\n\n\tb, ok := boxes.Load(key)\n\tif !ok {\n\t\tplog.Debug(\"packr\", \"findBox\", \"name\", name, \"key\", key, \"found\", ok)\n\t\treturn nil, fmt.Errorf(\"could not find box %s\", name)\n\t}\n\n\tplog.Debug(b, \"found\", \"box\", b)\n\treturn b, nil\n}\n\nfunc placeBox(b *Box) (*Box, error) {\n\tkey := resolver.Key(b.Name)\n\teb, _ := boxes.LoadOrStore(key, b)\n\n\tplog.Debug(\"packr\", \"placeBox\", \"name\", eb.Name, \"path\", eb.Path, \"resolution directory\", eb.ResolutionDir)\n\treturn eb, nil\n}\n"
        },
        {
          "name": "packr2",
          "type": "tree",
          "content": null
        },
        {
          "name": "packr_test.go",
          "type": "blob",
          "size": 0.1884765625,
          "content": "package packr\n\nimport \"github.com/gobuffalo/packr/v2/file\"\n\nfunc qfile(name string, body string) File {\n\tf, err := file.NewFile(name, []byte(body))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn f\n}\n"
        },
        {
          "name": "plog",
          "type": "tree",
          "content": null
        },
        {
          "name": "pointer.go",
          "type": "blob",
          "size": 0.80859375,
          "content": "package packr\n\nimport (\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/gobuffalo/packr/v2/plog\"\n)\n\n// Pointer is a resolvr which resolves\n// a file from a different box.\ntype Pointer struct {\n\tForwardBox  string\n\tForwardPath string\n}\n\nvar _ resolver.Resolver = Pointer{}\n\n// Resolve attempts to find the file in the specific box\n// with the specified key\nfunc (p Pointer) Resolve(box string, path string) (file.File, error) {\n\tplog.Debug(p, \"Resolve\", \"box\", box, \"path\", path, \"forward-box\", p.ForwardBox, \"forward-path\", p.ForwardPath)\n\tb, err := findBox(p.ForwardBox)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tf, err := b.Resolve(p.ForwardPath)\n\tif err != nil {\n\t\treturn f, err\n\t}\n\tplog.Debug(p, \"Resolve\", \"box\", box, \"path\", path, \"file\", f)\n\treturn file.NewFileR(path, f)\n}\n"
        },
        {
          "name": "pointer_test.go",
          "type": "blob",
          "size": 1.283203125,
          "content": "package packr\n\nimport (\n\t\"testing\"\n\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_Pointer_Find(t *testing.T) {\n\tr := require.New(t)\n\n\tb1 := New(\"b1\", \"\")\n\tr.NoError(b1.AddString(\"foo.txt\", \"FOO!\"))\n\n\tb2 := New(\"b2\", \"\")\n\tb2.SetResolver(\"bar.txt\", &Pointer{\n\t\tForwardBox:  \"b1\",\n\t\tForwardPath: \"foo.txt\",\n\t})\n\n\ts, err := b2.FindString(\"bar.txt\")\n\tr.NoError(err)\n\tr.Equal(\"FOO!\", s)\n}\n\nfunc Test_Pointer_Find_CorrectName(t *testing.T) {\n\tr := require.New(t)\n\n\tgk := \"0b5bab905480ad8c6d0695f615dcd644\"\n\tg := New(gk, \"\")\n\thgr, err := resolver.NewHexGzip(map[string]string{\n\t\t\"48df4e44f4202fe5f6093beee782cb10\": \"1f8b08000000000000ff4c8ebdaec2300c46f7fb14bed94b5606a70b3f6283a1083186c46a2225354aad56bc3d6a2304933fdbc73ac6fffd79d7dd2f07089253fb87b5006020eb97008099c4820bb68c24465dbb63b355a07f9783cd64d414697e7211058e07a1418c9aa397603c4dd151b336df4b8992a83d514a0c372ec9a3aea345af3f7e7cb07fad21e61ec6e28cd2897bde8c53af2a5a09d4f5f777000000ffffcfb8b477d3000000\",\n\t})\n\tr.NoError(err)\n\tg.DefaultResolver = hgr\n\n\tb := New(\"my box\", \"./templates\")\n\tb.SetResolver(\"index.html\", Pointer{ForwardBox: gk, ForwardPath: \"48df4e44f4202fe5f6093beee782cb10\"})\n\tf, err := b.Resolve(\"index.html\")\n\tr.NoError(err)\n\tfi, err := f.Stat()\n\tr.NoError(err)\n\tr.Equal(\"index.html\", fi.Name())\n}\n"
        },
        {
          "name": "resolvers_map.go",
          "type": "blob",
          "size": 1.845703125,
          "content": "//go:generate mapgen -name \"resolvers\" -zero \"nil\" -go-type \"resolver.Resolver\" -pkg \"\" -a \"nil\" -b \"nil\" -c \"nil\" -bb \"nil\" -destination \"packr\"\n// Code generated by github.com/gobuffalo/mapgen. DO NOT EDIT.\n\npackage packr\n\nimport (\n\t\"sort\"\n\t\"sync\"\n\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n)\n\n// resolversMap wraps sync.Map and uses the following types:\n// key:   string\n// value: resolver.Resolver\ntype resolversMap struct {\n\tdata sync.Map\n}\n\n// Delete the key from the map\nfunc (m *resolversMap) Delete(key string) {\n\tm.data.Delete(key)\n}\n\n// Load the key from the map.\n// Returns resolver.Resolver or bool.\n// A false return indicates either the key was not found\n// or the value is not of type resolver.Resolver\nfunc (m *resolversMap) Load(key string) (resolver.Resolver, bool) {\n\ti, ok := m.data.Load(key)\n\tif !ok {\n\t\treturn nil, false\n\t}\n\ts, ok := i.(resolver.Resolver)\n\treturn s, ok\n}\n\n// LoadOrStore will return an existing key or\n// store the value if not already in the map\nfunc (m *resolversMap) LoadOrStore(key string, value resolver.Resolver) (resolver.Resolver, bool) {\n\ti, _ := m.data.LoadOrStore(key, value)\n\ts, ok := i.(resolver.Resolver)\n\treturn s, ok\n}\n\n// Range over the resolver.Resolver values in the map\nfunc (m *resolversMap) Range(f func(key string, value resolver.Resolver) bool) {\n\tm.data.Range(func(k, v interface{}) bool {\n\t\tkey, ok := k.(string)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\tvalue, ok := v.(resolver.Resolver)\n\t\tif !ok {\n\t\t\treturn false\n\t\t}\n\t\treturn f(key, value)\n\t})\n}\n\n// Store a resolver.Resolver in the map\nfunc (m *resolversMap) Store(key string, value resolver.Resolver) {\n\tm.data.Store(key, value)\n}\n\n// Keys returns a list of keys in the map\nfunc (m *resolversMap) Keys() []string {\n\tvar keys []string\n\tm.Range(func(key string, value resolver.Resolver) bool {\n\t\tkeys = append(keys, key)\n\t\treturn true\n\t})\n\tsort.Strings(keys)\n\treturn keys\n}\n"
        },
        {
          "name": "version.go",
          "type": "blob",
          "size": 0.05859375,
          "content": "package packr\n\n// Version of Packr\nconst Version = \"v2.8.3\"\n"
        },
        {
          "name": "walk.go",
          "type": "blob",
          "size": 1.6279296875,
          "content": "package packr\n\nimport (\n\t\"sort\"\n\t\"strings\"\n\n\t\"github.com/gobuffalo/packd\"\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/gobuffalo/packr/v2/file/resolver\"\n\t\"github.com/gobuffalo/packr/v2/plog\"\n)\n\n// WalkFunc is used to walk a box\ntype WalkFunc = packd.WalkFunc\n\n// Walk will traverse the box and call the WalkFunc for each file in the box/folder.\nfunc (b *Box) Walk(wf WalkFunc) error {\n\tm := map[string]file.File{}\n\n\tdr := b.DefaultResolver\n\tif dr == nil {\n\t\tcd := resolver.OsPath(b.ResolutionDir)\n\t\tdr = &resolver.Disk{Root: cd}\n\t}\n\tif fm, ok := dr.(file.FileMappable); ok {\n\t\tfor n, f := range fm.FileMap() {\n\t\t\tm[n] = f\n\t\t}\n\t}\n\tvar err error\n\tb.resolvers.Range(func(n string, r resolver.Resolver) bool {\n\t\tvar f file.File\n\t\tf, err = r.Resolve(\"\", n)\n\t\tif err != nil {\n\t\t\treturn false\n\t\t}\n\t\tkeep := true\n\t\tfor k := range m {\n\t\t\tif strings.EqualFold(k, n) {\n\t\t\t\tkeep = false\n\t\t\t}\n\t\t}\n\t\tif keep {\n\t\t\tm[n] = f\n\t\t}\n\t\treturn true\n\t})\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tvar keys = make([]string, 0, len(m))\n\tfor k := range m {\n\t\tkeys = append(keys, k)\n\t}\n\tsort.Strings(keys)\n\n\tfor _, k := range keys {\n\t\tosPath := resolver.OsPath(k)\n\t\tplog.Debug(b, \"Walk\", \"path\", k, \"osPath\", osPath)\n\t\tif err := wf(osPath, m[k]); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n\n// WalkPrefix will call box.Walk and call the WalkFunc when it finds paths that have a matching prefix\nfunc (b *Box) WalkPrefix(prefix string, wf WalkFunc) error {\n\tipref := resolver.OsPath(prefix)\n\treturn b.Walk(func(path string, f File) error {\n\t\tipath := resolver.OsPath(path)\n\t\tif strings.HasPrefix(ipath, ipref) {\n\t\t\tif err := wf(path, f); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t})\n}\n"
        },
        {
          "name": "walk_test.go",
          "type": "blob",
          "size": 0.9794921875,
          "content": "package packr\n\nimport (\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/gobuffalo/packr/v2/file\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc Test_Box_Walk(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := NewBox(filepath.Join(\"_fixtures\", \"list_test\"))\n\tr.NoError(box.AddString(filepath.Join(\"d\", \"d.txt\"), \"D\"))\n\n\tvar act []string\n\tr.NoError(box.Walk(func(path string, f file.File) error {\n\t\tact = append(act, path)\n\t\treturn nil\n\t}))\n\texp := []string{\"a.txt\", filepath.Join(\"b\", \"b.txt\"), filepath.Join(\"b\", \"b2.txt\"), filepath.Join(\"c\", \"c.txt\"), filepath.Join(\"d\", \"d.txt\")}\n\tr.Equal(exp, act)\n}\n\nfunc Test_Box_WalkPrefix(t *testing.T) {\n\tr := require.New(t)\n\n\tbox := NewBox(filepath.Join(\"_fixtures\", \"list_test\"))\n\tr.NoError(box.AddString(filepath.Join(\"d\", \"d.txt\"), \"D\"))\n\n\tvar act []string\n\tr.NoError(box.WalkPrefix(\"b/\", func(path string, f file.File) error {\n\t\tact = append(act, path)\n\t\treturn nil\n\t}))\n\texp := []string{filepath.Join(\"b\", \"b.txt\"), filepath.Join(\"b\", \"b2.txt\")}\n\tr.Equal(exp, act)\n}\n"
        }
      ]
    }
  ]
}