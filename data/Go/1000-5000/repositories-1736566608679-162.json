{
  "metadata": {
    "timestamp": 1736566608679,
    "page": 162,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "uber-go/automaxprocs",
      "stars": 4266,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".build",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.744140625,
          "content": "coverage:\n  range: 80..100\n  round: down\n  precision: 2\n\n  status:\n    project:                   # measuring the overall project coverage\n      default:                 # context, you can create multiple ones with custom titles\n        enabled: yes           # must be yes|true to enable this status\n        target: 90%            # specify the target coverage for each commit status\n                               #   option: \"auto\" (must increase from parent commit or pull request base)\n                               #   option: \"X%\" a static target percentage to hit\n        if_not_found: success  # if parent is not found report status as success, error, or failure\n        if_ci_failed: error    # if ci fails report status as success, error, or failure\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3251953125,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\nvendor\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n*.pprof\n*.out\n*.log\ncoverage.txt\n\n/bin\ncover.out\ncover.html\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.234375,
          "content": "# Changelog\n\n## v1.6.0 (2024-07-24)\n\n- Add RoundQuotaFunc option that allows configuration of rounding\n  behavior for floating point CPU quota.\n\n## v1.5.3 (2023-07-19)\n\n- Fix mountinfo parsing when super options have fields with spaces.\n- Fix division by zero while parsing cgroups.\n\n## v1.5.2 (2023-03-16)\n\n- Support child control cgroups\n- Fix file descriptor leak\n- Update dependencies\n\n## v1.5.1 (2022-04-06)\n\n- Fix cgroups v2 mountpoint detection.\n\n## v1.5.0 (2022-04-05)\n\n- Add support for cgroups v2.\n\nThanks to @emadolsky for their contribution to this release.\n\n## v1.4.0 (2021-02-01)\n\n- Support colons in cgroup names.\n- Remove linters from runtime dependencies.\n\n## v1.3.0 (2020-01-23)\n\n- Migrate to Go modules.\n\n## v1.2.0 (2018-02-22)\n\n- Fixed quota clamping to always round down rather than up; Rather than\n  guaranteeing constant throttling at saturation, instead assume that the\n  fractional CPU was added as a hedge for factors outside of Go's scheduler.\n\n## v1.1.0 (2017-11-10)\n\n- Log the new value of `GOMAXPROCS` rather than the current value.\n- Make logs more explicit about whether `GOMAXPROCS` was modified or not.\n- Allow customization of the minimum `GOMAXPROCS`, and modify default from 2 to 1.\n\n## v1.0.0 (2017-08-09)\n\n- Initial release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age,\nbody size, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event. Representation of a\nproject may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at oss-conduct@uber.com. The project\nteam will review and investigate all complaints, and will respond in a way\nthat it deems appropriate to the circumstances. The project team is obligated\nto maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\n[http://contributor-covenant.org/version/1/4][version].\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.40234375,
          "content": "# Contributing\n\nWe'd love your help improving this package!\n\nIf you'd like to add new exported APIs, please [open an issue][open-issue]\ndescribing your proposal &mdash; discussing API changes ahead of time makes\npull request review much smoother. In your issue, pull request, and any other\ncommunications, please remember to treat your fellow contributors with\nrespect! We take our [code of conduct](CODE_OF_CONDUCT.md) seriously.\n\nNote that you'll need to sign [Uber's Contributor License Agreement][cla]\nbefore we can accept any of your contributions. If necessary, a bot will remind\nyou to accept the CLA when you open your pull request.\n\n## Setup\n\n[Fork][fork], then clone the repository:\n\n```\nmkdir -p $GOPATH/src/go.uber.org\ncd $GOPATH/src/go.uber.org\ngit clone git@github.com:your_github_username/automaxprocs.git\ncd automaxprocs\ngit remote add upstream https://github.com/uber-go/automaxprocs.git\ngit fetch upstream\n```\n\nInstall the test dependencies:\n\n```\nmake dependencies\n```\n\nMake sure that the tests and the linters pass:\n\n```\nmake test\nmake lint\n```\n\nIf you're not using the minor version of Go specified in the Makefile's\n`LINTABLE_MINOR_VERSIONS` variable, `make lint` doesn't do anything. This is\nfine, but it means that you'll only discover lint failures after you open your\npull request.\n\n## Making Changes\n\nStart by creating a new branch for your changes:\n\n```\ncd $GOPATH/src/go.uber.org/automaxprocs\ngit checkout master\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b cool_new_feature\n```\n\nMake your changes, then ensure that `make lint` and `make test` still pass. If\nyou're satisfied with your changes, push them to your fork.\n\n```\ngit push origin cool_new_feature\n```\n\nThen use the GitHub UI to open a pull request.\n\nAt this point, you're waiting on us to review your changes. We *try* to respond\nto issues and pull requests within a few business days, and we may suggest some\nimprovements or alternatives. Once your changes are approved, one of the\nproject maintainers will merge them.\n\nWe're much more likely to approve your changes if you:\n\n* Add tests for new functionality.\n* Write a [good commit message][commit-message].\n* Maintain backward compatibility.\n\n[fork]: https://github.com/uber-go/automaxprocs/fork\n[open-issue]: https://github.com/uber-go/automaxprocs/issues/new\n[cla]: https://cla-assistant.io/uber-go/automaxprocs\n[commit-message]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "Copyright (c) 2017 Uber Technologies, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.060546875,
          "content": "export GOBIN ?= $(shell pwd)/bin\n\nGO_FILES := $(shell \\\n\tfind . '(' -path '*/.*' -o -path './vendor' ')' -prune \\\n\t-o -name '*.go' -print | cut -b3-)\n\nGOLINT = $(GOBIN)/golint\nSTATICCHECK = $(GOBIN)/staticcheck\n\n.PHONY: build\nbuild:\n\tgo build ./...\n\n.PHONY: install\ninstall:\n\tgo mod download\n\n.PHONY: test\ntest:\n\tgo test -race ./...\n\n.PHONY: cover\ncover:\n\tgo test -coverprofile=cover.out -covermode=atomic -coverpkg=./... ./...\n\tgo tool cover -html=cover.out -o cover.html\n\n$(GOLINT): tools/go.mod\n\tcd tools && go install golang.org/x/lint/golint\n\n$(STATICCHECK): tools/go.mod\n\tcd tools && go install honnef.co/go/tools/cmd/staticcheck@2023.1.2\n\n.PHONY: lint\nlint: $(GOLINT) $(STATICCHECK)\n\t@rm -rf lint.log\n\t@echo \"Checking gofmt\"\n\t@gofmt -d -s $(GO_FILES) 2>&1 | tee lint.log\n\t@echo \"Checking go vet\"\n\t@go vet ./... 2>&1 | tee -a lint.log\n\t@echo \"Checking golint\"\n\t@$(GOLINT) ./... | tee -a lint.log\n\t@echo \"Checking staticcheck\"\n\t@$(STATICCHECK) ./... 2>&1 |  tee -a lint.log\n\t@echo \"Checking for license headers...\"\n\t@./.build/check_license.sh | tee -a lint.log\n\t@[ ! -s lint.log ]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5390625,
          "content": "# automaxprocs [![GoDoc][doc-img]][doc] [![Build Status][ci-img]][ci] [![Coverage Status][cov-img]][cov]\n\nAutomatically set `GOMAXPROCS` to match Linux container CPU quota.\n\n## Installation\n\n`go get -u go.uber.org/automaxprocs`\n\n## Quick Start\n\n```go\nimport _ \"go.uber.org/automaxprocs\"\n\nfunc main() {\n  // Your application logic here.\n}\n```\n\n# Performance\nData measured from Uber's internal load balancer. We ran the load balancer with 200% CPU quota (i.e., 2 cores):\n\n| GOMAXPROCS         |  RPS      | P50 (ms) | P99.9 (ms) |\n| ------------------ | --------- | -------- | ---------- |\n| 1                  | 28,893.18 | 1.46     | 19.70      |\n| 2 (equal to quota) | 44,715.07 | 0.84     | 26.38      |\n| 3                  | 44,212.93 | 0.66     | 30.07      |\n| 4                  | 41,071.15 | 0.57     | 42.94      |\n| 8                  | 33,111.69 | 0.43     | 64.32      |\n| Default (24)       | 22,191.40 | 0.45     | 76.19      |\n\nWhen `GOMAXPROCS` is increased above the CPU quota, we see P50 decrease slightly, but see significant increases to P99. We also see that the total RPS handled also decreases.\n\nWhen `GOMAXPROCS` is higher than the CPU quota allocated, we also saw significant throttling:\n\n```\n$ cat /sys/fs/cgroup/cpu,cpuacct/system.slice/[...]/cpu.stat\nnr_periods 42227334\nnr_throttled 131923\nthrottled_time 88613212216618\n```\n\nOnce `GOMAXPROCS` was reduced to match the CPU quota, we saw no CPU throttling.\n\n## Development Status: Stable\n\nAll APIs are finalized, and no breaking changes will be made in the 1.x series\nof releases. Users of semver-aware dependency management systems should pin\nautomaxprocs to `^1`.\n\n## Contributing\n\nWe encourage and support an active, healthy community of contributors &mdash;\nincluding you! Details are in the [contribution guide](CONTRIBUTING.md) and\nthe [code of conduct](CODE_OF_CONDUCT.md). The automaxprocs maintainers keep\nan eye on issues and pull requests, but you can also report any negative\nconduct to oss-conduct@uber.com. That email list is a private, safe space;\neven the automaxprocs maintainers don't have access, so don't hesitate to hold\nus to a high standard.\n\n<hr>\n\nReleased under the [MIT License](LICENSE).\n\n[doc-img]: https://godoc.org/go.uber.org/automaxprocs?status.svg\n[doc]: https://godoc.org/go.uber.org/automaxprocs\n[ci-img]: https://github.com/uber-go/automaxprocs/actions/workflows/go.yml/badge.svg\n[ci]: https://github.com/uber-go/automaxprocs/actions/workflows/go.yml\n[cov-img]: https://codecov.io/gh/uber-go/automaxprocs/branch/master/graph/badge.svg\n[cov]: https://codecov.io/gh/uber-go/automaxprocs\n\n\n"
        },
        {
          "name": "automaxprocs.go",
          "type": "blob",
          "size": 1.369140625,
          "content": "// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Package automaxprocs automatically sets GOMAXPROCS to match the Linux\n// container CPU quota, if any.\npackage automaxprocs // import \"go.uber.org/automaxprocs\"\n\nimport (\n\t\"log\"\n\n\t\"go.uber.org/automaxprocs/maxprocs\"\n)\n\nfunc init() {\n\tmaxprocs.Set(maxprocs.Logger(log.Printf))\n}\n"
        },
        {
          "name": "example_test.go",
          "type": "blob",
          "size": 1.31640625,
          "content": "// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\npackage automaxprocs_test\n\n// Importing automaxprocs automatically adjusts GOMAXPROCS.\nimport _ \"go.uber.org/automaxprocs\"\n\n// To render a whole-file example, we need a package-level declaration.\nvar _ = \"\"\n\nfunc Example() {}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.37109375,
          "content": "module go.uber.org/automaxprocs\n\ngo 1.20\n\nrequire (\n\tgithub.com/prashantv/gostub v1.1.0\n\tgithub.com/stretchr/testify v1.7.1\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/kr/pretty v0.1.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.7958984375,
          "content": "github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.1 h1:5TQK59W5E3v0r2duFAb7P95B6hEeOyEnHRa8MjYSMTY=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "maxprocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}