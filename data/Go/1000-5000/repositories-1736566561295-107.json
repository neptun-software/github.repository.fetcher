{
  "metadata": {
    "timestamp": 1736566561295,
    "page": 107,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "litmuschaos/litmus",
      "stars": 4499,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yaml",
          "type": "blob",
          "size": 0.0556640625,
          "content": "---\nexclude_paths:\n  - \"chaoscenter/web/src/api/auth/**\"\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1845703125,
          "content": "*.go linguist-detectable=true\n*.css linguist-detectable=false\n*.js linguist-detectable=false\n*.ts linguist-detectable=false\n*.html linguist-detectable=false\n*.tsx linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.26953125,
          "content": ".DS_Store\n.idea\n.vscode\n.nyc_output\n__pycache__/\n**/node_modules/\n**/build/\n**/cypress/videos/\n**/cypress/screenshots/\n**/.nyc_output/\n**/coverage/\n\nmain\nout/\nvendor/\n_vendor-*\ntmp/\n.env\nlitmus-portal-service\nlitmus-portal-app\nlitmus-portal/graphql-server/server\n\n**/client_id"
        },
        {
          "name": ".gitleaksignore",
          "type": "blob",
          "size": 1.419921875,
          "content": "57748d7e930664094c76ae6b02577db2ce3955fa:mkdocs/docs/auth/v3.0.0/auth-api.json:jwt:140\n57748d7e930664094c76ae6b02577db2ce3955fa:mkdocs/docs/auth/v3.0.0/auth-api.json:jwt:185\n57748d7e930664094c76ae6b02577db2ce3955fa:mkdocs/docs/auth/v3.0.0/auth-api.json:jwt:278\n28f9079f4a1909f277a47f0d45be1f82a84de27d:mkdocs/docs/auth/v3.0.0/auth-api.json:jwt:46\ncd1841bb0d83decc0ab0f09ddda69cc572c50da9:auth/api.html:jwt:293\ncd1841bb0d83decc0ab0f09ddda69cc572c50da9:auth/swagger.yml:jwt:56\n512b7bbc16d1f8198872fb517814362b81b18388:docs/auth/swagger.yml:jwt:56\n512b7bbc16d1f8198872fb517814362b81b18388:docs/auth/api.html:jwt:293\n32e35ad4fb9c7c2ba8ed4a6043176f1e73801814:monitoring/utils/sample-application-under-test/percona/cr.yaml:hashicorp-tf-password:213\n352f8c6ae9a3b93ce841e6bc3b3a296c0f917846:litmus-portal/backend/auth/pkg/providers/github/github.go:generic-api-key:14\n92da50bb8ff07fce3427e70449844b77b7ee3270:apps/datastax/deployers/common/opscenter/conf-dir/conf/ssl/opscenter.key:private-key:1\nedb1d8dc6e2d1044a9fcb3677727363bbe1e267c:mysql-master/Dockerfile:generic-api-key:37\nedb1d8dc6e2d1044a9fcb3677727363bbe1e267c:mysql-slave/Dockerfile:generic-api-key:37\nfd88a74c81ae34796a42fafed1a61bf1edc06607:auth/v3.0.0/auth-api.json:jwt:140\nfd88a74c81ae34796a42fafed1a61bf1edc06607:auth/v3.0.0/auth-api.json:jwt:185\nfd88a74c81ae34796a42fafed1a61bf1edc06607:auth/v3.0.0/auth-api.json:jwt:278\n6eb10ad366fb3bd040cda61e8c64e47f15d576be:auth/v3.0.0/auth-api.json:jwt:46"
        },
        {
          "name": ".trivyignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "# Accept the risk (RedHat)\nCVE-2024-2961"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 18.2333984375,
          "content": "This is a list of organizations that have publicly acknowledged usage of LitmusChaos and shared details of how they are leveraging it for chaos engineering.\nPlease send a PR to this file (along with details in a respective [org](./adopters/organizations) folder) to add/remove entries. If you are an independent user\nand wish to to share your adoption story, please raise a PR against the [users](USERS.md) file.\n\nThese organizations have been broadly classified on the basis of how they contribute to the ecosystem: as vendors, as solution providers or as pure end-users of\ncloud-native technologies. Also included in this list are CNCF (or other) open-source projects that have integrated with Litmus or use it as part of their release/delivery process.\n\n### Cloud-Native End Users\n\nThe companies listed here conform to [CNCF's definition of end-users](https://github.com/cncf/enduser-public#cncf-end-user-community).\n\n| Organization                                                                     | Usecase                                                                                                  | Details                                                                                |\n| :------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------- |\n| [AnutaNetworks](https://www.anutanetworks.com/)                                  | Chaos Engineering as part of SRE practices in QA environments                                            | [Our Story](adopters/organizations/anutanetworks.md)                                   |\n| [AkriData](https://www.akridata.com/)                                            | Pod Chaos Experiments in AWS & Azure                                                                     | [Our Story](adopters/organizations/akridata.md)                                        |\n| [Halodoc](https://www.halodoc.com/)                                              | Resiliency Validation of Kubernetes Workloads and Infra on AWS                                           | [Our Story](adopters/organizations/halodoc.md)                                         |\n| [Intuit](https://www.intuit.com?utm_source=github&utm_campaign=litmuschaos_repo) | [Argo Based Chaos Workflows](https://youtu.be/Uwqop-s99LA?t=720)                                         | [Our Story](adopters/organizations/intuit.md)                                          |\n| [Kitopi](https://www.kitopi.com/)                                                | Chaos Engineering as part of SRE practice                                                                | [Our Story](adopters/organizations/kitopi.md)                                          |\n| [Lenskart](https://www.lenskart.com/)                                            | Chaos Engineering for better Resiliency                                                                  | [Our Story](adopters/organizations/lenskart.md)                                        |\n| [Mercedes](https://www.mercedes-benz.com/)                                       | Resiliency validation for applications                                                                   | [Our Story](adopters/organizations/mercedes.md)                                        |\n| [Orange](https://www.orange.com)                                                 | [Cloud Infra Resiliency](https://youtu.be/UOhjFbCrncw?list=PLBuYBMjBLBzHPuPsvdbJvKu1KxSowWDYl&t=186...a) | [Our Story](adopters/organizations/orange.md)                                          |\n| [PÃ´le Emploi](https://www.pole-emploi.fr)                                        | Chaos Engineering as part of SRE practice                                                                | [Our Story](adopters/organizations/pole_emploi.md)                                     |\n| [iFood](https://www.ifood.com.br/)                                               | Chaos Engineering for a Food Delivery Platform                                                           | [Our Story](adopters/organizations/ifood.md)                                           |\n| [FIS](https://www.fisglobal.com/en/)                                             | Larger SRE Transformation with Chaos Engineering                                                         | [Our Story](adopters/organizations/fis.md)                                             |\n| [Adidas](https://adidas.com/)                                                    | Implementing Chaos Engineering as a practice at Adidas                                                   | [Our Story](adopters/organizations/adidas.md)                                          |\n| [Cyren](https://www.cyren.com/)                                                  | Implementing Chaos Engineering as a practice at Cyren                                                    | [Our Story](https://www.infoq.com/articles/chaos-engineering-cloud-native/)            |\n| [AB-Inbev](https://www.ab-inbev.com/)                                            | Implementing Chaos Engineering as a practice at AB-Inbev                                                 | [Our Story](adopters/organizations/abinbev.md)                                         |\n| [Group Baobab](https://baobab.com/en/home/)                                      | Orchestrating Chaos using LitmusChaos at Baobab                                                          | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-1647648343) |\n| [Flipkart](https://www.flipkart.com/)                                            | Chaos Engineering at Flipkart                                                                            | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-1966904935) |\n| [Talend](https://www.talend.com/)                                                | Chaos Engineering for our pipelines and weekly checks                                                    | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-2005254600) |\n| [Delivery Hero](https://www.deliveryhero.com/)                                   | Enhancing Resiliency of Our Services                                                                     | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-1997465958) |\n| [Wingie Enuygun Company](https://www.wingie.com/)                                | Chaos Engineering for an Online Travel and Finance Platform                                              | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-2331265698) |\n| [EmiratesNBD](https://www.emiratesnbd.com)                                       | Chaos Engineering for Government Owned Bank                                                              | [Our Story](adopters/organizations/emirates-nbd.md)                                    |\n| [PokerBaazi](https://www.pokerbaazi.com/)                                        | Chaos Engineering for Online Gaming                                                                      | [Our Story](adopters/organizations/pokerbaazi.md)                                      |\n\n### Cloud-Native Vendors\n\nThe companies listed here sell cloud-native products/technologies. They use LitmusChaos as part of the resiliency validation of these products OR as part of other\ndevops/reliability pipelines (such as for customer portals/websites etc.,) within the company.\n\n| Organization                                                                       | Usecase                                                                                                                                 | Details                                                                                |\n| :--------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------- |\n| [KubeSphere](https://kubesphere.io/)                                               | Chaos Engineering                                                                                                                       | To Be Added                                                                            |\n| [Kublr](https://kublr.com/)                                                        | Identify the weak spots and components prone to failures under stress                                                                   | [Our Story](adopters/organizations/kublr.md)                                           |\n| [MayaData](https://mayadata.io)                                                    | [Director Online](https://director.mayadata.io/)                                                                                        | [Our Story](adopters/organizations/mayadata.md)                                        |\n| [NetApp](https://www.netapp.com)                                                   | [Chaos Engineering](https://www.netapp.com/us/index.aspx)                                                                               | [Our Story](adopters/organizations/netapp.md)                                          |\n| [Okteto](https://okteto.com)                                                       | [Okteto-Litmus Integration](https://okteto.com/blog/chaos-engineering-with-litmus/)                                                     | [Our Story](adopters/organizations/okteto.md)                                          |\n| [RedHat](https://www.redhat.com/en)                                                | [RedHat Openshift Virtualization Maturity](https://www.youtube.com/watch?v=VITGHJ47gx8&list=PLBuYBMjBLBzHPuPsvdbJvKu1KxSowWDYl&index=7) | [Our Story](adopters/organizations/redhat.md)                                          |\n| [VMWare](https://www.vmware.com/)                                                  | Chaos Engineering in CD                                                                                                                 | [Our Story](adopters/organizations/vmware.md)                                          |\n| [Zebrium](https://www.zebrium.com?utm_source=github&utm_campaign=litmuschaos_repo) | [Zebrium K8s Chaos Project](https://github.com/zebrium/zebrium-kubernetes-demo)                                                         | [Our Story](adopters/organizations/zebrium.md)                                         |\n| [Container Solutions](https://www.container-solutions.com/)                        | Building Chaos Engineering for E-Commerce Customers                                                                                     | [Our Story](adopters/organizations/containersolutions.md)                              |\n| [Infracloud Technologies](https://www.infracloud.io/)                              | Developing Resiliency Framework at Infracloud                                                                                           | [Our Story](adopters/organizations/infracloud.md)                                      |\n| [IFS](https://www.ifs.com/)                                                        | Checking Resiliency with LitmusChaos at IFS                                                                                             | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-1966428068) |\n| [Ericsson](https://www.ericsson.com/en)                                            | Chaos Engineering with Open Source LitmusChaos                                                                                          | [Our Story](https://github.com/litmuschaos/litmus/issues/2191#issuecomment-1985348431) |\n| [OutSystems](https://www.outsystems.com/)                                          | Chaos Engineering for Low-Code Platform                                                                                                 | [Our Story](adopters/organizations/outsystems.md)                                      |\n\n### Cloud-Native Solutions & Service Providers\n\nThe companies listed here provide solutions around cloud-native technologies to other organizations/clients and are often involved in their implementation/offer services.\nThey use LitmusChaos as the tool of choice for carrying out chaos experiments in a client environment or in some cases use it as a building block of a larger bespoke software/devops platform.\n\n| Organization                                                                                                            | Usecase                                                                                                                             | Details                                         |\n| :---------------------------------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------------------------------------------------------------- | :---------------------------------------------- |\n| [Klanik](https://www.klanik.com)                                                                                        | Chaos Engineering as part of SRE practice                                                                                           | [Our Story](adopters/organizations/klanik.md)   |\n| [Neudesic](https://www.neudesic.com/)                                                                                   | Chaos Engineering                                                                                                                   | [Our Story](adopters/organizations/neudesic.md) |\n| [WeScale](https://www.wescale.fr)                                                                                       | [Chaos Engineering](https://blog.wescale.fr/2020/03/19/le-guide-de-chaos-engineering-partie-2/)                                     | [Our Story](adopters/organizations/wescale.md)  |\n| [Wipro](https://www.wipro.com/en-IN/infrastructure/wipros-appanywhere/?utm_source=github&utm_campaign=litmuschaos_repo) | [Wipro AppAnywhere](https://www.wipro.com/en-IN/infrastructure/wipros-appanywhere/?utm_source=github&utm_campaign=litmuschaos_repo) | [Our Story](adopters/organizations/wipro.md)    |\n| [HCL Cloud Native Labs](https://www.hcltech.com/)                                                                       | SRE Enablement Service                                                                                                              | [Our Story(TBA)]                                |\n| [CI&T](https://ciandt.com/us/en-us)                                                                                     | Chaos Engineering Implementation                                                                                                    | [Our Story](adopters/organizations/ci&t.md)     |\n\n### Cloud-Native OSS Projects\n\nThe projects listed here, in most cases use LitmusChaos for testing the resilience of the respective opensource framework/platform\n(in a manual or automated fashion) or in other cases integrate with it via a plugin/service to provide add resilience validation capability to their\nexisting functions.\n\n| Organization                                            | Usecase                                                                                                    | Details                                                                                                                                  |\n| :------------------------------------------------------ | :--------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------- |\n| [Keptn](https://keptn.sh)                               | [Chaos Engineering integration in CD](https://www.youtube.com/watch?v=aa5SzQmv4EQ)                         | [Our Story](https://medium.com/keptn/part-2-evaluating-application-resiliency-with-keptn-and-litmuschaos-use-case-and-demo-f43b264a2294) |\n| [KubeFlare](https://github.com/raspbernetes)            | Resilience of microservices on ARM64 (Raspberry Pi) based clusters                                         | [Our Story](adopters/organizations/raspbernetes.md)                                                                                      |\n| [OpenEBS](https://openebs.io/)                          | [Openebs-CI](https://openebs.ci/)                                                                          | [Our Story](adopters/organizations/openebs.md)                                                                                           |\n| [Pravega](https://pravega.io/)                          | To inject faults while exercising quality tests on our product                                             | [Our Story](adopters/organizations/pravega.md)                                                                                           |\n| [Red Hat](https://www.redhat.com/en)                    | [Chaos Engineering with Kraken](https://github.com/cloud-bulldozer/kraken)                                 | [Our Story](adopters/organizations/redhat_kraken.md)                                                                                     |\n| [Iter8](https://iter8.tools)                            | [SLO validation with chaos injection](https://iter8.tools/0.7/tutorials/deployments/slo-validation-chaos/) | To Be Added                                                                                                                              |\n| [CNF Test Suite](https://github.com/cncf/cnf-testsuite) | To validate the resilience of Cloud Native Network Functions (CNFs)                                        | [Our Story](adopters/organizations/cnftestsuite.md)                                                                                      |\n| [APACHE APISIX](https://apisix.apache.org/)             | Practicing Chaos Engineering using Litmus in the Apache APISIX Ingress.                                    | [Our Story](adopters/organizations/apisix.md)                                                                                            |\n"
        },
        {
          "name": "CHAOS_EXPERIMENT_MATURITY.md",
          "type": "blob",
          "size": 1.7724609375,
          "content": "## Experiment Maturity Guidelines\n\nThis document lists the criteria as per which the maturity levels of chaos experiments can be derived.\n\n<table>\n\n <tr>\n  <th> Alpha </th>\n  <th> Beta </th>\n  <th> General Availabilty </th>\n </tr>\n\n <tr>\n\n  <td> \n   <ul>\n    <li>Injects the intended chaos on any one standard Kubernetes platform (GKE, EKS, DOKS, vSphere)</li>\n    <li>Has a clearly defined entry (initial status) & exit (resiliency) criteria</li> \n    <li>Conforms to the standard litmus experiment structure (business logic, auxiliary tasks/utils, chaoslib)</li>\n    <li>Provides a Kubernetes job manifest to execute the chaos experiment</li>\n    <li>Accompanied by usage doc (readme) with pre-requisites, experiment tunables and procedure</li>\n   </ul>\n  </td>\n\n  <td>\n   <ul>\n     <li>Successfully reverses the chaos, leaves cluster in a healthy state</li>\n     <li>Clearly classified as an application-level or (cluster) infrastructure level chaos</li>\n     <li>Leaves no chaos residue (cleans up resources created as part of execution) regardless of success</li>\n     <li>Has sufficient debug messages (logs) indicating experiment flow</li>\n     <li>Reuse of base chaoslib, existing (common) utils where possible</li>\n     <li>Supports at least two of the standard Kubernetes platforms</li> \n     <li>Accompanied by a how-to demo video to aid users</li>\n     <li>Successfully executed by the LitmusChaos Operator (executor) via ChaosExperiment CR</li>\n     <li>Templatizes any manifest/resource specification used in the experiment execution</li>\n   </ul> \n  </td>\n\n  <td>\n   <ul>\n     <li>Supports all 4 standard Kubernetes platforms</li>\n     <li>The ChaosResult CR contains sufficient info on the state (action & result of significant steps) of the chaos experiment</li>\n   </ul>\n  </td>\n\n </tr>\n\n</table>\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3583984375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official email address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nsayan.mondal@harness.io.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "COMMERCIAL_SUPPORT.md",
          "type": "blob",
          "size": 0.4462890625,
          "content": "# LitmusChaos Commercial Support Providers\n\nHere is a list of third-party companies and individuals who provide products or services related to LitmusChaos. LitmusChaos is a CNCF project which does not endorse any company. \nIf you are a commercial support provider for LitmusChaos and wish to add your company, please raise a PR against this document.\n\nThe list is provided in alphabetical order.\n\n- [Harness](https://harness.io/products/chaos-engineering)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.58203125,
          "content": "<img src=\"https://avatars0.githubusercontent.com/u/49853472?s=200&v=4\">\n\n# Contributing to Litmus\n\n---\n\nThanks for your interest in contributing to Litmus and help improve the project! â¡ï¸â¨\n\n## Where to Begin!\n\nIf you have any queries or requests about Litmus please [create an issue](https://github.com/litmuschaos/litmus/issues/new) on GitHub. If you want to comment or ask questions to the contributors start by [joining our community](http://slack.litmuschaos.io) and drop your questions in the **#litmus** channel.\n\nIf you want to do code contributions but you are fairly new to the tech stack we are using! Check out the [Local Development Guide](https://github.com/litmuschaos/litmus/wiki/ChaosCenter-Development-Guide) and [Development Best Practices](https://github.com/litmuschaos/litmus/wiki/Development-Best-Practices) to get a reference and help get started.\n\nWe welcome contributions of all kinds\n\n- Development of features, bug fixes, and other improvements.\n- Documentation including reference material and examples.\n- Bug and feature reports.\n\n---\n\n## Steps to Contribute\n\nFixes and improvements can be directly addressed by sending a Pull Request on GitHub. Pull requests will be reviewed by one or more maintainers and merged when acceptable.\n\nWe ask that before contributing, please make the effort to coordinate with the maintainers of the project before submitting large or high impact PRs. This will prevent you from doing extra work that may or may not be merged.\n\nUse your judgement about what constitutes a large change. If you aren't sure, send a message to the **#litmus-dev** slack or submit an issue on GitHub.\n\n<br />\n\n### **Sign your work with Developer Certificate of Origin**\n\nTo contribute to this project, you must agree to the Developer Certificate of Origin (DCO) for each commit you make. The DCO is a simple statement that you, as a contributor, have the legal right to make the contribution.\n\nSee the [DCO](https://developercertificate.org/) file for the full text of what you must agree to.\n\nTo successfully sign off your contribution you just add a line to every git commit message:\n\n```git\nSigned-off-by: Joe Smith <joe.smith@email.com>\n```\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your commit automatically with `git commit -s`. You can also use git [aliases](https://git-scm.com/book/tr/v2/Git-Basics-Git-Aliases) like `git config --global alias.ci 'commit -s'`. Now you can commit with git ci and the commit will be signed.\n\n<br />\n\n### **Submitting a Pull Request**\n\nTo submit any kinds of improvements, please consider the following:\n\n- Submit an [issue](https://github.com/litmuschaos/litmus/issues) describing your proposed change. If you are just looking to pick an open issue do so from a list of [good-first-issues](https://github.com/litmuschaos/litmus/labels/good%20first%20issue) maintained [here](https://github.com/litmuschaos/litmus/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22).\n- We would promptly respond back to your issue\n- Fork this repository, develop and test your code changes. See the Highlighted Repositories section below to choose which area you would like to contribute to.\n- Create a `feature branch` from your forked repository and submit a pull request against this repoâs main branch.\n  - If you are making a change to the user interface (UI), include a screenshot of the UI changes.\n- Follow the relevant coding style guidelines\n  - For backend contributions, popular ones are the [Go Code Review Comments](https://code.google.com/p/go-wiki/wiki/CodeReviewComments) and the _Formatting_ and _style_ section of Peter Bourgon's [Go: Best Practices for Production Environments](https://peter.bourgon.org/go-in-production/#formatting-and-style).\n  - If you are making any changes in backend, make sure you have run and tested the code locally, the reviewers might ask for relevant screenshots in the comments.\n  - For frontend contributions, we follow the [Airbnb style guide](https://airbnb.io/javascript/react/)\n- Your branch may be merged once all configured checks pass, including:\n  - The branch has passed tests in CI.\n  - A review from appropriate maintainers (see [MAINTAINERS.md](https://github.com/litmuschaos/litmus/blob/master/MAINTAINERS) and [GOVERNANCE.md](https://github.com/litmuschaos/litmus/blob/master/GOVERNANCE.md))\n\nIf you are new to Go, consider reading [Effective Go](https://golang.org/doc/effective_go.html) and [Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments) for guidance on writing idiomatic Go code.\n\n### Generating/Updating Mocks for `chaoscenter/graphql/server`\n\nTo generate new mocks or update existing mocks:\n\n-   Follow the instructions to install [mockery](https://vektra.github.io/mockery/latest/installation/).\n-   If generating mocks for existing interface simply run `mockery`.\n-   If generating mocks for new interface update [`.mockery.yaml`](././chaoscenter/graphql/server/.mockery.yaml) and run `mockery`.\n\n---\n\n## Pull Request Checklist :\n\n- Rebase to the current master branch before submitting your pull request.\n- Commits should be as small as possible. Each commit should follow the checklist below:\n  - For code changes, add tests relevant to the fixed bug or new feature\n  - Pass the compile and tests in CI\n  - Commit header (first line) should convey what changed\n  - Commit body should include details such as why the changes are required and how the proposed changes\n  - DCO Signed\n- If your PR is not getting reviewed or you need a specific person to review it, please reach out to the Litmus contributors at the [Litmus slack channel](https://app.slack.com/client/T09NY5SBT/CNXNB0ZTN)\n\n## Highlighted Repositories\n\nYou can choose from a list of sub-dependent repos to contribute to, a few highlighted repos that Litmus uses are:\n\n- [Chaos-charts](https://github.com/litmuschaos/chaos-charts)\n- [Chaos-workflows](https://github.com/litmuschaos/chaos-workflows)\n- [Test-tools](https://github.com/litmuschaos/test-tools)\n- [Litmus-go](https://github.com/litmuschaos/litmus-go)\n- [Litmus-website](https://github.com/litmuschaos/litmus-website-2)\n- [Litmusctl](https://github.com/litmuschaos/litmusctl)\n- [Litmus-docs](https://github.com/litmuschaos/litmus-docs)\n- [backstage-plugin](https://github.com/litmuschaos/backstage-plugin)\n\n## Community\n\nThe litmus community will have a weekly contributor sync-up on Tuesdays 16.00-16.30 IST / 12.30-13.00 CEST\n\n- The sync up meeting is held online on [Google Hangouts](https://meet.google.com/uvt-ozaw-bvp)\n- The release items are tracked in the [release sheet](https://github.com/litmuschaos/litmus/releases).\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 4.9970703125,
          "content": "# LitmusChaos Project Governance\n\nThis document outlines the governance structure for the LitmusChaos project, a CNCF Incubating project. It describes the roles, responsibilities, decision-making processes, and mechanisms for community involvement.\n\nWe abide by the [Code of Conduct](./CODE_OF_CONDUCT.md) for all the projects maintained under the LitmusChaos Organization.\n\nFor specific guidance on practical contribution steps for any LitmusChaos sub-project please\nsee our [CONTRIBUTING.md](./CONTRIBUTING.md) guide and the sub-project specific contributing guides\nin the respective GitHub repositories.\n\n## Roles and Membership\n\nRoles and their responsibilities are detailed in the [Community Membership](./community-roles.md) document.\n\nThe list of current maintainers and their organizational affiliations is maintained in the [MAINTAINERS.md](./MAINTAINERS.md) file.\n\n## Conflict Resolution and Voting\n\nMost issues within the project are resolved by consensus. When consensus cannot be reached, a voting process is initiated. All decisions are documented publicly, either in GitHub or in meeting notes.\n\n### Voting Process\n\n- **Threshold:** A vote passes with a simple majority.\n- **Quorum:** At least 30% of maintainers must participate in the vote.\n- **Voting Method:** Votes are cast by adding +1 or -1 to the associated GitHub issue or PR.\n- **Binding Votes:** Each maintainer has one binding vote. Non-binding votes from the community are encouraged.\n- **Organizational Limit:** No single organization can cast more than 40% of the eligible votes. Organizations with more than 40% of maintainers must designate voting members.\n- **Duration:** Voting remains open for one week.\n\n## How are decisions made?\n\nLitmusChaos is an open-source project with an open design philosophy. This means\nthat the repository is the source of truth for EVERY aspect of the project,\nincluding its philosophy, design, road map, and APIs. _If it's part of the\nproject, it's in the repo. If it's in the repo, it's part of the project._\n\nAs a result, all decisions can be expressed as changes to the repository. An\nimplementation change is a change to the source code. An API change is a change\nto the API specification. A philosophy change is a change to the philosophy\nmanifesto, and so on.\n\nAll decisions affecting LitmusChaos, big and small, follow the same 3 steps:\n\n- Step 1: Open a pull request. Anyone can do this.\n- Step 2: Discuss the pull request. Anyone can do this.\n- Step 3: Merge or refuse the pull request. Who does this depends on the nature\n  of the pull request and which areas of the project it affects.\n\n## Decision-Making Process\n\nMost decisions are made through consensus. If consensus cannot be reached, maintainers may initiate a vote.\n\n### Voting\n\n- **Threshold:** A vote passes with a simple majority.\n- **Quorum:** At least 30% of maintainers must participate in the vote.\n- **Method:** Votes are cast using +1 (approve) or -1 (reject) in the relevant GitHub PR or issue.\n- **Duration:** Voting remains open for one week.\n\n## Community Support and Transparency\n\nLitmusChaos aims for full transparency and inclusion in all governance activities. All decisions are made publicly and documented in the GitHub repositories or public meetings.\n\n### Recurring Public Meetings\n\n- #### Maintainers and Contributors Meeting\n\n  Covers technical issues, future milestones, and roadmaps. Also focused on governance, membership, and the future direction of the project.\n\n- #### Community Meeting\n\n  Engages end users and the community with project updates, user presentations, and open discussions.\n\n- #### Meeting Calendar\n\n  Please fill [this invite form](https://forms.gle/AsuXB2hbTG2TyD2d9) to be added to the calendar\n\n## Helping contributors with the DCO\n\nThe [DCO or `Sign your work`](./CONTRIBUTING.md#sign-your-work)\nrequirement is not intended as a roadblock or speed bump.\n\nSome LitmusChaos contributors are not as familiar with `git`, or have used a web\nbased editor, and thus asking them to `git commit --amend -s` is not the best\nway forward.\n\nIn this case, maintainers can update the commits based on clause (c) of the DCO.\nThe most trivial way for a contributor to allow the maintainer to do this, is to\nadd a DCO signature in a pull request's comment, or a maintainer can simply\nnote that the change is sufficiently trivial that it does not substantially\nchange the existing contribution - i.e., a spelling change.\n\nWhen you add someone's DCO, please also add your own to keep a log.\n\n## I'm a maintainer. Should I make pull requests too?\n\nYes. Nobody should ever push to master directly. All changes should be\nmade through a pull request.\n\n## Adding sub-projects\n\nSimilar to adding maintainers, new sub projects can be added to LitmusChaos\nGitHub organization as long as they adhere to the LitmusChaos vision and mission.\nNew projects are discussed in either the Contributor Meeting or the Community\nslack and requires at least 1 maintainer approval.\n\nIf a project is approved, a maintainer will add the project to the LitmusChaos\nGitHub organization, and make an announcement on a public forum.\n"
        },
        {
          "name": "GoogleSeasonOfDocs.md",
          "type": "blob",
          "size": 5.6220703125,
          "content": "# GSoD @LitmusChaos\n\n## Introduction\n\nHello All! This doc contains the \"project proposal\" for LitmusChaos's participation in the 2021 [Google Season of Docs](https://developers.google.com/season-of-docs). We look forward to a productive and fun experience working with the technical writers that come on board! \n\n## About LitmusChaos\n\nLitmus is a Cloud-Native Chaos Engineering platform that helps SREs & Developers identify and fix weaknesses in their system. It is a CNCF\nSandbox project with adoption across several organizations. Litmus has a thriving community that lives in [Kubernetes Slack](https://kubernetes.slack.com/?redir=%2Farchives%2FCNXNB0ZTN). You can find out more about Litmus and it's evolution from the [blog](https://dev.to/t/litmuschaos) or [videos](https://www.youtube.com/playlist?list=PLmM1fgu30seVGFyNIEyDgAq6KnzgW2p3m). \n\n## State of LitmusChaos Documentation \n\nThe steps for getting started with Litmus & procedure for running individual chaos experiments are available in the [Docs Website](https://docs.litmuschaos.io). The Litmus architecture is available in the [Wiki](https://github.com/litmuschaos/litmus/wiki/Litmus-Architecture), with contribution docs\nspread across the different sub-projects/repositories contained within the [LitmusChaos](https://github.com/litmuschaos) GitHub organization. This includes\nguides detailing how developers can contribute to the [Chaos Experiment suite](https://github.com/litmuschaos/litmus-go/tree/master/contribute/developer-guide) and the [documentation](https://github.com/litmuschaos/litmus-docs/blob/master/CONTRIBUTING.md) itself. \n\nLike minded folks from the community interested in improving documentation have formed a special interest group (SIG-Docs), that meets at every Monday @8PM IST on the community [zoom meet](https://zoom.us/j/91358162694). \n\nLitmus is undergoing a major version change (to 2.0. Currently in beta). The community plans to move to Docusaurus-2 as the platform of choice for hosting the documentation. \n\n## Project Idea: Create Tutorials for Litmus 2.0 \n\n### Problems\n\n- The current docs are helpful for intermediate-level chaos-practitioners. We still lack enough simple, easy-to-navigate guides that help beginners \nor support quick evaluation. \n- Litmus 2.0 offers a newer approach to chaos experimentation compared to the 1.x releases. It uses a portal/dashboard driven approach that allows for \nseveral user flows. These are still not documented. \n- Litmus integrates with a wide-variety of tools/frameworks in the CNCF ecosystem - monitoring tools, CI/CD systems etc., which are not documented fully\n\n### Scope of Work\n\nOne of the solutions mooted by the community and maintainers team is to create an initial set of \"tutorials\" based on [GoogleCodeLabs](https://github.com/googlecodelabs/tools) for a list of common user flows - that include usage of the litmus portal (2.0) & integration with other cloud native tools. These tutorials will be featured on the LitmusChaos project/docs website. \n\nWhile the existing documentation framework (and upcoming one based on docusaurus-2) is expected to contain architecture, experiment and other conceptual \ndetails that will help intermediate-level/advanced chaos practitioners build out their usecases, the tutorials are expected to be what the users will most \nbenefit from to get started and familiarize themselves with Litmus. \n\nThe GSoD collaborator is expected to work on tutorials in the following areas and publish them, while setting up the source artifacts for further scale \nand easy contributions from the community. \n\n- How to Get Started: Installation of Litmus via Helm, Portal Set-up, Execution of a Simple Chaos Worflow on a local/remote Target\n- How to Construct Custom Chaos Workflows (Using Portal, LitmusCtl)\n- How to create teams & manage users\n- How to enable GitOps driven Chaos Workflow Management and Execution\n- How to Visualize Chaos Using Chaos-Interleaved Application Dashboards\n- How to setup Automated Hypothesis Validation using Litmus Probes\n- How to use Resilience Grading & Chaos Analytics\n- How to Integrate with Gitlab, GitHubActions, Spinnaker, Keptn\n\n### How would we measure success\n\n- Decrease in the number of basic usage related questions on the slack community\n- Decrease in the number of GitHub issues related to queries/missing information\n- Better SEO for LitmusChaos related concepts \n- Increase in non-code/docs contributors to enhance the tutorials (improvements to existing ones or contribute new ones)\n\n### Skills Needed\n\n- The participant is expected to be comfortable in following steps/docs provided by the Litmus developers, following instructions to test them \nfor correctness & re-write in the tutorial format. This involves basic Git usage, setting up a local development environment for docs and using\na Kubernetes cluster (the instructions and assistance for last requirement will be provided by a volunteer team from the community)\n\n### Budget Details\n\n|Budget Item|Amount(in USD)|Running Total| Notes |\n------------|------|-------------|-------|\n|Tutorials Creation for Litmus 2.0| 6000.00 | 6000.00 |  |\n|Volunteer Stipends | 500 | 8000.00 | 4 volunteer stipends x 500 each |\n|**Total** | | 8000.00 | | \n\n### Mentors Team \n\nYou can reach out to following folks from the LitmusChaos community for queries &  assistance\n\n- karthik@chaosnative.com (@ksatchit)\n- raj@chaosnative.com (@rajdas98)\n- tankjaye@amazon.com (@k8s-dev)\n- divya.mohan0209@gmail.com (@divya-mohan0209)\n\n### Contact Info\n\nTechnical Writers interested in this project can reach out by sending an email to the following folks. Please include links to your technical writing\nwork or portfolio/CV\n\n- uma@chaosnative.com\n- ajesh@chaosnative.com\n- karthik@chaosnative.com\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0830078125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 LitmusChaos Authors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 4.6962890625,
          "content": "# LitmusChaos Maintainers\n\n- [GOVERNANCE.md](./GOVERNANCE.md) describes the LitmusChaos governance.\n- [community-roles.md](./community-roles.md) describes the responsibilities and requirements on the project roles.\n\n### Component-Wise Code Owners & Primary Reviewers\n\nArea             |Components                       |Source                                           |Maintainers                                 |Reviewers|\n-----------------|---------------------------------|-------------------------------------------------|--------------------------------------------|-------- |\ncontrol-plane    |chaos-manager                    |graphql-server                                   |@amityt, @Jonsy13, @imrajdas, @SarthakJain26                 |@gdsoumya, @Saranya-jena, @arkajyotiMukherjee|\ncontrol-plane    |chaos-dashboard                  |frontend, component-library                       |@arkajyotiMukherjee, @S-ayanide            |@amityt, @SahilKr24, @hrishavjha|\nexecution-plane  |subscriber, event-tracker        |cluster-agents                                   |@gdsoumya, @imrajdas, @SarthakJain26         |@amityt, @Jonsy13, @ispeakc0de, @Adarshkumar14         |\nexecution-plane  |litmus-core                      |chaos-operator, chaos-runner, elves, chaos-exporter |@ksatchit, @ispeakc0de, @chandankumar4                  |@uditgaurav, @neelanjan          |   \nchaos-experiments|experiment-lib, chaoshub         |litmus-go, test-tools, chaos-charts              |@uditgaurav, @ispeakc0de, @ksatchit, @Vr00mm| @neelanjan00, @Adarshkumar14, @avaakash     |\nchaos-plugins    |cli, plugin infra, developer portals                 |litmusctl, backstage-plugin                                        |@Saranya-jena, @SarthakJain26, @namkyu1999               |@Jonsy13, @ajeshbaby, @imrajdas         | \nchaos-sdk        |go/python/ansible sdk           |litmus-go,litmus-python,litmus-ansible           |@oumkale, @ispeakc0de, @ksatchit            |@neelanjan00, @avaakash, @uditgaurav         | \ne2e              |e2e-suite, e2e-dashboard         |litmus-e2e                                       |@uditgaurav, @Jonsy13                       |@neelanjan00, @S-ayanide, @avaakash         |\nintegrations     |CI/CD plugins, wrappers          |chaos-ci-lib, gitlab-templates, github-actions   |@uditgaurav, @ksatchit                    |@ispeakc0de, @Adarshkumar14         | \nhelm-charts      |control-plane, agent, experiments|litmus-helm                                      |@Jasstkn, @ispeakc0de, @imrajdas, @Jonsy13             |@ksatchit, @uditgaurav         |\ndocumentation    |platform-docs, experiment-docs   |litmus-docs, mkdocs                              |@neelanjan00, @umamukkara, @ispeakc0de     |@ksatchit, @ajeshbaby, @amityt, @uditgaurav         |websites         |project website, chaoshub, documentation  |litmus-website, charthub, litmus-docs   |@umamukkara, @arkajyotiMukherjee, @S-ayanide    |@SahilKr24, @hrishavjha, @ajeshbaby        |\nwebsites         |project website, chaoshub, documentation  |litmus-website, charthub, litmus-docs   |@SahilKr24, @hrishavjha, @ajeshbaby    |@umamukkara, @S-ayanide        |\n\n### Consolidated Maintainers List\n\n```\n\"Amit Kumar Das\",@amityt,amit.das@harness.io\n\"Arkojyoti Mukherjee\",@arkajyotiMukherjee,arko@harness.io\n\"Chandan Kumar\",@chandankumar4,ckamtaprasad@msystechnologies.com\n\"Karthik Satchitanand\",@ksatchit,karthik.s@harness.io\n\"Maria Kotlyarevskaya\",@Jasstkn,jasssstkn@yahoo.com\n\"Namkyu Park\",namkyu1999,lak9348@gmail.com\n\"Neelanjan Manna\",@neelanjan00,neelanjan.manna@harness.io\n\"Oum Nivrati Kale\",@oumkale,oumk@jfrog.com\n\"Raj Das\",@imrajdas,rajbabu.das@harness.io\n\"RÃ©mi Ziolkowski\",@Vr00mm,remi.ziolkowski-ext@pole-emploi.fr\n\"Soumya Ghosh Dastidar\",@gdsoumya,gdsoumya@gmail.com\n\"Saranya Jena\",@Saranya-jena,saranya.jena@harness.io\n\"Sarthak Jain\",@SarthakJain26,sarthak.jain@harness.io\n\"Sayan Mondal\",@S-ayanide,sayan.mondal@harness.io\n\"Shubham Chaudhary\",@ispeakc0de,shubham.chaudhary@harness.io\n\"Udit Gaurav\",@uditgaurav,udit.gaurav@harness.io\n\"Vedant Shrotria\",@Jonsy13,vedant.shrotria@harness.io\n\"Uma Mukkara\",@umamukkara,umasankar.mukkara@harness.io\n\"Sahil KR\",@SahilKr24,sahil.kumar@harness.io\n\"Ajesh Baby\",@ajeshbaby,ajesh.baby@harness.io\n\"Hrishav Kumar\",@hrishavjha,hrishav.kumar@harness.io\n```\n\n### Consolidated Reviewers List\n\n```\n\"Adarsh Kumar\",@Adarshkumar14,adarsh.kumar@harness.io\n\"Akash Srivastava\",@avaakash,akash.srivastava@harness.io\n```\n\n### Emeritus Maintainers\n\n```\n\"Jayesh Kumar\",@k8s-dev,tankjaye@amazon.com,Amazon\n\"Sumit Nagal\",@sumitnagal,snagal@salesforce.com,Salesforce\n```\n\n### Emeritus Reviewers\n\n```\n\"Amit Bhatt\",@amitbhatt818,amit.bhatt@mayadata.io,MayaData\n\"Ishan Gupta\",@ishangupta-ds,ishan@chaosnative.com,ChaosNative\n\"Rahul M Chheda\",@rahulchheda,rahul.chheda1997@gmail.com,Independent\n```"
        },
        {
          "name": "MENTORING.md",
          "type": "blob",
          "size": 7.46484375,
          "content": "# LITMUSCHAOS MENTORING\n\nThis document serves as a comprehensive record of mentees, mentors, issues, and blogs associated with prominent open source programs such as LFX Mentorship, Google Summer of Code, Google Season of Docs, and Outreachy. Its primary objective is to provide an organized overview of mentoring activities and effectively track the progress made within the project.\n\n## Mentoring Details\n\n| Program                     | Timeline                            | Mentee                                          | Mentor(s)                                                                                          | Github Issue                                      | Blog(s)                                                                                                                                                                                                                                                        |\n|-----------------------------|-------------------------------------|-------------------------------------------------|----------------------------------------------------------------------------------------------------|---------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Google Summer of Code (GSoC) | May 17th - August 31st, 2021        | [Hemanth Krishna](https://github.com/DarthBenro008) | [Raj Babu Das](https://github.com/imrajdas), [Karthik S](https://github.com/ksatchit)              | https://github.com/litmuschaos/litmus/issues/2483 | [Blog](https://darthbenro008.medium.com/google-summer-of-code-2021-with-cloud-native-compute-foundation-my-experience-with-litmuschaos-18f1ec3e5bfa),  [CNCF blog](https://www.cncf.io/blog/2021/08/19/__trashed-2/)                                           |\n| LFX Mentorship              | September 1st - November 31st, 2021 | [Dhananjay Purohit](https://github.com/DhananjayPurohit)           | [Vedant Shrotria](https://github.com/jonsy13), [Raj Babu Das](https://github.com/imrajdas)         | https://github.com/litmuschaos/litmus/issues/3114 | [Blog](https://dhananjaypurohit.medium.com/getting-started-my-journey-with-lfx-mentorship-and-litmuschaos-3514eacf6df2)                                                                                                                                        |\n| LFX Mentorship              | September 1st - November 31st, 2021 | [Aman Dwivedi](https://github.com/Aman-Codes)                      | [Udit Gaurav](https://github.com/uditgaurav), [Soumya Ghosh Dastidar](https://github.com/gdsoumya) | https://github.com/litmuschaos/litmus/issues/3112 | [Blog](https://aman-codes.medium.com/kick-start-of-my-lfx-mentorship-with-litmus-chaos-eeb089a10951),  [CNCF blog](https://www.cncf.io/blog/2022/08/11/my-experience-contributing-to-litmuschaos-as-a-student)                                                 |\n| LFX Mentorship              | March 1st - May 31st, 2022          | [Prayag Savsani](https://github.com/PrayagS)                       | [Saranya Jena](https://github.com/Saranya-jena), [Sarthak Jain](https://github.com/SarthakJain26)  | https://github.com/litmuschaos/litmus/issues/3440 | --                                                                                                                                                                                                                                                             |\n| LFX Mentorship              | March 1st - May 31st, 2023          | [NamKyu Park](https://github.com/namkyu1999)                       | [Sayan Mondal](https://github.com/S-ayanide), [Amit Kumar Das](https://github.com/amityt)          | https://github.com/litmuschaos/litmus/issues/3892 | [Blog](https://dev.to/namkyu1999/my-lfx-mentorship-journey-the-best-starting-point-for-contributing-to-open-source-4f35),  [CNCF blog](https://www.cncf.io/blog/2023/05/30/my-lfx-mentorship-journey-the-best-starting-point-for-contributing-to-open-source/) |\n| LFX Mentorship              | June 1st - August 31st, 2023        | [Soham Ratnaparkhi](https://github.com/SohamRatnaparkhi)           | [Amit Kumar Das](https://github.com/amityt), [Arkajyoti Mukherjee](https://github.com/arkajyotiMukherjee) | https://github.com/litmuschaos/litmus/issues/3970 | --                                                                                                                                                                                                                                                             |\n| LFX Mentorship              | June 1st - August 31st, 2023        | [Nagesh Bansal](https://github.com/Nageshbansal)           | [Shubham Chaudhary](https://github.com/ispeakc0de), [Vansh Bhatia](https://github.com/vanshBhatia-A4k9) | https://github.com/litmuschaos/litmus/issues/3969 | [Blog](https://dev.to/nageshbansal/exploring-litmusctl-a-comprehensive-guide-170k)                                                                                                                                                                                       |\n| LFX Mentorship               | September 1st - November 30th, 2023 | [Magnim Thibaut Freedisch Batale](https://github.com/Freedisch) | [Saranya Jena](https://github.com/Saranya-jena), [Sayan Mondal](https://github.com/S-ayanide)            | https://github.com/litmuschaos/litmus/issues/4102 | [Blog](https://dev.to/freedisch_10/embarking-on-a-professional-growth-adventure-insights-from-my-lfx-mentorship-program-at-litmuschaos-5cbc)                                                                                                                  |\n| LFX Mentorship               | September 1st - November 30th, 2023 | [Deep Poharkar](https://github.com/deep-poharkar)               | [Sarthak Jain](https://github.com/SarthakJain26), [Neelanjan Manna](https://github.com/neelanjan00)       | https://github.com/litmuschaos/litmus/issues/4101 | -- |\n| LFX Mentorship              | March 1st - April 31st, 2024 | [Aryan Bhokare](https://github.com/aryan-bhokare)           | [Saranya Jena](https://github.com/Saranya-jena), [Hrishav Kumar](https://github.com/hrishavjha), [Sahil Kumar](https://github.com/SahilKr24)         | https://github.com/litmuschaos/litmus/issues/4407 | --\n| LFX Mentorship              | March 1st - April 31st, 2024 | [Shivam Purohit](https://github.com/shivam-Purohit)           | [Sarthak Jain](https://github.com/SarthakJain26), [Vedant Shrotria](https://github.com/jonsy13), [Nagesh Bansal](https://github.com/Nageshbansal)         | https://github.com/litmuschaos/litmus/issues/4405 | --\n| LFX Mentorship              | March 1st - April 31st, 2024 | [M R DHANUSH](https://github.com/Dhanush0369)           | [Raj Babu Das](https://github.com/imrajdas), [Shubham Chaudhary](https://github.com/ispeakc0de), [NamKyu Park](https://github.com/namkyu1999)         | https://github.com/litmuschaos/litmus/issues/4406 | --                                                                                                                                        |\n\n> Refer to the [CNCF Mentoring](https://github.com/cncf/mentoring) repository for more details.\n\nWe sincerely thank all the mentors, mentees, organizations, and programs involved in this project for their invaluable support and contributions. Their dedication and commitment play a vital role in the success of our mentoring initiatives.\n\n--x--"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 0.421875,
          "content": "The source code developed for the LitmusChaos Project is licensed \nunder Apache 2.0. \n\nHowever, the LitmusChaos project contains unmodified\nsubcomponents from other OpenSource Projects with separate\ncopyright notices and license terms. \n\nYour use of the source code for these subcomponents is subject\nto the terms and conditions as defined by those source projects.\n\nPlease refer to the [fossa](./fossa.md) reports for more details\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.609375,
          "content": "<img alt=\"LitmusChaos\" src=\"https://avatars.githubusercontent.com/u/49853472?s=200&v=4\" width=\"200\" align=\"left\">\n\n# [LitmusChaos](https://litmuschaos.io/)\n### Open Source Chaos Engineering Platform\n\n[![Slack Channel](https://img.shields.io/badge/Slack-Join-purple)](https://slack.litmuschaos.io)\n![GitHub Workflow](https://github.com/litmuschaos/litmus/actions/workflows/push.yml/badge.svg?branch=master)\n[![Docker Pulls](https://img.shields.io/docker/pulls/litmuschaos/chaos-operator.svg)](https://hub.docker.com/r/litmuschaos/chaos-operator)\n[![GitHub stars](https://img.shields.io/github/stars/litmuschaos/litmus?style=social)](https://github.com/litmuschaos/litmus/stargazers)\n[![GitHub issues](https://img.shields.io/github/issues/litmuschaos/litmus)](https://github.com/litmuschaos/litmus/issues)\n[![Twitter Follow](https://img.shields.io/twitter/follow/litmuschaos?style=social)](https://twitter.com/LitmusChaos)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/3202/badge)](https://www.bestpractices.dev/projects/3202)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus?ref=badge_shield)\n[![YouTube Channel](https://img.shields.io/badge/YouTube-Subscribe-red)](https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw)\n[![Gurubase](https://img.shields.io/badge/Gurubase-Ask%20LitmusChaos%20Guru-006BFF)](https://gurubase.io/g/litmuschaos)\n<br><br><br><br>\n\n#### *Read this in [other languages](translations/TRANSLATIONS.md).*\n\n[ð°ð·](translations/README-ko.md) [ð¨ð³](translations/README-chn.md) [ð§ð·](translations/README-pt-br.md) [ð®ð³](translations/README-hi.md)\n\n\n## Overview\n\nLitmusChaos is an open source Chaos Engineering platform that enables teams to identify weaknesses & potential outages in infrastructures by \ninducing chaos tests in a controlled way. Developers & SREs can practice Chaos Engineering with LitmusChaos as it is easy to use, based on modern \nChaos Engineering principles & community collaborated. It is 100% open source & a CNCF project.\n\nLitmusChaos takes a cloud-native approach to create, manage and monitor chaos. The platform itself runs as a set of microservices and uses Kubernetes \ncustom resources (CRs) to define the chaos intent, as well as the steady state hypothesis. \n\nAt a high-level, Litmus comprises of:  \n\n- **Chaos Control Plane**: A centralized chaos management tool called chaos-center, which helps construct, schedule and visualize Litmus chaos workflows  \n- **Chaos Execution Plane Services**: Made up of a chaos agent and multiple operators that execute & monitor the experiment within a defined \n  target Kubernetes environment. \n\n![architecture summary](/images/litmus-control-and-execution-plane-overview.png)\n\nAt the heart of the platform are the following chaos custom resources: \n\n- **ChaosExperiment**: A resource to group the configuration parameters of a particular fault. ChaosExperiment CRs are essentially installable templates \n  that describe the library carrying out the fault, indicate permissions needed to run it & the defaults it will operate with. Through the ChaosExperiment,  Litmus supports BYOC (bring-your-own-chaos) that helps integrate (optional) any third-party tooling to perform the fault injection. \n\n- **ChaosEngine**: A resource to link a Kubernetes application workload/service, node or an infra component to a fault described by the ChaosExperiment. \n  It also provides options to tune the run properties and specify the steady state validation constraints using 'probes'. ChaosEngine is watched by the \n  Chaos-Operator, which reconciles it (triggers experiment execution) via runners. \n\nThe ChaosExperiment & ChaosEngine CRs are embedded within a Workflow object that can string together one or more experiments in a desired order.\n\n- **ChaosResult**: A resource to hold the results of the experiment run. It provides details of the success of each validation constraint, \n  the revert/rollback status of the fault as well as a verdict. The Chaos-exporter reads the results and exposes information as prometheus metrics. \n  ChaosResults are especially useful during automated runs. \n\nChaosExperiment CRs are hosted on <a href=\"https://hub.litmuschaos.io\" target=\"_blank\">hub.litmuschaos.io</a>. It is a central hub where the \napplication developers or vendors share their chaos experiments so that their users can use them to increase the resilience of the applications \nin production.\n\n## Use cases\n\n- **For Developers**: To run chaos experiments during application development as an extension of unit testing or integration testing.\n- **For CI/CD pipeline builders**: To run chaos as a pipeline stage to find bugs when the application is subjected to fail paths in a pipeline.\n- **For SREs**: To plan and schedule chaos experiments into the application and/or surrounding infrastructure. This practice identifies the weaknesses \n  in the deployment system and increases resilience.\n\n## Getting Started with Litmus\n\nTo get started, check out the <a href=\"https://docs.litmuschaos.io/docs/introduction/what-is-litmus\" target=\"_blank\">Litmus Docs</a> and specifically the <a href=\"https://docs.litmuschaos.io/docs/getting-started/installation#prerequisites\" target=\"_blank\">Installation section</a> of the <a href=\"https://docs.litmuschaos.io/docs/getting-started/installation\" target=\"_blank\">Getting Started with Litmus</a> page.\n\n## Contributing to Chaos Hub\n\nCheck out the <a href=\"https://github.com/litmuschaos/community-charts/blob/master/CONTRIBUTING.md\" target=\"_blank\">Contributing Guidelines for the Chaos Hub</a>\n\n\n## Community\n\n### Community Resources:\n\nFeel free to reach out if you have any queries,concerns, or feature requests\n\n- Give us a star â­ï¸ - If you are using LitmusChaos or think it is an interesting project, we would love a star â¤ï¸\n\n- Follow LitmusChaos on Twitter [@LitmusChaos](https://twitter.com/LitmusChaos).\n\n- Subscribe to the [LitmusChaos YouTube channel](https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw) for regular updates & meeting recordings. \n\n- To join our [Slack Community](https://slack.litmuschaos.io/) and meet our community members, put forward your questions & opinions, join the #litmus channel on the [Kubernetes Slack](https://slack.k8s.io/). \n### Community Meetings\n\n1. Community Meetings\nThese will be hosted every 3rd Wednesday of every month at  5:30 PM GMT /6:30 PM CEST /10 PM IST\nThe community meetings will involve discussing community updates, sharing updates on new features/releases and discussing user/adopter stories. Everyone in the community is invited for the same to participate in the LitmusChaos community meetings.\n\n\n2. Contributor Meetings\nThese will be hosted every second & last Thursday of every month at  2:30 PM GMT /3:30 PM CEST /7 PM IST\nThe contributor meetings are only meant to discuss technical and non-technical contributions to LitmusChaos. Maintainers, present Contributors and aspiring contributors are invited to participate in the LitmusChaos contributor meetings to discuss issues, fixes, enhancements and future contributions\n\n\nFill out the [LitmusChaos Meetings invite form](https://forms.gle/xYZyZ2gTWMqz7xSs7) to get your Calendar invite!  \n\n\n- [Sync Up Meeting Link](https://harness-io.zoom.us/j/95100368978?pwd=b2VrdCtaakE5U3dhOElFMUJOaXVOUT09)\n- [Sync Up Agenda & Meeting Notes](https://hackmd.io/a4Zu_sH4TZGeih-xCimi3Q)\n- [Release Tracker](https://github.com/litmuschaos/litmus/milestones)\n\n### Videos\n\n- [What if Your System Experiences an Outage? Let's Build a Resilient Systems with Chaos Engineering](https://www.youtube.com/watch?v=3mjGEh905u4&t=1s) @ [CNCF](https://www.youtube.com/@cncf)\n- [Enhancing Cyber Resilience Through Zero Trust Chaos Experiments in Cloud Native Environments](https://youtu.be/BelNIk4Bkng) @ [CNCF](https://www.youtube.com/@cncf)\n- [LitmusChaos, with Karthik Satchitanand](https://www.youtube.com/watch?v=ks2R57hhFZk&t=503s) @ [The Kubernetes Podcast from Google](https://www.youtube.com/@TheKubernetesPodcast)\n- [Cultural Shifts: Fostering a Chaos First Mindset in Platform Engineering](https://www.youtube.com/watch?v=WUXFKxgZRsk) @ [CNCF](https://www.youtube.com/@cncf)\n- [Fire in the Cloud: Bringing Managed Services Under the Ambit of Cloud-Native Chaos Engineering](https://www.youtube.com/watch?v=xCDQp5E3VUs) @ [CNCF](https://www.youtube.com/@cncf)\n- [Security Controls for Safe Chaos Experimentation](https://www.youtube.com/watch?v=whCkvLKAw74) @ [CNCF](https://www.youtube.com/@cncf)\n- [Chaos Engineering For Hybrid Targets With LitmusChaos](https://www.youtube.com/watch?v=BZL-ngvbpbU&t=751s) @ [CNCF](https://www.youtube.com/@cncf)\n- [Cloud Native Live: Litmus Chaos Engine and a microservices demo app](https://youtu.be/hOghvd9qCzI)\n- [Chaos Engineering hands-on - An SRE ideating Chaos Experiments and using LitmusChaos | July 2022](https://youtu.be/_x_7SiesjF0) \n- [Achieve Digital Product Resiliency with Chaos Engineering](https://youtu.be/PQrmBHgk0ps)\n- [Case Study: Bringing Chaos Engineering to the Cloud Native Developers](https://youtu.be/KSl-oKk6TPA) @ [CNCF](https://www.youtube.com/@cncf)\n- [Cloud Native Chaos Engineering with LitmusChaos](https://www.youtube.com/watch?v=ItUUqejdXr0) @ [CNCF](https://www.youtube.com/@cncf)\n- [How to create Chaos Experiments with Litmus | Litmus Chaos tutorial](https://youtu.be/mwu5eLgUKq4) @ [Is it Observable](https://www.youtube.com/c/IsitObservable)\n- [Cloud Native Chaos Engineering Preview With LitmusChaos](https://youtu.be/pMWqhS-F3tQ)\n- [Get started with Chaos Engineering with Litmus](https://youtu.be/5CI8d-SKBfc) @ [Containers from the Couch](https://www.youtube.com/c/ContainersfromtheCouch)\n- [Litmus 2 - Chaos Engineering Meets Argo Workflows](https://youtu.be/B8DfYnDh2F4) @ [DevOps Toolkit](https://youtube.com/c/devopstoolkit)\n- [Hands-on with Litmus 2.0 | Rawkode Live](https://youtu.be/D0t3emVLLko) @ [Rawkode Academy](https://www.youtube.com/channel/UCrber_mFvp_FEF7D9u8PDEA)\n- [Introducing LitmusChaos 2.0 / Dok Talks #74](https://youtu.be/97BiCNtJbDw) @ [DoK.community](https://www.youtube.com/channel/UCUnXJbHQ89R2uSfKsqQwGvQ)\n- [Introduction to Cloud Native Chaos Engineering](https://youtu.be/LK0oDLQE4S8) @ [Kunal Kushwaha](https://www.youtube.com/channel/UCBGOUQHNNtNGcGzVq5rIXjw)\n- [#EveryoneCanContribute cafe: Litmus - Chaos Engineering for your Kubernetes](https://youtu.be/IiyrEiK4stQ) @ [GitLab Unfiltered](https://www.youtube.com/channel/UCMtZ0sc1HHNtGGWZFDRTh5A)\n- [Litmus - Chaos Engineering for Kubernetes (CNCFMinutes 9)](https://youtu.be/rDQ9XKbSJIc) @ [Saiyam Pathak](https://www.youtube.com/channel/UCi-1nnN0eC9nRleXdZA6ncg)\n- [Chaos Engineering with Litmus Chaos by Prithvi Raj || HACKODISHA Workshop](https://youtu.be/eyAG0svCsQA) @ [Webwiz](https://www.youtube.com/channel/UC9yM_PkV0QIIsPA3qPrp)\n\n[And More....](https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw)\n\n### Blogs\n\n- CNCF: [Introduction to LitmusChaos](https://www.cncf.io/blog/2020/08/28/introduction-to-litmuschaos/)\n- Hackernoon: [Manage and Monitor Chaos via Litmus Custom Resources](https://hackernoon.com/solid-tips-on-how-to-manage-and-monitor-chaos-via-litmus-custom-resources-5g1s33m9)\n- [Observability Considerations in Chaos: The Metrics Story](https://dev.to/ksatchit/observability-considerations-in-chaos-the-metrics-story-6cb)\n\nCommunity Blogs:\n\n- LiveWyer: [LitmusChaos Showcase: Chaos Experiments in a Helm Chart Test Suite](https://livewyer.io/blog/2021/03/22/litmuschaos-showcase-chaos-experiments-in-a-helm-chart-test-suite/)\n- Jessica Cherry: [Test Kubernetes cluster failures and experiments in your terminal](https://opensource.com/article/21/6/kubernetes-litmus-chaos)\n- Yang Chuansheng(KubeSphere): [KubeSphere é¨ç½² Litmus è³ Kubernetes å¼å¯æ··æ²å®éª](https://kubesphere.io/zh/blogs/litmus-kubesphere/)\n- Saiyam Pathak(Civo): [Chaos Experiments on Kubernetes using Litmus to ensure your cluster is production ready](https://www.civo.com/learn/chaos-engineering-kubernetes-litmus)\n- Andreas Krivas(Container Solutions):[Comparing Chaos Engineering Tools for Kubernetes Workloads](https://blog.container-solutions.com/comparing-chaos-engineering-tools)\n- Akram Riahi(WeScale):[Chaos Engineering : Litmus sous tous les angles](https://blog.wescale.fr/2021/03/11/chaos-engineering-litmus-sous-tous-les-angles/)\n- Prashanto Priyanshu(LensKart):[Lenskartâs approach to Chaos Engineering-Part 2](https://blog.lenskart.com/lenskarts-approach-to-chaos-engineering-part-2-6290e4f3a74e)\n- DevsDay.ru(Russian):[LitmusChaos at Kubecon EU '21](https://devsday.ru/blog/details/40746)\n\n\n## Adopters\n\nCheck out the <a href=\"https://github.com/litmuschaos/litmus/blob/master/ADOPTERS.md\" target=\"_blank\">Adopters of LitmusChaos</a>\n\n(_Send a PR to the above page if you are using Litmus in your chaos engineering practice_)\n\n## License\n\nLitmus is licensed under the Apache License, Version 2.0. See [LICENSE](./LICENSE) for the full license text. Some of the projects used by the Litmus project may be governed by a different license, please refer to its specific license.\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Flitmuschaos%2Flitmus?ref=badge_large)\n\nLitmus Chaos is part of the CNCF Projects.\n\n[![CNCF](https://github.com/cncf/artwork/blob/main/other/cncf/horizontal/color/cncf-color.png)](https://landscape.cncf.io/?selected=litmus)\n\n## Important Links\n\n<a href=\"https://docs.litmuschaos.io\">\n  Litmus Docs <img src=\"https://avatars0.githubusercontent.com/u/49853472?s=200&v=4\" alt=\"Litmus Docs\" height=\"15\">\n</a>\n<br>\n<a href=\"https://landscape.cncf.io/?selected=litmus\">\n  CNCF Landscape <img src=\"https://landscape.cncf.io/images/cncf-landscape-horizontal-color.svg\" alt=\"Litmus on CNCF Landscape\" height=\"15\">\n</a>\n"
        },
        {
          "name": "RELEASE_GUIDELINES.md",
          "type": "blob",
          "size": 12.248046875,
          "content": "# Versioning and Release Guidelines\n\nThis document details the versioning, release plan and release guidelines for LitmusChaos. Stability\nis a top goal for this project, and we hope that this document and the processes\nit entails will help to achieve that. It covers the release timelines, tracking, process, versioning\nnumbering, support horizons, and API stability.\n\nIf you rely on LitmusChaos, it would be good to spend time understanding the\nareas of the API that are and are not supported and how they impact your\nproject in the future.\n\nThis document will be considered a living document. Scheduled releases, supported timelines, and API stability guarantees will be updated here as they\nchange.\n\nIf there is something that you require or this document leaves out, please\nreach out by [filing an issue](https://github.com/litmuschaos/litmus/issues).\n\n-   There is a scheduled release on the 15th of every month on the following repositories:\n    -   [Litmus](https://github.com/litmuschaos/litmus)\n    -   [Chaos-Operator](https://github.com/litmuschaos/chaos-operator)\n    -   [Chaos-Runner](https://github.com/litmuschaos/chaos-runner)\n    -   [Chaos-Exporter](https://github.com/litmuschaos/chaos-exporter)\n    -   [Chaos-Charts](https://github.com/litmuschaos/chaos-charts)\n\n-   Docker images with release tags are pushed upon creation of a github release \n\n-   Following are the docker images:\n    -   [litmuschaos/ansible-runner](https://cloud.docker.com/u/litmuschaos/repository/docker/litmuschaos/ansible-runner)\n    -   [litmuschaos/chaos-operator](https://cloud.docker.com/u/litmuschaos/repository/docker/litmuschaos/chaos-operator)\n    -   [litmuschaos/chaos-runner](https://cloud.docker.com/u/litmuschaos/repository/docker/litmuschaos/chaos-runner)\n    -   [litmuschaos/chaos-exporter](https://cloud.docker.com/u/litmuschaos/repository/docker/litmuschaos/chaos-exporter)\n\n-   The chaos chart bundles are created by publishing the github releases for the [chaos-charts](https://github.com/litmuschaos/chaos-charts) repo. This is picked by the chaos [charthub](https://hub.litmuschaos.io) for user download.\n\n-   The release flow consists of the following steps:\n\n    -   Sprint Planning based on backlogs & feature requests from the community\n    -   Feature Development with unit-tests & integration/bdd (behaviour driven development) tests\n    -   Code/Enhancement freeze with release branch & RC1 (Release Candidate) creation\n    -   User & Dev Documentation\n    -   Execution of (end-to-end) tests against chaos charts, followed by fixes to issues identified\n    -   Cherry pick of commits from master (fixes) to release branch\n    -   Doc sanity tests\n    -   Litmus release with change log\n\n## Releases\n\nReleases of LitmusChaos will be versioned using dotted triples, similar to\n[Semantic Version](http://semver.org/). For the purposes of this document, we\nwill refer to the respective components of this triple as\n`<major>.<minor>.<patch>`. The version number may have additional information,\nsuch as alpha, beta and release candidate qualifications. Such releases will be\nconsidered \"pre-releases\".\n\n### Major and Minor Releases\n\nMajor and minor releases of LitmusChaos will be made from master. Releases of\nLitmusChaos will be marked with GPG signed tags and announced at\nhttps://github.com/litmuschaos/litmus/releases. The tag will be of the\nformat `<major>.<minor>.<patch>` and should be made with the command `git tag\n-s <major>.<minor>.<patch>`.\n\nAfter a minor release, a branch will be created, with the format\n`release-<major>.<minor>.x` from the minor tag. All further patch releases will\nbe done from that branch. For example, once we release `1.0.0`, a branch\n`release-1.0.x` will be created from that tag. All future patch releases will be\ndone against that branch.\n\n### Pre-releases\n\nPre-releases, such as alphas, betas and release candidates will be conducted\nfrom their source branch. For major and minor releases, these releases will be\ndone from main. For patch releases, these pre-releases should be done within\nthe corresponding release branch.\n\nWhile pre-releases are done to assist in the stabilization process, no\nguarantees are provided.\n\n### Upgrade Path\n\nThe upgrade path for LitmusChaos is such that the 0.0.x patch releases are\nalways backward compatible with its major and minor version. Minor (0.x.0)\nversion will always be compatible with the previous minor release. i.e. 1.2.0\nis backwards compatible with 1.1.0 and 1.1.0 is compatible with 1.0.0. There is\nno compatibility guarantees for upgrades that span multiple, _minor_ releases.\nFor example, 1.0.0 to 1.2.0 is not supported. One should first upgrade to 1.1,\nthen 1.2.\n\nThere are no compatibility guarantees with upgrades to _major_ versions. For\nexample, upgrading from 1.0.0 to 2.0.0 may require resources to migrated or\nintegrations to change. Each major version will be supported for at least 1\nyear with bug fixes and security patches.\n\n### Next Release\n\nThe activity for the next release will be tracked in the\n[project board](https://github.com/litmuschaos/litmus/projects). If your\nissue or PR is not present in the project board, please reach out to the maintainers or discuss the same on the #litmus-dev slack channel  to create the milestone or add an issue or PR to an existing milestone.\n\n### Support Horizon\n\nSupport horizons will be defined corresponding to a release branch, identified\nby `<major>.<minor>`. Release branches will be in one of several states:\n\n- __*Next*__: The next planned release branch.\n- __*Active*__: The release is a stable branch which is currently supported and accepting patches.\n- __*Extended*__: The release branch is only accepting security patches.\n- __*LTS*__: The release is a long term stable branch which is currently supported and accepting patches.\n- __*End of Life*__: The release branch is no longer supported and no new patches will be accepted.\n\nReleases will be supported at least one year after a _minor_ release. This means that\nwe will accept bug reports and backports to release branches until the end of\nlife date. If no new _minor_ release has been made, that release will be\nconsidered supported until 6 months after the next _minor_ is released or one year,\nwhichever is longer. Additionally, releases may have an extended security support\nperiod after the end of the active period to accept security backports. This\ntimeframe will be decided by maintainers before the end of the active status.\n\nLong term stable (_LTS_) releases will be supported for at least three years after\ntheir initial _minor_ release. These branches will accept bug reports and\nbackports until the end of life date. They may also accept a wider range of\npatches than non-_LTS_ releases to support the longer term maintainability of the\nbranch, including library dependency, toolchain (including Go) and other version updates\nwhich are needed to ensure each release is built with fully supported dependencies and\nremains usable by LitmusChaos clients. _LTS_ releases can also accept feature backports\nto support new Kubernetes releases. The default action has to be reject it though,\nfor long-term stability. This is still negotiable when the feature is a hard dependency\nfor a new release of Kubernetes. There should be at least a 6-month overlap between\nthe end of life of an _LTS_ release and the initial release of a new _LTS_ release.\nUp to 6 months before the announced end of life of an _LTS_ branch, the branch may\nconvert to a regular _Active_ release with stricter backport criteria.\n\nThe current state is available in the following tables:\n\n| Release                                                              | Status        | Start              | End of Life                                             |\n| ---------                                                            | ------------- | ------------------ | -------------------                                     |\n| [0.x  {0.6 - 0.9}](https://github.com/litmuschaos/litmus/releases/tag/0.9.0) | End of Life | Sept 13, 2019      | Jun 15, 2020                                                    |\n| [1.x  {1.0 - 1.13}](https://github.com/litmuschaos/litmus/releases/tag/1.13.8)  | End of Life   | Jan 8, 2020       | -                                                       |\n| [2.0 beta  {2.0 beta 0 to 2.0 beta 9}](https://github.com/litmuschaos/litmus/releases/tag/2.0.0-Beta9)     | End of Life   | Mar 05, 2021       | July 15, 2021                                        |\n| [2.x](https://github.com/litmuschaos/litmus/releases/tag/2.14.0)  | End of Life   | Aug 9, 2021  | September 5, 2023                                       |\n| [3.x beta](https://github.com/litmuschaos/litmus/releases/tag/3.0.0-beta12)  | End of Life   | Nov 16, 2022     | Nov 15, 2023                                        |\n| [3.x](https://github.com/litmuschaos/litmus/releases/tag/3.6.1)  | Active        | Oct 04, 2023     | active(release of 4.0 + 6 months), |\n| [4.0](https://github.com/litmuschaos/litmus/blob/master/ROADMAP.md)         | Next          | TBD                | TBD                                                     |\n\n> **_NOTE_** LitmusChaos v3.x will end of life at the same time as v4.x reaches full stability. Due to\n> [Minimal Version Selection](https://go.dev/ref/mod#minimal-version-selection) used\n> by Go modules, 3.x must be supported until EOL of all 3.x releases. Once 3.x is in\n> extended support, it will continue to accept security patches in addition to client\n> changes relevant for package importers.\n\n### Kubernetes Support\n\nThe Kubernetes version matrix represents the versions of LitmusChaos which are\nrecommended for a Kubernetes release. Any actively supported version of\nLitmusChaos may receive patches to fix bugs encountered in any version of\nKubernetes, however, our recommendation is based on which versions have been\nthe most thoroughly tested. See the [Kubernetes test grid](https://testgrid.k8s.io/sig-node-LitmusChaos)\nfor the list of actively tested versions. Kubernetes only supports n-3 minor\nrelease versions and LitmusChaos will ensure there is always a supported version\nof LitmusChaos for every supported version of Kubernetes.\n\n| Kubernetes Version  | LitmusChaos Version | \n|---------------------|---------------------|\n| 1.26                | 1.x, 2.x, 3.x       | \n| 1.27                | 3.x                 | \n| 1.28                | 3.x                 | \n| 1.29                | 3.x                 | \n| 1.30                | 3.x, 4.0(wip)       |\n\n\n## Public API Stability\n\nThe following table provides an overview of the components covered by\nLitmusChaos versions:\n\n\n| Component        | Status   | Stabilized Version | Links         |\n|------------------|----------|--------------------|---------------|\n| GraphQL API         | Stable   | 1.0                | [graphql API]() |\n| Go client API    | Stable   | 2.0                | [godoc]() |\n\n\nFrom the version stated in the above table, that component must adhere to the\nstability constraints expected in release versions.\n\nUnless explicitly stated here, components that are called out as unstable or\nnot covered may change in a future minor version. Breaking changes to\n\"unstable\" components will be avoided in patch versions.\n\nGo client API stability includes the `client`, `defaults` and `version` package\nas well as all packages under `pkg`, `core`, `api` and `protobuf`.\nAll packages under `cmd`, `contrib`, `integration`, and `internal` are not\nconsidered part of the stable client API.\n\n\n\n### Release Checklist\n\n* [ ] Release branch creation on litmus component repos\n* [ ] Release candidate github tags/images created\n* [ ] Full e2e pipelines on the release candidates\n* [ ] Fixes to litmus components based on test results & e2e re-runs\n* [ ] Cherry-pick commits to release branches & additional RC tags/images\n* [ ] GA tags/images creation\n* [ ] Release branch creation on chaos-charts repo, GA image updates & chart GA bundle creation\n* [ ] PRs to user artefact/deploy repos:\n    * [ ] litmuschaos/litmus (docs/litmus-operator-<release_version>.yaml)\n    * [ ] litmuschaos/litmus-helm (litmus infra helm chart)\n    * [ ] litmuschaos/chaos-helm (chaosexperiment bundles)\n* [ ] Chaos ChartHub Sanity Check\n* [ ] Sanity e2e runs on GA images\n* [ ] Docs sanity & (docusaurus) versioned docs creation\n* [ ] Release Notes publish\n* [ ] Updates to Releases & Roadmap artefacts\n* [ ] Updates to downstream repos (litmuschaos/litmus-demo) etc.,\n* [ ] Community Announcements, sync up & contributor shout out!\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 5.0556640625,
          "content": "## LITMUS ROADMAP\n\nThis document captures only the high level roadmap items. For the detailed backlog, see [issues list](https://github.com/litmuschaos/litmus/issues). \n\n### Completed\n\n-   Declarative Chaos Intent via custom resources\n-   Chaos Operator to orchestrate chaos experiments\n-   Off the shelf / ready chaos experiments for general Kubernetes chaos \n-   Self sufficient, Centralized Hub for chaos experiments\n-   Per-experiment minimal RBAC permissions definition\n-   Creation of 'scenarios' involving multiple faults via Argo-based Chaos Workflows (with examples for microservices apps like podtato-head and sock-shop)\n-   Cross-Cloud Control Plane (Litmus Portal) to perform chaos against remote clusters\n-   Helm charts for LitmusChaos control plane  \n-   Helm Chart for LitmusChaos execution Plane\n-   Support for admin mode (centralized chaos management) as well as namespaced mode (multi-tenant clusters)\n-   Continuous chaos via flexible schedules, with support to halt/resume or (manual/conditional) abort experiments\n-   Provide complete workflow termination/abort capability \n-   Generation of observability data via Prometheus metrics and Kubernetes chaos events for experiments\n-   Steady-State hypothesis validation before, during and after chaos injection via different probe types\n-   Support for Docker, Containerd & CRI-O runtime\n-   Support for scheduling policies (nodeSelector, tolerations) and resource definitions for chaos pods\n-   ChaosHub refactor for 2.x user flow \n-   Support for ARM64 nodes\n-   Minimized role permissions for Chaos Service Accounts\n-   Scaffolding scripts (SDK) to help bootstrap a new chaos experiment in Go, Python, Ansible\n-   Support orchestration of non-native chaos libraries via the BYOC (Bring-Your-Own-Chaos) model\n-   Support for OpenShift platform \n-   Workflow YAML linter addition\n-   Integration tests & e2e framework creation for control plane components and chaos experiments\n-   Documentation (usage guide for chaos operator, resources & developer guide for new experiment creation)\n-   Improved documentation and tutorials for Litmus Portal based execution flow \n-   Add architecture details & design resources \n-   Define community sync up cadence and structure  \n\n------\n\n### In-Progress (Under Design OR Active Development) \n\n- Native Chaos Workflows with redesigned subscriber to improve resource delegation, enabling seamless and efficient execution of chaos workflows within Kubernetes clusters.\n- Introduce transient runners to improve resource efficiency during chaos experiments by dynamically creating and cleaning up chaos runner instances.\n- Implement Kubernetes connectors to enable streamlined integration with Kubernetes clusters, providing simplified authentication and configuration management.\n- Integrate with tools like K8sGPT to generate insightful reports that identify potential weaknesses in your Kubernetes environment before executing chaos experiments.\n- Add Terraform support for defining and executing chaos experiments on infrastructure components, enabling infrastructure-as-code-based chaos engineering.\n- Add SDK support for Python and Java, with potential extensions to other programming languages based on community interest.\n- Include in-product documentation, such as tooltips, to improve user experience and ease of adoption.\n- Implement the litmus-java-sdk with a targeted v1.0.0 release by Q1.\n- Integrate distributed tracing by adding attributes or events to spans, and create an OpenTelemetry demo showcasing chaos engineering observability.\n- Enhance the exporter to function as an OpenTelemetry collector, providing compatibility with existing observability pipelines.\n- Add support for DocumentDB by replacing certain MongoDB operations, improving flexibility for database chaos.\n- Upgrade Kubernetes SDK from version 1.21 to 1.26 to stay aligned with the latest Kubernetes features and enhancements.\n- Refactor the chaos charts to:\n  - Replace latest tags with specific, versioned image tags.\n  - Consolidate multiple images into a single optimized image.\n- Update GraphQL and authentication API documentation for improved clarity and user guidance.\n- Add comprehensive unit and fuzz tests to enhance code reliability and robustness.\n- Implement out-of-the-box Slack integration for better collaboration and monitoring during chaos experiments.\n\n------\n\n### Backlog \n\n-   Validation support for all ChaosEngine schema elements within workflow wizard \n-   Chaos-center users account to chaosService account map\n-   Cross-hub experiment support within a Chaos Workflow \n-   Enhanced CRD schema for ChaosEngine to support advanced CommandProbe configuration\n-   Support for S3 artifact sink (helps performance/benchmark runs)\n-   Chaos experiments against virtual machines and cloud infrastructure (AWS, GCP, Azure, VMWare, Baremetal)\n-   Off the shelf chaos-integrated monitoring dashboards for application chaos categories \n-   Support for user defined chaos experiment result definition \n-   Increased fault injection types (IOChaos, HTTPChaos, JVMChaos) \n-   Special Interest Groups (SIGs) around specific areas in the project to take the roadmap forward\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 7.1201171875,
          "content": "# SECURITY\n\n## Reporting a Vulnerability\n\nWe are extremely grateful for security researchers and users that report vulnerabilities to the LitmusChaos Open Source Community. All reports are thoroughly investigated by a set of community members.\n\nTo report a litmuschaos vulnerability, either:\n\n1. Report it on Github directly:\n\n    Navigate to the security tab on the repository\n    ![Github Security Tab](./images/securityreport.png)\n\n    Click on 'Advisories'\n    ![Github Advisories tab](./images/security-reporting2.png)\n\n    Click on 'Report a vulnerability'\n   ![Github Report a Vulnerability](./images/security-reporting3.png)\n\n\n\n    \n2. Send an email to `litmuschaos@gmail.com` detailing the issue and steps\nto reproduce.\n\nThe reporter(s) can expect a response within 24 hours acknowledging\nthe issue was received. If a response is not received within 24 hours, please\nreach out to any committer directly to confirm receipt of the issue.\n\n\nTo make a report, submit your vulnerability to all security contacts of LitmusChaos [listed below](#security-contacts). This allows triage and handling of the vulnerability with standardized response times.\n\n### When Should I Report a Vulnerability?\n\n- You think you discovered a potential security vulnerability in LitmusChaos\n- You are unsure how a vulnerability affects LitmusChaos\n- You think you discovered a vulnerability in another project that LitmusChaos depends on. For projects with their own vulnerability reporting and disclosure process, please report it directly there.\n\n### When Should I NOT Report a Vulnerability?\n\n- You need help tuning LitmusChaos components for security - please discuss this is in the various LitmusChaos community channels\n- You need help applying security-related updates\n- Your issue is not security-related\n\n\n## Review Process\n\nOnce a committer has confirmed the relevance of the report, a draft security\nadvisory will be created on Github. The draft advisory will be used to discuss\nthe issue with committers, the reporter(s), and litmuschaos's security advisors.\nIf the reporter(s) wishes to participate in this discussion, then provide\nreporter Github username(s) to be invited to the discussion. If the reporter(s)\ndoes not wish to participate directly in the discussion, then the reporter(s)\ncan request to be updated regularly via email.\n\nIf the vulnerability is accepted, a timeline for developing a patch, public\ndisclosure, and patch release will be determined. If there is an embargo period\non public disclosure before the patch release, an announcment will be sent to\nthe security announce mailing list announcing the scope of the vulnerability, the date of availability of the\npatch release, and the date of public disclosure. The reporter(s) are expected\nto participate in the discussion of the timeline and abide by agreed upon dates\nfor public disclosure.\n\n## Security Vulnerability Response\n\nEach report is acknowledged and analyzed by the security contacts within 5 working days. This will set off the [Security Release Process](#process).\n\nAny vulnerability information shared with the LitmusChaos security contacts stays within LitmusChaos project and will not be disseminated to other projects unless it is necessary to get the issue fixed.\n\n## Public Disclosure Timing\n\nA public disclosure date is negotiated by the LitmusChaos Security Committee and the bug submitter. We prefer to fully disclose the bug as soon as possible once a user mitigation is available. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for vendor coordination. The timeframe for disclosure is from immediate (especially if it is already publicly known) to a few weeks. For a vulnerability with a straightforward mitigation, we expect report date to disclosure date to be on the order of 7 days. The LitmusChaos Security Committee holds the final say when setting a disclosure date.\n\n## Process\n\nIf you find a security-related bug in LitmusChaos, we kindly ask you for responsible disclosure and for giving us appropriate time to react, analyze, and develop a fix to mitigate the found security vulnerability. The security contact will investigate the issue within 5 working days.\n\nThe team will react promptly to fix the security issue and its workaround/fix will be published on our release notes. \n\n## Supported Versions\n\nSee the [litmuschaos release page]()\nfor information on supported versions of litmuschaos. Any `Extended` or `Active`\nrelease branch may receive security updates. For any security issues discovered\non older versions, non-core packages, or dependencies, please inform committers\nusing the same security mailing list as for reporting vulnerabilities.\n\n## Joining the security announce mailing list\n\nAny organization or individual who directly uses litmuschaos and non-core\npackages in production or in a security critical application is eligible to join\nthe security announce mailing list. Indirect users who use litmuschaos through a\nvendor are not expected to join, but should request their vendor join. To join\nthe mailing list, the individual or organization must be sponsored by either a\nlitmuschaos committer or security advisor as well as have a record of properly\nhandling non-public security information. If a sponsor cannot be found,\nsponsorship may be requested at `litmuschaos@gmail.com`. Sponsorship should not\nbe requested via public channels since membership of the security announce list\nis not public.\n\n\n## Security Vulnerability Response\n\nEach report is acknowledged and analyzed by the security contacts within 5 working days. This will set off the [Security Release Process](#process).\n\nAny vulnerability information shared with the LitmusChaos security contacts stays within LitmusChaos project and will not be disseminated to other projects unless it is necessary to get the issue fixed.\n\n## Public Disclosure Timing\n\nA public disclosure date is negotiated by the LitmusChaos Security Committee and the bug submitter. We prefer to fully disclose the bug as soon as possible once a user mitigation is available. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for vendor coordination. The timeframe for disclosure is from immediate (especially if it is already publicly known) to a few weeks. For a vulnerability with a straightforward mitigation, we expect report date to disclosure date to be on the order of 7 days. The LitmusChaos Security Committee holds the final say when setting a disclosure date.\n\n## Process\n\nIf you find a security-related bug in LitmusChaos, we kindly ask you for responsible disclosure and for giving us appropriate time to react, analyze, and develop a fix to mitigate the found security vulnerability. The security contact will investigate the issue within 5 working days.\n\nThe team will react promptly to fix the security issue and its workaround/fix will be published on our release notes. \n\n## Security Contacts\n\nDefined below are the security contacts for this repository. In case you identify any security issue, please reach out to all of the security contacts.\n\n- @ksatchit (karthik satchitanand, karthik.s@harness.io) \n- @rajdas98 (raj babu das, raj.das@harness.io)\n\n"
        },
        {
          "name": "TRAINING_AND_COURSES.md",
          "type": "blob",
          "size": 0.5732421875,
          "content": "# LitmusChaos Training and Courses\n\nHere is a list of training and courses related to LitmusChaos available out there. LitmusChaos is a CNCF project which does not endorse any particular course. \nIf you have created a training or course for LitmusChaos and wish to add the same, please raise a PR against this document.\n\n\n- [Harness Chaos Engineering Practitioner](https://university.harness.io/path/harness-chaos-engineering-practitioner)\n- [Configuring Kubernetes for Reliability with LitmusChaos](https://www.udemy.com/course/configuring-kubernetes-for-reliability-with-litmuschaos/)\n"
        },
        {
          "name": "USERS.md",
          "type": "blob",
          "size": 1.248046875,
          "content": "This is a list of users that are using & benefited by LitmusChaos. Please send a PR to this file (along with details [here](./adopters/users))\nto add yourselves.\n\n\n| User | Usecase | Details |\n| :--- | :---    | :---    |\n| [Laura Henning](https://github.com/LaumiH)|Reasearch on how to do chaos engineering in minikube clusters like [these](https://github.com/LaumiH/k8sstuff)|[My Story](adopters/users/Laura_Henning.md) |\n| [Johnny Jacob](https://github.com/johnnyjacob)|Testing deployment designs for resiliency|Coming Soon!|\n| [Jayesh Kumar Tank](https://github.com/k8s-dev)|Create Cloud Native Validation Suite on [Microservices Application](https://github.com/k8s-dev/microservices-demo)|[My Story](adopters/users/Jayesh_Kumar_Tank.md)|\n| [Bhaumik Shah](https://github.com/Bhaumik1802)|Use LitmusChaos for Kafka Resiliency on Dev/Staging|[My Story](adopters/users/Bhaumik_Shah.md)|\n| [Jayadeep KM](https://github.com/kmjayadeep)|Ensure reliability of microservices|[My Story](adopters/users/Jayadeep_KM.md)|\n| [Shantanu Deshpande](https://github.com/ishantanu)|Chaos Engineering Practice as SRE|[My Story](adopters/users/Shantanu_Deshpande.md)|\n| [Omar Hanafi](https://github.com/oHanafi)|Performance Anomaly Detection in Cloud and Containerized Applications|Coming Soon!|"
        },
        {
          "name": "adopters",
          "type": "tree",
          "content": null
        },
        {
          "name": "chaos-engineering",
          "type": "tree",
          "content": null
        },
        {
          "name": "chaoscenter",
          "type": "tree",
          "content": null
        },
        {
          "name": "community-roles.md",
          "type": "blob",
          "size": 9.2734375,
          "content": "# LitmusChaos Community Membership\n\n## Membership Levels\n\n| **Role**   | **Responsibilities**                                                  | **Requirements**                                                                                                                    | **Defined By**                                                 |\n| ---------- | --------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------- |\n| Member     | Active contributor in the community                                   | Sponsored by 1 reviewer or maintainers. Multiple contributions to the project.                                                      | LitmusChaos GitHub Org Member                                  |\n| Reviewers  | Review contribution from other members in the community               | Sponsored by a maintainer. Demonstrated history of reviews and contributions in a specific subprojects                              | Reviewers column in [MAINTAINERS](./MAINTAINERS.md) file entry |\n| Maintainer | Define the technical direction of the project and oversee subprojects | Sponsored by another maintainer. Demonstrated history of reviews and contributions in specific subprojects and in the main project. | [MAINTAINERS](./MAINTAINERS.md) file entry                     |\n\n## Membership Responsibilities and Requirements\n\n### Member\n\nMembers are active contributors who can be assigned issues and are expected to remain engaged in the project. Members are given the [Triage GitHub role](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#repository-access-for-each-permission-level) to requested LitmusChaos repositories, in order to facilitate issue management and moderate discussions.\n\n#### Requirements:\n\n- Two-factor authentication enabled on GitHub.\n- Multiple contributions, including code, documentation, or participation in discussions.\n- Sponsored by an existing reviewers or maintainers.\n\n#### Responsibilities:\n\n- Moderate GitHub discussions and triage issues.\n- Respond to issues and PRs assigned to them.\n- Review and contribute to discussions actively.\n\n#### Nomination Process:\n\nTo become a member:\n\n1. Open an issue in the `litmuschaos/litmus` repository.\n2. Ensure your sponsors are `@mentioned` in the issue.\n3. [Open an issue](https://github.com/litmuschaos/litmus/issues/new?template=member.md&title=REQUEST%3A%20New%20membership%20for%20%3Cyour-GH-handle%3E) and complete all items on the checklist ([Use this template](https://github.com/litmuschaos/litmus/blob/master/.github/ISSUE_TEMPLATE/member.md)).\n4. Include a list of your contributions that represent your work in the project.\n5. Your sponsors must confirm their support by commenting with +1 on the issue.\n6. Once the sponsors have responded, the request will be reviewed by project leads. Any missing information will be requested.\n\n---\n\n### Reviewer\n\nReviewers evaluate code quality and correctness for specific areas of the project.\n\n#### Requirements:\n\n- Member for at least 3 months.\n- Active participation in discussions and issue reviews for 1 month.\n- Reviewed or authored at least 5 significant PRs.\n- Sponsored by a maintainer.\n\n#### Responsibilities:\n\n- Provide feedback on new PRs and issues.\n- Focus on code quality and correctness during reviews.\n\n#### Nomination Process:\n\nTo become a reviewer:\n\n1. Open an issue in the `litmuschaos/litmus` repository.\n2. Ensure your sponsor is `@mentioned` in the issue.\n3. [Open an issue](https://github.com/litmuschaos/litmus/issues/new?template=reviewer.md&title=REQUEST%3A%20Promote%20your-GH-handle%20to%20%3Creviewer%3E) and complete all items on the checklist ([Use this template](https://github.com/litmuschaos/litmus/blob/master/.github/ISSUE_TEMPLATE/reviewer.md)).\n4. Include examples of PRs you have authored or reviewed.\n5. Your sponsor must confirm their support by commenting with +1 on the issue.\n6. Once the sponsor has responded, the request will be reviewed by project leads. Any missing information will be requested.\n\n---\n\n### Maintainer\n\nMaintainers are experienced contributors who drive the technical direction of the project and ensure its health and sustainability.\n\n#### Requirements:\n\n- Sustained contributions to the project over time (code, design, or community leadership).\n- Demonstrated technical expertise and sound judgment in project discussions.\n- Nominated and approved by existing maintainers.\n\n#### Responsibilities:\n\n- Review and merge PRs to maintain project quality.\n- Set the technical direction and roadmap for the project.\n- Mentor and guide members.\n- Participate in governance decisions and resolve conflicts.\n- Ensure transparency by documenting decisions publicly.\n\n#### Nomination Process:\n\nTo become a maintainer:\n\n1. Open an issue in the `litmuschaos/litmus` repository.\n2. Ensure your sponsors are `@mentioned` in the issue.\n3. [Open an issue](https://github.com/litmuschaos/litmus/issues/new?template=maintainer.md&title=REQUEST%3A%20Promote%20your-GH-handle%20to%20%3Cmaintainer%3E) and complete all items on the checklist ([Use this template](https://github.com/litmuschaos/litmus/blob/master/.github/ISSUE_TEMPLATE/maintainer.md)).\n4. Include a summary of your contributions and their impact on the project.\n5. Your sponsors must confirm their support by commenting with +1 on the issue.\n6. Once the sponsors have responded, the request will be reviewed by project leads. Any missing information will be requested.\n\n## Adding maintainers\n\nMaintainers are first and foremost contributors that have shown they are\ncommitted to the long term success of a project. Contributors wanting to become\nmaintainers are expected to be deeply involved in contributing code, pull\nrequest review, and triage of issues in the project for more than three months.\n\nJust contributing does not make you a maintainer, it is about building trust\nwith the current maintainers of the project and being a person that they can\ndepend on and trust to make decisions in the best interest of the project.\n\nPeriodically, the existing maintainers curate a list of contributors that have\nshown regular activity on the project over the prior months. From this list,\ncandidates are selected and proposed as maintainers.\n\nAfter a candidate has been proposed as maintainer via a Pull Request by any of the existing maintainers, the other maintainers are given five business days to discuss the candidate, raise objections and cast their vote. The Votes take place via the pull request comment. Candidates must be approved by at least 66% of the current maintainers by adding their vote on the PR. The reviewer role has the same process but only requires 33% of current maintainers. Only maintainers of the repository that the candidate is proposed for are allowed to vote. The candidate becomes a maintainer once the pull request is merged.\n\n## Membership Management\n\n- ### Inactive Members\n\n  Members with no significant contributions for 12 months may be removed from the GitHub organization. Reinstatement requires going through the membership process again.\n\n  - ## Removal of inactive maintainers\n\n  Similar to the procedure for adding new maintainers, existing maintainers can\n  be removed from the list if they do not show significant activity on the\n  project. Periodically, the maintainers review the list of maintainers and their\n  activity over the last three months.\n\n  If a maintainer has shown insufficient activity over this period, a neutral\n  person will contact the maintainer to ask if they want to continue being\n  a maintainer. If the maintainer decides to step down as a maintainer, they\n  open a pull request to be removed from the MAINTAINERS file.\n\n  - ## Emeritus maintainers\n\n  For committers who are stepping down or being removed due to inactivity,\n  the project would like to memorialize their contributions to the project by\n  recognizing them as Emeritus maintainers in the EMERITUS.md file. The EMERITUS.md\n  file will include a brief paragraph summarizing their contribution to the\n  containerd project and recognize them as permanent Emeritus members of the\n  community. While Emeritus maintainers are not active in the project, their\n  expertise is always valued and their LGTM may count towards the required LGTM\n  count to merge a code change into the project.\n\n  If in the future an Emeritus maintainer has the desire or ability to return to\n  contributing to the project, Emeritus maintainers can submit a pull request\n  reversing their removal from the MAINTAINERS file and approval only requires\n  2 LGTMs from current committers to return to full committer status in the\n  project.\n\n  - ## Stepping down policy\n\n  Life priorities, interests, and passions can change. If you're a maintainer but\n  feel you must remove yourself from the list, inform other maintainers that you\n  intend to step down, and if possible, help find someone to pick up your work.\n  At the very least, ensure your work can be continued where you left off.\n\n  After you've informed other maintainers, create a pull request to remove\n  yourself from the MAINTAINERS file.\n\n- ### Changes in Membership Roles\n\n  Role changes are discussed by project leads and approvers and finalized through consensus.\n"
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "fossa.md",
          "type": "blob",
          "size": 1.404296875,
          "content": "|Litmus Component | Fossa Report |\n|-----------------|--------------|\n|[Litmus](https://github.com/litmuschaos/litmus) | No issues reported |\n|[Chaos-Operator](https://github.com/litmuschaos/chaos-operator) | https://app.fossa.com/attribution/163990cf-620c-4d6b-8fa9-f0b67deebe52 | \n|[Chaos-Runner](https://github.com/litmuschaos/chart-runner) | https://app.fossa.com/attribution/2bbe14e1-8d7f-4c00-8bd9-3a70fd67539e | \n|[Chaos-Exporter](https://github.com/litmuschaos/chart-exporter) | https://app.fossa.com/attribution/2bbe14e1-8d7f-4c00-8bd9-3a70fd67539e | \n|[elves](https://github.com/litmuschaos/elves) | https://app.fossa.com/attribution/220e18ad-2e3b-4671-90f6-2b6cc8f8601e | \n|[Litmus-e2e](https://github.com/litmuschaos/litmus-e2e) |  https://app.fossa.com/attribution/5f70aa0e-1379-404e-b069-0e50636f1cd6 | \n|[Chaos-Charts](https://github.com/litmuschaos/chaos-charts) | No issues reported | \n|[ChartHub](https://github.com/litmuschaos/charthub.litmuschaos.io) | https://app.fossa.com/attribution/271d72f9-18b2-4c65-b32e-e6c7f9969d8e | \n|[Litmus-Docs](https://github.com/litmuschaos/litmus-docs) | No issues reported | \n|[Community](https://github.com/litmuschaos/community) | No issues reported |\n|[Test-Tools](https://github.com/litmuschaos/test-tools) | https://app.fossa.com/attribution/5b329bbb-831d-48ec-9ff3-b6f75dab1d4e |\n|[Website-LitmusChaos](https://github.com/litmuschaos/website-litmuschaos) | No issues reported |\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "okteto-pipeline.yaml",
          "type": "blob",
          "size": 0.34375,
          "content": "icon: https://hub.litmuschaos.io/icons/litmus-header.svg\ndeploy:\n  - kubectl apply -f litmus-portal/platforms/okteto/hello-world-AUT.yml\n  - envsubst < litmus-portal/platforms/okteto/litmus-portal-dev-manifest-template.yml > litmus-portal-dev-manifest.yml\n  - kubectl apply -f litmus-portal-dev-manifest.yml\ndevs:\n  - litmus-portal/frontend/okteto.yml\n"
        },
        {
          "name": "proposals",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}