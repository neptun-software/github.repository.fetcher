{
  "metadata": {
    "timestamp": 1736566803724,
    "page": 368,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rancher/k3os",
      "stars": 3501,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1455078125,
          "content": "./.idea\n./.dapper\n./.cache\n./.trash-cache\n./dist/\npackage/packer/vagrant/.vagrant/\npackage/packer/vagrant/packer_cache/\npackage/packer/vagrant/*.box\n"
        },
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 3.62109375,
          "content": "---\nkind: pipeline\nname: amd64\n\nplatform:\n  os: linux\n  arch: amd64\n\nsteps:\n- name: build\n  image: rancher/dapper:v0.5.0\n  commands:\n  - dapper ci\n  volumes:\n  - name: docker\n    path: /var/run/docker.sock\n\n- name: github_binary_release\n  image: ibuildthecloud/github-release:v0.0.1\n  settings:\n    api_key:\n      from_secret: github_token\n    prerelease: true\n    checksum:\n    - sha256\n    checksum_file: CHECKSUMsum-amd64.txt\n    checksum_flatten: true\n    files:\n    - \"dist/artifacts/*\"\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\n- name: docker-publish\n  image: plugins/docker\n  settings:\n    dockerfile: package/Dockerfile\n    password:\n      from_secret: docker_password\n    repo: \"rancher/k3os\"\n    tag: \"${DRONE_TAG}-amd64\"\n    username:\n      from_secret: docker_username\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\nvolumes:\n- name: docker\n  host:\n    path: /var/run/docker.sock\n\n---\nkind: pipeline\nname: arm64\n\nplatform:\n  os: linux\n  arch: arm64\n\nsteps:\n- name: build\n  image: rancher/dapper:v0.5.0\n  commands:\n  - dapper ci\n  volumes:\n  - name: docker\n    path: /var/run/docker.sock\n\n- name: github_binary_release\n  image: ibuildthecloud/github-release:v0.0.1\n  settings:\n    api_key:\n      from_secret: github_token\n    prerelease: true\n    checksum:\n    - sha256\n    checksum_file: CHECKSUMsum-arm64.txt\n    checksum_flatten: true\n    files:\n    - \"dist/artifacts/*\"\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\n- name: docker-publish\n  image: plugins/docker\n  settings:\n    dockerfile: package/Dockerfile\n    password:\n      from_secret: docker_password\n    repo: \"rancher/k3os\"\n    tag: \"${DRONE_TAG}-arm64\"\n    username:\n      from_secret: docker_username\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\nvolumes:\n- name: docker\n  host:\n    path: /var/run/docker.sock\n\n---\nkind: pipeline\nname: arm\n\nplatform:\n  os: linux\n  arch: arm\n\nsteps:\n- name: build\n  image: rancher/dapper:v0.5.0\n  commands:\n  - dapper ci\n  volumes:\n  - name: docker\n    path: /var/run/docker.sock\n\n- name: github_binary_release\n  image: ibuildthecloud/github-release:v0.0.1\n  settings:\n    api_key:\n      from_secret: github_token\n    prerelease: true\n    checksum:\n    - sha256\n    checksum_file: CHECKSUMsum-arm.txt\n    checksum_flatten: true\n    files:\n    - \"dist/artifacts/*\"\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\n- name: docker-publish\n  image: plugins/docker\n  settings:\n    dockerfile: package/Dockerfile\n    password:\n      from_secret: docker_password\n    repo: \"rancher/k3os\"\n    tag: \"${DRONE_TAG}-arm\"\n    username:\n      from_secret: docker_username\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\nvolumes:\n- name: docker\n  host:\n    path: /var/run/docker.sock\n\n---\nkind: pipeline\nname: manifest\n\nplatform:\n  os: linux\n  arch: amd64\n\nsteps:\n- name: manifest\n  image: plugins/manifest:1.0.2\n  settings:\n    username:\n      from_secret: docker_username\n    password:\n      from_secret: docker_password\n    platforms:\n      - linux/amd64\n      - linux/arm64\n      - linux/arm\n    target: \"rancher/k3os:${DRONE_TAG}\"\n    template: \"rancher/k3os:${DRONE_TAG}-ARCH\"\n  when:\n    instance:\n    - drone-publish.rancher.io\n    ref:\n    - refs/head/master\n    - refs/tags/*\n    event:\n    - tag\n\ndepends_on:\n- amd64\n- arm64\n- arm\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.138671875,
          "content": "/.idea\n/.dapper\n/.cache\n/.trash-cache\n/bin/\n/dist/\n/build/\n*.swp\n/.bash_history\n/.docker/\n\n# Packer and vagrant\n.vagrant/\npacker_cache/\n*.box\n"
        },
        {
          "name": ".golangci.json",
          "type": "blob",
          "size": 0.2177734375,
          "content": "{\n\t\"linters\": {\n\t\t\"disable-all\": true,\n\t\t\"enable\": [\n\t\t\t\"govet\",\n\t\t\t\"golint\",\n\t\t\t\"goimports\",\n\t\t\t\"misspell\",\n\t\t\t\"ineffassign\",\n\t\t\t\"gofmt\"\n\t\t]\n\t},\n\t\"run\": {\n\t\t\"skip-files\": [\n\t\t\t\"/zz_generated_\"\n\t\t],\n\t\t\"deadline\": \"5m\"\n\t}\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.072265625,
          "content": "This project observes the [CNCF Community Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md), reproduced below for emphasis.\n\n### Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering\nan open and welcoming community, we pledge to respect all people who contribute\nthrough reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age,\nreligion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing others' private information, such as physical or electronic addresses,\n without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are not\naligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers\ncommit themselves to fairly and consistently applying these principles to every aspect\nof managing this project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a Rancher administrator  on [Slack](https://slack.rancher.io), or <conduct@rancher.com>.\n\nThis Code of Conduct is adapted from the Contributor Covenant\n(http://contributor-covenant.org), version 1.2.0, available at\nhttp://contributor-covenant.org/version/1/2/0/\n\n"
        },
        {
          "name": "Dockerfile.dapper",
          "type": "blob",
          "size": 0.6494140625,
          "content": "FROM golang:1.16-alpine3.14\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN apk -U add bash git gcc musl-dev docker vim less file curl wget ca-certificates\nRUN if [ \"$(go env GOARCH)\" = \"arm64\" ]; then \\\n        curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.38.0; \\\n    fi\n\nENV DAPPER_RUN_ARGS --privileged -v /tmp:/tmp -v k3os-pkg:/go/pkg -v k3os-cache:/root/.cache/go-build\nENV DAPPER_ENV REPO TAG DRONE_TAG\nENV DAPPER_SOURCE /go/src/github.com/rancher/k3os/\nENV DAPPER_OUTPUT ./build ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3291015625,
          "content": "TARGETS := $(shell ls scripts)\n\n.dapper:\n\t@echo Downloading dapper\n\t@curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s`-`uname -m` > .dapper.tmp\n\t@@chmod +x .dapper.tmp\n\t@./.dapper.tmp -v\n\t@mv .dapper.tmp .dapper\n\n$(TARGETS): .dapper\n\t@rm -rf ./dist ./build\n\t./.dapper $@\n\n.DEFAULT_GOAL := default\n\n.PHONY: $(TARGETS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.6484375,
          "content": "\n![GitHub go.mod Go version](https://img.shields.io/github/go-mod/go-version/rancher/k3os)\n![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/rancher/k3os?include_prereleases&label=release&sort=semver)\n\n\n# Project Status\n\n**k3os is no longer maintained and has been superceeded by [Elemental] (https://elemental.docs.rancher.com/).\nPlease do not submit PRs or issues to this repo.**\n\n# k3OS\n\nk3OS is a Linux distribution designed to remove as much OS maintenance\nas possible in a Kubernetes cluster. It is specifically designed to only\nhave what is needed to run [k3s](https://github.com/rancher/k3s). Additionally\nthe OS is designed to be managed by `kubectl` once a cluster is bootstrapped.\nNodes only need to join a cluster and then all aspects of the OS can be managed\nfrom Kubernetes. Both k3OS and k3s upgrades are handled by the k3OS operator.\n\n1. [Quick Start](#quick-start)\n1. [Design](#design)\n1. [Installation](#installation)\n1. [Configuration](#configuration)\n1. [Upgrade/Maintenance](#upgrade-and-maintenance)\n1. [Building](#building)\n1. [Configuration Reference](#configuration-reference)\n\n## Quick Start\n\nDownload the ISO from the latest [release](https://github.com/rancher/k3os/releases) and run it\nin VMware, VirtualBox, KVM, or bhyve. The server will automatically start a single node Kubernetes cluster.\nLog in with the user `rancher` and run `kubectl`. This is a \"live install\" running from the ISO media\nand changes will not persist after reboot.\n\nTo copy k3OS to local disk, after logging in as `rancher` run `sudo k3os install`. Then remove the ISO\nfrom the virtual machine and reboot.\n\nLive install (boot from ISO) requires at least 2GB of RAM. Local install requires 1GB RAM.\n\n## Design\n\nCore design goals of k3OS are\n\n1. Minimal OS for running Kubernetes by way of k3s\n2. Ability to upgrade and configure using `kubectl`\n3. Versatile installation to allow easy creation of OS images.\n\n### File System Structure\n\nCritical to the design of k3OS is how that file system is structured. A booted system will\nlook as follows\n\n```\n/etc - ephemeral\n/usr - read-only (except /usr/local is writable and persistent)\n/k3os - system files\n/home - persistent\n/var - persistent\n/opt - persistent\n/usr/local - persistent\n```\n\n#### /etc\n\nAll configuration in the system is intended to be ephemeral. If you change anything in `/etc` it\nwill revert on next reboot. If you wish to persist changes to the configuration they must be done\nin the k3OS `config.yaml` which will be applied on each boot.\n\n#### /usr\n\nThe entire user space is stored in `/usr` and as read-only. The only way to change `/usr` is to\nchange versions of k3OS. The directory `/usr/local` is a symlink to `/var/local` and therefore\nwritable.\n\n#### /k3os\n\nThe k3OS directory contains the core operating system files references on boot to construct the\nfile system. It contains squashfs images and binaries for k3OS, k3s, and the Linux kernel. On\nboot the appropriate version for all three will be chosen and configured.\n\n#### /var, /usr/local, /home, /opt\n\nPersistent changes should be kept in `/var`, `/usr/local`, `/home`, or `/opt`.\n\n### Upstream Distros\n\nMost of the user-space binaries comes from Alpine and are repackaged for k3OS. Currently the\nkernel source is coming from Ubuntu 20.04 LTS. Some code and a lot of inspiration came from\n[LinuxKit](https://github.com/linuxkit/linuxkit)\n\n## Installation\n\n### Interactive Installation\n\nInteractive installation is done from booting from the ISO. The installation is done by running\n`k3os install`. The `k3os install` sub-command is only available on systems booted live.\nAn installation to disk will not have `k3os install`. Follow the prompts to install k3OS to disk.\n\n***The installation will format an entire disk. If you have a single hard disk attached to the system\nit will not ask which disk but just pick the first and only one.***\n\n### Automated Installation\n\nInstallation can be automated by using kernel cmdline parameters. There are a lot of creative\nsolutions to booting a machine with cmdline args. You can remaster the k3OS ISO, PXE boot,\nuse qemu/kvm, or automate input with packer. The kernel and initrd are available in the k3OS release\nartifacts, along with the ISO.\n\nThe cmdline value `k3os.mode=install` or `k3os.fallback_mode=install` is required to enable automated installations.\nBelow is a reference of all cmdline args used to automate installation\n\n| cmdline                 | Default | Example                                           | Description                     |\n|:------------------------|---------|---------------------------------------------------|---------------------------------|\n| k3os.mode               |         | install                                           | Boot k3OS to the installer, not an interactive session |\n| k3os.fallback_mode      |         | install                                           | If a valid K3OS_STATE partition is not found to boot from, run the installation |\n| k3os.install.silent     | false   | true                                              | Ensure no questions will be asked |\n| k3os.install.force_efi  | false   | true                                              | Force EFI installation even when EFI is not detected |\n| k3os.install.device     |         | /dev/vda                                          | Device to partition and format (/dev/sda, /dev/vda) |\n| k3os.install.config_url |         | [https://gist.github.com/.../dweomer.yaml](https://gist.github.com/dweomer/8750d56fb21a3fbc8d888609d6e74296#file-dweomer-yaml) | The URL of the config to be installed at `/k3os/system/config.yaml` |\n| k3os.install.iso_url    |         | https://github.com/rancher/k3os/../k3os-amd64.iso | ISO to download and install from if booting from kernel/vmlinuz and not ISO. |\n| k3os.install.no_format  |         | true                                              | Do not partition and format, assume layout exists already |\n| k3os.install.tty        | auto    | ttyS0                                             | The tty device used for console |\n| k3os.install.debug      | false   | true                                              | Run installation with more logging and configure debug for installed system |\n| k3os.install.power_off  | false   | true                                              | Shutdown the machine after install instead of rebooting |\n\n#### Custom partition layout\n\nBy default k3OS expects one partition to exist labeled `K3OS_STATE`. `K3OS_STATE` is expected to be an ext4 formatted filesystem with at least 2GB of disk space. The installer will create this\npartitions and file system automatically, or you can create them manually if you have a need for an advanced file system layout.\n\n### Bootstrapped Installation\n\nYou can install k3OS to a block device from any modern Linux distribution. Just download and run [install.sh](https://raw.githubusercontent.com/rancher/k3os/master/install.sh).\nThis script will run the same installation as the ISO but is a bit more raw and will not prompt for configuration.\n\n```\nUsage: ./install.sh [--force-efi] [--debug] [--tty TTY] [--poweroff] [--takeover] [--no-format] [--config https://.../config.yaml] DEVICE ISO_URL\n\nExample: ./install.sh /dev/vda https://github.com/rancher/k3os/releases/download/v0.10.0/k3os.iso\n\nDEVICE must be the disk that will be partitioned (/dev/vda). If you are using --no-format it should be the device of the K3OS_STATE partition (/dev/vda2)\n\nThe parameters names refer to the same names used in the cmdline, refer to README.md for\nmore info.\n```\n\n### Remastering ISO\n\nTo remaster the ISO all you need to do is copy `/k3os` and `/boot` from the ISO to a new folder. Then modify `/boot/grub/grub.cfg` to add whatever kernel cmdline args for auto-installation.\nTo build a new ISO just use the utility `grub-mkrescue` as follows:\n\n```bash\n# Ubuntu: apt install grub-efi grub-pc-bin mtools xorriso\n# CentOS: dnf install grub2-efi grub2-pc mtools xorriso\n# Alpine: apk add grub-bios grub-efi mtools xorriso\nmount -o loop k3os.iso /mnt\nmkdir -p iso/boot/grub\ncp -rf /mnt/k3os iso/\ncp /mnt/boot/grub/grub.cfg iso/boot/grub/\n\n# Edit iso/boot/grub/grub.cfg\n\ngrub-mkrescue -o k3os-new.iso iso/ -- -volid K3OS\n```\n\nGRUB2 CAVEAT: Some non-Alpine installations of grub2 will create `${ISO}/boot/grub2` instead of `${ISO}/boot/grub`\nwhich will generally lead to broken installation media. Be mindful of this and modify the above commands\n(that work with this path) accordingly. *Systems that exhibit this behavior typically have `grub2-mkrescue`\non the path instead of `grub-mkrescue`.*\n\n### Takeover Installation\n\nA special mode of installation is designed to install to a current running Linux system. This only works on ARM64 and x86_64. Download [install.sh](https://raw.githubusercontent.com/rancher/k3os/master/install.sh)\nand run with the `--takeover` flag. This will install k3OS to the current root and override the grub.cfg. After you reboot the system k3OS will then delete all files on the root partition that are not k3OS and then shutdown. This mode is particularly handy when creating cloud images. This way you can use an existing base image like Ubuntu and install k3OS over the top, snapshot, and create a new image.\n\nIn order for this to work a couple of assumptions are made. First the root (/) is assumed to be an ext4 partition. Also it is assumed that grub2 is installed and looking for the configuration at `/boot/grub/grub.cfg`. When running `--takeover` ensure that you also set `--no-format` and DEVICE must be set to the partition of `/`. Refer to the AWS packer template to see this mode in action. Below is any example of how to run a takeover installation.\n\n```bash\n./install.sh --takeover --debug --tty ttyS0 --config /tmp/config.yaml --no-format /dev/vda1 https://github.com/rancher/k3os/releases/download/v0.10.0/k3os.iso\n```\n\n### ARM Overlay Installation\n\nIf you have a custom ARMv7 or ARM64 device you can easily use an existing bootable ARM image to create a k3OS setup.\nAll you must do is boot the ARM system and then extract `k3os-rootfs-arm.tar.gz` to the root (stripping one path,\nlook at the example below) and then place your cloud-config at `/k3os/system/config.yaml`. For example:\n\n```bash\ncurl -sfL https://github.com/rancher/k3os/releases/download/v0.10.0/k3os-rootfs-arm.tar.gz | tar zxvf - --strip-components=1 -C /\ncp myconfig.yaml /k3os/system/config.yaml\nsync\nreboot -f\n```\n\nThis method places k3OS on disk and also overwrites `/sbin/init`.\nOn next reboot your ARM bootloader and kernel should be loaded,\nbut then when user space is to be initialized k3OS should take over.\nOne important consideration at the moment is that k3OS assumes the root device is not read only.\nThis typically means you need to remove `ro` from the kernel cmdline.\nThis should be fixed in a future release.\n\n## Configuration\n\nAll configuration is done through a single cloud-init style config file that is\neither packaged in the image, downloaded though cloud-init or managed by\nKubernetes. The configuration file is found at\n\n```\n/k3os/system/config.yaml\n/var/lib/rancher/k3os/config.yaml\n/var/lib/rancher/k3os/config.d/*\n```\n\nThe `/k3os/system/config.yaml` file is reserved for the system installation and should not be\nmodified on a running system. This file is usually populated by during the image build or\ninstallation process and contains important bootstrap information (such as networking or cloud-init\ndata sources).\n\nThe `/var/lib/rancher/k3os/config.yaml` or `config.d/*` files are intended to be used at runtime.\nThese files can be manipulated manually, through scripting, or managed with the Kubernetes operator.\n\n### Sample `config.yaml`\n\nA full example of the k3OS configuration file is as below.\n\n```yaml\nssh_authorized_keys:\n- ssh-rsa AAAAB3NzaC1yc2EAAAADAQAB...\n- github:ibuildthecloud\nwrite_files:\n- encoding: \"\"\n  content: |-\n    #!/bin/bash\n    echo hello, local service start\n  owner: root\n  path: /etc/local.d/example.start\n  permissions: '0755'\nhostname: myhost\ninit_cmd:\n- \"echo hello, init command\"\nboot_cmd:\n- \"echo hello, boot command\"\nrun_cmd:\n- \"echo hello, run command\"\n\nk3os:\n  data_sources:\n  - aws\n  - cdrom\n  modules:\n  - kvm\n  - nvme\n  sysctl:\n    kernel.printk: \"4 4 1 7\"\n    kernel.kptr_restrict: \"1\"\n  dns_nameservers:\n  - 8.8.8.8\n  - 1.1.1.1\n  ntp_servers:\n  - 0.us.pool.ntp.org\n  - 1.us.pool.ntp.org\n  wifi:\n  - name: home\n    passphrase: mypassword\n  - name: nothome\n    passphrase: somethingelse\n  password: rancher\n  server_url: https://someserver:6443\n  token: TOKEN_VALUE\n  labels:\n    region: us-west-1\n    somekey: somevalue\n  k3s_args:\n  - server\n  - \"--cluster-init\"\n  environment:\n    http_proxy: http://myserver\n    https_proxy: http://myserver\n  taints:\n  - key1=value1:NoSchedule\n  - key1=value1:NoExecute\n```\n\nRefer to the [configuration reference](#configuration-reference) for full details of each\nconfiguration key.\n\n### Kubernetes\n\nSince k3OS is built on k3s all Kubernetes configuration is done by configuring\nk3s. This is primarily done through `environment` and `k3s_args` keys in `config.yaml`.\nThe `write_files` key can be used to populate the `/var/lib/rancher/k3s/server/manifests`\nfolder with apps you'd like to deploy on boot.\n\nRefer to [k3s docs](https://github.com/rancher/k3s/blob/master/README.md) for more\ninformation on how to configure Kubernetes.\n\n### Kernel cmdline\n\nAll configuration can be passed as kernel cmdline parameters too. The keys are dot\nseparated. For example `k3os.token=TOKEN`. If the key is a slice, multiple values are set by\nrepeating the key, for example `k3os.dns_nameserver=1.1.1.1 k3os.dns_nameserver=8.8.8.8`. You\ncan use the plural or singular form of the name, just ensure you consistently use the same form. For\nmap values the form `key[key]=value` form is used, for example `k3os.sysctl[kernel.printk]=\"4 4 1 7\"`.\nIf the value has spaces in it ensure that the value is quoted. Boolean keys expect a value of\n`true` or `false` or no value at all means `true`. For example `k3os.install.efi` is the same\nas `k3os.install.efi=true`.\n\n### Phases\n\nConfiguration is applied in three distinct phases: `initrd`, `boot`, `runtime`. `initrd`\nis run during the initrd phase before the root disk has been mounted. `boot` is run after\nthe root disk is mounted and the file system is setup, but before any services have started.\nThere is no networking available yet at this point. The final stage `runtime` is executed after\nnetworking has come online. If you are using a configuration from a cloud provider (like AWS\nuserdata) it will only be run in the `runtime` phase. Below is a table of which config keys\nare supported in each phase.\n\n| Key                  | initrd | boot | runtime |\n|----------------------|--------|------|---------|\n| ssh_authorized_keys  |        |  x   |    x    |\n| write_files          |    x   |  x   |    x    |\n| hostname             |    x   |  x   |    x    |\n| run_cmd              |        |      |    x    |\n| boot_cmd             |        |  x   |         |\n| init_cmd             |    x   |      |         |\n| k3os.data_sources    |        |      |    x    |\n| k3os.modules         |    x   |  x   |    x    |\n| k3os.sysctls         |    x   |  x   |    x    |\n| k3os.ntp_servers     |        |  x   |    x    |\n| k3os.dns_nameservers |        |  x   |    x    |\n| k3os.wifi            |        |  x   |    x    |\n| k3os.password        |    x   |  x   |    x    |\n| k3os.server_url      |        |  x   |    x    |\n| k3os.token           |        |  x   |    x    |\n| k3os.labels          |        |  x   |    x    |\n| k3os.k3s_args        |        |  x   |    x    |\n| k3os.environment     |    x   |  x   |    x    |\n| k3os.taints          |        |  x   |    x    |\n\n### Networking\n\nNetworking is powered by `connman`. To configure networking a couple of helper keys are\navailable: `k3os.dns_nameserver`, `k3os.ntp_servers`, `k3os.wifi`. Refer to the\n[reference](#configuration-reference) for a full explanation of those keys. If you wish\nto configure a HTTP proxy set the `http_proxy`, and `https_proxy` fields in `k3os.environment`.\nAll other networking configuration should be done by configuring connman directly by using the\n`write_files` key to create connman [service](https://manpages.debian.org/testing/connman/connman-service.config.5.en.html)\nfiles.\n\n## Upgrade and Maintenance\n\nUpgrading and reconfiguring k3OS is all handled through the Kubernetes operator. The operator\nis still in development. More details to follow. The basic design is that one can set the\ndesired k3s and k3OS versions, plus their configuration and the operator will roll that out to\nthe cluster.\n\n### Automatic Upgrades\n\nIntegration with [rancher/system-upgrade-controller](https://github.com/rancher/system-upgrade-controller) has been implemented as of [v0.9.0](https://github.com/rancher/k3os/releases/tag/v0.9.0).\nTo enable a k3OS node to automatically upgrade from the [latest GitHub release](https://github.com/rancher/k3os/releases/latest) you will need to make sure it has the label\n`k3os.io/upgrade` with value `latest` (for k3OS versions prior to v0.11.x please use label `plan.upgrade.cattle.io/k3os-latest`). The upgrade controller will then spawn an upgrade job\nthat will drain most pods, upgrade the k3OS content under `/k3os/system`, and then reboot. The system should come back up running the latest\nkernel and k3s version bundled with k3OS and ready to schedule pods.\n\n#### Pre v0.9.0\n\nIf your k3OS installation is running a version prior to the v0.9.0 release or one of its release candidates you can setup\nthe system upgrade controller to upgrade your k3OS by following these steps:\n\n```shell script\n# apply the system-upgrade-controller manifest (once per cluster)\nkubectl apply -f https://raw.githubusercontent.com/rancher/k3os/v0.10.0/overlay/share/rancher/k3s/server/manifests/system-upgrade-controller.yaml\n# after the system-upgrade-controller pod is Ready, apply the plan manifest (once per cluster)\nkubectl apply -f https://raw.githubusercontent.com/rancher/k3os/v0.10.0/overlay/share/rancher/k3s/server/manifests/system-upgrade-plans/k3os-latest.yaml\n# apply the `plan.upgrade.cattle.io/k3os-latest` label as described above (for every k3OS node), e.g.\nkubectl label nodes -l k3os.io/mode plan.upgrade.cattle.io/k3os-latest=enabled # this should work on any cluster with k3OS installations at v0.7.0 or greater\n```\n\n### Manual Upgrades\n\nFor single-node or development use cases, where the operator is not being used, you can upgrade the rootfs and kernel with the following commands. If you do not specify K3OS_VERSION, it will default to the latest release.\n\nWhen using an overlay install such as on Raspberry Pi (see [ARM Overlay Installation](#arm-overlay-installation)) the original distro kernel (such as Raspbian) will continue to be used. On these systems the k3os-upgrade-kernel script will exit with a warning and perform no action.\n\n```bash\nexport K3OS_VERSION=v0.10.0\n/usr/share/rancher/k3os/scripts/k3os-upgrade-rootfs\n/usr/share/rancher/k3os/scripts/k3os-upgrade-kernel\n```\n\nYou should always remember to backup your data first, and reboot after upgrading.\n\n#### Manual Upgrade Scripts Have Been DEPRECATED\n\nThese scripts have been deprecated as of v0.9.0 are still on the system at `/usr/share/rancher/k3os/scripts`.\n\n## Building\n\nTo build k3OS you just need Docker and then run `make`. All artifacts will be put in `./dist/artifacts`.\nIf you are running on Linux you can run `./scripts/run` to run a VM of k3OS in the terminal. To exit\nthe instance type `CTRL+a c` to get the qemu console and then `q` for quit.\n\nThe source for the kernel is in `https://github.com/rancher/k3os-kernel` and similarly you\njust need to have Docker and run `make` to compile the kernel.\n\n## Configuration Reference\n\nBelow is a reference of all keys available in the `config.yaml`\n\n### `ssh_authorized_keys`\n\nA list of SSH authorized keys that should be added to the `rancher` user. k3OS primarily\nhas one user, `rancher`. The `root` account is always disabled, has no password, and is never\nassigned a ssh key. SSH keys can be obtained from GitHub user accounts by using the format\n`github:${USERNAME}`. This is done by downloading the keys from `https://github.com/${USERNAME}.keys`.\n\nExample\n\n```yaml\nssh_authorized_keys:\n- \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2TBZGjE+J8ag11dzkFT58J3XPONrDVmalCNrKxsfADfyy0eqdZrG8hcAxAR/5zuj90Gin2uBR4Sw6Cn4VHsPZcFpXyQCjK1QDADj+WcuhpXOIOY3AB0LZBly9NI0ll+8lo3QtEaoyRLtrMBhQ6Mooy2M3MTG4JNwU9o3yInuqZWf9PvtW6KxMl+ygg1xZkljhemGZ9k0wSrjqif+8usNbzVlCOVQmZwZA+BZxbdcLNwkg7zWJSXzDIXyqM6iWPGXQDEbWLq3+HR1qKucTCSxjbqoe0FD5xcW7NHIME5XKX84yH92n6yn+rxSsyUfhJWYqJd+i0fKf5UbN6qLrtd/D\"\n- \"github:ibuildthecloud\"\n```\n\n### `write_files`\n\nA list of files to write to disk on boot. These files can be either plain text, gziped, base64 encoded,\nor base64+gzip encoded.\n\nExample\n\n```yaml\nwrite_files:\n- encoding: b64\n  content: CiMgVGhpcyBmaWxlIGNvbnRyb2xzIHRoZSBzdGF0ZSBvZiBTRUxpbnV4...\n  owner: root:root\n  path: /etc/connman/main.conf\n  permissions: '0644'\n- content: |\n    # My new /etc/sysconfig/samba file\n\n    SMDBOPTIONS=\"-D\"\n  path: /etc/sysconfig/samba\n- content: !!binary |\n    f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAAwARAAAAAAABAAAAAAAAAAJAVAAAAAA\n    AEAAHgAdAAYAAAAFAAAAQAAAAAAAAABAAEAAAAAAAEAAQAAAAAAAwAEAAAAAAA\n    AAAAAAAAAwAAAAQAAAAAAgAAAAAAAAACQAAAAAAAAAJAAAAAAAAcAAAAAAAAAB\n    ...\n  path: /bin/arch\n  permissions: '0555'\n- content: |\n    15 * * * * root ship_logs\n  path: /etc/crontab\n```\n\n### `hostname`\n\nSet the system hostname. This value will be overwritten by DHCP if DHCP supplies a hostname for\nthe system.\n\nExample\n\n```yaml\nhostname: myhostname\n```\n\n### `init_cmd`, `boot_cmd`, `run_cmd`\n\nAll three keys are used to run arbitrary commands on startup in the respective phases of `initrd`,\n`boot` and `runtime`. Commands are ran after `write_files` so it is possible to write a script to\ndisk and run it from these commands. That often makes it easier to do longer form setup.\n\n### `k3os.data_sources`\n\nThese are the data sources used for download config from cloud provider. The valid options are:\n\n    aws\n    cdrom\n    digitalocean\n    gcp\n    hetzner\n    openstack\n    packet\n    scaleway\n    vultr\n\nMore than one can be supported at a time, for example:\n\n```yaml\nk3os:\n  data_sources:\n  - openstack\n  - cdrom\n```\n\nWhen multiple data sources are specified they are probed in order and the first to provide `/run/config/userdata` will halt further processing.\n\n### `k3os.modules`\n\nA list of kernel modules to be loaded on start.\n\nExample\n\n```yaml\nk3os:\n  modules:\n  - kvm\n  - nvme\n```\n\n### `k3os.sysctls`\n\nKernel sysctl to setup on start. These are the same configuration you'd typically find in `/etc/sysctl.conf`.\nMust be specified as string values.\n\n```yaml\nk3os:\n  sysctl:\n    kernel.printk: 4 4 1 7      # the YAML parser will read as a string\n    kernel.kptr_restrict: \"1\"   # force the YAML parser to read as a string\n```\n\n### `k3os.ntp_servers`\n\n**Fallback** ntp servers to use if NTP is not configured elsewhere in connman.\n\nExample\n\n```yaml\nk3os:\n  ntp_servers:\n  - 0.us.pool.ntp.org\n  - 1.us.pool.ntp.org\n```\n\n### `k3os.dns_nameservers`\n\n**Fallback** DNS name servers to use if DNS is not configured by DHCP or in a connman service config.\n\nExample\n\n```yaml\nk3os:\n  dns_nameservers:\n  - 8.8.8.8\n  - 1.1.1.1\n```\n\n### `k3os.wifi`\n\nSimple wifi configuration. All that is accepted is `name` and `passphrase`. If you require more\ncomplex configuration then you should use `write_files` to write a connman service config.\n\nExample:\n\n```yaml\nk3os:\n  wifi:\n  - name: home\n    passphrase: mypassword\n  - name: nothome\n    passphrase: somethingelse\n```\n\n### `k3os.password`\n\nThe password for the `rancher` user. By default there is no password for the `rancher` user.\nIf you set a password at runtime it will be reset on next boot because `/etc` is ephemeral. The\nvalue of the password can be clear text or an encrypted form. The easiest way to get this encrypted\nform is to just change your password on a Linux system and copy the value of the second field from\n`/etc/shadow`. You can also encrypt a password using `openssl passwd -1`.\n\nExample\n\n```yaml\nk3os:\n  password: \"$1$tYtghCfK$QHa51MS6MVAcfUKuOzNKt0\"\n```\n\nOr clear text\n\n```yaml\nk3os:\n  password: supersecure\n```\n\n### `k3os.server_url`\n\nThe URL of the k3s server to join as an agent.\n\nExample\n\n```yaml\nk3os:\n  server_url: https://myserver:6443\n```\n\n### `k3os.token`\n\nThe cluster secret or node token. If the value matches the format of a node token it will\nautomatically be assumed to be a node token. Otherwise it is treated as a cluster secret.\n\nExample\n\n```yaml\nk3os:\n  token: myclustersecret\n```\n\nOr a node token\n\n```yaml\nk3os:\n  token: \"K1074ec55daebdf54ef48294b0ddf0ce1c3cb64ee7e3d0b9ec79fbc7baf1f7ddac6::node:77689533d0140c7019416603a05275d4\"\n```\n\n### `k3os.labels`\n\nLabels to be assigned to this node in Kubernetes on registration. After the node is first registered\nin Kubernetes the value of this setting will be ignored.\n\nExample\n\n```yaml\nk3os:\n  labels:\n    region: us-west-1\n    somekey: somevalue\n```\n\n### `k3os.k3s_args`\n\nArguments to be passed to the k3s process. The arguments should start with `server` or `agent` to be valid.\n`k3s_args` is an exec-style (aka uninterpreted) argument array which means that when specifying a flag with a value one\nmust either join the flag to the value with an `=` in the same array entry or specify the flag in an entry by itself\nimmediately followed the value in another entry, e.g.:\n\n```yaml\n# K3s flags with values joined with `=` in single entry\nk3os:\n  k3s_args:\n  - server\n  - \"--cluster-cidr=10.107.0.0/23\"\n  - \"--service-cidr=10.107.1.0/23\"\n\n# Effectively invokes k3s as:\n# exec \"k3s\" \"server\" \"--cluster-cidr=10.107.0.0/23\" \"--service-cidr=10.107.1.0/23\" \n```\n\n```yaml\n# K3s flags with values in following entry\nk3os:\n  k3s_args:\n  - server\n  - \"--cluster-cidr\"\n  - \"10.107.0.0/23\"\n  - \"--service-cidr\"\n  - \"10.107.1.0/23\"\n\n# Effectively invokes k3s as:\n# exec \"k3s\" \"server\" \"--cluster-cidr\" \"10.107.0.0/23\" \"--service-cidr\" \"10.107.1.0/23\" \n```\n\n### `k3os.environment`\n\nEnvironment variables to be set on k3s and other processes like the boot process.\nPrimary use of this field is to set the http proxy.\n\nExample\n\n```yaml\nk3os:\n  environment:\n    http_proxy: http://myserver\n    https_proxy: http://myserver\n```\n\n### `k3os.taints`\n\nTaints to set on the current node when it is first registered. After the\nnode is first registered the value of this field is ignored.\n\n```yaml\nk3os:\n  taints:\n  - \"key1=value1:NoSchedule\"\n  - \"key1=value1:NoExecute\"\n```\n\n## License\n\nCopyright (c) 2014-2020 [Rancher Labs, Inc.](http://rancher.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.740234375,
          "content": "module github.com/rancher/k3os\n\ngo 1.16\n\nrequire (\n\tgithub.com/docker/docker v1.13.1\n\tgithub.com/docker/go-units v0.4.0 // indirect\n\tgithub.com/ghodss/yaml v1.0.0\n\tgithub.com/konsorten/go-windows-terminal-sequences v1.0.2 // indirect\n\tgithub.com/mattn/go-isatty v0.0.10\n\tgithub.com/otiai10/copy v1.0.2\n\tgithub.com/paultag/go-modprobe v0.0.0-20180523225901-7ccf6a1b5271\n\tgithub.com/pkg/errors v0.8.1\n\tgithub.com/rancher/mapper v0.0.0-20190814232720-058a8b7feb99\n\tgithub.com/rancher/wrangler v0.3.1 // indirect\n\tgithub.com/sirupsen/logrus v1.4.2\n\tgithub.com/stretchr/testify v1.4.0 // indirect\n\tgithub.com/urfave/cli v1.22.2\n\tgolang.org/x/crypto v0.0.0-20191122220453-ac88ee75c92c\n\tgolang.org/x/sys v0.0.0-20191127021746-63cb32ae39b2\n\tgopkg.in/freddierice/go-losetup.v1 v1.0.0-20170407175016-fc9adea44124\n\tpault.ag/go/topsort v0.0.0-20160530003732-f98d2ad46e1a // indirect\n)\n\nreplace (\n\tk8s.io/api => github.com/rancher/kubernetes/staging/src/k8s.io/api v1.16.3-k3s.2\n\tk8s.io/apiextensions-apiserver => github.com/rancher/kubernetes/staging/src/k8s.io/apiextensions-apiserver v1.16.3-k3s.2\n\tk8s.io/apimachinery => github.com/rancher/kubernetes/staging/src/k8s.io/apimachinery v1.16.3-k3s.2\n\tk8s.io/apiserver => github.com/rancher/kubernetes/staging/src/k8s.io/apiserver v1.16.3-k3s.2\n\tk8s.io/client-go => github.com/rancher/kubernetes/staging/src/k8s.io/client-go v1.16.3-k3s.2\n\tk8s.io/code-generator => github.com/rancher/kubernetes/staging/src/k8s.io/code-generator v1.16.3-k3s.2\n\tk8s.io/component-base => github.com/rancher/kubernetes/staging/src/k8s.io/component-base v1.16.3-k3s.2\n\tk8s.io/kube-aggregator => github.com/rancher/kubernetes/staging/src/k8s.io/kube-aggregator v1.16.3-k3s.2\n\tk8s.io/metrics => github.com/rancher/kubernetes/staging/src/k8s.io/metrics v1.16.3-k3s.2\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 36.8544921875,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ngithub.com/Azure/go-ansiterm v0.0.0-20170929234023-d6e3b3328b78/go.mod h1:LmzpDX56iTiv29bbRTIsUNlaFfuhWRQBWjQdVyAevI8=\ngithub.com/Azure/go-autorest/autorest v0.9.0/go.mod h1:xyHB1BMZT0cuDHU7I0+g046+BFDTQ8rEZB0s4Yfa6bI=\ngithub.com/Azure/go-autorest/autorest/adal v0.5.0/go.mod h1:8Z9fGy2MpX0PvDjB1pEgQTmVqjGhiHBW7RJJEciWzS0=\ngithub.com/Azure/go-autorest/autorest/date v0.1.0/go.mod h1:plvfp3oPSKwf2DNjlBjWF/7vwR+cUD/ELuzDCXwHUVA=\ngithub.com/Azure/go-autorest/autorest/mocks v0.1.0/go.mod h1:OTyCOPRA2IgIlWxVYxBee2F5Gr4kF2zd2J5cFRaIDN0=\ngithub.com/Azure/go-autorest/autorest/mocks v0.2.0/go.mod h1:OTyCOPRA2IgIlWxVYxBee2F5Gr4kF2zd2J5cFRaIDN0=\ngithub.com/Azure/go-autorest/logger v0.1.0/go.mod h1:oExouG+K6PryycPJfVSxi/koC6LSNgds39diKLz7Vrc=\ngithub.com/Azure/go-autorest/tracing v0.5.0/go.mod h1:r/s2XiOKccPW3HrqB+W0TQzfbtp2fGCgRFtBroKn4Dk=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/NYTimes/gziphandler v0.0.0-20170623195520-56545f4a5d46/go.mod h1:3wb06e3pkSAbeQ52E9H9iFoQsEEwGN64994WTCIhntQ=\ngithub.com/PuerkitoBio/purell v1.0.0/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=\ngithub.com/PuerkitoBio/purell v1.1.0/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=\ngithub.com/PuerkitoBio/purell v1.1.1/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=\ngithub.com/PuerkitoBio/urlesc v0.0.0-20160726150825-5bd2802263f2/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=\ngithub.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=\ngithub.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=\ngithub.com/asaskevich/govalidator v0.0.0-20180720115003-f9ffefc3facf/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=\ngithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/blang/semver v3.5.0+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/coreos/bbolt v1.3.3/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\ngithub.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/etcd v3.3.17+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-etcd v2.0.0+incompatible/go.mod h1:Jez6KQU2B/sWsbdaef3ED8NzMklzPG4d5KIOhIy30Tk=\ngithub.com/coreos/go-oidc v2.1.0+incompatible/go.mod h1:CgnwVTmzoESiwO9qyAFEMiHoZ1nMCKZlZ9V6mm3/LKc=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20180511133405-39ca1b05acc7/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/pkg v0.0.0-20180108230652-97fdf19511ea/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=\ngithub.com/cpuguy83/go-md2man v1.0.10 h1:BSKMNlYxDvnunlTymqtgONjNnaRV1sTpcovwwjF22jk=\ngithub.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d h1:U+s90UTSYgptZMwQh2aRr3LuazLJIa+Pg3Kc1ylSYVY=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/davecgh/go-spew v0.0.0-20151105211317-5215b55f46b2/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/docker/docker v0.7.3-0.20190327010347-be7ac8be2ae0/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker v1.13.1 h1:IkZjBSIc8hBjLpqeAbeE5mca5mNgeatLHBy3GO78BWo=\ngithub.com/docker/docker v1.13.1/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-units v0.3.3/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/go-units v0.4.0 h1:3uh0PgVws3nIA0Q+MwDC8yjEPf9zjRfZZWXZYDct3Tw=\ngithub.com/docker/go-units v0.4.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/spdystream v0.0.0-20160310174837-449fdfce4d96/go.mod h1:Qh8CwZgvJUkLughtfhJv5dyTYa91l1fOUCrgjqmcifM=\ngithub.com/elazarl/goproxy v0.0.0-20170405201442-c4fc26588b6e/go.mod h1:/Zj4wYkgs4iZTTu3o/KG3Itv/qCCa8VVMlb3i9OVuzc=\ngithub.com/emicklei/go-restful v0.0.0-20170410110728-ff4f55a20633/go.mod h1:otzb+WCGbkyDHkqmQmT5YD2WR4BBwUdeQoFo8l/7tVs=\ngithub.com/emicklei/go-restful v2.9.5+incompatible/go.mod h1:otzb+WCGbkyDHkqmQmT5YD2WR4BBwUdeQoFo8l/7tVs=\ngithub.com/evanphx/json-patch v4.1.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/evanphx/json-patch v4.2.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/ghodss/yaml v0.0.0-20150909031657-73d445a93680/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/globalsign/mgo v0.0.0-20180905125535-1ca0a4f7cbcb/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\ngithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\ngithub.com/go-logr/logr v0.1.0/go.mod h1:ixOQHD9gLJUVQQ2ZOR7zLEifBX6tGkNJF4QyIY7sIas=\ngithub.com/go-openapi/analysis v0.0.0-20180825180245-b006789cd277/go.mod h1:k70tL6pCuVxPJOHXQ+wIac1FUrvNkHolPie/cLEU6hI=\ngithub.com/go-openapi/analysis v0.17.0/go.mod h1:IowGgpVeD0vNm45So8nr+IcQ3pxVtpRoBWb8PVZO0ik=\ngithub.com/go-openapi/analysis v0.18.0/go.mod h1:IowGgpVeD0vNm45So8nr+IcQ3pxVtpRoBWb8PVZO0ik=\ngithub.com/go-openapi/analysis v0.19.2/go.mod h1:3P1osvZa9jKjb8ed2TPng3f0i/UY9snX6gxi44djMjk=\ngithub.com/go-openapi/errors v0.17.0/go.mod h1:LcZQpmvG4wyF5j4IhA73wkLFQg+QJXOQHVjmcZxhka0=\ngithub.com/go-openapi/errors v0.18.0/go.mod h1:LcZQpmvG4wyF5j4IhA73wkLFQg+QJXOQHVjmcZxhka0=\ngithub.com/go-openapi/errors v0.19.2/go.mod h1:qX0BLWsyaKfvhluLejVpVNwNRdXZhEbTA4kxxpKBC94=\ngithub.com/go-openapi/jsonpointer v0.0.0-20160704185906-46af16f9f7b1/go.mod h1:+35s3my2LFTysnkMfxsJBAMHj/DoqoB9knIWoYG/Vk0=\ngithub.com/go-openapi/jsonpointer v0.17.0/go.mod h1:cOnomiV+CVVwFLk0A/MExoFMjwdsUdVpsRhURCKh+3M=\ngithub.com/go-openapi/jsonpointer v0.18.0/go.mod h1:cOnomiV+CVVwFLk0A/MExoFMjwdsUdVpsRhURCKh+3M=\ngithub.com/go-openapi/jsonpointer v0.19.2/go.mod h1:3akKfEdA7DF1sugOqz1dVQHBcuDBPKZGEoHC/NkiQRg=\ngithub.com/go-openapi/jsonreference v0.0.0-20160704190145-13c6e3589ad9/go.mod h1:W3Z9FmVs9qj+KR4zFKmDPGiLdk1D9Rlm7cyMvf57TTg=\ngithub.com/go-openapi/jsonreference v0.17.0/go.mod h1:g4xxGn04lDIRh0GJb5QlpE3HfopLOL6uZrK/VgnsK9I=\ngithub.com/go-openapi/jsonreference v0.18.0/go.mod h1:g4xxGn04lDIRh0GJb5QlpE3HfopLOL6uZrK/VgnsK9I=\ngithub.com/go-openapi/jsonreference v0.19.2/go.mod h1:jMjeRr2HHw6nAVajTXJ4eiUwohSTlpa0o73RUL1owJc=\ngithub.com/go-openapi/loads v0.17.0/go.mod h1:72tmFy5wsWx89uEVddd0RjRWPZm92WRLhf7AC+0+OOU=\ngithub.com/go-openapi/loads v0.18.0/go.mod h1:72tmFy5wsWx89uEVddd0RjRWPZm92WRLhf7AC+0+OOU=\ngithub.com/go-openapi/loads v0.19.0/go.mod h1:72tmFy5wsWx89uEVddd0RjRWPZm92WRLhf7AC+0+OOU=\ngithub.com/go-openapi/loads v0.19.2/go.mod h1:QAskZPMX5V0C2gvfkGZzJlINuP7Hx/4+ix5jWFxsNPs=\ngithub.com/go-openapi/runtime v0.0.0-20180920151709-4f900dc2ade9/go.mod h1:6v9a6LTXWQCdL8k1AO3cvqx5OtZY/Y9wKTgaoP6YRfA=\ngithub.com/go-openapi/runtime v0.19.0/go.mod h1:OwNfisksmmaZse4+gpV3Ne9AyMOlP1lt4sK4FXt0O64=\ngithub.com/go-openapi/spec v0.0.0-20160808142527-6aced65f8501/go.mod h1:J8+jY1nAiCcj+friV/PDoE1/3eeccG9LYBs0tYvLOWc=\ngithub.com/go-openapi/spec v0.17.0/go.mod h1:XkF/MOi14NmjsfZ8VtAKf8pIlbZzyoTvZsdfssdxcBI=\ngithub.com/go-openapi/spec v0.18.0/go.mod h1:XkF/MOi14NmjsfZ8VtAKf8pIlbZzyoTvZsdfssdxcBI=\ngithub.com/go-openapi/spec v0.19.2/go.mod h1:sCxk3jxKgioEJikev4fgkNmwS+3kuYdJtcsZsD5zxMY=\ngithub.com/go-openapi/strfmt v0.17.0/go.mod h1:P82hnJI0CXkErkXi8IKjPbNBM6lV6+5pLP5l494TcyU=\ngithub.com/go-openapi/strfmt v0.18.0/go.mod h1:P82hnJI0CXkErkXi8IKjPbNBM6lV6+5pLP5l494TcyU=\ngithub.com/go-openapi/strfmt v0.19.0/go.mod h1:+uW+93UVvGGq2qGaZxdDeJqSAqBqBdl+ZPMF/cC8nDY=\ngithub.com/go-openapi/swag v0.0.0-20160704191624-1d0bd113de87/go.mod h1:DXUve3Dpr1UfpPtxFw+EFuQ41HhCWZfha5jSVRG7C7I=\ngithub.com/go-openapi/swag v0.17.0/go.mod h1:AByQ+nYG6gQg71GINrmuDXCPWdL640yX49/kXLo40Tg=\ngithub.com/go-openapi/swag v0.18.0/go.mod h1:AByQ+nYG6gQg71GINrmuDXCPWdL640yX49/kXLo40Tg=\ngithub.com/go-openapi/swag v0.19.2/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=\ngithub.com/go-openapi/validate v0.18.0/go.mod h1:Uh4HdOzKt19xGIGm1qHf/ofbX1YQ4Y+MYsct2VUrAJ4=\ngithub.com/go-openapi/validate v0.19.2/go.mod h1:1tRCw7m3jtI8eNWEEliiAqUIcBztB2KDnRCRMUi7GTA=\ngithub.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=\ngithub.com/gogo/protobuf v1.2.2-0.20190723190241-65acae22fc9d/go.mod h1:SlYgWuQ5SjCEi6WLHjHCa1yvBfUnHcTbrrZtXPKa29o=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20160516000752-02826c3e7903/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20190129154638-5b532d6fd5ef/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v0.0.0-20161109072736-4bd1920723d7/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/gofuzz v0.0.0-20161122191042-44d81051d367/go.mod h1:HP5RmnzzSNb993RKQDq4+1A4ia9nllfqcQFTQJedwGI=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gnostic v0.0.0-20170729233727-0c5108395e2d/go.mod h1:sJBsCZ4ayReDTBIg8b9dl28c5xFWyhBTVRp3pOg5EKY=\ngithub.com/googleapis/gnostic v0.2.0/go.mod h1:sJBsCZ4ayReDTBIg8b9dl28c5xFWyhBTVRp3pOg5EKY=\ngithub.com/googleapis/gnostic v0.2.0/go.mod h1:sJBsCZ4ayReDTBIg8b9dl28c5xFWyhBTVRp3pOg5EKY=\ngithub.com/gophercloud/gophercloud v0.1.0/go.mod h1:vxM41WHh5uqHVBMZHzuwNOHh8XEoIEcSTewFxm1c5g8=\ngithub.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=\ngithub.com/gregjones/httpcache v0.0.0-20170728041850-787624de3eb7/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=\ngithub.com/grpc-ecosystem/go-grpc-middleware v0.0.0-20190222133341-cfaf5686ec79/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.3.0/go.mod h1:RSKVYQBd5MCa4OVpNdGskqpgL2+G+NZTnrVHpWWfpdw=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/imdario/mergo v0.3.5/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/imdario/mergo v0.3.7/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=\ngithub.com/json-iterator/go v0.0.0-20180612202835-f2b4162afba3/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2 h1:DB17ag19krx9CFsz4o3enTrPXyIXCl+2iCXH/aMAp9s=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.5/go.mod h1:9r2w37qlBe7rQ6e1fg1S/9xpWHSnaqNdHD3WcMdbPDA=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/mailru/easyjson v0.0.0-20160728113105-d5b7844b561a/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/mailru/easyjson v0.0.0-20180823135443-60711f1a8329/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/mailru/easyjson v0.0.0-20190312143242-1de009706dbe/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/matryer/moq v0.0.0-20190312154309-6cfb0558e1bd/go.mod h1:9ELz6aaclSIGnZBoaSLZ3NAl1VTufbOrXBPvtcy6WiQ=\ngithub.com/mattn/go-isatty v0.0.10 h1:qxFzApOv4WsAL965uUPIsXzAKCZxN2p9UqdhFS4ZW10=\ngithub.com/mattn/go-isatty v0.0.10/go.mod h1:qgIWMr58cqv1PHHyhnkY9lrL7etaEgOFcMEpPG5Rm84=\ngithub.com/mattn/go-shellwords v1.0.5 h1:JhhFTIOslh5ZsPrpa3Wdg8bF0WI3b44EMblmU9wIsXc=\ngithub.com/mattn/go-shellwords v1.0.5/go.mod h1:3xCvwCdWdlDJUrvuMn7Wuy9eWs4pE8vqg+NOMyg4B2o=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180320133207-05fbef0ca5da/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/munnerz/goautoneg v0.0.0-20120707110453-a547fc61f48d/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=\ngithub.com/onsi/ginkgo v0.0.0-20170829012221-11459a886d9c/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.8.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/gomega v0.0.0-20170829124025-dcabb60a477c/go.mod h1:C1qb7wdrVGGVU+Z6iS04AVkA3Q65CEZX59MT0QO5uiA=\ngithub.com/onsi/gomega v1.5.0/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/otiai10/copy v1.0.2 h1:DDNipYy6RkIkjMwy+AWzgKiNTyj2RUI9yEMeETEpVyc=\ngithub.com/otiai10/copy v1.0.2/go.mod h1:c7RpqBkwMom4bYTSkLSym4VSJz/XtncWRAj/J4PEIMY=\ngithub.com/otiai10/curr v0.0.0-20150429015615-9b4961190c95/go.mod h1:9qAhocn7zKJG+0mI8eUu6xqkFDYS2kb2saOteoSB3cE=\ngithub.com/otiai10/mint v1.3.0 h1:Ady6MKVezQwHBkGzLFbrsywyp09Ah7rkmfjV3Bcr5uc=\ngithub.com/otiai10/mint v1.3.0/go.mod h1:F5AjcsTsWUqX+Na9fpHb52P8pcRX2CI6A3ctIT91xUo=\ngithub.com/paultag/go-modprobe v0.0.0-20180523225901-7ccf6a1b5271 h1:e30yoZNGiwZszhX/zRYOOc56xHpsZFUC7CeBhcmmivM=\ngithub.com/paultag/go-modprobe v0.0.0-20180523225901-7ccf6a1b5271/go.mod h1:8kv7zKfUEDKENYA4Wk+cT1bxjXaEiuYisqjRZGGNI84=\ngithub.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/peterbourgon/diskv v2.0.1+incompatible/go.mod h1:uqqh8zWWbv1HBMNONnaR/tNboyR3/BZd58JJSHlUSCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1 h1:iURUrRGxPUNPdy5/HRSm+Yj6okJ6UtLINN0Q9M4+h3I=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v0.0.0-20151028094244-d8ed2627bdf0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pquerna/cachecontrol v0.0.0-20171018203845-0dec1b30a021/go.mod h1:prYjPmNq4d1NPVmpShWobRqXY3q7Vp+80DqgxxUrUIA=\ngithub.com/prometheus/client_golang v0.9.2/go.mod h1:OsXs2jCmiKlQ1lTBmv21f2mNfw4xf/QclQDMrYNZzcM=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/common v0.0.0-20181126121408-4724e9255275/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/procfs v0.0.0-20181204211112-1dc9a6cbc91a/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/api v1.16.3-k3s.2/go.mod h1:cHpnPcbNeE90PrTRnTu13OM+FN+ROt82odVbEh++81o=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/apiextensions-apiserver v1.16.3-k3s.2/go.mod h1:tXCXeG1YI6F9buUotzmBdjCRCJfM0xfoNX5782iBQPA=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/apimachinery v1.16.3-k3s.2/go.mod h1:I9gveEHn8RBUsRZ1zR7UbePt/ySCzzxsG1dWwpKNN5E=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/apiserver v1.16.3-k3s.2/go.mod h1:+c9OY4l2MPZsWcuJPzAJfdMb6wpt6srdvgaOEvuSfcA=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/client-go v1.16.3-k3s.2/go.mod h1:GiGfbsjtP4tOW6zgpL8/vCUoyXAV5+9X2onLursPi08=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/code-generator v1.16.3-k3s.2/go.mod h1:uzCZz0cC/uXDgpjpMZ7lFzglGU/9tXyTiPDcX92d6OI=\ngithub.com/rancher/kubernetes/staging/src/k8s.io/component-base v1.16.3-k3s.2/go.mod h1:spPP+vRNS8EsnNNIhFCZTTuRO3XhV1WoF18HJySoZn8=\ngithub.com/rancher/mapper v0.0.0-20190814232720-058a8b7feb99 h1:rGnt9h1Uk7Yw4qNPyGq0LWHGdPyag/+Fg/wJWSTkKx4=\ngithub.com/rancher/mapper v0.0.0-20190814232720-058a8b7feb99/go.mod h1:zU4cm21k7ZBFVQhUu2aSH7NwouY317rLYxruOn+wdOQ=\ngithub.com/rancher/wrangler v0.0.0-20190426050201-5946f0eaed19/go.mod h1:snD4YYjLOsxOwXNQORUkKr0y2TOVk54yWjgZ7myL8es=\ngithub.com/rancher/wrangler v0.3.1 h1:Qu6DvtAHlBRzt6hfUDJExSykY5F2xkiSMYIWQTxS9NM=\ngithub.com/rancher/wrangler v0.3.1/go.mod h1:zmXTOSzU0vhumCyl0+Acq2FEP5WJOJRqnCQDegknyWA=\ngithub.com/remyoudompheng/bigfft v0.0.0-20170806203942-52369c62f446/go.mod h1:uYEyJGbgTkfkS4+E/PavXkNJcbFIpEtjt2B0KDQ5+9M=\ngithub.com/russross/blackfriday v1.5.2 h1:HyvC0ARfnZBqnXwABFeSZHpKvJHJJfPz81GNueLj0oo=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/russross/blackfriday/v2 v2.0.1 h1:lPqVAte+HuHNfhJ/0LC98ESWRz8afy9tM/0RK8m9o+Q=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0 h1:PdmoCO6wvbs+7yrJyMORt4/BmY5IYyJwS/kOiWx8mHo=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2 h1:SPIRibHv4MatM3XXNO2BJeFLZwZ2LvZgfQ5+UNI2im4=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/soheilhy/cmux v0.1.3/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=\ngithub.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/afero v1.2.2/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v0.0.5/go.mod h1:3K3wKZymM7VvHMDS9+Akkh4K60UwM26emMESw8tLCHU=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v0.0.0-20170130214245-9ff6c6923cff/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/viper v1.3.2/go.mod h1:ZiWeW+zYFKm7srdB9IoDzzZXaJaI5eL9QjNiN/DMA2s=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/testify v0.0.0-20151208002404-e3a8ff8ce365/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0 h1:2E4SXV/wtOkTonXsotYi4li6zVWxYlZuYNCXe9XRJyk=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20170815181823-89b8d40f7ca8/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=\ngithub.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=\ngithub.com/urfave/cli v1.22.2 h1:gsqYFH8bb9ekPA12kRo0hfjngWQjkJPlN9R0N78BoUo=\ngithub.com/urfave/cli v1.22.2/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/xiang90/probing v0.0.0-20160813154853-07dd2e8dfe18/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=\ngo.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.uber.org/atomic v0.0.0-20181018215023-8dc6146f7569/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/multierr v0.0.0-20180122172545-ddea229ff1df/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/zap v0.0.0-20180814183419-67bc79d13d15/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngolang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190211182817-74369b46fc67/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190313024323-a1f597ede03a/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190320223903-b7391e95e576/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190611184440-5c40567a22f8/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191122220453-ac88ee75c92c h1:/nJuwDLoL/zrqY6gf57vxC+Pi+pZ8bfhpPkicO5H7W4=\ngolang.org/x/crypto v0.0.0-20191122220453-ac88ee75c92c/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190125153040-c74c464bbbf2/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190312203227-4b39c73a6495/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/net v0.0.0-20170114055629-f2499483f923/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181005035420-146acd28ed58/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190318221613-d196dffd7c2b/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190320064053-1272bf9dcd53/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190812203447-cdfb69ac37fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20170830134202-bb24a47a89ea/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181205085412-a5c9d58dba9a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190209173611-3b5209105503/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190321052220-f7bb7a8bee54/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190616124812-15dcb6c0061f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191127021746-63cb32ae39b2 h1:/J2nHFg1MTqaRLFO7M+J78ASNsJoz3r0cvHBPQ77fsE=\ngolang.org/x/sys v0.0.0-20191127021746-63cb32ae39b2/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.0.0-20160726164857-2910a502d2bf/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181011042414-1f849cf54d09/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190411180116-681f9ce8ac52/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190614205625-5aca471b1d59/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngonum.org/v1/gonum v0.0.0-20190331200053-3d26580ed485/go.mod h1:2ltnJ7xHfj0zHS40VVPYEAAMTa3ZGguvHGBSJeRWqE0=\ngonum.org/v1/netlib v0.0.0-20190313105609-8cb42192e0e0/go.mod h1:wa6Ws7BG/ESfp6dHfk7C6KdzKA7wR7u/rKwOGE66zvw=\ngonum.org/v1/netlib v0.0.0-20190331212654-76723241ea4e/go.mod h1:kS+toOQn6AQKjmKJ7gzohV1XkqsFehRA2FbsbkopSuQ=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/freddierice/go-losetup.v1 v1.0.0-20170407175016-fc9adea44124 h1:aPcd9iBdqpFyYkoGRQbQd+asp162GIRDvAVB0FhLxhc=\ngopkg.in/freddierice/go-losetup.v1 v1.0.0-20170407175016-fc9adea44124/go.mod h1:6LXpUYtVsrx91XiupFRJ8jVKOqLZf5PrbEVSGHta/84=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.0/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/natefinch/lumberjack.v2 v2.0.0/go.mod h1:l0ndWWf7gzL7RNwBG7wST/UCcT4T24xpD6X8LsfU/+k=\ngopkg.in/square/go-jose.v2 v2.2.2/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4 h1:/eiJrUcujPVeJ3xlSWaiNi3uSVmDGBK1pDHUHAnao1I=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngotest.tools v2.2.0+incompatible/go.mod h1:DsYFclhRJ6vuDpmuTbkuFWG+y2sxOXAzmJt81HFBacw=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/gengo v0.0.0-20190128074634-0689ccc1d7d6/go.mod h1:ezvh/TsK7cY6rbqRK0oQQ8IAqLxYwwyPxAX1Pzy0ii0=\nk8s.io/gengo v0.0.0-20190327210449-e17681d19d3a/go.mod h1:ezvh/TsK7cY6rbqRK0oQQ8IAqLxYwwyPxAX1Pzy0ii0=\nk8s.io/gengo v0.0.0-20190822140433-26a664648505/go.mod h1:ezvh/TsK7cY6rbqRK0oQQ8IAqLxYwwyPxAX1Pzy0ii0=\nk8s.io/klog v0.0.0-20181102134211-b9b56d5dfc92/go.mod h1:Gq+BEi5rUBO/HRz0bTSXDUcqjScdoY3a9IHpCEIOOfk=\nk8s.io/klog v0.2.0/go.mod h1:Gq+BEi5rUBO/HRz0bTSXDUcqjScdoY3a9IHpCEIOOfk=\nk8s.io/klog v0.3.0/go.mod h1:Gq+BEi5rUBO/HRz0bTSXDUcqjScdoY3a9IHpCEIOOfk=\nk8s.io/klog v0.4.0/go.mod h1:4Bi6QPql/J/LkTDqv7R/cd3hPo4k2DG6Ptcz060Ez5I=\nk8s.io/kube-openapi v0.0.0-20190401085232-94e1e7b7574c/go.mod h1:BXM9ceUBTj2QnfH2MK1odQs778ajze1RxcmP6S8RVVc=\nk8s.io/kube-openapi v0.0.0-20190816220812-743ec37842bf/go.mod h1:1TqjTSzOxsLGIKfj0lK8EeCP7K1iUG65v09OM0/WG5E=\nk8s.io/utils v0.0.0-20190308190857-21c4ce38f2a7/go.mod h1:8k8uAuAQ0rXslZKaEWd0c3oVhZz7sSzSiPnVZayjIX0=\nk8s.io/utils v0.0.0-20190801114015-581e00157fb1/go.mod h1:sZAwmy6armz5eXlNoLmJcl4F1QuKu7sr+mFQ0byX7Ew=\nmodernc.org/cc v1.0.0/go.mod h1:1Sk4//wdnYJiUIxnW8ddKpaOJCF37yAdqYnkxUpaYxw=\nmodernc.org/golex v1.0.0/go.mod h1:b/QX9oBD/LhixY6NDh+IdGv17hgB+51fET1i2kPSmvk=\nmodernc.org/mathutil v1.0.0/go.mod h1:wU0vUrJsVWBZ4P6e7xtFJEhFSNsfRLJ8H458uRjg03k=\nmodernc.org/strutil v1.0.0/go.mod h1:lstksw84oURvj9y3tn8lGvRxyRC1S2+g5uuIzNfIOBs=\nmodernc.org/xc v1.0.0/go.mod h1:mRNCo0bvLjGhHO9WsyuKVU4q0ceiDDDoEeWDJHrNx8I=\npault.ag/go/topsort v0.0.0-20160530003732-f98d2ad46e1a h1:WwS7vlB5H2AtwKj1jsGwp2ZLud1x6WXRXh2fXsRqrcA=\npault.ag/go/topsort v0.0.0-20160530003732-f98d2ad46e1a/go.mod h1:INqx0ClF7kmPAMk2zVTX8DRnhZ/yaA/Mg52g8KFKE7k=\nsigs.k8s.io/structured-merge-diff v0.0.0-20190525122527-15d366b2352e/go.mod h1:wWxsB5ozmmv/SG7nM11ayaAW51xMvak/t1r0CSlcokI=\nsigs.k8s.io/structured-merge-diff v0.0.0-20190817042607-6149e4549fca/go.mod h1:IIgPezJWb76P0hotTxzDbWsMYB8APh18qZnxkomBpxA=\nsigs.k8s.io/yaml v1.1.0/go.mod h1:UJmg0vDUVViEyp3mgSv9WPwZCDxu4rQW1olrI1uml+o=\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 9.203125,
          "content": "#!/bin/bash\nset -e\n\nPROG=$0\nPROGS=\"dd curl mkfs.ext4 mkfs.vfat fatlabel parted partprobe grub-install\"\nDISTRO=/run/k3os/iso\n\nif [ \"$K3OS_DEBUG\" = true ]; then\n    set -x\nfi\n\nget_url()\n{\n    FROM=$1\n    TO=$2\n    case $FROM in\n        ftp*|http*|tftp*)\n            n=0\n            attempts=5\n            until [ \"$n\" -ge \"$attempts\" ]\n            do\n                curl -o $TO -fL ${FROM} && break\n                n=$((n+1))\n                echo \"Failed to download, retry attempt ${n} out of ${attempts}\"\n                sleep 2\n            done\n            ;;\n        *)\n            cp -f $FROM $TO\n            ;;\n    esac\n}\n\ncleanup2()\n{\n    if [ -n \"${TARGET}\" ]; then\n        umount ${TARGET}/boot/efi || true\n        umount ${TARGET} || true\n    fi\n\n    losetup -d ${ISO_DEVICE} || losetup -d ${ISO_DEVICE%?} || true\n    umount $DISTRO || true\n}\n\ncleanup()\n{\n    EXIT=$?\n    cleanup2 2>/dev/null || true\n    return $EXIT\n}\n\nusage()\n{\n    echo \"Usage: $PROG [--force-efi] [--debug] [--tty TTY] [--poweroff] [--takeover] [--no-format] [--config https://.../config.yaml] DEVICE ISO_URL\"\n    echo \"\"\n    echo \"Example: $PROG /dev/vda https://github.com/rancher/k3os/releases/download/v0.8.0/k3os.iso\"\n    echo \"\"\n    echo \"DEVICE must be the disk that will be partitioned (/dev/vda). If you are using --no-format it should be the device of the K3OS_STATE partition (/dev/vda2)\"\n    echo \"\"\n    echo \"The parameters names refer to the same names used in the cmdline, refer to README.md for\"\n    echo \"more info.\"\n    echo \"\"\n    exit 1\n}\n\ndo_format()\n{\n    if [ \"$K3OS_INSTALL_NO_FORMAT\" = \"true\" ]; then\n        STATE=$(blkid -L K3OS_STATE || true)\n        if [ -z \"$STATE\" ] && [ -n \"$DEVICE\" ]; then\n            tune2fs -L K3OS_STATE $DEVICE\n            STATE=$(blkid -L K3OS_STATE)\n        fi\n\n        return 0\n    fi\n\n    dd if=/dev/zero of=${DEVICE} bs=1M count=1\n    parted -s ${DEVICE} mklabel ${PARTTABLE}\n    if [ \"$PARTTABLE\" = \"gpt\" ]; then\n        BOOT_NUM=1\n        STATE_NUM=2\n        parted -s ${DEVICE} mkpart primary fat32 0% 50MB\n        parted -s ${DEVICE} mkpart primary ext4 50MB 750MB\n    else\n        BOOT_NUM=\n        STATE_NUM=1\n        parted -s ${DEVICE} mkpart primary ext4 0% 700MB\n    fi\n    parted -s ${DEVICE} set 1 ${BOOTFLAG} on\n    partprobe ${DEVICE} 2>/dev/null || true\n    sleep 2\n\n    PREFIX=${DEVICE}\n    if [ ! -e ${PREFIX}${STATE_NUM} ]; then\n        PREFIX=${DEVICE}p\n    fi\n\n    if [ ! -e ${PREFIX}${STATE_NUM} ]; then\n        echo Failed to find ${PREFIX}${STATE_NUM} or ${DEVICE}${STATE_NUM} to format\n        exit 1\n    fi\n\n    if [ -n \"${BOOT_NUM}\" ]; then\n        BOOT=${PREFIX}${BOOT_NUM}\n    fi\n    STATE=${PREFIX}${STATE_NUM}\n\n    mkfs.ext4 -F -L K3OS_STATE ${STATE}\n    if [ -n \"${BOOT}\" ]; then\n        mkfs.vfat -F 32 ${BOOT}\n        fatlabel ${BOOT} K3OS_GRUB\n    fi\n}\n\ndo_mount()\n{\n    TARGET=/run/k3os/target\n    mkdir -p ${TARGET}\n    mount ${STATE} ${TARGET}\n    mkdir -p ${TARGET}/boot\n    if [ -n \"${BOOT}\" ]; then\n        mkdir -p ${TARGET}/boot/efi\n        mount ${BOOT} ${TARGET}/boot/efi\n    fi\n\n    mkdir -p ${DISTRO}\n    mount -o ro ${ISO_DEVICE} ${DISTRO} || mount -o ro ${ISO_DEVICE%?} ${DISTRO}\n}\n\ndo_copy()\n{\n    tar cf - -C ${DISTRO} k3os | tar xvf - -C ${TARGET}\n    if [ -n \"$STATE_NUM\" ]; then\n        echo $DEVICE $STATE_NUM > $TARGET/k3os/system/growpart\n    fi\n\n    if [ -n \"$K3OS_INSTALL_CONFIG_URL\" ]; then\n        get_url \"$K3OS_INSTALL_CONFIG_URL\" ${TARGET}/k3os/system/config.yaml\n        chmod 600 ${TARGET}/k3os/system/config.yaml\n    fi\n\n    if [ \"$K3OS_INSTALL_TAKE_OVER\" = \"true\" ]; then\n        touch ${TARGET}/k3os/system/takeover\n\n        if [ \"$K3OS_INSTALL_POWER_OFF\" = true ] || grep -q 'k3os.install.power_off=true' /proc/cmdline; then\n            touch ${TARGET}/k3os/system/poweroff\n        fi\n    fi\n}\n\ninstall_grub()\n{\n    if [ \"$K3OS_INSTALL_DEBUG\" ]; then\n        GRUB_DEBUG=\"k3os.debug\"\n    fi\n\n    mkdir -p ${TARGET}/boot/grub\n    cat > ${TARGET}/boot/grub/grub.cfg << EOF\nset default=0\nset timeout=10\n\nset gfxmode=auto\nset gfxpayload=keep\ninsmod all_video\ninsmod gfxterm\n\nmenuentry \"k3OS Current\" {\n  search.fs_label K3OS_STATE root\n  set sqfile=/k3os/system/kernel/current/kernel.squashfs\n  loopback loop0 /\\$sqfile\n  set root=(\\$root)\n  linux (loop0)/vmlinuz printk.devkmsg=on console=tty1 $GRUB_DEBUG\n  initrd /k3os/system/kernel/current/initrd\n}\n\nmenuentry \"k3OS Previous\" {\n  search.fs_label K3OS_STATE root\n  set sqfile=/k3os/system/kernel/previous/kernel.squashfs\n  loopback loop0 /\\$sqfile\n  set root=(\\$root)\n  linux (loop0)/vmlinuz printk.devkmsg=on console=tty1 $GRUB_DEBUG\n  initrd /k3os/system/kernel/previous/initrd\n}\n\nmenuentry \"k3OS Rescue (current)\" {\n  search.fs_label K3OS_STATE root\n  set sqfile=/k3os/system/kernel/current/kernel.squashfs\n  loopback loop0 /\\$sqfile\n  set root=(\\$root)\n  linux (loop0)/vmlinuz printk.devkmsg=on rescue console=tty1\n  initrd /k3os/system/kernel/current/initrd\n}\n\nmenuentry \"k3OS Rescue (previous)\" {\n  search.fs_label K3OS_STATE root\n  set sqfile=/k3os/system/kernel/previous/kernel.squashfs\n  loopback loop0 /\\$sqfile\n  set root=(\\$root)\n  linux (loop0)/vmlinuz printk.devkmsg=on rescue console=tty1\n  initrd /k3os/system/kernel/previous/initrd\n}\nEOF\n    if [ -z \"${K3OS_INSTALL_TTY}\" ]; then\n        TTY=$(tty | sed 's!/dev/!!')\n    else\n        TTY=$K3OS_INSTALL_TTY\n    fi\n    if [ -e \"/dev/${TTY%,*}\" ] && [ \"$TTY\" != tty1 ] && [ \"$TTY\" != console ] && [ -n \"$TTY\" ]; then\n        sed -i \"s!console=tty1!console=tty1 console=${TTY}!g\" ${TARGET}/boot/grub/grub.cfg\n    fi\n\n    if [ \"$K3OS_INSTALL_NO_FORMAT\" = \"true\" ]; then\n        return 0\n    fi\n\n    if [ \"$K3OS_INSTALL_FORCE_EFI\" = \"true\" ]; then\n        if [ $(uname -m) = \"aarch64\" ]; then\n            GRUB_TARGET=\"--target=arm64-efi\"\n        else\n            GRUB_TARGET=\"--target=x86_64-efi\"\n        fi\n    fi\n\n    grub-install ${GRUB_TARGET} --boot-directory=${TARGET}/boot --removable ${DEVICE}\n}\n\nget_iso()\n{\n\n    ### When booting install media from USB, there is a chance that the K3OS label\n    ### will detect the proper partition.  For that reason, we allow the admin\n    ### to explicitly set the ISO_DEVICE variable before invoking install\n    if [ -z \"${ISO_DEVICE}\" ]; then\n        ISO_DEVICE=$(blkid -L K3OS || true)\n    fi\n\n    if [ -z \"${ISO_DEVICE}\" ]; then\n        for i in $(lsblk -o NAME,TYPE -n | grep -w disk | awk '{print $1}'); do\n            mkdir -p ${DISTRO}\n            if mount -o ro /dev/$i ${DISTRO}; then\n                ISO_DEVICE=\"/dev/$i\"\n                umount ${DISTRO}\n                break\n            fi\n        done\n    fi\n\n    if [ -z \"${ISO_DEVICE}\" ] && [ -n \"$K3OS_INSTALL_ISO_URL\" ]; then\n        TEMP_FILE=$(mktemp k3os.XXXXXXXX.iso)\n        get_url ${K3OS_INSTALL_ISO_URL} ${TEMP_FILE}\n        ISO_DEVICE=$(losetup --show -f $TEMP_FILE)\n        rm -f $TEMP_FILE\n    fi\n\n    if [ -z \"${ISO_DEVICE}\" ]; then\n        echo \"#### There is no k3os ISO device\"\n        return 1\n    fi\n}\n\nsetup_style()\n{\n    if [ \"$K3OS_INSTALL_FORCE_EFI\" = \"true\" ] || [ -e /sys/firmware/efi ]; then\n        PARTTABLE=gpt\n        BOOTFLAG=esp\n        if [ ! -e /sys/firmware/efi ]; then\n            echo WARNING: installing EFI on to a system that does not support EFI\n        fi\n    else\n        PARTTABLE=msdos\n        BOOTFLAG=boot\n    fi\n}\n\nvalidate_progs()\n{\n    for i in $PROGS; do\n        if [ ! -x \"$(which $i)\" ]; then\n            MISSING=\"${MISSING} $i\"\n        fi\n    done\n\n    if [ -n \"${MISSING}\" ]; then\n        echo \"The following required programs are missing for installation: ${MISSING}\"\n        exit 1\n    fi\n}\n\nvalidate_device()\n{\n    DEVICE=$K3OS_INSTALL_DEVICE\n    if [ ! -b ${DEVICE} ]; then\n        echo \"You should use an available device. Device ${DEVICE} does not exist.\"\n        exit 1\n    fi\n}\n\ncreate_opt()\n{\n    mkdir -p \"${TARGET}/k3os/data/opt\"\n}\n\nwhile [ \"$#\" -gt 0 ]; do\n    case $1 in\n        --no-format)\n            K3OS_INSTALL_NO_FORMAT=true\n            ;;\n        --force-efi)\n            K3OS_INSTALL_FORCE_EFI=true\n            ;;\n        --poweroff)\n            K3OS_INSTALL_POWER_OFF=true\n            ;;\n        --takeover)\n            K3OS_INSTALL_TAKE_OVER=true\n            ;;\n        --debug)\n            set -x\n            K3OS_INSTALL_DEBUG=true\n            ;;\n        --config)\n            shift 1\n            K3OS_INSTALL_CONFIG_URL=$1\n            ;;\n        --tty)\n            shift 1\n            K3OS_INSTALL_TTY=$1\n            ;;\n        -h)\n            usage\n            ;;\n        --help)\n            usage\n            ;;\n        *)\n            if [ \"$#\" -gt 2 ]; then\n                usage\n            fi\n            INTERACTIVE=true\n            K3OS_INSTALL_DEVICE=$1\n            K3OS_INSTALL_ISO_URL=$2\n            break\n            ;;\n    esac\n    shift 1\ndone\n\nif [ -e /etc/environment ]; then\n    source /etc/environment\nfi\n\nif [ -e /etc/os-release ]; then\n    source /etc/os-release\n\n    if [ -z \"$K3OS_INSTALL_ISO_URL\" ]; then\n        K3OS_INSTALL_ISO_URL=${ISO_URL}\n    fi\nfi\n\nif [ -z \"$K3OS_INSTALL_DEVICE\" ]; then\n    usage\nfi\n\nvalidate_progs\nvalidate_device\n\ntrap cleanup exit\n\nget_iso\nsetup_style\ndo_format\ndo_mount\ndo_copy\ninstall_grub\ncreate_opt\n\nif [ -n \"$INTERACTIVE\" ]; then\n    exit 0\nfi\n\nif [ \"$K3OS_INSTALL_POWER_OFF\" = true ] || grep -q 'k3os.install.power_off=true' /proc/cmdline; then\n    poweroff -f\nelse\n    echo \" * Rebooting system in 5 seconds (CTRL+C to cancel)\"\n    sleep 5\n    reboot -f\nfi\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.22265625,
          "content": "package main\n\n// Copyright 2019 Rancher Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/docker/docker/pkg/mount\"\n\t\"github.com/docker/docker/pkg/reexec\"\n\t\"github.com/rancher/k3os/pkg/cli/app\"\n\t\"github.com/rancher/k3os/pkg/enterchroot\"\n\t\"github.com/rancher/k3os/pkg/transferroot\"\n\t\"github.com/sirupsen/logrus\"\n)\n\nfunc main() {\n\treexec.Register(\"/init\", initrd)      // mode=live\n\treexec.Register(\"/sbin/init\", initrd) // mode=local\n\treexec.Register(\"enter-root\", enterchroot.Enter)\n\n\tif !reexec.Init() {\n\t\tapp := app.New()\n\t\targs := []string{app.Name}\n\t\tpath := filepath.Base(os.Args[0])\n\t\tif path != app.Name && app.Command(path) != nil {\n\t\t\targs = append(args, path)\n\t\t}\n\t\targs = append(args, os.Args[1:]...)\n\t\t// this will bomb if the app has any non-defaulted, required flags\n\t\terr := app.Run(args)\n\t\tif err != nil {\n\t\t\tlogrus.Fatal(err)\n\t\t}\n\t}\n}\n\nfunc initrd() {\n\tenterchroot.DebugCmdline = \"k3os.debug\"\n\ttransferroot.Relocate()\n\tif err := mount.Mount(\"\", \"/\", \"none\", \"rw,remount\"); err != nil {\n\t\tlogrus.Errorf(\"failed to remount root as rw: %v\", err)\n\t}\n\tif err := enterchroot.Mount(\"./k3os/data\", os.Args, os.Stdout, os.Stderr); err != nil {\n\t\tlogrus.Fatalf(\"failed to enter root: %v\", err)\n\t}\n}\n"
        },
        {
          "name": "overlay",
          "type": "tree",
          "content": null
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}