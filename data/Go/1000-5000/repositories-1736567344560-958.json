{
  "metadata": {
    "timestamp": 1736567344560,
    "page": 958,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "neilotoole/sq",
      "stars": 2194,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.35546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.go]\nindent_style = tab\n\n[*.md]\nmax_line_length = off\ntrim_trailing_whitespace = false\n\n# Override for Makefile\n[{Makefile, makefile, GNUmakefile}]\nindent_style = tab\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n\n"
        },
        {
          "name": ".generate-changelog-delta.sh",
          "type": "blob",
          "size": 0.8896484375,
          "content": "#!/usr/bin/env bash\n\nset -e\n\n# This script the per-release changelog file for goreleaser to use\n# to publish to GitHub releases. It produces markdown output.\n\n# First we get the current and previous git tags.\ncurTag=$(git tag --sort=-creatordate | head -n 1)\nprevTag=$(git tag --sort=-creatordate | head -n 2 | tail -n 1)\n\n# Then we run git diff on CHANGELOG.md;\n# and grep for only the added lines;\n# and stripping out the '+++ CHANGELOG.md' header line;\n# and stripping the leading '+' from each line\n# and getting rid of a superfluous starting newline.\ngit diff \"$prevTag\" \"$curTag\" --no-ext-diff --unified=0 --exit-code -a --no-prefix -- ./CHANGELOG.md \\\n| grep -E \"^\\+\" \\\n| grep -vF '## [v' \\\n| grep -vF '+++ CHANGELOG.md' \\\n| cut -c 2- \\\n| tail -n +2\n\n# Then we add a section for the commits.\nprintf \"\\n### Commits\\n\\n\"\n\necho '```text'\ngit log --pretty=format:'%h   %s%n' \"$prevTag\"..\"$curTag\"\necho '```'\n"
        },
        {
          "name": ".generate-completions.sh",
          "type": "blob",
          "size": 0.578125,
          "content": "#!/bin/sh\n# \".generate-completions.sh\" regenerates shell completions to \"./completions\".\n# This script is invoked by a hook in .goreleaser.yml during the CI\n# release process, generating \"sq.bash\", \"sq.zsh\", etc. into \"./completions\".\n# goreleaser then uses those generated completions for the various install\n# packages it creates.\n#\n# Note that the \"./completions\" dir is not committed to git; it is generated\n# on demand when goreleaser runs.\n\nset -e\n\nrm -rf completions\nmkdir completions\n\nfor sh in bash zsh fish powershell; do\n\tgo run main.go completion \"$sh\" >\"completions/sq.$sh\"\ndone\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0888671875,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8076171875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n/archive\n/cache\n\n*.exe\n*.test\n*.prof\n\n.DS_Store\n/.run\n/.idea\n/grammar/build\n*/~test$*\n/dist\n/dist-*\n/projectFilesBackup\n/*.iml\n/.swp\n/sq\n/demo\n/scratch\n.envrc\n**/*.bench\ngo.work*\n*.dump.sql\n# Some apps create temp files when editing, e.g. Excel with drivers/xlsx/testdata/~$test_header.xlsx\n**/testdata/~*\n\ngorelease-snapshot.sh\nmagefile_local.go\n.goreleaser-local.yml\napt-install.sh\nyum-install.sh\ngoreleaser-test.sh\n/.vscode\n/completions\n/manpages\n/cli/test.db\n/*.db\n/.CHANGELOG.delta.md\n/testh/progress-remove.test.sh\n\n/*.dump\n\n/docker-build-run.sh\ntempdiff\nsakila_a*\nsakila_b*\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 27.8564453125,
          "content": "# This code is licensed under the terms of the MIT license.\n\n## Golden config for golangci-lint v1.50.1\n#\n# This is the best config for golangci-lint based on my experience and opinion.\n# It is very strict, but not extremely strict.\n# Feel free to adopt and change it for your needs.\n#\n# @neilotoole: ^^ Well, it's less strict now!\n# Based on: https://gist.github.com/maratori/47a4d00457a92aa426dbd48a18776322\n\nrun:\n  # Timeout for analysis, e.g. 30s, 5m.\n  # Default: 1m\n  timeout: 5m\n\n  tests: true\n\n\noutput:\n  sort-results: true\n\n# This file contains only configs which differ from defaults.\n# All possible options can be found here https://github.com/golangci/golangci-lint/blob/master/.golangci.reference.yml\nlinters-settings:\n  cyclop:\n    # The maximal code complexity to report.\n    # Default: 10\n    max-complexity: 50\n    # The maximal average package complexity.\n    # If it's higher than 0.0 (float) the check is enabled\n    # Default: 0.0\n    package-average: 10.0\n\n  errcheck:\n    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-type-assertions: false\n\n  exhaustive:\n    # Program elements to check for exhaustiveness.\n    # Default: [ switch ]\n    check:\n      - switch\n      - map\n\n  funlen:\n    # Checks the number of lines in a function.\n    # If lower than 0, disable the check.\n    # Default: 60\n    lines: 175\n    # Checks the number of statements in a function.\n    # If lower than 0, disable the check.\n    # Default: 40\n    statements: 100\n\n    # Ignore comments when counting lines.\n    # Default false\n    ignore-comments: true\n\n  gocognit:\n    # Minimal code complexity to report\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 50\n\n  gocritic:\n    # Settings passed to gocritic.\n    # The settings key is the name of a supported gocritic checker.\n    # The list of supported checkers can be find in https://go-critic.github.io/overview.\n    settings:\n      captLocal:\n        # Whether to restrict checker to params only.\n        # Default: true\n        paramsOnly: false\n      underef:\n        # Whether to skip (*x).method() calls where x is a pointer receiver.\n        # Default: true\n        skipRecvDeref: false\n\n  gocyclo:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 50\n\n  gofumpt:\n    # Module path which contains the source code being formatted.\n    # Default: \"\"\n    module-path: github.com/neilotoole/sq\n    # Choose whether to use the extra rules.\n    # Default: false\n    extra-rules: true\n\n  gomnd:\n    # List of function patterns to exclude from analysis.\n    # Values always ignored: `time.Date`,\n    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,\n    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.\n    # Default: []\n    ignored-functions:\n      - make\n      - os.Chmod\n      - os.Mkdir\n      - os.MkdirAll\n      - os.OpenFile\n      - os.WriteFile\n      - prometheus.ExponentialBuckets\n      - prometheus.ExponentialBucketsRange\n      - prometheus.LinearBuckets\n    ignored-numbers:\n      - \"2\"\n      - \"3\"\n\n  gomodguard:\n    blocked:\n      # List of blocked modules.\n      # Default: []\n      modules:\n        - github.com/golang/protobuf:\n            recommendations:\n              - google.golang.org/protobuf\n            reason: \"see https://developers.google.com/protocol-buffers/docs/reference/go/faq#modules\"\n        - github.com/satori/go.uuid:\n            recommendations:\n              - github.com/google/uuid\n            reason: \"satori's package is not maintained\"\n        - github.com/gofrs/uuid:\n            recommendations:\n              - github.com/google/uuid\n            reason: \"gofrs' package is not go module\"\n\n  govet:\n    # Enable all analyzers.\n    # Default: false\n    enable-all: true\n    # Disable analyzers by name.\n    # Run `go tool vet help` to see all analyzers.\n    # Default: []\n    disable:\n    # - fieldalignment # too strict\n    # Settings per analyzer.\n    settings:\n      shadow:\n        # Whether to be strict about shadowing; can be noisy.\n        # Default: false\n        strict: false\n\n  lll:\n    # Max line length, lines longer will be reported.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option.\n    # Default: 120.\n    line-length: 120\n    # Tab width in spaces.\n    # Default: 1\n    tab-width: 1\n\n  nakedret:\n    # Make an issue if func has more lines of code than this setting, and it has naked returns.\n    # Default: 30\n    max-func-lines: 0\n\n  nestif:\n    # Minimal complexity of if statements to report.\n    # Default: 5\n    min-complexity: 20\n\n  nolintlint:\n    # Exclude following linters from requiring an explanation.\n    # Default: []\n    allow-no-explanation: [ funlen, gocognit, lll ]\n    # Enable to require an explanation of nonzero length after each nolint directive.\n    # Default: false\n    require-explanation: false\n    # Enable to require nolint directives to mention the specific linter being suppressed.\n    # Default: false\n    require-specific: true\n\n  revive:\n    # https://golangci-lint.run/usage/linters/#revive\n    rules:\n\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant\n      - name: add-constant\n        disabled: true\n        arguments:\n          - maxLitCount: \"3\"\n            allowStrs: '\"\"'\n            allowInts: \"0,1,2\"\n            allowFloats: \"0.0,0.,1.0,1.,2.0,2.\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#argument-limit\n      - name: argument-limit\n        disabled: false\n        arguments: [ 7 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#atomic\n      - name: atomic\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#banned-characters\n      - name: banned-characters\n        disabled: true\n        arguments: [ \"Ω\", \"Σ\", \"σ\", \"7\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bare-return\n      - name: bare-return\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports\n      - name: blank-imports\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bool-literal-in-expr\n      - name: bool-literal-in-expr\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#call-to-gc\n      - name: call-to-gc\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity\n      - name: cognitive-complexity\n        disabled: true\n        arguments: [ 7 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comment-spacings\n      - name: comment-spacings\n        disabled: true\n        arguments:\n          - mypragma\n          - otherpragma\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-naming\n      - name: confusing-naming\n        disabled: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-results\n      - name: confusing-results\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#constant-logical-expr\n      - name: constant-logical-expr\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument\n      - name: context-as-argument\n        disabled: false\n        arguments:\n          - allowTypesBefore: \"*testing.T,*github.com/user/repo/testing.Harness\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-keys-type\n      - name: context-keys-type\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cyclomatic\n      - name: cyclomatic\n        disabled: true\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#datarace\n      - name: datarace\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#deep-exit\n      - name: deep-exit\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#defer\n      - name: defer\n        disabled: false\n        arguments:\n          - [ \"call-chain\", \"loop\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#dot-imports\n      - name: dot-imports\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports\n      - name: duplicated-imports\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return\n      - name: early-return\n        disabled: false\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block\n      - name: empty-block\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines\n      - name: empty-lines\n        disabled: true # Covered by \"whitespace\" linter.\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-map-style\n      - name: enforce-map-style\n        disabled: true\n        arguments:\n          - \"make\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-naming\n      - name: error-naming\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-return\n      - name: error-return\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-strings\n      - name: error-strings\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#errorf\n      - name: errorf\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-header\n      - name: file-header\n        disabled: true\n#        arguments:\n#          - This is the text that must appear at the top of source files.\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#flag-parameter\n      - name: flag-parameter\n        disabled: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-result-limit\n      - name: function-result-limit\n        disabled: false\n        arguments: [ 4 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-length\n      - name: function-length\n        disabled: true\n        arguments: [ 10, 0 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#get-return\n      - name: get-return\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#identical-branches\n      - name: identical-branches\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#if-return\n      - name: if-return\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#increment-decrement\n      - name: increment-decrement\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow\n      - name: indent-error-flow\n        disabled: false\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-alias-naming\n      - name: import-alias-naming\n        disabled: false\n        arguments:\n          - \"^[a-z][a-z0-9]{0,}$\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#imports-blacklist\n      - name: imports-blacklist\n        disabled: false\n        arguments:\n          - \"crypto/md5\"\n          - \"crypto/sha1\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing\n      - name: import-shadowing\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit\n      - name: line-length-limit\n        disabled: true\n        arguments: [ 80 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-public-structs\n      - name: max-public-structs\n        disabled: true\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-parameter\n      - name: modifies-parameter\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-value-receiver\n      - name: modifies-value-receiver\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#nested-structs\n      - name: nested-structs\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#optimize-operands-order\n      - name: optimize-operands-order\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#package-comments\n      - name: package-comments\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range\n      - name: range\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-in-closure\n      - name: range-val-in-closure\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-address\n      - name: range-val-address\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#receiver-naming\n      - name: receiver-naming\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redundant-import-alias\n      - name: redundant-import-alias\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redefines-builtin-id\n      - name: redefines-builtin-id\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-of-int\n      - name: string-of-int\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-format\n      - name: string-format\n        disabled: false\n        arguments:\n          - - 'core.WriteError[1].Message'\n            - '/^([^A-Z]|$)/'\n            - must not start with a capital letter\n          - - 'fmt.Errorf[0]'\n            - '/(^|[^\\.!?])$/'\n            - must not end in punctuation\n          - - panic\n            - '/^[^\\n]*$/'\n            - must not contain line breaks\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#struct-tag\n      - name: struct-tag\n        arguments:\n          - \"json,inline\"\n          - \"bson,outline,gnu\"\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#superfluous-else\n      - name: superfluous-else\n        disabled: false\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-equal\n      - name: time-equal\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-naming\n      - name: time-naming\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-naming\n      - name: var-naming\n        disabled: false\n        arguments:\n          - [ \"ID\" ] # AllowList\n          - [ \"VM\" ] # DenyList\n          - - upperCaseConst: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-declaration\n      - name: var-declaration\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unconditional-recursion\n      - name: unconditional-recursion\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-naming\n      - name: unexported-naming\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return\n      - name: unexported-return\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error\n      - name: unhandled-error\n        disabled: false\n        arguments:\n          - \"fmt.Printf\"\n          - \"fmt.Fprintf\"\n          - \"fmt.Fprint\"\n          - \"fmt.Fprintln\"\n          - \"bytes.Buffer.Write\"\n          - \"bytes.Buffer.WriteByte\"\n          - \"bytes.Buffer.WriteString\"\n          - \"bytes.Buffer.WriteRune\"\n          - \"strings.Builder.WriteString\"\n          - \"strings.Builder.WriteRune\"\n          - \"strings.Builder.Write\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt\n      - name: unnecessary-stmt\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unreachable-code\n      - name: unreachable-code\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter\n      - name: unused-parameter\n        disabled: false\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-receiver\n      - name: unused-receiver\n        disabled: true\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#useless-break\n      - name: useless-break\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#waitgroup-by-value\n      - name: waitgroup-by-value\n        disabled: false\n\n  rowserrcheck:\n    # database/sql is always checked\n    # Default: []\n    packages:\n      - github.com/jmoiron/sqlx\n\n  tenv:\n    # The option `all` will run against whole test files (`_test.go`) regardless of method/function signatures.\n    # Otherwise, only methods that take `*testing.T`, `*testing.B`, and `testing.TB` as arguments are checked.\n    # Default: false\n    all: true\n\n\nlinters:\n  disable-all: true\n\n  enable:\n    ## enabled by default\n    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases\n    - gosimple # specializes in simplifying a code\n    - govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string\n    - ineffassign # detects when assignments to existing variables are not used\n    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks\n    - typecheck # like the front-end of a Go compiler, parses and type-checks Go code\n    - unused # checks for unused constants, variables, functions and types\n\n\n#    ## disabled by default\n    - asasalint # checks for pass []any as any in variadic func(...any)\n    - asciicheck # checks that your code does not contain non-ASCII identifiers\n    - bidichk # checks for dangerous unicode character sequences\n    - bodyclose # checks whether HTTP response body is closed successfully\n#    - copyloopvar # detects places where loop variables are copied.\n    - cyclop # checks function and package cyclomatic complexity\n    - dupl # tool for code clone detection\n    - durationcheck # checks for two durations multiplied together\n    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error\n    - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13\n#    - execinquery # checks query string in Query function which reads your Go src files and warning it finds (linter archived)\n    - exhaustive # checks exhaustiveness of enum switch statements\n    - forbidigo # forbids identifiers\n    - funlen # tool for detection of long functions\n    - gocheckcompilerdirectives\n    - gochecknoinits # checks that no init functions are present in Go code\n    - gocognit # computes and checks the cognitive complexity of functions\n    - goconst # finds repeated strings that could be replaced by a constant\n    - gocritic # provides diagnostics that check for bugs, performance and style issues\n    - gocyclo # computes and checks the cyclomatic complexity of functions\n    - godot # checks if comments end in a period\n    - gofumpt\n    - goimports # in addition to fixing imports, goimports also formats your code in the same style as gofmt\n    - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod\n    - gomodguard # allow and block lists linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations\n    - goprintffuncname # checks that printf-like functions are named with f at the end\n    - gosec # inspects source code for security problems\n    - grouper # analyzes expression groups\n    - lll # reports long lines\n    - loggercheck # checks key value pairs for common logger libraries (kitlog,klog,logr,zap)\n    - makezero # finds slice declarations with non-zero initial length\n    - mirror\n    - nakedret # finds naked returns in functions greater than a specified function length\n    - nestif # reports deeply nested if statements\n    - nilerr # finds the code that returns nil even if it checks that the error is not nil\n    - nilnil # checks that there is no simultaneous return of nil error and an invalid value\n    - noctx # finds sending http request without context.Context\n    - nolintlint # reports ill-formed or insufficient nolint directives\n    - nosprintfhostport # checks for misuse of Sprintf to construct a host with port in a URL\n    - perfsprint # checks for performance issues with fmt.Sprintf\n    - predeclared # finds code that shadows one of Go's predeclared identifiers\n    - promlinter # checks Prometheus metrics naming via promlint\n    - reassign # checks that package variables are not reassigned\n    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint\n    - sloglint # ensure consistent code style when using log/slog.\n    - stylecheck # is a replacement for golint\n    # - tagalign # check that struct tags are well aligned.\n    - tenv # detects using os.Setenv instead of t.Setenv since Go1.17\n    - testableexamples # checks if examples are testable (have an expected output)\n    - thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers\n    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes\n    - unconvert # removes unnecessary type conversions\n    - unparam # reports unused function parameters\n    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library\n    - wastedassign # finds wasted assignment statements.\n    - whitespace # detects leading and trailing whitespace\n\n    ## These three linters are disabled for now due to generics: https://github.com/golangci/golangci-lint/issues/2649\n    #- rowserrcheck # checks whether Err of rows is checked successfully  # Disabled because:  https://github.com/golangci/golangci-lint/issues/2649\n    #- sqlclosecheck # checks that sql.Rows and sql.Stmt are closed\n    #- wastedassign # finds wasted assignment statements\n\n\n    ## you may want to enable\n    #- decorder # checks declaration order and count of types, constants, variables and functions\n    #- exhaustruct # checks if all structure fields are initialized\n#    - gochecknoglobals # checks that no global variables exist\n    #- godox # detects FIXME, TODO and other comment keywords\n    #- goheader # checks is file header matches to pattern\n    #- gomnd # detects magic numbers\n    #- interfacebloat # checks the number of methods inside an interface\n    #- ireturn # accept interfaces, return concrete types\n    #- prealloc # [premature optimization, but can be used in some cases] finds slice declarations that could potentially be preallocated\n    #- varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope\n    #- wrapcheck # checks that errors returned from external packages are wrapped\n\n    ## disabled\n    #- containedctx # detects struct contained context.Context field\n    # - contextcheck # [too many false positives] checks the function whether use a non-inherited context\n    #- depguard # [replaced by gomodguard] checks if package imports are in a list of acceptable packages\n    #- dogsled # checks assignments with too many blank identifiers (e.g. x, _, _, _, := f())\n    #- dupword # [useless without config] checks for duplicate words in the source code\n    #- errchkjson # [don't see profit + I'm against of omitting errors like in the first example https://github.com/breml/errchkjson] checks types passed to the json encoding functions. Reports unsupported types and optionally reports occasions, where the check for the returned error can be omitted\n    #- forcetypeassert # [replaced by errcheck] finds forced type assertions\n    #- goerr113 # [too strict] checks the errors handling expressions\n    #- gofmt # [replaced by goimports] checks whether code was gofmt-ed\n    #- gofumpt # [replaced by goimports, gofumports is not available yet] checks whether code was gofumpt-ed\n    #- grouper # analyzes expression groups\n    #- importas # enforces consistent import aliases\n    #- maintidx # measures the maintainability index of each function\n    #- misspell # [useless] finds commonly misspelled English words in comments\n    #- nlreturn # [too strict and mostly code is not more readable] checks for a new line before return and branch statements to increase code clarity\n    #- paralleltest # [too many false positives] detects missing usage of t.Parallel() method in your Go test\n    #- tagliatelle # checks the struct tags\n    #- thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers\n    #- wsl # [too strict and mostly code is not more readable] whitespace linter forces you to use empty lines\n\n    ## deprecated\n    #- deadcode # [deprecated, replaced by unused] finds unused code\n    #- exhaustivestruct # [deprecated, replaced by exhaustruct] checks if all struct's fields are initialized\n    #- golint # [deprecated, replaced by revive] golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes\n    #- ifshort # [deprecated] checks that your code uses short syntax for if-statements whenever possible\n    #- interfacer # [deprecated] suggests narrower interface types\n    #- maligned # [deprecated, replaced by govet fieldalignment] detects Go structs that would take less memory if their fields were sorted\n    #- nosnakecase # [deprecated, replaced by revive var-naming] detects snake case of variable naming and function name\n    #- scopelint # [deprecated, replaced by exportloopref] checks for unpinned variables in go programs\n    #- structcheck # [deprecated, replaced by unused] finds unused struct fields\n    #- varcheck # [deprecated, replaced by unused] finds unused global variables and constants\n\n\nissues:\n  # Maximum count of issues with the same text.\n  # Set to 0 to disable.\n  # Default: 3\n  max-same-issues: 3\n\n  exclude-dirs:\n    # Skip jcolorenc because big chunks of it are copied from\n    # another encoder, and it uses a bunch of unsafe etc.\n    - cli/output/jsonw/internal/jcolorenc\n\n    # go-udiff is an internal fork of a package for which there\n    # is an open issue. Hopefully we can just rely on the original\n    # package at some point.\n    # See: https://github.com/aymanbagabas/go-udiff/issues/5\n    - libsq/core/diffdoc/internal/go-udiff\n\n    # This package is such a mess, and needs to be rewritten completely.\n    - cli/output/tablew/internal\n\n    # The tint package is a fork of an upstream package.\n    - libsq/core/lg/devlog/tint\n\n    # Fork of a GitHub gist.\n    - libsq/core/upgrademu\n\n\n    # Non-committed scratch dir\n    - scratch\n\n\n  exclude-rules:\n    - source: \"^//\\\\s*go:generate\\\\s\"\n      linters: [ lll ]\n    - source: \"(noinspection|TODO)\"\n      linters: [ godot ]\n    - source: \"//noinspection\"\n      linters: [ gocritic ]\n    - source: \"^\\\\s+if _, ok := err\\\\.\\\\([^.]+\\\\.InternalError\\\\); ok {\"\n      linters: [ errorlint ]\n    - path: \"_test\\\\.go\"\n      linters:\n        - govet\n        - bodyclose\n        - dupl\n        - funlen\n        - goconst\n        - gosec\n        - noctx\n        - wrapcheck\n"
        },
        {
          "name": ".goreleaser-darwin.yml",
          "type": "blob",
          "size": 0.599609375,
          "content": "before:\n  hooks:\n    - go mod tidy\n\ndist: dist-darwin\n\nbuilds:\n  - main: .\n    binary: sq\n    env:\n      - CGO_ENABLED=1\n    goos:\n      - darwin\n    goarch:\n      - amd64\n      - arm64\n    ldflags:\n      - -s -w\n      - -X github.com/neilotoole/sq/cli/buildinfo.Version=v{{ .Version }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Commit={{ .ShortCommit }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Timestamp={{ .Date }}\n    tags:\n      - sqlite_vtable\n      - sqlite_stat4\n      - sqlite_fts5\n      - sqlite_introspect\n      - sqlite_json\n      - sqlite_math_functions\n\narchives:\n  - format: binary\n"
        },
        {
          "name": ".goreleaser-linux-amd64.yml",
          "type": "blob",
          "size": 0.669921875,
          "content": "before:\n  hooks:\n    - go mod tidy\n\ndist: dist-linux\n\nbuilds:\n  -\n    main: .\n    binary: sq\n    flags:\n      - -a\n#      - -tags=netgo\n    env:\n      - CGO_ENABLED=1\n      - CGO_LDFLAGS=-static\n    goos:\n      - linux\n    goarch:\n      - amd64\n    ldflags:\n      - -s -w\n      - -X github.com/neilotoole/sq/cli/buildinfo.Version=v{{ .Version }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Commit={{ .ShortCommit }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Timestamp={{ .Date }}\n    tags:\n      - netgo\n      - sqlite_vtable\n      - sqlite_stat4\n      - sqlite_fts5\n      - sqlite_introspect\n      - sqlite_json\n      - sqlite_math_functions\narchives:\n  - format: binary\n"
        },
        {
          "name": ".goreleaser-linux-arm64.yml",
          "type": "blob",
          "size": 0.7509765625,
          "content": "before:\n  hooks:\n    - go mod tidy\n\ndist: dist-linux\n\nbuilds:\n  -\n    main: .\n    binary: sq\n    flags:\n      - -a\n    env:\n      - CGO_ENABLED=1\n      - CGO_LDFLAGS=-static\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n    goos:\n      - linux\n    goarch:\n      - arm64\n    ldflags:\n      - -extld=aarch64-linux-gnu-gcc\n      - -s -w\n      - -X github.com/neilotoole/sq/cli/buildinfo.Version=v{{ .Version }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Commit={{ .ShortCommit }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Timestamp={{ .Date }}\n    tags:\n      - netgo\n      - sqlite_vtable\n      - sqlite_stat4\n      - sqlite_fts5\n      - sqlite_introspect\n      - sqlite_json\n      - sqlite_math_functions\narchives:\n  - format: binary\n"
        },
        {
          "name": ".goreleaser-windows.yml",
          "type": "blob",
          "size": 0.5869140625,
          "content": "before:\n  hooks:\n    - go mod tidy\n\ndist: dist-windows\n\nbuilds:\n  - main: .\n    binary: sq\n    env:\n      - CGO_ENABLED=1\n    goos:\n      - windows\n    goarch:\n      - amd64\n    ldflags:\n      - -s -w\n      - -X github.com/neilotoole/sq/cli/buildinfo.Version=v{{ .Version }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Commit={{ .ShortCommit }}\n      - -X github.com/neilotoole/sq/cli/buildinfo.Timestamp={{ .Date }}\n    tags:\n      - sqlite_vtable\n      - sqlite_stat4\n      - sqlite_fts5\n      - sqlite_introspect\n      - sqlite_json\n      - sqlite_math_functions\narchives:\n  - format: binary\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 7.623046875,
          "content": "before:\n  hooks:\n    - go mod tidy\n    - ./.generate-completions.sh\n    - ./.manpages.sh\n\nbuilds:\n  - builder: prebuilt\n    goos:\n      - linux\n      - windows\n      - darwin\n    goarch:\n      - amd64\n      - arm64\n    goamd64:\n      - v1\n    ignore:\n      - goos: windows\n        goarch: arm64\n    prebuilt:\n      path: dist-{{ .Os }}/sq_{{ .Os }}_{{ .Arch }}{{ with .Amd64 }}_{{ . }}{{ end }}/sq{{ .Ext }}\n    binary: sq\n\narchives:\n  -\n#    name_template: \"{{.ProjectName}}-{{ .Version }}-{{.Os}}-{{.Arch}}\"\n    name_template: >-\n      {{.ProjectName}}-{{ .Version }}-{{- if eq .Os \"darwin\" }}macos{{- else }}{{ .Arch }}{{ end }}-{{.Arch}}\n#    replacements:\n#      darwin: macos\n    format_overrides:\n      - goos: windows\n        format: zip\n    files:\n      - README.md\n      - LICENSE\n      - CHANGELOG.md\n      - completions/*\n      - manpages/*\n\nchecksum:\n  name_template: 'checksums.txt'\nsnapshot:\n  name_template: \"{{ .Tag }}-snapshot\"\nchangelog:\n  skip: true\n\nrelease:\n  github:\n    owner: neilotoole\n    name: sq\n  draft: false\n  prerelease: auto\n\nbrews:\n  -\n    homepage: \"https://github.com/neilotoole/sq\"\n    description: \"sq data wrangler\"\n    license: MIT\n    repository:\n      owner: neilotoole\n      name: homebrew-sq\n\n    commit_author:\n      name: neilotoole\n      email: neilotoole@apache.org\n\n    install: |\n      bin.install \"sq\"\n      bash_completion.install \"completions/sq.bash\" => \"sq\"\n      zsh_completion.install \"completions/sq.zsh\" => \"_sq\"\n      fish_completion.install \"completions/sq.fish\"\n      man1.install \"manpages/sq.1.gz\"\n    test: |\n      system \"#{bin}/sq --version\"\n\nscoops:\n  - repository:\n      owner: neilotoole\n      name: sq\n    homepage: \"https://sq.io\"\n    description: \"sq data wrangler\"\n    license: MIT\n    commit_author:\n      name: neilotoole\n      email: neilotoole@apache.org\n\nnfpms:\n  -\n    formats:\n      - apk\n      - deb\n      - rpm\n      - termux.deb\n      - archlinux\n    vendor: \"neilotoole\"\n    maintainer: \"neilotoole <neilotoole@apache.org>\"\n    homepage: \"https://sq.io\"\n    description: \"sq data wrangler\"\n    license: \"MIT\"\n    contents:\n      - src: ./completions/sq.bash\n        dst: /usr/share/bash-completion/completions/sq\n        file_info:\n          mode: 0644\n      - src: ./completions/sq.fish\n        dst: /usr/share/fish/vendor_completions.d/sq.fish\n        file_info:\n          mode: 0644\n      - src: ./completions/sq.zsh\n        dst: /usr/share/zsh/vendor-completions/_sq\n        file_info:\n          mode: 0644\n      - src: ./manpages/sq.1.gz\n        dst: /usr/share/man/man1/sq.1.gz\n        file_info:\n          mode: 0644\n\nfuries:\n  # Upload deb and rpm to fury.io. Requires that envar $FURY_TOKEN be set.\n  - account: neilotoole\n\naurs:\n  -\n    # The package name.\n    #\n    # Defaults to the Project Name with a -bin suffix.\n    #\n    # Note that since this integration does not create a PKGBUILD to build from\n    # source, per Arch's guidelines.\n    # That said, GoReleaser will enforce a `-bin` suffix if it's not present.\n    name: sq-bin\n\n\n    # Your app's homepage.\n    # Default is empty.\n    homepage: \"https://sq.io\"\n\n    # Template of your app's description.\n    # Default is empty.\n    description: \"sq data wrangler\"\n\n    # The maintainers of the package.\n    # Defaults to empty.\n    maintainers:\n      - 'neilotoole <neilotoole@apache.org>'\n      - 'Diego Souza <diegosouza.br@gmail.com>'\n\n    # The contributors of the package.\n    # Defaults to empty.\n    contributors:\n      - 'neilotoole <neilotoole@apache.org>'\n\n    # SPDX identifier of your app's license.\n    # Default is empty.\n    license: \"MIT\"\n\n    # The SSH private key that should be used to commit to the Git repository.\n    # This can either be a path or the key contents.\n    #\n    # WARNING: do not expose your private key in the configuration file!\n    private_key: '{{ .Env.AUR_PRIVATE_KEY }}'\n\n    # The AUR Git URL for this package.\n    # Defaults to empty\n    # Publish is skipped if empty.\n    git_url: 'ssh://aur@aur.archlinux.org/sq-bin.git'\n\n    # Setting this will prevent goreleaser to actually try to commit the updated\n    # formula - instead, the formula file will be stored on the dist folder only,\n    # leaving the responsibility of publishing it to the user.\n    #\n    # If set to auto, the release will not be uploaded to the AUR repo\n    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1.\n    #\n    # Default is false.\n    skip_upload: false\n\n    # List of additional packages that the software provides the features of.\n    #\n    # Defaults to the project name.\n    provides:\n      - sq\n\n    # List of packages that conflict with, or cause problems with the package.\n    #\n    # Defaults to the project name.\n    conflicts:\n      - sq\n\n    # List of packages that must be installed to install this.\n    #\n    # Defaults to empty.\n#    depends:\n#      - curl\n\n    # List of packages that are not needed for the software to function,\n    # but provide additional features.\n    #\n    # Must be in the format `package: short description of the extra functionality`.\n    #\n    # Defaults to empty.\n#    optdepends:\n#      - 'wget: for downloading things'\n\n    # List of files that can contain user-made changes and should be preserved\n    # during package upgrades and removals.\n    #\n    # Default: empty.\n    # Since: v1.12\n    backup:\n#      - /etc/foo.conf # This should really include the sq config? ~/.config/sq/sq.yml\n\n    # Custom package instructions.\n    #\n    # Defaults to `install -Dm755 \"./PROJECT_NAME\" \"${pkgdir}/usr/bin/PROJECT_NAME\",\n    # which is not always correct.\n    #\n    # We recommend you override this, installing the binary, license and\n    # everything else your package needs.\n    package: |-\n      # bin\n      mkdir -p \"${pkgdir}/usr/bin\"\n      install -Dm755 \"./sq\" \"${pkgdir}/usr/bin/sq\"\n\n      # license\n      mkdir -p \"${pkgdir}/usr/share/licenses/sq\"\n      install -Dm644 \"./LICENSE\" \"${pkgdir}/usr/share/licenses/sq/LICENSE\"\n\n\n      # completions\n      mkdir -p \"${pkgdir}/usr/share/bash-completion/completions/\"\n      mkdir -p \"${pkgdir}/usr/share/zsh/site-functions/\"\n      mkdir -p \"${pkgdir}/usr/share/fish/vendor_completions.d/\"\n\n      install -Dm644 \"./completions/sq.bash\" \"${pkgdir}/usr/share/bash-completion/completions/sq\"\n      install -Dm644 \"./completions/sq.zsh\" \"${pkgdir}/usr/share/zsh/site-functions/_sq\"\n      install -Dm644 \"./completions/sq.fish\" \"${pkgdir}/usr/share/fish/vendor_completions.d/sq.fish\"\n\n      # docs\n      mkdir -p \"${pkgdir}/usr/share/doc/sq\"\n      install -Dm644 \"./README.md\" \"${pkgdir}/usr/share/doc/sq/README.md\"\n      mkdir -p \"${pkgdir}/usr/share/man/man1\"\n      install -Dm644 \"./manpages/sq.1.gz\" \"${pkgdir}/usr/share/man/man1/sq.1.gz\"\n\n    # Git author used to commit to the repository.\n    # Defaults are shown below.\n    commit_author:\n      name: neilotoole\n      email: neilotoole@apache.org\n\n    # Commit message template.\n    # Defaults to `Update to {{ .Tag }}`.\n#    commit_msg_template: \"pkgbuild updates\"\n\n    # If you build for multiple GOAMD64 versions, you may use this to choose which one to use.\n    # Defaults to `v1`.\n#    goamd64: v2\n\n    # The value to be passed to `GIT_SSH_COMMAND`.\n    # This is mainly used to specify the SSH private key used to pull/push to\n    # the Git URL.\n    #\n    # Defaults to `ssh -i {{ .KeyPath }} -o StrictHostKeyChecking=accept-new -F /dev/null`.\n#    git_ssh_command: 'ssh -i {{ .Env.AUR_PRIVATE_KEY }} -o StrictHostKeyChecking=accept-new -F /dev/null'\n#    git_ssh_command: 'ssh -i {{ .Env.KEY }} -o SomeOption=yes'\n\n    # Template for the url which is determined by the given Token\n    # (github, gitlab or gitea).\n    #\n    # Default depends on the client.\n#    url_template: \"http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}\"\n"
        },
        {
          "name": ".images",
          "type": "tree",
          "content": null
        },
        {
          "name": ".manpages.sh",
          "type": "blob",
          "size": 0.1240234375,
          "content": "#!/bin/sh\n# This script generates man pages.\nset -e\nrm -rf manpages\nmkdir manpages\ngo run . man | gzip -c -9 >manpages/sq.1.gz\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 0.021484375,
          "content": "external-sources=true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 49.3837890625,
          "content": "# CHANGELOG\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nBreaking changes are annotated with ☢️, and alpha/beta features with 🐥.\n\n## [v0.48.4] - 2024-11-24\n\n### Changed\n\n- Updated Go dependencies (was failing some security vulnerability scans).\n\n## [v0.48.3] - 2024-03-11\n\nSmall bugfix release.\n\n### Fixed\n\n- [#415]: The JSON ingester could fail due to a bug when a JSON blob landed on the edge\n  of a buffer.\n- The JSON ingester wasn't able to handle the case where a post-[sampling](https://sq.io/docs/config#ingestsample-size)\n  JSON field had a different kind from the kind determined by the sampling process. For example, let's say\n  the sample size was 1000, and the field `zip` was determined to be of kind `int`, because\n  values 0-1000 were all parseable as integers. But then the 1001st value was `BX123`, which\n  obviously is not an integer. `sq` will now see the non-integer value, and alter the ingest DB schema\n  to a compatible kind, e.g. `text`. This flexibility is powerful, but it does come at the cost of slower\n  ingest speed. But that's a topic for another release.\n\n## [v0.48.1] - 2024-03-07\n\nThis release features significant improvements to [`sq diff`](https://sq.io/docs/diff).\n\n### Added\n\n- Previously `sq diff --data` diffed every row, which could get crazy\n  with a large table. Now the command stops after N differences, where N is controlled by\n  the `--stop` (`-n`) flag, or the new config option [`diff.stop`](https://sq.io/docs/config#diffstop).\n  The default stop-after value is `3`; set to `0` to show all differences.\n\n  ```shell\n  # Stop on first difference\n  $ sq diff @prod.actor @staging.actor --data --stop 1\n  \n  # Stop after 5 differences, using the -n shorthand flag\n  $ sq diff @prod.actor @staging.actor --data -n5\n  ```\n\n- [#353]: The performance of `sq diff` has been significantly improved. There's still more to do.\n\n- Previously, `sq diff --data` compared the rendered (text) representation of each value. This could\n  lead to inaccurate results, for example with two timestamp values in different time zones, but the text\n  rendering omitted the time zone. Now, `sq diff --data` compares the raw values, not the rendered text.\n  Note in particular with time values that both time and location components are compared.\n\n- `sq` can now handle a SQLite DB on `stdin`. This is useful for testing, or for\n  working with SQLite DBs in a pipeline.\n\n  ```shell\n  $ cat sakila.db | sq '.actor | .first_name, .last_name'\n  ```\n\n  It's also surprisingly handy in daily life, because there are sneaky SQLite DBs\n  all around us. Let's see how many text messages I've sent and received over the years:\n\n  ```shell\n  $ cat ~/Library/Messages/chat.db | sq '.message | count'\n  count\n  215439\n  ```\n  I'm sure that number makes me an amateur with these millenials 👴🏻. \n  \n  > Note that you'll need to enable macOS [Full Disk Access](https://spin.atomicobject.com/search-imessage-sql/) to read the `chat.db` file.\n\n- `sq` now allows you to use `true` and `false` literals in queries. Which, in hindsight, does seem like a bit of\n  an oversight 😳. (Although previously you could usually get away with using `1` and `0`).\n\n  ```shell\n  $ sq '.people | where(.is_alive == false)'\n  name        is_alive\n  Kubla Khan  false\n  \n  $ sq '.people | where(.is_alive == true)'\n  name         is_alive\n  Kaiser Soze  true\n  ```\n\n### Changed\n\n- ☢️ Previously, `sq diff` only exited non-zero on an error. Now, `sq diff` exits `0` when no differences,\n  exits `1` if differences are found, and exits `2` on any error.\n  This aligns with the behavior of [GNU diff](https://www.gnu.org/software/diffutils/manual/):\n\n  ```text\n  Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.\n  ```\n\n- Minor fiddling with the color scheme for some command output.\n\n\n## [v0.47.4] - 2024-02-09\n\nPatch release with changes to flags.\nSee the earlier [`v0.47.0`](https://github.com/neilotoole/sq/releases/tag/v0.47.0)\nrelease for recent headline features.\n\n### Added\n\n- By default, `sq` prints source locations with the password redacted. This is a sensible default, but\n  there are legitimate reasons to access the unredacted connection string. Thus a new\n  global flag `--no-redact` (and a corresponding [`redact`](https://sq.io/docs/config#redact) config option).\n\n  ```shell\n  # Default behavior: password is redacted\n  $ sq src -v\n  @sakila/pg12  postgres  postgres://sakila:xxxxx@192.168.50.132/sakila\n  \n  # Unredacted\n  $ sq src -v --no-redact\n  @sakila/pg12  postgres  postgres://sakila:p_ssW0rd@192.168.50.132/sakila\n  ```\n\n- Previously, if an error occurred when [`verbose`](https://sq.io/docs/config#verbose) was true,\n  and [`error.format`](https://sq.io/docs/config#errorformat) was `text`, `sq` would print a stack trace \n  to `stderr`. This was poor default behavior, flooding the user terminal, so the default is now no stack trace.\n  To restore the previous behavior, use the new `-E` (`--error.stack`) flag, or set the [`error.stack`](https://sq.io/docs/config#errorstack) config option.\n\n\n### Changed\n\n- The [`--src.schema`](https://sq.io/docs/source#source-override) flag (as used in [`sq inspect`](https://sq.io/docs/cmd/inspect),\n  [`sq sql`](https://sq.io/docs/cmd/sql), and the root [`sq`](https://sq.io/docs/cmd/sq#override-active-schema) cmd)\n  now accepts `--src.schema=CATALOG.`. Note the `.` suffix on `CATALOG.`. This is in addition to the existing allowed forms `SCHEMA`\n  and `CATALOG.SCHEMA`. This new `CATALOG.` form is effectively equivalent to `CATALOG.CURRENT_SCHEMA`.\n  \n  ```shell\n  # Inspect using the default schema in the \"sales\" catalog\n  $ sq inspect --src.schema=sales. \n  ```\n\n- The [`--src.schema`](https://sq.io/docs/source#source-override) flag is now validated. Previously, if you provided a non-existing catalog or schema\n  value, `sq` would silently ignore it and use the defaults. This could mislead the user into thinking that\n  they were getting valid results from the non-existent catalog or schema. Now an error is returned.\n\n\n## [v0.47.3] - 2024-02-03\n\nMinor bug fix release. See the earlier [`v0.47.0`](https://github.com/neilotoole/sq/releases/tag/v0.47.0)\nrelease for recent headline features.\n\n### Fixed\n\n- Shell completion for `bash` only worked for top-level commands, not for subcommands, flags,\n  args, etc. This bug was due to an unnoticed behavior change in an imported library 🤦‍♂️. It's now fixed,\n  and tests have been added.\n\n### Changed\n\n- Shell completion now initially suggests only sources within the\n  [active group](https://sq.io/docs/source#groups). Previously, all sources were suggested,\n  potentially flooding the user with irrelevant suggestions. However, if the user\n  continues to input a source handle that is outside the active group, completion will\n  suggest all matching sources. This behavior is controlled\n  via the new config option [`shell-completion.group-filter`](https://sq.io/docs/config#shell-completiongroup-filter).\n\n## [v0.47.2] - 2024-01-29\n\nYet another morning-after-the-big-release issue, a nasty little one this time. \nSee the earlier [`v0.47.0`](https://github.com/neilotoole/sq/releases/tag/v0.47.0) release\nfor recent headline features.\n\n### Fixed\n\n- `sq` was failing to write config when there was no pre-existing config file. This was due to\n  a bug in the newly-introduced (as of `v0.47.0`) config locking mechanism. Fixed.\n\n\n## [v0.47.1] - 2024-01-29\n\nThis is a tiny bugfix release for a runtime issue on some Linux distros. See\nthe previous [`v0.47.0`](https://github.com/neilotoole/sq/releases/tag/v0.47.0) release\nfor recent headline features.\n\n### Fixed\n\n- `sq` [panicked](https://github.com/neilotoole/sq/actions/runs/7701355729/job/20987599862#step:3:383) on some Linux distros that don't include timezone data (`tzdata`). It's now\n  explicitly [imported](https://wawand.co/blog/posts/go-timezonedata-go115/).\n\n\n## [v0.47.0] - 2024-01-29\n\nThis is a significant release, focused on improving i/o, responsiveness,\nand performance. The headline features are [caching](https://sq.io/docs/source#cache)\nof [ingested](https://sq.io/docs/source#ingest) data for [document sources](https://sq.io/docs/source#document-source)\nsuch as CSV or Excel, and [download](https://sq.io/docs/source#download) caching for remote document sources.\nThere are a lot of under-the-hood changes, so please [open an issue](https://github.com/neilotoole/sq/issues/new/choose) if\nyou encounter any weirdness.\n\n### Added\n\n- Long-running operations (such as data [ingestion](https://sq.io/docs/source#ingest),\n  or file [download](https://sq.io/docs/source#download)) now result\n  in a progress bar being displayed. Display of the progress bar is controlled\n  by the new config options [`progress`](https://sq.io/docs/config#progress)\n  and [`progress.delay`](https://sq.io/docs/config#progressdelay). You can also use\n  the `--no-progress` flag to disable the progress bar.\n  - 👉 The progress bar is rendered on `stderr` and is always zapped from the terminal when command output begins.\n    It won't corrupt the output.\n- [#307]: Ingested [document sources](https://sq.io/docs/source#document-source) (such as\n  [CSV](https://sq.io/docs/drivers/csv) or [Excel](https://sq.io/docs/drivers/xlsx))\n  now make use of an [ingest](https://sq.io/docs/source#ingest) cache DB. Previously, ingestion\n  of document source data occurred  on each `sq` command. It is now a one-time cost; subsequent\n  use of the document source utilizes\n  the cache DB. Until, that is, the source document changes: then the ingest cache DB is invalidated and\n  ingested again. This is a significantly improved experience for large document sources.\n- There are several new commands to interact with the cache (although you shouldn't need to):\n  - [`sq cache enable`](https://sq.io/docs/cmd/cache-enable) and\n    [`sq cache disable`](https://sq.io/docs/cmd/cache-disable) control cache usage.\n    You can also instead use the new [`ingest.cache`](https://sq.io/docs/config#ingestcache)\n    config option.\n  - [`sq cache clear`](https://sq.io/docs/cmd/cache-clear) clears the cache.\n  - [`sq cache location`](https://sq.io/docs/cmd/cache-location) prints the cache location on disk.\n  - [`sq cache stat`](https://sq.io/docs/cmd/cache-stat) shows stats about the cache.\n  - [`sq cache tree`](https://sq.io/docs/cmd/cache-location) shows a tree view of the cache.\n- [#24]: The [download](https://sq.io/docs/source#download) mechanism for remote document sources (e.g. a CSV file at\n  [`https://sq.io/testdata/actor.csv`](https://sq.io/testdata/actor.csv)) has been completely\n  overhauled. Previously, `sq` would re-download the remote file on every command. Now, the\n  remote file is downloaded and [cached](https://sq.io/docs/source#cache) locally.\n  Subsequent `sq` invocations check for staleness of the cached download, and re-download if necessary.\n- As part of the download revamp, new config options have been introduced:\n  - [`http.request.timeout`](https://sq.io/docs/config#httprequesttimeout) is the timeout for the initial response from the server, and\n    [`http.response.timeout`](https://sq.io/docs/config#httpresponsetimeout) is the timeout for reading the entire response body. We separate\n    these two timeouts because it's possible that the server responds quickly, but then\n    for a large file, the download takes too long.\n  - [`https.insecure-skip-verify`](https://sq.io/docs/config#httpsinsecure-skip-verify) controls\n    whether HTTPS connections verify the server's certificate. This is useful for remote files served\n    with a self-signed certificate.\n  - [`download.cache`](https://sq.io/docs/config#downloadcache) controls whether remote files are\n    cached locally.\n  - [`download.refresh.ok-on-err`](https://sq.io/docs/config#downloadrefreshok-on-err)\n    controls whether `sq` should continue with a stale cached download if an error\n    occurred while trying to refresh the download. This is a sort\n    of \"Airplane Mode\" for remote document sources: `sq` continues with the cached download when\n    the network is unavailable.\n- There are two more new config options introduced as part of the above work.\n  - [`cache.lock.timeout`](https://sq.io/docs/config#cachelocktimeout) controls the time that\n    `sq` will wait for a lock on the cache DB. The cache lock is introduced for when you have\n    multiple `sq` commands running concurrently, and you want to avoid them stepping on each other.\n  - Similarly, [`config.lock.timeout`](https://sq.io/docs/config#configlocktimeout) controls the\n    timeout for acquiring the (newly-introduced) lock on `sq`'s config file. This helps prevent\n    issues with multiple `sq` processes mutating the config concurrently.\n- `sq`'s own [logs](https://sq.io/docs/config#logging) previously outputted in JSON\n  format. Now there's a new [`log.format`](https://sq.io/docs/config#logformat) config option\n  that permits setting the log format to `json` or `text`. The `text` format is more human-friendly, and\n  is now the default.\n\n### Changed\n\n- Ingestion performance for [`json`](https://sq.io/docs/drivers/json#json) and\n  [`jsonl`](https://sq.io/docs/drivers/json#jsonl) sources has been significantly improved.\n\n### Fixed\n\n- Opening a DB connection now correctly honors [`conn.open-timeout`](https://sq.io/docs/config#connopen-timeout).\n\n## [v0.46.1] - 2023-12-06\n\n### Fixed\n\n- `sq` sometimes failed to read from stdin if piped input was slow\n  to arrive. This is now fixed.\n\n## [v0.46.0] - 2023-11-22\n\n### Added\n\n- [#338]: While `sq` has had [`group_by`](https://sq.io/docs/query#group_by) for some time,\n  somehow the [`having`](https://sq.io/docs/query#having) mechanism was never implemented. That's fixed.\n\n  ```shell\n  $ sq '.payment | .customer_id, sum(.amount) | group_by(.customer_id) | having(sum(.amount) > 200)'\n  customer_id  sum(.amount)\n  526          221.55\n  148          216.54\n  ```\n\n- [#340]: The [`group_by`](https://sq.io/docs/query#group_by) function\n  now has a synonym `gb`, and [`order_by`](https://sq.io/docs/query#order_by) now has synonym `ob`.\n  These synonyms are experimental 🧪. The motivation is to reduce typing, especially the underscore (`_`)\n  in both function names, but it's not clear that the loss of clarity is worth it. Maybe synonyms\n  `group` and `order` might be better? Feedback welcome.\n\n  ```shell\n  # Previously\n  $ sq '.payment | .customer_id, sum(.amount) | group_by(.customer_id) | order_by(.customer_id)'\n  \n  # Now\n  $ sq '.payment | .customer_id, sum(.amount) | gb(.customer_id) | ob(.customer_id)'\n  ```\n- [#340]: [`sq inspect`](https://sq.io/docs/cmd/inspect): added flag shorthand `-C`\n  for `--catalogs` and `-S` for `--schemata`. These were the only `inspect`\n  flags without shorthand.\n\n## [v0.45.0] - 2023-11-21\n\n### Changed\n\n- [#335]: Previously, `sq` didn't handle decimal values correctly. It basically\n  shoved a decimal value into a `float` or `string` and hoped for the best.\n  [As is known](https://medium.com/@mayuribudake999/difference-between-decimal-and-float-eede050f6c9a),\n  floats are imprecise, and so we saw [unwanted behavior](https://github.com/neilotoole/sq/actions/runs/6932116521/job/18855333269#step:6:2345), e.g.\n\n  ```shell\n  db_type_test.go:194: \n        Error Trace:\tD:/a/sq/sq/drivers/sqlite3/db_type_test.go:194\n        Error:      \tNot equal: \n                      expected: \"77.77\"\n                      actual  : \"77.77000000000001\"\n  ```\n\n  Now, `sq` uses a dedicated [`Decimal`](https://github.com/shopspring/decimal) type end-to-end.\n  No precision is lost, and at the output end, the value is rendered with the correct precision.\n\n  There is a [proposal](https://github.com/golang/go/issues/30870) to add decimal support to\n  the Go [`database/sql`](https://pkg.go.dev/database/sql) package. If that happens, `sq` will happily\n  switch to that mechanism.\n  - 👉 A side effect of decimal support is that some output formats may now render decimal values\n    differently (i.e. correctly). In particular, Excel output should now render decimals as a number\n    (as opposed to a string), and with the precision defined in the database. Previously,\n    a database `NUMERIC(10,5)` value might have been rendered as `100.00`,\n    but will now accurately render `100.00000`.\n\n## [v0.44.0] - 2023-11-20\n\n### Added\n\n- New [SLQ](https://sq.io/docs/concepts#slq) function [`rownum()`](https://sq.io/docs/query#rownum) that returns the one-indexed\n  row number of the current record.\n\n  ```shell\n  $ sq '.actor | rownum(), .actor_id, .first_name | order_by(.first_name)'\n  rownum()  actor_id  first_name\n  1         71        ADAM\n  2         132       ADAM\n  3         165       AL\n  ```\n\n- [`sq inspect`](https://sq.io/docs/inspect) has two new flags:\n  - [`--schemata`](https://sq.io/docs/inspect#schemata): list the source's schemas\n    ```shell\n    $ sq inspect @sakila/pg12 --schemata -y\n    - schema: information_schema\n      catalog: sakila\n      owner: sakila\n    - schema: public\n      catalog: sakila\n      owner: sakila\n      active: true\n    ```\n  - [`--catalogs`](https://sq.io/docs/inspect#catalogs): list the source's catalogs\n    ```shell\n    $ sq inspect @sakila/pg12 --catalogs\n    CATALOG\n    postgres\n    sakila\n    ```\n\n### Fixed\n\n- [`sq version`](https://sq.io/docs/cmd/version) now honors option\n  [`format.datetime`](https://sq.io/docs/config#formatdatetime) when outputting build timestamp.\n- Fixed a fairly nasty bug that prevented correct rendering of SLQ functions nested inside\n  an expression.\n\n### Changed\n\n- The  `--exec` and `--query` flags for [`sq sql`](https://sq.io/docs/cmd/sql) were removed in\n  the preceding release ([v0.43.1]).\n  That was probably a bit hasty, especially because it's possible those flags _could_ be reintroduced\n  when the _query vs exec_ situation is figured out. So, those two flags are now restored, in\n  that their use won't cause an error, but they've been hidden from command help, and remain no-op.\n\n## [v0.43.1] - 2023-11-19\n\n### Added\n\n- Related to [#270], the output of [`sq inspect`](https://sq.io/docs/inspect) now includes the\n  source's catalog (in JSON and YAML output formats).\n\n### Fixed\n\n- MySQL driver didn't populate all expected values for [`sq inspect --overview`](https://sq.io/docs/inspect#source-overview).\n\n### Changed\n\n- ☢️ Removed unused `--exec` and `--query` flags from [`sq sql`](https://sq.io/docs/cmd/sql) command.\n\n## [v0.43.0] - 2023-11-18\n\n### Added\n\n- [#270]: Flag [`--src.schema`](https://sq.io/docs/cmd/sq/#override-active-schema) permits switching the source's schema (and catalog)\n  for the duration of the command. The flag is supported for the\n  [`sq`](https://sq.io/docs/cmd/sq#override-active-schema), [`sql`](https://sq.io/docs/cmd/sql/#active-source--schema)\n  and [`inspect`](https://sq.io/docs/inspect#override-active-schema) commands.\n- New SLQ functions [`catalog()`](https://sq.io/docs/query#catalog) and\n  [`schema()`](https://sq.io/docs/query#schema) return the catalog and schema of the DB connection.\n- The SLQ [`unique`](https://sq.io/docs/query#unique) function now has a synonym `uniq`.\n\n### Changed\n\n- `sq src --text` now outputs only the handle of the active source. Previously it\n  also printed the driver type and short location. Instead use `sq src --text --verbose` to\n  see those details.\n\n## [v0.42.1] - 2023-09-10\n\n### Fixed\n\n- [#308]: Fix to allow build on [32-bit systems](https://github.com/void-linux/void-packages/pull/45023).\n  Thanks [@icp](https://github.com/icp1994).\n\n\n## [v0.42.0] - 2023-08-22\n\n### Added\n\n- 🐥 [#279]: The SQLite [driver](https://sq.io/docs/drivers/sqlite) now has initial support\n  for several SQLite [extensions](https://sq.io/docs/drivers/sqlite#extensions)\n  baked in, including [Virtual Table](https://www.sqlite.org/vtab.html) and [FTS5](https://www.sqlite.org/fts5.html).\n  Note that this is an early access release of extensions support. Please [open an issue](https://github.com/neilotoole/sq/issues/new/choose) if\n  you discover something bad.\n\n## [v0.41.1] - 2023-08-20\n\n### Fixed\n\n- `sq version` was missing a newline in its output.\n\n## [v0.41.0] - 2023-08-20\n\nThis release is heavily focused on improvements to Microsoft Excel support.\nThe underlying Excel library has been changed from [`tealeg/xlsx`](https://github.com/tealeg/xlsx)\nto [`qax-os/excelize`](https://github.com/qax-os/excelize), largely because\n`tealeg/xlsx` is no longer actively maintained. Thus, both the [XLSX output writer](https://sq.io/docs/output/#xlsx)\nand the [XLSX driver](https://sq.io/docs/drivers/xlsx) have been rewritten. There should be some performance\nimprovements, but it's also possible that the rewrite introduced bugs. If you\ndiscover anything strange, please [open an issue](https://github.com/neilotoole/sq/issues/new/choose).\n\n### Added\n\n- [#99]: The [CSV](https://sq.io/docs/drivers/csv) and [XLSX](https://sq.io/docs/drivers/xlsx)\n  drivers can now handle duplicate header column names in the ingest data.\n  For example, given a CSV file:\n\n  ```csv\n  actor_id,first_name,actor_id\n  1,PENELOPE,1\n  2,NICK,2\n  ```\n\n  The columns will be renamed to:\n\n  ```csv\n  actor_id,first_name,actor_id_1\n  ```\n\n  The renaming behavior is controlled by a new option [`ingest.column.rename`](https://sq.io/docs/config#ingestcolumnrename)\n  This new option is effectively the ingest counterpart of the existing output option\n  [`result.column.rename`](https://sq.io/docs/config#resultcolumnrename).\n\n- [#191]: The [XLSX](https://sq.io/docs/drivers/xlsx) driver now [detects](https://sq.io/docs/drivers/xlsx#header-row) header rows, like\n  the CSV driver already does. Thus, you now typically don't need to specify\n  the `--ingest.header` flag for Excel files. However, the option remains available\n  in case `sq` can't figure it out for a particular file.\n\n- The Excel writer has three new config options for controlling date/time output.\n  Note that these format strings are distinct from [`format.datetime`](https://sq.io/docs/config#formatdatetime)\n  and friends, because Excel has its own format string mechanism.\n  - [`format.excel.datetime`](https://sq.io/docs/config#formatexceldatetime): Controls datetime format, e.g. `2023-08-03 16:07:01`.\n  - [`format.excel.date`](https://sq.io/docs/config#formatexceldatetime): Controls date-only format, e.g. `2023-08-03`.\n  - [`format.excel.time`](https://sq.io/docs/config#formatexceldatetime): Controls time-only format, e.g. `4:07 pm`.\n\n- The ingest [kind detectors](https://sq.io/docs/detect#kinds) (e.g. for `CSV` or `XLSX`)\n  now detect more [date & time formats](https://sq.io/docs/detect#datetime-formats) as `kind.Datetime`, `kind.Date`, and `kind.Time`.\n\n- If an error occurs when the output format is `text`, a stack trace is printed\n  to `stderr` when the command is executed with `--verbose` (`-v`).\n\n- There's a new option [`error.format`](https://sq.io/docs/config#errorformat) that controls error output format independent\n  of the main [`format`](https://sq.io/docs/config#format) option . The `error.format` value must be one of `text` or `json`.\n\n### Changed\n\n- ☢️ The default Excel date format has changed. Previously\n  the format was `11/9/89`, and now it is `1989-11-09`. The same applies\n  to datetimes, e.g. `11/9/1989  00:00:00` becomes `1989-11-09 00:00`.\n\n  This change is made to reduce ambiguity and confusion.\n  `sq` uses a [library](https://github.com/qax-os/excelize)\n  to interact with Excel files, and it seems that the library chooses a particular format\n  by default (`11/9/89`). There are several paths we could take here:\n\n  1. Interrogate the OS, and use the OS locale date format.\n  2. Stick with the library default `11/9/89`.\n  3. Pick a default other than `11/9/89`.\n\n  We pick the third option. The first option (locale-dependent)\n  is excluded because, as a general rule, we want `sq` to produce the same\n  output regardless of locale/system settings. We exclude the second option\n  because month/day confuses most of the world. Thus, we're left with picking a\n  default, and `1989-11-09` is the format used in\n  [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) and friends.\n\n  Whether this is the correct (standard?) approach is still unclear, and\n  feedback is welcome. However, the user can make use of the new config options\n  ([`format.excel.datetime`](https://sq.io/docs/config#formatexceldatetime) etc.)\n  to customize the format as they see fit.\n\n- The XLSX writer now outputs header rows in **bold text**.\n\n- ☢️ The XLSX writer now outputs blob (`bytes`) cell data as a base64-encoded string,\n  instead of raw bytes.\n\n### Fixed\n\n- Fixed bug where source-specific config wasn't being propagated.\n\n\n## [v0.40.0] - 2023-07-03\n\nThis release features a complete overhaul of the [`join`](https://sq.io/docs/query#joins)\nmechanism.\n\n### Added\n\n- [#277]: A table selector can now have an alias. This in and of itself is not\n  particularly useful, but it's a building block for [multiple joins](https://github.com/neilotoole/sq/issues/12).\n\n  ```shell\n  $ sq '@sakila | .actor:a | .a.first_name'\n  ```\n\n- New option `result.column.rename` that exposes a template used to rename\n  result set column names before display. The primary use case is to de-duplicate\n  columns names on a `SELECT * FROM tbl1 JOIN tbl2`, where `tbl1` and `tbl2`\n  have clashing column names ([docs](https://sq.io/docs/config#resultcolumnrename)).\n\n- [#157]: Previously only `join` (`INNER JOIN`) was available: now the rest of\n  the join types such as `left_outer_join`, `cross_join`, etc. are\n  implemented ([docs](https://sq.io/docs/query#join-types)).\n\n\n### Changed\n\n-  ☢️ [#12]: The table [join](https://sq.io/docs/query#joins) mechanism has been\n   completely overhauled. Now there's support for multiple joins. See [docs](https://sq.io/docs/query#joins).\n\n   ```shell\n   # Previously, only a single join was possible\n   $ sq '.actor, .film_actor | join(.actor_id)'\n   \n   # Now, an arbitrary number of joins\n   $ sq '.actor | join(.film_actor, .actor_id) | join(.film, .film_id)'\n   ```\n- ☢️ The alias for `--jsonl` (JSON Lines) has been changed to `-J`.\n\n### Fixed\n\n- Config options weren't being propagated correctly to all parts of the code.\n\n## [v0.39.1] - 2023-06-22\n\n### Fixed\n\n- Bug with `sq version` output on Windows.\n\n## [v0.39.0] - 2023-06-22\n\n### Added\n\n- [#263]: `sq version` now supports `--yaml` output.\n- [#263]: `sq version` now outputs host OS details with `--verbose`, `--json`\n  and `--yaml` flags. The motivation behind this is bug submission: we want\n  to know which OS/arch the user is on. E.g. for `sq version -j`:\n```json\n{\n  \"version\": \"v0.38.1\",\n  \"commit\": \"eedc11ec46d1f0e78628158cc6fd58850601d701\",\n  \"timestamp\": \"2023-06-21T11:41:34Z\",\n  \"latest_version\": \"v0.39.0\",\n  \"host\": {\n    \"platform\": \"darwin\",\n    \"arch\": \"arm64\",\n    \"kernel\": \"Darwin\",\n    \"kernel_version\": \"22.5.0\",\n    \"variant\": \"macOS\",\n    \"variant_version\": \"13.4\"\n  }\n}\n```\n- [#263]: The output of `sq inspect` and `sq inspect -v` has been refactored\n  significantly, and should now be easier to work with ([docs](https://sq.io/docs/inspect)).\n\n## [v0.38.1] - 2023-06-19\n\n### Fixed\n\n- [#261]: The JSON writer (`--json`) could get deadlocked when a record contained\n  a large amount of data, triggering an internal `Flush()` (which is mutex-guarded)\n  from within the mutex-guarded `WriteRecords()` method.\n\n## [v0.38.0] - 2023-06-18\n\nThis release has significant improvements (and breaking changes)\nto SLQ (`sq`'s query language).\n\n### Changed\n\n- ☢️ [#254]: The formerly-implicit \"WHERE\" mechanism now requires an explicit `where()` function.\n  This, alas, is a fairly big breaking change. But it's necessary to remove an ambiguity roadblock.\n  See discussion in the [issue](https://github.com/neilotoole/sq/issues/254).\n\n  ```shell\n  # Previously\n  $ sq '.actor | .actor_id <= 2'\n  \n  # Now\n  $ sq '.actor | where(.actor_id <= 2)'\n  ```\n- [#256]: Column-only queries are now possible. This has the neat side effect\n  that `sq` can now be used as a calculator.\n\n  ```shell\n  $ sq 1+2\n  1+2\n  3\n  ```\n  You may want to use `--no-header` (`-H`) when using `sq` as a calculator.\n\n  ```shell\n  $ sq -H 1+2\n  3\n  $ sq -H '(1+2)*3'\n  9\n  ```\n\n### Fixed\n\n- Literals can now be selected ([docs](https://sq.io/docs/query#select-literal)).\n\n  ```shell\n  $ sq '.actor | .first_name, \"X\":middle_name, .last_name | .[0:2]'\n  first_name  middle_name  last_name\n  PENELOPE    X            GUINESS\n  NICK        X            WAHLBERG\n  ```\n- Lots of expressions that previously failed badly, now work.\n\n  ```shell\n  $ sq '.actor | .first_name, (1+2):addition | .[0:2]'\n  first_name  addition\n  PENELOPE    3\n  NICK        3\n  ```\n- [#258]: Column aliases can now be arbitrary strings, instead of only a\n  valid identifier.\n\n  ```shell\n  # Previously only valid identifier allowed\n  $ sq '.actor | .first_name:given_name | .[0:2]'\n  given_name\n  PENELOPE\n  NICK\n  \n  # Now, any arbitrary string can be used\n  $ sq '.actor | .first_name:\"Given Name\" | .[0:2]'\n  Given Name\n  PENELOPE\n  NICK\n  ```\n\n## [v0.37.1] - 2023-06-15\n\n### Fixed\n\n- [#252]: Handle `*uint64` returned from DB.\n\n## [v0.37.0] - 2023-06-13\n\n### Added\n\n- [#244]: Shell completion for `sq add LOCATION`. See [docs](https://sq.io/docs/source#location-completion).\n\n## [v0.36.2] - 2023-05-27\n\n### Changed\n\n- ☢️ [Proprietary database functions](https://sq.io/docs/query#proprietary-functions) are now\n  invoked by prefixing the function name with an underscore. For example:\n  ```shell\n  # mysql \"date_format\" func\n  $ sq '@sakila/mysql | .payment | _date_format(.payment_date, \"%m\")'\n  \n  # Postgres \"date_trunc\" func\n  $ sq '@sakila/postgres | .payment | _date_trunc(\"month\", .payment_date)'\n  ```\n\n## [v0.36.1] - 2023-05-26\n\n### Fixed\n\n- `sq diff`: Renamed `--count` flag to `--counts` as intended.\n\n## [v0.36.0] - 2023-05-25\n\nThe major feature is the long-gestating [`sq diff`](https://sq.io/docs/diff).\n\n### Added\n\n- [#229]: `sq diff` compares two sources, or tables.\n- `sq inspect --dbprops` is a new mode that returns only the DB properties.\n  Relatedly, the properties mechanism is now implemented for all four supported\n  DB types (previously, it was only implemented for Postgres and MySQL).\n- [CSV](https://sq.io/docs/output#csv-tsv) format now colorizes output.\n\n### Changed\n\n- `sq inspect -v` previously returned DB properties in a field named `db_variables`.\n  This field has been renamed to `db_properties`. The renaming reflects the fact\n  that some of those properties aren't really variables in the sense that they\n  can be modified (e.g. DB server version or such).\n- The structure of the former `db_variables` (now `db_properties`) field has\n  changed. Previously it was an array of `{\"name\": \"XX\", \"value\": \"YY\"}` values,\n  but now is a map, where the keys are strings, and the values can be either\n  a scalar (`bool`, `int`, `string`, etc.), or a nested value such as an array\n  or map. This change is made because some databases (e.g. SQLite) feature\n  complex data in some property values.\n- CSV format now renders byte sequences as `[777 bytes]` instead of dumping\n  the raw bytes.\n- ☢️ TSV format (`--tsv`) no longer has a shorthand form `-T`. Apparently that\n  shorthand wasn't used much, and `-T` is needed elsewhere.\n- ☢️ Likewise, `--xml` no longer has shorthand `-X`. And `--markdown` has lost alias `--md`.\n- In addition to the format flags `--text`, `--json`, etc., there is now\n  a `--format=FORMAT` flag, e.g. `--format=json`. This will allow `sq` to\n  continue to expand the number of output formats, without needing to have\n  a dedicated flag for each format.\n\n### Fixed\n\n- `sq config edit @source` was failing to save any edits.\n\n## [v0.35.0] - 2023-05-10\n\n### Added\n\n- [#8]: Results can now be output in [YAML](https://sq.io/docs/output#yaml).\n\n### Fixed\n\n- `sq config get OPT --text` now prints only the value, not `KEY VALUE`.\n  If you want to see key and value, consider using `--yaml`, or `--text --verbose`.\n\n\n## [v0.34.2] - 2023-05-08\n\n### Fixed\n\n- Both `--markdown` and the alias `--md` are now supported.\n\n## [v0.34.1] - 2023-05-07\n\n### Fixed\n\n- Fixed a minor issue where `sq ls -jv` and `sq ls -yv` produced no output\n  if config contained no explicitly set options.\n\n## [v0.34.0] - 2023-05-07\n\nThis release significantly overhauls `sq`'s config mechanism ([#199]).\nFor an overview, see the new [config docs](https://sq.io/docs/config).\n\nAlas, this release has several minor breaking changes ☢️.\n\n### Added\n\n- `sq config ls` shows config.\n- `sq config get` gets individual config option.\n- `sq config set` sets config values.\n- `sq config edit` edits config.\n  - Editor can be specified via `$EDITOR` or `$SQ_EDITOR`.\n- `sq config location` prints the location of the config dir.\n- `--config` flag is now honored globally.\n- Many more knobs are exposed in config.\n- Logging is much more configurable. There are new knobs:\n  ```shell\n  $ sq config set log true\n  $ sq config set log.level INFO\n  $ sq config set log.file /var/log/sq.log\n  ```\n  There are also equivalent flags  (`--log`, `--log.file` and `--log.level`) and\n  envars (`SQ_LOG`, `SQ_LOG_FILE` and `SQ_LOG_LEVEL`).\n- Several more commands support YAML output:\n  - [`sq group`](https://sq.io/docs/cmd/group)\n  - [`sq ls`](https://sq.io/docs/cmd/ls)\n  - [`sq mv`](https://sq.io/docs/cmd/mv)\n  - [`sq rm`](https://sq.io/docs/cmd/rm)\n  - [`sq src`](https://sq.io/docs/cmd/src)\n\n\n### Changed\n\n- The structure of `sq`'s config file (`sq.yml`) has changed. The config\n  file is automatically upgraded when using the new version.\n- The default location of the `sq` log file has changed. The new location\n  is platform-dependent. Use `sq config get log.file -v` to view the location,\n  or `sq config set log.file /path/to/sq.log` to set it.\n- ☢️ Envar `SQ_CONFIG` replaces `SQ_CONFIGDIR`.\n- ☢️ Envar `SQ_LOG_FILE` replaces `SQ_LOGFILE`.\n- ☢️ Format flag `--table` is renamed to `--text`. This is changed because while the\n  output is mostly in table format, sometimes it's just plain text. Thus\n  `table` was not quite accurate.\n- ☢️ The flag to explicitly specify a driver when piping input to `sq` has been\n  renamed from `--driver` to `--ingest.driver`. This change aligns\n  the naming of the ingest options and reduces ambiguity.\n  ```shell\n  # previously\n  $ cat mystery.data | sq --driver=csv '.data'\n  \n  # now\n  $ cat mystery.data | sq --ingest.driver=csv '.data'\n  ```\n- ☢️ `sq add` no longer has the generic `--opts x=y` mechanism. This flag was\n  ambiguous and confusing. Instead, use explicit option flags.\n  ```shell\n  # previously\n  $ sq add ./actor.csv --opts=header=false\n  \n  # now\n  $ sq add ./actor.csv --ingest.header=false\n   ```\n- ☢️ The short form of the `sq add --handle` flag has been changed from `-h` to\n  `-n`. While this is not ideal, the `-h` shorthand is already in use everywhere\n  else as the short form of `--header`.\n    ```shell\n  # previously\n  $ sq add ./actor.csv -h @actor\n  \n  # now\n  $ sq add ./actor.csv -n @actor\n   ```\n- ☢️ The `--pretty` flag has been removed. Its only previous use was with the\n  `json` format, where if `--pretty=false` would output the JSON in compact form.\n  To better align with jq, there is now a `--compact` / `-c` flag that behaves\n  identically to jq.\n- ☢️ Because of the above `--compact` / `-c` flag, the short form of the `--csv`\n  flag is changing from `-c` to `-C`. It's an unfortunate situation, but alignment\n  with jq's behavior is an overarching principle that justifies the change.\n\n## [v0.33.0] - 2023-04-15\n\nThe headline feature is [source groups](https://sq.io/docs/source#groups).\nThis is the biggest change to the `sq` CLI in some time, and should\nmake working with lots of sources much easier.\n\n### Added\n\n- [#192]: `sq` now has a mechanism to group sources. A source handle can\n  now be scoped. For example, instead of `@sakila_prod`, `@sakila_staging`, etc,\n  you can use `@prod/sakila`, `@staging/sakila`. Use `sq group prod` to\n  set the active group (which `sq ls` respects). See [docs](https://sq.io/docs/source#groups).\n- `sq group GROUP` sets the active group to `GROUP`.\n- `sq group` returns the active group (default is `/`, the root group).\n- `sq ls GROUP` lists the sources in `GROUP`.\n- `sq ls --group` (or `sq ls -g`) lists all groups.\n- `sq mv` moves/renames sources and groups.\n\n### Changed\n\n- `sq ls` now shows the active item in a distinct color. It no longer adds\n  an asterisk to the active item.\n- `sq ls` now sorts alphabetically when using `--table` format.\n- `sq ls` now shows the sources in the active group only. But note that\n  the default active group is `/` (the root group), so the default behavior\n  of `sq ls` is the same as before.\n- `sq add hello.csv` will now generate the handle `@hello` instead of `@hello_csv`.\n  On a second invocation, it will return `@hello1` instead of `@hello_csv_1`. Why\n  this change? Well, with the availability of the source group mechanism, the `_` character\n  in the handle somehow looked ugly. And more importantly, `_` is a relative pain to type.\n- `sq ping` has changed to support groups. Instead of `sq ping --all`, you can\n  do `sq ping GROUP`, e.g. `sq ping /`.\n\n## [v0.32.0] - 2023-04-09\n\n### Added\n\n- [#187]: For `csv` sources, `sq` will now try to auto-detect if the CSV file\n  has a header row or not. Previously, this needed to be explicitly specified\n  via an awkward syntax:\n\n  ```shell\n  $ sq add ./actor.csv --opts=header=true\n  ````\n  This change makes working with CSV files significantly lower friction.\n  A command like the below now almost always works as expected:\n\n  ```shell\n  $ cat ./actor.csv | sq .data\n  ```\n  Support for Excel/XLSX header detection is in [#191].\n\n### Fixed\n\n- `sq` is now better at detecting the (data) kind of CSV fields. It now more\n  accurately distinguishes between `Decimal` and `Int`, and knows how to\n  handle `Datetime`.\n\n- [#189]: `sq` now treats CSV empty fields as `NULL`.\n\n## [v0.31.0] - 2023-03-08\n\n### Added\n\n- [#173]: Predefined variables via `--arg`\n  flag ([docs](https://sq.io/docs/query#predefined-variables)):\n  ```shell\n  $ sq --arg first TOM '.actor | .first_name == $first'\n  ```\n\n### Changes\n- Use `--md` instead of `--markdown` for outputting Markdown.\n\n### Fixed\n\n- [#185]: `sq inspect` now better handles \"too many connections\" situations.\n- `go.mod`: Moved to `jackc/pgx` `v5`.\n- Refactor: switched to [`slog`](https://pkg.go.dev/golang.org/x/exp/slog) logging library.\n\n## [v0.30.0] - 2023-03-27\n\n### Added\n\n- [#164]: Implemented `unique` function ([docs](https://sq.io/docs/query#unique)):\n  ```shell\n  $ sq '.actor | .first_name | unique'\n  ```\n  This is equivalent to:\n  ```sql\n  SELECT DISTINCT first_name FROM actor\n  ```\n- Implemented `count_unique` function ([docs](https://sq.io/docs/query#count_unique)).\n  ```shell\n  $ sq '.actor | count_unique(.first_name)'\n  ```\n\n### Changed\n\n- The `count` function has been changed ([docs](https://sq.io/docs/query#count))\n  - Added no-args version: `.actor | count` equivalent to `SELECT COUNT(*) AS \"count\" FROM \"actor\"`.\n  - ☢️ The \"star\" version (`.actor | count(*)`) is no longer supported; use the\n    naked version instead.\n- Function columns are now named according to the `sq` token, not the SQL token.\n  ```shell\n  # previous behavior\n  $ sq '.actor | max(.actor_id)'\n  max(\"actor_id\")\n  200\n  \n  # now\n  $ sq '.actor | max(.actor_id)'\n  max(.actor_id)\n  200\n  ```\n\n## [v0.29.0] - 2023-03-26\n\n### Added\n\n- [#162]: `group_by` now accepts [function arguments](https://sq.io/docs/query#group_by).\n\n### Changed\n\n- Renamed `groupby` to `group_by` to match jq.\n- Renamed `orderby` to `order_by` to match jq.\n\n## [v0.28.0] - 2023-03-26\n\n### Added\n\n- [#160]: Use `groupby()` to group results. See [query guide](https://sq.io/docs/query#group_by).\n\n## [v0.27.0] - 2023-03-25\n\n### Added\n\n- [#158]: Use `orderby()` to order results. See [query guide](https://sq.io/docs/query#order_by).\n\n## [v0.26.0] - 2023-03-22\n\n### Added\n\n- [#98]: Whitespace is now allowed in SLQ selector names. You can\n  do `@sakila | .\"film actor\" | .\"actor id\"`.\n\n### Fixed\n\n- [#155]: `sq inspect` now populates `schema` field in JSON for MySQL,\n  SQLite, and SQL Server (Postgres already worked).\n\n## [v0.25.1] - 2023-03-19\n\n### Fixed\n\n- [#153]: Improved formatting of text table with long lines.\n\n## [v0.25.0] - 2023-03-19\n\n### Added\n\n- [#15]: Column Aliases. You can now specify an alias for a column (or column expression\n  such as a function). For example: `sq '.actor | .first_name:given_name`, or `sq .actor | count(*):quantity`.\n- [#151]: `sq add` now has a `--active` flag, which immediately sets the new source\n  as the active source.\n\n## [v0.24.4] - 2023-03-15\n\n### Fixed\n\n- Fixed typos in `sq sql` command help.\n\n## [v0.24.3] - 2023-03-14\n\n### Added\n\n- When a CSV source has explicit column names (via `--opts cols=A,B,C`), `sq` now verifies\n  that the CSV data record field count matches the number of explicit columns.\n\n## [v0.24.2] - 2023-03-13\n\n### Fixed\n\n- [#142]: Improved error handling when Postgres `current_schema()` is unavailable.\n\n## [v0.24.1] - 2023-03-11\n\n### Fixed\n\n- [#144]: Handle corrupted config active source.\n\n## [v0.24.0] - 2022-12-31\n\n### Added\n\n- `sq ping` now respects `--json` flag.\n\n### Fixed\n\n- Improved handling of file paths on Windows.\n\n## [v0.23.0] - 2022-12-31\n\n### Added\n\n- `sq ls` now respects `--json` flag.\n- `sq rm` now respects `--json` flag.\n- `sq add` now respects `--json` flag.\\`\n- CI pipeline now verifies install packages after publish.\n\n### Changed\n\n- `sq rm` can delete multiple sources.\n- `sq rm` doesn't print output unless `--verbose`.\n- Redacted snipped is now `xxxxx` instead of `****`, to match stdlib `url.URL.Redacted()`.\n\n### Fixed\n\n- Fixed crash on Fedora systems (needed `--tags=netgo`).\n\n## [v0.21.3] - 2022-12-30\n\n### Added\n\n- `sq version` respects `--json` flag.\n- `sq version` respects `--verbose` flag.\n- `sq version` shows `latest_version` info when `--verbose` and there's a newer version available.\n\n### Changed\n\n- `sq version` shows less info when `--verbose` is not set.\n\n## [v0.20.0] - 2022-12-29\n\n### Added\n\n- `sq` now generates manpages (and installs them).\n\n## [v0.19.0] - 2022-12-29\n\n### Added\n\n- Installer for [Arch Linux](https://archlinux.org),\n  via [Arch User Repository](https://aur.archlinux.org).\n\n## [v0.18.2] - 2022-12-25\n\n### Added\n\n- The build pipeline now produces `.apk` packages for [Alpine Linux](https://www.alpinelinux.org),\n  and `install.sh` has been updated accordingly. However, the `.apk` files\n  are not yet published to a repository, so it's necessary to run `apk` against\n  the downloaded `.apk` file (`install.sh` does this for you).\n\n## [v0.18.0] - 2022-12-24\n\n### Added\n\n- [#95]: `sq add` now has a `--password` (`-p`) flag that prompts the user for the data source\n  password, instead of putting it in the location string. It will also read from stdin\n  if there's input there.\n\n## [v0.17.0] - 2022-12-23\n\n### Changed\n\n- More or less every `go.mod` dependency has been updated to latest. This includes\n  drivers for `sqlite` and `sqlserver`. The driver updates led to some broken\n  things, which have been fixed.\n\n## [v0.16.1] - 2022-12-23\n\n### Fixed\n\n- [#123]: Shell completion is better behaved when a source is offline.\n\n## [v0.16.0] - 2022-12-16\n\n### Added\n\n- `--verbose` flag is now global\n- `install.sh` install script.\n\n### Changed\n\n- Improved GH workflow\n- `sq inspect` shows less output by default (use `-v` to restore previous behavior)\n\n### Fixed\n\n- `sq inspect` can now deal with Postgres sources that have null values for constraint fields\n\n## [v0.15.11] - 2022-11-06\n\n### Changed\n\n- Yet more changes to GitHub workflow.\n\n## [v0.15.4] - 2021-09-18\n\n### Changed\n\n- Bug fixes\n\n## [v0.15.3] - 2021-03-13\n\n### Changed\n\n- [#91]: MySQL driver options no longer stripped\n\n## [v0.15.2] - 2021-03-08\n\n### Changed\n\n- [#89]: Bug with SQL generated for joins.\n\n[#8]: https://github.com/neilotoole/sq/issues/8\n[#12]: https://github.com/neilotoole/sq/issues/12\n[#15]: https://github.com/neilotoole/sq/issues/15\n[#24]: https://github.com/neilotoole/sq/issues/24\n[#89]: https://github.com/neilotoole/sq/pull/89\n[#91]: https://github.com/neilotoole/sq/pull/91\n[#95]: https://github.com/neilotoole/sq/issues/93\n[#98]: https://github.com/neilotoole/sq/issues/98\n[#99]: https://github.com/neilotoole/sq/issues/99\n[#123]: https://github.com/neilotoole/sq/issues/123\n[#142]: https://github.com/neilotoole/sq/issues/142\n[#144]: https://github.com/neilotoole/sq/issues/144\n[#151]: https://github.com/neilotoole/sq/issues/151\n[#153]: https://github.com/neilotoole/sq/issues/153\n[#155]: https://github.com/neilotoole/sq/issues/155\n[#157]: https://github.com/neilotoole/sq/issues/157\n[#158]: https://github.com/neilotoole/sq/issues/158\n[#160]: https://github.com/neilotoole/sq/issues/160\n[#162]: https://github.com/neilotoole/sq/issues/162\n[#164]: https://github.com/neilotoole/sq/issues/164\n[#173]: https://github.com/neilotoole/sq/issues/173\n[#185]: https://github.com/neilotoole/sq/issues/185\n[#187]: https://github.com/neilotoole/sq/issues/187\n[#189]: https://github.com/neilotoole/sq/issues/189\n[#191]: https://github.com/neilotoole/sq/issues/191\n[#192]: https://github.com/neilotoole/sq/issues/192\n[#199]: https://github.com/neilotoole/sq/issues/199\n[#229]: https://github.com/neilotoole/sq/issues/229\n[#244]: https://github.com/neilotoole/sq/issues/244\n[#252]: https://github.com/neilotoole/sq/issues/252\n[#254]: https://github.com/neilotoole/sq/issues/254\n[#256]: https://github.com/neilotoole/sq/issues/256\n[#258]: https://github.com/neilotoole/sq/issues/258\n[#261]: https://github.com/neilotoole/sq/issues/261\n[#263]: https://github.com/neilotoole/sq/issues/263\n[#270]: https://github.com/neilotoole/sq/issues/270\n[#277]: https://github.com/neilotoole/sq/issues/277\n[#279]: https://github.com/neilotoole/sq/issues/279\n[#307]: https://github.com/neilotoole/sq/issues/307\n[#308]: https://github.com/neilotoole/sq/pull/308\n[#335]: https://github.com/neilotoole/sq/issues/335\n[#338]: https://github.com/neilotoole/sq/issues/338\n[#340]: https://github.com/neilotoole/sq/pull/340\n[#353]: https://github.com/neilotoole/sq/issues/353\n[#415]: https://github.com/neilotoole/sq/issues/415\n\n\n[v0.15.2]: https://github.com/neilotoole/sq/releases/tag/v0.15.2\n[v0.15.3]: https://github.com/neilotoole/sq/compare/v0.15.2...v0.15.3\n[v0.15.4]: https://github.com/neilotoole/sq/compare/v0.15.3...v0.15.4\n[v0.15.11]: https://github.com/neilotoole/sq/compare/v0.15.4...v0.15.11\n[v0.16.0]: https://github.com/neilotoole/sq/compare/v0.15.11...v0.16.0\n[v0.16.1]: https://github.com/neilotoole/sq/compare/v0.16.0...v0.16.1\n[v0.17.0]: https://github.com/neilotoole/sq/compare/v0.16.1...v0.17.0\n[v0.18.0]: https://github.com/neilotoole/sq/compare/v0.17.0...v0.18.0\n[v0.18.2]: https://github.com/neilotoole/sq/compare/v0.18.0...v0.18.2\n[v0.19.0]: https://github.com/neilotoole/sq/compare/v0.18.2...v0.19.0\n[v0.20.0]: https://github.com/neilotoole/sq/compare/v0.19.0...v0.20.0\n[v0.21.3]: https://github.com/neilotoole/sq/compare/v0.20.0...v0.21.3\n[v0.23.0]: https://github.com/neilotoole/sq/compare/v0.21.3...v0.23.0\n[v0.24.0]: https://github.com/neilotoole/sq/compare/v0.23.0...v0.24.0\n[v0.24.1]: https://github.com/neilotoole/sq/compare/v0.24.0...v0.24.1\n[v0.24.2]: https://github.com/neilotoole/sq/compare/v0.24.1...v0.24.2\n[v0.24.3]: https://github.com/neilotoole/sq/compare/v0.24.2...v0.24.3\n[v0.24.4]: https://github.com/neilotoole/sq/compare/v0.24.3...v0.24.4\n[v0.25.0]: https://github.com/neilotoole/sq/compare/v0.24.4...v0.25.0\n[v0.25.1]: https://github.com/neilotoole/sq/compare/v0.25.0...v0.25.1\n[v0.26.0]: https://github.com/neilotoole/sq/compare/v0.25.1...v0.26.0\n[v0.27.0]: https://github.com/neilotoole/sq/compare/v0.26.0...v0.27.0\n[v0.28.0]: https://github.com/neilotoole/sq/compare/v0.27.0...v0.28.0\n[v0.29.0]: https://github.com/neilotoole/sq/compare/v0.28.0...v0.29.0\n[v0.30.0]: https://github.com/neilotoole/sq/compare/v0.29.0...v0.30.0\n[v0.31.0]: https://github.com/neilotoole/sq/compare/v0.30.0...v0.31.0\n[v0.32.0]: https://github.com/neilotoole/sq/compare/v0.31.0...v0.32.0\n[v0.33.0]: https://github.com/neilotoole/sq/compare/v0.32.0...v0.33.0\n[v0.34.0]: https://github.com/neilotoole/sq/compare/v0.33.0...v0.34.0\n[v0.34.1]: https://github.com/neilotoole/sq/compare/v0.34.0...v0.34.1\n[v0.34.2]: https://github.com/neilotoole/sq/compare/v0.34.1...v0.34.2\n[v0.35.0]: https://github.com/neilotoole/sq/compare/v0.34.2...v0.35.0\n[v0.36.0]: https://github.com/neilotoole/sq/compare/v0.35.0...v0.36.0\n[v0.36.1]: https://github.com/neilotoole/sq/compare/v0.36.0...v0.36.1\n[v0.36.2]: https://github.com/neilotoole/sq/compare/v0.36.1...v0.36.2\n[v0.37.0]: https://github.com/neilotoole/sq/compare/v0.36.2...v0.37.0\n[v0.37.1]: https://github.com/neilotoole/sq/compare/v0.37.0...v0.37.1\n[v0.38.0]: https://github.com/neilotoole/sq/compare/v0.37.1...v0.38.0\n[v0.38.1]: https://github.com/neilotoole/sq/compare/v0.38.0...v0.38.1\n[v0.39.0]: https://github.com/neilotoole/sq/compare/v0.38.1...v0.39.0\n[v0.39.1]: https://github.com/neilotoole/sq/compare/v0.39.0...v0.39.1\n[v0.40.0]: https://github.com/neilotoole/sq/compare/v0.39.1...v0.40.0\n[v0.41.0]: https://github.com/neilotoole/sq/compare/v0.40.0...v0.41.0\n[v0.41.1]: https://github.com/neilotoole/sq/compare/v0.41.0...v0.41.1\n[v0.42.0]: https://github.com/neilotoole/sq/compare/v0.41.1...v0.42.0\n[v0.42.1]: https://github.com/neilotoole/sq/compare/v0.42.0...v0.42.1\n[v0.43.0]: https://github.com/neilotoole/sq/compare/v0.42.1...v0.43.0\n[v0.43.1]: https://github.com/neilotoole/sq/compare/v0.43.0...v0.43.1\n[v0.44.0]: https://github.com/neilotoole/sq/compare/v0.43.1...v0.44.0\n[v0.45.0]: https://github.com/neilotoole/sq/compare/v0.44.0...v0.45.0\n[v0.46.0]: https://github.com/neilotoole/sq/compare/v0.45.0...v0.46.0\n[v0.46.1]: https://github.com/neilotoole/sq/compare/v0.46.0...v0.46.1\n[v0.47.0]: https://github.com/neilotoole/sq/compare/v0.46.1...v0.47.0\n[v0.47.1]: https://github.com/neilotoole/sq/compare/v0.47.0...v0.47.1\n[v0.47.2]: https://github.com/neilotoole/sq/compare/v0.47.1...v0.47.2\n[v0.47.3]: https://github.com/neilotoole/sq/compare/v0.47.2...v0.47.3\n[v0.47.4]: https://github.com/neilotoole/sq/compare/v0.47.3...v0.47.4\n[v0.48.1]: https://github.com/neilotoole/sq/compare/v0.47.4...v0.48.1\n[v0.48.3]: https://github.com/neilotoole/sq/compare/v0.48.1...v0.48.3\n[v0.48.4]: https://github.com/neilotoole/sq/compare/v0.48.3...v0.48.4\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1005859375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nneilotoole@apache.org.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1845703125,
          "content": "`sq` welcomes new [issues](https://github.com/neilotoole/sq/issues), [pull requests](https://github.com/neilotoole/sq/pulls)\nand [discussion](https://github.com/neilotoole/sq/discussions).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0732421875,
          "content": "MIT License\n\nCopyright (c) 2014-2023 Neil O'Toole <neilotoole@apache.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.5576171875,
          "content": "PKG \t\t\t\t:= github.com/neilotoole/sq\nVERSION_PKG \t\t:= $(PKG)/cli/buildinfo\nBUILD_VERSION     \t:= $(shell git describe --tags --always --dirty)\nBUILD_COMMIT      \t:= $(shell git rev-parse HEAD)\nBUILD_TIMESTAMP\t\t:= $(shell date -u '+%Y-%m-%dT%H:%M:%SZ')\nLDFLAGS\t\t\t\t:= -X $(VERSION_PKG).Version=$(BUILD_VERSION) -X $(VERSION_PKG).Commit=$(BUILD_COMMIT) -X $(VERSION_PKG).Timestamp=$(BUILD_TIMESTAMP)\nBUILD_TAGS  \t\t:= sqlite_vtable sqlite_stat4 sqlite_fts5 sqlite_icu sqlite_introspect sqlite_json sqlite_math_functions\n\n.PHONY: test\ntest:\n\t@go test -tags \"$(BUILD_TAGS)\" ./...\n\n.PHONY: install\ninstall:\n\t@go install -ldflags \"$(LDFLAGS)\" -tags \"$(BUILD_TAGS)\"\n\n.PHONY: lint\nlint:\n\t@golangci-lint run --out-format tab --sort-results\n\t@shellcheck ./install.sh\n\n.PHONY: gen\ngen:\n\t@go generate ./...\n\t@# Run betteralign on generated code\n\t@# https://github.com/dkorunic/betteralign\n\t@betteralign -apply ./libsq/ast/internal/slq &> /dev/null | true\n\n.PHONY: fmt\nfmt:\n\t@# https://github.com/incu6us/goimports-reviser\n\t@# Note that termz_windows.go is excluded because the tool seems\n\t@# to mangle Go code that is guarded by build tags that\n\t@# are not in use. Alas, we can't provide a double star glob,\n\t@# e.g. **/*_windows.go, because filepath.Match doesn't support\n\t@# double star, so we explicitly name the file.\n\t@goimports-reviser -company-prefixes github.com/neilotoole -set-alias \\\n\t\t-excludes 'libsq/core/termz/termz_windows.go' \\\n\t\t-rm-unused -output write \\\n\t\t-project-name github.com/neilotoole/sq ./...\n\n\t@# Use gofumpt instead of \"go fmt\"\n\t@# https://github.com/mvdan/gofumpt\n\t@gofumpt -w .\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.5869140625,
          "content": "[![Go Reference](https://pkg.go.dev/badge/github.com/neilotoole/sq.svg)](https://pkg.go.dev/github.com/neilotoole/sq)\n[![Go Report Card](https://goreportcard.com/badge/neilotoole/sq)](https://goreportcard.com/report/neilotoole/sq)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/neilotoole/sq/blob/master/LICENSE)\n![Main pipeline](https://github.com/neilotoole/sq/actions/workflows/main.yml/badge.svg)\n\n\n# sq data wrangler\n\n`sq` is a command line tool that provides jq-style access to\nstructured data sources: SQL databases, or document formats like CSV or Excel.\nIt is the lovechild of sql+jq.\n\n![sq](.images/splash.png)\n\n`sq` executes jq-like [queries](https://sq.io/docs/query), or database-native [SQL](https://sq.io/docs/cmd/sql/).\nIt can [join](https://sq.io/docs/query#cross-source-joins) across sources: join a CSV file to a Postgres table, or\nMySQL with Excel.\n\n`sq` outputs to a multitude of [formats](https://sq.io/docs/output#formats)\nincluding [JSON](https://sq.io/docs/output#json),\n[Excel](https://sq.io/docs/output#xlsx), [CSV](https://sq.io/docs/output#csv),\n[HTML](https://sq.io/docs/output#html), [Markdown](https://sq.io/docs/output#markdown) \nand [XML](https://sq.io/docs/output#xml), and can [insert](https://sq.io/docs/output#insert) query \nresults directly to a SQL database.\n\n`sq` can also [inspect](https://sq.io/docs/inspect) sources to view metadata about the source structure (tables,\ncolumns, size). You can use [`sq diff`](https://sq.io/docs/diff) to compare tables, or\nentire databases. `sq` has commands for common database operations to\n[copy](https://sq.io/docs/cmd/tbl-copy), [truncate](https://sq.io/docs/cmd/tbl-truncate),\nand [drop](https://sq.io/docs/cmd/tbl-drop) tables.\n\nFind out more at [sq.io](https://sq.io).\n\n\n## Install\n\n### macOS\n\n```shell\nbrew install sq\n```\n> [!IMPORTANT]\n> `sq` is now a [core brew formula](https://formulae.brew.sh/formula/sq#default). Previously, `sq` was available via `brew install neilotoole/sq/sq`. If you have installed `sq` this way, you should uninstall it (`brew uninstall neilotoole/sq/sq`) before installing the new formula via `brew install sq`.\n\n### Linux\n\n```shell\n/bin/sh -c \"$(curl -fsSL https://sq.io/install.sh)\"\n```\n\n### Windows\n\n```shell\nscoop bucket add sq https://github.com/neilotoole/sq\nscoop install sq\n```\n\n### Go\n\n```shell\ngo install github.com/neilotoole/sq\n```\n\n### Docker\n\nThe [`ghcr.io/neilotoole/sq`](https://github.com/neilotoole/sq/pkgs/container/sq)\nimage is preloaded with `sq` and a handful of related tools like `jq`.\n\n#### Local\n\n```shell\n# Shell into a one-time container.\n$ docker run -it ghcr.io/neilotoole/sq zsh\n\n# Start detached (background) container named \"sq-shell\".\n$ docker run -d --name sq-shell ghcr.io/neilotoole/sq\n# Shell into that container.\n$ docker exec -it sq-shell zsh \n```\n\n#### Kubernetes\n\nRunning `sq` in a Kubernetes environment is useful for DB migrations,\nas well as general data wrangling.\n\n```shell\n# Start pod named \"sq-shell\".\n$ kubectl run sq-shell --image ghcr.io/neilotoole/sq\n# Shell into the pod.\n$ kubectl exec -it sq-shell -- zsh \n```\n\n\n\nSee other [install options](https://sq.io/docs/install/).\n\n## Overview\n\nUse `sq help` to see command help. Docs are over at [sq.io](https://sq.io).\nRead the [overview](https://sq.io/docs/overview/), and \n[tutorial](https://sq.io/docs/tutorial/). The [cookbook](https://sq.io/docs/cookbook/) has\nrecipes for common tasks, and the [query guide](https://sq.io/docs/query) covers `sq`'s query language.\n\nThe major concept is: `sq` operates on data sources, which are treated as SQL databases (even if the\nsource is really a CSV or XLSX file etc.).\n\nIn a nutshell, you [`sq add`](https://sq.io/docs/cmd/add) a source (giving it a [`handle`](https://sq.io/docs/concepts#handle)), and then execute commands against the\nsource.\n\n### Sources\n\nInitially there are no [sources](https://sq.io/docs/source).\n\n```shell\n$ sq ls\n\n```\n\nLet's [add](https://sq.io/docs/cmd/add) a source. First we'll add a [SQLite](https://sq.io/docs/drivers/sqlite)\ndatabase, but this could also be [Postgres](https://sq.io/docs/drivers/postgres),\n[SQL Server](https://sq.io/docs/drivers/sqlserver) etc., or a document source such [Excel](https://sq.io/docs/drivers/xlsx) or\n[CSV](https://sq.io/docs/drivers/csv).\n\nDownload the sample DB, and `sq add` the source. \n\n```shell\n$ wget https://sq.io/testdata/sakila.db\n\n$ sq add ./sakila.db\n@sakila  sqlite3  sakila.db\n\n$ sq ls -v\nHANDLE   ACTIVE  DRIVER   LOCATION                         OPTIONS\n@sakila  active  sqlite3  sqlite3:///Users/demo/sakila.db\n\n$ sq ping @sakila\n@sakila       1ms  pong\n\n$ sq src\n@sakila  sqlite3  sakila.db\n```\n\nThe [`sq ping`](https://sq.io/docs/cmd/ping) command simply pings the source\nto verify that it's available.\n\n[`sq src`](https://sq.io/docs/cmd/src) lists the [_active source_](https://sq.io/docs/source#active-source), which in our\ncase is `@sakila`.\nYou can change the active source using `sq src @other_src`.\nWhen there's an active source specified, you can usually omit the handle from `sq` commands.\nThus you could instead do:\n\n```shell\n$ sq ping\n@sakila  1ms  pong\n```\n\n> [!TIP]\n> Document sources such as CSV or Excel can be added from the local filesystem, or\n> from an HTTP URL. \n> \n> ```shell\n> $ sq add https://acme.s3.amazonaws.com/sales.csv\n> ```\n> \n> ![sq inspect remote](./.images/sq_inspect_remote_s3.png)\n> See the [sources](https://sq.io/docs/source#download) docs for more.\n\n\n### Query\n\nFundamentally, `sq` is for querying data. The jq-style syntax is covered in\ndetail in the [query guide](https://sq.io/docs/query).\n\n![sq query where slq](./.images/sq_query_where_slq.png)\n\nThe above query selected some rows from the `actor` table. You could also\nuse [native SQL](https://sq.io/docs/cmd/sql), e.g.:\n\n![sq query where sql](./.images/sq_query_where_sql.png)\n\nBut we're flying a bit blind here: how did we know about the `actor` table?\n\n### Inspect\n\n[`sq inspect`](https://sq.io/docs/inspect) is your friend.\n\n![sq inspect](./.images/sq_inspect_source_text.png)\n\nUse [`sq inspect -v`](https://sq.io/docs/cmd/inspect) to see more detail.\nOr use [`-j`](https://sq.io/docs/output#json) to get JSON output:\n\n![sq inspect -j](./.images/sq_inspect_sakila_sqlite_json.png)\n\nCombine `sq inspect` with [jq](https://jqlang.github.io/jq/) for some useful capabilities.\nHere's how to [list](https://sq.io/docs/cookbook#list-table-names)\nall the table names in the active source:\n\n```shell\n$ sq inspect -j | jq -r '.tables[] | .name'\nactor\naddress\ncategory\ncity\ncountry\ncustomer\n[...]\n```\n\nAnd here's how you\ncould [export](https://sq.io/docs/cookbook#export-all-table-data-to-csv) each table\nto a CSV file:\n\n```shell\n$ sq inspect -j | jq -r '.tables[] | .name' | xargs -I % sq .% --csv --output %.csv\n$ ls\nactor.csv     city.csv\t    customer_list.csv  film_category.csv  inventory.csv  rental.csv\t\t     staff.csv\naddress.csv   country.csv   film.csv\t       film_list.csv\t  language.csv\t sales_by_film_category.csv  staff_list.csv\ncategory.csv  customer.csv  film_actor.csv     film_text.csv\t  payment.csv\t sales_by_store.csv\t     store.csv\n```\n\nNote that you can also inspect an individual table:\n\n![sq inspect actor verbose](./.images/sq_inspect_actor_verbose.png)\n\nRead more about [`sq inspect`](https://sq.io/docs/inspect).\n\n### Diff\n\nUse [`sq diff`](https://sq.io/docs/diff) to compare metadata, or row data, for sources, or individual tables.\n\nThe default behavior is to diff table schema and row counts. Table row data is not compared in this mode.\n\n![sq diff](.images/sq_diff_src_default.png)\n\nUse [`--data`](https://sq.io/docs/diff#--data) to compare row data.\n\n![sq diff data](.images/sq_diff_table_data.png)\n\nThere are many more options available. See the [diff docs](https://sq.io/docs/diff).\n\n\n### Insert query results\n\n`sq` query results can be [output](https://sq.io/docs/output) in various formats \n([`text`](https://sq.io/docs/output#text),\n[`json`](https://sq.io/docs/output#json),\n[`csv`](https://sq.io/docs/output#csv), etc.). Those results can also be \"outputted\"\nas an [*insert*](https://sq.io/docs/output#insert) into a database table.\n\nThat is, you can use `sq` to insert results from a Postgres query into a MySQL table,\nor copy an Excel worksheet into a SQLite table, or a push a CSV file into\na SQL Server table etc.\n\n> [!TIP]\n> If you want to copy a table inside the same (database) source,\n> use [`sq tbl copy`](https://sq.io/docs/cmd/tbl-copy) instead, which uses the database's native table copy functionality.\n\nHere we query a CSV file, and insert the results into a Postgres table.\n\n![sq query insert inspect](./.images/sq_query_insert_inspect.png)\n\n\n### Cross-source joins\n\n`sq` can perform the usual [joins](https://sq.io/docs/query#joins). Here's how you would\njoin tables `actor`, `film_actor`, and `film`:\n\n```shell\n$ sq '.actor | join(.film_actor, .actor_id) | join(.film, .film_id) | .first_name, .last_name, .title'\n```\n\nBut `sq` can also join across data sources. That is, you can join an Excel worksheet with a\nPostgres table, or join a CSV file with MySQL, and so on.\n\nThis example joins a Postgres database, an Excel worksheet, and a CSV file.\n\n![sq join multi source](./.images/sq_join_multi_source.png)\n\nRead more about cross-source joins in the [query guide](https://sq.io/docs/query#joins).\n\n### Table commands\n\n`sq` provides several handy commands for working with tables:\n[`tbl copy`](/docs/cmd/tbl-copy), [`tbl truncate`](/docs/cmd/tbl-truncate)\nand [`tbl drop`](/docs/cmd/tbl-drop).\nNote that these commands work directly\nagainst SQL database sources, using their native SQL commands.\n\n```shell\n$ sq tbl copy .actor .actor_copy\nCopied table: @sakila.actor --> @sakila.actor_copy (200 rows copied)\n\n$ sq tbl truncate .actor_copy\nTruncated 200 rows from @sakila.actor_copy\n\n$ sq tbl drop .actor_copy\nDropped table @sakila.actor_copy\n```\n\n### UNIX pipes\n\nFor file-based sources (such as CSV or XLSX), you can `sq add` the source file,\nbut you can also pipe it:\n\n```shell\n$ cat ./example.xlsx | sq .Sheet1\n```\n\nSimilarly, you can inspect:\n\n```shell\n$ cat ./example.xlsx | sq inspect\n```\n\n## Drivers\n\n`sq` knows how to deal with a data source type via a [driver](https://sq.io/docs/drivers)\nimplementation. To view the installed/supported drivers:\n\n```shell\n$ sq driver ls\nDRIVER     DESCRIPTION                          \nsqlite3    SQLite                               \npostgres   PostgreSQL                           \nsqlserver  Microsoft SQL Server / Azure SQL Edge\nmysql      MySQL                                \ncsv        Comma-Separated Values               \ntsv        Tab-Separated Values                 \njson       JSON                                 \njsona      JSON Array: LF-delimited JSON arrays \njsonl      JSON Lines: LF-delimited JSON objects\nxlsx       Microsoft Excel XLSX                 \n```\n\n## Output formats\n\n`sq` has many [output formats](https://sq.io/docs/output):\n\n- `--text`: [Text](https://sq.io/docs/output#text)\n- `--json`: [JSON](https://sq.io/docs/output#json)\n- `--jsona`: [JSON Array](https://sq.io/docs/output#jsona)\n- `--jsonl`: [JSON Lines](https://sq.io/docs/output#jsonl)\n- `--csv` / `--tsv` : [CSV](https://sq.io/docs/output#csv) / [TSV](https://sq.io/docs/output#tsv)\n- `--xlsx`: [XLSX](https://sq.io/docs/output#xlsx) (Microsoft Excel)\n- `--html`: [HTML](https://sq.io/docs/output#html)\n- `--xml`: [XML](https://sq.io/docs/output#xml)\n- `--yaml`: [YAML](https://sq.io/docs/output#yaml)\n- `--markdown`: [Markdown](https://sq.io/docs/output#markdown)\n- `--raw`: [Raw](https://sq.io/docs/output#raw) (bytes)\n\n## CHANGELOG\n\nSee [CHANGELOG.md](./CHANGELOG.md).\n\n## Acknowledgements\n\n- Thanks to [Diego Souza](https://github.com/diegosouza) for creating\n  the [Arch Linux package](https://aur.archlinux.org/packages/sq-bin), and [`@icp`](https://github.com/icp1994)\n  for creating the [Void Linux package](https://github.com/void-linux/void-packages/blob/master/srcpkgs/sq/template).\n- Much inspiration is owed to [jq](https://jqlang.github.io/jq/).\n- See [`go.mod`](https://github.com/neilotoole/sq/blob/master/go.mod) for a list of third-party\n  packages.\n- Additionally, `sq` incorporates modified versions of:\n\t- [`olekukonko/tablewriter`](https://github.com/olekukonko/tablewriter)\n\t- [`segmentio/encoding`](https://github.com/segmentio/encoding) for JSON encoding.\n- The [_Sakila_](https://dev.mysql.com/doc/sakila/en/) example databases were lifted\n  from [jOOQ](https://github.com/jooq/jooq), which in turn owe their heritage to earlier work on\n  Sakila.\n- Date rendering via [`ncruces/go-strftime`](https://github.com/ncruces/go-strftime).\n- A modified version [`dolmen-go/contextio`](https://github.com/dolmen-go/contextio) is\n  incorporated into the codebase.\n- [`djherbis/buffer`](https://github.com/djherbis/buffer) is used for caching.\n- A forked version of [`nightlyone/lockfile`](https://github.com/nightlyone/lockfile) is incorporated.\n- The human-friendly `text` log format handler is a fork of [`lmittmann/tint`](https://github.com/lmittmann/tint).\n\n## Similar, related, or noteworthy projects\n\n- [`usql`](https://github.com/xo/usql)\n- [`textql`](https://github.com/dinedal/textql)\n- [`golang-migrate`](https://github.com/golang-migrate/migrate)\n- [`octosql`](https://github.com/cube2222/octosql)\n- [`rq`](https://github.com/dflemstr/rq)\n- [`miller`](https://github.com/johnkerl/miller)\n- [`jsoncolor`](https://github.com/neilotoole/jsoncolor) is a JSON colorizer created for `sq`.\n- [`streamcache`](https://github.com/neilotoole/streamcache) is a Go in-memory byte cache mechanism created for `sq`.\n- [`fifomu`](https://github.com/neilotoole/fifomu) is a FIFO mutex, used by `streamcache`, and thus upstream in `sq`.\n- [`tailbuf`](https://github.com/neilotoole/tailbuf) is a fixed-size object tail buffer created for `sq`.\n- [`oncecache`](https://github.com/neilotoole/oncecache) is an in-memory object cache created for `sq`.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2744140625,
          "content": "# Security Policy\n\n## Supported Versions\n\nVulnerabilities are only addressed for \n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.x.x   | :white_check_mark: |\n\n## Reporting a Vulnerability\n\nOpen a GitHub [issue](https://github.com/neilotoole/sq/issues/new).\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cosign.pub",
          "type": "blob",
          "size": 0.173828125,
          "content": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQfoHHPSbdUmI6Ehpiz3FZfwNhzum\n2i+gG1nImqAHx9lG3Ruu2OeBQUrp/Wug2Ik77jPdDTamZ9BeK8Gj4HgsQw==\n-----END PUBLIC KEY-----\n"
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.8740234375,
          "content": "module github.com/neilotoole/sq\n\ngo 1.23.4\n\nrequire (\n\tgithub.com/Masterminds/sprig/v3 v3.3.0\n\tgithub.com/a8m/tree v0.0.0-20240104212747-2c8764a5f17e\n\tgithub.com/alessio/shellescape v1.4.2\n\tgithub.com/antlr4-go/antlr/v4 v4.13.1\n\tgithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500\n\tgithub.com/djherbis/buffer v1.2.0\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/ecnepsnai/osquery v1.0.1\n\tgithub.com/emirpasic/gods v1.18.1\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/go-sql-driver/mysql v1.8.1\n\tgithub.com/goccy/go-yaml v1.15.13\n\tgithub.com/google/renameio/v2 v2.0.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/h2non/filetype v1.1.3\n\tgithub.com/jackc/pgx/v5 v5.7.2\n\tgithub.com/mattn/go-colorable v0.1.13\n\tgithub.com/mattn/go-runewidth v0.0.16\n\tgithub.com/mattn/go-sqlite3 v1.14.24\n\tgithub.com/microsoft/go-mssqldb v1.8.0\n\tgithub.com/mitchellh/go-wordwrap v1.0.1\n\tgithub.com/muesli/mango-cobra v1.2.0\n\tgithub.com/muesli/roff v0.1.0\n\tgithub.com/ncruces/go-strftime v0.1.9\n\tgithub.com/neilotoole/oncecache v0.0.1\n\tgithub.com/neilotoole/shelleditor v0.4.1\n\tgithub.com/neilotoole/slogt v1.1.0\n\tgithub.com/neilotoole/streamcache v0.3.5\n\tgithub.com/neilotoole/tailbuf v0.0.4\n\tgithub.com/nightlyone/lockfile v1.0.0\n\tgithub.com/otiai10/copy v1.14.1\n\tgithub.com/pkg/profile v1.7.0\n\tgithub.com/ryboe/q v1.0.23\n\tgithub.com/samber/lo v1.47.0\n\tgithub.com/segmentio/encoding v0.4.1\n\tgithub.com/sethvargo/go-retry v0.3.0\n\tgithub.com/shopspring/decimal v1.4.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/vbauerster/mpb/v8 v8.7.3\n\tgithub.com/xo/dburl v0.23.2\n\tgithub.com/xuri/excelize/v2 v2.8.1\n\tgo.uber.org/atomic v1.11.0\n\tgolang.org/x/exp v0.0.0-20250103183323-7d7fa50e5329\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.29.0\n\tgolang.org/x/term v0.28.0\n\tgolang.org/x/text v0.21.0\n)\n\nrequire (\n\tdario.cat/mergo v1.0.1 // indirect\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.3.1 // indirect\n\tgithub.com/VividCortex/ewma v1.2.0 // indirect\n\tgithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/felixge/fgprof v0.9.5 // indirect\n\tgithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9 // indirect\n\tgithub.com/golang-sql/sqlexp v0.1.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad // indirect\n\tgithub.com/huandu/xstrings v1.5.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.2 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/moby/term v0.5.2 // indirect\n\tgithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect\n\tgithub.com/muesli/mango v0.2.0 // indirect\n\tgithub.com/muesli/mango-pflag v0.1.0 // indirect\n\tgithub.com/neilotoole/fifomu v0.1.2 // indirect\n\tgithub.com/otiai10/mint v1.6.3 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/richardlehane/mscfb v1.0.4 // indirect\n\tgithub.com/richardlehane/msoleps v1.0.4 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/rogpeppe/go-internal v1.13.1 // indirect\n\tgithub.com/segmentio/asm v1.2.0 // indirect\n\tgithub.com/spf13/cast v1.7.1 // indirect\n\tgithub.com/xuri/efp v0.0.0-20241211021726-c4e992084aa6 // indirect\n\tgithub.com/xuri/nfp v0.0.0-20240318013403-ab9948c2c4a7 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 22.4033203125,
          "content": "dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1 h1:E+OJmp2tPvt1W+amx48v1eqbjDYsgN+RzP4q16yV5eM=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1/go.mod h1:a6xsAQUZg+VsS3TJ05SRp524Hs4pZ/AeFSr5ENf0Yjo=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0 h1:U2rTu3Ef+7w9FHKIAXM6ZyqF3UOWJZ12zIm8zECAFfg=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0/go.mod h1:9kIvujWAA58nmPmWB1m23fyWic1kYZMxD9CxaWn4Qpg=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 h1:jBQA3cKT4L2rWMpgE7Yt3Hwh2aUj8KXjIGLxjHeYNNo=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0/go.mod h1:4OG6tQ9EOP/MT0NMjDlRzWoVFxfu9rN9B2X+tlSVktg=\ngithub.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azkeys v1.0.1 h1:MyVTgWR8qd/Jw1Le0NZebGBUCLbtak3bJ3z1OlqZBpw=\ngithub.com/Azure/azure-sdk-for-go/sdk/security/keyvault/azkeys v1.0.1/go.mod h1:GpPjLhVR9dnUoJMyHWSPy71xY9/lcmpzIPZXmF0FCVY=\ngithub.com/Azure/azure-sdk-for-go/sdk/security/keyvault/internal v1.0.0 h1:D3occbWoio4EBLkbkevetNMAVX197GkzbUMtqjGWn80=\ngithub.com/Azure/azure-sdk-for-go/sdk/security/keyvault/internal v1.0.0/go.mod h1:bTSOgj05NGRuHHhQwAdPnYr9TOdNmKlZTgGLL6nyAdI=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c h1:udKWzYgxTojEKWjV8V+WSxDXJ4NFATAsZjh8iIbsQIg=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.3.1 h1:QtNSWtVZ3nBfk8mAOu/B6v7FMJ+NHTIgUPi7rj+4nv4=\ngithub.com/Masterminds/semver/v3 v3.3.1/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Masterminds/sprig/v3 v3.3.0 h1:mQh0Yrg1XPo6vjYXgtf5OtijNAKJRNcTdOOGZe3tPhs=\ngithub.com/Masterminds/sprig/v3 v3.3.0/go.mod h1:Zy1iXRYNqNLUolqCpL4uhk6SHUMAOSCzdgBfDb35Lz0=\ngithub.com/VividCortex/ewma v1.2.0 h1:f58SaIzcDXrSy3kWaHNvuJgJ3Nmz59Zji6XoJR/q1ow=\ngithub.com/VividCortex/ewma v1.2.0/go.mod h1:nz4BbCtbLyFDeC9SUHbtcT5644juEuWfUAUnGx7j5l4=\ngithub.com/a8m/tree v0.0.0-20240104212747-2c8764a5f17e h1:KMVieI1/Ub++GYfnhyFPoGE3g5TUiG4srE3TMGr5nM4=\ngithub.com/a8m/tree v0.0.0-20240104212747-2c8764a5f17e/go.mod h1:j5astEcUkZQX8lK+KKlQ3NRQ50f4EE8ZjyZpCz3mrH4=\ngithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d h1:licZJFw2RwpHMqeKTCYkitsPqHNxTmd4SNR5r94FGM8=\ngithub.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d/go.mod h1:asat636LX7Bqt5lYEZ27JNDcqxfjdBQuJ/MM4CN/Lzo=\ngithub.com/alessio/shellescape v1.4.2 h1:MHPfaU+ddJ0/bYWpgIeUnQUqKrlJ1S7BfEYPM4uEoM0=\ngithub.com/alessio/shellescape v1.4.2/go.mod h1:PZAiSCk0LJaZkiCSkPv8qIobYglO3FPpyFjDCtHLS30=\ngithub.com/antlr4-go/antlr/v4 v4.13.1 h1:SqQKkuVZ+zWkMMNkjy5FZe5mr5WURWnlpmOuzYWrPrQ=\ngithub.com/antlr4-go/antlr/v4 v4.13.1/go.mod h1:GKmUxMtwp6ZgGwZSva4eWPC5mS6vUAmOABFgjdkM7Nw=\ngithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500 h1:6lhrsTEnloDPXyeZBvSYvQf8u86jbKehZPVDDlkgDl4=\ngithub.com/c2h5oh/datasize v0.0.0-20231215233829-aa82cc1e6500/go.mod h1:S/7n9copUssQ56c7aAgHqftWO4LTf4xY6CGWt8Bc+3M=\ngithub.com/chromedp/cdproto v0.0.0-20230802225258-3cf4e6d46a89/go.mod h1:GKljq0VrfU4D5yc+2qA6OVr8pmO/MBbPEWqWQ/oqGEs=\ngithub.com/chromedp/chromedp v0.9.2/go.mod h1:LkSXJKONWTCHAfQasKFUZI+mxqS4tZqhmtGzzhLsnLs=\ngithub.com/chromedp/sysutil v1.0.0/go.mod h1:kgWmDdq8fTzXYcKIBqIYvRRTnYb9aNS9moAV0xufSww=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/logex v1.2.1/go.mod h1:JLbx6lG2kDbNRFnfkgvh4eRJRPX1QCoOIWomwysCBrQ=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/readline v1.5.1/go.mod h1:Eh+b79XXUwfKfcPLepksvw2tcLE/Ct21YObkaSkeBlk=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/chzyer/test v1.0.0/go.mod h1:2JlltgoNkt4TW/z9V/IzDdFaMTM2JPIi26O1pF38GC8=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=\ngithub.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/djherbis/buffer v1.2.0 h1:PH5Dd2ss0C7CRRhQCZ2u7MssF+No9ide8Ye71nPHcrQ=\ngithub.com/djherbis/buffer v1.2.0/go.mod h1:fjnebbZjCUpPinBRD+TDwXSOeNQ7fPQWLfGQqiAiUyE=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/ecnepsnai/osquery v1.0.1 h1:i96n/3uqcafKZtRYmXVNqekKbfrIm66q179mWZ/Y2Aw=\ngithub.com/ecnepsnai/osquery v1.0.1/go.mod h1:vxsezNRznmkLa8UjVh88tlJiRbgW7iwinkjyg/Xc2RU=\ngithub.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=\ngithub.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/felixge/fgprof v0.9.3/go.mod h1:RdbpDgzqYVh/T9fPELJyV7EYJuHB55UTEULNun8eiPw=\ngithub.com/felixge/fgprof v0.9.5 h1:8+vR6yu2vvSKn08urWyEuxx75NWPEvybbkBirEpsbVY=\ngithub.com/felixge/fgprof v0.9.5/go.mod h1:yKl+ERSa++RYOs32d8K6WEXCB4uXdLls4ZaZPpayhMM=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/gobwas/httphead v0.1.0/go.mod h1:O/RXo79gxV8G+RqlR/otEwx4Q36zl9rqC5u12GKvMCM=\ngithub.com/gobwas/pool v0.2.1/go.mod h1:q8bcK0KcYlCgd9e7WYLm9LpyS+YeLd8JVDW6WezmKEw=\ngithub.com/gobwas/ws v1.2.1/go.mod h1:hRKAFb8wOxFROYNsT1bqfWnhX+b5MFeJM9r2ZSwg/KY=\ngithub.com/goccy/go-yaml v1.15.13 h1:Xd87Yddmr2rC1SLLTm2MNDcTjeO/GYo0JGiww6gSTDg=\ngithub.com/goccy/go-yaml v1.15.13/go.mod h1:XBurs7gK8ATbW4ZPGKgcbrY1Br56PdM69F7LkFRi1kA=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9 h1:au07oEsX2xN0ktxqI+Sida1w446QrXBRJ0nee3SNZlA=\ngithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang-sql/sqlexp v0.1.0 h1:ZCD6MBpcuOVfGVqsEmY5/4FtYiKz6tSyUv9LPEDei6A=\ngithub.com/golang-sql/sqlexp v0.1.0/go.mod h1:J4ad9Vo8ZCWQ2GMrC4UCQy1JpCbwU9m3EOqtpKwwwHI=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=\ngithub.com/google/pprof v0.0.0-20240227163752-401108e1b7e7/go.mod h1:czg5+yv1E0ZGTi6S6vVK1mke0fV+FaUhNGcd6VRS9Ik=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad h1:a6HEuzUHeKH6hwfN/ZoQgRgVIWFJljSWa/zetS2WTvg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/renameio/v2 v2.0.0 h1:UifI23ZTGY8Tt29JbYFiuyIU3eX+RNFtUwefq9qAhxg=\ngithub.com/google/renameio/v2 v2.0.0/go.mod h1:BtmJXm5YlszgC+TD4HOEEUFgkJP3nLxehU6hfe7jRt4=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/h2non/filetype v1.1.3 h1:FKkx9QbD7HR/zjK1Ia5XiBsq9zdLi5Kf3zGyFTAFkGg=\ngithub.com/h2non/filetype v1.1.3/go.mod h1:319b3zT68BvV+WRj7cwy856M2ehB3HqNOt6sy1HndBY=\ngithub.com/huandu/xstrings v1.5.0 h1:2ag3IFq9ZDANvthTwTiqSSZLjDc+BedvHPAp5tJy2TI=\ngithub.com/huandu/xstrings v1.5.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/ianlancetaylor/demangle v0.0.0-20210905161508-09a460cdf81d/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=\ngithub.com/ianlancetaylor/demangle v0.0.0-20230524184225-eabc099b10ab/go.mod h1:gx7rwoVhcfuVKG5uya9Hs3Sxj7EIvldVofAWIUtGouw=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 h1:iCEnooe7UlwOQYpKFhBabPMi4aNAfoODPEFNiAnClxo=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgx/v5 v5.7.2 h1:mLoDLV6sonKlvjIEsV56SkWNCnuNv531l94GaIzO+XI=\ngithub.com/jackc/pgx/v5 v5.7.2/go.mod h1:ncY89UGWxg82EykZUwSpUKEfccBGGYq1xjrOpsbsfGQ=\ngithub.com/jackc/puddle/v2 v2.2.2 h1:PR8nw+E/1w0GLuRFSmiioY6UooMp6KJv0/61nB7icHo=\ngithub.com/jackc/puddle/v2 v2.2.2/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/ledongthuc/pdf v0.0.0-20220302134840-0c2507a12d80/go.mod h1:imJHygn/1yfhB7XSJJKlFZKl/J+dCPAknuiaGOshXAs=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=\ngithub.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.14.24 h1:tpSp2G2KyMnnQu99ngJ47EIkWVmliIizyZBfPrBWDRM=\ngithub.com/mattn/go-sqlite3 v1.14.24/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/microsoft/go-mssqldb v1.8.0 h1:7cyZ/AT7ycDsEoWPIXibd+aVKFtteUNhDGf3aobP+tw=\ngithub.com/microsoft/go-mssqldb v1.8.0/go.mod h1:6znkekS3T2vp0waiMhen4GPU1BiAsrP+iXHcE7a7rFo=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/moby/term v0.5.2 h1:6qk3FJAFDs6i/q3W/pQ97SX192qKfZgGjCQqfCJkgzQ=\ngithub.com/moby/term v0.5.2/go.mod h1:d3djjFCrjnB+fl8NJux+EJzu0msscUP+f8it8hPkFLc=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=\ngithub.com/muesli/mango v0.2.0 h1:iNNc0c5VLQ6fsMgAqGQofByNUBH2Q2nEbD6TaI+5yyQ=\ngithub.com/muesli/mango v0.2.0/go.mod h1:5XFpbC8jY5UUv89YQciiXNlbi+iJgt29VDC5xbzrLL4=\ngithub.com/muesli/mango-cobra v1.2.0 h1:DQvjzAM0PMZr85Iv9LIMaYISpTOliMEg+uMFtNbYvWg=\ngithub.com/muesli/mango-cobra v1.2.0/go.mod h1:vMJL54QytZAJhCT13LPVDfkvCUJ5/4jNUKF/8NC2UjA=\ngithub.com/muesli/mango-pflag v0.1.0 h1:UADqbYgpUyRoBja3g6LUL+3LErjpsOwaC9ywvBWe7Sg=\ngithub.com/muesli/mango-pflag v0.1.0/go.mod h1:YEQomTxaCUp8PrbhFh10UfbhbQrM/xJ4i2PB8VTLLW0=\ngithub.com/muesli/roff v0.1.0 h1:YD0lalCotmYuF5HhZliKWlIx7IEhiXeSfq7hNjFqGF8=\ngithub.com/muesli/roff v0.1.0/go.mod h1:pjAHQM9hdUUwm/krAfrLGgJkXJ+YuhtsfZ42kieB2Ig=\ngithub.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=\ngithub.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=\ngithub.com/neilotoole/fifomu v0.1.2 h1:sgJhcOTlEXGVj/nS5Bb8/qV+1wgmk+KPavcNuDw0rDM=\ngithub.com/neilotoole/fifomu v0.1.2/go.mod h1:9di2j+xBgr+nX6IPmpwQVxKt6yzgPLk9WXEj/aLwcao=\ngithub.com/neilotoole/oncecache v0.0.1 h1:9yZw+LcZoOi5t/cMZmCyQTTCKdWZcdOrnsA3C7F67v4=\ngithub.com/neilotoole/oncecache v0.0.1/go.mod h1:ZM6Lud8L981mNmbo91VVGuKg6MW6UMdCViPZPB8xU0M=\ngithub.com/neilotoole/shelleditor v0.4.1 h1:74LEw2mVo3jtNw2BjII6RSss9DXgEqAbmCQDDiJvzO0=\ngithub.com/neilotoole/shelleditor v0.4.1/go.mod h1:QanOZN4syDMp/L0SKwZb47Mh49mvLWX3ja5YfbYDDjo=\ngithub.com/neilotoole/slogt v1.1.0 h1:c7qE92sq+V0yvCuaxph+RQ2jOKL61c4hqS1Bv9W7FZE=\ngithub.com/neilotoole/slogt v1.1.0/go.mod h1:RCrGXkPc/hYybNulqQrMHRtvlQ7F6NktNVLuLwk6V+w=\ngithub.com/neilotoole/streamcache v0.3.5 h1:8YVgTcd3OpTC46zduXJE4WAhTjxQCEBHYVGDgQ6R3ss=\ngithub.com/neilotoole/streamcache v0.3.5/go.mod h1:yYJLcdAWI6jMeSSIfQ8vIydWxsrdAdGGNbYMXvWKV6M=\ngithub.com/neilotoole/tailbuf v0.0.4 h1:V16Qf+0b0P+dQEPINfFzbTRidVooZvQdPTpL4QtrlP8=\ngithub.com/neilotoole/tailbuf v0.0.4/go.mod h1:drAfG791tTcCre7cR8m4LfHRVR7y0Ht1kpaLo0T7P8A=\ngithub.com/nightlyone/lockfile v1.0.0 h1:RHep2cFKK4PonZJDdEl4GmkabuhbsRMgk/k3uAmxBiA=\ngithub.com/nightlyone/lockfile v1.0.0/go.mod h1:rywoIealpdNse2r832aiD9jRk8ErCatROs6LzC841CI=\ngithub.com/orisano/pixelmatch v0.0.0-20220722002657-fb0b55479cde/go.mod h1:nZgzbfBr3hhjoZnS66nKrHmduYNpc34ny7RK4z5/HM0=\ngithub.com/otiai10/copy v1.14.1 h1:5/7E6qsUMBaH5AnQ0sSLzzTg1oTECmcCmT6lvF45Na8=\ngithub.com/otiai10/copy v1.14.1/go.mod h1:oQwrEDDOci3IM8dJF0d8+jnbfPDllW6vUjNc3DoZm9I=\ngithub.com/otiai10/mint v1.6.3 h1:87qsV/aw1F5as1eH1zS/yqHY85ANKVMgkDrf9rcxbQs=\ngithub.com/otiai10/mint v1.6.3/go.mod h1:MJm72SBthJjz8qhefc4z1PYEieWmy8Bku7CjcAqyUSM=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/profile v1.7.0/go.mod h1:8Uer0jas47ZQMJ7VD+OHknK4YDY07LPUC6dEvqDjvNo=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/richardlehane/mscfb v1.0.4 h1:WULscsljNPConisD5hR0+OyZjwK46Pfyr6mPu5ZawpM=\ngithub.com/richardlehane/mscfb v1.0.4/go.mod h1:YzVpcZg9czvAuhk9T+a3avCpcFPMUWm7gK3DypaEsUk=\ngithub.com/richardlehane/msoleps v1.0.1/go.mod h1:BWev5JBpU9Ko2WAgmZEuiz4/u3ZYTKbjLycmwiWUfWg=\ngithub.com/richardlehane/msoleps v1.0.4 h1:WuESlvhX3gH2IHcd8UqyCuFY5yiq/GR/yqaSM/9/g00=\ngithub.com/richardlehane/msoleps v1.0.4/go.mod h1:BWev5JBpU9Ko2WAgmZEuiz4/u3ZYTKbjLycmwiWUfWg=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryboe/q v1.0.23 h1:IZ2ugkpRCkceZ9wds+2y7yF2TrUoVWGGkPVYJfVczeI=\ngithub.com/ryboe/q v1.0.23/go.mod h1:km7Zxv4Bo5b7ND8WDRrg97XR3pircncCiFJEE9cZidQ=\ngithub.com/samber/lo v1.47.0 h1:z7RynLwP5nbyRscyvcD043DWYoOcYRv3mV8lBeqOCLc=\ngithub.com/samber/lo v1.47.0/go.mod h1:RmDH9Ct32Qy3gduHQuKJ3gW1fMHAnE/fAzQuf6He5cU=\ngithub.com/segmentio/asm v1.2.0 h1:9BQrFxC+YOHJlTlHGkTrFWf59nbL3XnCoFLTwDCI7ys=\ngithub.com/segmentio/asm v1.2.0/go.mod h1:BqMnlJP91P8d+4ibuonYZw9mfnzI9HfxselHZr5aAcs=\ngithub.com/segmentio/encoding v0.4.1 h1:KLGaLSW0jrmhB58Nn4+98spfvPvmo4Ci1P/WIQ9wn7w=\ngithub.com/segmentio/encoding v0.4.1/go.mod h1:/d03Cd8PoaDeceuhUUUQWjU0KhWjrmYrWPgtJHYZSnI=\ngithub.com/sethvargo/go-retry v0.3.0 h1:EEt31A35QhrcRZtrYFDTBg91cqZVnFL2navjDrah2SE=\ngithub.com/sethvargo/go-retry v0.3.0/go.mod h1:mNX17F0C/HguQMyMyJxcnU471gOZGxCLyYaFyAZraas=\ngithub.com/shopspring/decimal v1.4.0 h1:bxl37RwXBklmTi0C79JfXCEBD1cqqHt0bbgBAGFp81k=\ngithub.com/shopspring/decimal v1.4.0/go.mod h1:gawqmDU56v4yIKSwfBSFip1HdCCXN8/+DMd9qYNcwME=\ngithub.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=\ngithub.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/vbauerster/mpb/v8 v8.7.3 h1:n/mKPBav4FFWp5fH4U0lPpXfiOmCEgl5Yx/NM3tKJA0=\ngithub.com/vbauerster/mpb/v8 v8.7.3/go.mod h1:9nFlNpDGVoTmQ4QvNjSLtwLmAFjwmq0XaAF26toHGNM=\ngithub.com/xo/dburl v0.23.2 h1:Fl88cvayrgE56JA/sqhNMLljCW/b7RmG1mMkKMZUFgA=\ngithub.com/xo/dburl v0.23.2/go.mod h1:uazlaAQxj4gkshhfuuYyvwCBouOmNnG2aDxTCFZpmL4=\ngithub.com/xuri/efp v0.0.0-20241211021726-c4e992084aa6 h1:8m6DWBG+dlFNbx5ynvrE7NgI+Y7OlZVMVTpayoW+rCc=\ngithub.com/xuri/efp v0.0.0-20241211021726-c4e992084aa6/go.mod h1:ybY/Jr0T0GTCnYjKqmdwxyxn2BQf2RcQIIvex5QldPI=\ngithub.com/xuri/excelize/v2 v2.8.1 h1:pZLMEwK8ep+CLIUWpWmvW8IWE/yxqG0I1xcN6cVMGuQ=\ngithub.com/xuri/excelize/v2 v2.8.1/go.mod h1:oli1E4C3Pa5RXg1TBXn4ENCXDV5JUMlBluUhG7c+CEE=\ngithub.com/xuri/nfp v0.0.0-20240318013403-ab9948c2c4a7 h1:hPVCafDV85blFTabnqKgNhDCkJX25eik94Si9cTER4A=\ngithub.com/xuri/nfp v0.0.0-20240318013403-ab9948c2c4a7/go.mod h1:WwHg+CVyzlv/TX9xqBFXEZAuxOPxn2k1GNHwG41IIUQ=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20250103183323-7d7fa50e5329 h1:9kj3STMvgqy3YA4VQXBrN7925ICMxD5wzMRcgA30588=\ngolang.org/x/exp v0.0.0-20250103183323-7d7fa50e5329/go.mod h1:qj5a5QZpwLU2NLQudwIN5koi3beDhSAlJwa67PuM98c=\ngolang.org/x/image v0.14.0 h1:tNgSxAFe3jC4uYqvZdTr84SZoM1KfwdC9SKIFrLjFn4=\ngolang.org/x/image v0.14.0/go.mod h1:HUYqC05R2ZcZ3ejNQsIHQDQiwWM4JBqmm6MKANTp4LE=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=\ngolang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "grammar",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 4.3984375,
          "content": "#!/usr/bin/env sh\n# This script attempts to install sq via apt, yum, apk, or brew.\n# Parts of the script are inspired by the get-docker.sh\n# script at https://get.docker.com\n\n\nget_distribution() {\n\tlsb_dist=\"\"\n\t# Every Linux system that we officially support has /etc/os-release\n\tif [ -r /etc/os-release ]; then\n\t  # shellcheck disable=SC1091\n\t\tlsb_dist=\"$(. /etc/os-release && echo \"$ID\")\"\n\tfi\n\t# Returning an empty string here should be alright since the\n\t# case statements don't act unless you provide an actual value\n\techo \"$lsb_dist\"\n}\n\n# Use command exists to test if a command is present on the system. E.g.\n#\n#   if command_exists lsb_release; then\ncommand_exists() {\n\tcommand -v \"$@\" > /dev/null 2>&1\n}\n\nget_distribution\n\n# Void Linux / xbps\nif command_exists xbps-install; then\n  set -e\n  printf \"Using xbps-install to install sq...\\n\\n\"\n\n  (xbps-install -Syu || true) && xbps-install -yu xbps\n  xbps-install -yu sq\n  exit\nfi\n\n# apt / deb\nif [ -r /etc/debian_version ] && command_exists apt; then\n  set -e\n  printf \"Using apt to install sq...\\n\\n\"\n\n  apt update -y && apt install -y --no-upgrade curl gpg\n\n  curl -fsSL https://apt.fury.io/neilotoole/gpg.key | gpg --dearmor -o /usr/share/keyrings/sq.gpg\n\n  echo \"deb [signed-by=/usr/share/keyrings/sq.gpg] https://apt.fury.io/neilotoole/ * *\" > /etc/apt/sources.list.d/sq.list\n\n  cat <<EOF > /etc/apt/preferences.d/sq\nPackage: sq\nPin: origin apt.fury.io\nPin-Priority: 501\nEOF\n\n  apt update -y && apt install -y sq\n\n  printf \"\\n\"\n  sq version\n  printf \"\\n\"\n  exit\nfi\n\n\n# Yum / rpm\nif command_exists yum; then\n  set -e\n  set +x\n  printf \"Using yum to install sq...\\n\\n\"\n\n  cat <<EOF > /etc/yum.repos.d/sq.repo\n[sq]\nname=sq\nbaseurl=https://yum.fury.io/neilotoole/\nenabled=1\ngpgcheck=0\ngpgkey=https://apt.fury.io/neilotoole/gpg.key\nEOF\n\n  yum install -y sq\n\n  printf \"\\n\"\n  sq version\n  printf \"\\n\"\n  exit\nfi\n\n\n# apk / alpine\nif command_exists apk; then\n  set -e\n  printf \"Using apk to install sq...\\n\\n\"\n  apk update\n\n  # sq isn't published to an Alpine repo yet, so we download the\n  # file from GitHub, and execute \"apk add\" with the local apk file.\n\n  # e.g. \"v1.0.0\"\n  semver=$(wget -qO- \"https://api.github.com/repos/neilotoole/sq/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/')\n\n  # e.g. \"1.0.0\"\n  ver=$(echo \"$semver\" | sed -e \"s/^v//\")\n\n  # Should be \"x86_64\" for amd64, and \"aarch64\" for arm64\n  arch=$(uname -m)\n\n  if [ \"$arch\" = \"x86_64\" ]; then\n    arch=\"amd64\"\n  elif [ \"$arch\" = \"aarch64\" ]; then\n    arch=\"arm64\"\n  else\n    printf \"sq install package not available for architecture: %s\\n\" \"$arch\"\n    exit 1\n  fi\n\n  # e.g. \"sq_0.18.1_linux_arm64.apk\"\n  file_name=$(printf \"sq_%s_linux_%s.apk\" \"$ver\" $arch)\n  file_path=\"/tmp/$file_name\"\n\n  # https://github.com/neilotoole/sq/releases/download/v0.18.1/sq_0.18.1_linux_amd64.apk\n  # https://github.com/neilotoole/sq/releases/download/v0.18.1/sq_0.18.1_linux_arm64.apk\n  download_url=$(printf \"https://github.com/neilotoole/sq/releases/download/%s/%s\" \"$semver\" \"$file_name\")\n\n  echo \"Downloading apk from: $download_url\"\n  wget  \"$download_url\" -O \"$file_path\"\n\n  apk add --allow-untrusted \"$file_path\"\n  rm \"$file_path\"\n\n  printf \"\\n\"\n  sq version\n  printf \"\\n\"\n  exit\nfi\n\n# Arch Linux\nif command_exists pacman; then\n    if [ \"$(id -u)\" -eq 0 ]; then\n        echo \"AUR packages shouldn't be installed as root\"\n        exit 1\n    fi\n\n    # First check if there's an AUR helper available instead\n    # of downloading and using pacman\n\n    if command_exists yay; then\n        echo \"Installing via yay...\"\n        yay -S --noconfirm sq-bin\n        exit\n    fi\n\n    if command_exists paru; then\n        echo \"Installing via paru...\"\n        paru -S --noconfirm sq-bin\n        exit\n    fi\n\n    # Fall back to pacman\n    echo \"Installing via pacman...\"\n    cd /tmp\n    curl -sO https://aur.archlinux.org/cgit/aur.git/snapshot/sq-bin.tar.gz\n    tar -xf sq-bin.tar.gz\n    cd sq-bin\n    makepkg -sri --noconfirm\n    rm -rf /tmp/sq-bin*\n    exit\nfi\n\n\n# brew\nif command_exists brew; then\n  set -e\n  printf \"Using brew to install sq...\\n\\n\"\n\n  # sq is now a core brew formula (\"brew install sq\"). If it's already installed\n  # via the old neilotoole/sq tap, uninstall that first.\n  brew uninstall neilotoole/sq/sq 2> /dev/null || true\n\n  brew install sq\n\n  printf \"\\n\"\n  sq version\n  printf \"\\n\"\n  exit\nfi\n\n\nprintf \"\\nCould not find a suitable install mechanism to install sq.\\n\"\nprintf \"\\nVisit https://github.com/neilotoole/sq for more installation options.\\n\"\nexit 1\n\n\n\n\n"
        },
        {
          "name": "libsq",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.3037109375,
          "content": "// Package main contains sq's main function.\npackage main\n\nimport (\n\t\"context\"\n\t\"os\"\n\t\"os/signal\"\n\t\"time\"\n\t_ \"time/tzdata\"\n\n\t\"github.com/neilotoole/sq/cli\"\n\t\"github.com/neilotoole/sq/libsq/core/errz\"\n)\n\nfunc main() {\n\tconst shutdownTimeout = time.Second * 2\n\n\tvar err error\n\tctx, cancelFn := context.WithCancel(context.Background())\n\tdefer func() {\n\t\tcancelFn()\n\t\tif err != nil {\n\t\t\tif code := errz.ExitCode(err); code > 0 {\n\t\t\t\tos.Exit(code)\n\t\t\t}\n\n\t\t\tos.Exit(1)\n\t\t}\n\t}()\n\n\tgo func() {\n\t\t// Listen for interrupt signal (Ctrl-C) and call cancelFn.\n\t\tstopCh := make(chan os.Signal, 1)\n\t\tsignal.Notify(stopCh, os.Interrupt)\n\n\t\t<-stopCh\n\n\t\t// The context cancellation should propagate down the stack,\n\t\t// and cli.Execute should return, with the context.Canceled error.\n\t\tcancelFn()\n\n\t\t// But... in theory the main goroutine could be blocked on something.\n\t\t// So, we have some hard shutdown possibilities.\n\t\tselect {\n\t\tcase <-time.After(shutdownTimeout):\n\t\t\t// We've waited long enough for a graceful shutdown.\n\t\t\tcli.PrintError(ctx, nil, errz.New(\"hard shutdown (timeout)\"))\n\t\tcase <-stopCh:\n\t\t\t// We received a second interrupt from the user: they're really\n\t\t\t// serious about exiting.\n\t\t\tcli.PrintError(ctx, nil, errz.New(\"hard shutdown\"))\n\t\t}\n\t\tos.Exit(1)\n\t}()\n\n\terr = cli.Execute(ctx, os.Stdin, os.Stdout, os.Stderr, os.Args[1:])\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "sakila-start-local.sh",
          "type": "blob",
          "size": 0.810546875,
          "content": "#!/usr/bin/env bash\n\n# This script starts local versions of Postgres, MySQL,\n# and Azure SQL Edge. We use ASE instead of SQL Server, because\n# ASE works on both arm and amd.\n#\n# Use:\n#\n#  $ source sakila-start-local.sh\n\nset +e\n# First, kill any already running services.\n./sakila-stop-local.sh &>/dev/null\n\nset -e\n\ndocker run -d -p 5432:5432 --name sakiladb-pg sakiladb/postgres:12 &>/dev/null\ndocker run -d -p 1433:1433 --name sakiladb-az sakiladb/azure-sql-edge:1.0.7 &>/dev/null\ndocker run -d -p 3306:3306 --name sakiladb-my sakiladb/mysql:8 &>/dev/null\n\nsleep 5\n\ncat << EOF\nexport SQ_TEST_SRC__SAKILA_PG12=localhost\nexport SQ_TEST_SRC__SAKILA_AZ1=localhost\nexport SQ_TEST_SRC__SAKILA_MY8=localhost\nEOF\nexport SQ_TEST_SRC__SAKILA_PG12=localhost\nexport SQ_TEST_SRC__SAKILA_AZ1=localhost\nexport SQ_TEST_SRC__SAKILA_MY8=localhost\n"
        },
        {
          "name": "sakila-stop-local.sh",
          "type": "blob",
          "size": 0.1689453125,
          "content": "#!/usr/bin/env bash\n\n# This script stops the containers started by sakila-start-local.sh\n\nset +e\n\ndocker rm -f sakiladb-pg\ndocker rm -f sakiladb-az\ndocker rm -f sakiladb-my\n"
        },
        {
          "name": "sq.json",
          "type": "blob",
          "size": 0.423828125,
          "content": "{\n    \"version\": \"0.48.4\",\n    \"architecture\": {\n        \"64bit\": {\n            \"url\": \"https://github.com/neilotoole/sq/releases/download/v0.48.4/sq-0.48.4-amd64-amd64.zip\",\n            \"bin\": [\n                \"sq.exe\"\n            ],\n            \"hash\": \"fbe8723f68cd51ca765db54484a65eaabda4886ed71747806ee9a4ff0db76d2e\"\n        }\n    },\n    \"homepage\": \"https://sq.io\",\n    \"license\": \"MIT\",\n    \"description\": \"sq data wrangler\"\n}"
        },
        {
          "name": "testh",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}