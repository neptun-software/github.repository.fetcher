{
  "metadata": {
    "timestamp": 1736567219021,
    "page": 814,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "akiyosi/goneovim",
      "stars": 2432,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.376953125,
          "content": ".DS_Store\n.go-version\n.nvimlog\ndebug.log\ntags*\nmoc*\neditor/version.txt\neditor/objcbridge.h\neditor/objcbridge.m\ncmd/goneovim/goneovim\ncmd/goneovim/debug\ncmd/goneovim/deploy/*\ncmd/goneovim/deploy*\ncmd/goneovim/windows/*\ncmd/goneovim/rcc*\ncmd/goneovim/.nvimlog\ncmd/goneovim/__debug_bin\ncmd/goneovim/__debug_bin*\ncmd/goneovim/debug.log\nvendor/\nnvim_issue/\nversion.txt\ncpuprofile\nmemprofile\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.1689453125,
          "content": "linters:\n  # please, do not use `enable-all`: it's deprecated and will be removed soon.\n  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint\n  disable-all: true\n  enable:\n    - bodyclose\n    - deadcode\n    - depguard\n    - dogsled\n    - dupl\n    - errcheck\n  # - exhaustive\n    - funlen\n    - gochecknoinits\n    - goconst\n    - gocritic\n    - gocyclo\n    - gofmt\n    - goimports\n    - golint\n    - gomnd\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    - interfacer\n    - lll\n    - misspell\n    - nakedret\n  # - noctx\n    - nolintlint\n    - rowserrcheck\n    - scopelint\n    - staticcheck\n    - structcheck\n    - stylecheck\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n    - varcheck\n    - whitespace\n\n  # don't enable:\n  # - asciicheck\n  # - gochecknoglobals\n  # - gocognit\n  # - godot\n  # - godox\n  # - goerr113\n  # - maligned\n  # - nestif\n  # - prealloc\n  # - testpackage\n  # - wsl\n\n# options for analysis running\nrun:\n  # default concurrency is a available CPU number\n  concurrency: 4\n\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  timeout: 10m\n\n  skip-files:\n    - editor/moc.go\n\n"
        },
        {
          "name": "Development.md",
          "type": "blob",
          "size": 5.6943359375,
          "content": "Development of goneovim\n=======================\nNote that the information on this page is not updated frequently. If you want reliable build instructions, the CI scripts in Github Actions could be helpful.\nSee https://github.com/akiyosi/goneovim/blob/master/.github/workflows/ci.yaml\n\n## For Linux, MacOS, Windows(MSYS2)\n  * Install Qt\n    - FreeBSD\n      - Install the Qt5 dev packages and export **QT_PKG_CONFIG=true**\n\n      ```\n      pkg install devel/qt5\n      ```\n    \n    - Linux\n      - Install the Qt5 dev packages through your systems package manager and export **QT_PKG_CONFIG=true**. (You will need to install the `html/doc` packages containing the `*.index` files as well.)\n        - Debian/Ubuntu (apt-get): `sudo apt-get --no-install-recommends install libqt*5-dev qt*5-dev qml-module-qtquick-* qt*5-doc-html`\n        - Fedora/RHEL/CentOS (yum): `sudo yum install qt5-* qt5-*-doc`\n        - openSUSE (zypper): `sudo zypper install --no-recommends libqt5-qt*-devel`\n        - Arch Linux (pacman): `sudo pacman -S --needed qt5`\n    \n    - MacOS\n      - Install the Qt5 packages through HomeBrew and export **QT_HOMEBREW=true**\n\n        ```\n        brew install qt5\n        ```\n\n    - Windows(MSYS2)\n      - Install MSYS2\n      - Install Qt5 on MSYS2 and export the following environment variables\n\n        ```\n        pacman --noconfirm -S sed git unzip zip mingw-w64-x86_64-qt-creator mingw-w64-x86_64-qt5-static\n        ```\n\n        | environment variable name | value |\n        | ------------------ | --------------- |\n        | QT_MSYS2           | true            |\n        | QT_MSYS2_DIR       | {Path to MSYS2} |\n        | QT_MSYS2_STATIC    | true            |\n        | QT_MSYS2_ARCH      | amd64           |\n\n        Note that the path specified in QT_MSYS2_DIR must be Windows style, not MSYS2 style.\n  \n\n  * Export Environment variables **QT_API=5.13.0**\n\n  * Install Go\n\n  * Checkout this repogitory and cd\n    \n    ```\n    git clone https://github.com/akiyosi/goneovim.git\n    cd goneovim\n    ```\n\n\n  * Setup Qt binding\n    NOTE: If you are using FreeBSD, you need to use gmake instead of make.\n\n    ```\n    make qt_bindings\n    ```\n\n\n  * Get Dependent Libraries\n    \n    ```\n    make deps\n    ```\n\n  * Test\n\n    ```\n    make test\n    ```\n\n  * Build\n\n    ```\n    make app\n    ```\n\n\n\n## For Windows (MSVC)\n\n  In this section, we will assume you are working on your home directory; `%USERPROFILE%`\n\n  * Install MSVC 2017 Visual C++ Buildtools\n\n  * Install Qt 5.14.2\n  \n    - Qt installation on Windows\n      - [https://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe](https://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe)\n\n\n  * Export Environment variables\n  \n    We should export the following environment variables:\n\n    | environment variable name | value |\n    | -----------------| ----- |\n    | QT_API           | The version of the Qt API to generate. This project now uses `5.12.6` |\n    | QT_VERSION       | The version of Qt you installed |\n    | QT_DIR           | The directory path where qt is installed |\n    | GOVSVARSPATH     | \\Path\\To\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat |\n    | QT_MSVC          | true |\n\n\n  * Install Go and Qt binding\n    Currently, We need to use Go's Experimental feature to enable the markdown preview feature in Goneovim.\n    Therefore, we are generating a Windows build using a patched version of Go to Go 1.11.9.\n\n\n    * Install Go 1.11.9\n\n      ```\n      curl -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/go1.11.9.windows-amd64.zip\n      expand-archive -path go1.11.9.windows-amd64.zip -destinationpath .\n      Move-Item -Path go -Destination go-root\n      ```\n\n    * Get Go binding for Qt\n  \n      ```\n      GO111MODULE=off %USERPROFILE%\\go-root\\bin\\go.exe get -v -tags=no_env github.com/therecipe/qt/cmd/...\n      ```\n\n    * Set `PATH`\n      ```\n      $env:PATH = \"$env:USERPROFILE\\go-root\\bin;$env:PATH\"\n      $env:PATH = \"$env:USERPROFILE\\BuildTools\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64;$env:PATH\"\n      ```\n\n    * Patch for Go 1.11.9\n\n      ```\n      git clone https://github.com/golang/go.git go-msvc\n      cd go-msvc\n      git fetch \"https://go.googlesource.com/go\" refs/changes/46/133946/5\n      Git checkout FETCH_HEAD\n      echo \"devel +6741b7009d\" > VERSION\n      curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/e4535772ca3f11084ee5fa4d4bd3a542e143b80f.patch | patch -p1 -R\n      curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/f10815898c0732e2e6cdb697d6f95f33f8650b4e.patch | patch -p1 -R\n      cd ..\n      Move-Item -Path go-root -Destination go-boot\n      Move-Item -Path go-msvc -Destination go-root\n      cd ${{ github.workspace }}\\go-root\\src\n      .\\make.bat\n      ```\n\n  * Setup Go binding\n\n    ```\n    %GOPATH%\\bin\\qtsetup.exe -test=false\n    ```\n\n  * Clone this repository\n\n    ```\n    GO111MODULE=off go get -d github.com/akiyosi/goneovim/...\n    ```\n\n  * Generate moc files\n\n    ```\n    cd %GOPATH%/src/github.com/akiyosi/goneovim\n    %GOPATH%/bin/qtmoc.exe\n    ```\n\n  * Test\n\n    ```\n    cd %GOPATH%/src/github.com/akiyosi/goneovim\n    %GOPATH%/bin/qtdeploy.exe build desktop\n    ```\n\n  * Build\n\n    ```\n    cd %GOPATH%/src/github.com/akiyosi/goneovim\n    %GOPATH%/bin/qtdeploy.exe build desktop\n    ```\n\n\n\n# Update go.mod, go.sum\n\n```\nrm go.mod go.sum\nrm -fr vendor/*\ngo mod init github.com/akiyosi/goneovim\ngo mod tidy\n```\n\nNext, if necessary, explicitly update the module version.\n\n```\ngo get -u github.com/neovim/go-client@HEAD\n```\n\nNext, run the following\n\n```\ngo get github.com/therecipe/qt/internal/cmd@v0.0.0-20200904063919-c0c124a5770d ; go get github.com/therecipe/qt/internal/binding/files/docs/5.12.0 ; go get github.com/therecipe/qt/internal/binding/files/docs/5.13.0\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2017 Dongdong Zhou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.1298828125,
          "content": "TAG := $(shell git describe --tags --abbrev=0)\nVERSION := $(shell git describe --tags)\nVERSION_HASH := $(shell git rev-parse HEAD)\n\n# deployment directory\nDEPLOYMENT_WINDOWS:=cmd/goneovim/deploy/windows\nDEPLOYMENT_DARWIN:=cmd/goneovim/deploy/darwin\nDEPLOYMENT_LINUX:=cmd/goneovim/deploy/linux\nDEPLOYMENT_FREEBSD:=cmd/goneovim/deploy/freebsd\n\n# runtime directory\nifeq ($(OS),Windows_NT)\nRUNTIME_DIR=$(DEPLOYMENT_WINDOWS)/\nOSNAME=Windows\nelse ifeq ($(shell uname), Darwin)\nRUNTIME_DIR=$(DEPLOYMENT_DARWIN)/goneovim.app/Contents/Resources/\nOSNAME=Darwin\nelse ifeq ($(shell uname), Linux)\nRUNTIME_DIR=$(DEPLOYMENT_LINUX)/\nOSNAME=Linux\nelse ifeq ($(shell uname), FreeBSD)\nRUNTIME_DIR=$(DEPLOYMENT_FREEBSD)/\nOSNAME=FreeBSD\nendif\n\n# qt bindings cmd\nGOQTSETUP:=$(shell go env GOPATH)/bin/qtsetup\nGOQTMOC:=$(shell go env GOPATH)/bin/qtmoc\nGOQTDEPLOY:=$(shell go env GOPATH)/bin/qtdeploy\n\n.PHONY: app qt_bindings clean linux windows darwin debug test help\n\n# If the first argument is \"run\"...\nifeq (debug,$(firstword $(MAKECMDGOALS)))\n  # use the rest as arguments for \"run\"\n  DEBUG_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))\n  # ...and turn them into do-nothing targets\n  $(eval $(DEBUG_ARGS):;@:)\nendif\n\n\napp: ## Build goneovim\n\t@test -f ./editor/moc.go & $(GOQTMOC) desktop ./cmd/goneovim && \\\n\tgo generate && \\\n\t$(GOQTDEPLOY) build desktop ./cmd/goneovim && \\\n\tcp -pR runtime $(RUNTIME_DIR)\nifeq ($(OSNAME),Darwin)\n\t@/usr/libexec/PlistBuddy -c \"Add :CFBundleVersion string $(VERSION_HASH)\" \"./cmd/goneovim/deploy/darwin/goneovim.app/Contents/Info.plist\" && \\\n\t/usr/libexec/PlistBuddy -c \"Add :CFBundleShortVersionString string $(VERSION)\"  \"./cmd/goneovim/deploy/darwin/goneovim.app/Contents/Info.plist\"\n\t@if [ -d \"./cmd/goneovim/deploy/darwin/goneovim.app/Contents/Frameworks/\" ]; then \\\n\tcd cmd/goneovim/deploy/darwin/goneovim.app/Contents/Frameworks/ && \\\n\trm -fr QtQuick.framework ; \\\n\trm -fr QtVirtualKeyboard.framework; \\\n\telse \\\n\texit 0; \\\n\tfi\nendif\n\nqt_bindings: ## Setup Qt bindings for Go.\n\t@go get -v github.com/akiyosi/qt@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo get github.com/akiyosi/qt/internal/cmd@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo get github.com/akiyosi/qt/internal/binding/files/docs/5.12.0@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo get github.com/akiyosi/qt/internal/binding/files/docs/5.13.0@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo get github.com/akiyosi/qt/internal/cmd/moc@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo install -v -tags=no_env github.com/akiyosi/qt/cmd/qtdeploy@v0.0.0-20240304155940-b43fff373ad5  && \\\n\tgo install -v -tags=no_env github.com/akiyosi/qt/cmd/qtminimal@v0.0.0-20240304155940-b43fff373ad5 && \\\n\tgo install -v -tags=no_env github.com/akiyosi/qt/cmd/qtmoc@v0.0.0-20240304155940-b43fff373ad5     && \\\n\tgo install -v -tags=no_env github.com/akiyosi/qt/cmd/qtrcc@v0.0.0-20240304155940-b43fff373ad5     && \\\n\tgo install -v -tags=no_env github.com/akiyosi/qt/cmd/qtsetup@v0.0.0-20240304155940-b43fff373ad5   && \\\n\tgo mod vendor  && \\\n\t$(GOQTSETUP) -test=false\n\ndeps: ## Get dependent libraries.\n\t@go get github.com/akiyosi/goneovim\n\t@$(GOQTMOC) desktop ./cmd/goneovim\n\ntest: ## Test goneovim\n\t@go generate && go test ./editor\n\nclean: ## Delete pre-built application binaries and Moc files.\n\t@rm -fr cmd/goneovim/deploy/*\n\t@rm -fr editor/*moc*\n\nlinux: ## Build binaries for Linux using Docker.\n\t@go generate && \\\n\tcd cmd/goneovim && \\\n\t$(GOQTDEPLOY) -docker build linux_static && \\\n\tcp -pR ../../runtime $(DEPLOYMENT_LINUX)\n\nwindows: ## Build binaries for Windows using Docker.\n\t@go generate && \\\n\tcd cmd/goneovim && \\\n\t$(GOQTDEPLOY) -docker build windows_64_static && \\\n\tcp -pR ../../runtime $(DEPLOYMENT_WINDOWS)\n\ndarwin: ## Build binaries for MacOS using Vagrant.\n\t@go generate && \\\n\tcd cmd/goneovim && \\\n\t$(GOQTDEPLOY) -vagrant build darwin/darwin && \\\n\tcp -pR ../../runtime $(DEPLOYMENT_WINDOWS)\n\ndebug: ## Debug runs of the application using delve.\n\t@test -f ./editor/moc.go & $(GOQTMOC) desktop ./cmd/goneovim && \\\n\tcd cmd/goneovim && \\\n\tdlv debug --output goneovim --build-flags -race -- $(DEBUG_ARGS)\n\nhelp: ## Display this help\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"%-20s %s\\n\", $$1, $$2}'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1337890625,
          "content": "goneovim\n---\n\n![CI](https://github.com/akiyosi/goneovim/workflows/CI/badge.svg)\n[![Go Report Card](https://goreportcard.com/badge/github.com/akiyosi/goneovim)](https://goreportcard.com/report/github.com/akiyosi/goneovim)\n![GitHub Releases](https://img.shields.io/github/downloads/akiyosi/goneovim/v0.6.11/total)\n[![Join the chat at https://gitter.im/goneovim/community](https://badges.gitter.im/goneovim/community.svg)](https://gitter.im/goneovim/community)\n\ngoneovim (pronounced like \"go-neovim\") is a Neovim GUI written in Go, using a [Qt binding for Go](https://github.com/therecipe/qt).\nThis repository forked from the original [Gonvim](https://github.com/dzhou121/gonvim) for the purpose of maintenance and enhancement.\n\n![](https://raw.githubusercontent.com/wiki/akiyosi/goneovim/screenshots/goneovim.png)\n\n\n## Why Neovim GUI\n\nTraditionally, Neovim (and even Vim) has been optimized for working with Terminal, and some Terminal-based workflows cannot be achieved with a GUI. \nTherefore, for some people, a GUI would be an unnecessary additional stuff. \nOn the other hand, in my opinion, there are some attractive features of GUI as follows.\n\n* **More meta keys can be used**\n  * Since Neovim performs all of its operations with the keyboard, having more meta keys available is a simple advantage.\n* **Terminal is also available in Neovim GUI**\n  * Neovim has an embedded terminal emulator that can be run in `:terminal`, so you can run basic terminal workflows using `:terminal` with `bash` or `zsh` in Neovim GUI. It is also possible to use remote control tools such as [nvr](https://github.com/mhinz/neovim-remote) to avoid nvim in nvim in Neovim GUI.\n* **Experience the rich drawing expressions of GUI**\n  * For example, it is possible to scroll based on pixels, to set different font families and point sizes for each window.\n\nIf you are interested in these GUI attractions, try goneovim.\n\n\n## Features\n\nAll of the features are optional. You can use it like a plain nvim or as a nvim with a rich UI.\n\n- Fast\n- Cross-platform\n- Modern Text Editor Features\n  - Smooth pixel scroll (Support for both touchpad and Vim scroll command reactions.)\n  - Animated Cursor\n  - Ligatures\n  - Built-in Indent guide\n  - Scrollbar\n  - Workspace feature which manages multiple nvim\n- Features as neovim GUI\n  - Externalizable tabline, popupmenu, wildmenu, cmdline, messages\n  - Support gui option: `guifont`, `guifontwide`, `guifont=*`, `linespace`, `guicursor`. You don't need `neovim-gui-shim`\n  - Supports per character font fallback feature\n  - Support mouse\n  - Independent font settings per window (experimental)\n  - Attach/Connect feature to a remote nvim\n  - WSL integration (for Windows)\n  - Own clipboard provider\n- Basic feature as a Text Editor\n  - Multi byte character\n  - Drag and Drop files\n  - InputMethod Editor (for east asian users)\n- Miscellaneous\n  - Supports application window transparency\n  - Desktop Notification of the messages emitted nvim\n\n\n## Requirements\n* Neovim [v0.10.2](https://github.com/neovim/neovim/releases/tag/v0.10.2) or [Nightly](https://github.com/neovim/neovim/releases/tag/nightly)\n\nSee [Installing Neovim](https://github.com/neovim/neovim/wiki/Installing-Neovim)\n\n\n## Getting Started\n### Download from Github\nPre-built packages for Windows, MacOS, Linux are found at the [Releases](https://github.com/akiyosi/goneovim/releases) page.\n\nOr you can get the latest binary from Github Actions CI. See [Actions](https://github.com/akiyosi/goneovim/actions) page.\n\n### Install via Package Manager\n\nWindows users can install using scoop:\n\n```\nscoop bucket add extras\nscoop install goneovim\n```\n\nor\n\n```\nscoop bucket add versions\nscoop install goneovim-nightly\n```\n\nMacOS users can install using homebrew:\n\n`brew install --cask goneovim`\n\n> [!NOTE]\n> If you are a macOS user, since this is an unsigned application, you need to execute the following command after obtaining goneovim.app:\n> ```\n> xattr -c /path/to/goneovim.app\n> ```\n> \n> This will help you avoid the \"unknown developer\" warning or the \"Goneovim is damaged and can't be opened\" error.\n\n\n## Usage\n\nSee `:h goneovim` or [wiki](https://github.com/akiyosi/goneovim/wiki/Usage)\n\n## Development\n\n1. Clone this repo and cd into the repo\n1. `make qt_bindings`\n1. `make deps`\n1. `make app`\n\nFor more information, see [Development](https://github.com/akiyosi/goneovim/blob/master/Development.md)\n\n\n\n## Similar projects\n\n* [Neovide](https://github.com/Kethku/neovide)\n* [FVim](https://github.com/yatli/fvim)\n* [Gnvim](https://github.com/vhakulinen/gnvim)\n* [Uivonim](https://github.com/smolck/uivonim)\n\n## Credits\n\n* Gonvim was created by dzhou121 ([https://github.com/dzhou121/gonvim](https://github.com/dzhou121/gonvim))\n\n\n## Screenshots\n\n### Workspaces\n![](https://raw.githubusercontent.com/wiki/akiyosi/goneovim/screenshots/v0.4.10-workspaces.gif)\n\n### Smooth Scroll with touchpad\n![](https://raw.githubusercontent.com/wiki/akiyosi/goneovim/screenshots/v0.4.10-smoothscroll-1.gif)\n\n### Smooth Scroll for neovim scroll commands\n![](https://raw.githubusercontent.com/wiki/akiyosi/goneovim/screenshots/v0.4.10-smoothscroll-2.gif)\n\n### External Float Window, Minimap(experimental)\n![](https://raw.githubusercontent.com/wiki/akiyosi/goneovim/screenshots/v0.4.10-top.png)\n\n\n\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "filer",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate_objcbridge.go",
          "type": "blob",
          "size": 1.7841796875,
          "content": "//go:build generate\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"text/template\"\n)\n\nconst objcbridgeH = `void SetMyApplicationDelegate();`\n\nconst objcbridgeM = `#import <Cocoa/Cocoa.h>\n\n// Forward declaration of the Go function to be called from C\nextern void GetOpeningFilepath(char* str);\n\n@interface MyApplicationDelegate : NSObject <NSApplicationDelegate>\n@end\n\n@implementation MyApplicationDelegate\n\n- (BOOL)applicationSupportsSecureRestorableState:(NSApplication *)app {\n    return YES;\n}\n\n- (BOOL)application:(NSApplication *)theApplication openFile:(NSString *)filename {\n    const char *utf8String = [filename UTF8String];\n    char *cStr = strdup(utf8String);\n    GetOpeningFilepath(cStr);\n    return YES;\n}\n\n@end\n\nvoid SetMyApplicationDelegate() {\n    NSApplication *app = [NSApplication sharedApplication];\n    app.delegate = [[MyApplicationDelegate alloc] init];\n    [app activateIgnoringOtherApps:YES]; // make application foreground\n}`\n\nfunc main() {\n\tif runtime.GOOS != \"darwin\" {\n\t\treturn\n\t}\n\n\tgenerateFile(filepath.Join(\"editor\", \"objcbridge.h\"), objcbridgeH)\n\tgenerateFile(filepath.Join(\"editor\", \"objcbridge.m\"), objcbridgeM)\n}\n\nfunc generateFile(filename, content string) {\n\tif _, err := os.Stat(filename); err == nil {\n\t\terr = os.Remove(filename)\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Error removing existing file:\", err)\n\t\t\treturn\n\t\t}\n\t} else if !os.IsNotExist(err) {\n\t\tfmt.Println(\"Error checking file existence:\", err)\n\t\treturn\n\t}\n\n\tfile, err := os.Create(filename)\n\tif err != nil {\n\t\tfmt.Println(\"Error creating file:\", err)\n\t\treturn\n\t}\n\tdefer file.Close()\n\n\ttmpl, err := template.New(\"file\").Parse(content)\n\tif err != nil {\n\t\tfmt.Println(\"Error parsing template:\", err)\n\t\treturn\n\t}\n\n\terr = tmpl.Execute(file, nil)\n\tif err != nil {\n\t\tfmt.Println(\"Error executing template:\", err)\n\t}\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.1279296875,
          "content": "module github.com/akiyosi/goneovim\n\ngo 1.21\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602061228-ca639595a315\n\tgithub.com/akiyosi/qt v0.0.0-20240304155940-b43fff373ad5\n\tgithub.com/akiyosi/short_path v0.2.1\n\tgithub.com/atotto/clipboard v0.1.4\n\tgithub.com/bluele/gcache v0.0.2\n\tgithub.com/jessevdk/go-flags v1.5.0\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/neovim/go-client v1.2.2-0.20240514170004-863141a115a5\n)\n\nrequire (\n\tgithub.com/akiyosi/qt/internal/binding/files/docs/5.12.0 v0.0.0-20240304155940-b43fff373ad5 // indirect\n\tgithub.com/akiyosi/qt/internal/binding/files/docs/5.13.0 v0.0.0-20240304155940-b43fff373ad5 // indirect\n\tgithub.com/akiyosi/w32 v0.0.0-20240207145154-5d3ee780f6cb // indirect\n\tgithub.com/gopherjs/gopherjs v1.17.2 // indirect\n\tgithub.com/konsorten/go-windows-terminal-sequences v1.0.2 // indirect\n\tgithub.com/sirupsen/logrus v1.8.1 // indirect\n\tgolang.org/x/mod v0.4.2 // indirect\n\tgolang.org/x/sys v0.6.0 // indirect\n\tgolang.org/x/tools v0.1.5 // indirect\n\tgolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 9.373046875,
          "content": "github.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240222071727-593e283fef92 h1:xz2X8F9iT01j/9hGihRFBSO+OdXK241izLWxVS6RQEk=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240222071727-593e283fef92/go.mod h1:739mXLJTAy19GBfA3Z2gitVRHX5NVqrVqygAMPVB21E=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602054323-119397bf0629 h1:USQq8AhZe2EimBQHN8hvZAxIGZey9JtnMtdUiG0Azro=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602054323-119397bf0629/go.mod h1:739mXLJTAy19GBfA3Z2gitVRHX5NVqrVqygAMPVB21E=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602060107-836c0e9d8779 h1:y2CPZ2LEr+jfT8xMp5Zh1PKA9t3Z8vDXerVyoDZew0I=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602060107-836c0e9d8779/go.mod h1:739mXLJTAy19GBfA3Z2gitVRHX5NVqrVqygAMPVB21E=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602061228-ca639595a315 h1:iHRVwAcexSrSJmjSZCKLlZTPx+3BsIM3NlOvA+nyQJQ=\ngithub.com/akiyosi/goqtframelesswindow v0.0.0-20240602061228-ca639595a315/go.mod h1:739mXLJTAy19GBfA3Z2gitVRHX5NVqrVqygAMPVB21E=\ngithub.com/akiyosi/qt v0.0.0-20240304155940-b43fff373ad5 h1:N4bJmW4zbdcvd4goftNEn6qv1HbhkhdbGOE2c1i/VzQ=\ngithub.com/akiyosi/qt v0.0.0-20240304155940-b43fff373ad5/go.mod h1:nJwWSisbWIKcSPeWeiMzvNHnz6o+GIrh/pNyDIfDHQg=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.12.0 v0.0.0-20240302153623-48e55e6efc51 h1:c7ls8vqPwYwLc7LZsmao40I086mYGgiuqREVyhGE+y0=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.12.0 v0.0.0-20240302153623-48e55e6efc51/go.mod h1:o1Ta8fcOD7ED+UFh1S2sJGmMYyZgY/0Nhqkayiw9EOI=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.12.0 v0.0.0-20240304155940-b43fff373ad5 h1:Xsaemn/PJrY741TJNlz2AkmakEW+WPzxUbyLit1ECc8=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.12.0 v0.0.0-20240304155940-b43fff373ad5/go.mod h1:o1Ta8fcOD7ED+UFh1S2sJGmMYyZgY/0Nhqkayiw9EOI=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.13.0 v0.0.0-20240302153623-48e55e6efc51 h1:jYgj8JOa6dNTcS2cWIkJmW85r1l5BBEkLiT1HYaM2CY=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.13.0 v0.0.0-20240302153623-48e55e6efc51/go.mod h1:zr7ZzZXZ4UI9WpxGsiaq0S9OHCjo+H/7vU2Oyi6RRWw=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.13.0 v0.0.0-20240304155940-b43fff373ad5 h1:2kQxKmTSVhuxBlCa32qdRH0y8VszPll7ZTM7ySnuzb0=\ngithub.com/akiyosi/qt/internal/binding/files/docs/5.13.0 v0.0.0-20240304155940-b43fff373ad5/go.mod h1:zr7ZzZXZ4UI9WpxGsiaq0S9OHCjo+H/7vU2Oyi6RRWw=\ngithub.com/akiyosi/short_path v0.2.1 h1:1IiEQDNISfLOzs8A4+95vSgAN1Ch2IQY4wUpjZzWU/U=\ngithub.com/akiyosi/short_path v0.2.1/go.mod h1:9ZdnJCTktFi81KorFR9Zihrn8pmRD1UIx0HjASMCu1U=\ngithub.com/akiyosi/w32 v0.0.0-20240206235442-ad043c730afb h1:O3/WamAsR0N/8fgn93Sj3btBhXrEbtVj1W4x+CHeChs=\ngithub.com/akiyosi/w32 v0.0.0-20240206235442-ad043c730afb/go.mod h1:2FtFEIlFioFN1gthevKcpsJgo3YWZyFoa+/V7UA4onI=\ngithub.com/akiyosi/w32 v0.0.0-20240207145154-5d3ee780f6cb h1:3NzVmrKMtXEYNq4dsgNcqSh8wBAljNalVFIr9r/5+2E=\ngithub.com/akiyosi/w32 v0.0.0-20240207145154-5d3ee780f6cb/go.mod h1:2FtFEIlFioFN1gthevKcpsJgo3YWZyFoa+/V7UA4onI=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/bluele/gcache v0.0.2 h1:WcbfdXICg7G/DGBh1PFfcirkWOQV+v077yF1pSy3DGw=\ngithub.com/bluele/gcache v0.0.2/go.mod h1:m15KV+ECjptwSPxKhOhQoAFQVtUFjTVkc3H8o0t/fp0=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/gopherjs/gopherjs v0.0.0-20190411002643-bd77b112433e h1:XWcjeEtTFTOVA9Fs1w7n2XBftk5ib4oZrhzWk0B+3eA=\ngithub.com/gopherjs/gopherjs v0.0.0-20190411002643-bd77b112433e/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v1.17.2 h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\ngithub.com/gopherjs/gopherjs v1.17.2/go.mod h1:pRRIvn/QzFLrKfvEz3qUuEhtE/zLCWfreZ6J5gM2i+k=\ngithub.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\ngithub.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2 h1:DB17ag19krx9CFsz4o3enTrPXyIXCl+2iCXH/aMAp9s=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/neovim/go-client v1.2.1 h1:kl3PgYgbnBfvaIoGYi3ojyXH0ouY6dJY/rYUCssZKqI=\ngithub.com/neovim/go-client v1.2.1/go.mod h1:EeqCP3z1vJd70JTaH/KXz9RMZ/nIgEFveX83hYnh/7c=\ngithub.com/neovim/go-client v1.2.2-0.20220415170422-ef8a8cf9c522 h1:JE6/8mKKDKjUYBUTgSM91uE5ocmvWHKTvxCEI9GFVV0=\ngithub.com/neovim/go-client v1.2.2-0.20220415170422-ef8a8cf9c522/go.mod h1:UBsOERb5epbeQT0nyPTZkmUPTffRYBcHvrXXidr1NQQ=\ngithub.com/neovim/go-client v1.2.2-0.20230716041012-dd77a916541b h1:JDchP8fWykRzJLiq5cUQ47vKkP8UY0I1yzgGDTSpYRI=\ngithub.com/neovim/go-client v1.2.2-0.20230716041012-dd77a916541b/go.mod h1:UBsOERb5epbeQT0nyPTZkmUPTffRYBcHvrXXidr1NQQ=\ngithub.com/neovim/go-client v1.2.2-0.20240514170004-863141a115a5 h1:bDKPFxHFy0ApEmtUFFQzbxMGgywlKrpyNJ2opMX4hjc=\ngithub.com/neovim/go-client v1.2.2-0.20240514170004-863141a115a5/go.mod h1:UBsOERb5epbeQT0nyPTZkmUPTffRYBcHvrXXidr1NQQ=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/sirupsen/logrus v1.4.1 h1:GL2rEmy6nsikmW0r8opw9JIRScdMF5hA8cOYLH7In1k=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.8.1 h1:dJKuHgqk1NNQlqoA6BTlM1Wf9DOH3NBjQyu0h9+AZZE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190418165655-df01cb2cc480/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/mod v0.4.2 h1:Gz96sIWK3OalVv/I/qNygP42zyoKp3xptRVCWRFEBvo=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190420063019-afa5a82059c6/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190419153524-e8e3143a4f4a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/tools v0.0.0-20190420181800-aa740d480789 h1:FF0rjo15h51+N6642mf5S3QuplmKo2aCrJUYkHTx85s=\ngolang.org/x/tools v0.0.0-20190420181800-aa740d480789/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.5 h1:ouewzE6p+/VEB31YYnTbEJdi8pFqKp4P4n85vwo3DHA=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n"
        },
        {
          "name": "goneovim.go",
          "type": "blob",
          "size": 0.134765625,
          "content": "package goneovim\n\n//go:generate sh -c \"printf %s $(git describe --tags) > editor/version.txt\"\n//go:generate go run generate_objcbridge.go\n"
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}