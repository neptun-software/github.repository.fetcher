{
  "metadata": {
    "timestamp": 1736567069687,
    "page": 654,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "golang/example",
      "stars": 2740,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4189453125,
          "content": "Copyright 2009 The Go Authors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google LLC nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PATENTS",
          "type": "blob",
          "size": 1.2724609375,
          "content": "Additional IP Rights Grant (Patents)\n\n\"This implementation\" means the copyrightable works distributed by\nGoogle as part of the Go project.\n\nGoogle hereby grants to You a perpetual, worldwide, non-exclusive,\nno-charge, royalty-free, irrevocable (except as stated in this section)\npatent license to make, have made, use, offer to sell, sell, import,\ntransfer and otherwise run, modify and propagate the contents of this\nimplementation of Go, where such license applies only to those patent\nclaims, both currently owned or controlled by Google and acquired in\nthe future, licensable by Google that are necessarily infringed by this\nimplementation of Go.  This grant does not include claims that would be\ninfringed only as a consequence of further modification of this\nimplementation.  If you or your agent or exclusive licensee institute or\norder or agree to the institution of patent litigation against any\nentity (including a cross-claim or counterclaim in a lawsuit) alleging\nthat this implementation of Go or any code incorporated within this\nimplementation of Go constitutes direct or contributory patent\ninfringement, or inducement of patent infringement, then any patent\nrights granted to you under this License for this implementation of Go\nshall terminate as of the date such litigation is filed.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.138671875,
          "content": "# Go example projects\n\n[![Go Reference](https://pkg.go.dev/badge/golang.org/x/example.svg)](https://pkg.go.dev/golang.org/x/example)\n\nThis repository contains a collection of Go programs and libraries that\ndemonstrate the language, standard libraries, and tools.\n\n## Clone the project\n\n```\n$ git clone https://go.googlesource.com/example\n$ cd example\n```\nhttps://go.googlesource.com/example is the canonical Git repository.\nIt is mirrored at https://github.com/golang/example.\n\n## [hello](hello/) and [hello/reverse](hello/reverse/)\n\n```\n$ cd hello\n$ go build\n$ ./hello -help\n```\nA trivial \"Hello, world\" program that uses a library package.\n\nThe [hello](hello/) command covers:\n\n* The basic form of an executable command\n* Importing packages (from the standard library and the local repository)\n* Printing strings ([fmt](//golang.org/pkg/fmt/))\n* Command-line flags ([flag](//golang.org/pkg/flag/))\n* Logging ([log](//golang.org/pkg/log/))\n\nThe [reverse](hello/reverse/) reverse covers:\n\n* The basic form of a library\n* Conversion between string and []rune\n* Table-driven unit tests ([testing](//golang.org/pkg/testing/))\n\n## [helloserver](helloserver/)\n\n```\n$ cd helloserver\n$ go run .\n```\n\nA trivial \"Hello, world\" web server.\n\nTopics covered:\n\n* Command-line flags ([flag](//golang.org/pkg/flag/))\n* Logging ([log](//golang.org/pkg/log/))\n* Web servers ([net/http](//golang.org/pkg/net/http/))\n\n## [outyet](outyet/)\n\n```\n$ cd outyet\n$ go run .\n```\nA web server that answers the question: \"Is Go 1.x out yet?\"\n\nTopics covered:\n\n* Command-line flags ([flag](//golang.org/pkg/flag/))\n* Web servers ([net/http](//golang.org/pkg/net/http/))\n* HTML Templates ([html/template](//golang.org/pkg/html/template/))\n* Logging ([log](//golang.org/pkg/log/))\n* Long-running background processes\n* Synchronizing data access between goroutines ([sync](//golang.org/pkg/sync/))\n* Exporting server state for monitoring ([expvar](//golang.org/pkg/expvar/))\n* Unit and integration tests ([testing](//golang.org/pkg/testing/))\n* Dependency injection\n* Time ([time](//golang.org/pkg/time/))\n\n## [appengine-hello](appengine-hello/)\n\nA trivial \"Hello, world\" App Engine application intended to be used as the\nstarting point for your own code. Please see\n[Google App Engine SDK for Go](https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Go)\nand [Quickstart for Go in the App Engine Standard Environment](https://cloud.google.com/appengine/docs/standard/go/quickstart).\n\n## [gotypes](gotypes/)\n\nThe `go/types` package is a type-checker for Go programs. It is one of the most\ncomplex packages in Go's standard library, so we have provided this tutorial to\nhelp you find your bearings. It comes with several example programs that you\ncan obtain using `go get` and play with as you learn to build tools that analyze\nor manipulate Go programs.\n\n## [template](template/)\n\nA trivial web server that demonstrates the use of the\n[`template` package](https://golang.org/pkg/text/template/)'s `block` feature.\n\n## [slog-handler-guide](slog-handler-guide/)\n\nThe `log/slog` package supports structured logging.\nIt features a flexible backend in the form of a `Handler` interface.\nThis guide can help you write your own handler.\n"
        },
        {
          "name": "appengine-hello",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.1826171875,
          "content": "module golang.org/x/example\n\ngo 1.18\n\nrequire golang.org/x/tools v0.14.0\n\nrequire (\n\tgolang.org/x/mod v0.13.0 // indirect\n\tgolang.org/x/sys v0.13.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0.875,
          "content": "golang.org/x/mod v0.13.0 h1:I/DsJXRlw/8l/0c24sM9yb0T4z9liZTduXvdAWYiysY=\ngolang.org/x/mod v0.13.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/sync v0.4.0 h1:zxkM55ReGkDlKSM+Fu41A+zmbZuaPVbGMzvvdUPznYQ=\ngolang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=\ngolang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/tools v0.14.0 h1:jvNa2pY0M4r62jkRQ6RwEZZyPcymeL9XZMLBbV7U2nc=\ngolang.org/x/tools v0.14.0/go.mod h1:uYBEerGOWcJyEORxN+Ek8+TT266gXkNlHdJBwexUsBg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "gotypes",
          "type": "tree",
          "content": null
        },
        {
          "name": "hello",
          "type": "tree",
          "content": null
        },
        {
          "name": "helloserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "outyet",
          "type": "tree",
          "content": null
        },
        {
          "name": "ragserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "slog-handler-guide",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}