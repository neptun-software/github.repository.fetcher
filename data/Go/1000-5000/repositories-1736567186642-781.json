{
  "metadata": {
    "timestamp": 1736567186642,
    "page": 781,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thought-machine/please",
      "stars": 2485,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.51953125,
          "content": "freebsd_instance:\n  image_family: freebsd-14-0\n\nenv:\n  GOPROXY: https://proxy.golang.org\n\ntask:\n  install_script:\n    \"pkg install -y bash protobuf go121 git python3 && python3 -m ensurepip && ln -s `command -v go121` /usr/local/bin/go\"\n  build_script: ./bootstrap.sh --exclude pip --exclude py2 --exclude=py3 --exclude=python3 --exclude no_cirrus\n  always:\n    log_artifacts:\n      path: plz-out/log/*.log\n      type: text/plain\n    test_artifacts:\n      path: plz-out/log/test_results.xml\n      type: text/xml\n      format: junit\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.197265625,
          "content": "*.build_defs linguist-language=Starlark diff=python\nBUILD.plz linguist-language=Starlark diff=python\ndocs/* linguist-documentation\n*_bindata.go linguist-generated\nthird_party/go/zip/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2021484375,
          "content": ".bootstrap\n# Local config file\n.plzconfig.local\n\n/plz-out\n/.plz-cache\n/.plz-http-cache\n*.pyc\n__pycache__\n\n.idea\n*.iml\n/venv\n/out\n*.sw?\n\n.DS_Store\n# For local testing\n.local\n\n# The parse perf test repo\n/tree\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.171875,
          "content": "run:\n  timeout: 5m\n\nissues:\n  exclude:\n    - SA4006  # Too many false positives :(\n    - SA5008  # Warns for duplicate struct tags which are meaningful to go-flags\n    - unslice  # This may be useful in some places.\n    - ifElseChain  # Generally don't agree.\n    - appendAssign\n    - halp  # Make misspell be quiet about this.\n    - exitAfterDefer # Potentially useful but not in any cases it fires right now.\n    - receiver-naming # Think this is confused about generics\n    - error-strings\n    - unused-parameter # Potentially useful but we have quite a few cases to fix\n    - empty-block # generally not useful\n    - redefines-builtin-id\n    - superfluous-else\n    - indent-error-flow # revive getting a bit too pushy here\n  exclude-dirs:\n    - test_data\n  exclude-rules:\n    - path: _test\\.go\n      linters:\n        - errcheck\n        - dupl\n        - gocritic\n    - path: src/core/config.go # The config struct is big & complex and there's usually only one.\n      text: fieldalignment\n      linters:\n        - govet\n    - path: src/please.go # Similarly for flags.\n      text: fieldalignment\n      linters:\n        - govet\n\nlinters:\n  disable-all: true\n  enable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - containedctx\n    - dogsled\n    - dupl\n    - gci\n    - gocritic\n    - gofmt\n    - gosimple\n    - govet\n    - ineffassign\n    - misspell\n    - nilerr\n    - nosprintfhostport\n    - perfsprint\n    - prealloc\n    - revive\n    - staticcheck\n    - tenv\n    - thelper\n    - unconvert\n    - unused\n    - wastedassign\n    - whitespace\n\nlinters-settings:\n  govet:\n    enable-all: true\n    disable:\n      - deepequalerrors # Only seen this once and it's a false positive\n      - shadow # Probably not useful enough to clean everything up\n      # TODO(peterebden): Should clean up these warnings & enable (although they are pretty finicky)\n      - fieldalignment\n  gci:\n    sections:\n      - standard # Captures all standard packages if they do not match another section.\n      - default # Contains all imports that could not be matched to another section type.\n      - prefix(github.com/thought-machine/please)\n\n  perfsprint:\n    errorf: false # sometimes it's easier not to import another package\n"
        },
        {
          "name": ".plzconfig",
          "type": "blob",
          "size": 2.349609375,
          "content": "[parse]\nBlacklistDirs = tree ; The performance test repo\npreloadsubincludes = ///go//build_defs:go\npreloadsubincludes = ///cc//build_defs:cc\npreloadsubincludes = ///python//build_defs:python\npreloadsubincludes = ///shell//build_defs:shell\n\n[Plugin \"go\"]\nTarget = //plugins:go\nimportpath = github.com/thought-machine/please\ngotool = //third_party/go:toolchain|go\nFeatureFlags = go_get\nmodfile = //:go_mod\nstdlib = //third_party/go:std\n\n[Plugin \"cc\"]\ntarget = //plugins:cc\ndefaultoptcppflags = --std=c++11 -O2 -DNDEBUG -Wall -Wextra -Werror -Wno-unused-parameter\ndefaultdbgcppflags = --std=c++11 -g3 -DDEBUG -Wall -Wextra -Werror -Wno-unused-parameter\n\n[Plugin \"shell\"]\nTarget = //plugins:shell\n\n[Plugin \"python\"]\nTarget = //plugins:python\n; We use the in-repo please_pex tool to build other pexes within this repo.\n; Other projects using Please wouldn't normally need to do anything like this.\nmoduledir = third_party.python\nDisableVendorFlags = true\n\n[gc]\nkeep = //test/...\nkeep = //docs:all\nkeep = //package:all\n\n[alias \"autofix\"]\ndesc = Generates generated code and applies lint fixes\ncmd = run //:autofix\n\n[alias \"bootstrap\"]\ndesc = Bootstraps Please from scratch\ncmd = run //:bootstrap --\n\n[alias \"bootonly\"]\ndesc = Bootstraps Please, but does not run any tests.\ncmd = run //:bootstrap -- --skip_tests\n\n[alias \"install\"]\ndesc = Installs Please into ~/.please\ncmd = run //:install --\n\n[alias \"plz\"]\ndesc = Builds & runs the version of plz within this repo.\ncmd = run //package:installed_files --entry_point=please --\nsubcommand = test\nsubcommand = build\npositionallabels = true\n\n[alias \"lint\"]\ndesc = Runs the linters for this repo\ncmd = run //tools/misc:lint -p --\n\n[alias \"go-get\"]\ndesc = Runs the go deps tool to install new dependencies into the repo\ncmd = run ///go//tools/go_get_migrator --\n\n[licences]\naccept = MIT\naccept = MIT License\naccept = BSD\naccept = BSD-3\naccept = BSD License\naccept = Simplified BSD\naccept = BSD 3-Clause\naccept = BSD-3-Clause\naccept = BSD-2-Clause\naccept = 3-Clause BSD License\naccept = New BSD License\naccept = Apache Software License\naccept = Apache 2.0\naccept = Apache-2.0\naccept = Apache License, Version 2.0\naccept = The Apache Software License, Version 2.0\naccept = PSF\naccept = ASL\naccept = MPL-2.0\naccept = LGPL\naccept = Artistic License\naccept = ISC\n# Not really a licence, but Bazel projects commonly describe things this way.\naccept = notice\n\n[remote]\nurl =\n"
        },
        {
          "name": ".plzconfig.alpine",
          "type": "blob",
          "size": 0.111328125,
          "content": "[Plugin \"go\"]\nDefaultStatic = true\nGoTool = go\nStdlib = //third_party/go:std\n\n[buildconfig]\nstatic-sandbox = true\n"
        },
        {
          "name": ".plzconfig.ci",
          "type": "blob",
          "size": 0.197265625,
          "content": "; Config file used for CI.\n[cache]\ndir = .plz-cache\ndircompress = true\n\n[buildconfig]\nci = true\n\n; CI should disable all feature flags so we're actually testing the default distribution.\n[featureflags]\n"
        },
        {
          "name": ".plzconfig.ci-alt",
          "type": "blob",
          "size": 0.0947265625,
          "content": "; Config file used for CI.\n[cache]\ndir = .plz-cache\ndircompress = true\n\n[buildconfig]\nci = true\n\n"
        },
        {
          "name": ".plzconfig.ci_remote",
          "type": "blob",
          "size": 0.2392578125,
          "content": "; This is used for CI of the remote execution code.\n[remote]\nurl = localhost:7778\ncasurl = localhost:7777\nasseturl = localhost:7776\ninstance = mettle\nsecure = false\nnumexecutors = 10\n\n[build]\nhashfunction = sha256\n\n[please]\nlocation = ~/.please\n"
        },
        {
          "name": ".plzconfig.localcache",
          "type": "blob",
          "size": 0.05859375,
          "content": "[cache]\nhttpurl = http://127.0.0.1:1771\nhttpwriteable = true"
        },
        {
          "name": ".plzconfig.localremote",
          "type": "blob",
          "size": 0.5712890625,
          "content": "# Steps to build with remote execution locally:\n# 1) git clone https://github.com/thought-machine/please-servers\n# 2) cd please-servers && plz localremote\n# 3) you can then build and run with --profile localremote in this repo\n\n[Remote]\nURL = 127.0.0.1:7772\nCasUrl = 127.0.0.1:7777\nAssetUrl = 127.0.0.1:7776\nNumExecutors = 20\n# This file should be kept up to date with the file in grpcutil/token.txt from please-servers\nTokenFile = please-servers-token.txt\nSecure = false\nDisplayUrl = http://localhost:7779\nInstance = mettle\n\n[Plugin \"go\"]\nGoTool = go ; This is way too slow otherwise\n"
        },
        {
          "name": ".plzconfig.sandbox",
          "type": "blob",
          "size": 0.29296875,
          "content": "[sandbox]\nbuild = true\ntest = true\nnamespace = never\ntool = please_sandbox\nExcludeableTargets = //third_party/...\nExcludeableTargets = //tools/please_go:all\nExcludeableTargets = //tools/java:toolchain\nExcludeableTargets = //:pleasings\nExcludeableTargets = //docs:rules\nExcludeableTargets = //test/..."
        },
        {
          "name": ".plzconfig_freebsd_amd64",
          "type": "blob",
          "size": 0.041015625,
          "content": "[Plugin \"cc\"]\ncctool = cc\ncpptool = c++\n\n\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "# Adopters\nA list of adopters of please and what they're using it for (in alphabetical order):\n\n- [Bainbridge Health](https://www.bainbridgehealth.com) is using Please to build Med O.S., a data science platform that helps hospitals improve medication safety and stewardship.\n- [Banzai Cloud](https://banzaicloud.com/) is using Please to build [Pipeline](https://github.com/banzaicloud/pipeline), a cloud native application platform\n  helping companies with their digital transformation to the cloud.\n- [PITS Global Data Recovery Services](https://www.pitsdatarecovery.net/) uses Please to handle the internal infrastructure's build process   \n- [PolyAI](https://www.polyai.com) is using Please to build the next generation of speech-based conversational agents for customer service.\n- [Thought Machine](https://thoughtmachine.net) are using Please to build Vault, a cloud native core banking platform \n  written primarily in go, python, Java, and TypeScript. \n- [TCN](https://tcn.com) is using Please to build [Operator](https://operator.tcn.com), the most advanced Cloud Contact Center solution. \n"
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 0.97265625,
          "content": "subinclude(\"///shell//build_defs:shell\")\n\nfilegroup(\n    name = \"version\",\n    srcs = [\"VERSION\"],\n    visibility = [\"PUBLIC\"],\n)\n\nfilegroup(\n    name = \"changelog\",\n    srcs = [\"ChangeLog\"],\n    visibility = [\"PUBLIC\"],\n)\n\ngenrule(\n    name = \"bootstrap\",\n    srcs = [\"bootstrap.sh\"],\n    outs = [\"bootstrap.sh\"],\n    binary = True,\n    cmd = \"sed 's/EXCLUDES=\\\"\\\"/EXCLUDES=\\\"%s\\\"/' $SRC > \\\"$OUT\\\"\" % CONFIG.get(\"EXCLUDETEST\", \"\"),\n)\n\nfilegroup(\n    name = \"install\",\n    srcs = [\"install.sh\"],\n    binary = True,\n    deps = [\"//package:installed_files\"],\n)\n\nfilegroup(\n    name = \"pleasew\",\n    srcs = [\"pleasew\"],\n    binary = True,\n    visibility = [\"//src/assets/...\"],\n)\n\nsh_cmd(\n    name = \"autofix\",\n    cmd = \"plz fmt -w && gofmt -s -w src tools test && plz run parallel --include codegen\",\n)\n\nfilegroup(\n    name = \"pgo\",\n    srcs = [\"default.pgo\"],\n    visibility = [\"//src/...\"],\n)\n\nfilegroup(\n    name = \"go_mod\",\n    srcs = [\"go.mod\"],\n    visibility = [\"//third_party/go/...\"],\n)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.9970703125,
          "content": "# How to help out\n\nWant to contribute to please? Great! We're a small team, so we'd very much appreciate your help. This short document \nshould help you get started. We're a friendly bunch, so we'd love for you to reach out! This guidance isn't meant to be \ndogmatic, it simply aims to reduce friction when trying to engage with the please community. \n\n## Read the contributor docs\n\nThere are README files sprinkled throughout this repo that try to explain different parts: \n\n- [src/core](src/core/README.md) contains the definitions for the core of Please including the build graph, state, \n  targets and labels. It also contains all the logic for queuing up and adding targets to the graph. \n- [src/parse](src/parse/README.md) defines the parse step, that parses and interprets the BUILD files, adding\n  their targets to the build graph. \n- [src/build](src/build/README.md) similarly defines the build step. \n- [src/test](src/test/README.md)  similarly defines the test step. \n- [src/remote](src/remote/README.md) defines a remote execution client for build and testing using the remote execution \n  API. \n\n## Check out our closed issues first\n\nBefore you go any further, it is worth searching through our issues. While we aim to make please as hassle free to use,\nthere are still some common pitfalls. You may well find the answer you seek in this issues list. Perhaps you'll even \nfind others with a similar problem to back you up! \n\n## Suggesting a change\n\nPlease is a versatile build system with a wide remit. There are certainly things that can be improved, and we welcome \nsuggestions. However, there are some basic steps can be taken that will drastically improve the chances of seeing your \nchanges realised.  \n\n### Raise an issue first\n\nThis allows us to start the conversation early and potentially saves you a lot of time and effort before you get to \nwork. A lot of the time the enhancement might already exist, perhaps it doesn't belong in the core please repo, or \nperhaps there's a good reason we don't want to make that change. Have you checked the \n[pleasings](https://github.com/thought-machine/pleasings) repo? There's a lot of useful auxiliary stuff there. Either \nway, opening the dialogue with us sooner rather than later will drastically reduce friction when you eventually open a \npull request. \n\nWhen raising your issue, make sure to give us enough context. The please paradigm is reasonably opinionated. It's not \nunlikely that what you are trying to achieve can be achieved in a more pleasing way. Let us know what your ultimate goal \nis so that we can better understand how to best achieve this goal. \n\n### Get on gitter\n\nAs you work on please, you might struggle to find your way around the codebase. If you get stuck, you can always jump on \n[gitter](https://gitter.im/please-build/Lobby). There's usually somebody online to help you. While it may be tempting to \njump on gitter right away, we'd prefer to have the initial discussion on the issue where it's visible historically, so \nplease start there. Feel free to post a link to your issue in gitter though!\n\n### Get to work\n\nOnce you and the please community have a good idea as to what you're trying to achieve, you should get to work. When \ndoing so, be mindful of those that review your code. Pull requests should be small and focused. Wide sweeping refactors \nshould not be mixed with features and bug fixes. Doing so will only slow down reviewing your code and causes friction. \n\nYour code should also have tests that demonstrate how it functions. The PR should have a good explanation as to what \nhas changed and guidance to the reviewer as to how to test it. In general just make it as easy for us to gain confidence \nin your change, so we can approve your pull request and make you a contributor to the please build system!\n\n### Add yourself to the contributors list\n\nYou've worked hard, and you deserve recognition. If this is your first contribution, feel free to add yourself to \n`/docs/acknowledgements.html` and be displayed on the please [website](https://please.build/acknowledgements.html).\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 162.01171875,
          "content": "Version 17.12.7\n---------------\n    * Fix BuildTarget.ProvideFor not checking named data when deciding whether\n\t\t  to skip resolution. (#3316)\n\nVersion 17.12.6\n---------------\n    * Add goroutine labels to track what they are getting up to if we suspect a hang (#3292)\n    * Fix deadlock with queuing data for tests (#3306)\n    * Fix potential subinclude lockup (#3305)\n    * Don't queue a target up for test if the target failed to build (#3315)\n\nVersion 17.12.5\n---------------\n    * Add a stat for number of BUILD files currently parsing (#3290)\n\nVersion 17.12.4\n---------------\n    * Reverted back to arcat v1.0.2 while we work out behavioural issues\n\nVersion 17.12.3\n---------------\n    * Updated arcat to fix some subtle issues with ar archives and filenames of an unusual size\n\nVersion 17.12.2\n---------------\n    * Exclude test_tools from dependencies in working dir during build.\n\nVersion 17.12.1\n---------------\n    * Ensure build env is sorted on input to config hash (#3279)\n    * Remove test args from remote test command (#3266)\n\nVersion 17.12.0\n---------------\n    * Require building tasks to complete before shutdown (#3275)\n    * Update profile for guided optimisation (#3273)\n    * Replace channel-based iterators with new-style ones (#3272)\n    * Expand home path in `fs.PathExists` (#3270)\n    * Fix bash completion around = character (#3269)\n    * Add AppArmor profile for Ubuntu Noble (#3271)\n    * Update to Go 1.23.2 (#3264)\n    * Bump go-rules plugin to v1.21.5 (#3268)\n    * Bump python-rules plugin to v1.7.4 (#3267)\n    * Prohibit running under sudo unless explicitly forced to do so (#3265)\n    * Make property and operator not part of default object (#3260)\n    * Minor clean up to len() (#3259)\n    * Change iterable interface to be more flexible (#3255)\n    * Update lint (#3239)\n    * Avoid storing package cache in Alpine build image (#3250)\n    * Add Go build tags to stdlib (#3252)\n    * Avoid allocating channels unnecessarily on map inserts (#3246)\n    * Update toolchain to Go 1.23.1 (#3249, superseded by #3264)\n    * Fix a couple of things on arm64 (#3251)\n    * Update to Go 1.23.1 (#3248, superseded by #3264)\n    * Fix autocompletion by replacing partial text in LSP (#3244)\n    * Refresh Docker images (#3245)\n\nVersion 17.11.0\n---------------\n    * Skip special handling of experimental directories when inside a subrepo (#3242)\n    * Detach codepath adds env vars (#3241)\n    * Stop invoking 'rm' as a subprocess (#3238)\n    * Update Python plugin + some deps (#3227)\n    * Deal with require/provide in query deps (#3237)\n    * Implement force deletion for RemoveAll (#3236)\n    * Make Please traverse build defs dirs recursively to find build defs (#3234)\n    * Add support for pretty-printing to the `json()` built-in (#3233)\n\nVersion 17.10.3\n---------------\n    * Further improve internal comparison of subrepo structures\n\nVersion 17.10.2\n---------------\n    * Revert change to filename auto-completion from 17.10.0 (#3229)\n\nVersion 17.10.1\n---------------\n    * Improve internal comparison of subrepo structures, resolving a \"found multiple definitions for\n      subrepo\" error when cross-compiling a build target (#3223)\n\nVersion 17.10.0\n---------------\n    * Make `1`/`0` synonyms for `true`/`false` in boolean plugin config fields (#3220)\n    * Return `None` for empty optional plugin config fields (#3219)\n    * Correctly report name of missing dependency when it can't be resolved (#3216)\n    * Output debug message when plugin config is loaded (#3214)\n    * Implement `keys`, `values` and `items` methods for `config` builtin type (#3213)\n    * Report plugin name in error message when failing to override plugin config field value (#3211)\n    * Add Go toolchain and standard library targets when initialising Go plugin (#3212)\n    * Don't print input targets in `plz query deps` output (#3204)\n    * Implement filename auto-completion and support for reading from stdin for the `plz query`\n      subcommands `whatinputs`, `whatoutputs`, `rules` and `changes` (#3202)\n\nVersion 17.9.0\n--------------\n    * Allow values in `provides` to be a list (#3140)\n    * Don't show passed test output for large numbers of tests (#3131)\n    * Deduplicate env vars passed to build actions (#3143, #3144)\n    * More efficient `str.format()` implementation in BUILD language (#3146)\n    * Fix hang on preloading subincludes with syntax errors (#3151)\n    * Some low-level performance improvements to BUILD file parsing (#3147, #3152)\n    * Support \\t escapes in strings (#3170)\n    * Remove mention of pleasings from plz init message (#3173)\n    * Report remote worker name in interactive output (#3178)\n    * New `no_test_coverage` option to explicitly opt tests out of producing coverage (#3188)\n    * Add sandbox flags to `plz debug` matching `plz exec`'s behaviour (#3200)\n\nVersion 17.8.7\n--------------\n    * Use local paths only for determining tool changes (#3139)\n    * Use parser.open rather than os.Open avoiding a panic when using remotefs\n      (#3030)\n    * Plz help shows halp for aliases (#3130)\n\nVersion 17.8.6\n--------------\n    * Speed up parsing of subrepo-heavy repos (notably `go_repo`) (#3126)\n    * Query commands take subrepos into account (#3124)\n\nVersion 17.8.5\n--------------\n    * Revert #3111\n\nVersion 17.8.4\n--------------\n    * Fix a nil pointer when querying targets with the `--arch` flag (#3113)\n    * Improved output for downloading test outputs (#3112)\n    * Only download child dirs for filegroups where necessary (#3111)\n    * Minor parse time performance improvements (#3114)\n\nVersion 17.8.3\n--------------\n    * Don't re-parse subrepos unnecessarily (#3103)\n    * Added some gRPC client metrics (#3104)\n    * Add a check in parser on unary operator precedence (#3106)\n    * Various third-party library updates (#3097, #3098)\n\nVersion 17.8.2\n--------------\n    * Empty values in some .plzconfig sections now correctly generate keys again (#3095)\n\nVersion 17.8.1\n--------------\n    * Allow lists to be passed to subinclude() (#3080)\n    * `plz query inputs` now outputs in sorted order, and doesn't output intermediate targets from subrepos (#3073)\n    * Some fixes to operator precedence (#3088)\n    * Test runs are correctly set for remote execution (#3090)\n    * Fix calculation of cache size when using compression (#3055)\n\nVersion 17.8.0\n--------------\n    * Add a --ignore_unknown flag to query whatinputs (#3057)\n    * Improve somepath --hidden behaviour (#3067)\n    * Enable `plz build `--shell` to work correctly with remote execution and\n      subrepos (#3066) (#3069)\n    * subinclude can now take annotated label and list (#2990)\n\nVersion 17.7.0\n--------------\n    * Make `json()` marshal `range` as a list (#3044)\n    * Allow setting `PLZ_REPO_ROOT` env variable to tell Please where the repo\n      root is (#3046)\n\nVersion 17.6.2\n--------------\n    * Performance improvements for clean remote execution builds (#3038)\n    * Recognise `range` type in `isinstance` (#3040)\n\nVersion 17.6.1\n--------------\n    * Only automatically sort `tag` parameter below `name` parameter for built-in\n      Please rules (#3036)\n\nVersion 17.6.0\n--------------\n    * Various performance improvements in the build language (#3023, #3024, #3025,\n      #3028)\n    * Cache `BUILD` files during remote execution (#3029)\n    * Place `tag` parameter below `name` parameter when formatting build rule\n      invocations (#3033)\n\nVersion 17.5.0\n--------------\n    * Add a `--json` flag to `plz query outputs` (#3011)\n    * Repeated `subinclude()` calls are now simplified into one by `plz format` (#3012)\n    * `plz update --noverify` now ignores hash verification (#3017)\n    * `plz test -n X` now creates distinct actions for remote execution (#3021)\n    * Console output for `plz test -n X` improved (#2989)\n\nVersion 17.4.3\n--------------\n    * Invalidate the action metadata cache as the action outputs are invalid as of\n      #3008 (#3016)\n\nVersion 17.4.2\n--------------\n    * Fix error message when depending on a target in a non-existant subrepo (#3007)\n    * Handle `.out` temporary suffixes in remote execution properly (#3008)\n\nVersion 17.4.1\n--------------\n    * Fix occasional 'too many open files' errors (#2998)\n\nVersion 17.4.0\n--------------\n    * keep going flag (#2932)\n    * Fix query somepath when it encounters a cycle (#2893)\n    * Fix text_file strip (#2895)\n      it now doesn't strip tabs and \\ characters.\n    * plz run parallel/sequential accepts inline args (#2916)\n    * use character semantics for length and index operations on strings (#2921)\n    * Add chr built-in function (#2922)\n    * Add ord built-in function (#2924)\n    * Add all commit date formats to supported git_show() format verbs (#2930)\n    * Fix reduce builtin (#2925)\n    * Fix issue with completing idents in the language server (#2917)\n    * Improve performance when a large number of input targets are supplied (#2942)\n    * Virtualise the subrepo filesystem for remote execution to avoid downloading\n      the whole subrepo to plz-out (#2952, #2954, #2953, #2955, #2960, #2961,\n      #2962, #2963, #2966, #2968, #2965)\n    * Fix issue where we would double the architecture subrepo if it was explicitly\n      specified in a subrepo (#2973)\n    * Always treat the first argument of `plz run` commands as a build label (#2967)\n    * Redact secrets from test step logging (#2970)\n    * Allow `///subrepo@darwin_amd64//package:name` syntax to specify both a subrepo and an\n      architecture on the command line. Also fixes a few issues with cross compiling using\n      `go_repo` (#2972)\n    * Allow dicts to be passed as `genrule`'s `data` parameter, with similar semantics to\n      those of `srcs` and `tools` (#2985)\n    * Add `--out_dir` option to `build` command (#2950)\n    * Add `add_entry_point` and `get_entry_points` built-in functions (#2993)\n\nVersion 17.3.1\n--------------\n    * Fixed `plz query somepath` to not hang in the face of a graph cycle (#2893)\n    * Fix stripping in text_file (#2895)\n\nVersion 17.3.0\n--------------\n    * REX: fix issue with downloading the outputs of filegroups with remote execution (#2885)\n    * Added reduce builtin to the build language (#2880)\n    * Don't automatically download targets queued for subinclue during remote execution (#2889)\n\nVersion 17.2.3\n--------------\n    * Improve locking logic around downloading targets for multiple concurrent plz executions\n\nVersion 17.2.2\n--------------\n    * `format`: avoid unneeded parentheses around `in`/`not in` expressions (#2871)\n    * Pass correct output of uname -a (#2868)\n    * Fix occasional hang when some targets are not queued\n\nVersion 17.2.1\n---------------\n    * Better support preloaded subincludes that themselves subinclude (#2859)\n\nVersion 17.2.0\n---------------\n    * Added hostinfo prometheus counter (#2835)\n    * Fix formatting for timed out message (#2845)\n    * Strip >= from the PLZ_VERSION variable (#2854)\n    * Add optimisation profile and enable pgo (#2850)\n\nVersion 17.1.0\n---------------\n    * Handle function calls in `isinstance` (#2796)\n    * Allow `plz query deps` to outout the deps as a dotviz graph (#2801)\n    * Added a `--notest` flag to `plz watch`, which will then only build test targets.\n      This can be useful to do a quick smoke test. (#2810)\n    * Handle malformed input better in the language server to avoid crashes (#2810)\n    * Improve performance by implementing the `any` and `all` list functions in\n      Go (#2813)\n    * Added `--env` to `plz debug` to allow setting env variables in the debug\n      environment (#2819)\n    * Support function parameter aliases in `plz fmt` (#2822)\n    * Added `get_named_outs` which returns the named outputs of a target as a\n      dictionary (#2808)\n    * Fixed issues with race conditions in remote execution due to targets\n      being marked built too early (#2826)\n    * Fixed issue with finding the package directory with remote execution\n      when subrepos define a package root e.g. `go_repo` (#2828)\n\nVersion 17.0.0\n---------------\n    * Remove all the built in language rules rules in favour of plugins. Use\n      `plz init plugin [plugin name]` to migrate e.g. `plz init plugin go`\n      (#2668, #2674, #2651, #2695, #2739)\n    * Support code completions for `plz exec` (#2786)\n    * Add `patches` parameters to the subrepo rules to apply a patch file to\n      the repo (#2745)\n    * Remove `ExcludeSymlinksInGlob` feature flag, making `glob()` exclude\n      symlinks by default. This makes it play better with `plz generate`,\n      however if you need a glob to match symlinks, pass\n      `include_symlinks = True`. (#2747)\n    * Remove `PackageOutputsStrictness` feature flag, making Please fail the\n      build instead of logging when it detects a conflict in package outputs.\n      (#2736)\n    * Delete the `ErrorOnEmptyGlob` feature flag, making glob throw and\n      exception if it matches no files. Pass `allow_empty = True` to `glob()`\n      to change this behavior (#2730)\n    * Support named outputs on filegroups (#2709)\n    * Remove persistent workers (#2690)\n    * Remove `plz query roots` (#2678)\n    * Remove the `--quiet` flag from `plz run parallel` (#2675)\n    * Rename the config options `java.jarcat` to `build.arcat` represent the\n      fact it has evolved to be a more general archiving tool (#2667\n    * Remove the deprecated exception types from the build language (#2150)\n    * Remove `--in_wd` from `plz run` in favour of `--wd .` (#2677)\n    * Change the way preloaded subincludes work to resolve a number of\n      race conditions. Subincludes are no longer preloaded when parsing\n      a BUILD file for subinclude. This means you will have to add\n      subincludes to `.build_def` files, and the BUILD file that contains\n      the subinclude target. (#2658)\n    * Remove JavaBinaryExecutableByDefault feature making Java binaries\n      self executable by default (#2662)\n    * Remove --prepare flag from `plz build` (#2666)\n    * Remove SingleSHA1Hash feature flag making sha1 behave the same as\n      other algorithms (#2135)\n    * Change asp.Position to just be an int (#2650)\n    * Fix stack overflow in asp parser stack unwind (#2659)\n    * Add plugin documentation to website (#2657)\n    * Recalculate filegroup outputs when they're not from plz-out (#2660)\n    * Remove SingleSHA1Hash (#2135)\n    * Remove --prepare flag from build (#2666)\n    * Delete JavaBinaryExecutableByDefault feature flag (#2662)\n    * Clarify that Named Outputs can only be depended on as sources (#2670)\n    * Make plugin version linting better (#2671)\n    * Add proto and go-proto rules to docs (#2669)\n    * Make CLI suggestions work with plugin topics (#2679)\n    * Auth before releasing website and binaries (#2684)\n    * Fix typo in gcloud command (#2685)\n    * Exclude targets in subrepos from `plz query changes` (#2723)\n    * `plz exec` now follows a similar argument pattern to `plz run` (#2793)\n\n\nVersion 16.27.1\n---------------\n    * Include linux_arm64 in release step (#2646)\n\n\nVersion 16.27.0\n---------------\n    * Have `plz query whatinputs` exit with code 1, when nothing inputs\n      the file (#2617)\n    * Please now adds the cache dir tag to it's cache directories, as defined by\n      by https://bford.info/cachedir/ (#2587)\n    * Have `plz query whatinputs` resolve the inputs to the repo root (#2623)\n    * During `plz init`, Please now checks the http status code when hitting the\n      github API, to avoid retrying user errors (#2631)\n    * Fix issue with filegroups not being rebuild under some conditions (#2635)\n    * Include build defs in plugins when searching for docs using `plz help` (#2636)\n\nVersion 16.26.1\n---------------\n    * Fix some issues when original targets contain subrepos\n\n\nVersion 16.26.0\n---------------\n    * The C/C++ rules now allow adding additional outputs (#2519)\n    * Allow subrepos to define an output root to avoid clashing inside\n      their build directories (#2605)\n    * Resolve some race conditions when loading plugin config that would\n      result in Please erroneously claiming that certain plugin configs\n      don't exist or are not optional (#2611)\n    * Format the CONFIG object in the same way other dictionaries get formatted\n      when printed from the build language (#2585)\n\n\nVersion 16.25.1\n---------------\n    * Revert (#2593) as it has a race condition relating to subincludes (#2599)\n\n\nVersion 16.25.0\n---------------\n\n    * Fix issue where subrepo config was being loaded, overriding configuration\n      set in the host repo (#2583)\n    * Make the gitignore check include the package name so it resolves correctly\n      when passed to `git check-ignore` (#2582)\n    * Fix issue where subincluding would lock up when including from a target\n      defined in the same package (#2523, #2586)\n    * Allow plugins to reference themselves by their plugin id in build labels (#2553)\n    * Fix issue when overriding config values defined in plugins from config profiles (#2589)\n    * Stop watching subincludes in subrepos (#2592)\n    * Use more performant blake3 implementation (#2597)\n    * Fix race condition in the subrepo parsing (#2598)\n    * Add warning when output directories conflict with other outputs in the package (#2593)\n    * Only verify filegroup output hashes when the sources change (#2594)\n\n\nVersion 16.24.0\n---------------\n\n    * Error on empty glob by default. This feature is gated\n      behind the `ErrorOnEmptyGlob` feature flag (#2568)\n    * Improve behaviour of UpdateGitignore (#2571)\n    * Fix config overrides being passed to built-in rules rather than plugin\n      on darwin_arm64 circleci build (#2575)\n\n\nVersion 16.23.1\n---------------\n\n    * Fix to `--env` argument from previous version.\n\n\nVersion 16.23.0\n---------------\n\n    * `remote_file` downloads are now limited in parallelism, defaulting to 4 simultaneously (#2545)\n    * `plz exec` now takes an `--env` argument to set environment variables (#2561)\n    * `go_test` allows setting `env` (#2560)\n    * Fix benign race condition in progress code (#2528, #2559)\n\n\nVersion 16.22.1\n---------------\n\n    * Set defaults for `PluginRepo` rather than overriding the config #2541\n    * Make `remote_file()` retry #2542\n    * Stop `text_file()` opting out of sandboxing #2547\n    * Reduce warnings around code in the experimental folder to info level #2550\n    * Log the body of the response at debug level for non-200 responses in\n      `remote_file()` #2551\n\n\nVersion 16.22.0\n---------------\n\n    * Adds `plz exec sequential` and `plz exec parallel` subcommands (#2521, #2536, #2538).\n    * Fix a fairly rare case of `plz run` not working on a test with remote execution when\n      the test has a data dependency on something with a matched require/provide (#2527)\n    * A not dissimilar fix to `plz query inputs` (#2531)\n    * Fix moving of output directories for remote execution (#2529)\n    * General improvements to tab completion of optional subcommands (#2537)\n    * Add debug flag that implies plain output for `breakpoint()` (#2533)\n\n\nVersion 16.21.3\n---------------\n\n    * Strip host arch from subrepo part of build label (#2508)\n\n\nVersion 16.21.2\n---------------\n\n    * Fix hangs / very slow behaviour in `plz query deps`.\n\n\nVersion 16.21.1\n---------------\n\n    * Fix visibility parsing when the visibility list is defined as a constant in\n      a subincluded build_def file\n\n\nVersion 16.21.0\n---------------\n\n    * Only exit plz fmt with exit code 1 on error or if in quiet mode (#2265)\n    * Fix bug where we wouldn't traverse excluded deps (#2496)\n    * Update gcfg to allow setting empty values in SSM sections (#2499)\n    * Set TESTS for remote execution as well as local (#2501)\n    * Fix data race in remote stats code (#2500)\n    * Fixed compile of assembly in third-party Go libraries for Go 1.19\n    * Expose `go_binary` sources when included as a `go_test` dependency (#2503)\n\n\nVersion 16.20.4\n---------------\n\n    * Support embedding directories using Golang embed comments #2479\n    * Fix determinism issue in `go_toolchain()` when cross compiling #2496\n    * Fix deadlock when parsing a locally defined subrepo #2487\n    * Ensure hardlinks and symlinks are updated correctly when linking\n      generated sources #2493\n\n\nVersion 16.20.3\n---------------\n\n    * The build metadata store for remote execution now prefixes the path rather than\n      convoluting hashes, making items in it easier to locate (#2464)\n    * Build outputs are printed without formatting when stdout is not interactive (#2480)\n    * Fixed a race condition between building initial targets in a subrepo and preloaded\n      subincludes (#2482)\n\n\nVersion 16.20.2\n---------------\n    * Make `plz query deps` traverse hidden dependencies even when\n      we don't print them #2453\n\n\nVersion 16.20.1\n---------------\n    * When configured, require `remote_file()` rules are covered by\n      the `Sandbox.ExcludeableTargets` config value #2436\n    * REX: Skip caching when `--num_runs` is provided to `plz test`\n      #2450\n    * Fix indentation in `plz query deps` when we exclude targets #2454\n\n\nVersion 16.20.0\n---------------\n    * Fix issue with the `pleasew` wrapper script downloading the wrong\n      architecture on arm platforms #2286\n    * Make the `pleasew` wrapper read config files in the same order that Please\n      does #2324\n    * Add `no_test_output` parameter to `cc_test()` #2292\n    * Include `data = []` dependencies in `plz export` #2294\n    * Remove the experimental `@self` psudo-subrepo #2295\n    * The `[Plugin \"id\"]` section now requires you to define the\n      subrepo target that provides the subrepo #2285\n    * Rework the context package during subincludes. This major change\n      allows us to subinclude from preloaded subincludes and fixes a number\n      of inconsistencies with how `package_name()` and `subrepo_name()`\n      #2289\n    * REX: Fix text file and remote file not being marked as executable in remote\n      execution #2314 #2427\n    * Use the Target field to provide help text for plugins #2253\n    * REX: Don't cache action results when the result is missing some of the\n      targets outputs #2322\n    * REX: Don't rename outputs when they collide with folders in the source\n      tree. This was only necessary for local builds. #2325\n    * Fix issue with `go_test()` where it was not correctly discovering the test\n      package sources when built in subrepos #2329\n    * Allow adding arbitrary labels to third party build rules #2333 #2355\n    * REX: Optionally download any targets that link their outputs. This can help with\n      generated sources #2318\n    * Preserve file permissions when storing files in a directory cache that's on a\n      different file system #2346\n    * Handle miss-configured sandbox tool gracefully #2345\n    * Make the built in Please sandboxing run as the host user's PID instead of\n      mapping that user to root in the namespace #2359\n    * Fix issue where nested dictionaries were left mutable after a subinclude\n      #2365\n    * REX: acquire the target lock when downloading target outputs. This fixes\n      a race condition where parallel Please processes would clobber eachothers\n      outputs #2369\n    * Allow targets with entry-points to be the target of a `plz exec` #2379\n    * Parallelize `plz fmt` #2377\n    * Handle the frozen variants of lists and dicts when serialising them to json\n      via the `json()` built-in #2373\n    * Allow accessing multiple levels deep in f-string i.e. `f\"{foo.bar.baz}`. Note,\n      expressions are still limited to basic access like this, not full expressions\n      #2384\n    * Allow `glob` to take a string as well as a list i.e. ``glob(\"*\")` #2391\n    * Allow the context of `text_file()` to be empty #2396\n    * Add preloaded subincludes to the `plz export` output #2397\n    * Added a `linux_amd64` build #2411\n    * REX: sanitise env vars that were passed via `env = {}` #2408\n    * Parse fields in the `[BuildConfig]` section into the correct values when they\n      successfully parse as booleans or integers #2414\n    * Add in the pkg-config and compiler flags to the `go tool cgo` invocation #2428\n    * Remove the internal `//_please` package from subrepos and use the host repo's\n      version to download the Please tools #2429\n    * Stay on the same branch when using `plz query --since` #2431\n    * Remove remote file headers into the built-in rather than using curl. This also\n      follows redirects now. #2437\n\nVersion 16.19.0\n---------------\n    * Add Go 1.18 fuzz testing support #2269\n    * Fix incorrect resolving of @self keyword that should resolve relative\n      to the repo/plugin where it appears #2270\n    * Sort user provided env for remote execution for better determinism #2273\n    * Targets can now be specified to opt out of sandboxing #2282\n    * Fix issue with preloading subincludes, where it would fail if the subinclude\n      itself also had subincludes #2281\n    * Allow outputs to be downloaded transitively in remote when debugging is on #2278\n    * Remove duplicate labels being applied to `go_module()` rules #2254\n    * Gracefully handle missing tools during `plz query changes` #2130\n    * Allow specifying a github access token as an environment variable\n      to `github_repo()` to access private repos #2249\n    * Show the download rate of `remote_file()` rules in the progress\n      update #2261\n    * Improvements to `plz query print --json` to align it more closely\n      to the python-eque (asp) representation #2250\n    * Allow hashing `filegroup()`s by the last modified timestamp of their\n      sources. This helps with large files, and can be done by applying\n      the `fg:hash-modified-time` label #2266\n    * Allow plugins to specify if a configuration value should be inherited\n      from the host repo, or overriden from the subrepo's config #2216\n    * Allow restricting the hashing algorithms for validating the `hashes`\n      field #2267\n\n\nVersion 16.18.0\n---------------\n    * Stop showing line by line coverage results when tests fail #2227\n    * Add support for the xxhash hashing algorithm #2229\n    * Use an environment variable to pass in go to the go test main tool\n      to improve migration strategy #2239\n    * Handle aliases to multi-level commands #2242\n    * Make `plz run sequential` use the same `--output` flag as\n      `plz run parallel` #2243\n    * Implement a command cache to use custom commands to store and\n      retrieve items from the cache e.g. `s3 cp - s3://cache/$CACHE_KEY`\n      #2244\n\n\nVersion 16.17.1\n---------------\n    * The default jarcat_tool (now arcat) for Linux is now correctly linked\n      and does not attempt to use glibc at runtime.\n\n\nVersion 16.17.0\n--------------\n    * `c_library`, `c_static_library`, `cc_library`, `cc_static_library` rules\n      now expose an `out` field for a custom name #2203\n    * New `tag()` builtin was added that allows tagging a target name #2202\n    * Add plugin version check #2206\n    * `remote_file` rule now includes support for the passing of credentials\n      and header values #2128\n    * Fix issue with `plz test -d` where it only accepts a single target but\n      it isn't considering pseudo targets (i.e. //... or //:all) #2205\n    * Plugin config keys can be inferred now, if not set #2212\n    * Further enhancements and fixes to the recent `plz debug` command to\n      better support IDEs #2213\n    * Add docs for `plz exec` #2199\n    * Virtual envs for Python (i.e. venv) are now generated under plz-out #2210\n\n\nVersion 16.16.0\n--------------\n    * Added `plz query config` which can be used to retrieve what the value\n      a config field has from the variaous places Please loads `.plzconfig`\n      files #2190\n    * Fix test fields not appearing for `plz query print` when using `--fields`\n      #2200\n    * Fix missing signatures on darwin_arm64 release #2208\n\n\nVersion 16.15.1\n--------------\n    * Preserve original quotes in multi-line strings #2184\n\n\nVersion 16.15.0\n--------------\n    * Added `plz query reporoot` command #2173\n    * Fixed issue where named fields (e.g. srcs, and outputs) didn't appear\n      in `plz query print` #2174\n    * Add the subrepo name to labels in `plz query graph` #2168\n    * Add `--json` flag to `plz query print` to output the target in json format\n      #2176\n    * `cc_static_library()` now exposes headers to dependant targets #2179\n\n\nVersion 16.14.0\n--------------\n    * The `query revdeps` and `query somepath` subcommands now handle\n      indirect dependencies (i.e. require/provide) between targets\n      better when not including hidden targets #2127\n    * Fix issue where we were de-duplicating linker flags for `go_module()`\n      #2127\n    * Some improvements to the builtin functions: `get_labels()` now has\n      a `transitive` parameter that can be used to opt out of getting\n      labels on transitive dependencies, and `package_name()` now has a label\n      parameter that can be used to get the package of a specific label.\n      #2170\n    * Some improvements to `plz generate` and `LinkGeneratedSources` to\n      opt to use hard links, or automatically update the `.gitignore`\n      during builds #2163\n\n\nVersion 16.13.0\n--------------\n    * Some fixes around subrepos and cross compiling #2134 #2148\n    * Fix issue with `go_module()` when the module is called\n      `go` #2146\n    * Make the shebang optional for `sh_binary()` #2144\n    * Extend the pex tool to support adding debuggers to the pex #2141\n    * Handle c++ in `go_module()` rules #2161\n\n\nVersion 16.12.1\n--------------\n    * Downgrade ProtonMails go-crypto because the newer versions have\n      started adding subpackets to the signature that cause older\n      versions of Please to fail to verify the signature #2138\n\n\nVersion 16.12.0\n--------------\n    * Implemented direct link label, and used this to link go sources\n      from `go_module()` to `plz-out/go` #2118\n    * Strip all `BUILD` files, including `WORKSPACE` in `new_http_archive()`,\n      not just `BUILD`. This is used by `github_repo()` #2117\n    * Fix display issue with multi-line error messages #2119\n    * Exclude symlinks from globs by default. This is feature is gated\n      behind the `ExcludeSymlinksInGlob` feature flag #2052\n    * Fix issue where unrecognised config was being treated as fatal #2126\n    * Implement `--shell=run` which will immediately run the build/test\n      command #2123\n    * Exclude the location of the Please executable from the remote\n      PATH #2136\n\n\nVersion 16.11.0\n--------------\n    * Fix some bugs around plugin configuration #2111 #2107\n    * Implemented a `plz debug` command that can be used to invoke\n      an interactive debugger, or a remote debugger via the `--port`\n      flag. This command only works for `go_binary()` and `go_test()`\n      commands right now but a python implementation is on the way.\n      #2069\n    * Fixed some issues around marking sources as done when preparing\n      inputs for a build action. This resolves some issues where certain\n      inputs were unexpectedly missing from the build directory. #2091\n    * Fixed issue with `plz run --wd=.` where relative paths were being\n      evaluated relative to the repo root not the working directory #2103\n\n\nVersion 16.10.1\n--------------\n    * Fix nil pointer when no cache is set up #2092\n    * Add feature flags for the java and python language plugins\n      to exclude these builtins #2098\n\n\nVersion 16.10.0\n--------------\n    * Fix lockup when cross compiling with --arch #2085\n    * Enable overriding plugin config via `package()` #2083\n    * Add types to plugin config values #2086\n    * Deprecated `--in_wd` in favour of `--wd` which can take any\n      arbitrary path #2095\n    * Fix issue with multiple preloaded subincludes #2082\n\n\nVersion 16.9.0\n--------------\n    * Fix issue where aliases were being printed multiple times #2070\n    * Fix issue where messages were being printed incorrectly during a\n      `plz watch` #2066\n    * Implemented the plugins API as described in #1843 #1925\n\n\nVersion 16.8.0\n--------------\n    * BUILD files can now be added as sources to rules #2056\n    * Aliases are now added to help text when printing usage info\n      #2035\n    * Outputs can now be saved from `plz exec` #2060\n    * The wrapper script now looks at more than just .plzconfig\n      to determine the Please version and download location #2065\n\n\nVersion 16.7.0\n--------------\n    * Sandbox tool now ignored missing directories in `SANDBOX_DIRS`\n      #2041\n    * Allow `Python.DefaultInterpretor` to be a build label #2045\n    * Fix the install script to download arm architectures #2030\n    * Handle annotated labels in `canonicalise()` #2037\n    * Handle relative paths in `Please.Location` #2046\n    * Apply hashes to the download rule in `python_wheel()` instead of the\n      output rule. This feature is gated behind a feature flag for backwards\n      compatibility. #2042\n    * Handle go1.16 embeds in `go_module()` #2036\n\n\nVersion 16.6.1\n--------------\n    * Rules with system sources now run locally by default #2011\n    * Improve validation around rule outputs to avoid race conditions.\n      This change is gated behind the `FeatureFlags.PackageOutputsStrictness`.\n      #1816\n    * Fix problem in the language server that was causing issues on startup\n      #2029\n    * Fix issues with `#cgo` directive in `go_module()` rules #2038\n\n\nVersion 16.6.0\n--------------\n    * Fixed issue with `go_module()` where adding the root package removed\n      all other items in the install list that came before #2019\n    * Fixed the linker flags in `pip_library()` for macOS #2015\n    * Added `ExcludeGlob` config option to the `[Cover]` section that\n      excludes files from coverage based on a glob pattern #2020 #2023\n    * Fix issue with `go_module()` where the incorrect release flags\n      were being applied when filtering third party go sourcews #2024\n\n\nVersion 16.5.1\n--------------\n    * Fix nil pointer when tests fail in certain ways #2016\n\n\nVersion 16.5.0\n--------------\n    * Singleflight all subincludes removing any potential for lockups #2002\n    * Implemented target level locking enabling multiple please instances to\n      build at the same time #2004\n    * Set a timeout on test result uploading #2008\n    * Updated to use go 1.17. This should be transparent to any users. #2010\n    * Various fixes and improvements around bash completions #1998 #2013\n\n\nVersion 16.4.2\n--------------\n    * Honour require/provide for `plz query revdeps` and `plz query changes` #1997\n    * Fix `plz tool langserver` #1999\n\n\nVersion 16.4.1\n--------------\n    * Fixed panic when downloading outputs for stamped targets that were retrived from\n      the cache #1994\n\n\nVersion 16.4.0\n--------------\n    * Fixed issue where coverage was missing some files. Please now adds in 0% coverage\n      for lines found in non-test files that are included in the original targets passed\n      in on the command line #1975\n    * Reduced the size of a build target in memory #1951\n    * Added `--go_trace_file` to write a trace file that can be opened with `go tool trace`\n      #1987\n    * Added a new `add_data()` builtin that can be used to add data to a target in a pre or\n      post build function #1973\n\n\nVersion 16.3.0\n--------------\n    * Implemented a `plz exec` subcommand that is designed for used by IDEs to run targets\n      within the hermetic env for debugging and profiling #1917\n    * Allow `system_library()` to take in directories #1931\n    * Some LSP fixes and debug improvements #1937 #1943 #1962\n    * The python behave test runner now checks `$RESULTS_FILE` #1940\n    * Rework the cycle detector to run async only once we detect a deadlock. This also addresses\n      performance problems on large build graphs where the cycle detector was simply too slow. #1936\n    * Fix issue where `plz watch` couldn't acquire the repo lock #1944\n    * CLI completions improvements #1936 #1948\n    * Various performance improvements focussing on memory usage. 16.3.0 now uses 50% less memory\n      and parses the build graph in 75% of the time. #1949 #1947 #1952 #1956 #1921 #1960 #1955\n      #1961 #1964 #1969\n    * `go_mod_download()` and `go_module()` now add the module as a label which can be used to\n      list modules: `plz query print --label go_module: //third_party/go/...` #1954\n    * Add a `remote` label to `remote_file()` #1959\n    * Query revdeps fails fast on targets that don't exist #1953\n\n\nVersion 16.2.1\n--------------\n    * Make `pip_library()` more deterministic by stripping debug symbols in C code #1909\n    * Make `plz hash --update` keep going once it updates a hash so it can update multiple\n      in one pass #1919\n    * Apply linker flags to `go_benchmark()` #1924\n    * Fix issue where the cycle detector wasn't detecting cycles correctly #1926\n    * Strip please location from PATH for remote execution #1930\n\n\nVersion 16.2.0\n--------------\n    * Fixed issue where Please would attempt to use xattrs on unsupported filesystems\n      under some circumstances #1866\n    * Fixed issue were Please status output during builds would stop updating after a\n      failure #1868\n    * Various performance work #1847 #1848 #1869 #1872 #1876 #1877 #1881 #1885\n      #1878 #1888\n    * Fixed issue where `post_build` functions would not have config overrides set\n      via `package()` in some circumstances #1871\n    * Added an `is_semver()` builtin to check if a string matches the semver format\n    * `c_binary()` now allows defines to be a dictionary\n    * Applied the correct expected packages to `go tool compile` invocations to address\n      some issues with debug symbols #1896\n    * Added a `gitlab_repo()` rule which works similarly to `github_repo()` #1898\n\n\nVersion 16.1.1\n--------------\n    * Fixed an issue where debug symbols didn't work for go targets build with Go 1.15+\n      #1845\n    * Some remote execution small fixes #1838 #1842 #1849\n    * Added zstd support to the jarcat tool #1837\n    * Allow defined on `cc_binary()` to be a dict #1854\n    * Root package is now picked up by `plz query changes` #1855\n    * Check that a target owns it's named inputs #1857\n    * Fixed issue where goland definitions weren't being applied when\n      the binary found linker flags on it's dependencies #1859\n    * Handle the empty string in the `go_module()` install list #1858\n\n\nVersion 16.1.0\n--------------\n    * Redesigned the build graph to be more event driven utilise channels and blocking\n      threads to reduce lock contention. #1102 #1781 #1787 #1820 #1803\n    * Add output grouping to `plz run parallel` so that the stdout and stderr can be\n      linked back to the target that generated them afterwards. #1768\n    * Fix issue with `plz watch --run` where it didn't clean up its process properly\n      on restarting #1780\n    * Fix issue with rpartition #1784\n    * Fix non-deterministic hashing of test tools when it's a dictionary #1791\n    * Handle \\r in BUILD files #1815\n    * Make go_mod_download() create a dummy go.mod to avoid picking up the main\n      repo's go.mod #1814\n    * Make `plz generate` automatically link generated sources even if we haven't\n      set LinkGeneratedSources in the .plzconfig #1770\n    * Fix some issues around go_module() when compiling binaries #1826\n    * Implement pkg-config for go_module() #1823\n    * Added a `plz query whatinputs` subcommand to find targets that consume a given\n      source file #1825\n\n\nVersion 16.0.1\n--------------\n    * For remote execution, Please now downloads runtime data for locally\n      executed tests first, avoiding errors when calculating the runtime hash #1769\n    * Please now support multiple profiles provided by `--profile` #1773\n    * The http cache now record the hash on the files avoiding issues where\n      subsequent runs resulted in a cache miss #1771\n\n\nVersion 16.0.0\n--------------\n    * The migration guide detailing the breaking changes and how to address them\n      can be found on this issue: #1590\n    * Various changes and fixes around remote execution #1584 #1624 #1642 #1656 #1672\n      #1698 #1699 #1713 #1724 #1732\n    * Implement `text_file()` rule that can be used to generate a file from\n      the build language. This is used in `sh_cmd()` to avoid escaping env vars\n      by the setting `expand_env_vars = False` #1585 #1666\n    * Move please_go_install and please_go_test into unified please_go\n      tool #1600 #1603\n    * Removed the --nocache flag #1612\n    * Removed the `out` param on `go_library()` in favour of the `package`\n      param #1561\n    * Removed `rule_metadata` param on `build_rule()` #1580\n    * Stop pulling in transitive dependencies for `go_test()` and other\n      go rules #1593 #1609\n    * Removed `//:pleasings` as a default repo. This can be added back in\n      with `plz init pleasings` #1591\n    * Removed `FeatureFlags.PleaseDownloadTools` and made Please download\n      them automatically #1582\n    * Added architectures to `go_toolchain()` to facilitate cross compiling\n      when targetting with a build label e.g. `///linux_amd64//...` #1605\n    * Improved ergonomics around git scm commands to report errors from stdout\n      #1611\n    * Added `--level` to `plz query changes` to get the reverse deps of the\n      changed target. This replaces `--include_dependees` which is now deprecated\n      and to be removed in v17 #1607\n    * The interpreter will now print the stack trace when encountering a\n      go panic #1614\n    * Various linux sandbox improvements to allow finer control #1617 #1618 #1622\n      #1632\n    * Fix cross-compiling binary `go_get()` targets #1628\n    * Added `deps` subcommand to `//_please:please_go` which can resolve go\n      imports based on the Please build graph #1631\n    * `plz help` no longer prints private args to build rules #1633\n    * Add `includes` and `defines` to cc rules #1637\n    * Performance improvements around `glob()` #1637\n    * Fixed some bugs with `.format()` #1635\n    * `protoc_binary()` can now take multiple URLs based on platform #1651\n    * Various improvements and fixes to proto and grpc rules. Mostly around\n      go and the new protoc plugins. #1653 #1655 #1665 #1716 #1717 #1705\n    * Handle zipsafe applied directly on python binaries #1660 #1688\n    * Add trimpath to `go_module()` to improve determinism when compiling\n      third party code #1654\n    * Fixes to `go_test()` related to coverage import paths #1667 #1670\n    * Please will no longer set the stdout and stderr in `log/test_results.xml`\n      to save space in CI. Added a config option to opt in. #1674 #1685\n    * Please can now compress test results when uploading them #1668\n    * Deprecated `raise()` which will be removed in v17 #1634\n    * Fixed issues related to `go_test()` in the repo root #1675\n    * Please no longer allows the go package `some/package` to be imported as\n      `some/package/package` #1680\n    * Test tools are now included in the runtime hash, fixing some issues around\n      test caching. #1690\n    * Changes around accessing `$HASH` to make it available for non-stamped\n      targets (`stamp = False`) #1696\n    * Added `semver_check()` which can be used to check semver constraints\n      from the build language #1704\n    * Various changes to `plz query changes` and `plz query revdeps` #1702\n      #1718\n    * Change how download and hash maven jars (removed FeatureFlags.MavenJar)\n      #1701 #1710\n    * Please now retrieves optional outputs from the cache #1727 #1731\n    * Deprecate `plz build --prepare` in favour of just using `--shell` #1730\n    * Fix up how we determine installing into a subdirectory for `pip_library()`\n      #1728\n    * Implement patches for `go_module()` and optionally strip sources from\n      `go_toolchain()` #1734\n    * Make `go_module()` install the root package when using the `foo/...`\n      wildcard #1732\n    * Fixed some issues around python coverage on macOS #1735\n    * Added `--in_tmp_dir` flag to `plz run` to run in the same temp directory\n      that `plz test` would run in #1733\n    * `gentest()` can now accept lists for `cmd` and `test_cmd` #1760\n    * `plz-out` is now excluded from `glob()` results #1756\n    * Added a darwin_arm64 release for the new apple silicone. Will need to be\n      installed manually for now as `get.please.build` isn't aware of this\n      release yet.\n\n\nVersion 15.16.0\n--------------\n    * Generated code can now be linked back into the repo. Any target\n      with the `codegen` label will be symlinked into the source tree.\n      The proto rules have been updated accordingly. A `.gitignore` can\n      be generated via `plz generate --update_gitignore .gitignore`. This\n      can help dramatically with integrating IDEs and other tools #1551\n    * The `--rerun` flag now works with remote execution #1566\n    * Cross compilation now works with remote execution #1564\n    * Removed the RPC level compression for remote execution #1559\n    * The wheel naming scheme can now be repeated to support multiple\n      formats #1439\n    * Fix `index out of bounds` in format strings for BUILD files #1565\n\n\nVersion 15.15.0\n--------------\n    * Added support for .dSYM debug symbols on macOS #1522\n    * go_module() will now collect linker flags automatically when\n      the PleaseGoInstall feature flag is enabled #1525\n    * Fix various issues with install wildcards for please_go_install\n      #1524\n    * Fix error message for absolute symlinks in src files #1530\n    * Implemented `plz update --latest_prerelease_version` #1531\n    * Added `env` field to genrule() to set arbitrary env variables\n      #1536\n    * Fix regression with golang protobuf imports #1539\n    * Implement entry points on labels for command expansion e.g.\n      $(out_exe //some:tool|entry-point) #1545\n    * Added labels to go_binary() #1542\n    * Fix regression for `plz run` and subcommands where it no longer ran\n      targets from stdin #1548\n\n\nVersion 15.14.0\n--------------\n\n    * Please now respects the Arch config value and loads that platforms\n      .plzconfig correctly #1504\n    * Various improvements to go_modules() #1510 #1484 #1520\n    * Please will now for config in $XDG_CONFIG_DIRS #1518\n\n\nVersion 15.13.0\n--------------\n\n    * Added package field to go_library() to override the package name\n      for when it differs from the rule name #1478\n    * Various go_module() fixes and changes #1481 #1483 #1482 #1490 #1505\n    * Implemented entry points for plz run #1491\n    * Allow the repo arg of go_get() to be a build rule to enable vendoring\n      #1487\n    * Please now downloads tools rather than requiring them as part of the\n      distribution when the PleaseDownloadTools feature flag is set #1442\n    * Support for the new go grpc protoc plugin #1488\n\n\nVersion 15.12.0\n--------------\n\n    * Added additional hash functions: crc_32, crc_64 and blake3 #1447\n    * Fixed issue where the pip tool couldn't be a build target #1452\n    * go_get() now sandboxed the compilation step when please is\n      configured to sandbox builds #1462\n    * Fixed issue around `plz run` for binary targets within a\n      subrepo #1465\n    * Fixed issue with `plz run --arch` where it would complain\n      the target was not found in the build graph #1468\n    * Fixed issue with moving outputs when /tmp is mounted under\n      a different filesystem #1466\n    * Fixed issue with subinclude() locking up when including from\n      a subrepo #1464\n    * Fixed issue around Go rules when operating in the root please\n      package #1456\n    * Added config option for pip to disable the debian --system flag\n      as this is no longer there for newer Debian installs #1470\n\n\nVersion 15.11.0\n--------------\n\n    * Added PreloadSubincludes in a similar vein to PreloadBuildDefs\n      which allows the specified target to be subincluded automatically\n      in all packages #1414\n    * Added a new method for installing go modules that avoids a number\n      of issues with using \"go build\" from within Please. This feature\n      is experimental and can be enabled with the PleaseGoInstall\n      feature flag #1417\n    * Output directories now maintain file permission when moving outputs\n      to plz-out #1441\n    * Fix issues around subincluding from a target defined in the\n      current package #1424\n    * Fix regression in go_get() where it was failing to produce\n      outputs in some circumstances #1437\n\n\nVersion 15.10.0\n--------------\n\n    * Added go_module() rule that handles vanity imports and\n      module major versions better than go_get() #1396\n    * Updated pip_library() to work with pip v20.3.x+ #1421\n    * Fix issue with duplicate outs on go_get() causing missing\n      outputs #1437\n\n\nVersion 15.9.2\n--------------\n\n    * Various small fixes and optimisations to remote execution\n      #1401 #1397 #1402 #1403\n    * Address edge case for filegroups so they now check if they're\n      overriding another package #1404\n    * Added option for a light colour scheme that works better for\n      terminals with a light background #1405\n    * Fixed non-deterministic hashes for outputs in go rules #1410\n\n\nVersion 15.9.1\n--------------\n\n    * Print milestone message to stderr instead of out\n\n\nVersion 15.9.0\n--------------\n\n    * Transitive dependencies of subinclude() calls are no longer downloaded\n      if remote execution is enabled.\n    * Secrets in the [BuildEnv] section no longer contribute to the config hash\n      #1387\n    * Codelabs are now live at https://please.build/codelabs.html\n    * Made $DATA and $TOOLS variables available at runtime when using\n      `plz run --env` #1384\n    * `protoc_binary()` now translates go style os and arch values to the\n       correct format for their releases #1394\n\n\nVersion 15.8.2\n--------------\n\n    * Stop sh_test() modifying the permissions of it's inputs #1375\n    * Print a summary of log messages after a build #1377\n    * Named tools, test_tools and data are now formatted as a dict\n      instead of a list for `plz query print` #1379\n    * Binary filegroups no longer modify their sources permissions\n      #1376\n\nVersion 15.8.1\n--------------\n\n    * Revert to old behavior for go_get() when both `get` and `install`\n      are lists #1365\n\n\nVersion 15.8.0\n--------------\n\n    * Allow go_get() to specify installs per module #1335\n    * Allow format strings and raw strings to be implicitly\n      concatenated in the build language #1344\n    * Added is_platform() rule which can check the current platform\n      matches the specified cpu and operating system.\n    * Made go_get() specific about its outputs based on the installed\n      packages. This allows multiple go_get() rules install different\n      packages from the same module. This can help resolve cyclic\n      dependencies. #1341 #1352\n    * pip_library() now uses python -m pip instead of pip on the path\n      to avoid problems where pip and python are different versions.\n      #1346\n    * Added exported_deps to genrule() and gentest() which can be used\n      to re-export dependencies to those that depend on these rules.\n      #1345\n    * Made maven_jar() download its sources in a way that is compatible\n      with tooling. This is gated behind the MavenJar feature flag and\n      is due to be released in v16.\n    * Fixed an issue where tools were being copied into build rules\n      when they used entry points #1349\n    * Made go_toolchain() install the standard libraries of the target\n      platform when cross compiling #1350\n\n\nVersion 15.7.1\n--------------\n\n    * Subincludes now set the config values based on the --arch flag\n      correctly #1324\n\n\nVersion 15.7.0\n--------------\n\n    * Glob will now include hidden files when Bazel compat is enabled #1305\n    * Fix some niggles around select() and config_setting() #1324\n    * Improved test output to include real and total time #1309\n    * Fix to cgo_library() to set its import path correctly #1310\n    * Adding multiplication and division to the BUILD language #1314\n    * go_get() now tags download rules based on the whole module name\n      rather than just the github group #1327\n    * go_get() now supports multiple patches #1328 #1333\n    * Fix nil pointer when failing to parse test output for remote execution\n      #1330\n\n\nVersion 15.6.0\n--------------\n\n    * Added an `entry_points` dict to `build_rule()` which can be used\n      to name a number of outputs from a build rule. These can later be\n      referred to as tools in other rules. See `java_toolchain()` for an\n      example. #1243\n    * Rewrote `java_toolchain()` to use aforementioned entry points.\n      NB: this implementation lacks support for javac workers #1263\n    * Added `go_toolchain()` build rule. This is still a work in progress\n      but currently downloads the golang distribution. This can then be\n      used to set GoTool in your `.plzconfig`. #1286\n    * Please will now retry on failures to download updates #1257\n    * The pleasew wrapper script will now pass `$PLZ_ARGS` when it invokes\n      please much like the bootstrap script. This can be useful in a CI\n      environment. #1252\n    * Added new sub-command `plz fmt` that will try and format build files.\n      This uses a modified version of Bazel's buildifier that supports more\n      of please's build language. #1265\n    * Fix issue where `go_test()` wasn't using the configured `GoTool` for\n      coverage. #1271\n    * Allow `plz query somepath` to read from stdin #1269\n    * Added `--log_append` which will make please append to `plz-out/log/build.log`\n      instead of overriding it. This can be useful when piping outputs from\n      `plz query` back into please. #1273\n    * Introduced the concept of milestone releases! Once we feel please has reached\n      a milestone in its development, we will write up a summary of recent changes\n      and that release will be marked as a milestone. Please will print a dialogue\n      linking to this writeup when updating. Watch this space, we will also be\n      distributing these via a newsletter! #1281\n    * Remote execution: turn off gzip compression by default (#1283) and add support\n      for zstd compression (#1288)\n\n\nVersion 15.5.0\n--------------\n\n    * Added `test_tools` which works the same as `tools` but\n      makes them available to `test_cmd` instead #1247\n    * Added $(out_dir ...) and $(out_locations ...) command\n      replacements #1244\n    * Made `plz query roots` and `plz query filter` omit hidden\n      rules from their results. This is closer to how other `plz query`\n      commands work. Also added a `--hidden` flag so they can be\n      included when needed #1242\n    * Avoid trying to download the empty blob in a few places for\n      remote execution #1241\n    * Fixed edge case issue with go tests when there's no tests\n      and a TestMain method #1245\n\n\nVersion 15.4.1\n--------------\n\n    * Additional test outputs are now optional when when executing\n      remotely just as they are when executed locally #1234\n    * Improved performance of preparing inputs for targets when\n      executing remotely #1236\n\n\nVersion 15.4.0\n--------------\n\n    * The linux Please binary is now statically linked so is portable\n      across musl and glibc linux distributions #1180\n    * GOROOT is now respected when configured and the go tool is\n      determined based off this variable. If the GOROOT is not provided,\n      the GOROOT is determined as `go env GOROOT` based on the\n      configured go tool. #1195\n    * Java binaries are now self executable by default. This feature\n      is gated behind a feature flag until v16. Type plz help featureflags\n      for more information. #1197\n    * Fixed esoteric edge cases in jarcat where it would fail to create\n      directories under some circumstances #1203\n    * subrepo_name() and package_name() now work in the top level of a\n      build definition file returning the package and subrepo of their\n      build rule respectively #1198\n    * plz init is now interactive and will guide you through adding\n      the pleasings subrepo if you wish. The pleasings subrepo will\n      no longer be added implicitly as of please v16 #1205\n    * Java tests no longer fail when the junit tool is a real file rather\n      than being on the path #1207\n    * Fixed regression with C and C++ proto rules #1216\n    * Made hash_filegroup more portable by detecting available implementations\n      of sha1hash #1209\n    * The go_benchmark() rule now marks all its internal rules as test only #1221\n    * Added interactive golang setup to plz init. Please will now detect a\n      go.mod file and set your import path correspondingly. It will also\n      warn around common pitfalls when setting up go on the path #1224 #1225\n    * Added config option to make please descend into the package directory\n      before running go tests. This is closer to how `go test` works and can\n      help migrate from `go build` to please #1226\n    * Deprecated --nocache which will be removed in v16 #1229\n    * The pip_library() rule now applies its labels to all its sub-rules\n      #1211\n    * Added a config option to make please `set -e` before running any\n      commands. This will make please fail fast and avoids errors being silently\n      ignored #1210\n    * Additional test outputs are now downloaded to plz-out when tests\n      are run through remote execution #1230\n    * Please now adds a `User-Agent` header to remote_file() requests #1232\n\n\nVersion 15.3.0\n--------------\n\n    * Implement more principled linking of go code, avoiding a lot of\n      hackorama from the old approach and allowing arbitrary import\n      paths for go_library rules. #1158\n    * Added subrepo_name built in function to the build language. This\n      should make targeting rules within your repository possible\n      even when it's being used as a subrepo. #1190\n    * Improved the way labels are applied to tests so all subrules are\n      also labeled. #1189\n    * Hashes of rules using \"PassUnsafeEnv\" no longer change as the env\n      changes. #1187\n    * Fixed `--in_wd` so that it stays in directory correctly. #1172\n\n\nVersion 15.2.0\n--------------\n\n    * Improved portability of applying patches to go_get rules #1160\n    * Allow staying in the current directory when using plz run by\n      passing the --in_wd flag\n    * Fixed some issues around linking go packages (#1061 and #1157)\n    * Added removeprefix and removesuffix built in functions to the\n      build language #1155\n    * Made subinclude variadic so multiple targets can be included on\n      one line #1153\n    * Removed `plz ide intellij` #1141\n    * Http cache now retries on error. #1143\n    * Please now returns the correct error code on cross compilation\n      failures #1151\n    * Improve the get_command built in function to return a dictionary\n      in that case #1147\n    * There is now a binary release of please for FreeBSD #1142\n    * Please now cleans up stale outputs correctly which was causing\n      issues when renaming a target #1134\n    * Added an example http cache implementation. This might be preferable\n      to something like nginx as its configuration is very light weight.\n      #1133\n\n\nVersion 15.1.0\n--------------\n\n    * Some improvements around git operations and stamping targets. There's\n      performance improvements (#1114 and #1113) as well as better error\n      reporting (#1125)\n    * New configuration option to limit the number of concurrent http cache\n      requests. The default limit is 20. #1115\n    * Made plz update respect the plain output flag #1120\n    * Some improvements to the remote file so that it can extract a subset of\n      files from the archive. The out parameter is now also optional and if it is not\n      provided, the files are extracted into the root of the rule's output. #1123\n    * Updated please to use go 1.15\n    * HTTP cache now cleans up connections more robustly #1129\n    * `plz clean --nobackground` now cleans read only files #1122\n    * Support for custom output name for sh_binary rules #1119\n\n\nVersion 15.0.1\n--------------\n\n    * Go rules now write a go.mod file to plz-out to help go tooling work better\n      with a please repo.\n    * Fix links in plz-out/go/src so that they link to files rather than just the\n      root of the repo. #1105\n    * Fixed the --rerun flag on tests for remote execution to force a re-run of an\n      already passed test. #1100\n\n\nVersion 15.0.0\n--------------\n\n    * Please now supports remote execution using the\n      [Remote Execution API](https://github.com/bazelbuild/remote-apis).\n      See the documentation for more detailed information about\n      how to set it up and what's needed.\n    * `plz query affectedtargets`, `changed` and `changes` have been\n      consolidated into a single command `plz query changes`. See #922\n      for more details & migration info.\n    * `plz query deps` now always outputs unique dependencies (like the\n      `--unique` flag used to do).\n    * The RPC cache has been completely removed. We recommend the HTTP\n      cache for simple caching setups, which some CI providers may\n      offer by default.\n    * `plz follow` has been removed.\n    * The output of `cc_shared_object` rules are automatically prefixed\n      with `lib` where appropriate.\n    * SHA256 is now the default hash function. SHA1 hashes specified in\n      BUILD files will continue to work.\n    * `hash_filegroup` is now implemented in the BUILD language instead of\n      as a builtin. Generally it shouldn't matter but the output format is\n      slightly different (it is hex-encoded instead of base64).\n    * Changed the proto_language contract: language plugins now have to output\n      into $OUT_DIR instead of $TMP_DIR. This is to facilitate a change that\n      simplifies the inner workings of proto_library improving incrementality,\n      as well as doubling the performance when built using remote execution.\n    * Added a --rerun flag to plz test. This shouldn't be strictly necessary\n      if you're builds are pure however it can be useful when changing your\n      environment/toolchain.\n    * Added module_major_version argument to go_get rule. This works around\n      some issues with modules that have done a major release. See the\n      go_get documentation for more information. #1078\n\n\nVersion 14.6.0\n--------------\n\n    * Fixed a file leak in please #1017\n    * Fixed a concurrency issue with uploading test results when using\n      --num_runs #1016\n    * Added metadata field to build rules that can be an arbitrary object.\n      This metadata can later be retrieved by a new built-in function\n      get_rule_metadata. #1006\n    * Added java_toolchain rule that can be used to download a JDK. This\n      can be passed to java_library and java_binary to specify the version\n      of java to use. This is still a WIP and doesn't support a number of\n      things, most notably javac workers. #1011\n    * Added a go_benchmark rule that can be used to produce a binary to\n      run a go benchmark suite. #1014\n\n\nVersion 14.5.7\n--------------\n\n    * Reused outputs of previously remotely built targets are now downloaded\n      correctly in some circumstances.\n\n\nVersion 14.5.6\n--------------\n\n    * Incrementality stats & caching statuses are now calculated correctly\n      when using remote execution.\n\n\nVersion 14.5.5\n--------------\n\n    * Test outputs are no longer downloaded in batches for remote execution\n      to avoid exceeding the size limit.\n    * $(exe) replacements no longer include local paths for remote execution.\n\n\nVersion 14.5.4\n--------------\n\n    * Test output is no longer repeated for multiple failing runs (#1001)\n    * Fixed output package checks (#999)\n    * Various remote execution fixes.\n\n\nVersion 14.5.3\n--------------\n\n    * Fix issue where test_results.xml was missing package and suite names\n\nVersion 14.5.2\n--------------\n\n    * Go test output now parses correctly again (#994)\n    * Matches of original targets for downloading outputs are now more exact (#987)\n\n\nVersion 14.5.1\n--------------\n\n    * Various improvements to Go test result parsing, especially skip messages (#980, #982)\n    * Remote execution now orders directory contents lexicographically (#979)\n    * `plz test --shell` correctly sets environment variables accounting for multiple runs.\n\n\nVersion 14.5.0\n--------------\n\n    * Runs tests in parallel across multiple workers when providing --num_runs flag (#996)\n    * Fixes for go coverage to make sure the coverage file is always generated (#977)\n    * Fix for parsing go 1.14 test output (#969)\n    * Fixed \"negative repeat\" issue with narrow terminal size when rending progress bars (#967)\n    * Supporting --num_runs meaningfully for remote execution (#974)\n\nVersion 14.4.4\n--------------\n\n    * Pexes are now more Windows compatible (#947)\n    * Suppressed some spurious logfile creation (#949)\n\n\nVersion 14.4.3\n--------------\n\n    * Rules consuming files across package boundaries are now checked more accurately and\n      at build time rather than parse time.\n    * Data attributes are downloaded recursively when building remotely.\n\n\nVersion 14.4.2\n--------------\n\n    * Auth tokens are now attached to outgoing requests on the remote asset API when\n      the URL differs to the main execution API.\n\n\nVersion 14.4.1\n--------------\n\n    * Various improvements to double-star globbing implementation.\n    * `plz hash --update` is now a bit more robust to non-trivial BUILD files.\n\n\nVersion 14.4.0\n--------------\n\n    * Binary rules now generally accept a `data` argument indicating dependencies they need at runtime\n      (paralleling the existing equivalent on tests). This is mostly relevant for remote execution.\n    * Double-star globbing is now more consistent (#927, #874)\n    * Parsing of JSON coverage output from Istanbul is now more correct (#923)\n    * `plz run` now accepts a `--remote` flag allowing it to leverage remote execution.\n\n\nVersion 14.3.11\n---------------\n\n    * Fixed an issue since 14.3.8, plz now again falls back to copying when linking fails.\n\n\nVersion 14.3.10\n---------------\n\n    * Suppressed some spurious errors about linking duplicate test results into surefire directory.\n\n\nVersion 14.3.9\n--------------\n\n    * Fix creation of links in e.g. plz-out/go which in some rare circumstances could\n      end up polluting other parts of plz-out (#899).\n    * Fixed java_library rules that took only resources and not srcs (#900)\n\n\nVersion 14.3.8\n--------------\n\n    * Fix for python_test which was not correctly accepting `data` as a dict (#899).\n    * Allow symlinks in jarcat tarballs (#898)\n\n\nVersion 14.3.7\n--------------\n\n    * Coverage reports use unified class / file names (#885)\n    * Fixed a bug in `plz init` in the previous version.\n\n\nVersion 14.3.6\n--------------\n\n    * Python testrunner compatible with newer versions of coverage (#870)\n    * Updated a number of third-party Python libraries (#872)\n    * Temporarily reverted concurrency change from last release.\n\n\nVersion 14.3.5\n--------------\n\n    * Fix bug where trying to subinclude :all would hang forever (#862)\n    * Better concurrency for parse-only operations on bigger machines\n    * Updated to Go 1.14\n    * More remote execution fixes\n\n\nVersion 14.3.4\n--------------\n\n    * Fixed some quoting in Go rules from previous release.\n\n\nVersion 14.3.3\n--------------\n\n    * Fixed a bug where `plz query changes` could be thrown off by sources beginning with ./\n      All source files now have that stripped for consistency.\n    * Some corrections for proto_library rules at the root of the repo.\n    * Extensively quoted build variables to make things work better in paths with spaces (#850)\n\n\nVersion 14.3.2\n--------------\n\n    * Add an SCM_COMMIT_DATE env var to stamped build targets (in the format\n    YYYMMDD)\n\nVersion 14.3.1\n--------------\n\n    * Fix jarcat when rules are sandboxed\n\n\nVersion 14.3.0\n--------------\n\n    * The `data` argument to various test rules can now be named (as `srcs` and `tools` etc).\n    * Remote execution now requires the new Remote Asset API for `remote_file` rules.\n\n\nVersion 14.2.2\n--------------\n    * Modified `sh_binary` rule to exclude its own output from zip.\n\n\nVersion 14.2.1\n--------------\n\n    * Fixed args sometimes not being honoured in `plz run`.\n\n\nVersion 14.2.0\n--------------\n\n    * Targets with stamp=True now get a file containing metadata about their dependencies (#805)\n    * plz run now does a better job of terminating subprocesses when killed (#808)\n    * Various fixes towards bootstrapping on ARM (#796)\n    * Support for TLS with remote execution\n    * Remote execution displays progress and RPC bytes in/out\n\n\nVersion 14.1.12\n---------------\n\n    * More fixes for remote execution\n\n\nVersion 14.1.11\n---------------\n\n    * Fixed some overly aggressive logging from remote API libraries\n    * Multiplex capabilities when there's a different execution / CAS server\n    * jarcat now extracts xzipped tarballs correctly.\n\n\nVersion 14.1.10\n---------------\n\n    * python2 compatibility fix in please_pex\n    * Various remote execution fixes\n    * protoc_binary now provides well-known types as a dependency\n\n\nVersion 14.1.9\n--------------\n\n    * Make remote timeout configurable (#770)\n    * Fix faulty download blob logic for servers that support batching reads.\n\n\nVersion 14.1.8\n--------------\n\n    * Fix for an issue where protoc_flags passed to grpc_library were passed\n      twice to the actual protoc invocation\n    * Changed .pydistutils.cfg to setup.cfg in pip_library (#762)\n\n\nVersion 14.1.7\n--------------\n\n    * More fixes for remote execution / caching.\n\n\nVersion 14.1.6\n--------------\n\n    * Fixed label replacements for tools in subrepos\n    * Fixed uploading stdout to remote CAS\n\n\nVersion 14.1.5\n--------------\n\n    * More fixes for remote execution / caching.\n\n\nVersion 14.1.4\n--------------\n\n    * Fix issues with flags for recent pip versions\n    * More fixes for remote execution / caching.\n\n\nVersion 14.1.3\n--------------\n\n    * More small fixes to remote execution code.\n\n\nVersion 14.1.2\n--------------\n\n    * Lots of small fixes to remote execution code. It remains experimental.\n\n\nVersion 14.1.1\n--------------\n\n    * Fixed width calculation in interactive terminal display\n    * Fixed a long-standing bug in --failing_tests_ok flag so it only applies to tests.\n\n\nVersion 14.1.0\n--------------\n\n    * Added a separate `go_test_main` rule to template the main file for a go test in\n      a way that can be consumed separately from an actual test.\n    * Exit codes are now a bit more granular.\n    * `plz query print` now accepts a `-l` / `--label` flag to print specific labels for a target.\n    * `plz tool` works outside a repo\n    * Fixed a rare segfault when using both RPC and remote execution caches\n    * Various langserver fixes\n\n\nVersion 14.0.0\n--------------\n\n    * Hashes are stored on files in xattrs (when available) for faster rebuilds (#640).\n    * Use of xattrs can now be disabled for systems where they are not supported (#641, #548, #644)\n    * The machine config file now lives in `/etc/please/plzconfig`\n      (previously it was `/etc/plzconfig`).\n    * `plz tool maven` and the builtin `maven_jars` are removed. They can be used from their\n      new home of https://github.com/thought-machine/pleasings.\n    * Non zip-safe pexes are now cached in $HOME & can be reused on subsequent runs.\n    * Users can bring their own test runner via the `python.testrunnerbootstrap` config property.\n    * `go_test` no longer works for versions prior to 1.8\n    * `go_library` rules using assembly now only work with Go 1.12+ (previously they did not\n      work with 1.12) (#659)\n    * The HTTP cache protocol has changed; we no longer provide a server implementation, but it\n      is now compatible with many other implementations (e.g. Cirrus, nginx/webdav, etc).\n    * The RPC cache is now deprecated in favour of a new remote execution cache. The client\n      remains in plz but we aren't providing the server implementation any more.\n    * `plz rebuild` is removed in favour of `plz build --rebuild`\n    * The `--keep_going` flag has been removed (#655)\n    * `python_binary` and `python_test` now take a `site` argument determining whether they\n      import the site module at startup. Default is off. (#634)\n    * Import lines are excluded from Python coverage stats (#607)\n    * Jarcat honours --strip_prefix in some more places\n    * Support for uploading test results to a remote server (#657)\n\n\nVersion 13.8.2\n--------------\n\n    * Fix watch on files at repo root (#618)\n    * Allow targets labelled as manual to be included in (most) `plz query` invocations\n    * Add jcenter.bintry.com as a default Maven repo to improve reliability (looks like\n      repo1.maven.org rate limits us sometimes).\n\n\nVersion 13.8.1\n--------------\n\n    * Update returns to original directory before re-exec (#627)\n    * More arguments are completed as filenames (#628)\n    * Initial support for incremental coverage calculations.\n\n\nVersion 13.8.0\n--------------\n\n    * Allow specifying Python interpreter options through global config (#625)\n    * Allow `sh_cmd` to take commands as a list (#623)\n    * Explicit feature passing in the behave test runner integration (#621)\n\n\nVersion 13.7.1\n--------------\n\n    * More robust subprocess management (#620)\n    * Improved default handling of files shown for coverage.\n    * Handle sources not existing on PATH more gracefully during `plz query changes`\n    * Allow for non-flat tarballs (#624)\n\n\nVersion 13.7.0\n--------------\n\n    * `genrule` now accepts `pass_env`, a list of environment variables to be passed through (#575)\n    * `go_get` rules can now find dependencies without `gopath` (#617)\n    * Downloaded plz versions can be hash validated in addition to signature checked (#615)\n    * Jacoco version updated for better java 11 compatibility.\n\n\nVersion 13.6.3\n--------------\n\n    * Instruct user directory to add to PATH manually. (#614)\n    * Use master for default revision in go_get, to avoid slow path. (#613)\n    * Setting PDEATHSIG on child processes (#605)\n\n\nVersion 13.6.2\n--------------\n\n    * bzip2 decompression is now supported when extracting remote_file rules.\n    * go_get improvements for multiple downloads in the same rule.\n    * No longer fails for stamped rules when the SCM revision is unknown; instead\n      the placeholder <unknown> will be returned.\n\n\nVersion 13.6.1\n--------------\n\n    * Add licences field to go_get\n    * Warn if stdin is being piped but not being read\n\n\nVersion 13.6.0\n--------------\n\n    * Various fixes for `plz watch --run` (#599, #600, #602, #603)\n    * Fixes for `plz coverage` with no argument (#535)\n    * More cross-compilation fixes (#603)\n    * `remote_file` now takes an `extract` argument to extract tarballs / zipfiles.\n    * Added `get_licences` builtin to find licences of a target.\n\n\nVersion 13.5.5\n--------------\n\n    * Fix for static Go binaries with definitions (#597)\n    * Allow config_setting rules to switch based on OS (#596)\n\n\nVersion 13.5.4\n--------------\n\n    * Fix for finding subrepos (fixes cc_test in #577)\n    * Fixed secret substitutions only replacing the first tilde (#572)\n\n\nVersion 13.5.3\n--------------\n\n    * Several cross-compilation issues fixed (#581, #582, #584, #585).\n    * Process termination is more robust for test timeouts etc.\n\n\nVersion 13.5.2\n--------------\n\n    * Cached test results have an equivalent property set.\n    * Fixed pre_build argument not always being honoured on `genrule`.\n    * `plz init config` now does not need to be run within a repo (as `plz init` does not).\n\n\nVersion 13.5.1\n--------------\n\n    * Level of reverse dependencies queried can now be controlled by a flag (#570)\n\n\nVersion 13.5.0\n--------------\n\n    * Test sizes are now configurable through config (and more usable for non-builtin rules)\n    * Old user config files (in ~/.please/plzconfig) are now auto-migrated to new location.\n    * A Homebrew formula is now available (#530)\n    * please.location config property is now auto-detected based on install location.\n      This is somewhat nicer for system-level installs through Brew etc.\n    * Improved incrementality for go_library targets\n    * Don't arbitrarily exclude files named src.jar any more\n\n\nVersion 13.4.8\n--------------\n\n    * Fix worker replacements that are not build labels not to be prefixed incorrectly.\n    * Honour escape sequences in f-strings correctly.\n    * Fixed a rare parse failure involving functions with a particular argument configuration.\n\n\nVersion 13.4.7\n--------------\n\n    * Fix for some incorrect cache misses by not re-retrieving post-build output.\n    * Config hash filters out PATH since items located via it are hashed directly.\n\n\nVersion 13.4.6\n--------------\n\n    * Fixed 'licences' error in maven_jars. Now issues a deprecation warning.\n\n\nVersion 13.4.5\n--------------\n\n    * Fixed some post-build functions that were incorrectly erroring.\n\n\nVersion 13.4.4\n--------------\n\n    * Bunch of Bazel compat fixes\n    * Fixed visibility checking of subinclude()\n\n\nVersion 13.4.3\n--------------\n\n    * Fixed an issue on OSX with some incorrect dirs when the test sandbox flag was enabled.\n\n\nVersion 13.4.2\n--------------\n\n    * Fixed `plz init` command without the `config` subcommand.\n\n\nVersion 13.4.1\n--------------\n\n    * Various minor subrepo improvements & fixes\n    * Fixed query revdeps which wasn't querying to arbitrary depth correctly.\n\n\nVersion 13.4.0\n--------------\n\n    * The sandbox tool now uses user namespaces and is shipped with Please.\n      It also sandboxes the test directory too.\n    * Tools are now looked up via PATH, allowing a little more flexibility around installation.\n    * go_get now works as before in a repo containing a go.mod\n    * `plz query deps` has a `--hidden` flag to expose internal targets.\n    * cgo_test now works with coverage\n    * Added `plz init config` subcommand to add things to config files\n    * User config file has moved to ~/.config/please/plzconfig; the old location is still\n      read but is deprecated.\n\n\nVersion 13.3.4\n--------------\n\n    * Fixed Go coverage when there are hyphens in the path (#538)\n    * Some small FreeBSD-specific fixes\n    * `plz clean` honours the starting directory in the same way as `plz build` (#536)\n\n\nVersion 13.3.3\n--------------\n\n    * Fixed `proto_library` for .proto files that specify a `go_package`.\n    * Fix to not rebuild rules as often in some rare cases (involving rules that have no\n      declared outputs but add them later using post-build functions).\n\n\nVersion 13.3.2\n--------------\n\n    * Fixed race condition in cache for git builtins.\n\n\nVersion 13.3.1\n--------------\n\n    * Improvements to git/exec error messages & path search for git builtins.\n\n\nVersion 13.3.0\n--------------\n\n    * Fixed extra_outs on go_get (#483)\n    * Fixed termination of subdir walking (#489)\n    * Added linker definition support to `go tool link` (#491)\n    * Rename support in LPS\n    * Improved determinism in go_get\n    * Added native git commands (git_branch, git_commit, git_show and git_state).\n\n\n\nVersion 13.2.7\n--------------\n\n    * Disallowed adding empty outputs to a target (this never made sense and\n      would only break things).\n    * Langserver now supports autoformatting and completion for local files\n      and argument names.\n    * Fixed an issue with incorrect permissions when a rule marked as binary\n      had a directory as an output (#478).\n\n\nVersion 13.2.6\n--------------\n\n    * IntelliJ project export now ignores 'provides' redirects in\n      dependencies.\n\nVersion 13.2.5\n--------------\n\n    * Fix for a possible infinite loop during builds when some specific kinds of\n      changes to targets were made.\n    * Further updates to language protocol server.\n\n\nVersion 13.2.4\n--------------\n\n    * Better support for long filenames when operating on ar archives.\n\n\nVersion 13.2.3\n--------------\n\n    * Some fixes to `plz watch`.\n\n\nVersion 13.2.2\n--------------\n\n    * Fix to cc_static_library which wasn't always calculating symbol tables correctly.\n\n\nVersion 13.2.1\n--------------\n\n    * Fixes to C and C++ rules in some subtle cases where object files could be created with\n      conflicting names.\n    * Language server now implements various textDocument and completion methods.\n\n\nVersion 13.2.0\n--------------\n\n    * Test result files no longer have hashes in their names.\n    * UnitTest++ main has been moved out of core to pleasings.\n      This should be transparent at first but does involve downloading a subrepo -\n      it is part of a longer-term plan to make cc_test more generic.\n    * Some changes to how plz is released:\n      * Tarballs are released as xz as well as gz, which is considerably smaller\n      * Supports downloading releases from Github if downloadlocation is set correctly.\n      * Not releasing .deb artifacts for now\n      * Releases are now built on CircleCI and released automatically.\n      * Java components now live in github.com/thought-machine/please-java. They are\n        still released as part of Please in the same way as before, but there's no\n        javac requirement to build it now.\n    * please tool maven has a --graph flag that allows some integration\n      with existing BUILD files.\n\t* Coverage can be disabled for all tests that have a particular label.\n    * Includes a language server which is still incomplete but under active development.\n      In future this will be the solution for IDE integration with BUILD files.\n\n\nVersion 13.1.8\n--------------\n\n    * Corrected some cases where package() was not honoured correctly.\n\n\nVersion 13.1.7\n--------------\n\n    * Correctly check `data` attributes of rules during `plz query changes`.\n\n\nVersion 13.1.6\n--------------\n\n    * Fixed some spurious cache warnings.\n\n\nVersion 13.1.5\n--------------\n\n    * More robust property expansions in `plz tool maven`.\n\n\nVersion 13.1.4\n--------------\n\n    * Fixed python_wheel which in some subtle cases was not honouring `patch` correctly.\n\n\nVersion 13.1.3\n--------------\n\n    * :all and ... labels are explicitly banned in various contexts.\n      This never actually worked, but the error messages are more useful now.\n    * Various subrepo fixes.\n\n\nVersion 13.1.1\n--------------\n\n    * Some fixes to coverage output\n\n\nVersion 13.1.0\n--------------\n\n    * Test flakes now have more distinct treatment for multiple runs (#350)\n    * Support for limited PEP-498 style f-strings in the BUILD grammar.\n    * Added `plz query roots` which returns roots of a dependency graph expressed\n      as a set of labels (i.e. the ones in the list that have no dependencies).\n    * Some improvements to structure of plz-out/go and some fixes for protos.\n\n\nVersion 13.0.1\n--------------\n\n    * Minor fixes to Prometheus metrics and behave test runner.\n\n\nVersion 13.0.0\n--------------\n\n    * Can now start shared test workers in a similar way to shared build workers.\n\t* Worker protocol has been changed to JSON instead of protobuf. This isn't compatible\n\t  with older versions, but they shouldn't normally mix anyway.\n    * Now communicating with Docker using a proper API instead of execing the CLI.\n      docker_run_args is no longer supported as a result.\n    * Directory cache now supports a `dircompress` config option which stores artifacts\n      as gzipped tarballs. This is slower to save / restore but results in fewer files\n      and less space used.\n    * Support behave as a Python test runner.\n    * Supports Python 3.7\n    * Better preservation of XML test results\n\n\nVersion 12.2.5\n--------------\n\n    * Fixed calculation of sources in `plz query changes` (#314)\n\n\nVersion 12.2.4\n--------------\n\n    * Don't produce detailed test output if input is stdin.\n\n\nVersion 12.2.3\n--------------\n\n    * Better XML output for tests that are skipped.\n\n\nVersion 12.2.2\n--------------\n\n    * Fixed path hashing in `plz query changes`\n\n\nVersion 12.2.1\n--------------\n\n    * Ensure Prometheus metrics only get initialised once.\n\n\nVersion 12.2.0\n--------------\n\n    * Initial cross-compiling support via new --arch flag.\n      See the docs for more info: https://please.build/cross_compiling.html\n    * Added support for the Java --release flag (new in Java 9/10).\n    * Support to pass environment variables (#302, fixes #205)\n    * Added 'plz query changes' subcommand. This supersedes the old workflow\n      involving plz_diff_graphs and is considerably faster.\n\n\nVersion 12.1.8\n--------------\n\n    * Make sure run arguments are passed into sh_binary.\n    * Use jarcat when creating archives for sh_binary rules.\n    * Fix sh_binary to use zip/unzip instead of tar.\n    * Ensure sh_binary extracts files into the same directory as the script being run.\n\nVersion 12.1.3\n--------------\n\n    * More symlink fixes in outputs (#299)\n\n\nVersion 12.1.2\n--------------\n\n    * Fix for some errors relating to symlinks in outputs.\n\n\nVersion 12.1.1\n--------------\n\n    * Fix to incrementality in python_library rules where in some cases bytecode\n      was generated inconsistently.\n\n\nVersion 12.1.0\n--------------\n\n    * `pip_library` rules output single .whl files for better cache performance (#297)\n    * Corrected some distutils errors when using Homebrew's `pip3` (#294)\n    * Initial (still experimental) implementation of `http_archive` and\n      `new_http_archive` rules.\n    * Various other improvements to Bazel compatibility.\n    * `remote_file` now has a builtin implementation and can show progress.\n    * A lot of internal refactoring around the implementation of subinclude().\n      Parse tasks now happen off the main worker 'threads' so they don't block them.\n      This is a prerequisite for subrepo support.\n    * Migrated most uses of `filepath.Walk` to `godirwalk` (#273).\n    * Fixed handling of aliases (#298)\n\n\nVersion 12.0.0\n--------------\n\n    * Parser overhaul, cgo interface / cffi has been removed. There is now no requirement\n      for Python to be installed on a machine during initial bootstrap.\n      The still-unnamed BUILD language is now a much tighter subset of Python, which\n      will hopefully not present too many issues unless one is doing particularly fiddly\n      things in BUILD files.\n    * Go rules now filter their sources via build tags (including implicit ones derived from\n      filenames) as `go build` would. This can be suppressed by setting `filter_srcs = False`\n      if the old behaviour is preferred.\n    * The default Python interpreter is now python3. It can be set to python in the\n      .plzconfig if one prefers the old behaviour.\n    * The GoVersion config attribute has been removed, and with it support for versions < 1.5.\n    * The BUILD file linter (accessed via `plz tool lint`) has been removed. The warnings that\n\t  it reported are essentially all now prohibited by the parser.\n\t* The RPC cache now uses gzip compression; the server will need to be updated to the\n      latest version to be able to communicate with clients.\n\n\nVersion 11.4.0\n--------------\n\n    * Added --run flag to plz watch which invokes the targets using `plz run`\n      instead of build / test.\n    * Replace hyphen with underscore in buildenv plzconfig sections (#274)\n    * Added `plz query rules` which prints out the currently known set of rules definitions.\n\n\nVersion 11.3.2\n--------------\n\n    * Fix for build failures in a rare case where there's a stale output file that is\n      part of the path for another output in a subdirectory, ultimately failing with\n      \"not a directory\" errors.\n\n\nVersion 11.3.1\n--------------\n\n    * Improved checking for banned or deprecated BUILD language features\n    * Compiled with Go 1.9.3, hopefully this may fix rare \"sweep increased allocation count\"\n      bugs due to https://github.com/golang/go/issues/22781.\n\n\nVersion 11.3.0\n--------------\n\n    * Support for Java 9 and JEP-220 features: `java_module` and `java_runtime_image`\n      can be used to build a standalone Java image using modules.\n      New config properties `jlinktool` and `javahome` have been added.\n\n\nVersion 11.2.1\n--------------\n\n    * Small fix for some Java coverage instrumentation issues.\n\n\nVersion 11.2.0\n--------------\n\n    * Add support for merging Akka's reference.conf files when building\n      java_library and java_binary targets with akka dependencies\n    * Add --env flag on plz run that applies config values to the environment\n      (notably PATH)\n\nVersion 11.1.3\n--------------\n\n    * As much sorting as possible of original targets is now retained when they are passed\n      into subcommands (most notably `plz run sequential`, but could be others too).\n    * Fixed some duplicate flags on proto_library.\n\n\nVersion 11.1.2\n--------------\n\n    * Fix for go_library when asm_srcs are passed, in some cases build would fail\n      with permissions errors.\n\n\nVersion 11.1.0\n--------------\n\n    * python_binary and python_test rules can now import binary modules directly\n      via an import hook that dynamically extracts them as needed. Hence zip_safe is\n      not needed in many cases it was previously.\n\n\nVersion 11.0.2\n--------------\n\n    * Several small fixes to please_maven correcting a few cases.\n\n\nVersion 11.0.1\n--------------\n\n    * Fixed a rare internal data race.\n    * Added a warning for potential cases where one target outputs into a directory written\n      by another target, which can cause subtle build failures.\n\n\nVersion 11.0.0\n--------------\n\n    * Now ships with a builtin parser engine so the .so's aren't necessary (although\n      still included for now) and there's no requirement to have cffi or any Python\n      version installed to run.\n    * Interactive debugging for tests; passing `-d` to `plz test` or `plz cover`\n      causes the test to break into an interactive debugger on failure. Currently only\n      works on Python, C and C++ tests.\n    * Altered priority of config files; `/etc/plzconfig` is now the lowest priority and\n      there is an additional `~/.please/plzconfig` immediately after it.\n    * Added --profile flag which selects a config profile, e.g. `--profile dev` will\n      attempt to read `.plzconfig.dev` if it exists.\n    * Added --version flag to `plz update` to force updating to a particular version,\n      and --latest flag to always update to the latest.\n    * parse.experimentaldir config property can now be repeated.\n    * Removed deprecated plz query completions --bash_script / --zsh_script flags\n      in favour of plz --completion_script.\n    * Fixed a bug where Python tests could fail under coverage for non-trivial setups\n      (like where the srcs are outputs of rules from another package).\n\n\nVersion 10.3.5\n--------------\n\n    * Fix an issue on OSX where the parser engine was sometimes not found when plz\n      was invoked through a symlink.\n\n\nVersion 10.3.4\n--------------\n\n    * Fix bug where some java tests couldn't load package-private classes when run with\n      coverage and without a test package specified due to security boundaries created\n      by instrumentation process.\n\n\nVersion 10.3.3\n--------------\n\n    * Fixed RPC cache server to serve metrics on --http_port as the flag documentation said.\n      --metrics_port still works but will be removed in some future version.\n\n\nVersion 10.3.2\n--------------\n\n    * Minor fix to calculation of number of test runs when specifying -n on a flaky test.\n    * Updated metrics on RPC cache server.\n\n\nVersion 10.3.1\n--------------\n\n    * Small tab completion fixes.\n\n\nVersion 10.3.0\n--------------\n\n    * Support for using pytest as the test runner instead of unittest\n    * Python tests now supply test files as runtime files instead of packaging into\n      the pex itself, leading to somewhat faster rebuild times.\n    * `go_library` rules can now be individually opted out of coverage instrumentation.\n    * `cgo_library` rules now accept a `pkg_config` argument to determine appropriate\n      compiler flags for dependencies.\n\n\nVersion 10.2.0\n--------------\n\n    * Support for specifying Go import paths (#249)\n    * `plz follow` now works anywhere (you don't have to be in a plz repo)\n    * Fixed `sh_binary` which wasn't honouring visibility correctly.\n\n\nVersion 10.1.1\n--------------\n\n    * Fixes a long-lurking bug where some config values didn't override properly.\n\n\nVersion 10.1.0\n--------------\n\n    * Dynamic support for Python wheel naming schemes, either via name_scheme on the\n      rule or by setting it in the config.\n    * diff_graphs added to plz tool.\n\n\nVersion 10.0.1\n--------------\n\n    * Minor fix to Python import hooks in please_pex.\n\n\nVersion 10.0.0\n--------------\n\n    * please_pex rewritten to be more efficient. This is a breaking change for anyone\n      who assumed they could import pkg_resources or pex as a global which will no longer\n      be available (although these are easy to add using pip_library or python_wheel rules\n      if still needed).\n    * cgo_library takes a subdir argument that is needed if sources are in a subdirectory\n      from the BUILD file (this isn't breaking since it never worked without).\n    * Support for assembly (using go tool asm) in go_library and go_binary rules.\n    * Removed a number of deprecated config properties.\n    * Removed a number of deprecated arguments to builtin build rules (most have been\n      deprecated and often nonfunctional for a long time now).\n\n\nVersion 9.5.1\n-------------\n\n    * Is now possible to prevent Java tests from consuming stdout / stderr by passing\n      -DPLZ_NO_OUTPUT_CAPTURE to Java when running the jars. This isn't exposed through\n      plz anywhere though.\n\n\nVersion 9.5.0\n-------------\n\n    * New config property, parse.preloadbuilddefs which specifies files to be loaded\n      into the global rule context.\n    * Moved a bunch of config properties (buildfilename, blacklistdirs, lang, parserengine,\n      nonce, experimentaldir and linttool) out of the [please] section since that had\n      turned into a bit of a grab-bag of unstructured properties.\n      Old ones are still honoured for now but will be removed in v10.0.\n    * please_sandbox now mounts a tmpfs on /tmp\n    * `plz query print` prints a comment & build label on stdout rather then the bare label\n      on stderr.\n\n\nVersion 9.4.3\n-------------\n\n    * Fix a subtle bug in junit_runner where it could throw an index exception on\n      certain filenames.\n\n\nVersion 9.4.2\n-------------\n\n    * Fix to result parsing of Go tests when things log to stdout\n      before the first test begins.\n\n\nVersion 9.4.1\n-------------\n\n    * Small fix to maven_jar rules on OSX which would sometimes take the wrong path for\n      binary artifacts.\n\n\nVersion 9.4.0\n-------------\n\n    * Added a c_object rule which lets you compile a C or C++ object file from a single\n      input. It's lower-level than c_library so rarely needed, but allows a bit more control.\n    * Added protoc_binary which can download a protoc release to use as the protoc_tool.\n      Unfortunately there is no equivalent available for gRPC C++ / Python plugins.\n    * Pre- and post- build functions are now better optimised about recalculating\n      changes after they run. Can significantly speed up building packages with\n      many c_library rules in them.\n    * Jarcat can now align files to specific size boundaries in a similar way to\n      Android's zipalign command.\n    * Setting PDEATHSIG on child commands which may help ensure that subprocesses\n      (especially workers) terminate correctly.\n    * Runtime data of tests is exposed in a $DATA env var.\n    * Cleaning of the directory cache is now done in-process rather than in a\n      forked subprocess. This allows it to be better synchronised with the main build\n      about what it's deleting.\n\n\nVersion 9.3.2\n-------------\n\n    * Fixed a bug where data entries of targets would turn up at build time as well.\n\n\nVersion 9.3.1\n-------------\n\n    * Fixed command in previous version.\n\n\nVersion 9.3.0\n-------------\n\n    * Downloaded versions are now verified against a detached GPG signature.\n    * Support for following the progress of a remote build using `plz follow`.\n      Requires it to open a port, which is configured in the [events] section\n      of .plzconfig.\n    * Support for arbitrary env vars in .plzconfig which are available to all build rules.\n      Note that these cause rebuilds of all targets on change, because we can't know what\n      effects they'll have.\n    * Go 1.9 is now required to compile Please.\n\n\nVersion 9.2.3\n-------------\n\n    * Fix a bug where C++ rules with a single source didn't always honour includes.\n    * Fixed a panic in flags unmarshalling (only when flags were already incorrect,\n      but we now handle it more nicely).\n\n\nVersion 9.2.2\n-------------\n\n    * Bugfix in go_get which sometimes failed due to not finding any directories to remove.\n\n\nVersion 9.2.1\n-------------\n\n    * Fixed one case that didn't correctly honour the `go` command location.\n    * maven_jars / please_maven now correctly support the @aar syntax.\n\n\nVersion 9.2.0\n-------------\n\n    * Added check_config builtin which helps with asserting that things are\n      set in .plzconfig, and ConfigError which is a little more specific than\n      ParseError.\n    * Support for passing multiple values for Maven repos (in config and to\n      rules directly). They're searched in sequence and the rule succeeds as\n      long as any one contains the requested artifact.\n    * The name / location of the command invoked for `go` is now configurable.\n\n\nVersion 9.1.7\n-------------\n\n    * Fixed -o flag to be able to override map fields in config, such as buildconfig\n      and aliases.\n    * Fixed gc.keep field in config which wasn't being honoured properly.\n\n\nVersion 9.1.6\n-------------\n\n    * Fixed a subtle interaction of srcs and deps whereby transitive deps couldn't\n      be accessed when specified as both srcs and deps.\n\n\nVersion 9.1.5\n-------------\n\n    * Actually fixed Python coverage some more.\n\n\nVersion 9.1.4\n-------------\n\n    * Fixed test code accidentally introduced into previous version for Python tests.\n\n\nVersion 9.1.3\n-------------\n\n    * Fixed `plz tool lint` which was looking in the wrong place.\n\n\nVersion 9.1.2\n-------------\n\n    * Fixed plz_diff_graphs again, pray I do not fix it further.\n\n\nVersion 9.1.1\n-------------\n\n    * Quick fix for plz_diff_graphs to honour manual:linux_amd64.\n      Doesn't work correctly on OSX yet though.\n\n\nVersion 9.1.0\n-------------\n\n    * The 'manual' label can now be applied per-architecture, e.g. manual:linux_amd64.\n\n\nVersion 9.0.4\n-------------\n\n    * Fixed plz hash --update for cases where the hashes are on child rules.\n\n\nVersion 9.0.3\n-------------\n\n    * Minor fix to plz_maven to allow it to compare multiple repositories correctly.\n\n\nVersion 9.0.2\n-------------\n\n    * Fixed some pexes from previous commit where pex_root wasn't set properly.\n\n\nVersion 9.0.1\n-------------\n\n    * Better incrementality for python_test / python_binary rules.\n\n\nVersion 9.0.0\n-------------\n\n    * Better support for multiple Python versions; should now support python 2.7, 3.4, 3.5\n      and 3.6 for bootstrap, and binary artifacts for all of those are written for coverage\n      in generated test pexes.\n    * Removed a number of esoteric builtin rules: github_file, git_repo, fpm_package and\n      fpm_deb. Removed long-deprecated go_yacc rule and `link` argument to filegroup.\n      Removed rules are available at github.com/thought-machine/pleasings as build_defs\n      files; they will still work equivalently but it's unnecessary to have those built\n      into the core.\n\n\nVersion 8.7.5\n-------------\n\n    * $(hash ) replacements correctly use output hashes instead of target hashes.\n\n\nVersion 8.7.4\n-------------\n\n    * Small fix for `maven_jar`; output filegroup is correctly tagged as binary.\n\n\nVersion 8.7.3\n-------------\n\n    * Fix for Debian's pip mess; we now attempt to pass --system to fix it\n      if we can identify that we're running on Debian and using pip3.\n\n\nVersion 8.7.2\n-------------\n\n    * Fixed some bugs around handling >= in version specifier.\n\n\nVersion 8.7.1\n-------------\n\n    * Fixed a bug where building the :all or /... pseudo-targets would fail when\n      post-build functions ran and require/provide meant not all the targets were needed.\n\n\nVersion 8.7.0\n-------------\n\n    * The protoc_flags argument to proto_library now applies transitively to any\n      further protoc_library rules that depend on it, in a similar fashion to C++ rules.\n      Since protos always need all transitive dependencies to compile they typically\n      require transitive compiler flags as well.\n    * Added a decompose function to the build builtins which breaks a build label into\n      its package and name parts.\n\n\nVersion 8.6.1\n-------------\n\n    * No code change, but is now compiled with Go 1.9.\n\n\nVersion 8.6.0\n-------------\n\n    * Optional support for per-test metrics.\n\n\nVersion 8.5.4\n-------------\n\n    * Separate build & test sandboxing more correctly.\n\n\nVersion 8.5.3\n-------------\n\n    * Expand home paths correctly in secrets.\n\n\nVersion 8.5.2\n-------------\n\n    * Corrections to incrementality calculations when toggling targets between\n      sandboxed and unsandboxed.\n\n\nVersion 8.5.1\n-------------\n\n    * Fixing timeouts in sandboxed actions by passing signals through to subprocesses.\n\n\nVersion 8.5.0\n-------------\n\n    * Adds an option for lightweight sandboxing of test / build actions.\n      This only works on Linux right now, using a helper binary named please_sandbox\n      which must be installed separately (the .deb is still built in this repo).\n\n\nVersion 8.4.4\n-------------\n\n    * Fixed issue with java_library rule introduced in previous version.\n\n\nVersion 8.4.3\n-------------\n\n    * Set $HOME during builds for some tools (notably Python) that want to know\n      where it is and on some machine setups can fail without.\n\n\nVersion 8.4.2\n-------------\n\n    * Collect _pb2_grpc.py files for Python grpc_library rules.\n    * Minor jarcat fix to improve determinism of outputs for tarballs.\n\n\nVersion 8.4.1\n-------------\n\n    * Pass -S when invoking the Python interpreter to byte-compile code.\n      Fixes some cases where it failed importing site due to $HOME not being defined.\n\n\nVersion 8.4.0\n-------------\n\n    * `--include` and `--exclude` can now take a comma-separated list. These are essentially\n      ANDed together (unlike passing the flag multiple times which ORs them).\n    * `plz run parallel` limits the number of subprocesses run simultaneously.\n\n\nVersion 8.3.1\n-------------\n\n    * RPC cache now writes metadata files indicating who submitted artifacts.\n\n\nVersion 8.3.0\n-------------\n\n    * Added `manifest` argument to `java_binary` so you can specify an explicit MANIFEST.MF\n\n\nVersion 8.2.6\n-------------\n\n    * Fix to dependency cycle detection which could sometimes take a very long time.\n\n\nVersion 8.2.5\n-------------\n\n    * Some changes to how source hashes of other rules are calculated; fixes\n      some subtle cases related to file names changing when contents don't.\n\n\nVersion 8.2.4\n-------------\n\n    * Internal improvements to hash_filegroup; it is now a known internal rule\n      and operates more like normal filegroups (e.g. outputs are links and are\n      never cached etc).\n\n\nVersion 8.2.3\n-------------\n\n    * Another fairly subtle fix to cc rules.\n\n\nVersion 8.2.2\n-------------\n\n    * Fairly subtle fix; add a missing `require` on `cc_static_library`.\n\n\nVersion 8.2.1\n-------------\n\n    * Leave the Python interpreter as given in the shebang of the pex, don't\n      turn it into an absolute path.\n\n\nVersion 8.2.0\n-------------\n\n    * Rewrite of parts of Python rules for better performance\n    * Added `static` argument to `go_test` rule, analogous to `go_binary`.\n\n\nVersion 8.1.1\n-------------\n\n    * Minor completion fixes to suppress warnings when version differs.\n\n\nVersion 8.1.0\n-------------\n\n    * Rewritten completion script; is now activated using\n      `source <(plz --completion_script)` which works for both bash and zsh.\n      It should also be more robust for more subtle flag combinations.\n\n\nVersion 8.0.5\n-------------\n\n    * Potential fix for a rare issue with rules like `hash_filegroup` that sometimes\n      weren't marked as rebuilt correctly.\n\n\nVersion 8.0.4\n-------------\n\n    * Fix some tool-related errors in `proto_library` and `grpc_library`.\n\n\nVersion 8.0.3\n-------------\n\n    * Fix to cgo_library for cases where some of the sources are produced by a genrule.\n\n\nVersion 8.0.2\n-------------\n\n    * Small fix to jarcat to add __init__.py files in a couple more cases.\n    * Subtle require/provide fix.\n\n\nVersion 8.0.1\n-------------\n\n    * Small fix to secrets in previous version which were causing some targets to rebuild\n      more often than they should.\n\n\nVersion 8.0.0\n-------------\n\n    * The `tarball` rule has been rewritten to be more deterministic. As a consequence it now\n      only supports gzip compression; the previous `compression` argument has been removed.\n      This is obviously a breaking change for anything that was setting that argument.\n    * Build rules with `needs_transitive_deps = True` no longer receive transitive deps of\n      their `srcs`, only their `deps`.\n      This is again a breaking change although a relatively subtle case that doesn't affect\n      many rules; most cases that were using `srcs` and `deps` semantically correctly won't notice.\n    * `plz query print` now accepts a `--fields` argument to print only the given fields.\n    * `plz run` now has two new subcommands, `sequential` and `parallel` that allow passing\n      multiple targets to be run either consecutively or concurrently.\n    * Go 1.8 is now required to build the Please repo. Support for targeted Go versions is\n      unchanged.\n\n\nVersion 7.12.0\n--------------\n\n    * Support for named output groups on rules. Outs can now optionally be specified as\n      a dict of name -> outputs, and other rules can collect just the group they want.\n      Resolves a few long-standing TODOs around the place.\n\n\nVersion 7.11.4\n--------------\n\n    * Fixed some indeterminacy in Go rules to do with the infamous symlinking malarkey.\n\n\nVersion 7.11.3\n--------------\n\n    * Fixed bug in RPC server that failed to load certificates from a directory.\n\n\nVersion 7.11.2\n--------------\n\n    * Tarballs are now correctly marked as `output_is_complete` so downstream rules don't\n      fetch their transitive dependencies as well. Fixes some subtle interactions between\n      `tarball` and `sh_binary`.\n\n\nVersion 7.11.1\n--------------\n\n    * Fix for performance regression of some setups (mostly large Java trees) introduced\n      in previous version.\n\n\nVersion 7.11.0\n--------------\n\n    * `pkg_config_libs` is now applied transitively for `cc_library` and `c_library` rules.\n    * Fixed a bug in pex writing where the output was not always deterministic.\n    * Linter now detects deprecated & missing arguments and for duplicate third-party artifacts.\n\n\nVersion 7.10.3\n--------------\n\n    * Disabling tracing on RPC cache server, possible fix for aforementioned\n      memory leak.\n    * Fix for #208, whereby some C++ settings were not being honoured properly.\n\n\nVersion 7.10.2\n--------------\n\n    * Protobuf / gRPC update, testing to see if this helps an apparent memory leak in\n      RPC cache server.\n\n\nVersion 7.10.1\n--------------\n\n    * Fix to go_get change in 7.10 to make it BSD-compatible.\n\n\nVersion 7.10.0\n--------------\n\n    * Add support for classifiers on `maven_jar`.\n    * Automatic creation of `plz-out/go`, which contains some symlinks making it\n      suitable for setting your GOPATH to to find some things in plz-out/gen (e.g.\n      generated code).\n    * Fix go_get with dependencies when in declared in repo root\n\n\nVersion 7.9.2\n-------------\n\n    * Honour the PATH settings given in plzconfig when starting worker processes.\n\n\nVersion 7.9.1\n-------------\n\n    * `proto_library` is a little more robust about some cases involving sources in\n      subdirectories.\n    * Fixed alwayslink for `cc_library` which was sometimes not honoured.\n\n\nVersion 7.9.0\n-------------\n\n    * Rewrite of proto_library and grpc_library rules. It's now possible to configure new\n      languages externally for plugins such as grpc-gateway.\n    * Add <root>/third_party/ to the default GOPATH\n    * Added --shell flag to plz build, which is like --prepare but opens a shell in the\n      work directory with an appropriate environment set.\n    * Added --update flag to plz hash to rewrite hashes in a BUILD file.\n\n\nVersion 7.8.2\n-------------\n\n    * Correctly pass `pkg_config_libs` through `cc_binary` to `cc_library` (#190).\n\n\nVersion 7.8.1\n-------------\n\n    * Fixate tarball timestamps #188\n\n\nVersion 7.8.0\n-------------\n\n    * Added `plz export` command which exports a subset of the repo and its dependencies\n      to an arbitrary directory.\n    * Updating has a progress bar\n    * Fixed some subtle linking issues in the compiled artifacts.\n\n\nVersion 7.7.1\n-------------\n\n    * Fixed flags argument to python_test rules.\n\n\nVersion 7.7.0\n-------------\n\n    * Versions in .plzconfig can now be specified as >=. Other patterns aren't (yet?) supported.\n    * plz clean honours --include / --exclude\n    * plz gc now rewrites / removes files and can be filtered to a list of targets\n    * python3 parser engine now (mostly) works\n    * Help message output improved\n    * Fixed plz query revdeps when given a subpackage path (//src/... etc)\n\n\nVersion 7.6.4\n-------------\n\n    * Excluding errors from Python coverage reports; fixes failures when dynamically\n      loading modules inside tests which coverage can't find the source for.\n\n\nVersion 7.6.3\n-------------\n\n    * Logging a periodic message during long-running tasks so it's possible to see\n      what's still going (often the slowest test started a while back and you don't see\n      any further messages logged while waiting).\n\n\nVersion 7.6.2\n-------------\n\n    * Minor bugfixes\n\n\nVersion 7.6.1\n-------------\n\n    * Fix to Istanbul coverage parsing to support instrumenting the source in a different\n      target to the test target.\n\n\nVersion 7.6.0\n-------------\n\n    * Allow Unicode characters in target names.\n    * Fixed some issues with plz cover when using Go 1.8\n    * Fixed plz clean so it does not parse the repo unnecessarily.\n    * Add current package directory to GOPATH, fixes #184.\n    * Correctly exclude BUILD files from glob()\n    * Fixed glob() for paths containing some atoms like ++\n\n\nVersion 7.5.0\n-------------\n\n    * Support for Istanbul's JSON coverage format.\n    * please_pex now packages multiple versions of coverage.tracer which it attempts to\n      import as appropriate.\n\n\nVersion 7.4.8\n-------------\n\n    * Support for Go 1.8 (specifically the changes to testing.MainStart).\n\n\nVersion 7.4.7\n-------------\n\n    * Fixed long-standing subtle issue with packaging Guava in junit_runner.\n\n\nVersion 7.4.6\n-------------\n\n    * Fix outs for js grpc_library rules.\n\n\nVersion 7.4.5\n-------------\n\n    * Add missing option to JS protos to generate serialisation code.\n\n\nVersion 7.4.4\n-------------\n\n    * Fix deadlock in metrics code.\n\n\nVersion 7.4.3\n-------------\n\n    * Suppress logging messages from worker processes as they die.\n\n\nVersion 7.4.2\n-------------\n\n    * Ensure that worker processes are killed at the end of a build.\n\n\nVersion 7.4.1\n-------------\n\n    * Fixed proto JS rules to correctly pick up transitive dependencies.\n\n\nVersion 7.4.0\n-------------\n\n    * Fixed please_pex for Python 3.6\n    * Fixed go_test rules in the repo root.\n    * Added proto.jsdep config option that gets used when building JS protos (#176)\n\n\nVersion 7.3.0\n-------------\n\n    * Support for generating Javascript files from a proto_library. Currently the\n      generated code is not compiled in any way.\n    * Fix to some obscure cases of building filegroups that weren't working properly.\n    * Removed -Wextra from default CFLAGS, since many repos don't compile cleanly with it.\n    * Falls back to trying to find a Bazel WORKSPACE file if run outside a plz repository.\n\n\nVersion 7.2.0\n-------------\n\n    * Support for 'remote' worker processes which are persisted throughout the build.\n      These can be used to speed up compile times in cases where the compiler supports this\n      and has significant startup overhead. Initial implementation for Java can have up to\n      a 4x speedup on sufficiently large build graphs.\n    * Added `plz help` command which can show reference information about built-in build rules,\n      config settings, etc.\n    * The Linux implementation will attempt to download a portable PyPy distribution if\n      none of the plugins work against the system versions. Should make it easier to get\n      up & running since it's not completely trivial to install.\n    * Support for caches to store asynchronously, so further build actions don't have to\n      wait on network latency. Retrieves must still happen synchronously, of course.\n      The cache request scheme is also a little more efficient and will make slightly\n\t  fewer requests overall.\n\n\nVersion 7.1.1\n-------------\n\n    * Reverted an internal update to guava which broke some Java tests.\n      In future we'll look more at compatibility here, ideally it shouldn't matter but it's\n      not fully obvious what is best to do.\n\n\nVersion 7.1.0\n-------------\n\n    * Support for an \"experimental\" directory specified in plzconfig. If set it is subject\n      to the following rules:\n       - Targets in the experimental tree can depend on any other target, regardless\n         of visibility constraints.\n       - Targets outside the experimental tree can't depend on targets in it, again\n         regardless of their visibility declaration.\n       - Please doesn't descend into the experimental tree for commands like `plz test //...`\n         so tests in there wouldn't generally be run.\n    * New command, `plz gc`, which attempts to identify unused targets across the repo.\n      \"GC roots\" are inferred from non-test binary targets, but can also be specified in .plzconfig.\n    * `plz query revdeps` no longer prints the targets it was given in the first place.\n    * More careful locking when building filegroups to avoid some race conditions.\n    * `plz query graph` is now better optimised for the case of outputting the entire graph,\n      which should be close to twice as fast as before.\n    * filegroup() now honours the `hashes` argument correctly.\n\n\nVersion 7.0.8\n-------------\n\n    * Fixed a formatting bug with `plz query print`.\n\n\nVersion 7.0.6\n-------------\n\n    * Fixed a long-standing but mysteriously unfound bug in incrementality where we did not\n      correctly handle symlinks to directories within a build dir.\n\n\nVersion 7.0.5\n-------------\n\n    * Fixed a requires statement on python_binary / python_test rules.\n\n\nVersion 7.0.4\n-------------\n\n    * Fixed some small issues around coverage for cgo_test rules.\n\n\nVersion 7.0.3\n-------------\n\n    * Fixed dependencies on fpm_deb again, pray I do not fix them further.\n\n\nVersion 7.0.2\n-------------\n\n    * Fixed dependencies on fpm_deb rules so they have Depends, not Build-Depends.\n\n\nVersion 7.0.1\n-------------\n\n    * Fixed a small bug where get_labels and has_label would return labels below a target\n      marked output_is_complete, which would cause some build rules to then fail.\n    * Fixed fpm_package which was not correctly honouring the `labels` argument.\n\n\nVersion 7.0.0\n-------------\n\n    * Introduced a set of c_library, c_binary rules etc. These parallel the cc_ versions and\n      share most of the implementation.\n    * cctool config setting renamed to cpptool, cctool now defines the compiler used for new\n      c_library etc rules. This is a breaking change.\n    * Similarly defaultoptcppflags and defaultdbgcppflags introduced.\n    * The defines argument to cc_library now accepts a dict of token name -> value.\n    * cgo_library has been extensively rewritten, and now takes separate arguments for srcs,\n      go_srcs (Go files that don't import \"C\"), c_srcs and hdrs. This allows better integration\n      with other native rules since it now honours the compiler and linker settings correctly.\n    * Timeouts in .plzconfig are now given as durations instead of plain ints.\n      The default is seconds but they can be suffixed with units (m, s, ms, etc).\n      Interpretation of any existing values is unchanged apart from metrics.frequency which\n      was inconsistently interpreted as milliseconds, and will now be interpreted as seconds\n      if no unit is given. This would obviously only affect anyone who'd overridden that value.\n\n\nVersion 6.1.2\n-------------\n\n    * Some small fixes to Java rules\n    * Fixed a bug where two filegroup rules outputting the same rule would sometimes fail\n      when built simultaneously.\n\n\nVersion 6.1.0\n-------------\n\n    * Added a static flag to cc_binary to attempt to link it statically.\n    * Fix cc_shared_object when srcs is empty.\n    * Suppress gcc build ids to reduce nondetermism\n    * Can now call HasLabel on an arbitrary build label, but it should be a transitive\n      dependency of the currently building rule to be safe.\n    * All sub-rules of a rule are rebuilt on 'plz rebuild'\n    * fpm_deb and fpm_package take a 'dirs' argument allowing passing rules with multiple outputs\n\n\nVersion 6.0.3\n-------------\n\n    * Finally fixed cc_embed_binary for OSX\n\n\nVersion 6.0.2\n-------------\n\n    * Another small maven_jar fix, related to Android this time\n    * plz query deps now filters its outputs by --include and --exclude\n\n\nVersion 6.0.1\n-------------\n\n    * Small maven_jar fix.\n\n\nVersion 6.0.0\n-------------\n\n    * Outputs are ordered canonically before hashing so tools like buildifier don't change\n      rule hashes.\n    * maven_jar is split into separate rules for binary & source artifacts, for better\n      incrementality & being easier to consume by other rules (since source artifacts are\n      generally not part of the build and only there for help for IDEs).\n    * cgo_library's 'package' argument has been changed to 'out' to be more consistent with\n      other rules (most notably go_library).\n    * cgo_library and cgo_test now have a setting in the config describing what they should\n      use for CC.\n    * go_binary now accepts a 'static' flag that attempts to completely statically link\n      the target.\n    * plz watch now discards events that do not relate to source files it cares about\n      (previously it would fire on any event in a relevant directory).\n    * include_defs and the cxx_ forms of the cc_* rules are now only available in Bazel\n      compatibility mode (which essentially also covers Buck now too).\n    * The version in .plzconfig is now parsed as a semver so must be valid by those rules.\n      Shouldn't be a major problem since there haven't been any versions for a long time\n      that wouldn't be valid.\n\n\nVersion 5.5.4\n-------------\n\n    * Fix a bug where multiple filegroups writing the same file could race with one another.\n\nVersion 5.5.3\n-------------\n\n    * bugfix: make sh_binary work with and without dependencies\n    * sh_binary switched to use the same shebang as the original script (when there\n      are dependencies)\n\nVersion 5.5.2\n-------------\n\n    * Increased maximum message size limit on RPC cache server to 100MB since at some\n      point gRPC started limiting it, and their 4MB default is too low for this case.\n    * Small fix for plz watch for targets with named sources.\n\n\nVersion 5.5.1\n-------------\n\n    * Fixed several potential sources of nondeterminism in various places.\n\n\nVersion 5.5.0\n-------------\n\n    * Linter can now suppress warnings over an entire file by adding a line with only\n      the suppression comment on it.\n    * Support for adding generic properties to the config which makes it less awkward to\n      write third-party rules that want to be able to set such things.\n    * Log file is always written (there seems to be no real performance penalty)\n    * `plz query revdeps` correctly identifies subincludes\n\n\nVersion 5.4.1\n-------------\n\n    * Fixed name of please_build_linter to be consistent between .deb and tarballs.\n\n\nVersion 5.4.0\n-------------\n\n    * Now ships with a linter to identify potential problems in BUILD / build_defs files.\n    * Minor determinism fix to go_get\n    * please_pex now only specifies 'python', not the version it was built with.\n    * Fixed running single tests in go_test rules.\n\n\nVersion 5.3.0\n-------------\n\n    * Some fairly extensive tweaks / cleanups to C++ rules.\n    * Added config options for configuring flags for pip in pip_library rules.\n    * Fixed generation of __init__.py files.\n    * Various _test rules now support being passed flags which are added to their test_cmd.\n    * Fixed some indeterminacy in some Java rules\n    * Fixed some deps being incorrectly attached to proto rules of the wrong language.\n    * Cache servers now accept durations in the form \"3m\", \"10h25m\", etc.\n    * Cache servers have a parameter to clean artifacts that haven't been accessed in\n      a certain period, defaulting to 30 days.\n\n\nVersion 5.2.3\n-------------\n\n    * Correct a small bug where visibility labels sometimes incorrectly applied too widely\n    * Various Python rules now respect package() directives correctly\n    * Fix to pip_library for rules with install_subdirectory=True and names not matching\n      the package name.\n\n\nVersion 5.2.2\n-------------\n\n    * Added missing protoc tool to proto_library / grpc_library rules.\n\n\nVersion 5.2.1\n-------------\n\n    * Reduced cardinality of labels sent to Prometheus so pushgateways don't get\n      overwhelmed so quickly.\n    * Licence matching is now case-insensitive.\n\n\nVersion 5.2.0\n-------------\n\n    * Added support for pushing metrics to a Prometheus pushgateway\n    * New flag --show_output / -s for plz test (+cover) to show the output of tests\n      even when successful.\n    * __init__.py writing moved from parse time to build time.\n    * Releases now built with Go 1.7\n\n\nVersion 5.1.0\n-------------\n\n    * Initial C++ coverage support\n    * Support for coverage in Go 1.7\n    * Support for Go 1.7 style subtests\n    * Added identifying labels to grpc_library rules\n    * Support for optional additional outputs on rules.\n\n\nVersion 5.0.1\n-------------\n\n    * Fix bug in java_library which would fail when given both srcs and resources.\n\n\nVersion 5.0.0\n-------------\n\n    * `tools` can now accept non-build rule labels which are interpreted as system binaries.\n      They are then hashed into the rule so it will rebuild appropriately.\n    * Corollary to above: grpcversion and protocversion properties have been removed from config.\n      goversion remains since it identifies some compatibility changes for 1.4.\n    * please_maven better supports more esoteric details of Maven.\n    * `plz watch` honours the previously set build config (i.e. `plz watch -c dbg` invokes\n      its subprocesses with `-c dbg` as well).\n\n\nVersion 4.5.1\n-------------\n\n    * `plz run` does not print to stdout any more, so things can consume stdout of it\n      and only get that of the running target.\n\n\nVersion 4.5.0\n-------------\n\n    * `plz build` now outputs more information about what target produced what files, and\n      prints to stdout so other programs can consume it if needed.\n\n\nVersion 4.4.1\n-------------\n\n    * Fix to `plz watch` which wasn't deduplicating dependencies correctly, so could take\n      a very long time to start on deep dependency trees.\n    * Performance improvements to `get_labels()`.\n\n\nVersion 4.4.0\n-------------\n\n    * Added support for multiple per-config test commands in the same way as build commands.\n    * Added hash_filegroup rule which acts like a normal filegroup but creates outputs with\n      a name based on their hash, which facilitates having immutable names for artifacts.\n\n\nVersion 4.3.2\n-------------\n\n    * Fix a divide by zero bug in coverage stats display.\n\n\nVersion 4.3.1\n-------------\n\n    * Fix to java configs from previous version where opt didn't have debug info,\n      we have an example of a test that fails in that configuration, so disabling\n      until we have more info.\n\n\nVersion 4.3.0\n-------------\n\n    * Default compiler options for javac are now settable in config file.\n    * Fixes to rare, subtle & quick to anger panics from concurrent map accesses in\n      plz and the cache servers.\n    * Fix to C++ tests where very rarely the output file got overwritten.\n    * Work paths are correctly stripped from cgo_library and go_get rules.\n\n\nVersion 4.2.2\n-------------\n\n    * Fix divide by zero in coverage stats.\n    * Another RPC cache fix, do not delete outputs when retrieving other files, only\n      when retrieving the main ones in the build step.\n\n\nVersion 4.2.1\n-------------\n\n    * The RPC cache now deletes outputs of a target to fix a rare case around targets\n      that have an output that is a directory and items in it are later removed.\n\n\nVersion 4.2.0\n-------------\n\n    * Adds some extra stats to output coverage file.\n\nVersion 4.1.0\n-------------\n\n    * New command, `plz watch`, which watches the sources of a set of targets for\n      changes and rebuilds / re-tests them when they do.\n    * Support for generating C++ gRPC code in grpc_library.\n    * maven_jar now has a `binary` argument which prompts it to download a\n      native binary (.exe in Maven parlance).\n    * Some subtle changes to pexes to make them work better when not zip_safe.\n    * Bazel compatibility mode now supports $@, $<, etc.\n\n\nVersion 4.0.2\n-------------\n\n    * Remove Docker containers more forcibly.\n    * Exit code of fatal build failures changed slightly.\n    * python_binary now correctly accepts a rule for its `main`.\n\n\nVersion 4.0.1\n-------------\n\n    * Fixes some containerised Java tests when calculating coverage.\n\n\nVersion 4.0.0\n-------------\n\n    * Some rewrites of Go rules with several advantages:\n      - Now compatible with Go 1.7. Previously the linker would panic, apparently when doing\n        a dead code pass related to x/net/context. Still a little unsure of details.\n      - Should be faster, does some linking instead of copying & gives the compiler / linker\n        fewer directories to search.\n      - Compilation of binary / test code is separated from the linking step for better\n        incrementality.\n      There are some consequences from this:\n      - The gopath config entry must be set appropriately for libraries to be found.\n        Normally the defaults will be adequate here.\n      - Similarly, `src` subdirs are no longer implicitly searched in some circumstances.\n      - A go_binary rule must declare all dependencies used in its main package explicitly;\n        previously it was possible to pick them up transitively.\n      These will likely break some code that relied on the old behaviour; although such\n      code was probably technically incorrect, it's reasonable to consider this a breaking\n      change, hence the major version bump.\n    * Config options can be dynamically overridden on the command line,\n      e.g. `plz build -o go.version:1.7`\n    * Output files are made read-only in most cases.\n    * Post-build functions are run once only since it's quite tough to require them to be\n      idempotent.\n\n\nVersion 3.6.2\n-------------\n\n    * Remove undocumented skip_cache argument to build_rule; filegroups implicitly have this\n      and it's nicer not to expose it to anyone else.\n\n\nVersion 3.6.1\n-------------\n\n    * Update SRCS for named sources as well as unnamed ones when affected by require/provide.\n    * Jarcat has an extra flag to allow renaming directories within a zip file (currently\n      not used by any builtin rules).\n\nVersion 3.6.0\n-------------\n\n    * add a `src_dir` argument to java_library\n    * allow attaching deps to a remote_file\n    * fix `plz clean` background bug\n    * #107 Introduce https and mutual auth support to RPC cache\n    * #108 New query subcommand, `plz query whatoutputs`, which queries the current graph and returns the\n      target responsible for the provided file(s)\n\n\nVersion 3.5.0\n-------------\n\n    * New command, `plz rebuild`, which behaves like `plz build` except that the named targets\n      (but not their dependencies) are always rebuilt.\n    * `remote_file` and `maven_jar` rules now print the URL before fetching, to make it a\n      bit easier to follow what they're actually trying to do if they fail.\n    * The Python hash seed is fixed before initialising the interpreter, so dict / set iteration\n      order should be deterministic between runs. The security implications aren't really a\n      concern in this context but repeatability is.\n\n\nVersion 3.4.1\n-------------\n\n    * fix for type checking script when run through python3\n    * Don't try to retrieve results from containerised tests that have no_test_output = True.\n    * Private targets are omitted from `plz query somepath`.\n\n\nVersion 3.4.0\n-------------\n\n    * `plz run` and `plz test` now default to the current package + subpackages when run\n      without arguments. `plz clean` and `plz query` still retain the old semantics of the\n      entire repo.\n\n\nVersion 3.3.0\n-------------\n\n    * Build / test commands are now run with \"-o pipefail\" so you don't have to specify\n      yourself. This could potentially break any rules that relied on the default\n      behaviour although it's unlikely that anything did that deliberately.\n    * Sources are deduplicated on build rules.\n    * Fixed a minor bug where plz run would incorrectly pass the --assert_version flag to\n      the target if it updated automatically.\n    * RPC cache now gives up after a sufficient number of failures so it doesn't drown\n      you in messages on long builds.\n    * If any of the entries in `srcs` in a build rule are None, they're skipped. This makes\n      it easier to write some rules with optional inputs.\n    * Added a config property for the default maven repo.\n    * Output file from java_binary is now configurable.\n\n\nVersion 3.2.0\n-------------\n\n    * Added type checks on arguments to build rules, because the errors can be\n      obtuse if you get them wrong.\n      Strictly speaking this is compatible with the previous release since it simply\n      enforces documentation, although there are subtle cases that would have been\n      accepted before that no longer are.\n\n\nVersion 3.1.3\n-------------\n\n    * Die immediately after a build finishes with unsuccessful targets; this matches\n      previous behaviour in the face of --failing_tests_ok.\n\n\nVersion 3.1.2\n-------------\n\n    * When a target fails, plz now waits for all other building targets to conclude\n      before terminating. We expect that over repeated builds this will be faster\n      because it won't keep abandoning half-complete tasks.\n      Compiler feedback should show immediately, and you can Ctrl+C it to stop whenever.\n\n\nVersion 3.1.1\n-------------\n\n    * Fixed `plz run` on java_binary rules not marked as self_executable.\n    * Various minor cache fixes. Access times should be correctly regenerated\n      on restart now.\n    * Initial work on FreeBSD port; is now mostly buildable there.\n\n\nVersion 3.1.0\n-------------\n\n    * Extra GOPATH additions for cgo_library / cgo_test are configurable through\n      [go]gopath setting. We typically use third_party/go for this.\n    * pip_library commands changed a bit to try to make it more deterministic.\n    * When artifacts fail hash verification after cache retrieval, attempt to build\n      locally instead of failing.\n\n\nVersion 3.0.2\n-------------\n\n    * Some caching fixes; directory entries are now retrieved correctly between restarts\n      of the RPC cache server.\n\n\nVersion 3.0.1\n-------------\n\n    * Fix to pex generation from previous version where it could sometimes add extraneous\n      __init__.py files which conflicted with real ones added later.\n\n\nVersion 3.0.0\n-------------\n\n    * Rewrite of cffi parser interface to use cffi's new embedding\n      (see http://cffi.readthedocs.io/en/latest/embedding.html).\n      This means that we can use cpython or pypy as engines, and build both as separate\n      .so's which we attempt to dlopen() at runtime. The advantage of all this is that\n      it becomes possible to run plz with CPython + cffi, which is quite a bit more\n      straightforward to get installed in the way we need on Linux at present.\n      PyPy should continue to work for anyone who had it working already though.\n    * Builtin rules no longer call zip and jar, because those produce nondeterministic\n      output due to encoding timestamps into their output. They now use jarcat instead.\n      Note that this is a breaking change for some maven_jars rules whose hashes will change.\n\n\nVersion 2.4.0\n-------------\n\n    * Minor fixes to Python coverage code\n    * Added a 'native' attribute to maven_jar which attempts to fetch a .jar with\n      native code. It also now takes 'hashes' since those might of course have\n      different ones on each architecture.\n    * Minor fixes to reverse deps queries.\n\n\nVersion 2.3.5\n-------------\n\n    * Better identification of dependency mediation in please_maven\n    * Rewording of version upgrade message.\n\n\nVersion 2.3.4\n-------------\n\n    * Incrementality fix for some cases where targets weren't correctly rebuilt\n      if their dependencies had been cached.\n\n\nVersion 2.3.3\n-------------\n\n    * Fix for sh_binary which used an incorrectly formatted version of sed.\n\nVersion 2.3.2\n-------------\n\n    * Fix where existing partial outputs were sometimes not removed correctly.\n\n\nVersion 2.3.1\n-------------\n\n    * Fix for cc_static_library which was broken in previous version.\n\n\nVersion 2.3.0\n-------------\n\n    * Added Bazel compatibility mode; can be configured in .plzconfig and alters several\n      aspects of parsing behaviour to better mimic Bazel's behaviour. This allows parsing\n      of simple Bazel projects, complex Skylark rules are a long way from working at this\n      point though.\n    * cc_library gained new arguments, `includes` and `defines` which add directories to\n      the include path and define preprocessor symbols respectively. These are transitively\n      applied to dependent cc_library rules.\n    * cc_test has a new argument, `write_test_main` which defaults to true. If set to False\n      it does not provide a main() and you must write it yourself.\n    * java_binary no longer has to have main_class specified.\n    * cc_library generates (possibly) more sub-rules to compile each of its `srcs` separately,\n      which is significantly faster for large numbers of inputs.\n    * filegroup now has an internal implementation rather than being done in bash. This\n      allows some things internally to be done more robustly and avoids errors from command\n      line length limits for very large filegroups.\n    * `plz query somepath` now respects :all labels.\n\n\nVersion 2.2.1\n-------------\n\n    * Reworked ordering of tasks during build; should make little difference to overall time\n      but parses will happen relatively faster so the estimated total task number will rise\n      faster. This is more akin to the pre-1.8 behaviour.\n    * Fix bug where targets with need_transitive_deps = True could incorrectly receive tools\n      of their indirect deps in their tmp directory.\n\n\nVersion 2.2.0\n-------------\n\n    * Python targets now have a `stripped` build config in which the .py files are stripped out\n      and only .pyc / .pyo bytecode files included in the .pex.\n      We're considering making this the default behaviour for `opt` but if we do that will be\n      left for a future major revision.\n\n\nVersion 2.1.2\n-------------\n    * Fixes one more bug with sh_binary where paths were taken to be relative when they were absolute.\n\nVersion 2.1.1\n-------------\n    * Fixes bug with sh_binary not ignoring the main script properly when generating the tarball.\n\nVersion 2.1.0\n-------------\n    * Adds additional features to sh_binary to make it more complete. sh_binary now creates\n      a single bash script. This script contains all dependencies as well as the main\n      script to be executed. When the sh_binary is run, it extracts all the files\n      to the current directory and finally executes the main script.\n\nVersion 2.0.0\n-------------\n\n    * We are going to try doing semver from here on, so this release increments the major\n      version due to several very slightly breaking changes.\n    * More convenient output on incorrect hashes.\n    * C++ tests now honour being given a specific test to run (The current implementation\n      of this requires C++11, we could write it in a more tedious way if it's a problem).\n    * Reading stdin for build labels is now done asynchronously, so Please will build initial\n      targets from a relatively slow supplying process immediately rather than waiting for them all.\n      `plz query affectedtargets` and `plz query completions` still retain the old behaviour\n      for technical reasons (aka. laziness).\n      It is also slightly more robust about the input it accepts (esp. around spaces).\n    * `plz query alltargets` now does not display hidden targets (those starting with an\n      underscore) by default. It has a new `--hidden` flag which will show them as well.\n    * `subinclude()` can now be given a URL to download build defs from. Downloads will be\n      deduplicated and run as `real` build targets so the parse remains fast (or at least\n      as fast as possible given that something has to be downloaded for it to proceed).\n\n\nVersion 1.8.2\n-------------\n\n    * Fix interactive display on versions of iTerm (2.1.x) that don't support the\n      ANSI CPL instruction.\n    * Go version in config now only affects hashes of Go targets. This alters the\n      general hash calculation logic so unfortunately will force rebuilds of all targets -\n      this is unavoidable but will lead to better incrementality in future.\n    * Suffix temp build directories with #.build (and tests with #.test instead of just .test)\n      to avoid cases where they clash with paths to sub-packages that happen to\n      begin with the same name.\n\n\nVersion 1.8.1\n-------------\n\n    * Support for loading arch-specific config files, .plzconfig_linux_amd64 etc.\n      Allows tweaking config for different machine types.\n\n\nVersion 1.8.0\n-------------\n\n    * Reworked internal queuing implementation which prioritises `subinclude()` targets\n      more highly. `subinclude()` itself also caches compiled code.\n    * New feature, `plz query reverseDeps` which finds reverse dependencies of a target.\n    * `plz query graph` output has more features in it.\n    * new setting in config, blacklistdirs, which excludes certain directory names from\n      being walked by `plz build ...` and the like.\n    * Upgraded python coverage package.\n    * Upgraded gRPC implementation. Note that this is a breaking change for the RPC cache\n      so that will need to be upgraded in sync with plz itself.\n    * Allow passing build target expressions to --exclude.\n    * Fix for some relative implicit labels passed on the command line which sometimes\n      incorrectly lost a slash.\n    * Terminal window titles are now updated as build progresses.\n\n\nVersion 1.7.3\n-------------\n\n    * Support for maven_jars fetching specified optional dependencies via 'optional' argument.\n\n\nVersion 1.7.2\n-------------\n\n    * Fix to Java rules which were subtly broken in previous version.\n\n\nVersion 1.7.1\n-------------\n\n    * Additional flag, `--include_file`, to `plz cover` which filters coverage output to\n      just the given files.\n    * maven_jars now has two new arguments, `combine` which combines its transitive deps\n      into a single uberjar and `hash` which sets the hash for that uberjar.\n      The intention here is to make it more lightweight to set a hash for a single target\n      rather than having to provide potentially many individual hashes.\n    * Fixed aliases which were accidentally broken by some flag changes.\n\n\nVersion 1.7.0\n-------------\n\n    * Reworking of error handling in parsing code. Previous code used to panic back through\n      the parser which deeply upset PyPy (often we got away with it because we'd die before\n      anything else could go wrong, but not always). Now errors are returned to Python and\n      reraised as exceptions there - which implies that it's possible for BUILD code to\n      catch and handle such exceptions, although I don't recommend writing them that way :)\n    * Optimised glob() a bit so it doesn't descend into directories that will never match\n      the given pattern.\n    * Fixed compilation of clang tests with python3\n    * Officially ban subincluding of local targets (didn't actually work before anyway)\n    * `plz clean` now cleans sub-targets as well\n    * Banned double slashes in build labels which was being incorrectly let though, leading\n      to some very strange failures.\n    * Ensure paths are relative in hash memoisation - improves hit rate by about 30% and\n      is a performance improvement (although probably not very noticeable in most cases).\n\t* `plz cover` now has a `--line_coverage_report` / `-l` flag to produce line-by-line\n      coverage output for its affected files.\n\n\nVersion 1.6.7\n-------------\n\n    * Fix for go_src part of proto_library; don't think we exercise that internally\n      anywhere any more, but it is now a bit less broken than before.\n\n\nVersion 1.6.6\n-------------\n\n    * Fix to flaky tests; don't count as failures once success has been reached.\n\n\nVersion 1.6.5\n-------------\n\n    * BuildGraph now uses a RWMutex instead of a normal Mutex for slightly better concurrency.\n    * Added `plz hash` command which calculates the current hash for targets.\n    * Jarcat now does proper unsigning of jars always.\n\n\nVersion 1.6.4\n-------------\n\n    * `glob()` now correctly finds files in the current directory that are prefixed\n      with **, ie. `glob(['**/*.png'])` matches `a.png`.\n\n\nVersion 1.6.3\n-------------\n\n    * Proto rules now correctly set up C++ headers / sources separately which fixes\n      compilation with Clang.\n\n\nVersion 1.6.2\n-------------\n\n    * Fix for proto rules where grpc_library sometimes did not add a plugin correctly.\n\n\nVersion 1.6.1\n-------------\n\n    * Various tools now honour the please.location setting correctly.\n\n\nVersion 1.6.0\n-------------\n\n    * RPC cache now initialises asynchronously so if it's not available the\n      build will not hang waiting for its connection to time out.\n      This is a breaking addition to the cache's interface since it is now required to\n      implement the gRPC health check (from google.golang.org/grpc/health) so\n      v1.6+ of the server will have to be deployed to support v1.6+ clients.\n      It will remain backwards compatible for older clients though.\n    * Plz now comes with a wrapper script which can be committed and will fetch\n      plz and invoke it. Makes it easy to use for people who don't have it\n      installed already, ala Gradle's gradlew script.\n    * The default location for tools is in ~/.please instead of /opt/please,\n      which again makes it easier for people who don't have the tools already.\n    * --max_flakes flag has been removed in favour of --num_runs always making\n      a test run exactly that many times. Hopefully this is less confusing.\n    * `query alltargets` now obeys the original targets and --include / --exclude better.\n    * There is now a `system_library` rule which can collect files from outside the build tree.\n      Correspondingly, there is a `system_srcs` attribute on `build_rule`.\n\n\nVersion 1.5.12\n--------------\n\n    * Altered exclusion rules for java_binary / java_test to better support native libraries.\n\n\nVersion 1.5.11\n--------------\n\n    * Write explicit failures into unit test output on timeout etc. Needed for some downstream\n      tools that don't check attributes like 'failures' and need explicit entries.\n\n\nVersion 1.5.10\n--------------\n\n    * Fix for multiple caches which could sometimes panic with a negative waitgroup.\n\n\nVersion 1.5.9\n-------------\n\n    * grpc_library now correctly honours the 'languages' argument.\n\n\nVersion 1.5.8\n-------------\n\n    * Various fixes to RPC cache. Use base64 URL encoding and short hashes.\n\n\nVersion 1.5.7\n-------------\n\n    * Adds `go generate` support. You can now call it by adding `go_tools` to your go_library.\n\n\nVersion 1.5.6\n-------------\n\n    * Fix bug where golang tests pass if they panic since the exit code was being ignored\n      after piping the command to tee.\n    * 'plz query completions' now treats \\: as equivalent to : to work around #18.\n\n\nVersion 1.5.5\n-------------\n\n    * Another similar fix for ForkExec call to cache_cleaner.\n\n\nVersion 1.5.4\n-------------\n\n    * Fix to cache_cleaner which wasn't always cleaning correctly.\n\n\nVersion 1.5.3\n-------------\n\n    * Fix tarballs to be consistent about /opt/please/please_go_test.\n\n\nVersion 1.5.2\n-------------\n\n    * Fix incorrect warning on tools that have multiple outputs.\n\n\nVersion 1.5.1\n-------------\n\n    * Fixed a bug where importing of libraries in test main files could be indeterminate\n      if you had multiple libraries of the same name in different subdirectories.\n\n\nVersion 1.5.0\n-------------\n\n    * Support for build configurations, activated by '-c opt' and '-c dbg'. Those two\n      are provided by default on C++ and Go rules; other languages can stick with a\n      single command at present, use those and / or define their own configs.\n    * The 'strip' config option and go_binary argument has been removed. It's now\n      implicit in -c opt for go_binary.\n    * C++ config options have changed a lot; the test / normal dichotomy has gone, we now\n      have defaults for dbg and opt and a default set of ldflags. -lunittest++ is applied\n      automatically by cc_test.\n    * --no_cache has been changed to --nocache for consistency.\n    * The -c argument to plz clean is now removed. Default is to clean the cache,\n      and it honours the top-level --nocache flag if you don't want to clean that.\n    * python_library now has an 'out' argument where you can set the name of the output\n      pex. It defaults to the same as before.\n    * More reliable returning of test output when tests time out.\n\n\nVersion 1.4.9\n-------------\n\n    * 'plz clean' now backgrounds itself when possible, in which case the user can\n      continue with other tasks with no delay.\n    * Added licenses() builtin function for Bazel compatibility; it roughly parallels\n      theirs in setting the default licence for all targets in a BUILD file. Implicitly\n      we can also now use package(default_licences = [...]) which is equivalent.\n    * + is now allowed in names of build rules.\n    * Fixed .deb package to include plz_diff_graphs.\n\n\nVersion 1.4.8\n-------------\n\n    * Fixed a bug where Please would sometimes panic during coverage display.\n    * 'plz query graph' now includes all transitive dependencies of requested targets\n      as well as the targets themselves.\n\n\nVersion 1.4.7\n-------------\n\n    * Quoting of expansions in shell commands now only happens when needed.\n    * $PKG variable is available to test commands as well.\n    * $ROOT_DIR variable is no longer available to any commands.\n\n\nVersion 1.4.6\n-------------\n\n    * Added a 'tools' attribute on genrules which refers to things used to build a rule\n      which aren't copied into the temp directory.\n    * Fixed bug where filegroup() didn't correctly honour the binary flag.\n\n\nVersion 1.4.5\n-------------\n\n    * Fix debs to have .jar suffix correctly.\n    * cc_library now correctly supports multiple srcs. As a result it produces a single .a\n      always instead of .o files. 'archive' attribute is now deprecated.\n\n\nVersion 1.4.4\n-------------\n\n    * Make timeout for retrieving Dockerised test results configurable, and default to\n      a higher value.\n    * Remove results file before running plz test or plz cover.\n    * Add configurable extensions which can be excluded from coverage.\n\n\nVersion 1.4.3\n-------------\n\n    * Adds support for nested tests in golang (e.g. test suites).\n\n\nVersion 1.4.2\n-------------\n\n    * Add a test failure when the test returns nonzero but produces a valid output\n      file with no errors, so we always show at least one in the summary.\n    * Add a cc_static_library rule which archives a transitive set of C++ rules.\n      Essentially it's the static counterpart to cc_shared_object.\n    * 'plz op' repeats the previous operation.\n    * Non-zip-safe pexes are now always extracted at startup, even if pex thinks\n      it doesn't need to. Fixes a bug where incrementality wasn't always correct\n      because we modify the .pex file after pex has built it.\n    * New flags --colour and --nocolour allow one to force coloured output on/off.\n\n\nVersion 1.4.1\n-------------\n\n    * Temporary directories are now cleaned after successfully building or testing.\n    * Minor updates to interactive console display.\n    * Fixes to make cgo_library more robust.\n    * Small fix to cc_embed_binary which no longer requires passing deps if the src\n      is generated via a genrule.\n\n\nVersion 1.4.0\n-------------\n\n    * java_binary and java_test now generate a self-executable .jar file and no\n      wrapper script, so the _name#jar sub-rule is no longer generated.\n    * A number of deprecated arguments have been removed; for example\n      source_under_test, headers / exported_headers, etc.\n    * Added a global config parameter to allow enabling/disabling PyPI globally.\n    * Slightly stricter type checking of arguments to build_rule\n    * All output of build steps now prints to stderr instead of stdout\n      (plz query still prints to stdout but plz test / plz build don't)\n    * Config hashes are now much more granular; only things that affect something\n      global are used in the calculation of the config hash. Changes to tools etc\n      are assumed to be handled by the rule hash of any rule using that tool.\n    * Test container settings in the global config only affect containerised\n      test rules and only at test time.\n    * Added a nonce field to the config which we'll use to invalidate the config\n      hash when necessary. This might happen at any minor release but should\n      be rare that we'll have to change it.\n    * Interactive display should be a bit nicer on some non-vsynced terminals\n      (xterm? not entirely sure what the conditions here were).\n    * 'query graph' now accepts a list of targets to filter to.\n    * Support for building with python3.\n    * Initial support for aliases in config file; the implementation is a little\n      agricultural but they seem to work so far, within their limits.\n    * Fix a bunch of small bugs too numerous to mention here.\n\n\nVersion 1.3.9\n-------------\n\n    * go_get now takes a `revision` argument which allows pinning libraries to a\n      particular git revision. `install` now has no effect on it.\n    * Adding new targets to a package in post build functions now takes effect\n      immediately, rather than waiting until the end of that post build function.\n      Fixes some subtle race conditions around dependencies.\n\n\nVersion 1.3.8\n-------------\n\n    * Fixed several (benign) race conditions in the interactive display in the interest\n      of having it run cleanly under go's race detector.\n    * Bunch of small cleanups suggested by gometalint.\n    * Add fpm_package and fpm_deb rules and use those to build packages instead of\n      top-level script.\n    * Fix for test result hashes; make them the same length as others so the cache cleaner\n      finds them ok.\n    * Fixed a hash calculation bug that would sometimes silently fail when the sources of a rule\n      included a symlink to a directory.\n\n\nVersion 1.3.7\n-------------\n\n    * Rules that specify a source dependency on a single output of another rule are now\n      honoured correctly when being built into a larger rule (eg. a python_library into\n      a python_binary, as happens often with protos).\n    * Added option to proto config to rewrite package of Python proto modules.\n\n\nVersion 1.3.6\n------------\n\n    * please_maven now correctly fetches all transitive dependencies, not just one level.\n    * Added org.ow2.asm:asm-debug-all as a dependency for the test runner which was missing.\n    * 'plz query graph' now outputs labels in the graph dump.\n    * plz_diff_graphs can now include/exclude based on labels.\n\n\nVersion 1.3.5\n-------------\n\n    * Fixed a couple of subtle internal race conditions. Suspect that most but not all\n      cases were benign, and it's nicer to have them gone, albeit at the cost of more\n      lock contention - not that it seems to matter particularly.\n    * More robust Python licence detection.\n\n\nVersion 1.3.4\n-------------\n\n    * More informative error messages when parsing fails due to not finding a package.\n    * Defaults for repeated entries in the config files now only take effect if nothing else\n      is specified (ie. the entries in the config replace instead of appending). This\n      was always the intended behaviour although it's technically breaking.\n    * Added 'plz query graph' command that produces a (currently fairly minimal) JSON\n      representation of the graph that other tools could consume.\n    * Added a tool to diff two graphs produced by new 'query graph' command.\n\n\nVersion 1.3.3\n-------------\n\n    * Fix to filegroup rules at the top level of the repo.\n    * Fix some hash instability in at least some rules.\n\n\nVersion 1.3.2\n-------------\n\n    * Support for autodetecting licenses for packages found in a maven_jars rule.\n      Still pretty experimental since it's surprisingly hard to handle all the maven output\n      (maybe having someone write this who knew more about Maven would have been an idea...)\n    * Fix a parse bug where we need to transitively pass the requirement to build a target\n      that's needed for parse.\n    * Correct bug in output where it would sometimes crash in rare circumstances (attempting\n      to print build output of a target that wasn't built due to 'manual' label or similar)\n\n\nVersion 1.3.1\n-------------\n\n    * Added possibility for targets to depend on a single output of another rule,\n      using the format //package:target:output_file. This isn't accepted as a command\n      line input and is still a little experimental. Proto rules have been changed to\n      use it instead of generating #only sub-rules.\n    * Changed detection of multiple rules outputting the same file to parse-time detection\n      instead of unreliable build-time detection (this requires the proto changes above).\n    * The exec statement is now banned from the build language.\n    * When multiple caches are configured, artifacts fetched from a lower-priority cache\n      are stored into a higher-priority cache (eg. RPC cache -> dir cache).\n    * Support for associating licences with build targets. Can specify which to accept\n      and reject in the config.\n\n\nVersion 1.3\n-----------\n\n    * Add support to go_binary for stripping symbols.\n    * Added self-cleaning to HTTP cache\n    * Added RPC cache implementation.\n    * Fixed \"source file not found\" error in some (fairly complex) cases\n      (I think, this one has been a long battle...)\n    * Changed jarcat to proper logging & go-flags library\n    * Implement file copying to dir cache via copy+rename to avoid errors when files\n      are half-written.\n    * Building with PyPy 4.0\n    * Redid locking around parsing, should allow for better parallelism there\n      (although I think PyPy is still limited by its GIL).\n    * Introduced new builtin build function subinclude() which is similar to include_defs\n      but can be visibility controlled and consumes a real build label instead of basically\n      a file path. Will eventually remove include_defs since it can't be visibility controlled.\n    * python_binary rules can be depended on by python_library rules and imported as though\n      they were a python_library.\n\n\nVersion 1.2.7\n-------------\n\n    * Tag test results files with their runtime hash so they are correctly re-run\n      when runtime data files change\n    * Small fix to cc_shared_object which was incorrectly marked as binary.\n\n\nVersion 1.2.6\n-------------\n\n    * Propagate require / provide through exported_deps when producing sources.\n    * Add zip_safe as a flag on python_library and pip_library. python_binary and\n      python_test will pick this up if it's in their transitive dependencies and\n      mark the pex appropriately.\n    * Add a flag to control level of messages logged to file output separate from\n      normal verbosity.\n\n\nVersion 1.2.5\n-------------\n\n    * Import ban in Python changed to work by inspecting the AST instead of hacking\n      __builtins__. Removed some hacky global state changes as a result and added\n      caching of bytecode which seems quite a bit faster for parsing.\n    * Add flag to print commands as they're run (CEO request).\n    * Use directories under /tmp for containerised tests rather than top-level ones\n      so they can be run as non-root users within the container.\n\n\nVersion 1.2.4\n-------------\n\n    * Add detection of multiple rules outputting the same files. This is trickier\n      then one might think due to things like filegroup() and python_library()\n      repeating their outputs again so must be done at build time (not parse time).\n    * Make output trace file configurable.\n    * Delete test results file at plz startup.\n    * Disallow : or / in an incoming target name.\n    * Small cleanup which results in Java source / target levels now being strings.\n\n\nVersion 1.2.3\n-------------\n\n    * Small bugfix: named sources that are build labels now automatically add the\n      dependency in the same way that anonymous sources do.\n    * Fix a case where post-build rules weren't always linking up deps properly.\n\t* Rename split_path_ext to just splitext, it's more natural.\n\n\nVersion 1.2.2\n-------------\n\n    * Small bugfix: always attempt to kill container, even if we can't retrieve results.\n    * Add basename, dirname, split_path and split_path_ext as global utility functions.\n\n\nVersion 1.2.1\n-------------\n\n    * Docker change: rather than attempting to run as the current user which often\n      has weird effects because they're not known within the container, run as root and\n      extract the files afterwards with 'docker cp' to avoid root ownership.\n    * Added timeout and container arguments to sh_test which were missing\n    * Small improvement to 'plz query print' to not repeat things that are implied\n      (requires -> labels, exported_deps -> deps).\n    * Strip all leading underscores for dependent rule names in interactive display\n    * Remove PY_PKG variable, just replace it in bash\n    * OP has merged my go-flags patch upstream, it's no longer needed\n    * Allow specifying the output name of a go_library rule\n    * Add labels arg to filegroup\n\n\nVersion 1.2\n-----------\n\n    * Support for acquiring the transitive set of labels a rule & its dependencies possess.\n      Useful for implementing properties that affect the final target, eg. cc_library\n      linker flags being applied to the final cc_binary.\n    * cc rules: change 'headers' and 'exported_headers' to just 'hdrs', which are always\n      exported because that's generally what you want. Will consider adding 'private_headers'\n      or similar later if there's a need but for now I'd prefer the default to be obvious.\n    * Incremental pex compilation; every python_library rule generates a little .zip file\n      of just its stuff which get merged together in the final rule. Quite fiddly to get\n      right but the speedup is dramatic.\n    * Some rewriting of Go rules to make them more robust for complex libraries & go_get.\n    * Added an exclusive file lock to two plz processes running in the same repo will\n      not run simultaneously (unless you pass --nolock).\n\n\nVersion 1.1.4\n-------------\n\n    * Added jvm_args parameters to java_test and java_binary so it's possible to\n      customise JVM startup.\n\n\nVersion 1.1.3\n-------------\n\n    * `plz update` now ignores the selfupdate field in config and always updates.\n    * Added new subcommand, `plz query output` to get the outputs of a rule.\n\n\nVersion 1.1.2\n-------------\n\n    * Fix passing relative targets on command line; was accidentally broken by parsing\n      build labels earlier on in the initialisation process.\n    * Refactor of the underlying zip writer stuff in jarcat. Doesn't make much difference\n      yet but is a step towards some future work.\n    * Add a count of number of targets done / total which better approximates progress.\n\n\nVersion 1.1.1\n-------------\n\n    * Upgrade to go 1.5, at last fixed the PyPy issue with a couple of lines of Go.\n      Note that this is a breaking change for developers (but invisible to users of plz,\n      so we're doing it at a minor version).\n    * Share env-building code between build & test, and log more for tests.\n    * Fixes to http cache.\n    * New command, 'query affectedtargets', which is similar to 'query affectedtests' but\n      finds all targets, not just tests. 'query affectedtargets --tests' obsoletes\n      'query affectedtests' which will be removed at plz 1.2.\n\n\nVersion 1.1\n-----------\n\n    * Major version bump because numbers were getting too big.\n    * HTTP cache ready for early adopter testing\n    * Can set containerisation settings on a per-target basis and control the user Docker\n      runs as within the container.\n    * Changed $(location ...) style substitutions to use relative instead of absolute paths\n      so they can be shared via the HTTP cache.\n\n\nVersion 1.0.13\n--------------\n\n    * Expand ~ to home path when building targets.\n\n\nVersion 1.0.12\n--------------\n\n    * Initial implementation of HTTP cache, not yet ready to use.\n    * Add a little more logging when targets fail to build, which we've seen a few times.\n    * Some suggestions from go vet, one of which may improve locking potentially\n    * Ensure rule outputs are added uniquely.\n\n\nVersion 1.0.11\n--------------\n\n    * Fix for cases where sometimes parse errors would not be reported.\n      Turned out to be related to disallowing imports, so we attempt to\n      allow them during compilation (but not execution) of code.\n\t* Update of go rules to be more correct and hopefully streamlined around go_get.\n\n\nVersion 1.0.10\n--------------\n\n    * Added RunArgs to [docker] section of config file to allow passing it\n      arbitrary extra arguments.\n    * Rewrite of parts of the Go rules to more correctly support targets\n      in subdirectories.\n    * add_out() function introduced to build language which can be used\n      to annotate a target with additional outputs, particularly during\n      post-build function. Still slightly experimental.\n\n\nVersion 1.0.9\n-------------\n\n    * 'query completions' can now be filtered to particular targets, so it will\n      only complete binaries for 'plz run' and tests for 'plz test' or 'plz cover'.\n    * Update by downloading tarballs instead of individual binaries. This deprecates\n      the --extra_tools flag but we will keep it for compatibility for a while.\n    * Fix for query affectedtests so it correctly excludes manual tests.\n\n\nVersion 1.0.8\n-------------\n\n    * Bugfix, 'query affectedtests' not always reading from stdin properly.\n\n\nVersion 1.0.7\n-------------\n\n    * Bugfix, previous version mistakenly changed 'query input' to 'query inputs'.\n\n\nVersion 1.0.6\n-------------\n\n    * Remove SRCDIR variable and built-in supporting code. No longer needed\n      for compatibility and the symlink causes problems for some rules because\n      it introduces a diamond into the folder structure.\n    * Remove __import__ builtin from parser so build scripts can no longer\n      import external modules.\n    * Added a test_only attribute for library rules that ensures they can only be\n      used by tests or other test_only rules.\n    * python3 compatibility fix in test_main.py\n    * Added a package() function that can be used to set various global config\n      things (probably most usefully, default_visibility).\n    * Flag parsing refactor; should mostly be invisible externally except that\n      `plz clean cache` is now `plz clean --cache`.\n    * Selective test running, eg. `plz test //test:my_test my_test_function`\n    * --num_runs flag to force a test to run multiple times.\n    * Some refactoring & bugfixes to require/provide.\n\n\nVersion 1.0.5\n-------------\n\n    * Fix crash in output code when window is very small vertically.\n    * Support for Go 1.5. Seeing some issues that may be caused by it so\n      not upgrading just yet.\n    * Populate Java test class names correctly.\n    * Display elapsed time for each test.\n    * Fix for require / provide stuff still building unnecessary targets\n      (they weren't depended on, but still got built).\n    * Fix caching targets when run with plz cover.\n    * Support for pseudo-targets like :all and ... with plz clean.\n\n\nVersion 1.0.4\n-------------\n\n    * Fix crash when running tests with --no_cache.\n    * Nothing else, quick release to fix crasher.\n\n\nVersion 1.0.3\n-------------\n\n    * Test results are now cached & retrieved as other build artifacts.\n    * Hashes are verified after retrieving from cache\n    * Targets retrieved from cache are marked as unchanged when appropriate\n    * Added a join_path builtin to the build language.\n    * Remove all outputs after a build fails.\n    * Attempt to import Python test modules ourselves before relying on unittest's\n      detection, which produces misleading error messages if an ImportError is\n      thrown while attempting to load the test.\n    * Display depending target when we encounter a missing dependency.\n    * If build fails due to an apparent dependency cycle, attempt to detect and\n      print the cycle.\n\n\nVersion 1.0.2\n-------------\n\n    * Generate a python_library rule behind a python_binary to symlink\n      the main .py file into plz-out. Fixes certain run issues.\n    * Set ROOT_DIR variable while running tests.\n\n\nVersion 1.0.1\n-------------\n\n    * Support for skipping tests in go_test\n    * Limit length of printed lines in interactive shell mode so\n      output doesn't go berserk when window is too narrow.\n      (it's still not great at being resized down but at least it\n       stabilises after the window is reduced).\n    * Fall back to attempting to copy files if hardlink fails.\n\n\nVersion 1.0\n-----------\n\n    * f1rst post!!!1!one\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.19921875,
          "content": "# Please [![Build Status](https://circleci.com/gh/thought-machine/please.svg?style=shield)](https://circleci.com/gh/thought-machine/please) [![Build Status](https://api.cirrus-ci.com/github/thought-machine/please.svg)](https://cirrus-ci.com/github/thought-machine/please) [![Go Report Card](https://goreportcard.com/badge/github.com/thought-machine/please)](https://goreportcard.com/report/github.com/thought-machine/please) [![Gitter chat](https://badges.gitter.im/thought-machine/please.png)](https://gitter.im/please-build/Lobby)\n\nPlease is a cross-language build system with an emphasis on\nhigh performance, extensibility and reproducibility.\nIt supports a number of popular languages and can automate\nnearly any aspect of your build process.\n\nSee [please.build](https://please.build) for more information.\n\nCurrently Linux (tested on Ubuntu), macOS and FreeBSD are actively supported.\n\nIf you're a fan of Please, don't forget to add yourself\nto the [adopters](https://github.com/thought-machine/please/blob/master/ADOPTERS.md)\nfile.\n\nGetting Started\n===============\n\nThe easiest way to install it on your own machine is to run:\n```bash\ncurl -s https://get.please.build | bash\n```\nOr, if you prefer, grab one of the tarballs off our\n[releases page](https://github.com/thought-machine/please/releases)\nand extract it yourself; it typically lives in `~/.please`.\n\nYou can also install using [Homebrew](https://brew.sh):\n```bash\nbrew tap thought-machine/please\nbrew install please\n```\n\nThen you simply run `plz init` at the root of your project to set up\na default config and you're ready to go. The best way to get to grips\nwith Please is through the [codelabs](https://please.build/codelabs.html)!\nThere's also the [getting started](https://please.build/quickstart.html)\nguide that explains the core concepts.\n\nHow is it so fast?\n==================\n\nPlease has a robust and correct caching model that enables us to aggressively\ncache artifacts. Caching is based on the hashes of inputs (both files, and\nenvironment variables) to each rule rather than last modified timestamps.\nBuilds are hermetic so don't have access to anything they haven't explicitly\ndefined as inputs. This means that if anything changes, we know exactly what\nmight've been affected, so the minimal set of targets get built and tested.\n\nBecause each task is hermetic, they can be run in parallel without any chance\nof interfering with each-other. Combine these two concepts with shared remote\ncaches, and it makes for a blazing fast build system for any language or\ntechnology.\n\nPlease is also written in Go and every effort has been made to make it as fast\nas possible. There's no startup time waiting to bring up VMs, interpreting code\nor communicating with remote JVM processes. The code itself takes full\nadvantage of Go's concurrency and asynchronicity. The end result is a snappy\ncommand line tool that gets to work immediately and feels great to use.\n\nWhy Please, and not Maven, pip, or go build?\n============================================\n\nA build system is more than just a mechanism for invoking the compiler.\nIf you're working on just one language, don't have any code generation,\nand don't need to publish any artifacts anywhere, you might not need\nPlease. Chances are this is not the case.\n\nBuilding software often involves more than just compiling code. There's\ndeployment config to template, code to generate, and quite often, there's\nmore than one language involved. Please provides a powerful, comprehensive,\nand understandable framework that you can use to craft a truly holistic\nbuild process.\n\nPlease does this through a consistent and seamless command line interface;\nthere's no need to learn new build systems and technologies for different\nlanguages. Build any target with `plz build`, test any target with `plz test`,\nno matter what's going on under the hood.\n\nThe [Docker & Kubernetes](https://please.build/codelabs/k8s) codelab covers\nbuilding a Kubernetes based application with Please, including reliably\ndeploying code to a local cluster, and pushing it to a remote registry.\n\nThe [genrule()](https://please.build/codelabs/genrule) codelab covers\nextending Please with custom build definitions to truly automate any\npart of your deployment process.\n\nWhy Please, and not make?\n=========================\n\nMake is a great tool for running tasks. It's easy enough to understand\nbecause it leaves you very close to the shell. The problem is, it has\nlimited capability to build out complexity. There have been attempts to\ngenerate make files from higher level tools like cmake and ninja, but they\nfall short of what Please sets out to achieve.\n\nThe Please build language is a full programming language. There are a high\nlevel set of build rules that make up a declarative DSL to define build\ntargets, however you can drop into an imperative language that resembles\npython when necessary:\n\n```python\nsubinclude(\"//my_custom_defs:markdown_page\")\n\npages = []\nfor page in glob(include = [\"*.md\"]):\n    pages += markdown_page(\n        name = page.removesuffix(\".md\"),\n        srcs = [page],\n        visibility = [\"//website/...\"],\n    )\n\ngo_binary (\n    name = \"webserver\",\n    srcs = [\"main.go\"],\n    deps = [\"//third_party/go:protobuf\"],\n    data = pages,\n    visibility = [\"//services/foo/...\"],\n)\n```\n\nThis is distinctively operating at a higher level when compared to make:\n\n```\nprotobuf:\n    go install google.golang.org/protobuf\n\nwebserver: protobuf\n    go tool compile --pack foo.go -o foo.a\n\npages: ???\n```\n\nAdditionally, `make` builds are not hermetic. The above make example installs\nprotobuf into the host machines Go path. Please builds only have access to files\nand environment variables they have explicitly been given access to. You can play\naround in the environment targets are built in with `plz build //some/target --shell`.\nAdditionally, on linux systems, Please can take this a step further with Linux\n[namespaces](https://en.wikipedia.org/wiki/Linux_namespaces) to improve\nsandboxing especially of the network. Please also has built in task\nparallelism so can take full advantage of multi-core machines which were\nnot a consideration 40 years ago when make was designed.\n\nFinally, Please has a robust caching mechanism base on hashing the\ninputs of each rule. Makes cache invalidation is based on the last\nmodified timestamp which can change unexpectedly forwards and\nbackwards in time. Combine this with hermetic builds, and Please\ncaching is never incorrect.\n\n\nWhy Please, not Bazel, Buck or Pants?\n=====================================\n\nThese build systems are all very similar so choosing between them can be hard.\nPlease originally replaced buck implementing the subset of features we used. We\nfound that buck (and the competition) worked great when using the supported\nlanguages but fell flat when breaking new ground.\n\nThe biggest difference between Please and the competition is that Please is\ndesigned from the ground up to be extensible. The built-in languages are all\ndefined in the same\n[build language](https://github.com/thought-machine/please/tree/master/rules)\nas you use to define your targets, demonstrating that there's nothing special\nabout them. This puts the build definitions where they should be: in your\ndomain. You have all the same tools Please has to expand your build\ndefinitions to satisfy your needs.\n\nPlease does all this with a focus on simplicity and transparency. There are\na limited amount of concepts that are needed to get started and once they are\ngrocked, the possibilities are endless. Please relies on these concepts rather\nthan requiring lots of magic and incantation. Configuration is simple and largely\noptional so getting going is easy, and there's no single WORKSPACE file nobody really\nowns, with lines of configuration that nobody really understands.\n\nThe command line interface is designed with similar considerations in mind. Subcommands\ncan be added to Please though [aliases](https://please.build/config.html#alias) and\ntie into the Please tab-completions. Not only can flags and arguments be\ncompleted, but they can also leverage the build graph to complete labels enabling you\nto truly craft your developer experience the way you want it.\n\nBuilding Please\n===============\n\nIf you're looking to get involved, check out the contributor\n[guidance](CONTRIBUTING.md) to help you get started. If you're a fan of\nPlease, don't forget to add yourself to the\n[adopters](https://github.com/thought-machine/please/blob/master/ADOPTERS.md)\nfile.\n\nTo build Please yourself, run `./bootstrap.sh` in the repo root.\nThis will bootstrap a minimal version of Please using Go and then\nrebuild it using itself. You'll need to have Go 1.23+ installed.\n\nOptional dependencies for various tests include Python, Java, clang,\ngold and docker - none of those are required to build components so\ntheir tests will be excluded if they aren't available.\n\nIf you'd rather not worry about installing the dependencies, we provide\na prebuilt Docker image based on Ubuntu which is capable of building\nthe whole thing for you:\n[`docker run -it thoughtmachine/please_ubuntu`](https://hub.docker.com/r/thoughtmachine/please_ubuntu)\n\nYou can install a locally built copy of Please using `plz install`, or\nif it's the first time, by running `./install.sh` after it's built.\nThis will overwrite whatever you currently have in `~/.please` with\nyour local version, although you can get back to a released version\nagain by running `plz update --force`.\n\nTo automatically fix linting and code generation issues, run\n`plz autofix`.\n\n\nDocumentation\n=============\n\n * [Quickstart](https://please.build/quickstart.html)\n * [Commands & command-line arguments](https://please.build/commands.html)\n * [Built-in rules](https://please.build/lexicon.html)\n * [BUILD language reference](https://please.build/language.html)\n * [Custom build rules](https://please.build/build_rules.html)\n * [Config reference](https://please.build/config.html)\n * [FAQ](https://please.build/faq.html)\n\n\nStatus\n======\n\nPlease is released & we consider it stable; we follow [semver](https://semver.org)\nfor releases, so major versions indicate potentially breaking changes to the\nBUILD language, command line or other behaviour. We try to minimise this where\npossible.\n\nWe're very happy to accept pull requests, feature requests, and bugs if it's\nnot working for you. We don't always have time for everything but Please is\nunder active development.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0078125,
          "content": "17.12.7\n"
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.4423828125,
          "content": "#!/usr/bin/env bash\n\nset -eu\n\nsource ./log.sh\n\n# PLZ_ARGS can be set to pass arguments to all plz invocations in this script.\nPLZ_ARGS=\"${PLZ_ARGS:-}\"\n\n# Now invoke Go to run Please to build itself.\nnotice \"Bootstrapping please...\"\ngo run -race src/please.go $PLZ_ARGS --log_file plz-out/log/bootstrap_build.log build //src:please\n\nif [ $# -gt 0 ] && [ \"$1\" == \"--skip_tests\" ]; then\n    notice \"Skipping tests... done.\"\n    exit 0\nfi\n\nexec ./test.sh $@"
        },
        {
          "name": "build_defs",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.pgo",
          "type": "blob",
          "size": 290.626953125,
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 5.296875,
          "content": "module github.com/thought-machine/please\n\nrequire (\n\tcloud.google.com/go/longrunning v0.5.5\n\tgithub.com/Masterminds/semver/v3 v3.2.1\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20210920135941-2c5829bbf927\n\tgithub.com/alessio/shellescape v1.4.2\n\tgithub.com/bazelbuild/remote-apis v0.0.0-20240409135018-1f36c310b28d\n\tgithub.com/bazelbuild/remote-apis-sdks v0.0.0-20221114180157-e62cf9b8696a\n\tgithub.com/cespare/xxhash/v2 v2.2.0\n\tgithub.com/coreos/go-semver v0.3.1\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/djherbis/atime v1.1.0\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7\n\tgithub.com/jstemmer/go-junit-report/v2 v2.1.0\n\tgithub.com/karrick/godirwalk v1.17.0\n\tgithub.com/manifoldco/promptui v0.9.0\n\tgithub.com/peterebden/go-cli-init/v5 v5.2.1\n\tgithub.com/peterebden/go-deferred-regex v1.1.0\n\tgithub.com/peterebden/go-sri v1.1.1\n\tgithub.com/peterebden/tools v0.0.0-20190805132753-b2a0db951d2a\n\tgithub.com/pkg/xattr v0.4.9\n\tgithub.com/please-build/buildtools v0.0.0-20240111140234-77ffe55926d9\n\tgithub.com/please-build/gcfg v1.7.0\n\tgithub.com/prometheus/client_golang v1.19.0\n\tgithub.com/prometheus/common v0.50.0\n\tgithub.com/shirou/gopsutil/v3 v3.24.2\n\tgithub.com/sigstore/sigstore v1.8.2\n\tgithub.com/sigstore/sigstore/pkg/signature/kms/gcp v1.8.2\n\tgithub.com/sourcegraph/go-diff v0.7.0\n\tgithub.com/sourcegraph/go-lsp v0.0.0-20240223163137-f80c5dd31dfd\n\tgithub.com/sourcegraph/jsonrpc2 v0.2.0\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/texttheater/golang-levenshtein v1.0.1\n\tgithub.com/thought-machine/go-flags v1.6.3\n\tgithub.com/ulikunitz/xz v0.5.11\n\tgithub.com/zeebo/blake3 v0.2.3\n\tgo.uber.org/automaxprocs v1.5.3\n\tgolang.org/x/exp v0.0.0-20240222234643-814bf88cf225\n\tgolang.org/x/net v0.25.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/term v0.27.0\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d\n\tgoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240304212257-790db918fca8\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240304212257-790db918fca8\n\tgoogle.golang.org/grpc v1.62.1\n\tgoogle.golang.org/protobuf v1.33.0\n\tgopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473\n)\n\nrequire (\n\tcloud.google.com/go/compute v1.25.0 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tcloud.google.com/go/iam v1.1.6 // indirect\n\tcloud.google.com/go/kms v1.15.7 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/chzyer/readline v1.5.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-ole/go-ole v1.3.0 // indirect\n\tgithub.com/golang/glog v1.2.0 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/go-containerregistry v0.19.0 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.2 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/jellydator/ttlcache/v3 v3.2.0 // indirect\n\tgithub.com/klauspost/compress v1.17.7 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/letsencrypt/boulder v0.0.0-20240306190618-9b05c38eb38a // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20240226150601-1dcf7310316a // indirect\n\tgithub.com/mostynb/zstdpool-syncpool v0.0.13 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/pborman/uuid v1.2.1 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 // indirect\n\tgithub.com/prometheus/client_model v0.6.0 // indirect\n\tgithub.com/prometheus/procfs v0.13.0 // indirect\n\tgithub.com/secure-systems-lab/go-securesystemslib v0.8.0 // indirect\n\tgithub.com/shoenig/go-m1cpu v0.1.6 // indirect\n\tgithub.com/titanous/rocacheck v0.0.0-20171023193734-afe73141d399 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.13 // indirect\n\tgithub.com/tklauser/numcpus v0.7.0 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect\n\tgo.opentelemetry.io/otel v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.24.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/oauth2 v0.18.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgoogle.golang.org/api v0.168.0 // indirect\n\tgoogle.golang.org/appengine v1.6.8 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240304212257-790db918fca8 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240304212257-790db918fca8 // indirect\n\tgopkg.in/go-jose/go-jose.v2 v2.6.3 // indirect\n\tgopkg.in/warnings.v0 v0.1.2 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\ngo 1.23\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 44.2353515625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.112.1 h1:uJSeirPke5UNZHIb4SxfZklVSiWWVqW4oXlETwZziwM=\ncloud.google.com/go v0.112.1/go.mod h1:+Vbu+Y1UU+I1rjmzeMOb/8RfkKJK2Gyxi1X6jJCZLo4=\ncloud.google.com/go/compute v1.25.0 h1:H1/4SqSUhjPFE7L5ddzHOfY2bCAvjwNRZPNl6Ni5oYU=\ncloud.google.com/go/compute v1.25.0/go.mod h1:GR7F0ZPZH8EhChlMo9FkLd7eUTwEymjqQagxzilIxIE=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/iam v1.1.6 h1:bEa06k05IO4f4uJonbB5iAgKTPpABy1ayxaIZV/GHVc=\ncloud.google.com/go/iam v1.1.6/go.mod h1:O0zxdPeGBoFdWW3HWmBxJsk0pfvNM/p/qa82rWOGTwI=\ncloud.google.com/go/kms v1.15.7 h1:7caV9K3yIxvlQPAcaFffhlT7d1qpxjB1wHBtjWa13SM=\ncloud.google.com/go/kms v1.15.7/go.mod h1:ub54lbsa6tDkUwnu4W7Yt1aAIFLnspgh0kPGToDukeI=\ncloud.google.com/go/longrunning v0.5.5 h1:GOE6pZFdSrTb4KAiKnXsJBtlE6mEyaW44oKyMILWnOg=\ncloud.google.com/go/longrunning v0.5.5/go.mod h1:WV2LAxD8/rg5Z1cNW6FJ/ZpX4E4VnDnoTk0yawPBB7s=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Masterminds/semver/v3 v3.2.1 h1:RN9w6+7QoMeJVGyfmbcgs28Br8cvmnucEXnY0rYXWg0=\ngithub.com/Masterminds/semver/v3 v3.2.1/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/ProtonMail/go-crypto v0.0.0-20210920135941-2c5829bbf927 h1:OSZDIq6u4iqaEjBZ8BmlEAwM4x8bRLHRWzzOkbv/Jvc=\ngithub.com/ProtonMail/go-crypto v0.0.0-20210920135941-2c5829bbf927/go.mod h1:z4/9nQmJSSwwds7ejkxaJwO37dru3geImFUdJlaLzQo=\ngithub.com/alessio/shellescape v1.4.2 h1:MHPfaU+ddJ0/bYWpgIeUnQUqKrlJ1S7BfEYPM4uEoM0=\ngithub.com/alessio/shellescape v1.4.2/go.mod h1:PZAiSCk0LJaZkiCSkPv8qIobYglO3FPpyFjDCtHLS30=\ngithub.com/bazelbuild/remote-apis v0.0.0-20240409135018-1f36c310b28d h1:0aFLY/13huh7hMwsxXXf2etOuS4GrdTk37aJEXYEsic=\ngithub.com/bazelbuild/remote-apis v0.0.0-20240409135018-1f36c310b28d/go.mod h1:ry8Y6CkQqCVcYsjPOlLXDX2iRVjOnjogdNwhvHmRcz8=\ngithub.com/bazelbuild/remote-apis-sdks v0.0.0-20221114180157-e62cf9b8696a h1:zIP0R2m8O2VgQlDlMYM0jGmJ+BPx4FQ6+ETRERaLMkM=\ngithub.com/bazelbuild/remote-apis-sdks v0.0.0-20221114180157-e62cf9b8696a/go.mod h1:p6PH8Kyjfm/hhbwC8ymX8SarB7CQTUiW6J0T/zbEKj8=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/logex v1.2.1 h1:XHDu3E6q+gdHgsdTPH6ImJMIp436vR6MPtH8gP05QzM=\ngithub.com/chzyer/logex v1.2.1/go.mod h1:JLbx6lG2kDbNRFnfkgvh4eRJRPX1QCoOIWomwysCBrQ=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/readline v1.5.1 h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=\ngithub.com/chzyer/readline v1.5.1/go.mod h1:Eh+b79XXUwfKfcPLepksvw2tcLE/Ct21YObkaSkeBlk=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/chzyer/test v1.0.0 h1:p3BQDXSxOhOG0P9z6/hGnII4LGiEPOYBhs8asl/fC04=\ngithub.com/chzyer/test v1.0.0/go.mod h1:2JlltgoNkt4TW/z9V/IzDdFaMTM2JPIi26O1pF38GC8=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/djherbis/atime v1.1.0 h1:rgwVbP/5by8BvvjBNrbh64Qz33idKT3pSnMSJsxhi0g=\ngithub.com/djherbis/atime v1.1.0/go.mod h1:28OF6Y8s3NQWwacXc5eZTsEsiMzp7LF8MbXE+XJPdBE=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=\ngithub.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-test/deep v1.1.0 h1:WOcxcdHcvdgThNXjw0t76K42FXTU7HpNQWHpA2HHNlg=\ngithub.com/go-test/deep v1.1.0/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.2.0 h1:uCdmnmatrKCgMBlM4rMuJZWOkPDqdbZPnrMXDY4gI68=\ngithub.com/golang/glog v1.2.0/go.mod h1:6AhwSGph0fcJtXVM/PEHPqZlFeoLxhs7/t5UDAwmO+w=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-containerregistry v0.19.0 h1:uIsMRBV7m/HDkDxE/nXMnv1q+lOOSPlQ/ywc5JbB8Ic=\ngithub.com/google/go-containerregistry v0.19.0/go.mod h1:u0qB2l7mvtWVR5kNcbFIhFY1hLbf8eeGapA+vbFDCtQ=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.2 h1:mhN09QQW1jEWeMF74zGR81R30z4VJzjZsfkUhuHF+DA=\ngithub.com/googleapis/gax-go/v2 v2.12.2/go.mod h1:61M8vcyyXR2kqKFxKrfA22jaA8JGF7Dc8App1U3H6jc=\ngithub.com/gorilla/websocket v1.4.1 h1:q7AeDBpnBk8AogcD4DSag/Ukw/KV+YhzLj2bP5HvKCM=\ngithub.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/jellydator/ttlcache/v3 v3.2.0 h1:6lqVJ8X3ZaUwvzENqPAobDsXNExfUJd61u++uW8a3LE=\ngithub.com/jellydator/ttlcache/v3 v3.2.0/go.mod h1:hi7MGFdMAwZna5n2tuvh63DvFLzVKySzCVW6+0gA2n4=\ngithub.com/jmhodges/clock v1.2.0 h1:eq4kys+NI0PLngzaHEe7AmPT90XMGIEySD1JfV1PDIs=\ngithub.com/jmhodges/clock v1.2.0/go.mod h1:qKjhA7x7u/lQpPB1XAqX1b1lCI/w3/fNuYpI/ZjLynI=\ngithub.com/jstemmer/go-junit-report/v2 v2.1.0 h1:X3+hPYlSczH9IMIpSC9CQSZA0L+BipYafciZUWHEmsc=\ngithub.com/jstemmer/go-junit-report/v2 v2.1.0/go.mod h1:mgHVr7VUo5Tn8OLVr1cKnLuEy0M92wdRntM99h7RkgQ=\ngithub.com/karrick/godirwalk v1.17.0 h1:b4kY7nqDdioR/6qnbHQyDvmA17u5G1cZ6J+CZXwSWoI=\ngithub.com/karrick/godirwalk v1.17.0/go.mod h1:j4mkqPuvaLI8mp1DroR3P6ad7cyYd4c1qeJ3RV7ULlk=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.7 h1:ehO88t2UGzQK66LMdE8tibEd1ErmzZjNEqWkjLAKQQg=\ngithub.com/klauspost/compress v1.17.7/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/klauspost/cpuid/v2 v2.0.12/go.mod h1:g2LTdtYhdyuGPqyWyv7qRAmj1WBqxuObKfj5c0PQa7c=\ngithub.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=\ngithub.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/letsencrypt/boulder v0.0.0-20240306190618-9b05c38eb38a h1:qkj20PbaRLzvzxFvuvgdMpLtHUi7P5/qiIEXZhFxNVU=\ngithub.com/letsencrypt/boulder v0.0.0-20240306190618-9b05c38eb38a/go.mod h1:qY5wBgmaPwKkhGd2gNWZcoJBe9c76gsHm4OTc/N12+g=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/lufia/plan9stats v0.0.0-20240226150601-1dcf7310316a h1:3Bm7EwfUQUvhNeKIkUct/gl9eod1TcXuj8stxvi/GoI=\ngithub.com/lufia/plan9stats v0.0.0-20240226150601-1dcf7310316a/go.mod h1:ilwx/Dta8jXAgpFYFvSWEMwxmbWXyiUHkd5FwyKhb5k=\ngithub.com/manifoldco/promptui v0.9.0 h1:3V4HzJk1TtXW1MTZMP7mdlwbBpIinw3HztaIlYthEiA=\ngithub.com/manifoldco/promptui v0.9.0/go.mod h1:ka04sppxSGFAtxX0qhlYQjISsg9mR4GWtQEhdbn6Pgg=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mostynb/zstdpool-syncpool v0.0.13 h1:AIzAvQ9hNum4Fh5jYXyfZTd2aDi1leq7grKDkVZX4+s=\ngithub.com/mostynb/zstdpool-syncpool v0.0.13/go.mod h1:pbt8qOdq6wX5jrUsRI9UmBvAnjToEgVQC3H1pwJwktM=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/pborman/uuid v1.2.1 h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=\ngithub.com/pborman/uuid v1.2.1/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/peterebden/go-cli-init/v5 v5.2.1 h1:o+7EjS/PiYDvFUQRQVXJRjinmUzDjqcea3nzpjPGj68=\ngithub.com/peterebden/go-cli-init/v5 v5.2.1/go.mod h1:0eBDoCJjj3BWyEtidFcP0TlD14cRtOtLCrTG/OVPB74=\ngithub.com/peterebden/go-deferred-regex v1.1.0 h1:XNpUuRDU7iU59Toy+OJp9LUvsun5i3kEbe3c73oyCZg=\ngithub.com/peterebden/go-deferred-regex v1.1.0/go.mod h1:EhIu4zsN+60671cx29rzxPSIEnDd2vOia4RFSOaYpRI=\ngithub.com/peterebden/go-sri v1.1.1 h1:KK8yZ5/NX8YzWUY9QvhrP220QsvEKANLLAgvw35AkyU=\ngithub.com/peterebden/go-sri v1.1.1/go.mod h1:KIRxtog35NfDWec5LV/iBqqfOEPcMpePZLc7EPE6goQ=\ngithub.com/peterebden/tools v0.0.0-20190805132753-b2a0db951d2a h1:R4xz7BkSIQOS5CFmaadk2gwwOzy/u2Jvnimf1NHD2LY=\ngithub.com/peterebden/tools v0.0.0-20190805132753-b2a0db951d2a/go.mod h1:rOzwC5Mel4JH+jDIo1rSQc21HWzWSvje4R5QnHPukvY=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/xattr v0.4.9 h1:5883YPCtkSd8LFbs13nXplj9g9tlrwoJRjgpgMu1/fE=\ngithub.com/pkg/xattr v0.4.9/go.mod h1:di8WF84zAKk8jzR1UBTEWh9AUlIZZ7M/JNt8e9B6ktU=\ngithub.com/please-build/buildtools v0.0.0-20240111140234-77ffe55926d9 h1:g91wUcof+wBzmt0hPy9/mYyCvzUDXoj95KV1OT/F1UE=\ngithub.com/please-build/buildtools v0.0.0-20240111140234-77ffe55926d9/go.mod h1:vEiPuY8tSDDAeN/vtAXZVM30f+osH2lwqqdLiRWeFc4=\ngithub.com/please-build/gcfg v1.7.0 h1:xaluDUfhgqnxLECBdKhPSvuF/rqgVNOzNwH5sPmVGtE=\ngithub.com/please-build/gcfg v1.7.0/go.mod h1:qwx/xbr5eBETgfBLP9eXDgXQ5VzLQM5dIjcseh3pkVk=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 h1:o4JXh1EVt9k/+g42oCprj/FisM4qX9L3sZB3upGN2ZU=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v1.19.0 h1:ygXvpU1AoN1MhdzckN+PyD9QJOSD4x7kmXYlnfbA6JU=\ngithub.com/prometheus/client_golang v1.19.0/go.mod h1:ZRM9uEAypZakd+q/x7+gmsvXdURP+DABIEIjnmDdp+k=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.0 h1:k1v3CzpSRUTrKMppY35TLwPvxHqBu0bYgxZzqGIgaos=\ngithub.com/prometheus/client_model v0.6.0/go.mod h1:NTQHnmxFpouOD0DpvP4XujX3CdOAGQPoaGhyTchlyt8=\ngithub.com/prometheus/common v0.50.0 h1:YSZE6aa9+luNa2da6/Tik0q0A5AbR+U003TItK57CPQ=\ngithub.com/prometheus/common v0.50.0/go.mod h1:wHFBCEVWVmHMUpg7pYcOm2QUR/ocQdYSJVQJKnHc3xQ=\ngithub.com/prometheus/procfs v0.13.0 h1:GqzLlQyfsPbaEHaQkO7tbDlriv/4o5Hudv6OXHGKX7o=\ngithub.com/prometheus/procfs v0.13.0/go.mod h1:cd4PFCR54QLnGKPaKGA6l+cfuNXtht43ZKY6tow0Y1g=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/secure-systems-lab/go-securesystemslib v0.8.0 h1:mr5An6X45Kb2nddcFlbmfHkLguCE9laoZCUzEEpIZXA=\ngithub.com/secure-systems-lab/go-securesystemslib v0.8.0/go.mod h1:UH2VZVuJfCYR8WgMlCU1uFsOUU+KeyrTWcSS73NBOzU=\ngithub.com/shirou/gopsutil/v3 v3.24.2 h1:kcR0erMbLg5/3LcInpw0X/rrPSqq4CDPyI6A6ZRC18Y=\ngithub.com/shirou/gopsutil/v3 v3.24.2/go.mod h1:tSg/594BcA+8UdQU2XcW803GWYgdtauFFPgJCJKZlVk=\ngithub.com/shoenig/go-m1cpu v0.1.6 h1:nxdKQNcEB6vzgA2E2bvzKIYRuNj7XNJ4S/aRSwKzFtM=\ngithub.com/shoenig/go-m1cpu v0.1.6/go.mod h1:1JJMcUBvfNwpq05QDQVAnx3gUHr9IYF7GNg9SUEw2VQ=\ngithub.com/shoenig/test v0.6.4 h1:kVTaSd7WLz5WZ2IaoM0RSzRsUD+m8wRR+5qvntpn4LU=\ngithub.com/shoenig/test v0.6.4/go.mod h1:byHiCGXqrVaflBLAMq/srcZIHynQPQgeyvkvXnjqq0k=\ngithub.com/shurcooL/go v0.0.0-20180423040247-9e1955d9fb6e/go.mod h1:TDJrrUr11Vxrven61rcy3hJMUqaf/CLWYhHNPmT14Lk=\ngithub.com/shurcooL/go-goon v0.0.0-20170922171312-37c2f522c041/go.mod h1:N5mDOmsrJOB+vfqUK+7DmDyjhSLIIBnXo9lvZJj3MWQ=\ngithub.com/sigstore/sigstore v1.8.2 h1:0Ttjcn3V0fVQXlYq7+oHaaHkGFIt3ywm7SF4JTU/l8c=\ngithub.com/sigstore/sigstore v1.8.2/go.mod h1:CHVcSyknCcjI4K2ZhS1SI28r0tcQyBlwtALG536x1DY=\ngithub.com/sigstore/sigstore/pkg/signature/kms/gcp v1.8.2 h1:aX6hLH5v3JdOQJJ6+uCMmeDjcwyfQMLmXKJVl6HtzAg=\ngithub.com/sigstore/sigstore/pkg/signature/kms/gcp v1.8.2/go.mod h1:OEFPub6XKsX6Fl/PpeIpQTsukG3I0CFWb9saHINV72U=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sourcegraph/go-diff v0.7.0 h1:9uLlrd5T46OXs5qpp8L/MTltk0zikUGi0sNNyCpA8G0=\ngithub.com/sourcegraph/go-diff v0.7.0/go.mod h1:iBszgVvyxdc8SFZ7gm69go2KDdt3ag071iBaWPF6cjs=\ngithub.com/sourcegraph/go-lsp v0.0.0-20240223163137-f80c5dd31dfd h1:Dq5WSzWsP1TbVi10zPWBI5LKEBDg4Y1OhWEph1wr5WQ=\ngithub.com/sourcegraph/go-lsp v0.0.0-20240223163137-f80c5dd31dfd/go.mod h1:SULmZY7YNBsvNiQbrb/BEDdEJ84TGnfyUQxaHt8t8rY=\ngithub.com/sourcegraph/jsonrpc2 v0.2.0 h1:KjN/dC4fP6aN9030MZCJs9WQbTOjWHhrtKVpzzSrr/U=\ngithub.com/sourcegraph/jsonrpc2 v0.2.0/go.mod h1:ZafdZgk/axhT1cvZAPOhw+95nz2I/Ra5qMlU4gTRwIo=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/texttheater/golang-levenshtein v1.0.1 h1:+cRNoVrfiwufQPhoMzB6N0Yf/Mqajr6t1lOv8GyGE2U=\ngithub.com/texttheater/golang-levenshtein v1.0.1/go.mod h1:PYAKrbF5sAiq9wd+H82hs7gNaen0CplQ9uvm6+enD/8=\ngithub.com/thought-machine/go-flags v1.6.3 h1:AGA+iy7EP7ia/e46jzrmJV3oJhznESq7kNEILunmP8w=\ngithub.com/thought-machine/go-flags v1.6.3/go.mod h1:+r2g8uGwgGM7IGZzmMS97mKBFLDbW6vgFO1jxp0rDmg=\ngithub.com/titanous/rocacheck v0.0.0-20171023193734-afe73141d399 h1:e/5i7d4oYZ+C1wj2THlRK+oAhjeS/TRQwMfkIuet3w0=\ngithub.com/titanous/rocacheck v0.0.0-20171023193734-afe73141d399/go.mod h1:LdwHTNJT99C5fTAzDz0ud328OgXz+gierycbcIx2fRs=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/go-sysconf v0.3.13 h1:GBUpcahXSpR2xN01jhkNAbTLRk2Yzgggk8IM08lq3r4=\ngithub.com/tklauser/go-sysconf v0.3.13/go.mod h1:zwleP4Q4OehZHGn4CYZDipCgg9usW5IJePewFCGVEa0=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/tklauser/numcpus v0.7.0 h1:yjuerZP127QG9m5Zh/mSO4wqurYil27tHrqwRoRjpr4=\ngithub.com/tklauser/numcpus v0.7.0/go.mod h1:bb6dMVcj8A42tSE7i32fsIUCbQNllK5iDguyOZRUzAY=\ngithub.com/ulikunitz/xz v0.5.11 h1:kpFauv27b6ynzBNT/Xy+1k+fK4WswhN/6PN5WhFAGw8=\ngithub.com/ulikunitz/xz v0.5.11/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngithub.com/zeebo/assert v1.1.0 h1:hU1L1vLTHsnO8x8c9KAR5GmM5QscxHg5RNU5z5qbUWY=\ngithub.com/zeebo/assert v1.1.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/blake3 v0.2.3 h1:TFoLXsjeXqRNFxSbk35Dk4YtszE/MQQGK10BH4ptoTg=\ngithub.com/zeebo/blake3 v0.2.3/go.mod h1:mjJjZpnsyIVtVgTOSpJ9vmRE4wgDeyt2HU3qXvvKCaQ=\ngithub.com/zeebo/pcg v1.0.1 h1:lyqfGeWiv4ahac6ttHs+I5hwtH/+1mrhlCtVNQM2kHo=\ngithub.com/zeebo/pcg v1.0.1/go.mod h1:09F0S9iiKrwn9rlI5yjLkmrug154/YRW6KnnXVDM/l4=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=\ngo.opentelemetry.io/otel v1.24.0 h1:0LAOdjNmQeSTzGBzduGe/rU4tZhMwL5rWgtp9Ku5Jfo=\ngo.opentelemetry.io/otel v1.24.0/go.mod h1:W7b9Ozg4nkF5tWI5zsXkaKKDjdVjpD4oAt9Qi/MArHo=\ngo.opentelemetry.io/otel/metric v1.24.0 h1:6EhoGWWK28x1fbpA4tYTOWBkPefTDQnb8WSGXlc88kI=\ngo.opentelemetry.io/otel/metric v1.24.0/go.mod h1:VYhLe1rFfxuTXLgj4CBiyz+9WYBA8pNGJgDcSFRKBco=\ngo.opentelemetry.io/otel/sdk v1.22.0 h1:6coWHw9xw7EfClIC/+O31R8IY3/+EiRFHevmHafB2Gw=\ngo.opentelemetry.io/otel/sdk v1.22.0/go.mod h1:iu7luyVGYovrRpe2fmj3CVKouQNdTOkxtLzPvPz1DOc=\ngo.opentelemetry.io/otel/trace v1.24.0 h1:CsKnnL4dUAr/0llH9FKuc698G04IrpWV0MQA/Y1YELI=\ngo.opentelemetry.io/otel/trace v1.24.0/go.mod h1:HPc3Xr/cOApsBI154IU0OI0HJexz+aw5uPdbs3UCjNU=\ngo.starlark.net v0.0.0-20210223155950-e043a3d3c984/go.mod h1:t3mmBBPzAVvK0L0n1drDmrQsJ8FoIx4INCqVMTr/Zo0=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/automaxprocs v1.5.3 h1:kWazyxZUrS3Gs4qUpbwo5kEIMGe/DAvi5Z4tl2NW4j8=\ngo.uber.org/automaxprocs v1.5.3/go.mod h1:eRbA25aqJrxAbsLO0xy5jVwPt7FQnRgjW+efnwa1WM0=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.2.1 h1:NBol2c7O1ZokfZ0LEU9K6Whx/KnwvepVetCUhtKja4A=\ngo.uber.org/goleak v1.2.1/go.mod h1:qlT2yGI9QafXHhZZLxlSuNsMw3FFLxBr+tBRlmO1xH4=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240222234643-814bf88cf225 h1:LfspQV/FYTatPTr/3HzIcmiUFH7PGP+OQ6mgDYo3yuQ=\ngolang.org/x/exp v0.0.0-20240222234643-814bf88cf225/go.mod h1:CxmFvTBINI24O/j8iY7H1xHzx2i4OsyguNBmN/uPtqc=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210505214959-0714010a04ed/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.3.0/go.mod h1:MBQ8lrhLObU/6UmLb4fmbmk5OcyYmqtbGd/9yIeKjEE=\ngolang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=\ngolang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201207223542-d4d67f95c62d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210507014357-30e306a8bba5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220408201424-a24fb2fb8a0f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.3.0/go.mod h1:q750SLmJuPmVoN1blW3UFBPREJfb1KmY3vwxfr+nFDA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.5.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.4.0/go.mod h1:UE5sM2OK9E/d67R0ANs2xJizIymRP5gJU295PvKXxjQ=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.168.0 h1:MBRe+Ki4mMN93jhDDbpuRLjRddooArz4FeSObvUMmjY=\ngoogle.golang.org/api v0.168.0/go.mod h1:gpNOiMA2tZ4mf5R9Iwf4rK/Dcz0fbdIgWYWVoxmsyLg=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20210506142907-4a47615972c2/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=\ngoogle.golang.org/genproto v0.0.0-20240304212257-790db918fca8 h1:Fe8QycXyEd9mJgnwB9kmw00WgB43eQ/xYO5C6gceybQ=\ngoogle.golang.org/genproto v0.0.0-20240304212257-790db918fca8/go.mod h1:yA7a1bW1kwl459Ol0m0lV4hLTfrL/7Bkk4Mj2Ir1mWI=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240304212257-790db918fca8 h1:8eadJkXbwDEMNwcB5O0s5Y5eCfyuCLdvaiOIaGTrWmQ=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240304212257-790db918fca8/go.mod h1:O1cOfN1Cy6QEYr7VxtjOyP5AdAuR0aJ/MYZaaof623Y=\ngoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240304212257-790db918fca8 h1:1SRW3ebGxrCZhzTncLyoEKW6rVzQZxA5T32doeA6IjY=\ngoogle.golang.org/genproto/googleapis/bytestream v0.0.0-20240304212257-790db918fca8/go.mod h1:vh/N7795ftP0AkN1w8XKqN4w1OdUKXW5Eummda+ofv8=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240304212257-790db918fca8 h1:IR+hp6ypxjH24bkMfEJ0yHR21+gwPWdV+/IBrPQyn3k=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240304212257-790db918fca8/go.mod h1:UCOku4NytXMJuLQE5VuqA5lX3PcHCBo8pxNyvkf4xBs=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.62.1 h1:B4n+nfKzOICUXMgyrNd19h/I9oH0L1pizfk1d4zSgTk=\ngoogle.golang.org/grpc v1.62.1/go.mod h1:IWTG0VlJLCh1SkC58F7np9ka9mx/WNkjl4PGJaiq+QE=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/go-jose/go-jose.v2 v2.6.3 h1:nt80fvSDlhKWQgSWyHyy5CfmlQr+asih51R8PTWNKKs=\ngopkg.in/go-jose/go-jose.v2 v2.6.3/go.mod h1:zzZDPkNNw/c9IE7Z9jr11mBZQhKQTMzoEEIoEdZlFBI=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473 h1:6D+BvnJ/j6e222UW8s2qTSe3wGBtvo0MbVQG/c5k8RE=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473/go.mod h1:N1eN2tsCx0Ydtgjl4cqmbRCsY4/+z4cYDeqwZTk6zog=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 1.037109375,
          "content": "#!/usr/bin/env bash\n#\n# Installs Please and its relevant binaries into ~/.please.\n# You must run ./bootstrap.sh before running this.\n\nset -eu\n\nif [ ! -f plz-out/bin/src/please ]; then\n    echo \"It looks like Please hasn't been built yet.\"\n    echo \"Try running ./bootstrap.sh first.\"\n    exit 1\nfi\n\nDEST=\"${HOME}/.please\"\n\n# Try to read the local config, if it exists.\nif [ -f .plzconfig.local ]; then\n    if grep -i '^location' .plzconfig.local > /dev/null; then\n        DEST=\"`grep -i '^location' .plzconfig.local | cut -d '=' -f 2 | tr -d ' '`\"\n    fi\nfi\n\n\nmkdir -p ${DEST}\nOUTPUTS=\"`plz-out/bin/src/please query outputs //package:installed_files`\"\nfor OUTPUT in $OUTPUTS; do\n    TARGET=\"${DEST}/$(basename $OUTPUT)\"\n    rm -f \"$TARGET\"  # Important so we don't write through symlinks.\n    cp \"$OUTPUT\" \"$TARGET\"\n    chmod 0775 \"$TARGET\"\ndone\nln -sf \"${DEST}/please\" \"${DEST}/plz\"\n\necho \"Please installed into $DEST\"\n\nif ! hash plz 2>/dev/null; then\n    echo \"You might want to run ln -s ~/.please/please /usr/local/bin/plz or add ~/.please to your PATH.\"\nfi\n"
        },
        {
          "name": "log.sh",
          "type": "blob",
          "size": 0.13671875,
          "content": "#!/usr/bin/env bash\n\nset -eu\n\nfunction notice {\n    >&2 echo -e \"\\033[32m$1\\033[0m\"\n}\nfunction warn {\n    >&2 echo -e \"\\033[33m$1\\033[0m\"\n}\n"
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "please-servers-token.txt",
          "type": "blob",
          "size": 0.0322265625,
          "content": "ovES3eR7-nBs5pgCpyrfY0kzepyrKK7w\n"
        },
        {
          "name": "pleasew",
          "type": "blob",
          "size": 4.4443359375,
          "content": "#!/bin/sh\n\nset -e\nset -u\n\nESC=\"$(printf '\\033')\"\n\nif [ \"${NOCOLOR+x}\" != 'x' ] || [ \"${NO_COLOR+x}\" != 'x' ]; then\n    RED=\"${ESC}[31m\"\n    GREEN=\"${ESC}[32m\"\n    YELLOW=\"${ESC}[33m\"\n    RESET=\"${ESC}[0m\"\nelse\n    RED=''\n    GREEN=''\n    YELLOW=''\n    RESET=''\nfi\n\n\nDEFAULT_URL_BASE='https://get.please.build'\n\nOS=\"$(uname)\"\n\nif [ \"${OS}\" = 'Darwin' ]; then\n    # switch between mac amd64/arm64\n    ARCH=\"$(uname -m)\"\nelse\n    # default to amd64 on other operating systems\n    # because we only build intel binaries\n    ARCH='amd64'\nfi\n\ncase \"${ARCH}\" in\n    aarch64_be|aarch64|armv8b|armv8l) ARCH='arm64' ;;\n    x86_64) ARCH='amd64' ;;\nesac\n\nhas_command () {\n    command -v \"${1}\" > /dev/null 2>&1\n}\n\nget_profile () {\n    while [ \"${#}\" -gt 0 ]\n    do\n        case \"${1}\" in\n            --profile=*) echo \"${1#*=}\"; return;;\n            --profile) echo \"${2}\"; return;;\n            *) shift;;\n        esac\n    done\n}\n\n# Check `PLZ_CONFIG_PROFILE` or fall back to arguments for a profile.\nPROFILE=\"${PLZ_CONFIG_PROFILE:-$(get_profile \"${@}\")}\"\n\n# Config files on order of precedence high to low.\nCONFIGS=\"$(cat <<- EOS\n\t.plzconfig.local\n\t${PROFILE:+.plzconfig.${PROFILE}}\n\t.plzconfig_${OS}_${ARCH}\n\t.plzconfig\n\t${HOME}/.config/please/plzconfig\n\t/etc/please/plzconfig\nEOS\n)\"\n\nread_config() {\n    # Disable globbing to ensure word-splitting is safe.\n    set -f\n\n    old_ifs=\"${IFS}\"\n    search_term=\"${1}\"\n\n    IFS='\n'\n\n    # This is intended, we *do* want word-splitting here.\n    # shellcheck disable=2086\n    set -- ${CONFIGS}\n\n    grep -i \"${search_term}\" \"${@}\" 2> /dev/null | head -n 1\n\n    IFS=\"${old_ifs}\"\n    set +f\n}\n\n# We might already have it downloaded...\nLOCATION=\"$(read_config '^\\s*location' | cut -d '=' -f 2 | tr -d ' ')\"\n\nif [ \"${LOCATION:+x}\" != 'x' ]; then\n    if [ \"${HOME:+x}\" != 'x' ]; then\n        # shellcheck disable=2016\n        printf >&2 '%b$HOME not set, not sure where to look for Please.%b\\n' \"${RED}\" \"${RESET}\"\n        exit 1\n    fi\n\n    LOCATION=\"${HOME}/.please\"\nelse\n    # It can contain a literal ~, need to explicitly handle that.\n    LOCATION=\"$(echo \"${LOCATION}\" | sed \"s|~|${HOME}|\")\"\nfi\n\n# If this exists at any version, let it handle any update.\nTARGET=\"${LOCATION}/please\"\n\nif [ -f \"${TARGET}\" ]; then\n    # shellcheck disable=2086\n    exec \"${TARGET}\" ${PLZ_ARGS:-} \"${@}\"\nfi\n\nURL_BASE=\"$(read_config '^\\s*downloadlocation' | cut -d '=' -f 2 | tr -d ' ')\"\n\nif [ \"${URL_BASE:+x}\" != 'x' ]; then\n    URL_BASE=\"${DEFAULT_URL_BASE}\"\nfi\n\nURL_BASE=\"${URL_BASE%/}\"\n\nVERSION=\"$(read_config '^\\s*version[^a-z]')\"\nVERSION=\"${VERSION#*=}\"                    # Strip until after first =\nVERSION=\"$(echo \"${VERSION}\" | tr -d ' ')\" # Remove all spaces\nVERSION=\"${VERSION#>=}\"                    # Strip any initial >=\n\nif has_command curl; then\n    TRANSFER_TOOL='curl'\n    TRANSFER_SILENT_OPTS='-fsSL'\n    TRANSFER_PROGRESS_OPTS='-fSL'\nelif has_command wget; then\n    TRANSFER_TOOL='wget'\n    TRANSFER_SILENT_OPTS='-qO-'\n    TRANSFER_PROGRESS_OPTS='-O-'\nelse\n    printf >&2 '%bUnable to find a command for network operations%b\\n' \"${RED}\" \"${RESET}\"\n    printf >&2 'Please install either curl or wget\\n'\n    exit 1\nfi\n\nif [ \"${VERSION:+x}\" != 'x' ]; then\n    printf >&2 \"%bCan't determine version, will use latest.%b\\n\" \"${YELLOW}\" \"${RESET}\"\n    VERSION=$(${TRANSFER_TOOL} ${TRANSFER_SILENT_OPTS} \"${URL_BASE}\"/latest_version)\nfi\n\n# Find the os / arch to download. You can do this quite nicely with go env\n# but we use this script on machines that don't necessarily have Go itself.\nif [ \"${OS}\" = 'Linux' ]; then\n    GOOS='linux'\nelif [ \"${OS}\" = 'Darwin' ]; then\n    GOOS='darwin'\nelif [ \"${OS}\" = 'FreeBSD' ]; then\n    GOOS='freebsd'\nelse\n    printf >&2 '%bUnknown operating system %s%b\\n' \"${RED}\" \"${OS}\" \"${RESET}\"\n    exit 1\nfi\n\nPLEASE_URL=\"${URL_BASE}/${GOOS}_${ARCH}/${VERSION}/please_${VERSION}.tar.xz\"\nDIR=\"${LOCATION}/${VERSION}\"\n\n# Potentially we could reuse this but it's easier not to really.\nif [ ! -d \"${DIR}\" ]; then\n    rm -Rf \"${DIR}\"\nfi\n\nprintf >&2 '%bDownloading Please %s to %s...%b\\n' \"${GREEN}\" \"${VERSION}\" \"${DIR}\" \"${RESET}\"\nmkdir -p \"${DIR}\"\n${TRANSFER_TOOL} ${TRANSFER_PROGRESS_OPTS} \"${PLEASE_URL}\" | tar -xJpf- --strip-components=1 -C \"${DIR}\"\nif [ $? -ne 0 ]; then\n    printf >&2 '%bFailed to download Please%b\\n' \"${RED}\" \"${RESET}\"\n    exit 1\nfi\n\n# Link it all back up a dir\nfor x in \"${DIR}\"/*; do\n    ln -sf \"${x}\" \"${LOCATION}\"\ndone\n\nprintf >&2 '%bShould be good to go now, running plz...%b\\n' \"${GREEN}\" \"${RESET}\"\n# shellcheck disable=2086\nexec \"${TARGET}\" ${PLZ_ARGS:-} \"${@}\"\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "rules",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 1.75390625,
          "content": "#!/usr/bin/env bash\n\nset -eu\n\nsource ./log.sh\n\n# PLZ_ARGS can be set to pass arguments to all plz invocations in this script.\nPLZ_ARGS=\"${PLZ_ARGS:-}\"\n\n# check_path_for_excludes will check the Please path for toolchains and print the relevant exclude args\ncheck_path_for_excludes() {\n  # Set the path to match the please path\n  PATH=/usr/local/bin:/usr/bin:/bin\n\n  EXCLUDES=\"\"\n\n  if ! hash python3 2>/dev/null ; then\n      warn \"python3 not found, excluding python3 tests\"\n      EXCLUDES=\"${EXCLUDES} --exclude=py3 --exclude python3\"\n  fi\n  if ! hash xz 2>/dev/null ; then\n      warn \"xz not found, excluding update tests\"\n      EXCLUDES=\"${EXCLUDES} --exclude=xz\"\n  fi\n  GCCVER=\"`cc -dumpversion`\"\n  if [ ! -d \"/usr/lib/gcc/x86_64-linux-gnu/${GCCVER%.*.*}/32\" ] && [ ! -d \"/usr/lib/gcc/x86_64-pc-linux-gnu/$GCCVER/32\" ]; then\n      warn \"32-bit gcc libraries not found, excluding cross-compile tests\"\n      EXCLUDES=\"${EXCLUDES} --exclude=x86\"\n  fi\n\n  echo $EXCLUDES\n}\n\n# Run the tests to make sure they still work\nnotice \"Running tests...\"\n\neval `go env`\n\n# Run the set of tests that will work on this machine. There are a bunch of tests in this\n# repo that are optional and exercise specific rules, and require extra dependencies.\nEXCLUDES=$(check_path_for_excludes)\n\nplz-out/bin/src/please $PLZ_ARGS ${PLZ_COVER:-test} $EXCLUDES --exclude=e2e --log_file plz-out/log/test_build.log --log_file_level 4 --trace_file plz-out/log/trace.json $@\n\n# We run the end-to-end tests separately to ensure things don't fight with one another; they are\n# finicky about some things due to running plz recursively and disabling the lock.\nnotice \"Running end-to-end tests...\"\nplz-out/bin/src/please $PLZ_ARGS ${PLZ_COVER:-test} $EXCLUDES --include=e2e --log_file plz-out/log/e2e_build.log --log_file_level 4 $@\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}