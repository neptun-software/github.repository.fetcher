{
  "metadata": {
    "timestamp": 1736567224075,
    "page": 819,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coreos/fleet",
      "stars": 2419,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "bin/\ncoverage/\ngopath/\n*.swp\nfleet.conf\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2177734375,
          "content": "language: go\nmatrix:\n  include:\n    - go: 1.5.x\n      env: GO15VENDOREXPERIMENT=1\n    - go: 1.6.x\n    - go: 1.7.x\n    - go: tip\n  allow_failures:\n    - go: tip\n\nscript:\n - ./test\n\nnotifications:\n  email: false\n\nsudo: false\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.162109375,
          "content": "fleet is no longer developed or maintained by CoreOS. If you are interested in the future of the project and taking over stewardship, please contact fleet@coreos.com\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.388671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.212890625,
          "content": "FROM alpine:latest\n\nADD fleetd /usr/local/bin/\nADD fleetctl /usr/local/bin/\n\nARG FLEET_IMG_VER\nENV FLEET_IMG_VER ${FLEET_IMG_VER:-v0.13}\nRUN echo $FLEET_IMG_VER\n\n# Define default command.\nCMD [\"/usr/local/bin/fleetd\"]\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.162109375,
          "content": "fleet is no longer developed or maintained by CoreOS. If you are interested in the future of the project and taking over stewardship, please contact fleet@coreos.com\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.12890625,
          "content": "CoreOS Project\nCopyright 2014 The fleet Authors\n\nThis product includes software developed at CoreOS, Inc.\n(http://www.coreos.com/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.59765625,
          "content": "## <img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"><img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"><img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"> Deprecation warning <img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"><img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"><img src=\"Documentation/achtung.png\" alt=\"WARNING\" width=\"30\" height=\"30\"><a name=\"deprecation-warning\"></a>\nfleet is no longer developed or maintained by CoreOS. After February 1, 2018, a fleet container image will continue to be available from the CoreOS Quay registry, but will not be shipped as part of Container Linux. CoreOS instead [recommends Kubernetes for all clustering needs](https://coreos.com/blog/migrating-from-fleet-to-kubernetes.html).\n\nThe project exists here for historical reference. If you are interested in the future of the project and taking over stewardship, please contact fleet@coreos.com\n\n# fleet - a distributed init system\n\n[![Build Status](https://travis-ci.org/coreos/fleet.png?branch=master)](https://travis-ci.org/coreos/fleet)\n[![Build Status](https://semaphoreci.com/api/v1/coreos/fleet/branches/master/badge.svg)](https://semaphoreci.com/coreos/fleet)\n\nfleet ties together [systemd][coreos-systemd] and [etcd][etcd] into a simple distributed init system. Think of it as an extension of systemd that operates at the cluster level instead of the machine level.\n\n**This project is quite low-level, and is designed as a foundation for higher order orchestration.** fleet is a cluster-wide elaboration on systemd units, and is not a container manager or orchestration system. fleet supports basic scheduling of systemd units across nodes in a cluster. Those looking for more complex scheduling requirements or a first-class container orchestration system should check out [Kubernetes][kubernetes]. The [fleet and kubernetes comparison table][fleet-vs-k8s] has more information about the two systems.\n\n## Current status\n\nThe fleet project is [no longer maintained](#deprecation-warning).\n\nAs of v1.0.0, fleet has seen production use for some time and is largely considered stable.\nHowever, there are [various known and unresolved issues](https://github.com/coreos/fleet/issues), including [scalability limitations][fleet-scaling] with its architecture.\nAs such, it is not recommended to run fleet clusters larger than 100 nodes or with more than 1000 services.\n\n## Using fleet\n\nLaunching a unit with fleet is as simple as running `fleetctl start`:\n\n```sh\n$ fleetctl start examples/hello.service\nUnit hello.service launched on 113f16a7.../172.17.8.103\n```\n\nThe `fleetctl start` command waits for the unit to get scheduled and actually start somewhere in the cluster.\n`fleetctl list-unit-files` tells you the desired state of your units and where they are currently scheduled:\n\n```sh\n$ fleetctl list-unit-files\nUNIT            HASH     DSTATE    STATE     TMACHINE\nhello.service   e55c0ae  launched  launched  113f16a7.../172.17.8.103\n```\n\n`fleetctl list-units` exposes the systemd state for each unit in your fleet cluster:\n\n```sh\n$ fleetctl list-units\nUNIT            MACHINE                    ACTIVE   SUB\nhello.service   113f16a7.../172.17.8.103   active   running\n```\n\n## Supported Deployment Patterns\n\nfleet is not intended to be an all-purpose orchestration system, and as such supports only a few simple deployment patterns:\n\n* Deploy a single unit anywhere on the cluster\n* Deploy a unit globally everywhere in the cluster\n* Automatic rescheduling of units on machine failure\n* Ensure that units are deployed together on the same machine\n* Forbid specific units from colocation on the same machine (anti-affinity)\n* Deploy units to machines only with specific metadata\n\nThese patterns are all defined using [custom systemd unit options][unit-files].\n\n## Getting Started\n\nBefore you can deploy units, fleet must be [deployed and configured][deploy-and-configure] on each host in your cluster. (If you are running CoreOS, fleet is already installed.)\n\nAfter you have machines configured (check `fleetctl list-machines`), get to work with the [client][using-the-client.md].\n\n### Building\n\nfleet must be built with Go 1.5+ on a Linux machine. Simply run `./build` and then copy the binaries out of `bin/` directory onto each of your machines. The tests can similarly be run by simply invoking `./test`.\n\nIf you're on a machine without Go 1.5+ but you have Docker installed, run `./build-docker` to compile the binaries instead.\n\n## Project Details\n\n### API\n\nThe fleet API uses JSON over HTTP to manage units in a fleet cluster.\nSee the [API documentation][api-doc] for more information.\n\n### Release Notes\n\nSee the [releases tab][releases] for more information on each release.\n\n### License\n\nfleet is released under the Apache 2.0 license. See the [LICENSE][license] file for details.\n\nSpecific components of fleet use code derivative from software distributed under other licenses; in those cases the appropriate licenses are stipulated alongside the code.\n\n[api-doc]: Documentation/api-v1.md\n[contributing]: CONTRIBUTING.md\n[coreos-systemd]: https://github.com/coreos/docs/blob/master/os/getting-started-with-systemd.md\n[deploy-and-configure]: Documentation/deployment-and-configuration.md\n[etcd]: https://github.com/coreos/etcd\n[fleet-scaling]: Documentation/fleet-scaling.md\n[fleet-vs-k8s]: Documentation/fleet-k8s-compared.md\n[kubernetes]: http://kubernetes.io\n[license]: LICENSE\n[maintainers]: MAINTAINERS\n[releases]: https://github.com/coreos/fleet/releases\n[unit-files]: Documentation/unit-files-and-scheduling.md#fleet-specific-options\n[using-the-client.md]: Documentation/using-the-client.md\n"
        },
        {
          "name": "agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "blob",
          "size": 0.7099609375,
          "content": "#!/bin/bash -e\n\nCDIR=$(cd `dirname \"$0\"` && pwd)\ncd \"$CDIR\"\n\nORG_PATH=\"github.com/coreos\"\nREPO_PATH=\"${ORG_PATH}/fleet\"\n\nif [ ! $(command -v go 2>/dev/null) ]; then\n  echo \"build: failed to locate Go binaries.\"\n  exit 1\nfi\n\nsource build-env\n\nif [ ! -h gopath/src/${REPO_PATH} ]; then\n  mkdir -p gopath/src/${ORG_PATH}\n  ln -s ../../../.. gopath/src/${REPO_PATH} || exit 255\nfi\n\nif [ ${GOOS} = \"linux\" ]; then\n  echo \"Building fleetd...\"\n  CGO_ENABLED=0 go build -o bin/fleetd -a -installsuffix netgo -ldflags \"${GLDFLAGS}\" ${REPO_PATH}\nelse\n  echo \"Not on Linux - skipping fleetd build\"\nfi\n\necho \"Building fleetctl...\"\nCGO_ENABLED=0 go build -o bin/fleetctl -a -installsuffix netgo -ldflags \"${GLDFLAGS}\" ${REPO_PATH}/fleetctl\n"
        },
        {
          "name": "build-docker",
          "type": "blob",
          "size": 0.15625,
          "content": "#!/bin/bash -e\n\nCDIR=$(cd `dirname \"$0\"` && pwd)\n\ndocker run --rm -v \"$CDIR\":/opt/fleet -u $(id -u):$(id -g) golang:1.6 /bin/bash -c \"cd /opt/fleet && ./build\"\n"
        },
        {
          "name": "build-env",
          "type": "blob",
          "size": 0.775390625,
          "content": "version=$(go version)\nregex_release=\"go([0-9]+).([0-9]+).\"\nregex_devel=\"devel\\s+\\+([a-f0-9]+)\\s+\"\nif [[ $version =~ $regex_release ]]; then\n  if [ ${BASH_REMATCH[1]} -eq \"1\" -a ${BASH_REMATCH[2]} -eq \"5\" ]; then\n    export GO${BASH_REMATCH[1]}${BASH_REMATCH[2]}VENDOREXPERIMENT=1\n  fi\nelse\n  if ! [[ $version =~ $regex_devel ]]; then\n    echo \"could not determine Go version\"\n    echo \"version = \\\"$version\\\"\"\n    exit 1\n  fi\nfi\n\n: ${CDIR:=${PWD}}\n\nexport GOBIN=\"${CDIR}/bin\"\nexport GOPATH=\"${CDIR}/gopath\"\nexport VERSION=$(git describe --dirty)\nexport GLDFLAGS=\"-X github.com/coreos/fleet/version.Version=${VERSION}\"\neval $(go env)\nexport PATH=\"${GOROOT}/bin:${PATH}\"\nexport FLEETD_BIN=\"${CDIR}/bin/fleetd\"\nexport FLEETCTL_BIN=\"${CDIR}/bin/fleetctl\"\nexport FLEETD_TEST_ENV=\"enable_grpc=false\"\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover",
          "type": "blob",
          "size": 0.46484375,
          "content": "#!/bin/bash -e\n#\n# Generate coverage HTML for a package\n# e.g. PKG=./unit ./cover\n#\n\nif [ -z \"$PKG\" ]; then\n\techo \"cover only works with a single package, sorry\"\n\texit 255\nfi\n\nCOVEROUT=\"coverage\"\n\nif ! [ -d \"$COVEROUT\" ]; then\n\tmkdir \"$COVEROUT\"\nfi\n\n# strip out slashes and dots\nCOVERPKG=${PKG//\\//}\nCOVERPKG=${COVERPKG//./}\n\n# generate arg for \"go test\"\nexport COVER=\"-coverprofile ${COVEROUT}/${COVERPKG}.out\"\n\nsource ./test\n\ngo tool cover -html=${COVEROUT}/${COVERPKG}.out\n"
        },
        {
          "name": "debug",
          "type": "tree",
          "content": null
        },
        {
          "name": "engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fixtures",
          "type": "tree",
          "content": null
        },
        {
          "name": "fleet.conf.sample",
          "type": "blob",
          "size": 1.419921875,
          "content": "# This config file is INI-formatted\n\n# Lower the logging threshold. Acceptable values are 0, 1, and 2. A higher\n# value corresponds to a lower logging threshold.\n# verbosity=0\n\n# Provide a custom set of etcd endpoints. The default value is determined\n# by the underlying go-etcd library.\n# etcd_servers=[\"http://127.0.0.1:2379\", \"http://127.0.0.1:4001\"]\n\n# Amount of time in seconds to allow a single etcd request before considering it failed.\n# etcd_request_timeout=1.0\n\n# Provide TLS configuration when SSL certificate authentication is enabled in etcd endpoints\n# etcd_cafile=/path/to/CAfile\n# etcd_keyfile=/path/to/keyfile\n# etcd_certfile=/path/to/certfile\n\n# Provide Authentication configuration when basic authentication is enabled in etcd endpoints\n# etcd_username=root\n# etcd_password=coreos\n\n# IP address that should be published with any socket information. By default,\n# no IP address is published.\n# public_ip=\"\"\n\n# Comma-delimited key/value pairs that are published to the fleet registry.\n# This data can be referenced in unit files to affect scheduling decisions.\n# An example could look like: metadata=\"region=us-west,az=us-west-1\"\n# metadata=\"\"\n\n# An Agent will be considered dead if it exceeds this amount of time to\n# communicate with the Registry. The agent will attempt a heartbeat at half\n# of this value.\n# agent_ttl=\"30s\"\n\n# Interval at which the engine should reconcile the cluster schedule in etcd.\n# engine_reconcile_interval=2\n"
        },
        {
          "name": "fleetctl",
          "type": "tree",
          "content": null
        },
        {
          "name": "fleetd",
          "type": "tree",
          "content": null
        },
        {
          "name": "functional",
          "type": "tree",
          "content": null
        },
        {
          "name": "glide.lock",
          "type": "blob",
          "size": 3.701171875,
          "content": "hash: dfcc3738a6efb04cb1d9541548b748d63ea7a820b945defb03265620f71026be\nupdated: 2016-11-25T15:01:29.518002886+01:00\nimports:\n- name: github.com/beorn7/perks\n  version: 4c0e84591b9aa9e6dcfdf3e020114cd81f89d5f9\n  subpackages:\n  - quantile\n- name: github.com/coreos/etcd\n  version: c31b1ab8d18ff7990a43bd258ca54f80c5a3c952\n  subpackages:\n  - client\n  - error\n  - pkg/pathutil\n  - pkg/types\n- name: github.com/coreos/go-semver\n  version: 8ab6407b697782a06568d4b7f1db25550ec2e4c6\n  subpackages:\n  - semver\n- name: github.com/coreos/go-systemd\n  version: efa0506b99d3d9cfade280f5c7a1c1980d8c6c48\n  subpackages:\n  - activation\n  - dbus\n  - unit\n- name: github.com/glacjay/goini\n  version: fd3024d87ee21a36d3ccc4367f509fec89cd90ee\n- name: github.com/godbus/dbus\n  version: 097c117a8cd6cd44cd63e088f4bc9d75f9b064c8\n- name: github.com/gogo/protobuf\n  version: 8d70fb3182befc465c4a1eac8ad4d38ff49778e2\n  subpackages:\n  - gogoproto\n  - io\n  - jsonpb\n  - jsonpb/jsonpb_test_proto\n  - plugin\n  - plugin/gostring\n  - plugin/testgen\n  - proto\n  - proto/proto3_proto\n  - protoc-gen-gogo/descriptor\n  - protoc-gen-gogo/generator\n  - protoc-gen-gogo/grpc\n  - protoc-gen-gogo/plugin\n  - sortkeys\n  - types\n  - vanity\n  - vanity/command\n  - version\n- name: github.com/golang/protobuf\n  version: 8ee79997227bf9b34611aee7946ae64735e6fd93\n  subpackages:\n  - proto\n- name: github.com/inconshreveable/mousetrap\n  version: 76626ae9c91c4f2a10f34cad8ce83ea42c93bb75\n- name: github.com/jonboulle/clockwork\n  version: bcac9884e7502bb2b474c0339d889cb981a2f27f\n- name: github.com/matttproud/golang_protobuf_extensions\n  version: c12348ce28de40eed0136aa2b644d0ee0650e56c\n  subpackages:\n  - pbutil\n- name: github.com/pborman/uuid\n  version: 3d4f2ba23642d3cfd06bd4b54cf03d99d95c0f1b\n- name: github.com/prometheus/client_golang\n  version: 575f371f7862609249a1be4c9145f429fe065e32\n  subpackages:\n  - prometheus\n- name: github.com/prometheus/client_model\n  version: fa8ad6fec33561be4280a8f0514318c79d7f6cb6\n  subpackages:\n  - go\n- name: github.com/prometheus/common\n  version: 0d5de9d6d8629cb8bee6d4674da4127cd8b615a3\n  subpackages:\n  - expfmt\n  - internal/bitbucket.org/ww/goautoneg\n  - model\n- name: github.com/prometheus/procfs\n  version: abf152e5f3e97f2fafac028d2cc06c1feb87ffa5\n- name: github.com/rakyll/globalconf\n  version: 7afbf15d8da4ed30174874a9db565d16755e99f7\n- name: github.com/spf13/cobra\n  version: 9495bc009a56819bdb0ddbc1a373e29c140bc674\n- name: github.com/spf13/pflag\n  version: 5ccb023bc27df288a957c5e994cd44fd19619465\n- name: github.com/spf13/viper\n  version: 651d9d916abc3c3d6a91a12549495caba5edffd2\n- name: github.com/ugorji/go\n  version: f1f1a805ed361a0e078bb537e4ea78cd37dcf065\n  subpackages:\n  - codec\n- name: github.com/vishvananda/netlink\n  version: a4f22d8ad2327663017dbb309b5e3f8b6f348020\n  subpackages:\n  - nl\n- name: github.com/vishvananda/netns\n  version: 8ba1072b58e0c2a240eb5f6120165c7776c3e7b8\n- name: golang.org/x/crypto\n  version: ede567c8e044a5913dad1d1af3696d9da953104c\n  subpackages:\n  - curve25519\n  - ed25519\n  - ed25519/internal/edwards25519\n  - ssh\n  - ssh/agent\n  - ssh/terminal\n- name: golang.org/x/net\n  version: 6acef71eb69611914f7a30939ea9f6e194c78172\n  subpackages:\n  - context\n  - html\n  - html/atom\n  - http2\n  - http2/hpack\n  - internal\n  - internal/timeseries\n  - trace\n  - websocket\n- name: google.golang.org/api\n  version: c8d75a8ec737f9b8b1ed2676c28feedbe21f543f\n  subpackages:\n  - gensupport\n  - googleapi\n  - googleapi/internal/uritemplates\n- name: google.golang.org/genproto\n  version: 08f135d1a31b6ba454287638a3ce23a55adace6f\n  subpackages:\n  - googleapis\n- name: google.golang.org/grpc\n  version: 777daa17ff9b5daef1cfdf915088a2ada3332bf0\n  subpackages:\n  - codes\n  - credentials\n  - grpclog\n  - internal\n  - metadata\n  - naming\n  - peer\n  - transport\ntestImports: []\n"
        },
        {
          "name": "glide.yaml",
          "type": "blob",
          "size": 0.8505859375,
          "content": "package: github.com/coreos/fleet\nimport:\n- package: github.com/coreos/etcd\n  subpackages:\n  - client\n  - error\n- package: github.com/coreos/go-semver\n  subpackages:\n  - semver\n- package: github.com/coreos/go-systemd\n  subpackages:\n  - activation\n  - dbus\n  - unit\n- package: github.com/jonboulle/clockwork\n- package: github.com/pborman/uuid\n- package: github.com/prometheus/client_golang\n  subpackages:\n  - prometheus\n- package: github.com/rakyll/globalconf\n- package: github.com/spf13/cobra\n- package: github.com/vishvananda/netlink\n- package: golang.org/x/crypto\n  subpackages:\n  - ssh\n  - ssh/agent\n  - ssh/terminal\n- package: golang.org/x/net\n  subpackages:\n  - context\n  - http2\n  - internal\n  - trace\n- package: google.golang.org/api\n  subpackages:\n  - googleapi\n- package: github.com/spf13/viper\n- package: google.golang.org/genproto\n  subpackages:\n  - googleapis\n"
        },
        {
          "name": "heart",
          "type": "tree",
          "content": null
        },
        {
          "name": "job",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "machine",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.0732421875,
          "content": "// Copyright 2016 The fleet Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Package main is a simple wrapper of the real fleet entrypoint package\n// (located at github.com/coreos/fleet/fleetd) to ensure that fleet is still\n// \"go getable\"; e.g. `go get github.com/coreos/fleet` works as expected and\n// builds a binary in $GOBIN/fleetd\n//\n// This package should NOT be extended or modified in any way; to modify the\n// fleetd binary, work in the `github.com/coreos/fleet/fleetd` package.\n//\npackage main\n\nimport \"github.com/coreos/fleet/fleetd\"\n\nfunc main() {\n\tfleetd.Main()\n}\n"
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf",
          "type": "tree",
          "content": null
        },
        {
          "name": "registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssh",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "blob",
          "size": 1.5166015625,
          "content": "#!/bin/bash -e\n#\n# Run all fleet tests (not including functional)\n#   ./test\n#   ./test -v\n#\n# Run tests for one package\n#   PKG=./unit ./test\n#   PKG=ssh ./test\n#\n\n# Invoke ./cover for HTML output\nCOVER=${COVER:-\"-cover\"}\n\nCDIR=$(cd `dirname \"$0\"` && pwd)\ncd \"$CDIR\"\n\nsource ./build\n\nTESTABLE=\"agent api config engine fleetctl job machine pkg pkg/lease registry registry/rpc ssh systemd unit\"\nFORMATTABLE=\"$TESTABLE client functional functional/platform heart server fleetd\"\n\n# user has not provided PKG override\nif [ -z \"$PKG\" ]; then\n\tTEST=$TESTABLE\n\tFMT=$FORMATTABLE\n\n# user has provided PKG override\nelse\n\t# strip out slashes and dots from PKG=./foo/\n\tTEST=${PKG//\\//}\n\tTEST=${TEST//./}\n\n\t# only run gofmt on packages provided by user\n\tFMT=\"$TEST\"\nfi\n\n# split TEST into an array and prepend REPO_PATH to each local package\nsplit=(${TEST// / })\nTEST=${split[@]/#/${REPO_PATH}/}\n\necho \"Running tests...\"\ngo test ${COVER} $@ ${TEST}\n\necho \"Checking gofmt...\"\nfmtRes=$(gofmt -l $FMT)\nif [ -n \"${fmtRes}\" ]; then\n\techo -e \"gofmt checking failed:\\n${fmtRes}\"\n\texit 255\nfi\n\necho \"Checking govet...\"\nvetRes=$(go vet $TEST)\nif [ -n \"${vetRes}\" ]; then\n\techo -e \"govet checking failed:\\n${vetRes}\"\n\texit 255\nfi\n\necho \"Checking for license header...\"\nlicRes=$(for file in $(find . -type f -iname '*.go' ! -path './vendor/*' ! -path './gopath/*' ); do\n\t\thead -n3 \"${file}\" | grep -Eq \"(Copyright|generated|GENERATED)\" || echo -e \"  ${file}\"\n\tdone;)\nif [ -n \"${licRes}\" ]; then\n\techo -e \"license header checking failed:\\n${licRes}\"\n\texit 255\nfi\n\necho \"Success\"\n"
        },
        {
          "name": "test-docker",
          "type": "blob",
          "size": 0.1552734375,
          "content": "#!/bin/bash -e\n\nCDIR=$(cd `dirname \"$0\"` && pwd)\n\ndocker run --rm -v \"$CDIR\":/opt/fleet -u $(id -u):$(id -g) golang:1.6 /bin/bash -c \"cd /opt/fleet && ./test\"\n"
        },
        {
          "name": "unit",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor.manifest",
          "type": "blob",
          "size": 2.2158203125,
          "content": "github.com/beorn7/perks/quantile 3ac7bf7a47d159a033b107610db8a1b6575507a4\ngithub.com/coreos/etcd/client b2d33e6dcb24cddc0395f1bbe2213a27aef0fb46\ngithub.com/coreos/etcd/pkg/pathutil b2d33e6dcb24cddc0395f1bbe2213a27aef0fb46\ngithub.com/coreos/etcd/pkg/types b2d33e6dcb24cddc0395f1bbe2213a27aef0fb46\ngithub.com/coreos/go-semver/semver a9a0c39c7e4a2929f73d4b757d1860fbb8e66d06\ngithub.com/coreos/go-systemd/activation 6dc8b843c670f2027cc26b164935635840a40526\ngithub.com/coreos/go-systemd/dbus 6dc8b843c670f2027cc26b164935635840a40526\ngithub.com/coreos/go-systemd/unit 6dc8b843c670f2027cc26b164935635840a40526\ngithub.com/godbus/dbus 9bb9dbf0e53309fa81d26e7230cbb6cff9373cad\ngithub.com/golang/protobuf/proto dda510ac0fd43b39770f22ac6260eb91d377bce3\ngithub.com/jonboulle/clockwork b473f398c464f1988327f67c9e6aa7fba62f80d2\ngithub.com/matttproud/golang_protobuf_extensions/pbutil d0c3fe89de86839aecf2e0579c40ba3bb336a453\ngithub.com/pborman/uuid c55201b036063326c5b1b89ccfe45a184973d073\ngithub.com/prometheus/client_golang/prometheus 90c15b5efa0dc32a7d259234e02ac9a99e6d3b82\ngithub.com/prometheus/client_model/go fa8ad6fec33561be4280a8f0514318c79d7f6cb6\ngithub.com/prometheus/common/expfmt 40456948a47496dc22168e6af39297a2f8fbf38c\ngithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg 40456948a47496dc22168e6af39297a2f8fbf38c\ngithub.com/prometheus/common/model 40456948a47496dc22168e6af39297a2f8fbf38c\ngithub.com/prometheus/procfs 406e5b7bfd8201a36e2bb5f7bdae0b03380c2ce8\ngithub.com/rakyll/globalconf fd9ff89130a682478a0c94e893ff4affe570b002\ngithub.com/rakyll/goini 907cca0f578a5316fb864ec6992dc3d9730ec58c\ngithub.com/vishvananda/netlink 4fdf23c882685717a2a750114bdc904afeafc16b\ngithub.com/vishvananda/netlink/nl 4fdf23c882685717a2a750114bdc904afeafc16b\ngolang.org/x/crypto/curve25519 9e7f5dc375abeb9619ea3c5c58502c428f457aa2\ngolang.org/x/crypto/ssh 9e7f5dc375abeb9619ea3c5c58502c428f457aa2\ngolang.org/x/crypto/ssh/agent 9e7f5dc375abeb9619ea3c5c58502c428f457aa2\ngolang.org/x/crypto/ssh/terminal 9e7f5dc375abeb9619ea3c5c58502c428f457aa2\ngolang.org/x/net/context a8c61998a557a37435f719980da368469c10bfed\ngoogle.golang.org/api/googleapi d3edb0282bde692467788c50070a9211afe75cf3\ngoogle.golang.org/api/googleapi/internal/uritemplates d3edb0282bde692467788c50070a9211afe75cf3\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}