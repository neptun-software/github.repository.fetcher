{
  "metadata": {
    "timestamp": 1736567257504,
    "page": 857,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "atomix/atomix",
      "stars": 2361,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5224609375,
          "content": "# SPDX-FileCopyrightText: 2023-present Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n*.tgz\n.idea\n.DS_Store\n\n# Generated TLS certificate files\nadmission.conf\nadmission.csr\nca.key\nca.srl\n\n# Test binary, built with `go test -c`\n*.test\n*.log\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n\ndist/\n.release\n.cr-release-packages\n\n# Helm files\nChart.lock\n"
        },
        {
          "name": ".reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.7490234375,
          "content": "# SPDX-FileCopyrightText: 2022-present Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n\n.PHONY: build\nbuild:\n\t$(MAKE) -C api build\n\t$(MAKE) -C charts build\n\t$(MAKE) -C controller build\n\t$(MAKE) -C drivers build\n\t$(MAKE) -C logging build\n\t$(MAKE) -C protocols build\n\t$(MAKE) -C runtime build\n\t$(MAKE) -C sidecar build\n\t$(MAKE) -C stores build\n\t$(MAKE) -C testing build\n\n.PHONY: test\ntest:\n\t$(MAKE) -C api test\n\t$(MAKE) -C bench test\n\t$(MAKE) -C charts test\n\t$(MAKE) -C controller test\n\t$(MAKE) -C drivers test\n\t$(MAKE) -C logging test\n\t$(MAKE) -C protocols test\n\t$(MAKE) -C runtime test\n\t$(MAKE) -C sidecar test\n\t$(MAKE) -C stores test\n\t$(MAKE) -C testing test\n\n.PHONY: kind\nkind:\n\t$(MAKE) -C controller kind\n\t$(MAKE) -C sidecar kind\n\t$(MAKE) -C stores kind\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3359375,
          "content": "<!--\nSPDX-FileCopyrightText: 2023-present Intel Corporation\nSPDX-License-Identifier: Apache-2.0\n-->\n\n# [Atomix](https://atomix.io)\n\n[![website](https://img.shields.io/website?down_message=offline&label=read%20the%20docs&up_message=online&url=https%3A%2F%2Fatomix.io)](https://atomix.io)\n[![follow](https://img.shields.io/twitter/url?label=follow%20%40atomixio&logo=twitter&url=https%3A%2F%2Fatomix.io)](https://twitter.com/atomixio)\n![LICENSE](https://img.shields.io/github/license/atomix/atomix)\n\nAtomix is a cloud native runtime for building stateful, scalable, configurable, and reliable distributed \napplications in Kubernetes. The Atomix API provides a set of high-level building blocks (referred to as distributed \nprimitives) for building distributed systems. The architecture of Atomix incorporates the lessons learned from \nexperience over the past decade building high-availability cloud infrastructure. The primary focus of the project \nis to decouple applications from specific data stores, instead providing a set of unified, polyglot interfaces \n(gRPC services) to a variety of systems and protocols, and enabling rapid experimentation and customization of \ndistributed applications.\n\n### [Read the docs](https://atomix.io)\n\n**Note** The original Java implementation has been archived at\n[atomix/atomix-archive](https://github.com/atomix/atomix-archive)\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "chart",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "controller",
          "type": "tree",
          "content": null
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "protocols",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "sidecar",
          "type": "tree",
          "content": null
        },
        {
          "name": "stores",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}