{
  "metadata": {
    "timestamp": 1736567043960,
    "page": 626,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alexei-led/pumba",
      "stars": 2808,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": ".bin\n.cover\n.git\n.idea\n.vscode\n.github\n.test\n\n.gitignore\n.env\nLICENSE\n\n*.md\n\ndeploy\ndocs\nexamples\n\ndocker/Dockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": ".cover\n.git\n.gtm\n.idea\n.vscode\n.bin\n.env\n.in\n.test\n\n**/.DS_Store\n**/debug\n**/debug.test\n\nvendor\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 2.9931640625,
          "content": "run:\n  # which dirs to skip\n  skip-dirs:\n    - mocks\n  # Timeout for analysis, e.g. 30s, 5m.\n  # Default: 1m\n  timeout: 5m\n  # Exit code when at least one issue was found.\n  # Default: 1\n  issues-exit-code: 2\n  # Include test files or not.\n  # Default: true\n  tests: false\n  # allow parallel run\n  allow-parallel-runners: true\n\nlinters-settings:\n  govet:\n    check-shadowing: true\n  gocyclo:\n    min-complexity: 15\n  maligned:\n    suggest-new: true\n  dupl:\n    threshold: 100\n  goconst:\n    min-len: 2\n    min-occurrences: 2\n  misspell:\n    locale: US\n    ignore-words:\n      - \"cancelled\"\n  goimports:\n    local-prefixes: github.com/golangci/golangci-lint\n  gocritic:\n    enabled-tags:\n      - diagnostic\n      - experimental\n      - opinionated\n      - performance\n      - style\n    disabled-checks:\n      - dupImport # https://github.com/go-critic/go-critic/issues/845\n      - ifElseChain\n      - octalLiteral\n      - rangeValCopy\n      - unnamedResult\n      - whyNoLint\n      - wrapperFunc\n  funlen:\n    lines: 105\n    statements: 50\n\nlinters:\n  # please, do not use `enable-all`: it's deprecated and will be removed soon.\n  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint\n  disable-all: true\n  enable:\n    - asciicheck\n    - bidichk\n    - bodyclose\n    # - containedctx\n    # - contextcheck disabled because of generics\n    - decorder\n    # - depguard\n    - dogsled\n    - dupl\n    - durationcheck\n    - errcheck\n    - errchkjson\n    - errname\n    - errorlint\n    - exhaustive\n    # - exhaustivestruct TODO: check how to fix it\n    - exportloopref\n    # - forbidigo TODO: configure forbidden code patterns\n    # - forcetypeassert\n    - funlen\n    - gci\n    # - gochecknoglobals TODO: remove globals from code\n    # - gochecknoinits TODO: remove main.init\n    - gocognit\n    - goconst\n    - gocritic\n    - gocyclo\n    #    - godox\n    - goerr113\n    - gofmt\n    - goimports\n    - gomnd\n    # - gomoddirectives\n    - gosec\n    - gosimple\n    - govet\n    - goprintffuncname\n    - grouper\n    - importas\n    # - ireturn TODO: not sure if it is a good linter\n    - ineffassign\n    - interfacebloat\n    - loggercheck\n    - maintidx\n    - makezero\n    - misspell\n    - nakedret\n    # - nestif\n    - nilerr\n    - nilnil\n    # - noctx\n    - nolintlint\n    - prealloc\n    - predeclared\n    - promlinter\n    - reassign\n    - revive\n    # - rowserrcheck disabled because of generics\n    # - staticcheck doesn't work with go1.19\n    # - structcheck disabled because of generics\n    - stylecheck\n    - tenv\n    - testableexamples\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n    # - varnamelen TODO: review naming\n    # - varcheck depricated 1.49\n    # - wastedassign disabled because of generics\n    - whitespace\n    - wrapcheck\n    # - wsl\n\nissues:\n  exclude-rules:\n    - path: _test\\.go\n      linters:\n        - funlen\n        - bodyclose\n        - gosec\n        - dupl\n        - gocognit\n        - goconst\n        - gocyclo\n  exclude:\n    - Using the variable on range scope `tt` in function literal\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.7421875,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n      - id: check-added-large-files\n  - repo: https://github.com/jumanjihouse/pre-commit-hooks\n    rev: 3.0.0\n    hooks:\n      - id: git-dirty\n  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks\n    rev: v2.4.0\n    hooks:\n      - id: pretty-format-golang\n  - repo: https://github.com/mattlqx/pre-commit-sign\n    rev: v1.1.3\n    hooks:\n      - id: sign-commit\n  - repo: https://github.com/syntaqx/git-hooks\n    rev: v0.0.17\n    hooks:\n      - id: forbid-binary\n      - id: go-test\n      - id: go-mod-tidy\n  - repo: local\n    hooks:\n      - id: lint\n        name: lint-check\n        entry: make lint\n        language: system\n        files: \\.go\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.7080078125,
          "content": "GO       := go\nDOCKER   := docker\nMOCK     := mockery\nBATS     := bats\nLINT     := golangci-lint\nGOCOV    := gocov\nGOCOVXML := gocov-xml\nGOUNIT   := go-junit-report\nGOMOCK   := mockery\nTIMEOUT  := 15\n\nMODULE   := $(shell $(GO) list -m)\nDATE     ?= $(shell date \"+%Y-%m-%d %H:%M %Z\")\nVERSION  ?= $(shell git describe --tags --always --dirty 2> /dev/null || cat $(CURDIR)/VERSION 2> /dev/null || echo v0)\nCOMMIT   ?= $(or $(shell git rev-parse --short HEAD 2>/dev/null), $(or $(subst 1,7,$(GITHUB_SHA)), unknown))\nBRANCH   ?= $(or $(shell git rev-parse --abbrev-ref HEAD 2>/dev/null), $(or $(GITHUB_REF_NAME), master))\nPKGS     := $(or $(shell $(GO) list ./...), $(PKG))\nTESTPKGS := $(shell $(GO) list -f \\\n\t\t\t'{{ if or .TestGoFiles .XTestGoFiles }}{{ .ImportPath }}{{ end }}' \\\n\t\t\t$(PKGS))\nLINT_CONFIG := $(CURDIR)/.golangci.yaml\nLDFLAGS_VERSION := -X main.version=$(VERSION) -X main.commit=$(COMMIT) -X main.branch=$(BRANCH) -X \\\"main.buildTime=$(DATE)\\\"\nBIN        := $(CURDIR)/.bin\nTARGETOS   := $(or $(TARGETOS), linux)\nTARGETARCH := $(or $(TARGETARCH), amd64)\n\n# platforms and architectures for release\nPLATFORMS     = darwin linux windows\nARCHITECTURES = amd64 arm64\n\nV = 0\nQ = $(if $(filter 1,$V),,@)\nM = $(shell printf \"\\033[34;1m▶\\033[0m\")\n\nexport CGO_ENABLED=0\nexport GOPROXY=https://proxy.golang.org\nexport GOOS=$(TARGETOS)\nexport GOARCH=$(TARGETARCH)\n\n.PHONY: all\nall: setup-tools fmt lint test build\n\n.PHONY: dependency\ndependency: ; $(info $(M) downloading dependencies...) @ ## Build program binary\n\t$Q $(GO) mod download\n\n.PHONY: build\nbuild: dependency | ; $(info $(M) building $(GOOS)/$(GOARCH) binary...) @ ## Build program binary\n\t$Q $(GO) build \\\n\t\t-tags release \\\n\t\t-ldflags \"$(LDFLAGS_VERSION)\" \\\n\t\t-o $(BIN)/$(basename $(MODULE)) ./cmd/main.go\n\n.PHONY: release\nrelease: clean ; $(info $(M) building binaries for multiple os/arch...) @ ## Build program binary for paltforms and os\n\t$(foreach GOOS, $(PLATFORMS),\\\n\t\t$(foreach GOARCH, $(ARCHITECTURES), \\\n\t\t\t$(shell \\\n\t\t\t\tGOPROXY=$(GOPROXY) CGO_ENABLED=$(CGO_ENABLED) GOOS=$(GOOS) GOARCH=$(GOARCH) \\\n\t\t\t\t$(GO) build \\\n\t\t\t\t-tags release \\\n\t\t\t\t-ldflags \"$(LDFLAGS_VERSION)\" \\\n\t\t\t\t-o $(BIN)/$(basename $(MODULE))_$(GOOS)_$(GOARCH) ./cmd/main.go || true)))\n\n# Tools\n\nsetup-tools: setup-lint setup-gocov setup-gocov-xml setup-go-junit-report\n\nsetup-lint:\n\t$(GO) install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2\nsetup-gocov:\n\t$(GO) install github.com/axw/gocov/gocov@v1.1.0\nsetup-gocov-xml:\n\t$(GO) install github.com/AlekSi/gocov-xml@latest\nsetup-go-junit-report:\n\t$(GO) install github.com/jstemmer/go-junit-report/v2@latest\nsetup-mockery:\n\t$(GO) get github.com/vektra/mockery/v2@latest\n\n# Tests\n\nTEST_TARGETS := test-default test-bench test-short test-verbose test-race\n.PHONY: $(TEST_TARGETS) test-xml check test tests\ntest-bench:   ARGS=-run=__absolutelynothing__ -bench=. ## Run benchmarks\ntest-short:   ARGS=-short        ## Run only short tests\ntest-verbose: ARGS=-v            ## Run tests in verbose mode with coverage reporting\ntest-race:                       ## Run tests with race detector\nifeq ($(GOOS)$(GOARCH),linuxamd64)\n  ARGS=-race \nendif\n$(TEST_TARGETS): NAME=$(MAKECMDGOALS:test-%=%)\n$(TEST_TARGETS): test\ncheck test tests: ; $(info $(M) running $(NAME:%=% )tests...) @ ## Run tests\n\t$Q env CGO_ENABLED=1 $(GO) test -timeout $(TIMEOUT)s $(ARGS) $(TESTPKGS)\n\nCOVERAGE_MODE    = atomic\nCOVERAGE_DIR \t = $(CURDIR)/.cover\nCOVERAGE_PROFILE = $(COVERAGE_DIR)/profile.out\nCOVERAGE_XML     = $(COVERAGE_DIR)/coverage.xml\nCOVERAGE_HTML    = $(COVERAGE_DIR)/index.html\n\n.PHONY: test-coverage\ntest-coverage: setup-go-junit-report setup-gocov setup-gocov-xml; $(info $(M) running coverage tests...) @ ## Run coverage tests\n\t$Q mkdir -p $(COVERAGE_DIR)\n\t$Q $(GO) test -v -cover \\\n\t\t-coverpkg=$$($(GO) list -f '{{ join .Deps \"\\n\" }}' $(TESTPKGS) | \\\n\t\t\t\t\tgrep '^$(MODULE)/' | grep -v mocks | \\\n\t\t\t\t\ttr '\\n' ',' | sed 's/,$$//') \\\n\t\t-covermode=$(COVERAGE_MODE) \\\n\t\t-coverprofile=\"$(COVERAGE_PROFILE)\" $(TESTPKGS) > $(COVERAGE_DIR)/tests.output\n\t$(GOUNIT) -set-exit-code -in $(COVERAGE_DIR)/tests.output -out $(COVERAGE_DIR)/tests.xml\n\t$Q $(GO) tool cover -func=\"$(COVERAGE_PROFILE)\"\n\t$Q $(GOCOV) convert $(COVERAGE_PROFILE) | $(GOCOVXML) > $(COVERAGE_XML)\n\n# urun integration tests\n.PHONY: integration-tests\nintegration-tests: build ; $(info $(M) running integration tests with bats...) @ ## Run bats tests\n\t$Q PATH=$(BIN)/$(dir $(MODULE)):$(PATH) pumba --version\n\t$Q PATH=$(BIN)/$(dir $(MODULE)):$(PATH) $(BATS) tests\n\n.PHONY: lint\nlint: setup-lint; $(info $(M) running golangci-lint...) @ ## Run golangci-lint\n\t$Q $(LINT) run -v -c $(LINT_CONFIG) ./...\n\n.PHONY: fmt\nfmt: ; $(info $(M) running gofmt...) @ ## Run gofmt on all source files\n\t$Q $(GO) fmt $(PKGS)\n\n# generate test mock for interfaces\n.PHONY: mocks\nmocks: setup-mockery; $(info $(M) generating mocks...) @ ## Run mockery\n\t$Q $(GOMOCK) --dir pkg/chaos/docker --all\n\t$Q $(GOMOCK) --dir pkg/container --inpackage --all\n\t$Q $(GOMOCK) --dir $(call source_of,github.com/docker/docker)/client --name ContainerAPIClient\n\t$Q $(GOMOCK) --dir $(call source_of,github.com/docker/docker)/client --name ImageAPIClient\n\t$Q $(GOMOCK) --dir $(call source_of,github.com/docker/docker)/client --name APIClient\n\n# Misc\n\n.PHONY: clean\nclean: ; $(info $(M) cleaning...)\t@ ## Cleanup everything\n\t@rm -rf $(BIN)\n\t@rm -rf .cover/coverage.*\n\n.PHONY: help\nhelp:\n\t@grep -E '^[ a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | \\\n\t\tawk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-15s\\033[0m %s\\n\", $$1, $$2}'\n\n.PHONY: version\nversion:\n\t@echo $(VERSION)\n\n.PHONY: debug\ndebug:\n\t@echo $(LDFLAGS_VERSION)\n\t@echo $(BIN)/$(basename $(MODULE))\n\t@echo $(TARGETOS)/$(TARGETARCH)\n\n# helper function: find module path\ndefine source_of\n\t$(shell go mod download -json | jq -r 'select(.Path == \"$(1)\").Dir' | tr '\\\\' '/'  2> /dev/null)\nendef\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.4892578125,
          "content": "# Pumba: chaos testing tool for Docker [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Breaking%20Docker%20containers%20on%20purpose%20with%20Pumba&url=https://github.com/alexei-led/pumba&via=alexeiled&hashtags=docker,chaosengineering,chaos,breakthingsonpurpose,kubernetes)\n\nPumba is a chaos testing command line tool for Docker containers. Pumba disturbs your containers by crashing containerized application, emulating network failures and stress-testing container resources (cpu, memory, fs, io, and others).\n\n![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/alexei-led/pumba) [![](https://github.com/alexei-led/pumba/workflows/Pumba%20CI/badge.svg)](https://github.com/alexei-led/pumba/actions?query=workflow%3A\"Pumba+CI\") [![Go Report Card](https://goreportcard.com/badge/github.com/alexei-led/pumba)](https://goreportcard.com/report/github.com/alexei-led/pumba) [![codecov](https://codecov.io/gh/alexei-led/pumba/branch/master/graph/badge.svg)](https://codecov.io/gh/alexei-led/pumba) [![](https://images.microbadger.com/badges/image/gaiaadm/pumba.svg)](http://microbadger.com/images/gaiaadm/pumba) [![](https://images.microbadger.com/badges/version/gaiaadm/pumba.svg)](http://microbadger.com/images/gaiaadm/pumba) \n\n\n![pumba](docs/img/pumba_logo.png \"They CALL me... MISTER PIG!\")\n\n## Prerequisites\n\n**Important:**: Minimal required Docker version `v18.06.0`.\n\n## Demo\n\n[![asciicast](https://asciinema.org/a/82428.png)](https://asciinema.org/a/82428)\n\n## Usage\n\nYou can download Pumba binary for your OS from [release](https://github.com/alexei-led/pumba/releases) page.\n\n```text\n$ pumba help\n\nPumba version [VERSION](./blob/master/VERSION)\nNAME:\n   Pumba - Pumba is a resilience testing tool, that helps applications tolerate random Docker container failures: process, network and performance.\n\nUSAGE:\n   pumba [global options] command [command options] containers (name, list of names, RE2 regex)\n\nVERSION:\n   [VERSION](./blob/master/VERSION) - `git rev-parse HEAD --short` and `build time`\n\nCOMMANDS:\n     kill     kill specified containers\n     netem    emulate the properties of wide area networks\n     pause    pause all processes\n     stop     stop containers\n     rm       remove containers\n     help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --host value, -H value      daemon socket to connect to (default: \"unix:///var/run/docker.sock\") [$DOCKER_HOST]\n   --tls                       use TLS; implied by --tlsverify\n   --tlsverify                 use TLS and verify the remote [$DOCKER_TLS_VERIFY]\n   --tlscacert value           trust certs signed only by this CA (default: \"/etc/ssl/docker/ca.pem\")\n   --tlscert value             client certificate for TLS authentication (default: \"/etc/ssl/docker/cert.pem\")\n   --tlskey value              client key for TLS authentication (default: \"/etc/ssl/docker/key.pem\")\n   --log-level value, -l value  set log level (debug, info, warning(*), error, fatal, panic) (default: \"warning\") [$LOG_LEVEL]\n   --json                      produce log in JSON format: Logstash and Splunk friendly\n   --slackhook value           web hook url; send Pumba log events to Slack\n   --slackchannel value        Slack channel (default #pumba) (default: \"#pumba\")\n   --interval value, -i value  recurrent interval for chaos command; use with optional unit suffix: 'ms/s/m/h'\n   --label value               filter containers by labels, e.g '--label key=value' (multiple labels supported)\n   --random, -r                randomly select single matching container from list of target containers\n   --dry-run                   does not create chaos, only logs planned chaos commands\n   --help, -h                  show help\n   --version, -v               print the version\n```\n\n### Kill Container command\n\n```text\npumba kill -h\n\nNAME:\n   pumba kill - kill specified containers\n\nUSAGE:\n   pumba [global options] kill [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   send termination signal to the main process inside target container(s)\n\nOPTIONS:\n   --signal value, -s value  termination signal, that will be sent by Pumba to the main process inside target container(s) (default: \"SIGKILL\")\n   --limit value, -l value   limit to number of container to kill (0: kill all matching) (default: 0)\n```\n\n### Pause Container command\n\n```text\npumba pause -h\n\nNAME:\n   pumba pause - pause all processes\n\nUSAGE:\n   pumba pause [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   pause all running processes within target containers\n\nOPTIONS:\n   --duration value, -d value  pause duration: should be smaller than recurrent interval; use with optional unit suffix: 'ms/s/m/h'\n```\n\n### Stop Container command\n\n```text\npumba stop -h\nNAME:\n   pumba stop - stop containers\n\nUSAGE:\n   pumba stop [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   stop the main process inside target containers, sending  SIGTERM, and then SIGKILL after a grace period\n\nOPTIONS:\n   --time value, -t value  seconds to wait for stop before killing container (default 10) (default: 10)\n```\n\n### Remove (rm) Container command\n\n```text\npumba rm -h\n\nNAME:\n   pumba rm - remove containers\n\nUSAGE:\n   pumba rm [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   remove target containers, with links and voluems\n\nOPTIONS:\n   --force, -f    force the removal of a running container (with SIGKILL, default: true)\n   --links, -l    remove container links (default: false)\n   --volumes, -v  remove volumes associated with the container (default: true)\n```\n\n### Network Emulation (netem) command\n\n```text\npumba netem -h\n\nNAME:\n   Pumba netem - delay, loss, duplicate and re-order (run 'netem') packets, to emulate different network problems\n\nUSAGE:\n   Pumba netem command [command options] [arguments...]\n\nCOMMANDS:\n     delay      delay egress traffic\n     loss\n     duplicate\n     corrupt\n     rate       limit egress traffic\n\nOPTIONS:\n   --duration value, -d value   network emulation duration; should be smaller than recurrent interval; use with optional unit suffix: 'ms/s/m/h'\n   --interface value, -i value  network interface to apply delay on (default: \"eth0\")\n   --target value, -t value     target IP filter; comma separated. netem will impact only on traffic to target IP(s)\n   --tc-image value             Docker image with tc (iproute2 package); try 'gaiadocker/iproute2'\n   --help, -h                   show help\n```\n\n#### Network Emulation Delay sub-command\n\n```text\npumba netem delay -h\n\nNAME:\n   Pumba netem delay - delay egress traffic\n\nUSAGE:\n   Pumba netem delay [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   delay egress traffic for specified containers; networks show variability so it is possible to add random variation; delay variation isn't purely random, so to emulate that there is a correlation\n\nOPTIONS:\n   --time value, -t value          delay time; in milliseconds (default: 100)\n   --jitter value, -j value        random delay variation (jitter); in milliseconds; example: 100ms ± 10ms (default: 10)\n   --correlation value, -c value   delay correlation; in percentage (default: 20)\n   --distribution value, -d value  delay distribution, can be one of {<empty> | uniform | normal | pareto |  paretonormal}\n```\n\n#### Network Emulation Loss sub-commands\n\n```text\npumba netem loss -h\n\nNAME:\n   Pumba netem loss - adds packet losses\n\nUSAGE:\n   Pumba netem loss [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   adds packet losses, based on independent (Bernoulli) probability model\n   see:  http://www.voiptroubleshooter.com/indepth/burstloss.html\n\nOPTIONS:\n   --percent value, -p value      packet loss percentage (default: 0)\n   --correlation value, -c value  loss correlation; in percentage (default: 0)\n```\n\n```text\npumba netem loss-state -h\n\nNAME:\n   Pumba netem loss-state - adds packet losses, based on 4-state Markov probability model\n\nUSAGE:\n   Pumba netem loss-state [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   adds a packet losses, based on 4-state Markov probability model\n     state (1) – packet received successfully\n     state (2) – packet received within a burst\n     state (3) – packet lost within a burst\n     state (4) – isolated packet lost within a gap\n   see: http://www.voiptroubleshooter.com/indepth/burstloss.html\n\nOPTIONS:\n   --p13 value  probability to go from state (1) to state (3) (default: 0)\n   --p31 value  probability to go from state (3) to state (1) (default: 100)\n   --p32 value  probability to go from state (3) to state (2) (default: 0)\n   --p23 value  probability to go from state (2) to state (3) (default: 100)\n   --p14 value  probability to go from state (1) to state (4) (default: 0)\n```\n\n```text\npumba netem loss-gemodel -h\n\nNAME:\n   Pumba netem loss-gemodel - adds packet losses, according to the Gilbert-Elliot loss model\n\nUSAGE:\n   Pumba netem loss-gemodel [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   adds packet losses, according to the Gilbert-Elliot loss model\n   see: http://www.voiptroubleshooter.com/indepth/burstloss.html\n\nOPTIONS:\n   --pg value, -p value  transition probability into the bad state (default: 0)\n   --pb value, -r value  transition probability into the good state (default: 100)\n   --one-h value         loss probability in the bad state (default: 100)\n   --one-k value         loss probability in the good state (default: 0)\n```\n\n```text\npumba netem rate -h\n\nNAME:\n   Pumba netem rate - rate limit egress traffic\n\nUSAGE:\n   Pumba netem rate [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   rate limit egress traffic for specified containers\n\nOPTIONS:\n   --rate value, -r value            delay outgoing packets; in common units (default: \"100kbit\")\n   --packetoverhead value, -p value  per packet overhead; in bytes (default: 0)\n   --cellsize value, -s value        cell size of the simulated link layer scheme (default: 0)\n   --celloverhead value, -c value    per cell overhead; in bytes (default: 0)\n```\n\n#### Network Emulation Duplicate sub-commands\n\n```text\npumba netem duplicate -h\n\nNAME:\n   Pumba netem duplicate - adds duplicate packets\n\nUSAGE:\n   Pumba netem duplicate [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   adds duplicate packets, based on independent (Bernoulli) probability model\n   see:  http://www.voiptroubleshooter.com/indepth/burstloss.html\n\nOPTIONS:\n   --percent value, -p value      packet duplicate percentage (default: 0)\n   --correlation value, -c value  duplicate correlation; in percentage (default: 0)\n```\n\n#### Network Emulation Corrupt sub-commands\n\n```text\npumba netem corrupt -h\n\nNAME:\n   Pumba netem corrupt - adds corrupt packets\n\nUSAGE:\n   Pumba netem corrupt [command options] containers (name, list of names, RE2 regex)\n\nDESCRIPTION:\n   adds corrupt packets, based on independent (Bernoulli) probability model\n   see:  http://www.voiptroubleshooter.com/indepth/burstloss.html\n\nOPTIONS:\n   --percent value, -p value      packet corrupt percentage (default: 0)\n   --correlation value, -c value  corrupt correlation; in percentage (default: 0)\n```\n\n##### Examples\n\n```text\n# add 3 seconds delay for all outgoing packets on device `eth0` (default) of `mydb` Docker container for 5 minutes\n\npumba netem --duration 5m delay --time 3000 mydb\n```\n\n```text\n# add a delay of 3000ms ± 30ms, with the next random element depending 20% on the last one,\n# for all outgoing packets on device `eth1` of all Docker container, with name start with `test`\n# for 5 minutes\n\npumba netem --duration 5m --interface eth1 delay \\\n      --time 3000 \\\n      --jitter 30 \\\n      --correlation 20 \\\n    \"re2:^test\"\n```\n\n```text\n# add a delay of 3000ms ± 40ms, where variation in delay is described by `normal` distribution,\n# for all outgoing packets on device `eth0` of randomly chosen Docker container from the list\n# for 5 minutes\n\npumba --random netem --duration 5m \\\n    delay \\\n      --time 3000 \\\n      --jitter 40 \\\n      --distribution normal \\\n    container1 container2 container3\n```\n\n```text\n# Corrupt 10% of the packets from the `mydb` Docker container for 5 minutes\n\npumba netem --duration 5m corrupt --percent 10 mydb\n```\n\n##### `tc` tool\n\nPumba uses `tc` Linux tool for network emulation. You have two options:\n\n1. Make sure that container, you want to disturb, has `tc` tool available and properly installed (install `iproute2` package)\n2. Use `--tc-image` option, with any `netem` command, to specify external Docker image with `tc` tool available. Pumba will create a new container from this image, adding `NET_ADMIN` capability to it and reusing target container network stack. You can try to use [gaiadocker/iproute2](https://hub.docker.com/r/gaiadocker/iproute2/) image (it's just Alpine Linux 3.3 with `iproute2` package installed)\n\n**Note:** For Alpine Linux based image, you need to install `iproute2` package and also to create a symlink pointing to distribution files `ln -s /usr/lib/tc /lib/tc`.\n\n### Stress testing Docker containers\n\nPumba can inject [stress-ng](https://kernel.ubuntu.com/~cking/stress-ng/) testing tool into a target container(s) `cgroup` and control stress test run.\n\n```text\nNAME:\n   pumba stress - stress test a specified containers\n\nUSAGE:\n   pumba stress [command options] containers (name, list of names, or RE2 regex if prefixed with \"re2:\")\n\nDESCRIPTION:\n   stress test target container(s)\n\nOPTIONS:\n   --duration value, -d value  stress duration: must be shorter than recurrent interval; use with optional unit suffix: 'ms/s/m/h'\n   --stress-image value        Docker image with stress-ng tool, cgroup-bin and docker packages, and dockhack script (default: \"alexeiled/stress-ng:latest-ubuntu\")\n   --pull-image                pull stress-image form Docker registry\n   --stressors value           stress-ng stressors; see https://kernel.ubuntu.com/~cking/stress-ng/ (default: \"--cpu 4 --timeout 60s\")\n```\n\n#### stress-ng image requirements\n\nPumba uses [alexeiled/stress-ng:latest-ubuntu](https://hub.docker.com/r/alexeiled/stress-ng/) `stress-ng` Ubuntu-based Docker image with statically linked `stress-ng` tool.\n\nYou can provide your own image, but it must include the following tools:\n\n1. `stress-ng` tool (in `$PATH`)\n1. Bash shell\n1. [`dockhack`](https://github.com/tavisrudd/dockhack) helper Bash script (in `$PATH`)\n1. `docker` client CLI tool (runnable without `sudo`)\n1. `cgexec` tool, available from `cgroups-tools` or/and `cgroup-bin` packages\n\n### Running inside Docker container\n\nIf you choose to use Pumba Docker [image](https://hub.docker.com/r/gaiaadm/pumba/) on Linux, use the following command:\n\n```text\n# run 10 Docker containers named test_(index)\nfor i in `seq 1 10`; do docker run -d --name test_$i --rm alpine tail -f /dev/null; done\n\n# once in a 10 seconds, try to kill (with `SIGKILL` signal) all containers named **test(something)**\n# on same Docker host, where Pumba container is running\n\n$ docker run -it --rm  -v /var/run/docker.sock:/var/run/docker.sock gaiaadm/pumba --interval=10s --random --log-level=info kill --signal=SIGKILL \"re2:^test\"\n\n```\n\n**Note:** from version `0.6` Pumba Docker image is a `scratch` Docker image, that contains only single `pumba` binary file and `ENTRYPOINT` set to the `pumba` command.\n\n**Note:** For Windows and OS X you will need to use `--host` argument, since there is no unix socket `/var/run/docker.sock` to mount.\n\n### Running Pumba on Kubernetes cluster\n\nIf you are running Kubernetes, you can take advantage of DaemonSets to automatically deploy the Pumba on selected K8s nodes, using `nodeSelector` or `nodeAffinity`, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/).\n\nYou'll then be able to deploy the DaemonSet with the command:\n\n```sh\nkubectl create -f deploy/pumba_kube.yml\n```\n\nK8s automatically assigns labels to Docker container, and you can use Pumba `--label` filter to create chaos for specific Pods and Namespaces.\n\nK8s auto-assigned container labels, than can be used by Pumba:\n\n```yaml\n\"io.kubernetes.container.name\": \"test-container\"\n\"io.kubernetes.pod.name\": \"test-pod\"\n\"io.kubernetes.pod.namespace\": \"test-namespace\"\n```\n\nIt's possible to run multiple Pumba commands in the same DaemonSet using multiple Pumba containers, see `deploy/pumba_kube.yml` example.\n\nIf you are not running Kubernetes >= 1.1.0 or do not want to use DaemonSets, you can also run the Pumba as a regular docker container on each node you want to make chaos (see above)\n\n**Note:** running `pumba netem` commands on minikube clusters will not work, because the sch_netem kernel module is missing in the minikube VM!\n\n## Build instructions\n\nYou can build Pumba with or without Go installed on your machine.\n\n### Build using local Go environment\n\nIn order to build Pumba, you need to have Go 1.6+ setup on your machine.\n\nHere is the approximate list of commands you will need to run:\n\n```sh\n# create required folder\ncd $GOPATH\nmkdir github.com/alexei-led && cd github.com/alexei-led\n\n# clone pumba\ngit clone git@github.com:alexei-led/pumba.git\ncd pumba\n\n# build pumba binary\nmake\n\n# run tests and create HTML coverage report\nmake test-coverage\n\n# create pumba binaries for multiple platforms\nmake release\n```\n\n### Build using Docker\n\nYou do not have to install and configure Go in order to build and test Pumba project. Pumba uses Docker multistage build to create final tiny Docker image.\n\nFirst of all clone Pumba git repository:\n\n```sh\ngit clone git@github.com:alexei-led/pumba.git\ncd pumba\n```\n\nNow create a new Pumba Docker image.\n\n```sh\nDOCKER_BUILDKIT=1 docker build -t pumba -f docker/Dockerfile .\n```\n\n## License\n\nCode is under the [Apache License v2](https://www.apache.org/licenses/LICENSE-2.0.txt).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 5.1.x   | :white_check_mark: |\n| 5.0.x   | :x:                |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                |\n\n## Reporting a Vulnerability\n\nUse this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.9.7\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yaml",
          "type": "blob",
          "size": 0.0537109375,
          "content": "coverage:\n  ignore:\n    - \"mocks\"\n    - \"**/mock*.go\"\n\n"
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.5869140625,
          "content": "module github.com/alexei-led/pumba\n\nrequire (\n\tgithub.com/docker/docker v23.0.3+incompatible\n\tgithub.com/docker/go-connections v0.4.0\n\tgithub.com/johntdyer/slackrus v0.0.0-20210521205746-42486fb4c48c\n\tgithub.com/opencontainers/image-spec v1.1.0-rc4\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/urfave/cli v1.22.12\n\tgolang.org/x/sync v0.3.0\n)\n\nrequire (\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/docker/distribution v2.8.2+incompatible // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/google/go-cmp v0.5.9 // indirect\n\tgithub.com/johntdyer/slack-go v0.0.0-20180213144715-95fac1160b22 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/stretchr/objx v0.5.0 // indirect\n\tgolang.org/x/mod v0.12.0 // indirect\n\tgolang.org/x/net v0.15.0 // indirect\n\tgolang.org/x/sys v0.12.0 // indirect\n\tgolang.org/x/time v0.1.0 // indirect\n\tgolang.org/x/tools v0.13.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tgotest.tools/v3 v3.0.2 // indirect\n)\n\ngo 1.21\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 11.099609375,
          "content": "github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v1.2.1/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.11/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/docker/distribution v2.8.1+incompatible h1:Q50tZOPR6T/hjNsyc9g8/syEs6bk8XXApsHjKukMl68=\ngithub.com/docker/distribution v2.8.1+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=\ngithub.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v23.0.3+incompatible h1:9GhVsShNWz1hO//9BNg/dpMnZW25KydO4wtVxWAIbho=\ngithub.com/docker/docker v23.0.3+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/johntdyer/slack-go v0.0.0-20180213144715-95fac1160b22 h1:jKUP9TQ0c7X3w6+IPyMit07RE42MtTWNd77sN2cHngQ=\ngithub.com/johntdyer/slack-go v0.0.0-20180213144715-95fac1160b22/go.mod h1:u0Jo4f2dNlTJeeOywkM6bLwxq6gC3pZ9rEFHn3AhTdk=\ngithub.com/johntdyer/slackrus v0.0.0-20210521205746-42486fb4c48c h1:4eD0DM7IEOQI5egyzKdPXncs61BxMtYwwzJPCRQFU0Y=\ngithub.com/johntdyer/slackrus v0.0.0-20210521205746-42486fb4c48c/go.mod h1:j1kV/8f3jowErEq4XyeypkCdvg5EeHkf0YCKCcq5Ybo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6 h1:dcztxKSvZ4Id8iPpHERQBbIJfabdt4wUm5qy3wOL2Zc=\ngithub.com/moby/term v0.0.0-20210619224110-3f7ff695adc6/go.mod h1:E2VnQOmVuvZB6UYnnDB0qG5Nq/1tD9acaOpo6xmt0Kw=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0-rc4 h1:oOxKUJWnFC4YGHCCMNql1x4YaDfYBTS5Y4x/Cgeo1E0=\ngithub.com/opencontainers/image-spec v1.1.0-rc4/go.mod h1:X4pATf0uXsnn3g5aiGIsVnJBR4mxhKzfwmvK/B2NTm8=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/urfave/cli v1.22.12 h1:igJgVw1JdKH+trcLWLeLwZjU9fEfPesQ+9/e4MQ44S8=\ngithub.com/urfave/cli v1.22.12/go.mod h1:sSBEIC79qR6OvcmsD4U3KABeOTxDqQtdDnaFuUN30b8=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.12.0 h1:rmsUpXtvNzj340zd98LZ4KntptpfRHwpFOHG188oHXc=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.15.0 h1:ugBLEUaxABaB5AJqW9enI0ACdci2RUd4eP51NTBvuJ8=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0 h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0 h1:CM0HF96J0hcLAwsHPJZjfdNzs0gftsLfgKt57wWHJ0o=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/time v0.1.0 h1:xYY+Bajn2a7VBmTM5GikTmnK8ZuX8YgnQCqZpbBNtmA=\ngolang.org/x/time v0.1.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190624222133-a101b041ded4/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.13.0 h1:Iey4qkscZuv0VvIt8E0neZjtPVQFSc870HQ448QgEmQ=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.0.2 h1:kG1BFyqVHuQoVQiR1bWGnfz/fmHvvuiSPIV7rvl360E=\ngotest.tools/v3 v3.0.2/go.mod h1:3SzNCllyD9/Y+b5r9JIKQ474KzkZyqLqEfYqMsX94Bk=\n"
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}