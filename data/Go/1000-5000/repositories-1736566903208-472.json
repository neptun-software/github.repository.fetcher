{
  "metadata": {
    "timestamp": 1736566903208,
    "page": 472,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lucaslorentz/caddy-docker-proxy",
      "stars": 3176,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.01171875,
          "content": "*\n!artifacts"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.0595703125,
          "content": "root = true\n\n[*.{txt,md}]\nindent_style = tab\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.052734375,
          "content": "artifacts\nvendor\ndebug.test\nlocal\n.DS_Store\nbuildenv_*"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4599609375,
          "content": "FROM --platform=${BUILDPLATFORM} alpine:3.20.3 as alpine\nRUN apk add -U --no-cache ca-certificates\n\n# Image starts here\nFROM scratch\nARG TARGETPLATFORM\nLABEL maintainer \"Lucas Lorentz <lucaslorentzlara@hotmail.com>\"\n\nEXPOSE 80 443 2019\nENV XDG_CONFIG_HOME /config\nENV XDG_DATA_HOME /data\n\nWORKDIR /\n\nCOPY --from=alpine /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\nCOPY artifacts/binaries/$TARGETPLATFORM/caddy /bin/\n\nENTRYPOINT [\"/bin/caddy\"]\n\nCMD [\"docker-proxy\"]"
        },
        {
          "name": "Dockerfile-alpine",
          "type": "blob",
          "size": 0.3251953125,
          "content": "FROM alpine:3.20.3 as alpine\nARG TARGETPLATFORM\nLABEL maintainer \"Lucas Lorentz <lucaslorentzlara@hotmail.com>\"\n\nEXPOSE 80 443 2019\nENV XDG_CONFIG_HOME /config\nENV XDG_DATA_HOME /data\n\nRUN apk add -U --no-cache ca-certificates curl\n\nCOPY artifacts/binaries/$TARGETPLATFORM/caddy /bin/\n\nENTRYPOINT [\"/bin/caddy\"]\n\nCMD [\"docker-proxy\"]"
        },
        {
          "name": "Dockerfile-nanoserver",
          "type": "blob",
          "size": 0.5498046875,
          "content": "ARG SERVERCORE_VERSION\nARG NANOSERVER_VERSION\n\nFROM mcr.microsoft.com/windows/servercore:${SERVERCORE_VERSION} as core\n\n# Image starts here\nFROM mcr.microsoft.com/windows/nanoserver:${NANOSERVER_VERSION}\nARG TARGETPLATFORM\nLABEL maintainer \"Lucas Lorentz <lucaslorentzlara@hotmail.com>\"\n\nEXPOSE 80 443 2019\nENV XDG_CONFIG_HOME c:/config\nENV XDG_DATA_HOME c:/data\n\nCOPY --from=core /windows/system32/netapi32.dll /windows/system32/netapi32.dll\n\nCOPY artifacts/binaries/${TARGETPLATFORM}/caddy.exe \"C:\\\\caddy.exe\"\n\nENTRYPOINT [\"C:\\\\caddy.exe\"]\n\nCMD [\"docker-proxy\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2018 Lucas Lorentz Lara\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.6181640625,
          "content": "# Caddy-Docker-Proxy \n[![Build Status](https://dev.azure.com/lucaslorentzlara/lucaslorentzlara/_apis/build/status/lucaslorentz.caddy-docker-proxy?branchName=master)](https://dev.azure.com/lucaslorentzlara/lucaslorentzlara/_build/latest?definitionId=1) [![Go Report Card](https://goreportcard.com/badge/github.com/lucaslorentz/caddy-docker-proxy)](https://goreportcard.com/report/github.com/lucaslorentz/caddy-docker-proxy)\n\n## NEW MODULE NAME!\n\nWe've renamed our go module, from version 2.7.0 forward you should import caddy-docker-proxy using `github.com/lucaslorentz/caddy-docker-proxy/v2` or a specific version `github.com/lucaslorentz/caddy-docker-proxy/v2@v2.7.0`.\n\nThe old name `github.com/lucaslorentz/caddy-docker-proxy/plugin` will be a available for backwards compatibility, but it will not have the latest version.\n\n## Introduction\nThis plugin enables Caddy to be used as a reverse proxy for Docker containers via labels.\n\n## How does it work?\nThe plugin scans Docker metadata, looking for labels indicating that the service or container should be served by Caddy.\n\nThen, it generates an in-memory Caddyfile with site entries and proxies pointing to each Docker service by their DNS name or container IP.\n\nEvery time a Docker object changes, the plugin updates the Caddyfile and triggers Caddy to gracefully reload, with zero-downtime.\n\n## Table of contents\n\n  * [Basic usage example, using docker-compose](#basic-usage-example-using-docker-compose)\n  * [Labels to Caddyfile conversion](#labels-to-caddyfile-conversion)\n    + [Tokens and arguments](#tokens-and-arguments)\n    + [Ordering and isolation](#ordering-and-isolation)\n    + [Sites, snippets and global options](#sites-snippets-and-global-options)\n    + [Go templates](#go-templates)\n  * [Template functions](#template-functions)\n    + [upstreams](#upstreams)\n  * [Examples](#examples)\n  * [Docker configs](#docker-configs)\n  * [Proxying services vs containers](#proxying-services-vs-containers)\n    + [Services](#services)\n    + [Containers](#containers)\n  * [Execution modes](#execution-modes)\n    + [Server](#server)\n    + [Controller](#controller)\n    + [Standalone (default)](#standalone-default)\n  * [Caddy CLI](#caddy-cli)\n  * [Docker images](#docker-images)\n    + [Choosing the version numbers](#choosing-the-version-numbers)\n    + [Chosing between default or alpine images](#chosing-between-default-or-alpine-images)\n    + [CI images](#ci-images)\n    + [ARM architecture images](#arm-architecture-images)\n    + [Windows images](#windows-images)\n    + [Custom images](#custom-images)\n  * [Connecting to Docker Host](#connecting-to-docker-host)\n  * [Volumes](#volumes)\n  * [Trying it](#trying-it)\n    + [With docker-compose file](#with-docker-compose-file)\n    + [With run commands](#with-run-commands)\n  * [Building it](#building-it)\n\n## Basic usage example, using docker-compose\n```shell\n$ docker network create caddy\n```\n\n`caddy/docker-compose.yml`\n```yml\nversion: \"3.7\"\nservices:\n  caddy:\n    image: lucaslorentz/caddy-docker-proxy:ci-alpine\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CADDY_INGRESS_NETWORKS=caddy\n    networks:\n      - caddy\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - caddy_data:/data\n    restart: unless-stopped\n\nnetworks:\n  caddy:\n    external: true\n\nvolumes:\n  caddy_data: {}\n```\n```shell\n$ docker-compose up -d\n```\n\n`whoami/docker-compose.yml`\n```yml\nversion: '3.7'\nservices:\n  whoami:\n    image: traefik/whoami\n    networks:\n      - caddy\n    labels:\n      caddy: whoami.example.com\n      caddy.reverse_proxy: \"{{upstreams 80}}\"\n\nnetworks:\n  caddy:\n    external: true\n```\n```shell\n$ docker-compose up -d\n```\nNow, visit `https://whoami.example.com`. The site will be served [automatically over HTTPS](https://caddyserver.com/docs/automatic-https) with a certificate issued by Let's Encrypt or ZeroSSL.\n\t\t\n## Labels to Caddyfile conversion\nPlease first read the [Caddyfile Concepts](https://caddyserver.com/docs/caddyfile/concepts) documentation to understand the structure of a Caddyfile.\n\nAny label prefixed with `caddy` will be converted into a Caddyfile config, following these rules:\n\n### Tokens and arguments\n\nKeys are the directive name, and values are whitespace separated arguments:\n```\ncaddy.directive: arg1 arg2\n↓\n{\n\tdirective arg1 arg2\n}\n```\n\nIf you need whitespace or line-breaks inside one of the arguments, use double-quotes or backticks around it:\n```\ncaddy.respond: / \"Hello World\" 200\n↓\n{\n\trespond / \"Hello World\" 200\n}\n```\n```\ncaddy.respond: / `Hello\\nWorld` 200\n↓\n{\n\trespond / `Hello\nWorld` 200\n}\n```\n```\ncaddy.respond: |\n\t/ `Hello\n\tWorld` 200\n↓\n{\n\trespond / `Hello\nWorld` 200\n}\n```\n\nDots represent nesting, and grouping is done automatically:\n```\ncaddy.directive: argA  \ncaddy.directive.subdirA: valueA  \ncaddy.directive.subdirB: valueB1 valueB2\n↓\n{\n\tdirective argA {  \n\t\tsubdirA valueA  \n\t\tsubdirB valueB1 valueB2  \n\t}\n}\n```\n\nArguments for the parent directive are optional (e.g. no arguments to `directive`, setting subdirective `subdirA` directly):\n```\ncaddy.directive.subdirA: valueA\n↓\n{\n\tdirective {\n\t\tsubdirA valueA\n\t}\n}\n```\n\nLabels with empty values generate a directive without any arguments:\n```\ncaddy.directive:\n↓\n{\n\tdirective\n}\n```\n\n### Ordering and isolation\n\nBe aware that directives are subject to be sorted according to the default [directive order](https://caddyserver.com/docs/caddyfile/directives#directive-order) defined by Caddy, when the Caddyfile is parsed (after the Caddyfile is generated from labels).\n\n[Directives](https://caddyserver.com/docs/caddyfile/directives) from labels are ordered alphabetically by default:\n```\ncaddy.bbb: value\ncaddy.aaa: value\n↓\n{\n\taaa value \n\tbbb value\n}\n```\n\nSuffix _&lt;number&gt; isolates directives that otherwise would be grouped:\n```\ncaddy.route_0.a: value\ncaddy.route_1.b: value\n↓\n{\n\troute {\n\t\ta value\n\t}\n\troute {\n\t\tb value\n\t}\n}\n```\n\nPrefix &lt;number&gt;_ isolates directives but also defines a custom ordering for directives (mainly relevant within [`route`](https://caddyserver.com/docs/caddyfile/directives/route) blocks), and directives without order prefix will go last:\n```\ncaddy.1_bbb: value\ncaddy.2_aaa: value\ncaddy.3_aaa: value\n↓\n{\n\tbbb value\n\taaa value\n\taaa value\n}\n```\n\n### Sites, snippets and global options\n\nA label `caddy` creates a [site block](https://caddyserver.com/docs/caddyfile/concepts):\n```\ncaddy: example.com\ncaddy.respond: \"Hello World\" 200\n↓\nexample.com {\n\trespond \"Hello World\" 200\n}\n```\n\nOr a [snippet](https://caddyserver.com/docs/caddyfile/concepts#snippets):\n```\ncaddy: (encode)\ncaddy.encode: zstd gzip\n↓\n(encode) {\n\tencode zstd gzip\n}\n```\n\nIt's also possible to isolate Caddy configurations using suffix _&lt;number&gt;:\n```\ncaddy_0: (snippet)\ncaddy_0.tls: internal\ncaddy_1: site-a.com\ncaddy_1.import: snippet\ncaddy_2: site-b.com\ncaddy_2.import: snippet\n↓\n(snippet) {\n\ttls internal\n}\nsite_a {\n\timport snippet\n}\nsite_b {\n\timport snippet\n}\n```\n\n[Global options](https://caddyserver.com/docs/caddyfile/options) can be defined by not setting any value for `caddy`. They can be set in any container/service, including caddy-docker-proxy itself. [Here is an example](examples/standalone.yaml#L19)\n```\ncaddy.email: you@example.com\n↓\n{\n\temail you@example.com\n}\n```\n\n[Named matchers](https://caddyserver.com/docs/caddyfile/matchers#named-matchers) can be created using `@` inside labels:\n```\ncaddy: localhost\ncaddy.@match.path: /sourcepath /sourcepath/*\ncaddy.reverse_proxy: @match localhost:6001\n↓\nlocalhost {\n\t@match {\n\t\tpath /sourcepath /sourcepath/*\n\t}\n\treverse_proxy @match localhost:6001\n}\n```\n\n### Go templates\n\n[Golang templates](https://golang.org/pkg/text/template/) can be used inside label values to increase flexibility. From templates, you have access to current Docker resource information. But, keep in mind that the structure that describes a Docker container is different from a service.\n\nWhile you can access a service name like this:\n```\ncaddy.respond: /info \"{{.Spec.Name}}\"\n↓\nrespond /info \"myservice\"\n```\n\nThe equivalent to access a container name would be:\n```\ncaddy.respond: /info \"{{index .Names 0}}\"\n↓\nrespond /info \"mycontainer\"\n```\n\nSometimes it's not possile to have labels with empty values, like when using some UI to manage Docker. If that's the case, you can also use our support for go lang templates to generate empty labels.\n```\ncaddy.directive: {{\"\"}}\n↓\ndirective\n```\n\n## Template functions\n\nThe following functions are available for use inside templates:\n\n### upstreams\n\nReturns all addresses for the current Docker resource separated by whitespace.\n\nFor services, that would be the service DNS name when **proxy-service-tasks** is **false**, or all running tasks IPs when **proxy-service-tasks** is **true**.\n\nFor containers, that would be the container IPs.\n\nOnly containers/services that are connected to Caddy ingress networks are used.\n\n:warning: caddy docker proxy does a best effort to automatically detect what are the ingress networks. But that logic fails on some scenarios: [#207](https://github.com/lucaslorentz/caddy-docker-proxy/issues/207). To have a more resilient solution, you can manually configure Caddy ingress network using CLI option `ingress-networks`, environment variable `CADDY_INGRESS_NETWORKS`. You can also specify the ingress network per container/service by adding to it a label `caddy_ingress_network` with the network name.\n\nUsage: `upstreams [http|https] [port]`  \n\nExamples:\n```\ncaddy.reverse_proxy: {{upstreams}}\n↓\nreverse_proxy 192.168.0.1 192.168.0.2\n```\n```\ncaddy.reverse_proxy: {{upstreams https}}\n↓\nreverse_proxy https://192.168.0.1 https://192.168.0.2\n```\n```\ncaddy.reverse_proxy: {{upstreams 8080}}\n↓\nreverse_proxy 192.168.0.1:8080 192.168.0.2:8080\n```\n```\ncaddy.reverse_proxy: {{upstreams http 8080}}\n↓\nreverse_proxy http://192.168.0.1:8080 http://192.168.0.2:8080\n```\n\n:warning: Be carefull with quotes around upstreams. Quotes should only be added when using yaml. \n```\ncaddy.reverse_proxy: \"{{upstreams}}\"\n↓\nreverse_proxy \"192.168.0.1 192.168.0.2\"\n```\n\n## Examples\nProxying all requests to a domain to the container\n```yml\ncaddy: example.com\ncaddy.reverse_proxy: {{upstreams}}\n```\n\nProxying all requests to a domain to a subpath in the container\n```yml\ncaddy: example.com\ncaddy.rewrite: * /target{path}\ncaddy.reverse_proxy: {{upstreams}}\n```\n\nProxying requests matching a path, while stripping that path prefix\n```yml\ncaddy: example.com\ncaddy.handle_path: /source/*\ncaddy.handle_path.0_reverse_proxy: {{upstreams}}\n```\n\nProxying requests matching a path, rewriting to different path prefix\n```yml\ncaddy: example.com\ncaddy.handle_path: /source/*\ncaddy.handle_path.0_rewrite: * /target{uri}\ncaddy.handle_path.1_reverse_proxy: {{upstreams}}\n```\n\nProxying all websocket requests, and all requests to `/api*`, to the container\n```yml\ncaddy: example.com\ncaddy.@ws.0_header: Connection *Upgrade*\ncaddy.@ws.1_header: Upgrade websocket\ncaddy.0_reverse_proxy: @ws {{upstreams}}\ncaddy.1_reverse_proxy: /api* {{upstreams}}\n```\n\nProxying multiple domains, with certificates for each\n```yml\ncaddy: example.com, example.org, www.example.com, www.example.org\ncaddy.reverse_proxy: {{upstreams}}\n```\n\n**More community-maintained examples are available in the [Wiki](https://github.com/lucaslorentz/caddy-docker-proxy/wiki).**\n\n## Docker configs\n\n> Note: This is for Docker Swarm only. Alternatively, use `CADDY_DOCKER_CADDYFILE_PATH` or `-caddyfile-path`\n\nYou can also add raw text to your Caddyfile using Docker configs. Just add Caddy label prefix to your configs and the whole config content will be inserted at the beginning of the generated Caddyfile, outside any server blocks.\n\n[Here is an example](examples/standalone.yaml#L4)\n\n## Proxying services vs containers\nCaddy docker proxy is able to proxy to swarm services or raw containers. Both features are always enabled, and what will differentiate the proxy target is where you define your labels.\n\n### Services\nTo proxy swarm services, labels should be defined at service level. In a docker-compose file, labels should be _inside_ `deploy`, like:\n```yml\nservices:\n  foo:\n    deploy:\n      labels:\n        caddy: service.example.com\n        caddy.reverse_proxy: {{upstreams}}\n```\n\nCaddy will use service DNS name as target or all service tasks IPs, depending on configuration **proxy-service-tasks**.\n\n### Containers\nTo proxy containers, labels should be defined at container level. In a docker-compose file, labels should be _outside_ `deploy`, like:\n```yml\nservices:\n  foo:\n    labels:\n      caddy: service.example.com\n      caddy.reverse_proxy: {{upstreams}}\n```\n\n## Execution modes\n\nEach caddy docker proxy instance can be executed in one of the following modes.\n\n### Server\n\nActs as a proxy to your Docker resources. The server starts without any configuration, and will not serve anything until it is configured by a \"controller\".\n\nIn order to make a server discoverable and configurable by controllers, you need to mark it with label `caddy_controlled_server` and define the controller network via CLI option `controller-network` or environment variable `CADDY_CONTROLLER_NETWORK`.\n\nServer instances doesn't need access to Docker host socket and you can run it in manager or worker nodes.\n\n[Configuration example](examples/distributed.yaml#L5)\n\n### Controller\n\nController monitors your Docker cluster, generates Caddy configuration and pushes to all servers it finds in your Docker cluster.\n\nWhen controller instances are connected to more than one network, it is also necessary to define the controller network via CLI option `controller-network` or environment variable `CADDY_CONTROLLER_NETWORK`.\n\nController instances require access to Docker host socket.\n\nA single controller instance can configure all server instances in your cluster.\n\n[Configuration example](examples/distributed.yaml#L21)\n\n### Standalone (default)\n\nThis mode executes a controller and a server in the same instance and doesn't require additional configuration.\n\n[Configuration example](examples/standalone.yaml#L11)\n\n## Caddy CLI\n\nThis plugin extends caddy's CLI with the command `caddy docker-proxy`.\n\nRun `caddy help docker-proxy` to see all available flags.\n\n```\nUsage of docker-proxy:\n  --caddyfile-path string\n        Path to a base Caddyfile that will be extended with Docker sites\n  --envfile\n        Path to an environment file with environment variables in the KEY=VALUE format to load into the Caddy process\n  --controller-network string\n        Network allowed to configure Caddy server in CIDR notation. Ex: 10.200.200.0/24\n  --ingress-networks string\n        Comma separated name of ingress networks connecting Caddy servers to containers.\n        When not defined, networks attached to controller container are considered ingress networks\n  --docker-sockets\n        Comma separated docker sockets\n        When not defined, DOCKER_HOST (or default docker socket if DOCKER_HOST not defined)\n  --docker-certs-path\n        Comma separated cert path, you could use empty value when no cert path for the concern index docker socket like cert_path0,,cert_path2\n  --docker-apis-version\n        Comma separated apis version, you could use empty value when no api version for the concern index docker socket like cert_path0,,cert_path2\n  --label-prefix string\n        Prefix for Docker labels (default \"caddy\")\n  --mode\n        Which mode this instance should run: standalone | controller | server\n  --polling-interval duration\n        Interval Caddy should manually check Docker for a new Caddyfile (default 30s)\n  --event-throttle-interval duration\n        Interval to throttle caddyfile updates triggered by docker events (default 100ms)\n  --process-caddyfile\n        Process Caddyfile before loading it, removing invalid servers (default true)\n  --proxy-service-tasks\n        Proxy to service tasks instead of service load balancer (default true)\n  --scan-stopped-containers\n        Scan stopped containers and use their labels for Caddyfile generation (default false)\n```\n\nThose flags can also be set via environment variables:\n\n```\nCADDY_DOCKER_CADDYFILE_PATH=<string>\nCADDY_DOCKER_ENVFILE=<string>\nCADDY_CONTROLLER_NETWORK=<string>\nCADDY_INGRESS_NETWORKS=<string>\nCADDY_DOCKER_SOCKETS=<string>\nCADDY_DOCKER_CERTS_PATH=<string>\nCADDY_DOCKER_APIS_VERSION=<string>\nCADDY_DOCKER_LABEL_PREFIX=<string>\nCADDY_DOCKER_MODE=<string>\nCADDY_DOCKER_POLLING_INTERVAL=<duration>\nCADDY_DOCKER_PROCESS_CADDYFILE=<bool>\nCADDY_DOCKER_PROXY_SERVICE_TASKS=<bool>\nCADDY_DOCKER_SCAN_STOPPED_CONTAINERS=<bool>\nCADDY_DOCKER_NO_SCOPE=<bool, default scope used>\n```\n\nCheck **examples** folder to see how to set them on a Docker Compose file.\n\n## Docker images\nDocker images are available at Docker hub:\nhttps://hub.docker.com/r/lucaslorentz/caddy-docker-proxy/\n\n### Choosing the version numbers\nThe safest approach is to use a full version numbers like 0.1.3.\nThat way you lock to a specific build version that works well for you.\n\nBut you can also use partial version numbers like 0.1. That means you will receive the most recent 0.1.x image. You will automatically receive updates without breaking changes.\n\n### Chosing between default or alpine images\nOur default images are very small and safe because they only contain Caddy executable.\nBut they're also quite hard to troubleshoot because they don't have shell or any other Linux utilities like curl or dig.\n\nThe alpine images variant are based on the Linux Alpine image, a very small Linux distribution with shell and basic utilities tools. Use `-alpine` images if you want to trade security and small size for a better troubleshooting experience.\n\n### CI images\nImages with the `ci` tag suffix means they were automatically generated by automated builds.\nCI images reflect the current state of master branch and their stability is not guaranteed.\nYou may use CI images if you want to help testing the latest features before they're officially released.\n\n### ARM architecture images\nCurrently we provide linux x86_64 images by default.\n\nYou can also find images for other architectures like `arm32v6` images that can be used on Raspberry Pi.\n\n### Windows images\nWe recently introduced experimental windows containers images with the tag suffix `nanoserver-ltsc2022`.\n\nBe aware that this needs to be tested further.\n\nThis is an example of how to mount the windows Docker pipe using CLI:\n```shell\n$ docker run --rm -it -v //./pipe/docker_engine://./pipe/docker_engine lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022\n```\n\n### Custom images\nIf you need additional Caddy plugins, or need to use a specific version of Caddy, then you may use the `builder` variant of the [official Caddy Docker image](https://hub.docker.com/_/caddy) to make your own `Dockerfile`.\n\nThe main difference from the instructions on the official image is that you must override `CMD` to have the container run using the `caddy docker-proxy` command provided by this plugin.\n\n```Dockerfile\nARG CADDY_VERSION=2.6.1\nFROM caddy:${CADDY_VERSION}-builder AS builder\n\nRUN xcaddy build \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2 \\\n    --with <additional-plugins>\n\nFROM caddy:${CADDY_VERSION}-alpine\n\nCOPY --from=builder /usr/bin/caddy /usr/bin/caddy\n\nCMD [\"caddy\", \"docker-proxy\"]\n```\n\n## Connecting to Docker Host\nThe default connection to Docker host varies per platform:\n* At Unix: `unix:///var/run/docker.sock`\n* At Windows: `npipe:////./pipe/docker_engine`\n\nYou can modify Docker connection using the following environment variables:\n\n* **DOCKER_HOST**: to set the URL to the Docker server.\n* **DOCKER_API_VERSION**: to set the version of the API to reach, leave empty for latest.\n* **DOCKER_CERT_PATH**: to load the TLS certificates from.\n* **DOCKER_TLS_VERIFY**: to enable or disable TLS verification; off by default.\n\n## Volumes\nOn a production Docker swarm cluster, it's **very important** to store Caddy folder on persistent storage. Otherwise Caddy will re-issue certificates every time it is restarted, exceeding Let's Encrypt's quota.\n\nTo do that, map a persistent Docker volume to `/data` folder.\n\nFor resilient production deployments, use multiple Caddy replicas and map `/data` folder to a volume that supports multiple mounts, like Network File Sharing Docker volumes plugins.\n\nMultiple Caddy instances automatically orchestrate certificate issuing between themselves when sharing `/data` folder.\n\n## Trying it\n\n### With docker-compose file\n\nClone this repository.\n\nDeploy the compose file to swarm cluster:\n```\n$ docker stack deploy -c examples/standalone.yaml caddy-docker-demo\n```\n\nWait a bit for services to startup...\n\nNow you can access each service/container using different URLs\n```\n$ curl -k --resolve whoami0.example.com:443:127.0.0.1 https://whoami0.example.com\n$ curl -k --resolve whoami1.example.com:443:127.0.0.1 https://whoami1.example.com\n$ curl -k --resolve whoami2.example.com:443:127.0.0.1 https://whoami2.example.com\n$ curl -k --resolve whoami3.example.com:443:127.0.0.1 https://whoami3.example.com\n$ curl -k --resolve config.example.com:443:127.0.0.1 https://config.example.com\n$ curl -k --resolve echo0.example.com:443:127.0.0.1 https://echo0.example.com/sourcepath/something\n```\n\nAfter testing, delete the demo stack:\n```\n$ docker stack rm caddy-docker-demo\n```\n\n### With run commands\n\n```\n$ docker run --name caddy -d -p 443:443 -v /var/run/docker.sock:/var/run/docker.sock lucaslorentz/caddy-docker-proxy:ci-alpine\n\n$ docker run --name whoami0 -d -l caddy=whoami0.example.com -l \"caddy.reverse_proxy={{upstreams 80}}\" -l caddy.tls=internal traefik/whoami\n\n$ docker run --name whoami1 -d -l caddy=whoami1.example.com -l \"caddy.reverse_proxy={{upstreams 80}}\" -l caddy.tls=internal traefik/whoami\n\n$ curl -k --resolve whoami0.example.com:443:127.0.0.1 https://whoami0.example.com\n$ curl -k --resolve whoami1.example.com:443:127.0.0.1 https://whoami1.example.com\n\n$ docker rm -f caddy whoami0 whoami1\n```\n\n## Building it\n\nYou can build Caddy using [xcaddy](https://github.com/caddyserver/xcaddy) or [caddy docker builder](https://hub.docker.com/_/caddy).\n\nUse module name **github.com/lucaslorentz/caddy-docker-proxy/v2** to add this plugin to your build.\n"
        },
        {
          "name": "build-images-linux.sh",
          "type": "blob",
          "size": 1.4921875,
          "content": "#!/bin/bash\n\nset -e\n\ndocker buildx create --use\ndocker run --privileged --rm tonistiigi/binfmt --install all\n\nfind artifacts/binaries -type f -exec chmod +x {} \\;\n\nPLATFORMS=\"linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64\"\nOUTPUT=\"type=local,dest=local\"\nTAGS=\nTAGS_ALPINE=\n\nif [[ \"${GITHUB_REF}\" == \"refs/heads/master\" ]]; then\n    echo \"Building and pushing CI images\"\n\n    docker login -u lucaslorentz -p \"$DOCKER_PASSWORD\"\n\n    OUTPUT=\"type=registry\"\n    TAGS=\"-t lucaslorentz/caddy-docker-proxy:ci\"\n    TAGS_ALPINE=\"-t lucaslorentz/caddy-docker-proxy:ci-alpine\"\nfi\n\nif [[ \"${GITHUB_REF}\" =~ ^refs/tags/v[0-9]+\\.[0-9]+\\.[0-9]+(-.*)?$ ]]; then\n    RELEASE_VERSION=$(echo $GITHUB_REF | cut -c11-)\n\n    echo \"Releasing version ${RELEASE_VERSION}...\"\n\n    docker login -u lucaslorentz -p \"$DOCKER_PASSWORD\"\n\n    PATCH_VERSION=$(echo $RELEASE_VERSION | cut -c2-)\n    MINOR_VERSION=$(echo $PATCH_VERSION | cut -d. -f-2)\n\n    OUTPUT=\"type=registry\"\n    TAGS=\"-t lucaslorentz/caddy-docker-proxy:latest \\\n        -t lucaslorentz/caddy-docker-proxy:${PATCH_VERSION} \\\n        -t lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}\"\n    TAGS_ALPINE=\"-t lucaslorentz/caddy-docker-proxy:alpine \\\n        -t lucaslorentz/caddy-docker-proxy:${PATCH_VERSION}-alpine \\\n        -t lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}-alpine\"\nfi\n\ndocker buildx build -f Dockerfile . \\\n    -o $OUTPUT \\\n    --platform $PLATFORMS \\\n    $TAGS\n\ndocker buildx build -f Dockerfile-alpine . \\\n    -o $OUTPUT \\\n    --platform $PLATFORMS \\\n    $TAGS_ALPINE\n"
        },
        {
          "name": "build-images-windows.sh",
          "type": "blob",
          "size": 2.419921875,
          "content": "#!/bin/bash\n\nset -e\n\ndocker build -f Dockerfile-nanoserver . \\\n    --build-arg TARGETPLATFORM=windows/amd64 \\\n    --build-arg SERVERCORE_VERSION=1809 \\\n    --build-arg NANOSERVER_VERSION=1809 \\\n    -t lucaslorentz/caddy-docker-proxy:ci-nanoserver-1809\n\ndocker build -f Dockerfile-nanoserver . \\\n    --build-arg TARGETPLATFORM=windows/amd64 \\\n    --build-arg SERVERCORE_VERSION=ltsc2022 \\\n    --build-arg NANOSERVER_VERSION=ltsc2022 \\\n    -t lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022\n\nif [[ \"${GITHUB_REF}\" == \"refs/heads/master\" ]]; then\n    echo \"Pushing CI images\"\n    \n    docker login -u lucaslorentz -p \"$DOCKER_PASSWORD\"\n    docker push lucaslorentz/caddy-docker-proxy:ci-nanoserver-1809\n    docker push lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022\nfi\n\nif [[ \"${GITHUB_REF}\" =~ ^refs/tags/v[0-9]+\\.[0-9]+\\.[0-9]+(-.*)?$ ]]; then\n    RELEASE_VERSION=$(echo $GITHUB_REF | cut -c11-)\n\n    echo \"Releasing version ${RELEASE_VERSION}...\"\n\n    docker login -u lucaslorentz -p \"$DOCKER_PASSWORD\"\n\n    PATCH_VERSION=$(echo $RELEASE_VERSION | cut -c2-)\n    MINOR_VERSION=$(echo $PATCH_VERSION | cut -d. -f-2)\n\n    docker login -u lucaslorentz -p \"$DOCKER_PASSWORD\"\n\n    # nanoserver-1809\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-1809 lucaslorentz/caddy-docker-proxy:nanoserver-1809\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-1809 lucaslorentz/caddy-docker-proxy:${PATCH_VERSION}-nanoserver-1809\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-1809 lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}-nanoserver-1809\n    docker push lucaslorentz/caddy-docker-proxy:nanoserver-1809\n    docker push lucaslorentz/caddy-docker-proxy:${PATCH_VERSION}-nanoserver-1809\n    docker push lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}-nanoserver-1809\n\n    # nanoserver-ltsc2022\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022 lucaslorentz/caddy-docker-proxy:nanoserver-ltsc2022\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022 lucaslorentz/caddy-docker-proxy:${PATCH_VERSION}-nanoserver-ltsc2022\n    docker tag lucaslorentz/caddy-docker-proxy:ci-nanoserver-ltsc2022 lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}-nanoserver-ltsc2022\n    docker push lucaslorentz/caddy-docker-proxy:nanoserver-ltsc2022\n    docker push lucaslorentz/caddy-docker-proxy:${PATCH_VERSION}-nanoserver-ltsc2022\n    docker push lucaslorentz/caddy-docker-proxy:${MINOR_VERSION}-nanoserver-ltsc2022\nfi\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 1.08984375,
          "content": "#!/bin/bash\n\nset -e\n\necho ==PARAMETERS==\necho ARTIFACTS: \"${ARTIFACTS:=./artifacts}\"\n\ngo vet ./...\ngo test -race ./...\n\ngo install github.com/caddyserver/xcaddy/cmd/xcaddy@latest\n\n# AMD64\nCGO_ENABLED=0 GOARCH=amd64 GOOS=linux \\\n    xcaddy build \\\n    --output ${ARTIFACTS}/binaries/linux/amd64/caddy \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2=$PWD\n\n# ARM\nCGO_ENABLED=0 GOARCH=arm GOARM=6 GOOS=linux \\\n    xcaddy build \\\n    --output ${ARTIFACTS}/binaries/linux/arm/v6/caddy \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2=$PWD\n\nCGO_ENABLED=0 GOARCH=arm GOARM=7 GOOS=linux \\\n    xcaddy build \\\n    --output ${ARTIFACTS}/binaries/linux/arm/v7/caddy \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2=$PWD\n\nCGO_ENABLED=0 GOARCH=arm64 GOOS=linux \\\n    xcaddy build \\\n    --output ${ARTIFACTS}/binaries/linux/arm64/caddy \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2=$PWD\n\n# AMD64 WINDOWS\nCGO_ENABLED=0 GOARCH=amd64 GOOS=windows \\\n    xcaddy build \\\n    --output ${ARTIFACTS}/binaries/windows/amd64/caddy.exe \\\n    --with github.com/lucaslorentz/caddy-docker-proxy/v2=$PWD\n"
        },
        {
          "name": "caddyfile",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd.go",
          "type": "blob",
          "size": 8.744140625,
          "content": "package caddydockerproxy\n\nimport (\n\t\"flag\"\n\t\"net\"\n\t\"os\"\n\t\"regexp\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/caddyserver/caddy/v2\"\n\tcaddycmd \"github.com/caddyserver/caddy/v2/cmd\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/config\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/generator\"\n\n\t\"go.uber.org/zap\"\n)\n\nvar isTrue = regexp.MustCompile(\"(?i)^(true|yes|1)$\")\n\nfunc init() {\n\tcaddycmd.RegisterCommand(caddycmd.Command{\n\t\tName:  \"docker-proxy\",\n\t\tFunc:  cmdFunc,\n\t\tUsage: \"<command>\",\n\t\tShort: \"Run caddy as a docker proxy\",\n\t\tFlags: func() *flag.FlagSet {\n\t\t\tfs := flag.NewFlagSet(\"docker-proxy\", flag.ExitOnError)\n\n\t\t\tfs.Bool(\"mode\", false,\n\t\t\t\t\"Which mode this instance should run: standalone | controller | server\")\n\n\t\t\tfs.String(\"docker-sockets\", \"\",\n\t\t\t\t\"Docker sockets comma separate\")\n\n\t\t\tfs.String(\"docker-certs-path\", \"\",\n\t\t\t\t\"Docker socket certs path comma separate\")\n\n\t\t\tfs.String(\"docker-apis-version\", \"\",\n\t\t\t\t\"Docker socket apis version comma separate\")\n\n\t\t\tfs.String(\"controller-network\", \"\",\n\t\t\t\t\"Network allowed to configure caddy server in CIDR notation. Ex: 10.200.200.0/24\")\n\n\t\t\tfs.String(\"ingress-networks\", \"\",\n\t\t\t\t\"Comma separated name of ingress networks connecting caddy servers to containers.\\n\"+\n\t\t\t\t\t\"When not defined, networks attached to controller container are considered ingress networks\")\n\n\t\t\tfs.String(\"caddyfile-path\", \"\",\n\t\t\t\t\"Path to a base Caddyfile that will be extended with docker sites\")\n\n\t\t\tfs.String(\"envfile\", \"\",\n\t\t\t\t\"Environment file with environment variables in the KEY=VALUE format\")\n\n\t\t\tfs.String(\"label-prefix\", generator.DefaultLabelPrefix,\n\t\t\t\t\"Prefix for Docker labels\")\n\n\t\t\tfs.Bool(\"proxy-service-tasks\", true,\n\t\t\t\t\"Proxy to service tasks instead of service load balancer\")\n\n\t\t\tfs.Bool(\"process-caddyfile\", true,\n\t\t\t\t\"Process Caddyfile before loading it, removing invalid servers\")\n\n\t\t\tfs.Bool(\"scan-stopped-containers\", false,\n\t\t\t\t\"Scan stopped containers and use its labels for caddyfile generation\")\n\n\t\t\tfs.Duration(\"polling-interval\", 30*time.Second,\n\t\t\t\t\"Interval caddy should manually check docker for a new caddyfile\")\n\n\t\t\tfs.Duration(\"event-throttle-interval\", 100*time.Millisecond,\n\t\t\t\t\"Interval to throttle caddyfile updates triggered by docker events\")\n\n\t\t\treturn fs\n\t\t}(),\n\t})\n}\n\nfunc cmdFunc(flags caddycmd.Flags) (int, error) {\n\tcaddy.TrapSignals()\n\n\toptions := createOptions(flags)\n\tlog := logger()\n\n\tif options.Mode&config.Server == config.Server {\n\t\tlog.Info(\"Running caddy proxy server\")\n\n\t\terr := caddy.Run(&caddy.Config{\n\t\t\tAdmin: &caddy.AdminConfig{\n\t\t\t\tListen: getAdminListen(options),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn 1, err\n\t\t}\n\t}\n\n\tif options.Mode&config.Controller == config.Controller {\n\t\tlog.Info(\"Running caddy proxy controller\")\n\t\tloader := CreateDockerLoader(options)\n\t\tif err := loader.Start(); err != nil {\n\t\t\tif err := caddy.Stop(); err != nil {\n\t\t\t\treturn 1, err\n\t\t\t}\n\n\t\t\treturn 1, err\n\t\t}\n\t}\n\n\tselect {}\n}\n\nfunc getAdminListen(options *config.Options) string {\n\tif options.ControllerNetwork != nil {\n\t\tifaces, err := net.Interfaces()\n\t\tlog := logger()\n\n\t\tif err != nil {\n\t\t\tlog.Error(\"Failed to get network interfaces\", zap.Error(err))\n\t\t}\n\t\tfor _, i := range ifaces {\n\t\t\taddrs, err := i.Addrs()\n\t\t\tif err != nil {\n\t\t\t\tlog.Error(\"Failed to get network interface addresses\", zap.Error(err))\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tfor _, a := range addrs {\n\t\t\t\tswitch v := a.(type) {\n\t\t\t\tcase *net.IPAddr:\n\t\t\t\t\tif options.ControllerNetwork.Contains(v.IP) {\n\t\t\t\t\t\treturn \"tcp/\" + v.IP.String() + \":2019\"\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase *net.IPNet:\n\t\t\t\t\tif options.ControllerNetwork.Contains(v.IP) {\n\t\t\t\t\t\treturn \"tcp/\" + v.IP.String() + \":2019\"\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"tcp/localhost:2019\"\n}\n\nfunc createOptions(flags caddycmd.Flags) *config.Options {\n\tcaddyfilePath := flags.String(\"caddyfile-path\")\n\tenvFile := flags.String(\"envfile\")\n\tlabelPrefixFlag := flags.String(\"label-prefix\")\n\tproxyServiceTasksFlag := flags.Bool(\"proxy-service-tasks\")\n\tprocessCaddyfileFlag := flags.Bool(\"process-caddyfile\")\n\tscanStoppedContainersFlag := flags.Bool(\"scan-stopped-containers\")\n\tpollingIntervalFlag := flags.Duration(\"polling-interval\")\n\teventThrottleIntervalFlag := flags.Duration(\"event-throttle-interval\")\n\tmodeFlag := flags.String(\"mode\")\n\tcontrollerSubnetFlag := flags.String(\"controller-network\")\n\tdockerSocketsFlag := flags.String(\"docker-sockets\")\n\tdockerCertsPathFlag := flags.String(\"docker-certs-path\")\n\tdockerAPIsVersionFlag := flags.String(\"docker-apis-version\")\n\tingressNetworksFlag := flags.String(\"ingress-networks\")\n\n\toptions := &config.Options{}\n\n\tvar mode string\n\tif modeEnv := os.Getenv(\"CADDY_DOCKER_MODE\"); modeEnv != \"\" {\n\t\tmode = modeEnv\n\t} else {\n\t\tmode = modeFlag\n\t}\n\tswitch mode {\n\tcase \"controller\":\n\t\toptions.Mode = config.Controller\n\t\tbreak\n\tcase \"server\":\n\t\toptions.Mode = config.Server\n\tdefault:\n\t\toptions.Mode = config.Standalone\n\t}\n\n\tlog := logger()\n\n\tif dockerSocketsEnv := os.Getenv(\"CADDY_DOCKER_SOCKETS\"); dockerSocketsEnv != \"\" {\n\t\toptions.DockerSockets = strings.Split(dockerSocketsEnv, \",\")\n\t} else if dockerSocketsFlag != \"\" {\n\t\toptions.DockerSockets = strings.Split(dockerSocketsFlag, \",\")\n\t} else {\n\t\toptions.DockerSockets = nil\n\t}\n\n\tif dockerCertsPathEnv := os.Getenv(\"CADDY_DOCKER_CERTS_PATH\"); dockerCertsPathEnv != \"\" {\n\t\toptions.DockerCertsPath = strings.Split(dockerCertsPathEnv, \",\")\n\t} else {\n\t\toptions.DockerCertsPath = strings.Split(dockerCertsPathFlag, \",\")\n\t}\n\n\tif dockerAPIsVersionEnv := os.Getenv(\"CADDY_DOCKER_APIS_VERSION\"); dockerAPIsVersionEnv != \"\" {\n\t\toptions.DockerAPIsVersion = strings.Split(dockerAPIsVersionEnv, \",\")\n\t} else {\n\t\toptions.DockerAPIsVersion = strings.Split(dockerAPIsVersionFlag, \",\")\n\t}\n\n\tif controllerIPRangeEnv := os.Getenv(\"CADDY_CONTROLLER_NETWORK\"); controllerIPRangeEnv != \"\" {\n\t\t_, ipNet, err := net.ParseCIDR(controllerIPRangeEnv)\n\t\tif err != nil {\n\t\t\tlog.Error(\"Failed to parse CADDY_CONTROLLER_NETWORK\", zap.String(\"CADDY_CONTROLLER_NETWORK\", controllerIPRangeEnv), zap.Error(err))\n\t\t} else if ipNet != nil {\n\t\t\toptions.ControllerNetwork = ipNet\n\t\t}\n\t} else if controllerSubnetFlag != \"\" {\n\t\t_, ipNet, err := net.ParseCIDR(controllerSubnetFlag)\n\t\tif err != nil {\n\t\t\tlog.Error(\"Failed to parse controller-network\", zap.String(\"controller-network\", controllerSubnetFlag), zap.Error(err))\n\t\t} else if ipNet != nil {\n\t\t\toptions.ControllerNetwork = ipNet\n\t\t}\n\t}\n\n\tif ingressNetworksEnv := os.Getenv(\"CADDY_INGRESS_NETWORKS\"); ingressNetworksEnv != \"\" {\n\t\toptions.IngressNetworks = strings.Split(ingressNetworksEnv, \",\")\n\t} else if ingressNetworksFlag != \"\" {\n\t\toptions.IngressNetworks = strings.Split(ingressNetworksFlag, \",\")\n\t}\n\n\tif caddyfilePathEnv := os.Getenv(\"CADDY_DOCKER_CADDYFILE_PATH\"); caddyfilePathEnv != \"\" {\n\t\toptions.CaddyfilePath = caddyfilePathEnv\n\t} else {\n\t\toptions.CaddyfilePath = caddyfilePath\n\t}\n\n\tif envFileEnv := os.Getenv(\"CADDY_DOCKER_ENVFILE\"); envFileEnv != \"\" {\n\t\toptions.EnvFile = envFileEnv\n\t} else {\n\t\toptions.EnvFile = envFile\n\t}\n\n\tif labelPrefixEnv := os.Getenv(\"CADDY_DOCKER_LABEL_PREFIX\"); labelPrefixEnv != \"\" {\n\t\toptions.LabelPrefix = labelPrefixEnv\n\t} else {\n\t\toptions.LabelPrefix = labelPrefixFlag\n\t}\n\toptions.ControlledServersLabel = options.LabelPrefix + \"_controlled_server\"\n\n\tif proxyServiceTasksEnv := os.Getenv(\"CADDY_DOCKER_PROXY_SERVICE_TASKS\"); proxyServiceTasksEnv != \"\" {\n\t\toptions.ProxyServiceTasks = isTrue.MatchString(proxyServiceTasksEnv)\n\t} else {\n\t\toptions.ProxyServiceTasks = proxyServiceTasksFlag\n\t}\n\n\tif processCaddyfileEnv := os.Getenv(\"CADDY_DOCKER_PROCESS_CADDYFILE\"); processCaddyfileEnv != \"\" {\n\t\toptions.ProcessCaddyfile = isTrue.MatchString(processCaddyfileEnv)\n\t} else {\n\t\toptions.ProcessCaddyfile = processCaddyfileFlag\n\t}\n\n\tif scanStoppedContainersEnv := os.Getenv(\"CADDY_DOCKER_SCAN_STOPPED_CONTAINERS\"); scanStoppedContainersEnv != \"\" {\n\t\toptions.ScanStoppedContainers = isTrue.MatchString(scanStoppedContainersEnv)\n\t} else {\n\t\toptions.ScanStoppedContainers = scanStoppedContainersFlag\n\t}\n\n\tif pollingIntervalEnv := os.Getenv(\"CADDY_DOCKER_POLLING_INTERVAL\"); pollingIntervalEnv != \"\" {\n\t\tif p, err := time.ParseDuration(pollingIntervalEnv); err != nil {\n\t\t\tlog.Error(\"Failed to parse CADDY_DOCKER_POLLING_INTERVAL\", zap.String(\"CADDY_DOCKER_POLLING_INTERVAL\", pollingIntervalEnv), zap.Error(err))\n\t\t\toptions.PollingInterval = pollingIntervalFlag\n\t\t} else {\n\t\t\toptions.PollingInterval = p\n\t\t}\n\t} else {\n\t\toptions.PollingInterval = pollingIntervalFlag\n\t}\n\n\tif eventThrottleIntervalEnv := os.Getenv(\"CADDY_DOCKER_EVENT_THROTTLE_INTERVAL\"); eventThrottleIntervalEnv != \"\" {\n\t\tif p, err := time.ParseDuration(eventThrottleIntervalEnv); err != nil {\n\t\t\tlog.Error(\"Failed to parse CADDY_DOCKER_EVENT_THROTTLE_INTERVAL\", zap.String(\"CADDY_DOCKER_EVENT_THROTTLE_INTERVAL\", eventThrottleIntervalEnv), zap.Error(err))\n\t\t\toptions.EventThrottleInterval = pollingIntervalFlag\n\t\t} else {\n\t\t\toptions.EventThrottleInterval = p\n\t\t}\n\t} else {\n\t\toptions.EventThrottleInterval = eventThrottleIntervalFlag\n\t}\n\n\treturn options\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 8.0166015625,
          "content": "module github.com/lucaslorentz/caddy-docker-proxy/v2\n\ngo 1.21.0\n\ntoolchain go1.22.8\n\nrequire (\n\tgithub.com/caddyserver/caddy/v2 v2.8.4\n\tgithub.com/docker/docker v25.0.6+incompatible\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/stretchr/testify v1.9.0\n\tgo.uber.org/zap v1.27.0\n)\n\nrequire (\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96 // indirect\n\tgithub.com/BurntSushi/toml v1.3.2 // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.2.0 // indirect\n\tgithub.com/Masterminds/sprig/v3 v3.2.3 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.0 // indirect\n\tgithub.com/alecthomas/chroma/v2 v2.13.0 // indirect\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0 // indirect\n\tgithub.com/aryann/difflib v0.0.0-20210328193216-ff5ff6dc229b // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/caddyserver/certmagic v0.21.3 // indirect\n\tgithub.com/caddyserver/zerossl v0.1.3 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash v1.1.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/chzyer/readline v1.5.1 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.3 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgraph-io/badger v1.6.2 // indirect\n\tgithub.com/dgraph-io/badger/v2 v2.2007.4 // indirect\n\tgithub.com/dgraph-io/ristretto v0.1.0 // indirect\n\tgithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/dlclark/regexp2 v1.11.0 // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.6.0 // indirect\n\tgithub.com/go-chi/chi/v5 v5.0.12 // indirect\n\tgithub.com/go-jose/go-jose/v3 v3.0.3 // indirect\n\tgithub.com/go-kit/kit v0.13.0 // indirect\n\tgithub.com/go-kit/log v0.2.1 // indirect\n\tgithub.com/go-logfmt/logfmt v0.6.0 // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-sql-driver/mysql v1.7.1 // indirect\n\tgithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/glog v1.2.0 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/google/cel-go v0.20.1 // indirect\n\tgithub.com/google/certificate-transparency-go v1.1.8-0.20240110162603-74a5dd331745 // indirect\n\tgithub.com/google/go-tpm v0.9.0 // indirect\n\tgithub.com/google/go-tspi v0.3.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20231212022811-ec68065c825e // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/huandu/xstrings v1.3.3 // indirect\n\tgithub.com/imdario/mergo v0.3.12 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jackc/chunkreader/v2 v2.0.1 // indirect\n\tgithub.com/jackc/pgconn v1.14.3 // indirect\n\tgithub.com/jackc/pgio v1.0.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgproto3/v2 v2.3.3 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a // indirect\n\tgithub.com/jackc/pgtype v1.14.0 // indirect\n\tgithub.com/jackc/pgx/v4 v4.18.3 // indirect\n\tgithub.com/klauspost/compress v1.17.8 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/libdns/libdns v0.2.2 // indirect\n\tgithub.com/manifoldco/promptui v0.9.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d // indirect\n\tgithub.com/mholt/acmez/v2 v2.0.1 // indirect\n\tgithub.com/miekg/dns v1.1.59 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/go-ps v1.0.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.13.2 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/pires/go-proxyproto v0.7.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_golang v1.19.1 // indirect\n\tgithub.com/prometheus/client_model v0.5.0 // indirect\n\tgithub.com/prometheus/common v0.48.0 // indirect\n\tgithub.com/prometheus/procfs v0.12.0 // indirect\n\tgithub.com/quic-go/qpack v0.4.0 // indirect\n\tgithub.com/quic-go/quic-go v0.44.0 // indirect\n\tgithub.com/rs/xid v1.5.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/shopspring/decimal v1.2.0 // indirect\n\tgithub.com/shurcooL/sanitized_anchor_name v1.0.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/slackhq/nebula v1.6.1 // indirect\n\tgithub.com/smallstep/certificates v0.26.1 // indirect\n\tgithub.com/smallstep/go-attestation v0.4.4-0.20240109183208-413678f90935 // indirect\n\tgithub.com/smallstep/nosql v0.6.1 // indirect\n\tgithub.com/smallstep/pkcs7 v0.0.0-20231024181729-3b98ecc1ca81 // indirect\n\tgithub.com/smallstep/scep v0.0.0-20231024192529-aee96d7ad34d // indirect\n\tgithub.com/smallstep/truststore v0.13.0 // indirect\n\tgithub.com/spf13/cast v1.4.1 // indirect\n\tgithub.com/spf13/cobra v1.8.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stoewer/go-strcase v1.2.0 // indirect\n\tgithub.com/tailscale/tscert v0.0.0-20240517230440-bbccfbf48933 // indirect\n\tgithub.com/urfave/cli v1.22.14 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgithub.com/yuin/goldmark v1.7.1 // indirect\n\tgithub.com/yuin/goldmark-highlighting/v2 v2.0.0-20230729083705-37449abec8cc // indirect\n\tgithub.com/zeebo/blake3 v0.2.3 // indirect\n\tgo.etcd.io/bbolt v1.3.9 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/autoprop v0.42.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/aws v1.17.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/b3 v1.17.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/jaeger v1.17.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/ot v1.17.0 // indirect\n\tgo.opentelemetry.io/otel v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.21.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.27.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.2.0 // indirect\n\tgo.step.sm/cli-utils v0.9.0 // indirect\n\tgo.step.sm/crypto v0.45.0 // indirect\n\tgo.step.sm/linkedca v0.20.1 // indirect\n\tgo.uber.org/automaxprocs v1.5.3 // indirect\n\tgo.uber.org/mock v0.4.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo.uber.org/zap/exp v0.2.0 // indirect\n\tgolang.org/x/crypto v0.28.0 // indirect\n\tgolang.org/x/crypto/x509roots/fallback v0.0.0-20240507223354-67b13616a595 // indirect\n\tgolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/net v0.30.0 // indirect\n\tgolang.org/x/sync v0.8.0 // indirect\n\tgolang.org/x/sys v0.26.0 // indirect\n\tgolang.org/x/term v0.25.0 // indirect\n\tgolang.org/x/text v0.19.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240520151616-dc85e6b867a5 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 // indirect\n\tgoogle.golang.org/grpc v1.64.1 // indirect\n\tgoogle.golang.org/protobuf v1.35.1 // indirect\n\tgopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tgotest.tools/v3 v3.5.1 // indirect\n\thowett.net/plist v1.0.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 62.6865234375,
          "content": "cloud.google.com/go v0.112.1 h1:uJSeirPke5UNZHIb4SxfZklVSiWWVqW4oXlETwZziwM=\ncloud.google.com/go/auth v0.4.1 h1:Z7YNIhlWRtrnKlZke7z3GMqzvuYzdc2z98F9D1NV5Hg=\ncloud.google.com/go/auth v0.4.1/go.mod h1:QVBuVEKpCn4Zp58hzRGvL0tjRGU0YqdRTdCHM1IHnro=\ncloud.google.com/go/auth/oauth2adapt v0.2.2 h1:+TTV8aXpjeChS9M+aTtN/TjdQnzJvmzKFt//oWu7HX4=\ncloud.google.com/go/auth/oauth2adapt v0.2.2/go.mod h1:wcYjgpZI9+Yu7LyYBg4pqSiaRkfEK3GQcpb7C/uyF1Q=\ncloud.google.com/go/compute v1.25.1 h1:ZRpHJedLtTpKgr3RV1Fx23NuaAEN1Zfx9hw1u4aJdjU=\ncloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=\ncloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncloud.google.com/go/iam v1.1.8 h1:r7umDwhj+BQyz0ScZMp4QrGXjSTI3ZINnpgU2nlB/K0=\ncloud.google.com/go/iam v1.1.8/go.mod h1:GvE6lyMmfxXauzNq8NbgJbeVQNspG+tcdL/W8QO1+zE=\ncloud.google.com/go/kms v1.16.0 h1:1yZsRPhmargZOmY+fVAh8IKiR9HzCb0U1zsxb5g2nRY=\ncloud.google.com/go/kms v1.16.0/go.mod h1:olQUXy2Xud+1GzYfiBO9N0RhjsJk5IJLU6n/ethLXVc=\ncloud.google.com/go/longrunning v0.5.7 h1:WLbHekDbjK1fVFD3ibpFFVoyizlLRl73I7YKuAKilhU=\ncloud.google.com/go/longrunning v0.5.7/go.mod h1:8GClkudohy1Fxm3owmBGid8W0pSgodEMwEAztp38Xng=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96 h1:cTp8I5+VIoKjsnZuH8vjyaysT/ses3EvZeaV/1UkF2M=\ngithub.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96/go.mod h1:bOvUY6CB00SOBii9/FifXqc0awNKxLFCL/+pkDPuyl8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Masterminds/semver/v3 v3.2.0 h1:3MEsd0SM6jqZojhjLWWeBY+Kcjy9i6MQAeY7YgDP83g=\ngithub.com/Masterminds/semver/v3 v3.2.0/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/Masterminds/sprig/v3 v3.2.3 h1:eL2fZNezLomi0uOLqjQoN6BfsDD+fyLtgbJMAj9n6YA=\ngithub.com/Masterminds/sprig/v3 v3.2.3/go.mod h1:rXcFaZ2zZbLRJv/xSysmlgIM1u11eBaRMhvYXJNkGuM=\ngithub.com/Microsoft/go-winio v0.6.0 h1:slsWYD/zyx7lCXoZVlvQrj0hPTM1HI4+v1sIda2yDvg=\ngithub.com/Microsoft/go-winio v0.6.0/go.mod h1:cTAf44im0RAYeL23bpB+fzCyDH2MJiz2BO69KH/soAE=\ngithub.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/alecthomas/assert/v2 v2.6.0 h1:o3WJwILtexrEUk3cUVal3oiQY2tfgr/FHWiz/v2n4FU=\ngithub.com/alecthomas/assert/v2 v2.6.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/chroma/v2 v2.2.0/go.mod h1:vf4zrexSH54oEjJ7EdB65tGNHmH3pGZmVkgTP5RHvAs=\ngithub.com/alecthomas/chroma/v2 v2.13.0 h1:VP72+99Fb2zEcYM0MeaWJmV+xQvz5v5cxRHd+ooU1lI=\ngithub.com/alecthomas/chroma/v2 v2.13.0/go.mod h1:BUGjjsD+ndS6eX37YgTchSEG+Jg9Jv1GiZs9sqPqztk=\ngithub.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=\ngithub.com/aryann/difflib v0.0.0-20210328193216-ff5ff6dc229b h1:uUXgbcPDK3KpW29o4iy7GtuappbWT0l5NaMo9H9pJDw=\ngithub.com/aryann/difflib v0.0.0-20210328193216-ff5ff6dc229b/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=\ngithub.com/aws/aws-sdk-go-v2 v1.26.1 h1:5554eUqIYVWpU0YmeeYZ0wU64H2VLBs8TlhRB2L+EkA=\ngithub.com/aws/aws-sdk-go-v2 v1.26.1/go.mod h1:ffIFB97e2yNsv4aTSGkqtHnppsIJzw7G7BReUZ3jCXM=\ngithub.com/aws/aws-sdk-go-v2/config v1.27.13 h1:WbKW8hOzrWoOA/+35S5okqO/2Ap8hkkFUzoW8Hzq24A=\ngithub.com/aws/aws-sdk-go-v2/config v1.27.13/go.mod h1:XLiyiTMnguytjRER7u5RIkhIqS8Nyz41SwAWb4xEjxs=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.13 h1:XDCJDzk/u5cN7Aple7D/MiAhx1Rjo/0nueJ0La8mRuE=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.13/go.mod h1:FMNcjQrmuBYvOTZDtOLCIu0esmxjF7RuA/89iSXWzQI=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.1 h1:FVJ0r5XTHSmIHJV6KuDmdYhEpvlHpiSd38RQWhut5J4=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.1/go.mod h1:zusuAeqezXzAB24LGuzuekqMAEgWkVYukBec3kr3jUg=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.5 h1:aw39xVGeRWlWx9EzGVnhOR4yOjQDHPQ6o6NmBlscyQg=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.5/go.mod h1:FSaRudD0dXiMPK2UjknVwwTYyZMRsHv3TtkabsZih5I=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.5 h1:PG1F3OD1szkuQPzDw3CIQsRIrtTlUC3lP84taWzHlq0=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.5/go.mod h1:jU1li6RFryMz+so64PpKtudI+QzbKoIEivqdf6LNpOc=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.0 h1:hT8rVHwugYE2lEfdFE0QWVo81lF7jMrYJVDWI+f+VxU=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.0/go.mod h1:8tu/lYfQfFe6IGnaOdrpVgEL2IrrDOf6/m9RQum4NkY=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.2 h1:Ji0DY1xUsUr3I8cHps0G+XM3WWU16lP6yG8qu1GAZAs=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.2/go.mod h1:5CsjAbs3NlGQyZNFACh+zztPDI7fU6eW9QsxjfnuBKg=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.7 h1:ogRAwT1/gxJBcSWDMZlgyFUM962F51A5CRhDLbxLdmo=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.7/go.mod h1:YCsIZhXfRPLFFCl5xxY+1T9RKzOKjCut+28JSX2DnAk=\ngithub.com/aws/aws-sdk-go-v2/service/kms v1.31.1 h1:5wtyAwuUiJiM3DHYeGZmP5iMonM7DFBWAEaaVPHYZA0=\ngithub.com/aws/aws-sdk-go-v2/service/kms v1.31.1/go.mod h1:2snWQJQUKsbN66vAawJuOGX7dr37pfOq9hb0tZDGIqQ=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.20.6 h1:o5cTaeunSpfXiLTIBx5xo2enQmiChtu1IBbzXnfU9Hs=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.20.6/go.mod h1:qGzynb/msuZIE8I75DVRCUXw3o3ZyBmUvMwQ2t/BrGM=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.24.0 h1:Qe0r0lVURDDeBQJ4yP+BOrJkvkiCo/3FH/t+wY11dmw=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.24.0/go.mod h1:mUYPBhaF2lGiukDEjJX2BLRRKTmoUSitGDUgM4tRxak=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.28.7 h1:et3Ta53gotFR4ERLXXHIHl/Uuk1qYpP5uU7cvNql8ns=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.28.7/go.mod h1:FZf1/nKNEkHdGGJP/cI2MoIMquumuRK6ol3QQJNDxmw=\ngithub.com/aws/smithy-go v1.20.2 h1:tbp628ireGtzcHDDmLT/6ADHidqnwgF57XOXZe6tp4Q=\ngithub.com/aws/smithy-go v1.20.2/go.mod h1:krry+ya/rV9RDcV/Q16kpu6ypI4K2czasz0NC3qS14E=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/caddyserver/caddy/v2 v2.8.4 h1:q3pe0wpBj1OcHFZ3n/1nl4V4bxBrYoSoab7rL9BMYNk=\ngithub.com/caddyserver/caddy/v2 v2.8.4/go.mod h1:vmDAHp3d05JIvuhc24LmnxVlsZmWnUwbP5WMjzcMPWw=\ngithub.com/caddyserver/certmagic v0.21.3 h1:pqRRry3yuB4CWBVq9+cUqu+Y6E2z8TswbhNx1AZeYm0=\ngithub.com/caddyserver/certmagic v0.21.3/go.mod h1:Zq6pklO9nVRl3DIFUw9gVUfXKdpc/0qwTUAQMBlfgtI=\ngithub.com/caddyserver/zerossl v0.1.3 h1:onS+pxp3M8HnHpN5MMbOMyNjmTheJyWRaZYwn+YTAyA=\ngithub.com/caddyserver/zerossl v0.1.3/go.mod h1:CxA0acn7oEGO6//4rtrRjYgEoa4MFw/XofZnrYwGqG4=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/logex v1.2.1 h1:XHDu3E6q+gdHgsdTPH6ImJMIp436vR6MPtH8gP05QzM=\ngithub.com/chzyer/logex v1.2.1/go.mod h1:JLbx6lG2kDbNRFnfkgvh4eRJRPX1QCoOIWomwysCBrQ=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/readline v1.5.1 h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=\ngithub.com/chzyer/readline v1.5.1/go.mod h1:Eh+b79XXUwfKfcPLepksvw2tcLE/Ct21YObkaSkeBlk=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/chzyer/test v1.0.0 h1:p3BQDXSxOhOG0P9z6/hGnII4LGiEPOYBhs8asl/fC04=\ngithub.com/chzyer/test v1.0.0/go.mod h1:2JlltgoNkt4TW/z9V/IzDdFaMTM2JPIi26O1pF38GC8=\ngithub.com/cockroachdb/apd v1.1.0 h1:3LFP3629v+1aKXU5Q37mxmRxX/pIu1nijXydLShEq5I=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-etcd v2.0.0+incompatible/go.mod h1:Jez6KQU2B/sWsbdaef3ED8NzMklzPG4d5KIOhIy30Tk=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3 h1:qMCsGGgs+MAzDFyp9LpAe1Lqy/fY/qCovCm0qnXZOBM=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger v1.6.2 h1:mNw0qs90GVgGGWylh0umH5iag1j6n/PeJtNvL6KY/x8=\ngithub.com/dgraph-io/badger v1.6.2/go.mod h1:JW2yswe3V058sS0kZ2h/AXeDSqFjxnZcRrVH//y2UQE=\ngithub.com/dgraph-io/badger/v2 v2.2007.4 h1:TRWBQg8UrlUhaFdco01nO2uXwzKS7zd+HVdwV/GHc4o=\ngithub.com/dgraph-io/badger/v2 v2.2007.4/go.mod h1:vSw/ax2qojzbN6eXHIx6KPKtCSHJN/Uz0X0VPruTIhk=\ngithub.com/dgraph-io/ristretto v0.0.2/go.mod h1:KPxhHT9ZxKefz+PCeOGsrHpl1qZ7i70dGTu2u+Ahh6E=\ngithub.com/dgraph-io/ristretto v0.0.3-0.20200630154024-f66de99634de/go.mod h1:KPxhHT9ZxKefz+PCeOGsrHpl1qZ7i70dGTu2u+Ahh6E=\ngithub.com/dgraph-io/ristretto v0.1.0 h1:Jv3CGQHp9OjuMBSne1485aDpUkTKEcUqF+jm/LuerPI=\ngithub.com/dgraph-io/ristretto v0.1.0/go.mod h1:fux0lOrBhrVCJd3lcTHsIJhq1T2rokOu6v9Vcb3Q9ug=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 h1:fAjc9m62+UWV/WAFKLNi6ZS0675eEUC9y3AlwSbQu1Y=\ngithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\ngithub.com/dlclark/regexp2 v1.7.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\ngithub.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/docker/docker v25.0.6+incompatible h1:5cPwbwriIcsua2REJe8HqQV+6WlWc1byg2QSXzBxBGg=\ngithub.com/docker/docker v25.0.6+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fxamacker/cbor/v2 v2.6.0 h1:sU6J2usfADwWlYDAFhZBQ6TnLFBHxgesMrQfQgk1tWA=\ngithub.com/fxamacker/cbor/v2 v2.6.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/go-chi/chi/v5 v5.0.12 h1:9euLV5sTrTNTRUU9POmDUvfxyj6LAABLUcEWO+JJb4s=\ngithub.com/go-chi/chi/v5 v5.0.12/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-jose/go-jose/v3 v3.0.3 h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=\ngithub.com/go-jose/go-jose/v3 v3.0.3/go.mod h1:5b+7YgP7ZICgJDBdfjZaIt+H/9L9T/YQrVfLAMboGkQ=\ngithub.com/go-kit/kit v0.4.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.13.0 h1:OoneCcHKHQ03LfBpoQCUfCluwd2Vt3ohz+kvbJneZAU=\ngithub.com/go-kit/kit v0.13.0/go.mod h1:phqEHMMUbyrCFCTgH48JueqrM3md2HcAZ8N3XE4FKDg=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-kit/log v0.2.1 h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=\ngithub.com/go-kit/log v0.2.1/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logfmt/logfmt v0.5.1/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=\ngithub.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-sql-driver/mysql v1.7.1 h1:lUIinVbN1DY0xBg0eMOzmmtGoHwWBbvnWubQUrtU8EI=\ngithub.com/go-sql-driver/mysql v1.7.1/go.mod h1:OXbVy3sEdcQ2Doequ6Z5BW6fXNQTmx+9S1MCJN5yJMI=\ngithub.com/go-stack/stack v1.6.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gofrs/uuid v4.0.0+incompatible h1:1SD/1F5pU8p29ybwgQSwpQk+mwdRrXCYuPhW6m+TnJw=\ngithub.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.2.0 h1:uCdmnmatrKCgMBlM4rMuJZWOkPDqdbZPnrMXDY4gI68=\ngithub.com/golang/glog v1.2.0/go.mod h1:6AhwSGph0fcJtXVM/PEHPqZlFeoLxhs7/t5UDAwmO+w=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v1.1.2 h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=\ngithub.com/google/btree v1.1.2/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/cel-go v0.20.1 h1:nDx9r8S3L4pE61eDdt8igGj8rf5kjYR3ILxWIpWNi84=\ngithub.com/google/cel-go v0.20.1/go.mod h1:kWcIzTsPX0zmQ+H3TirHstLLf9ep5QTsZBN9u4dOYLg=\ngithub.com/google/certificate-transparency-go v1.0.21/go.mod h1:QeJfpSbVSfYc7RgB3gJFj9cbuQMMchQxrWXz8Ruopmg=\ngithub.com/google/certificate-transparency-go v1.1.8-0.20240110162603-74a5dd331745 h1:heyoXNxkRT155x4jTAiSv5BVSVkueifPUm+Q8LUXMRo=\ngithub.com/google/certificate-transparency-go v1.1.8-0.20240110162603-74a5dd331745/go.mod h1:zN0wUQgV9LjwLZeFHnrAbQi8hzMVvEWePyk+MhPOk7k=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-tpm v0.9.0 h1:sQF6YqWMi+SCXpsmS3fd21oPy/vSddwZry4JnmltHVk=\ngithub.com/google/go-tpm v0.9.0/go.mod h1:FkNVkc6C+IsvDI9Jw1OveJmxGZUUaKxtrpOS47QWKfU=\ngithub.com/google/go-tpm-tools v0.4.4 h1:oiQfAIkc6xTy9Fl5NKTeTJkBTlXdHsxAofmQyxBKY98=\ngithub.com/google/go-tpm-tools v0.4.4/go.mod h1:T8jXkp2s+eltnCDIsXR84/MTcVU9Ja7bh3Mit0pa4AY=\ngithub.com/google/go-tspi v0.3.0 h1:ADtq8RKfP+jrTyIWIZDIYcKOMecRqNJFOew2IT0Inus=\ngithub.com/google/go-tspi v0.3.0/go.mod h1:xfMGI3G0PhxCdNVcYr1C4C+EizojDg/TXuX5by8CiHI=\ngithub.com/google/pprof v0.0.0-20231212022811-ec68065c825e h1:bwOy7hAFd0C91URzMIEBfr6BAz29yk7Qj0cy6S7DJlU=\ngithub.com/google/pprof v0.0.0-20231212022811-ec68065c825e/go.mod h1:czg5+yv1E0ZGTi6S6vVK1mke0fV+FaUhNGcd6VRS9Ik=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.4 h1:9gWcmF85Wvq4ryPFvGFaOgPIs1AQX0d0bcbGw4Z96qg=\ngithub.com/googleapis/gax-go/v2 v2.12.4/go.mod h1:KYEYLorsnIGDi/rPC8b5TdlB9kbKoFubselGIoBMCwI=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/huandu/xstrings v1.3.3 h1:/Gcsuc1x8JVbJ9/rlye4xZnVAbEkGauT8lbebqcQws4=\ngithub.com/huandu/xstrings v1.3.3/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/imdario/mergo v0.3.11/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/imdario/mergo v0.3.12 h1:b6R2BslTbIEToALKP7LxUvijTsNI9TAe80pLWN2g/HU=\ngithub.com/imdario/mergo v0.3.12/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=\ngithub.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/chunkreader/v2 v2.0.1 h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=\ngithub.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=\ngithub.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=\ngithub.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=\ngithub.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=\ngithub.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=\ngithub.com/jackc/pgconn v1.9.1-0.20210724152538-d89c8390a530/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=\ngithub.com/jackc/pgconn v1.14.3 h1:bVoTr12EGANZz66nZPkMInAV/KHD2TxH9npjXXgiB3w=\ngithub.com/jackc/pgconn v1.14.3/go.mod h1:RZbme4uasqzybK2RK5c65VsHxoyaml09lx3tXOcO/VM=\ngithub.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\ngithub.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=\ngithub.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=\ngithub.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65 h1:DadwsjnMwFjfWc9y5Wi/+Zz7xoE5ALHsRQlOctkOiHc=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65/go.mod h1:5R2h2EEX+qri8jOWMbJCtaPWkrrNc7OHwsp2TCqp7ak=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.3.3 h1:1HLSx5H+tXR9pW3in3zaztoEwQYRC9SQaYUHjTSUOag=\ngithub.com/jackc/pgproto3/v2 v2.3.3/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a h1:bbPeKD0xmW/Y25WS6cokEszi5g+S0QxI/d45PkRi7Nk=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=\ngithub.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=\ngithub.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=\ngithub.com/jackc/pgtype v1.8.1-0.20210724151600-32e20a603178/go.mod h1:C516IlIV9NKqfsMCXTdChteoXmwgUceqaLfjg2e3NlM=\ngithub.com/jackc/pgtype v1.14.0 h1:y+xUdabmyMkJLyApYuPj38mW+aAIqCe5uuBB51rH3Vw=\ngithub.com/jackc/pgtype v1.14.0/go.mod h1:LUMuVrfsFfdKGLw+AFFVv6KtHOFMwRgDDzBt76IqCA4=\ngithub.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=\ngithub.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=\ngithub.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=\ngithub.com/jackc/pgx/v4 v4.12.1-0.20210724153913-640aa07df17c/go.mod h1:1QD0+tgSXP7iUjYm9C1NxKhny7lq6ee99u/z+IHFcgs=\ngithub.com/jackc/pgx/v4 v4.18.3 h1:dE2/TrEsGX3RBprb3qryqSV9Y60iZN1C6i8IrmW9/BA=\ngithub.com/jackc/pgx/v4 v4.18.3/go.mod h1:Ey4Oru5tH5sB6tV7hDmfWFahwF15Eb7DNXlRKx2CkVw=\ngithub.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.12.3/go.mod h1:8dP1Hq4DHOhN9w426knH3Rhby4rFm6D8eO+e+Dq5Gzg=\ngithub.com/klauspost/compress v1.17.8 h1:YcnTYrq7MikUT7k0Yb5eceMmALQPYBW/Xltxn0NAMnU=\ngithub.com/klauspost/compress v1.17.8/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/klauspost/cpuid/v2 v2.0.12/go.mod h1:g2LTdtYhdyuGPqyWyv7qRAmj1WBqxuObKfj5c0PQa7c=\ngithub.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=\ngithub.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/libdns/libdns v0.2.2 h1:O6ws7bAfRPaBsgAYt8MDe2HcNBGC29hkZ9MX2eUSX3s=\ngithub.com/libdns/libdns v0.2.2/go.mod h1:4Bj9+5CQiNMVGf87wjX4CY3HQJypUHRuLvlsfsZqLWQ=\ngithub.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/manifoldco/promptui v0.9.0 h1:3V4HzJk1TtXW1MTZMP7mdlwbBpIinw3HztaIlYthEiA=\ngithub.com/manifoldco/promptui v0.9.0/go.mod h1:ka04sppxSGFAtxX0qhlYQjISsg9mR4GWtQEhdbn6Pgg=\ngithub.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d h1:5PJl274Y63IEHC+7izoQE9x6ikvDFZS2mDVS3drnohI=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/mholt/acmez/v2 v2.0.1 h1:3/3N0u1pLjMK4sNEAFSI+bcvzbPhRpY383sy1kLHJ6k=\ngithub.com/mholt/acmez/v2 v2.0.1/go.mod h1:fX4c9r5jYwMyMsC+7tkYRxHibkOTgta5DIFGoe67e1U=\ngithub.com/miekg/dns v1.1.59 h1:C9EXc/UToRwKLhK5wKU/I4QVsBUc8kE6MkHBkeypWZs=\ngithub.com/miekg/dns v1.1.59/go.mod h1:nZpewl5p6IvctfgrckopVx2OlSEHPRO/U4SYkRklrEk=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-ps v1.0.0 h1:i6ampVEEF4wQFF+bkYfwYgY+F/uYJDktmvLPf7qIgjc=\ngithub.com/mitchellh/go-ps v1.0.0/go.mod h1:J4lOc8z8yJs6vUwklHw2XEIiT4z4C40KtWVN3nvg8Pg=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/onsi/ginkgo/v2 v2.13.2 h1:Bi2gGVkfn6gQcjNjZJVO8Gf0FHzMPf2phUei9tejVMs=\ngithub.com/onsi/ginkgo/v2 v2.13.2/go.mod h1:XStQ8QcGwLyF4HdfcZB8SFOS/MWCgDuXMSBe6zrvLgM=\ngithub.com/onsi/gomega v1.29.0 h1:KIA/t2t5UBzoirT4H9tsML45GEbo3ouUnBHsCfD2tVg=\ngithub.com/onsi/gomega v1.29.0/go.mod h1:9sxs+SwGrKI0+PWe4Fxa9tFQQBG5xSsSbMXOI8PPpoQ=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/peterbourgon/diskv/v3 v3.0.1 h1:x06SQA46+PKIUftmEujdwSEpIx8kR+M9eLYsUxeYveU=\ngithub.com/peterbourgon/diskv/v3 v3.0.1/go.mod h1:kJ5Ny7vLdARGU3WUuy6uzO6T0nb/2gWcT1JiBvRmb5o=\ngithub.com/pires/go-proxyproto v0.7.0 h1:IukmRewDQFWC7kfnb66CSomk2q/seBuilHBYFwyq0Hs=\ngithub.com/pires/go-proxyproto v0.7.0/go.mod h1:Vz/1JPY/OACxWGQNIRY2BeyDmpoaWmEP40O9LbuiFR4=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v1.19.1 h1:wZWJDwK+NameRJuPGDhlnFgx8e8HN3XHQeLaYJFJBOE=\ngithub.com/prometheus/client_golang v1.19.1/go.mod h1:mP78NwGzrVks5S2H6ab8+ZZGJLZUq1hoULYBAYBw1Ho=\ngithub.com/prometheus/client_model v0.5.0 h1:VQw1hfvPvk3Uv6Qf29VrPF32JB6rtbgI6cYPYQjL0Qw=\ngithub.com/prometheus/client_model v0.5.0/go.mod h1:dTiFglRmd66nLR9Pv9f0mZi7B7fk5Pm3gvsjB5tr+kI=\ngithub.com/prometheus/common v0.48.0 h1:QO8U2CdOzSn1BBsmXJXduaaW+dY/5QLjfB8svtSzKKE=\ngithub.com/prometheus/common v0.48.0/go.mod h1:0/KsvlIEfPQCQ5I2iNSAWKPZziNCvRs5EC6ILDTlAPc=\ngithub.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=\ngithub.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=\ngithub.com/quic-go/qpack v0.4.0 h1:Cr9BXA1sQS2SmDUWjSofMPNKmvF6IiIfDRmgU0w1ZCo=\ngithub.com/quic-go/qpack v0.4.0/go.mod h1:UZVnYIfi5GRk+zI9UMaCPsmZ2xKJP7XBUvVyT1Knj9A=\ngithub.com/quic-go/quic-go v0.44.0 h1:So5wOr7jyO4vzL2sd8/pD9Kesciv91zSk8BoFngItQ0=\ngithub.com/quic-go/quic-go v0.44.0/go.mod h1:z4cx/9Ny9UtGITIPzmPTXh1ULfOyWh4qGQlpnPcWmek=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\ngithub.com/rs/xid v1.5.0 h1:mKX4bl4iPYJtEIxp6CYiUuLQ/8DYMoz0PUdtGgMFRVc=\ngithub.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\ngithub.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=\ngithub.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=\ngithub.com/schollz/jsonstore v1.1.0 h1:WZBDjgezFS34CHI+myb4s8GGpir3UMpy7vWoCeO0n6E=\ngithub.com/schollz/jsonstore v1.1.0/go.mod h1:15c6+9guw8vDRyozGjN3FoILt0wpruJk9Pi66vjaZfg=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0 h1:PdmoCO6wvbs+7yrJyMORt4/BmY5IYyJwS/kOiWx8mHo=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/slackhq/nebula v1.6.1 h1:/OCTR3abj0Sbf2nGoLUrdDXImrCv0ZVFpVPP5qa0DsM=\ngithub.com/slackhq/nebula v1.6.1/go.mod h1:UmkqnXe4O53QwToSl/gG7sM4BroQwAB7dd4hUaT6MlI=\ngithub.com/smallstep/assert v0.0.0-20200723003110-82e2b9b3b262 h1:unQFBIznI+VYD1/1fApl1A+9VcBk+9dcqGfnePY87LY=\ngithub.com/smallstep/assert v0.0.0-20200723003110-82e2b9b3b262/go.mod h1:MyOHs9Po2fbM1LHej6sBUT8ozbxmMOFG+E+rx/GSGuc=\ngithub.com/smallstep/certificates v0.26.1 h1:FIUliEBcExSfJJDhRFA/s8aZgMIFuorexnRSKQd884o=\ngithub.com/smallstep/certificates v0.26.1/go.mod h1:OQMrW39IrGKDViKSHrKcgSQArMZ8c7EcjhYKK7mYqis=\ngithub.com/smallstep/go-attestation v0.4.4-0.20240109183208-413678f90935 h1:kjYvkvS/Wdy0PVRDUAA0gGJIVSEZYhiAJtfwYgOYoGA=\ngithub.com/smallstep/go-attestation v0.4.4-0.20240109183208-413678f90935/go.mod h1:vNAduivU014fubg6ewygkAvQC0IQVXqdc8vaGl/0er4=\ngithub.com/smallstep/nosql v0.6.1 h1:X8IBZFTRIp1gmuf23ne/jlD/BWKJtDQbtatxEn7Et1Y=\ngithub.com/smallstep/nosql v0.6.1/go.mod h1:vrN+CftYYNnDM+DQqd863ATynvYFm/6FuY9D4TeAm2Y=\ngithub.com/smallstep/pkcs7 v0.0.0-20231024181729-3b98ecc1ca81 h1:B6cED3iLJTgxpdh4tuqByDjRRKan2EvtnOfHr2zHJVg=\ngithub.com/smallstep/pkcs7 v0.0.0-20231024181729-3b98ecc1ca81/go.mod h1:SoUAr/4M46rZ3WaLstHxGhLEgoYIDRqxQEXLOmOEB0Y=\ngithub.com/smallstep/scep v0.0.0-20231024192529-aee96d7ad34d h1:06LUHn4Ia2X6syjIaCMNaXXDNdU+1N/oOHynJbWgpXw=\ngithub.com/smallstep/scep v0.0.0-20231024192529-aee96d7ad34d/go.mod h1:4d0ub42ut1mMtvGyMensjuHYEUpRrASvkzLEJvoRQcU=\ngithub.com/smallstep/truststore v0.13.0 h1:90if9htAOblavbMeWlqNLnO9bsjjgVv2hQeQJCi/py4=\ngithub.com/smallstep/truststore v0.13.0/go.mod h1:3tmMp2aLKZ/OA/jnFUB0cYPcho402UG2knuJoPh4j7A=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spaolacci/murmur3 v1.1.0 h1:7c1g84S4BPRrfL5Xrdp6fOJ206sU9y293DDHaoy0bLI=\ngithub.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.4.1 h1:s0hze+J0196ZfEMTs80N7UlFt0BDuQ7Q+JDnHiMWKdA=\ngithub.com/spf13/cast v1.4.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v0.0.5/go.mod h1:3K3wKZymM7VvHMDS9+Akkh4K60UwM26emMESw8tLCHU=\ngithub.com/spf13/cobra v1.8.0 h1:7aJaZx1B85qltLMc546zn58BxxfZdR/W22ej9CFoEf0=\ngithub.com/spf13/cobra v1.8.0/go.mod h1:WXLWApfZ71AjXPya3WOlMsY9yMs7YeiHhFVlvLyhcho=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.3.2/go.mod h1:ZiWeW+zYFKm7srdB9IoDzzZXaJaI5eL9QjNiN/DMA2s=\ngithub.com/stoewer/go-strcase v1.2.0 h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\ngithub.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tailscale/tscert v0.0.0-20240517230440-bbccfbf48933 h1:pV0H+XIvFoP7pl1MRtyPXh5hqoxB5I7snOtTHgrn6HU=\ngithub.com/tailscale/tscert v0.0.0-20240517230440-bbccfbf48933/go.mod h1:kNGUQ3VESx3VZwRwA9MSCUegIl6+saPL8Noq82ozCaU=\ngithub.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=\ngithub.com/urfave/cli v1.22.14 h1:ebbhrRiGK2i4naQJr+1Xj92HXZCrK7MsyTS/ob3HnAk=\ngithub.com/urfave/cli v1.22.14/go.mod h1:X0eDS6pD6Exaclxm99NJ3FiCDRED7vIHpx2mDOHLvkA=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark v1.4.15/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark v1.7.1 h1:3bajkSilaCbjdKVsKdZjZCLBNPL9pYzrCakKaf4U49U=\ngithub.com/yuin/goldmark v1.7.1/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=\ngithub.com/yuin/goldmark-highlighting/v2 v2.0.0-20230729083705-37449abec8cc h1:+IAOyRda+RLrxa1WC7umKOZRsGq4QrFFMYApOeHzQwQ=\ngithub.com/yuin/goldmark-highlighting/v2 v2.0.0-20230729083705-37449abec8cc/go.mod h1:ovIvrum6DQJA4QsJSovrkC4saKHQVs7TvcaeO8AIl5I=\ngithub.com/zeebo/assert v1.1.0 h1:hU1L1vLTHsnO8x8c9KAR5GmM5QscxHg5RNU5z5qbUWY=\ngithub.com/zeebo/assert v1.1.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/blake3 v0.2.3 h1:TFoLXsjeXqRNFxSbk35Dk4YtszE/MQQGK10BH4ptoTg=\ngithub.com/zeebo/blake3 v0.2.3/go.mod h1:mjJjZpnsyIVtVgTOSpJ9vmRE4wgDeyt2HU3qXvvKCaQ=\ngithub.com/zeebo/pcg v1.0.1 h1:lyqfGeWiv4ahac6ttHs+I5hwtH/+1mrhlCtVNQM2kHo=\ngithub.com/zeebo/pcg v1.0.1/go.mod h1:09F0S9iiKrwn9rlI5yjLkmrug154/YRW6KnnXVDM/l4=\ngithub.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=\ngo.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\ngo.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=\ngo.opentelemetry.io/contrib/propagators/autoprop v0.42.0 h1:s2RzYOAqHVgG23q8fPWYChobUoZM6rJZ98EnylJr66w=\ngo.opentelemetry.io/contrib/propagators/autoprop v0.42.0/go.mod h1:Mv/tWNtZn+NbALDb2XcItP0OM3lWWZjAfSroINxfW+Y=\ngo.opentelemetry.io/contrib/propagators/aws v1.17.0 h1:IX8d7l2uRw61BlmZBOTQFaK+y22j6vytMVTs9wFrO+c=\ngo.opentelemetry.io/contrib/propagators/aws v1.17.0/go.mod h1:pAlCYRWff4uGqRXOVn3WP8pDZ5E0K56bEoG7a1VSL4k=\ngo.opentelemetry.io/contrib/propagators/b3 v1.17.0 h1:ImOVvHnku8jijXqkwCSyYKRDt2YrnGXD4BbhcpfbfJo=\ngo.opentelemetry.io/contrib/propagators/b3 v1.17.0/go.mod h1:IkfUfMpKWmynvvE0264trz0sf32NRTZL4nuAN9AbWRc=\ngo.opentelemetry.io/contrib/propagators/jaeger v1.17.0 h1:Zbpbmwav32Ea5jSotpmkWEl3a6Xvd4tw/3xxGO1i05Y=\ngo.opentelemetry.io/contrib/propagators/jaeger v1.17.0/go.mod h1:tcTUAlmO8nuInPDSBVfG+CP6Mzjy5+gNV4mPxMbL0IA=\ngo.opentelemetry.io/contrib/propagators/ot v1.17.0 h1:ufo2Vsz8l76eI47jFjuVyjyB3Ae2DmfiCV/o6Vc8ii0=\ngo.opentelemetry.io/contrib/propagators/ot v1.17.0/go.mod h1:SbKPj5XGp8K/sGm05XblaIABgMgw2jDczP8gGeuaVLk=\ngo.opentelemetry.io/otel v1.27.0 h1:9BZoF3yMK/O1AafMiQTVu0YDj5Ea4hPhxCs7sGva+cg=\ngo.opentelemetry.io/otel v1.27.0/go.mod h1:DMpAK8fzYRzs+bi3rS5REupisuqTheUlSZJ1WnZaPAQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.27.0 h1:R9DE4kQ4k+YtfLI2ULwX82VtNQ2J8yZmA7ZIF/D+7Mc=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.27.0/go.mod h1:OQFyQVrDlbe+R7xrEyDr/2Wr67Ol0hRUgsfA+V5A95s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.21.0 h1:tIqheXEFWAZ7O8A7m+J0aPTmpJN3YQ7qetUAdkkkKpk=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.21.0/go.mod h1:nUeKExfxAQVbiVFn32YXpXZZHZ61Cc3s3Rn1pDBGAb0=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0 h1:QY7/0NeRPKlzusf40ZE4t1VlMKbqSNT7cJRYzWuja0s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0/go.mod h1:HVkSiDhTM9BoUJU8qE6j2eSWLLXvi1USXjyd2BXT8PY=\ngo.opentelemetry.io/otel/metric v1.27.0 h1:hvj3vdEKyeCi4YaYfNjv2NUje8FqKqUY8IlF0FxV/ik=\ngo.opentelemetry.io/otel/metric v1.27.0/go.mod h1:mVFgmRlhljgBiuk/MP/oKylr4hs85GZAylncepAX/ak=\ngo.opentelemetry.io/otel/sdk v1.27.0 h1:mlk+/Y1gLPLn84U4tI8d3GNJmGT/eXe3ZuOXN9kTWmI=\ngo.opentelemetry.io/otel/sdk v1.27.0/go.mod h1:Ha9vbLwJE6W86YstIywK2xFfPjbWlCuwPtMkKdz/Y4A=\ngo.opentelemetry.io/otel/trace v1.27.0 h1:IqYb813p7cmbHk0a5y6pD5JPakbVfftRXABGt5/Rscw=\ngo.opentelemetry.io/otel/trace v1.27.0/go.mod h1:6RiD1hkAprV4/q+yd2ln1HG9GoPx39SuvvstaLBl+l4=\ngo.opentelemetry.io/proto/otlp v1.2.0 h1:pVeZGk7nXDC9O2hncA6nHldxEjm6LByfA2aN8IOkz94=\ngo.opentelemetry.io/proto/otlp v1.2.0/go.mod h1:gGpR8txAl5M03pDhMC79G6SdqNV26naRm/KDsgaHD8A=\ngo.step.sm/cli-utils v0.9.0 h1:55jYcsQbnArNqepZyAwcato6Zy2MoZDRkWW+jF+aPfQ=\ngo.step.sm/cli-utils v0.9.0/go.mod h1:Y/CRoWl1FVR9j+7PnAewufAwKmBOTzR6l9+7EYGAnp8=\ngo.step.sm/crypto v0.45.0 h1:Z0WYAaaOYrJmKP9sJkPW+6wy3pgN3Ija8ek/D4serjc=\ngo.step.sm/crypto v0.45.0/go.mod h1:6IYlT0L2jfj81nVyCPpvA5cORy0EVHPhieSgQyuwHIY=\ngo.step.sm/linkedca v0.20.1 h1:bHDn1+UG1NgRrERkWbbCiAIvv4lD5NOFaswPDTyO5vU=\ngo.step.sm/linkedca v0.20.1/go.mod h1:Vaq4+Umtjh7DLFI1KuIxeo598vfBzgSYZUjgVJ7Syxw=\ngo.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/automaxprocs v1.5.3 h1:kWazyxZUrS3Gs4qUpbwo5kEIMGe/DAvi5Z4tl2NW4j8=\ngo.uber.org/automaxprocs v1.5.3/go.mod h1:eRbA25aqJrxAbsLO0xy5jVwPt7FQnRgjW+efnwa1WM0=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=\ngo.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngo.uber.org/zap/exp v0.2.0 h1:FtGenNNeCATRB3CmB/yEUnjEFeJWpB/pMcy7e2bKPYs=\ngo.uber.org/zap/exp v0.2.0/go.mod h1:t0gqAIdh1MfKv9EwN/dLwfZnJxe9ITAZN78HEWPFWDQ=\ngolang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.3.0/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.28.0 h1:GBDwsMXVQi34v5CCYUm2jkJvu4cbtru2U4TN2PSyQnw=\ngolang.org/x/crypto v0.28.0/go.mod h1:rmgy+3RHxRZMyY0jjAJShp2zgEdOqj2AO7U0pYmeQ7U=\ngolang.org/x/crypto/x509roots/fallback v0.0.0-20240507223354-67b13616a595 h1:TgSqweA595vD0Zt86JzLv3Pb/syKg8gd5KMGGbJPYFw=\ngolang.org/x/crypto/x509roots/fallback v0.0.0-20240507223354-67b13616a595/go.mod h1:kNa9WdvYnzFwC79zRpLRMJbdEFlhyM5RPFBBZp/wWH8=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 h1:vr/HnozRka3pE4EsMEg1lgkXJkTFJCVUX+S/ZT6wYzM=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842/go.mod h1:XtvwrStGgqGPLc4cjQfWqZHG1YFdYs6swckp8vpsjnc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=\ngolang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=\ngolang.org/x/oauth2 v0.20.0 h1:4mQdhULixXKP1rwYBW0vAijoXnkTG0BLCDRzfe1idMo=\ngolang.org/x/oauth2 v0.20.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181205085412-a5c9d58dba9a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190626221950-04f50cda93cb/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=\ngolang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.25.0 h1:WtHI/ltw4NvSUig5KARz9h521QvRC8RmF/cuYqifU24=\ngolang.org/x/term v0.25.0/go.mod h1:RPyXicDX+6vLxogjjRxjgD2TKtmAO6NZBsBRfrOLu7M=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.19.0 h1:kTxAhCbGbxhK0IwgSKiMO5awPoDQ0RpfiVYBfK860YM=\ngolang.org/x/text v0.19.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.180.0 h1:M2D87Yo0rGBPWpo1orwfCLehUUL6E7/TYe5gvMQWDh4=\ngoogle.golang.org/api v0.180.0/go.mod h1:51AiyoEg1MJPSZ9zvklA8VnRILPXxn1iVen9v25XHAE=\ngoogle.golang.org/genproto v0.0.0-20240401170217-c3f982113cda h1:wu/KJm9KJwpfHWhkkZGohVC6KRrc1oJNr4jwtQMOQXw=\ngoogle.golang.org/genproto v0.0.0-20240401170217-c3f982113cda/go.mod h1:g2LLCvCeCSir/JJSWosk19BR4NVxGqHUC6rxIRsd7Aw=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240520151616-dc85e6b867a5 h1:P8OJ/WCl/Xo4E4zoe4/bifHpSmmKwARqyqE4nW6J2GQ=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240520151616-dc85e6b867a5/go.mod h1:RGnPtTG7r4i8sPlNyDeikXF99hMM+hN6QMm4ooG9g2g=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 h1:X58yt85/IXCx0Y3ZwN6sEIKZzQtDEYaBWrDvErdXrRE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.64.1 h1:LKtvyfbX3UGVPFcGqJ9ItpVWW6oN/2XqTxfAnwRRXiA=\ngoogle.golang.org/grpc v1.64.1/go.mod h1:hiQF4LFZelK2WKaP6W0L92zGHtiQdZxk8CrSdvyjeP0=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=\ngopkg.in/yaml.v1 v1.0.0-20140924161607-9f9df34309c0/go.mod h1:WDnlLJ4WF5VGsH/HVa3CI79GS0ol3YnhVnKP89i0kNg=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhowett.net/plist v1.0.0 h1:7CrbWYbPPO/PyNy38b2EB/+gYbjCe2DXBxgtOOZbSQM=\nhowett.net/plist v1.0.0/go.mod h1:lqaXoTrLY4hg8tnEzNru53gicrbv7rrk+2xJA/7hw9g=\n"
        },
        {
          "name": "loader.go",
          "type": "blob",
          "size": 10.271484375,
          "content": "package caddydockerproxy\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"path/filepath\"\n\t\"sync\"\n\t\"time\"\n\n\t\"os\"\n\n\t\"github.com/caddyserver/caddy/v2\"\n\t\"github.com/caddyserver/caddy/v2/caddyconfig\"\n\t\"github.com/docker/docker/api/types\"\n\t\"github.com/docker/docker/api/types/filters\"\n\t\"github.com/docker/docker/client\"\n\t\"github.com/joho/godotenv\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/config\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/docker\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/generator\"\n\t\"github.com/lucaslorentz/caddy-docker-proxy/v2/utils\"\n\n\t\"go.uber.org/zap\"\n)\n\nvar CaddyfileAutosavePath = filepath.Join(caddy.AppConfigDir(), \"Caddyfile.autosave\")\n\n// DockerLoader generates caddy files from docker swarm information\ntype DockerLoader struct {\n\toptions         *config.Options\n\tinitialized     bool\n\tdockerClients   []docker.Client\n\tgenerator       *generator.CaddyfileGenerator\n\ttimer           *time.Timer\n\tskipEvents      []bool\n\tlastCaddyfile   []byte\n\tlastJSONConfig  []byte\n\tlastVersion     int64\n\tserversVersions *utils.StringInt64CMap\n\tserversUpdating *utils.StringBoolCMap\n}\n\n// CreateDockerLoader creates a docker loader\nfunc CreateDockerLoader(options *config.Options) *DockerLoader {\n\treturn &DockerLoader{\n\t\toptions:         options,\n\t\tserversVersions: utils.NewStringInt64CMap(),\n\t\tserversUpdating: utils.NewStringBoolCMap(),\n\t}\n}\n\nfunc logger() *zap.Logger {\n\treturn caddy.Log().\n\t\tNamed(\"docker-proxy\")\n}\n\n// Start docker loader\nfunc (dockerLoader *DockerLoader) Start() error {\n\tif dockerLoader.initialized {\n\t\treturn nil\n\t}\n\n\tdockerLoader.initialized = true\n\tlog := logger()\n\n\tif envFile := dockerLoader.options.EnvFile; envFile != \"\" {\n\t\tif err := godotenv.Load(dockerLoader.options.EnvFile); err != nil {\n\t\t\tlog.Error(\"Load variables from environment file failed\", zap.Error(err), zap.String(\"envFile\", dockerLoader.options.EnvFile))\n\t\t\treturn err\n\t\t}\n\t\tlog.Info(\"environment file loaded\", zap.String(\"envFile\", dockerLoader.options.EnvFile))\n\t}\n\n\tdockerClients := []docker.Client{}\n\tfor i, dockerSocket := range dockerLoader.options.DockerSockets {\n\t\t// cf https://github.com/docker/go-docker/blob/master/client.go\n\t\t// setenv to use NewEnvClient\n\t\t// or manually\n\n\t\tos.Setenv(\"DOCKER_HOST\", dockerSocket)\n\n\t\tif len(dockerLoader.options.DockerCertsPath) >= i+1 && dockerLoader.options.DockerCertsPath[i] != \"\" {\n\t\t\tos.Setenv(\"DOCKER_CERT_PATH\", dockerLoader.options.DockerCertsPath[i])\n\t\t} else {\n\t\t\tos.Unsetenv(\"DOCKER_CERT_PATH\")\n\t\t}\n\n\t\tif len(dockerLoader.options.DockerAPIsVersion) >= i+1 && dockerLoader.options.DockerAPIsVersion[i] != \"\" {\n\t\t\tos.Setenv(\"DOCKER_API_VERSION\", dockerLoader.options.DockerAPIsVersion[i])\n\t\t} else {\n\t\t\tos.Unsetenv(\"DOCKER_API_VERSION\")\n\t\t}\n\n\t\tdockerClient, err := client.NewEnvClient()\n\t\tif err != nil {\n\t\t\tlog.Error(\"Docker connection failed to docker specify socket\", zap.Error(err), zap.String(\"DockerSocket\", dockerSocket))\n\t\t\treturn err\n\t\t}\n\n\t\tdockerPing, err := dockerClient.Ping(context.Background())\n\t\tif err != nil {\n\t\t\tlog.Error(\"Docker ping failed on specify socket\", zap.Error(err), zap.String(\"DockerSocket\", dockerSocket))\n\t\t\treturn err\n\t\t}\n\n\t\tdockerClient.NegotiateAPIVersionPing(dockerPing)\n\n\t\twrappedClient := docker.WrapClient(dockerClient)\n\n\t\tdockerClients = append(dockerClients, wrappedClient)\n\t}\n\n\t// by default it will used the env docker\n\tif len(dockerClients) == 0 {\n\t\tdockerClient, err := client.NewEnvClient()\n\t\tdockerLoader.options.DockerSockets = append(dockerLoader.options.DockerSockets, os.Getenv(\"DOCKER_HOST\"))\n\t\tif err != nil {\n\t\t\tlog.Error(\"Docker connection failed\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\n\t\tdockerPing, err := dockerClient.Ping(context.Background())\n\t\tif err != nil {\n\t\t\tlog.Error(\"Docker ping failed\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\n\t\tdockerClient.NegotiateAPIVersionPing(dockerPing)\n\n\t\twrappedClient := docker.WrapClient(dockerClient)\n\n\t\tdockerClients = append(dockerClients, wrappedClient)\n\t}\n\n\tdockerLoader.dockerClients = dockerClients\n\tdockerLoader.skipEvents = make([]bool, len(dockerLoader.dockerClients))\n\n\tdockerLoader.generator = generator.CreateGenerator(\n\t\tdockerClients,\n\t\tdocker.CreateUtils(),\n\t\tdockerLoader.options,\n\t)\n\n\tlog.Info(\n\t\t\"Start\",\n\t\tzap.String(\"CaddyfilePath\", dockerLoader.options.CaddyfilePath),\n\t\tzap.String(\"EnvFile\", dockerLoader.options.EnvFile),\n\t\tzap.String(\"LabelPrefix\", dockerLoader.options.LabelPrefix),\n\t\tzap.Duration(\"PollingInterval\", dockerLoader.options.PollingInterval),\n\t\tzap.Bool(\"ProxyServiceTasks\", dockerLoader.options.ProxyServiceTasks),\n\t\tzap.Bool(\"ProcessCaddyfile\", dockerLoader.options.ProcessCaddyfile),\n\t\tzap.Bool(\"ScanStoppedContainers\", dockerLoader.options.ScanStoppedContainers),\n\t\tzap.String(\"IngressNetworks\", fmt.Sprintf(\"%v\", dockerLoader.options.IngressNetworks)),\n\t\tzap.Strings(\"DockerSockets\", dockerLoader.options.DockerSockets),\n\t\tzap.Strings(\"DockerCertsPath\", dockerLoader.options.DockerCertsPath),\n\t\tzap.Strings(\"DockerAPIsVersion\", dockerLoader.options.DockerAPIsVersion),\n\t)\n\n\tready := make(chan struct{})\n\tdockerLoader.timer = time.AfterFunc(0, func() {\n\t\t<-ready\n\t\tdockerLoader.update()\n\t})\n\tclose(ready)\n\n\tgo dockerLoader.monitorEvents()\n\n\treturn nil\n}\n\nfunc (dockerLoader *DockerLoader) monitorEvents() {\n\tfor {\n\t\tdockerLoader.listenEvents()\n\t\ttime.Sleep(30 * time.Second)\n\t}\n}\n\nfunc (dockerLoader *DockerLoader) listenEvents() {\n\targs := filters.NewArgs()\n\tif !isTrue.MatchString(os.Getenv(\"CADDY_DOCKER_NO_SCOPE\")) {\n\t\t// This env var is useful for Podman where in some instances the scope can cause some issues.\n\t\targs.Add(\"scope\", \"swarm\")\n\t\targs.Add(\"scope\", \"local\")\n\t}\n\targs.Add(\"type\", \"service\")\n\targs.Add(\"type\", \"container\")\n\targs.Add(\"type\", \"config\")\n\n\tfor i, dockerClient := range dockerLoader.dockerClients {\n\t\tcontext, cancel := context.WithCancel(context.Background())\n\n\t\teventsChan, errorChan := dockerClient.Events(context, types.EventsOptions{\n\t\t\tFilters: args,\n\t\t})\n\n\t\tlog := logger()\n\t\tlog.Info(\"Connecting to docker events\", zap.String(\"DockerSocket\", dockerLoader.options.DockerSockets[i]))\n\n\tListenEvents:\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase event := <-eventsChan:\n\t\t\t\tif dockerLoader.skipEvents[i] {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tupdate := (event.Type == \"container\" && event.Action == \"create\") ||\n\t\t\t\t\t(event.Type == \"container\" && event.Action == \"start\") ||\n\t\t\t\t\t(event.Type == \"container\" && event.Action == \"stop\") ||\n\t\t\t\t\t(event.Type == \"container\" && event.Action == \"die\") ||\n\t\t\t\t\t(event.Type == \"container\" && event.Action == \"destroy\") ||\n\t\t\t\t\t(event.Type == \"service\" && event.Action == \"create\") ||\n\t\t\t\t\t(event.Type == \"service\" && event.Action == \"update\") ||\n\t\t\t\t\t(event.Type == \"service\" && event.Action == \"remove\") ||\n\t\t\t\t\t(event.Type == \"config\" && event.Action == \"create\") ||\n\t\t\t\t\t(event.Type == \"config\" && event.Action == \"remove\")\n\n\t\t\t\tif update {\n\t\t\t\t\tdockerLoader.skipEvents[i] = true\n\t\t\t\t\tdockerLoader.timer.Reset(dockerLoader.options.EventThrottleInterval)\n\t\t\t\t}\n\t\t\tcase err := <-errorChan:\n\t\t\t\tcancel()\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Error(\"Docker events error\", zap.Error(err))\n\t\t\t\t}\n\t\t\t\tbreak ListenEvents\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc (dockerLoader *DockerLoader) update() bool {\n\tdockerLoader.timer.Reset(dockerLoader.options.PollingInterval)\n\tfor i := 0; i < len(dockerLoader.skipEvents); i++ {\n\t\tdockerLoader.skipEvents[i] = false\n\t}\n\n\t// Don't cache the logger more globally, it can change based on config reloads\n\tlog := logger()\n\tcaddyfile, controlledServers := dockerLoader.generator.GenerateCaddyfile(log)\n\n\tcaddyfileChanged := !bytes.Equal(dockerLoader.lastCaddyfile, caddyfile)\n\n\tdockerLoader.lastCaddyfile = caddyfile\n\n\tif caddyfileChanged {\n\t\tlog.Info(\"New Caddyfile\", zap.ByteString(\"caddyfile\", caddyfile))\n\n\t\tif autosaveErr := os.WriteFile(CaddyfileAutosavePath, caddyfile, 0666); autosaveErr != nil {\n\t\t\tlog.Warn(\"Failed to autosave caddyfile\", zap.Error(autosaveErr), zap.String(\"path\", CaddyfileAutosavePath))\n\t\t}\n\n\t\tadapter := caddyconfig.GetAdapter(\"caddyfile\")\n\n\t\tconfigJSON, warn, err := adapter.Adapt(caddyfile, nil)\n\n\t\tif warn != nil {\n\t\t\tlog.Warn(\"Caddyfile to json warning\", zap.String(\"warn\", fmt.Sprintf(\"%v\", warn)))\n\t\t}\n\n\t\tif err != nil {\n\t\t\tlog.Error(\"Failed to convert caddyfile into json config\", zap.Error(err))\n\t\t\treturn false\n\t\t}\n\n\t\tlog.Info(\"New Config JSON\", zap.ByteString(\"json\", configJSON))\n\n\t\tdockerLoader.lastJSONConfig = configJSON\n\t\tdockerLoader.lastVersion++\n\t}\n\n\tvar wg sync.WaitGroup\n\tfor _, server := range controlledServers {\n\t\twg.Add(1)\n\t\tgo dockerLoader.updateServer(&wg, server)\n\t}\n\twg.Wait()\n\n\treturn true\n}\n\nfunc (dockerLoader *DockerLoader) updateServer(wg *sync.WaitGroup, server string) {\n\tdefer wg.Done()\n\n\t// Skip servers that are being updated already\n\tif dockerLoader.serversUpdating.Get(server) {\n\t\treturn\n\t}\n\n\t// Flag and unflag updating\n\tdockerLoader.serversUpdating.Set(server, true)\n\tdefer dockerLoader.serversUpdating.Delete(server)\n\n\tversion := dockerLoader.lastVersion\n\n\t// Skip servers that already have this version\n\tif dockerLoader.serversVersions.Get(server) >= version {\n\t\treturn\n\t}\n\n\tlog := logger()\n\tlog.Info(\"Sending configuration to\", zap.String(\"server\", server))\n\n\turl := \"http://\" + server + \":2019/load\"\n\n\tpostBody, err := addAdminListen(dockerLoader.lastJSONConfig, \"tcp/\"+server+\":2019\")\n\tif err != nil {\n\t\tlog.Error(\"Failed to add admin listen to\", zap.String(\"server\", server), zap.Error(err))\n\t\treturn\n\t}\n\n\treq, err := http.NewRequest(\"POST\", url, bytes.NewBuffer(postBody))\n\tif err != nil {\n\t\tlog.Error(\"Failed to create request to\", zap.String(\"server\", server), zap.Error(err))\n\t\treturn\n\t}\n\treq.Header.Set(\"Content-Type\", \"application/json\")\n\tresp, err := http.DefaultClient.Do(req)\n\n\tif err != nil {\n\t\tlog.Error(\"Failed to send configuration to\", zap.String(\"server\", server), zap.Error(err))\n\t\treturn\n\t}\n\n\tbodyBytes, err := io.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Error(\"Failed to read response from\", zap.String(\"server\", server), zap.Error(err))\n\t\treturn\n\t}\n\n\tif resp.StatusCode != 200 {\n\t\tlog.Error(\"Error response from server\", zap.String(\"server\", server), zap.Int(\"status code\", resp.StatusCode), zap.ByteString(\"body\", bodyBytes))\n\t\treturn\n\t}\n\n\tdockerLoader.serversVersions.Set(server, version)\n\n\tlog.Info(\"Successfully configured\", zap.String(\"server\", server))\n}\n\nfunc addAdminListen(configJSON []byte, listen string) ([]byte, error) {\n\tconfig := &caddy.Config{}\n\terr := json.Unmarshal(configJSON, config)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tconfig.Admin = &caddy.AdminConfig{\n\t\tListen: listen,\n\t}\n\treturn json.Marshal(config)\n}\n"
        },
        {
          "name": "module.go",
          "type": "blob",
          "size": 0.4052734375,
          "content": "package caddydockerproxy\n\nimport \"github.com/caddyserver/caddy/v2\"\n\nfunc init() {\n\tcaddy.RegisterModule(CaddyDockerProxy{})\n}\n\n// Caddy docker proxy module\ntype CaddyDockerProxy struct {\n}\n\n// CaddyModule returns the Caddy module information.\nfunc (CaddyDockerProxy) CaddyModule() caddy.ModuleInfo {\n\treturn caddy.ModuleInfo{\n\t\tID:  \"docker_proxy\",\n\t\tNew: func() caddy.Module { return new(CaddyDockerProxy) },\n\t}\n}\n"
        },
        {
          "name": "run-docker-tests-linux.sh",
          "type": "blob",
          "size": 0.5546875,
          "content": "#!/bin/bash\n\nset -e\n\necho ==PARAMETERS==\necho ARTIFACTS: \"${ARTIFACTS:=./artifacts}\"\n\nif [ \"$ARTIFACTS\" != \"./artifacts\" ]\nthen\n    mkdir -p ./artifacts/binaries/linux/amd64\n    cp $ARTIFACTS/binaries/linux/amd64/caddy ./artifacts/binaries/linux/amd64/caddy\nfi\n\nfind artifacts/binaries -type f -exec chmod +x {} \\;\n\ndocker build -q -f Dockerfile-alpine . \\\n    --build-arg TARGETPLATFORM=linux/amd64 \\\n    -t caddy-docker-proxy:local\n\ndocker swarm init || true\n\nexport DOCKER_SOCKET_PATH=\"/var/run/docker.sock\"\nexport DOCKER_SOCKET_TYPE=\"bind\"\n\n(cd tests && . run.sh)\n"
        },
        {
          "name": "run-docker-tests-windows.sh",
          "type": "blob",
          "size": 0.64453125,
          "content": "#!/bin/bash\n\nset -e\n\necho ==PARAMETERS==\necho ARTIFACTS: \"${ARTIFACTS:=./artifacts}\"\n\nif [ \"$ARTIFACTS\" != \"./artifacts\" ]\nthen\n    mkdir -p ./artifacts/binaries/windows/amd64\n    cp $ARTIFACTS/binaries/windows/amd64/caddy ./artifacts/binaries/windows/amd64/caddy\nfi\n\nenv\nexit 1\n\ndocker build -q -f Dockerfile-nanoserver . \\\n    --build-arg TARGETPLATFORM=windows/amd64 \\\n    --build-arg SERVERCORE_VERSION=ltsc2022 \\\n    --build-arg NANOSERVER_VERSION=ltsc2022 \\\n    -t caddy-docker-proxy:local\n\ndocker swarm init --advertise-addr 127.0.0.1 || true\n\nexport DOCKER_SOCKET_PATH='\\\\.\\pipe\\docker_engine'\nexport DOCKER_SOCKET_TYPE=\"npipe\"\n\n(cd tests && . run.sh)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}