{
  "metadata": {
    "timestamp": 1736566522020,
    "page": 65,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-pay/gopay",
      "stars": 4677,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "# idea ignore\n.idea/\n.vscode/\n.vendor/\n*.ipr\n*.iml\n*.iws\n\n# system ignore\n.DS_Store\nThumbs.db\n\n# temp ignore\n*.log\n*.cache\n*.diff\n*.exe\n*.patch\n*.tmp\nmain"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0693359375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 Jerry\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4873046875,
          "content": "<div align=center><img width=\"240\" height=\"240\" alt=\"Logo was Loading Faild!\" src=\"logo.png\"/></div>\n\n# GoPay\n\n### 微信、支付宝、QQ、通联支付、拉卡拉、PayPal 的 Golang 版本SDK\n\n[![Github](https://img.shields.io/github/followers/iGoogle-ink?label=Follow&style=social)](https://github.com/iGoogle-ink)\n[![Github](https://img.shields.io/github/forks/go-pay/gopay?label=Fork&style=social)](https://github.com/go-pay/gopay/fork)\n\n[![Golang](https://img.shields.io/badge/golang-1.21-brightgreen.svg)](https://golang.google.cn)\n[![GoDoc](https://img.shields.io/badge/doc-pkg.go.dev-informational.svg)](https://pkg.go.dev/github.com/go-pay/gopay)\n[![Go](https://github.com/go-pay/gopay/actions/workflows/go.yml/badge.svg)](https://github.com/go-pay/gopay/actions/workflows/go.yml)\n[![GitHub Release](https://img.shields.io/github/v/release/go-pay/gopay)](https://github.com/go-pay/gopay/releases)\n[![License](https://img.shields.io/github/license/go-pay/gopay)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Go Report Card](https://goreportcard.com/badge/github.com/go-pay/gopay)](https://goreportcard.com/report/github.com/go-pay/gopay)\n\n---\n\n# 一、安装\n\n```bash\ngo get github.com/go-pay/gopay\n```\n\n#### 查看 GoPay 版本\n\n  [版本更新记录](https://github.com/go-pay/gopay/blob/main/release_note.txt)\n\n```go\nimport (\n    \"github.com/go-pay/gopay\"\n    \"github.com/go-pay/xlog\"\n)\n\nfunc main() {\n    xlog.Info(\"GoPay Version: \", gopay.Version)\n}\n```\n\n---\n\n<br>\n\n# 二、文档目录\n\n> ### 点击查看不同支付方式的使用文档。方便的话，请留下您认可的小星星，十分感谢！\n\n* #### [支付宝支付（V3版）](https://github.com/go-pay/gopay/blob/main/doc/alipay_v3.md)\n* #### [支付宝支付](https://github.com/go-pay/gopay/blob/main/doc/alipay.md)\n* #### [微信支付（V3版）](https://github.com/go-pay/gopay/blob/main/doc/wechat_v3.md)\n* #### [微信支付（V2版，不推荐）](https://github.com/go-pay/gopay/blob/main/doc/wechat_v2.md)\n* #### [QQ支付](https://github.com/go-pay/gopay/blob/main/doc/qq.md)\n* #### [通联支付](https://github.com/go-pay/gopay/blob/main/doc/allinpay.md)\n* #### [拉卡拉支付](https://github.com/go-pay/gopay/blob/main/doc/lakala.md)\n* #### [Paypal支付](https://github.com/go-pay/gopay/blob/main/doc/paypal.md)\n* #### [Apple支付校验](https://github.com/go-pay/gopay/blob/main/doc/apple.md)\n* #### [扫呗支付](https://github.com/go-pay/gopay/blob/main/doc/saobei.md)\n\n---\n\n<br>\n\n# 三、其他说明\n\n* 如需自定义Log输出，New Client 后，调用 `client.SetLogger()` 方法设置自定义Logger，自定义Logger实现 `xlog.XLogger` interface即可。\n\n* 各支付方式接入，请仔细查看 `xxx_test.go` 使用方式\n    * `gopay/wechat/v3/client_test.go`\n    * `gopay/alipay/v3/client_test.go`\n    * `gopay/alipay/client_test.go`\n    * `gopay/qq/client_test.go`\n    * `gopay/allinpay/client_test.go`\n    * `gopay/lakala/client_test.go`\n    * `gopay/paypal/client_test.go`\n    * `gopay/apple/verify_test.go`\n    * 或 examples\n* 接入gopay示例项目(可参考接入使用方式)：[gopay-platform](https://github.com/go-pay/gopay-platform)\n* 有问题请加微信群 或 关注抖音账号，加入首页粉丝群拉微信群。在此，非常感谢提出宝贵意见和反馈问题的同志们！\n* 开发过程中，请尽量使用正式环境，1分钱测试法！\n* 有偿承接技术咨询、开发，如需要加微信联系。\n\n<br>\n\n---\n\n## 赞赏多少是您的心意，感谢支持！\n\n微信赞赏码： <img width=\"200\" height=\"200\" src=\".github/zanshang.png\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;\n支付宝赞助码： <img width=\"200\" height=\"200\" src=\".github/zanshang_zfb.png\"/>\n\n---\n\n## 讨论群\n> 微信群过期加个人微信: **[85411418](.github/wechat_jerry.png)** 邀请加群（加个人微信备注 gopay 并关注抖音账号，谢谢）。\n\n关注抖音：\n<img width=\"240\" height=\"240\" src=\".github/douyin_jerry.png\"/>\n&nbsp;&nbsp;&nbsp;&nbsp;微信群：\n<img width=\"240\" height=\"240\" src=\".github/wx_gopay.png\"/>\n\n---\n\n<br>\n\n## 鸣谢\n\n> [GoLand](https://www.jetbrains.com/go/?from=gopay) A Go IDE with extended support for JavaScript, TypeScript, and Databases。\n\n特别感谢 [JetBrains](https://www.jetbrains.com/?from=gopay) 为开源项目提供免费的 [GoLand](https://www.jetbrains.com/go/?from=gopay) 等 IDE 的授权  \n<br>\n[<img src=\".github/jetbrains.png\" width=\"300\"/>](https://www.jetbrains.com/?from=gopay)\n\n> Copyright © 2000-2024 JetBrains s.r.o. JetBrains and the JetBrains logo are registered trademarks of JetBrains s.r.o.\n"
        },
        {
          "name": "alipay",
          "type": "tree",
          "content": null
        },
        {
          "name": "allinpay",
          "type": "tree",
          "content": null
        },
        {
          "name": "apple",
          "type": "tree",
          "content": null
        },
        {
          "name": "body_map.go",
          "type": "blob",
          "size": 4.7568359375,
          "content": "package gopay\n\nimport (\n\t\"encoding/json\"\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/url\"\n\t\"sort\"\n\t\"strings\"\n)\n\ntype BodyMap map[string]any\n\ntype xmlMapMarshal struct {\n\tXMLName xml.Name\n\tValue   any `xml:\",cdata\"`\n}\n\ntype xmlMapUnmarshal struct {\n\tXMLName xml.Name\n\tValue   string `xml:\",cdata\"`\n}\n\ntype File struct {\n\tName    string `json:\"name\"`\n\tContent []byte `json:\"content\"`\n}\n\n// 设置参数\nfunc (bm BodyMap) Set(key string, value any) BodyMap {\n\tbm[key] = value\n\treturn bm\n}\n\nfunc (bm BodyMap) SetBodyMap(key string, value func(b BodyMap)) BodyMap {\n\t_bm := make(BodyMap)\n\tvalue(_bm)\n\tbm[key] = _bm\n\treturn bm\n}\n\n// 设置 FormFile\nfunc (bm BodyMap) SetFormFile(key string, file *File) BodyMap {\n\tbm[key] = file\n\treturn bm\n}\n\n// 获取参数，同 GetString()\nfunc (bm BodyMap) Get(key string) string {\n\treturn bm.GetString(key)\n}\n\n// 获取参数转换string\nfunc (bm BodyMap) GetString(key string) string {\n\tif bm == nil {\n\t\treturn NULL\n\t}\n\tvalue, ok := bm[key]\n\tif !ok {\n\t\treturn NULL\n\t}\n\tv, ok := value.(string)\n\tif !ok {\n\t\treturn convertToString(value)\n\t}\n\treturn v\n}\n\n// Deprecated\n// 推荐使用 GetAny()\nfunc (bm BodyMap) GetInterface(key string) any {\n\tif bm == nil {\n\t\treturn nil\n\t}\n\treturn bm[key]\n}\n\n// 获取原始参数\nfunc (bm BodyMap) GetAny(key string) any {\n\tif bm == nil {\n\t\treturn nil\n\t}\n\treturn bm[key]\n}\n\n// 删除参数\nfunc (bm BodyMap) Remove(key string) {\n\tdelete(bm, key)\n}\n\n// 置空BodyMap\nfunc (bm BodyMap) Reset() {\n\tfor k := range bm {\n\t\tdelete(bm, k)\n\t}\n}\n\nfunc (bm BodyMap) JsonBody() (jb string) {\n\tbs, err := json.Marshal(bm)\n\tif err != nil {\n\t\treturn \"\"\n\t}\n\tjb = string(bs)\n\treturn jb\n}\n\n// Unmarshal to struct or slice point\nfunc (bm BodyMap) Unmarshal(ptr any) (err error) {\n\tbs, err := json.Marshal(bm)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn json.Unmarshal(bs, ptr)\n}\n\nfunc (bm BodyMap) MarshalXML(e *xml.Encoder, start xml.StartElement) (err error) {\n\tif len(bm) == 0 {\n\t\treturn nil\n\t}\n\tstart.Name = xml.Name{Space: NULL, Local: \"xml\"}\n\tif err = e.EncodeToken(start); err != nil {\n\t\treturn\n\t}\n\tfor k := range bm {\n\t\tif v := bm.GetString(k); v != NULL {\n\t\t\t_ = e.Encode(xmlMapMarshal{XMLName: xml.Name{Local: k}, Value: v})\n\t\t}\n\t}\n\treturn e.EncodeToken(start.End())\n}\n\nfunc (bm *BodyMap) UnmarshalXML(d *xml.Decoder, start xml.StartElement) (err error) {\n\tfor {\n\t\tvar e xmlMapUnmarshal\n\t\terr = d.Decode(&e)\n\t\tif err != nil {\n\t\t\tif err == io.EOF {\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\treturn err\n\t\t}\n\t\tbm.Set(e.XMLName.Local, e.Value)\n\t}\n}\n\n// (\"bar=baz&foo=quux\") sorted by key.\nfunc (bm BodyMap) EncodeWeChatSignParams(apiKey string) string {\n\tif bm == nil {\n\t\treturn NULL\n\t}\n\tvar (\n\t\tbuf     strings.Builder\n\t\tkeyList []string\n\t)\n\tfor k := range bm {\n\t\tkeyList = append(keyList, k)\n\t}\n\tsort.Strings(keyList)\n\tfor _, k := range keyList {\n\t\tif v := bm.GetString(k); v != NULL {\n\t\t\tbuf.WriteString(k)\n\t\t\tbuf.WriteByte('=')\n\t\t\tbuf.WriteString(v)\n\t\t\tbuf.WriteByte('&')\n\t\t}\n\t}\n\tbuf.WriteString(\"key\")\n\tbuf.WriteByte('=')\n\tbuf.WriteString(apiKey)\n\treturn buf.String()\n}\n\n// (\"bar=baz&foo=quux\") sorted by key.\nfunc (bm BodyMap) EncodeAliPaySignParams() string {\n\tif bm == nil {\n\t\treturn NULL\n\t}\n\tvar (\n\t\tbuf     strings.Builder\n\t\tkeyList []string\n\t)\n\tfor k := range bm {\n\t\tkeyList = append(keyList, k)\n\t}\n\tsort.Strings(keyList)\n\tfor _, k := range keyList {\n\t\tif v := bm.GetString(k); v != NULL {\n\t\t\tbuf.WriteString(k)\n\t\t\tbuf.WriteByte('=')\n\t\t\tbuf.WriteString(v)\n\t\t\tbuf.WriteByte('&')\n\t\t}\n\t}\n\tif buf.Len() <= 0 {\n\t\treturn NULL\n\t}\n\treturn buf.String()[:buf.Len()-1]\n}\n\n// (\"bar=baz&foo=quux\") sorted by key.\nfunc (bm BodyMap) EncodeURLParams() string {\n\tif bm == nil {\n\t\treturn NULL\n\t}\n\tvar (\n\t\tbuf  strings.Builder\n\t\tkeys []string\n\t)\n\tfor k := range bm {\n\t\tkeys = append(keys, k)\n\t}\n\tsort.Strings(keys)\n\tfor _, k := range keys {\n\t\tif v := bm.GetString(k); v != NULL {\n\t\t\tbuf.WriteString(url.QueryEscape(k))\n\t\t\tbuf.WriteByte('=')\n\t\t\tbuf.WriteString(url.QueryEscape(v))\n\t\t\tbuf.WriteByte('&')\n\t\t}\n\t}\n\tif buf.Len() <= 0 {\n\t\treturn NULL\n\t}\n\treturn buf.String()[:buf.Len()-1]\n}\n\nfunc (bm BodyMap) CheckEmptyError(keys ...string) error {\n\tvar emptyKeys []string\n\tfor _, k := range keys {\n\t\tif v := bm.GetString(k); v == NULL {\n\t\t\temptyKeys = append(emptyKeys, k)\n\t\t}\n\t}\n\tif len(emptyKeys) > 0 {\n\t\treturn fmt.Errorf(\"[%w], %v\", MissParamErr, strings.Join(emptyKeys, \", \"))\n\t}\n\treturn nil\n}\n\nfunc (bm BodyMap) CheckNotAllEmptyError(keys ...string) error {\n\tvar emptyKeys []string\n\tfor _, k := range keys {\n\t\tif v := bm.GetString(k); v == NULL {\n\t\t\temptyKeys = append(emptyKeys, k)\n\t\t}\n\t}\n\t// if all key is empty, return error\n\tif len(emptyKeys) == len(keys) {\n\t\treturn fmt.Errorf(\"[%w], %v\", MissParamErr, strings.Join(emptyKeys, \", \"))\n\t}\n\treturn nil\n}\n\nfunc convertToString(v any) (str string) {\n\tif v == nil {\n\t\treturn NULL\n\t}\n\tvar (\n\t\tbs  []byte\n\t\terr error\n\t)\n\tif bs, err = json.Marshal(v); err != nil {\n\t\treturn NULL\n\t}\n\tstr = string(bs)\n\treturn\n}\n"
        },
        {
          "name": "body_map_test.go",
          "type": "blob",
          "size": 4.0322265625,
          "content": "package gopay\n\nimport (\n\t\"encoding/json\"\n\t\"encoding/xml\"\n\t\"testing\"\n\n\t\"github.com/go-pay/util\"\n\t\"github.com/go-pay/xlog\"\n)\n\nfunc TestBodyMapSetBodyMap(t *testing.T) {\n\txlog.SetLevel(xlog.DebugLevel)\n\tbm := make(BodyMap)\n\t// 1、配合map使用\n\tsceneInfo := make(map[string]map[string]string)\n\th5Info := make(map[string]string)\n\th5Info[\"type\"] = \"Wap\"\n\th5Info[\"wap_url\"] = \"https://www.fmm.ink\"\n\th5Info[\"wap_name\"] = \"H5测试支付\"\n\tsceneInfo[\"h5_info\"] = h5Info\n\tbm.Set(\"scene_info\", sceneInfo)\n\txlog.Debug(\"配合map使用：\", bm) // map[scene_info:map[h5_info:map[type:Wap wap_name:H5测试支付 wap_url:https://www.fmm.ink]]]\n\n\tbm.Reset()\n\txlog.Debug(bm) // []\n\n\t// 2、基础用法\n\tbm.Set(\"1key\", \"1value\")\n\tbm.Set(\"2key\", \"2value\")\n\tbm.Set(\"3key\", \"3value\")\n\txlog.Debug(\"基础用法：\", bm)\n\n\tbm.Reset()\n\txlog.Debug(bm) // []\n\n\t// 3、链式用法\n\tbm.Set(\"4key\", \"4value\").\n\t\tSet(\"5key\", \"5value\").\n\t\tSet(\"6key\", \"6value\")\n\txlog.Debug(\"链式用法：\", bm)\n\n\tbm.Reset()\n\txlog.Debug(bm) // []\n\n\t// 4、高级用法\n\tbm.SetBodyMap(\"scene_info\", func(bm BodyMap) {\n\t\tbm.SetBodyMap(\"h5_info\", func(bm BodyMap) {\n\t\t\tbm.Set(\"type\", \"Wap\").\n\t\t\t\tSet(\"wap_url\", \"https://www.fmm.ink\").\n\t\t\t\tSet(\"wap_name\", \"H5测试支付\")\n\t\t})\n\t}).Set(\"7key\", \"7value\").\n\t\tSet(\"8key\", \"8value\")\n\txlog.Debug(\"高级用法：\", bm) // map[scene_info:map[h5_info:map[type:Wap wap_name:H5测试支付 wap_url:https://www.fmm.ink]]]\n\txlog.Debug(\"高级用法 JsonBody：\", bm.JsonBody())\n}\n\nfunc TestBodyMapMarshal(t *testing.T) {\n\txlog.SetLevel(xlog.DebugLevel)\n\tbm := make(BodyMap)\n\tbm.Set(\"4key\", \"4value\").\n\t\tSet(\"6key\", \"6value\").\n\t\tSet(\"5key\", \"5value\")\n\tjb := bm.JsonBody()\n\txlog.Debug(\"jb:\", jb)\n\n\tbm.Reset()\n\n\tbm.SetBodyMap(\"scene_info\", func(bm BodyMap) {\n\t\tbm.SetBodyMap(\"h5_info\", func(bm BodyMap) {\n\t\t\tbm.Set(\"type\", \"Wap\").\n\t\t\t\tSet(\"wap_url\", \"https://www.fmm.ink\").\n\t\t\t\tSet(\"wap_name\", \"H5测试支付\")\n\t\t})\n\t}).Set(\"7key\", \"7value\").\n\t\tSet(\"8key\", \"8value\")\n\tjb2 := bm.JsonBody()\n\txlog.Debug(\"jb2:\", jb2)\n\n\tbm.Reset()\n\n\tbm.SetBodyMap(\"partner\", func(bm BodyMap) {\n\t\tbm.Set(\"type\", \"APPID\").\n\t\t\tSet(\"appid\", \"wx123456\").\n\t\t\tSet(\"merchant_id\", \"88888\")\n\t}).SetBodyMap(\"authorized_data\", func(bm BodyMap) {\n\t\tbm.Set(\"business_type\", \"BUSIFAVOR_STOCK\").\n\t\t\tSet(\"stock_id\", \"66666\")\n\t}).Set(\"limit\", 5).\n\t\tSet(\"offset\", 10)\n\n\turlParams := bm.EncodeURLParams()\n\txlog.Debug(\"urlParams:\", urlParams)\n}\n\nfunc TestBodyMapMarshalSlice(t *testing.T) {\n\txlog.SetLevel(xlog.DebugLevel)\n\ttype Receiver struct {\n\t\tType        string `json:\"type\"`\n\t\tAccount     string `json:\"account\"`\n\t\tAmount      int    `json:\"amount\"`\n\t\tDescription string `json:\"description\"`\n\t}\n\tvar rs []*Receiver\n\titem := &Receiver{\n\t\tType:        \"MERCHANT_ID\",\n\t\tAccount:     \"190001001\",\n\t\tAmount:      100,\n\t\tDescription: \"分到商户\",\n\t}\n\trs = append(rs, item)\n\titem2 := &Receiver{\n\t\tType:        \"PERSONAL_OPENID\",\n\t\tAccount:     \"86693952\",\n\t\tAmount:      888,\n\t\tDescription: \"分到个人\",\n\t}\n\trs = append(rs, item2)\n\tbs, _ := json.Marshal(rs)\n\n\tbm := make(BodyMap)\n\tbm.Set(\"nonce_str\", util.RandomString(32)).\n\t\tSet(\"transaction_id\", \"4208450740201411110007820472\").\n\t\tSet(\"out_order_no\", \"P20150806125346\")\n\n\tbm.Set(\"receivers\", string(bs))\n\n\txlog.Debug(\"JsonBody:\", bm.JsonBody())\n\t//receiver := make(BodyMap)\n\t//receiver.Set(\"receiver\", string(bs))\n\t//\n\t//body := receiver.JsonBody()\n\tbss, _ := xml.Marshal(bm)\n\txlog.Debug(\"body:\", string(bss))\n}\n\nfunc TestSliceTest(t *testing.T) {\n\txlog.SetLevel(xlog.DebugLevel)\n\tvar rs []string\n\trs = append(rs, \"SOFTWARE\")\n\trs = append(rs, \"SECURITY\")\n\trs = append(rs, \"LOVE_MARRIAGE\")\n\n\tbm := make(BodyMap)\n\tbm.Set(\"sub_mchid\", \"2021060717\").\n\t\tSet(\"advertising_industry_filters\", rs)\n\n\txlog.Debugf(\"%s\", bm.JsonBody())\n}\n\nfunc TestOutSlice(t *testing.T) {\n\txlog.SetLevel(xlog.DebugLevel)\n\ttype Jerry struct {\n\t\tName string `json:\"name\"`\n\t\tAge  int    `json:\"age\"`\n\t}\n\tvar js = []*Jerry{\n\t\t{\n\t\t\tName: \"Jerry\",\n\t\t\tAge:  18,\n\t\t},\n\t\t{\n\t\t\tName: \"Tom\",\n\t\t\tAge:  20,\n\t\t},\n\t}\n\n\tbm := make(BodyMap)\n\tbm.Set(\"\", js)\n\txlog.Debugf(\"%v\", bm.GetAny(\"\"))\n\txlog.Debugf(\"%s\", bm.GetString(\"\"))\n\txlog.Debugf(\"%s\", bm.JsonBody())\n}\n"
        },
        {
          "name": "constant.go",
          "type": "blob",
          "size": 0.16796875,
          "content": "package gopay\n\nconst (\n\tNULL     = \"\"\n\tSUCCESS  = \"SUCCESS\"\n\tFAIL     = \"FAIL\"\n\tOK       = \"OK\"\n\tDebugOff = 0\n\tDebugOn  = 1\n\tVersion  = \"v1.5.108\"\n)\n\ntype DebugSwitch int8\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "error.go",
          "type": "blob",
          "size": 0.8466796875,
          "content": "package gopay\n\nimport \"errors\"\n\nvar (\n\tMissWechatInitParamErr = errors.New(\"missing wechat init parameter\")\n\tMissAlipayInitParamErr = errors.New(\"missing alipay init parameter\")\n\tMissPayPalInitParamErr = errors.New(\"missing paypal init parameter\")\n\tMissAppleInitParamErr  = errors.New(\"missing apple init parameter\")\n\tMissLakalaInitParamErr = errors.New(\"missing lakala init parameter\")\n\tMissParamErr           = errors.New(\"missing required parameter\")\n\tMarshalErr             = errors.New(\"marshal error\")\n\tUnmarshalErr           = errors.New(\"unmarshal error\")\n\tSignatureErr           = errors.New(\"signature error\")\n\tVerifySignatureErr     = errors.New(\"verify signature error\")\n\tCertNotMatchErr        = errors.New(\"cert not match error\")\n\tGetSignDataErr         = errors.New(\"get signature data error\")\n\tBodyMapNilErr          = errors.New(\"body map is nil\")\n)\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2685546875,
          "content": "module github.com/go-pay/gopay\n\ngo 1.21\n\nrequire (\n\tgithub.com/go-pay/crypto v0.0.1\n\tgithub.com/go-pay/errgroup v0.0.3\n\tgithub.com/go-pay/smap v0.0.2\n\tgithub.com/go-pay/util v0.0.4\n\tgithub.com/go-pay/xlog v0.0.3\n\tgithub.com/go-pay/xtime v0.0.2\n\tgolang.org/x/crypto v0.32.0\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.1240234375,
          "content": "github.com/go-pay/crypto v0.0.1 h1:B6InT8CLfSLc6nGRVx9VMJRBBazFMjr293+jl0lLXUY=\ngithub.com/go-pay/crypto v0.0.1/go.mod h1:41oEIvHMKbNcYlWUlRWtsnC6+ASgh7u29z0gJXe5bes=\ngithub.com/go-pay/errgroup v0.0.3 h1:DB4s8e8oWYDyETKQ1y1riMJ7y29zE1uIsMCSjEOFSbU=\ngithub.com/go-pay/errgroup v0.0.3/go.mod h1:0+4b8mvFMS71MIzsaC+gVvB4x37I93lRb2dqrwuU8x8=\ngithub.com/go-pay/smap v0.0.2 h1:kKflYor5T5FgZltPFBMTFfjJvqYMHr5VnIFSEyhVTcA=\ngithub.com/go-pay/smap v0.0.2/go.mod h1:HW9oAo0okuyDYsbpbj5fJFxnNj/BZorRGFw26SxrNWw=\ngithub.com/go-pay/util v0.0.4 h1:TuwSU9o3Qd7m9v1PbzFuIA/8uO9FJnA6P7neG/NwPyk=\ngithub.com/go-pay/util v0.0.4/go.mod h1:Tsdhs8Ib9J9b4+NKNO1PHh5hWHhlg98PthsX0ckq6PM=\ngithub.com/go-pay/xlog v0.0.3 h1:avyMhCL/JgBHreoGx/am/kHxfs1udDOAeVqbmzP/Yes=\ngithub.com/go-pay/xlog v0.0.3/go.mod h1:mH47xbobrdsSHWsmFtSF5agWbMHFP+tK0ZbVCk5OAEw=\ngithub.com/go-pay/xtime v0.0.2 h1:7YR4/iuELsEHpJ6LUO0SVK80hQxDO9MLCfuVYIiTCRM=\ngithub.com/go-pay/xtime v0.0.2/go.mod h1:W1yRbJaSt4CSBcdAtLBQ8xajiN/Pl5hquGczUcUE9xE=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\n"
        },
        {
          "name": "gopay_test.go",
          "type": "blob",
          "size": 2.7060546875,
          "content": "package gopay\n\nimport (\n\t\"crypto/sha1\"\n\t\"encoding/hex\"\n\t\"encoding/xml\"\n\t\"testing\"\n\n\t\"github.com/go-pay/xlog\"\n)\n\nfunc TestBodyMap_CheckParamsNull(t *testing.T) {\n\tbm := make(BodyMap)\n\tbm.Set(\"name\", \"jerry\")\n\tbm.Set(\"age\", 2)\n\tbm.Set(\"phone\", \"123\")\n\tbm.Set(\"pi\", 3.1415926)\n\n\terr := bm.CheckEmptyError(\"name\", \"age\", \"phone\")\n\tif err != nil {\n\t\txlog.Errorf(\"bm.CheckEmptyError(),err: %+v\", err)\n\t\treturn\n\t}\n\th := sha1.New()\n\th.Write([]byte(\"golang\"))\n\tbs := h.Sum(nil)\n\t_signature := hex.EncodeToString(bs)\n\txlog.Info(_signature) // 771e417b9dcae54aead2f3cbbbff340787bc462f\n\t// 771e417b9dcae54aead2f3cbbbff340787bc462f\n}\n\nfunc TestBodyMap_UnmarshalXML(t *testing.T) {\n\txmlData := `<xml>\n   <appid><![CDATA[wx2421b1c4370ec43b]]></appid>\n   <mch_id><![CDATA[10000100]]></mch_id>\n   <nonce_str><![CDATA[TeqClE3i0mvn3DrK]]></nonce_str>\n   <out_refund_no_0><![CDATA[1415701182]]></out_refund_no_0>\n   <out_trade_no><![CDATA[1415757673]]></out_trade_no>\n   <refund_count>1</refund_count>\n   <refund_fee_0>1</refund_fee_0>\n   <refund_id_0><![CDATA[2008450740201411110000174436]]></refund_id_0>\n   <refund_status_0><![CDATA[PROCESSING]]></refund_status_0>\n   <result_code><![CDATA[SUCCESS]]></result_code>\n   <return_code><![CDATA[SUCCESS]]></return_code>\n   <return_msg><![CDATA[OK]]></return_msg>\n   <sign><![CDATA[1F2841558E233C33ABA71A961D27561C]]></sign>\n   <transaction_id><![CDATA[1008450740201411110005820873]]></transaction_id>\n</xml>`\n\n\tmm := make(BodyMap)\n\terr := xml.Unmarshal([]byte(xmlData), &mm)\n\tif err != nil {\n\t\txlog.Errorf(\"xml.Unmarshal(%s),error:%+v\", xmlData, err)\n\t\treturn\n\t}\n\tfor k, v := range mm {\n\t\txlog.Infof(\"%s:%s\\n\", k, v)\n\t}\n}\n\ntype QueryRedRecordResponse struct {\n\tHbType string  `xml:\"hb_type,omitempty\" json:\"hb_type,omitempty\"`\n\tHblist *hbList `xml:\"hblist,omitempty\" json:\"hblist,omitempty\"`\n}\ntype hbList struct {\n\tHbinfoList []*hbinfo `xml:\"hbinfo,omitempty\" json:\"hbinfo,omitempty\"`\n}\n\ntype hbinfo struct {\n\tOpenid  string `xml:\"openid,omitempty\" json:\"openid,omitempty\"`\n\tAmount  string `xml:\"amount,omitempty\" json:\"amount,omitempty\"`\n\tRcvTime string `xml:\"rcv_time,omitempty\" json:\"rcv_time,omitempty\"`\n}\n\nfunc TestBodyMap_UnmarshalXML2(t *testing.T) {\n\txmlData := `\n<xml>\n<hb_type><![CDATA[NORMAL]]></hb_type>\n<hblist>\n\t<hbinfo>\n\t\t<openid><![CDATA[111]]></openid>\n\t\t<amount>222</amount>\n\t\t<rcv_time><![CDATA[333]]></rcv_time>\n\t</hbinfo>\n\t<hbinfo>\n\t\t<openid><![CDATA[444]]></openid>\n\t\t<amount>555</amount>\n\t\t<rcv_time><![CDATA[666]]></rcv_time>\n\t</hbinfo>\n</hblist>\n</xml>`\n\n\tmm := new(QueryRedRecordResponse)\n\terr := xml.Unmarshal([]byte(xmlData), &mm)\n\tif err != nil {\n\t\txlog.Errorf(\"xml.Unmarshal(%s),error:%+v\", xmlData, err)\n\t\treturn\n\t}\n\txlog.Debugf(\"%+v\", mm)\n\tfor _, v := range mm.Hblist.HbinfoList {\n\t\txlog.Debugf(\"%+v\", v)\n\t}\n}\n"
        },
        {
          "name": "lakala",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 31.4541015625,
          "content": null
        },
        {
          "name": "paypal",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "qq",
          "type": "tree",
          "content": null
        },
        {
          "name": "release_note.txt",
          "type": "blob",
          "size": 50.4140625,
          "content": "版本号：v1.5.108\n修改记录：\n   (1) gopay：golang.org/x/crypto 版本升级到 v0.32.0。\n   (2) 微信V3：支持设置代理 Host 地址，client.SetProxyHost()，wechat.SetProxyHost()。\n   (3) 支付宝V3：支持设置代理 Host 地址，client.SetProxyHost()。\n   (4) 补充部分支付宝V3接口。\n\n版本号：v1.5.107\n修改记录：\n   (1) gopay：golang.org/x/crypto 版本升级到 v0.31.0。\n   (2) gopay：xhttp transport 的默认 MaxIdleConnsPerHost 设置为 1000，MaxConnsPerHost 设置为 3000。\n   (3) 微信V3：新增掌纹支付相关接口。\n   (4) 微信V3：补充 支付有礼相关接口。\n   (5) 微信V3：补充 电子发票相关接口。\n   (6) 支付宝V3：补充 支付宝的若干v3接口。\n\n版本号：v1.5.106\n修改记录：\n   (1) 支付宝：支付宝支持V3接口，接口还在完善中，欢迎提PR一起建设。\n   (2) gopay：支付宝、微信接口请求支持设置自定义RequestId的函数，client.SetRequestIdFunc()。\n   (3) gopay：修复部分已知问题。\n\n版本号：Release 1.5.105\n修改记录：\n   (1) gopay：golang.org/x/crypto v0.26.0 版本升级到 v0.27.0。\n   (2) 支付宝：新增 client.MarketingCampaignCashCreate()，创建现金活动接口。\n   (3) 支付宝：新增 client.MarketingCampaignCashTrigger()，触发现金红包活动接口。\n   (4) 支付宝：新增 client.MarketingCampaignCashStatusModify()，更改现金活动状态接口。\n   (5) 支付宝：新增 client.MarketingCampaignCashListQuery()，现金活动列表查询接口。\n   (6) 支付宝：新增 client.MarketingCampaignCashDetailQuery()，现金活动详情查询接口。\n   (7) 支付宝：新增 client.MerchantQipanCrowdCreate()，上传创建人群接口。\n   (8) 支付宝：新增 client.MerchantQipanCrowdUserAdd()，人群中追加用户接口。\n   (9) 支付宝：新增 client.MerchantQipanCrowdUserDelete()，人群中删除用户接口。\n   (10) 支付宝：新增 client.MarketingQipanTagBaseBatchQuery()，棋盘人群圈选标签基本信息查询接口。\n   (11) 支付宝：新增 client.MarketingQipanTagQuery()，棋盘标签圈选值查询接口。\n   (12) 支付宝：新增 client.MarketingQipanCrowdOperationCreate()，棋盘人群创建接口。\n   (13) 支付宝：新增 client.MarketingQipanCrowdTagQuery()，查询圈选标签列表接口。\n   (14) 支付宝：新增 client.MarketingQipanCrowdWithTagCreate()，标签圈选创建人群接口。\n   (15) 支付宝：新增 client.MarketingQipanCrowdWithTagQuery()，标签圈选预估人群规模接口。\n   (16) 支付宝：新增 client.MarketingQipanCrowdBatchQuery()，查询人群列表接口。\n   (17) 支付宝：新增 client.MarketingQipanCrowdQuery()，查询人群详情接口。\n   (18) 支付宝：新增 client.MarketingQipanCrowdModify()，修改人群接口。\n   (19) 支付宝：新增 client.MarketingQipanBoardQuery()，看板分析接口。\n   (20) 支付宝：新增 client.MarketingQipanInsightQuery()，画像分析接口。\n   (21) 支付宝：新增 client.MarketingQipanBehaviorQuery()，行为分析接口。\n   (22) 支付宝：新增 client.MarketingQipanTrendQuery()，趋势分析接口。\n   (23) 支付宝：新增 client.MarketingQipanInsightCityQuery()，常住省市查询接口。\n   (24) PayPal：新增 client.AddTrackingNumber()，添加物流单号接口。\n   (25) PayPal：优化部分结构体字段。。\n   (26) 支付宝：FundTransCommonQuery 结构体补充字段。\n   (27) Apple：client.SendConsumptionInformation() 方法成功状态码判断修改。\n   (28) gopay：升级内部依赖module库。\n\n版本号：Release 1.5.104\n修改记录：\n   (1) gopay：golang.org/x/crypto v0.24.0 版本升级到 v0.26.0。\n   (2) 支付宝：client.TradeOrderSettle()，response 完善字段。\n   (3) 微信V3：新增 client.V3QQTransactionH5()，QQ小程序H5下单。\n   (4) 微信V3：新增 client.V3CombineQQTransactionH5()，合单QQ小程序下单-H5。\n   (5) 微信V3：新增 wechat.V3DecryptViolationNotifyCipherText()，解密 服务商子商户处置记录 回调中的加密信息。#412\n   (6) 微信V3：新增 V3NotifyReq method req.DecryptViolationCipherText()，解密 服务商子商户处置记录 回调中的加密信息。\n   (7) 微信V3：新增 wechat.V3DecryptTransferBatchNotifyCipherText()，解密 商家转账批次回调通知 回调中的加密信息。\n   (8) 微信V3：新增 V3NotifyReq method req.DecryptTransferBatchCipherText()，解密 商家转账批次回调通知 回调中的加密信息。\n   (9) 支付宝：新增 client.MarketingCardTemplateCreate()，会员卡模板创建接口。\n   (10) 支付宝：新增 client.MarketingCardTemplateModify()，会员卡模板修改接口。\n   (11) 支付宝：新增 client.MarketingCardTemplateQuery()，会员卡模板查询接口。\n   (12) 支付宝：新增 client.MarketingCardUpdate()，会员卡更新接口。\n   (13) 支付宝：新增 client.MarketingCardQuery()，会员卡查询接口。\n   (14) 支付宝：新增 client.MarketingCardDelete()，会员卡删卡接口。\n   (15) 支付宝：新增 client.MarketingCardMessageNotify()，会员卡消息通知接口。\n   (16) 支付宝：新增 client.MarketingCardFormTemplateSet()，会员卡开卡表单模板配置接口。\n   (17) 支付宝：新增 client.OfflineMaterialImageUpload()，上传门店照片和视频接口。\n\n版本号：Release 1.5.103\n修改记录：\n   (1) gopay：xlog 库更新，支持接口自定义logger。\n   (2) gopay：go mod 版本升级至 1.21。\n   (3) 支付宝：新增 client.PayAppMarketingConsult()，商户前置内容咨询接口。\n   (4) 支付宝：新增 client.MarketingActivityOrderVoucherCreate()，创建商家券活动接口\n   (5) 支付宝：新增 client.MarketingActivityOrderVoucherCodeDeposit()，同步商家券券码接口\n   (6) 支付宝：新增 client.MarketingActivityOrderVoucherModify()，修改商家券活动基本信息接口\n   (7) 支付宝：新增 client.MarketingActivityOrderVoucherStop()，停止商家券活动接口\n   (8) 支付宝：新增 client.MarketingActivityOrderVoucherAppend()，修改商家券活动发券数量上限接口\n   (9) 支付宝：新增 client.MarketingActivityOrderVoucherUse()，同步券核销状态接口\n   (10) 支付宝：新增 client.MarketingActivityOrderVoucherRefund()，取消券核销状态接口\n   (11) 支付宝：新增 client.MarketingActivityOrderVoucherQuery()，查询商家券活动接口\n   (12) 支付宝：新增 client.MarketingActivityOrderVoucherCodeCount()，统计商家券券码数量接口\n\n版本号：Release 1.5.102\n修改记录：\n   (1) gopay：golang.org/x/crypto v0.23.0 版本升级到 v0.24.0。\n   (2) 微信V3：client.V3Refund() 返回值修复错误结构。\n   (3) 支付宝：新增 client.AntMerchantShopPageQuery()，店铺分页查询接口。\n   (4) 支付宝：新增 client.AntMerchantExpandMccQuery()，商户mcc信息查询接口。\n   (5) 支付宝：新增 client.AntMerchantExpandShopReceiptAccountSave()，店铺增加收单账号接口。\n   (6) 支付宝：新增 client.DataBillEreceiptApply()，申请电子回单(incubating)接口。\n   (7) 支付宝：新增 client.DataBillEreceiptQuery()，查询电子回单状态(incubating)接口。\n   (8) 支付宝：新增 client.FaceVerificationInitialize()，APP人脸核身初始化接口。\n   (9) 支付宝：新增 client.FaceVerificationQuery()，APP人脸核身结果查询接口。\n   (10) 支付宝：新增 client.FaceCertifyInitialize()，H5人脸核身初始化接口。\n   (11) 支付宝：新增 client.FaceCertifyVerify()，H5人脸核身开始认证接口。\n   (12) 支付宝：新增 client.FaceCertifyQuery()，H5人脸核身查询记录接口。\n   (13) 支付宝：新增 client.FaceSourceCertify()，纯服务端人脸核身接口。\n   (14) 支付宝：新增 client.FaceCheckInitialize()，人脸检测初始化接口。\n   (15) 支付宝：新增 client.FaceCheckQuery()，人脸检测结果数据查询接口。\n   (16) 支付宝：新增 client.OcrServerDetect()，服务端OCR接口。\n   (17) 支付宝：新增 client.OcrMobileInitialize()，App端OCR初始化接口。\n   (18) 支付宝：新增 client.OcrCommonDetect()，文字识别OCR接口。\n\n版本号：Release 1.5.101\n修改记录：\n   (1) gopay：golang.org/x/crypto v0.20.0 版本升级到 v0.23.0。\n   (2) gopay：xhttp移除外部依赖，修复文件上传相关接口的Bug。\n   (3) 微信V3：新增 client.V3AbnormalRefund()，发起异常退款。\n   (4) 微信V3：新增 client.V3FavorCallbackUrl()，查询消息通知地址。\n   (5) 微信V3：新增 client.V3ComplaintImage()，商户反馈图片请求接口。\n   (6) 微信V3：修改 wechat.V3DecryptNotifyCipherText() -> wechat.V3DecryptPayNotifyCipherText()，解密 普通支付 回调中的加密信息\n   (7) 微信V3：修改 wechat.DecryptPartnerCipherText() -> wechat.DecryptPartnerPayCipherText()，解密 普通支付 回调中的加密信息\n   (8) 微信V3：新增 wechat.V3DecryptNotifyCipherTextToStruct()，解密 统一数据 到指针结构体对象。\n   (9) 支付宝：新增 client.ZolozAuthenticationSmilepayInit()，刷脸支付初始化接口。\n   (10) 支付宝：新增 client.ZolozAuthenticationCustomerFtokenQuery()，查询刷脸结果信息接口。\n   (11) 支付宝：新增 client.MarketingActivityDeliveryChanged()，推广计划状态变更消息接口。\n   (12) 支付宝：新增 client.MarketingActivityDeliveryCreate()，创建推广计划接口。\n   (13) 支付宝：新增 client.MarketingActivityDeliveryQuery()，查询推广计划接口。\n   (14) 支付宝：新增 client.MarketingActivityDeliveryStop()，停止推广计划接口。\n   (15) 支付宝：新增 client.MarketingMaterialImageUpload()，营销图片资源上传接口。\n   (16) 支付宝：新增 client.AntMerchantExpandIndirectImageUpload()，图片上传接口。\n\n版本号：Release 1.5.100\n修改记录：\n   (1) 支付宝：整理异步通知 NotifyRequest 结构体。\n   (2) 微信V2：新增 client.ProfitSharingOrderAmountQuery()，查询订单待分账金额。\n   (3) 微信V2：新增 client.ProfitSharingMerchantRatioQuery()，查询最大分账比例。\n   (4) gopay：依赖库整理拆分整理，go mod 版本升级到 go1.20。\n   (5) gopay：升级 1.5.100 版本需要伴随部分代码替换修改，谨慎升级。\n   (6) gopay：优化一些已知问题。\n\n版本号：Release 1.5.99\n修改记录：\n   (1) 微信V3：新增微信服务商模式支付分。\n   (2) PayPal：支持代理BaseURL，国内部署以代理转发请求流量。\n\n版本号：Release 1.5.98\n修改记录：\n   (1) 支付宝：PR新增 client.PostFileAliPayAPISelfV2()，文件上传自定义方法（未做验证，不知道是否好用）。\n   (2) Apple：更新部分结构体字段。\n   (3) PayPal：增加Token的自动刷新功能。\n\n版本号：Release 1.5.97\n修改记录：\n   (1) 支付宝：新增 client.TradeOrderOnSettleQuery()，分账剩余金额查询。\n   (2) 支付宝：新增 client.TradeRoyaltyRateQuery()，分账比例查询。\n   (3) 支付宝：更新部分结构体，增加 open_id 相关字段。\n   (4) 扫呗：新增扫呗支付方式。\n   (5) gopay：xhttp库升级改造。\n\n版本号：Release 1.5.96\n修改记录：\n   (1) 拉卡拉：新增拉卡拉支付。\n   (2) interface{} -> any。\n\n版本号：Release 1.5.95\n修改记录：\n   (1) 支付宝：新增 client.DoAliPay()。支付宝http请求方法。\n   (2) Apple：苹果SDK client 化。新增多个 App Store Server API。client 模式为做严格测试（无测试信息key等信息）\n\n版本号：Release 1.5.94\n修改记录：\n   (1) 支付宝：新增 client.TradeSettleConfirm()，统一收单确认结算接口。\n   (2) 微信V3：新增 client.V3MediaDownloadImage()，图片下载\n   (3) 微信V3：修正 查询投诉单协商历史 返回结构提结构\n\n版本号：Release 1.5.93\n修改记录：\n   (1) 微信V2：服务商模式下，付款码支付response新增 sub_openid、sub_is_subscribe 字段。\n   (2) 微信V3：新增 client.V3AsyncApply4SubModifySettlement()，(新)修改结算账户。\n   (3) 微信V3：新增 client.V3Apply4SubMerchantsApplication()，查询结算账户修改申请状态。\n   (4) 支付宝：沙箱模式网关URL替换升级成新版，沙箱调试时请跳转至新版沙箱应用。\n\n版本号：Release 1.5.92\n修改记录：\n   (1) 微信V3：新增 client.V3ComplaintUpdateRefundProgress()，更新退款审批结果。\n   (2) 微信V3：查询投诉单列表/详情，返回新增字段。\n   (3) 微信V3：拆分model文件内结构体至不同文件内。\n   (4) 微信V3：删除 client.V3TransferMerchantDetailQuery()，请更换 client.V3TransferMerchantDetail()\n   (5) 支付宝：拆分model文件内结构体至不同文件内。\n\n版本号：Release 1.5.91\n修改记录：\n   (1) 通联支付：新增通联支付对接，实现基本支付及其他接口。\n\n版本号：Release 1.5.90\n修改记录：\n   (1) 微信V3：新增 client.V3BusinessPointsStatusQuery()，商圈会员待积分状态查询。\n   (2) 微信V3：新增 client.V3BusinessParkingSync()，商圈会员停车状态同步。\n   (3) 微信V3：新增 国密 支持。\n   (4) 微信V3：新增 微信支付分停车服务 相关接口。\n   (5) gopay：go mod 版本升级到 go1.18。\n\n版本号：Release 1.5.89\n修改记录：\n   (1) 微信V2：新增 签约、扣款服务 相关接口。\n   (2) 微信V3：新增 预扣款通知 接口。\n   (3) gopay：debug 模式下，增加签名字符串的输出，更新 mod 包，优化部分方法。\n   (4) alipay：新增 client.OpenAuthTokenAppInviteCreate()，ISV向商户发起应用授权邀约。\n   (5) PayPal：新增 invoice 相关接口。\n\n版本号：Release 1.5.88\n修改记录：\n   (1) PayPal：新增 invoice 相关接口。\n   (2) gopay：更新 mod 包，优化部分方法。\n   (3) alipay：修改过期时间字段类型为 int。\n\n版本号：Release 1.5.87\n修改记录：\n   (1) 微信V3：新增小程序调起支付分所需要的支付参数方法：client.PaySignOfAppletScore()。\n   (2) 微信V3：异步通知解析方法接收BodySize大小调至5MB。\n   (3) 支付宝：统一收单交易退款接口，response补充接收字段。\n   (4) 支付宝：alipay.SystemOauthToken() 接口增加可变参数 AppAuthToken 字段，如需要时可传。\n\n版本号：Release 1.5.86\n修改记录：\n   (1) 微信V3：优化异步验签方法，v3NotifyReq.VerifySignByPKMap()，通过证书Map自动选择相应的证书验签。\n   (2) 微信V3：微信平台证书获取方法变更，client.WxPublicKey() 获取最新微信平台证书；client.WxPublicKeyMap()，获取微信平台证书Map。\n   (3) 支付宝：修复 app_auth_token 的问题。\n\n版本号：Release 1.5.85\n修改记录：\n   (1) 微信V3：修复自动验签的bug\n\n版本号：Release 1.5.84\n修改记录：\n   (1) 微信V3：优化微信平台证书的获取和选择\n   (2) gopay：新增 retry 工具类包\n\n版本号：Release 1.5.83\n修改记录：\n   (1) alipay：新增商家分账相关接口\n   (2) alipay：更新部分注释上的接口文档地址。\n\n版本号：Release 1.5.82\n修改记录：\n   (1) gopay：xhttp库增加BodySize的自定义化设置，各支付渠道 Client 增加 client.SetBodySize() 方法。\n   (2) gopay：xlog 支持自定义实现接口。\n   (3) apple：修改结构体字段 `revocationReason` 类型。\n\n版本号：Release 1.5.81\n修改记录：\n   (1) 微信V3：签名方法，统一判断请求时path后缀是否为 ?，修复当bm为nil时的签名错误问题。\n   (2) QQ：增加了异常结果处理。\n   (3) 支付宝：补充了部分接口的回执参数。\n\n版本号：Release 1.5.80\n修改记录：\n   (1) PayPal：增加payout相关的v1接口\n   (2) PayPal：部分接口返回参数补齐\n\n版本号：Release 1.5.79\n修改记录：\n   (1) PayPal：增加订阅相关的v1接口\n   (2) 微信V3：更新部分接口上注释的文档地址\n   (3) 支付宝：接口请求中，如下公共参数（version、return_url、notify_url、app_auth_token）支持 BodyMap 中此次请求自定义设置\n\n版本号：Release 1.5.78\n修改记录：\n   (1) 微信V3：V3EcommerceBalance() 缺失参数补充\n   (2) 微信V3：新增 client.V3EcommerceDayBalance() 方法，电商平台预约提现\n   (3) 微信V3：修复 银行列表获取相关接口，路由修正\n   (4) 微信V3：修复 client.V3BankSearchBank() 接口，私钥解密出错的问题\n\n版本号：Release 1.5.77\n修改记录：\n   (1) 微信V3：V3EcommerceRefundQueryById()、V3EcommerceRefundQueryByNo()，缺失参数补充\n   (2) 微信V3：新增 client.V3EcommerceWithdraw() 方法，电商平台预约提现\n   (3) 微信V3：新增 client.V3EcommerceWithdrawStatus() 方法，电商平台查询预约提现状态\n\n版本号：Release 1.5.76\n修改记录：\n   (1) gopay：大量优化error处理和返回，统一部分通用错误到 error.go 中\n   (2) 支付宝：新增 alipay.IsBizError()，判断并捕获业务错误\n   (3) 微信、支付宝：优化部分 error 返回格式以及透传，优化参数校验返回\n\n版本号：Release 1.5.75\n修改记录：\n   (1) 微信V3：client.V3Apply4SubModifySettlement()，sub_mchid 问题处理\n   (2) 微信V3：微信分账接收方，model参数补充添加 detail_id\n   (3) PayPal：注释中接口文档地址更新\n   (4) PayPal：新增 client.OrderConfirm()，订单确认\n   (5) PayPal：OrderDetail、Capture、Payer、Name 等结构体，遗漏参数补充\n   (6) gopay：pkg/xtime/parse_format.go，优化 DurationToUnit() 方法，int -> int64\n\n版本号：Release 1.5.74\n修改记录：\n   (1) gopay：一些小改动，util.GetRandomString() -> util.RandomString()\n   (2) gopay：升级 xlog\n\n版本号：Release 1.5.73\n修改记录：\n   (1) Apple：新增内购支付通知V2解析\n\n版本号：Release 1.5.72\n修改记录：\n   (1) Apple：返回参数类型错误修复，pending_renewal_info -> 数组类型\n   (2) QQ：获取 AccessToken 结果 expires_in 类型修复，expires_in -> 字符串类型\n   (3) 微信V3：证书相关代码优化\n\n版本号：Release 1.5.71\n修改记录：\n   (1) 微信V2：去除所有微信小程序、公众号相关接口，请使用 wechat-sdk\n   (2) 支付宝：client.UserCertdocCertverifyConsult() 方法，增加 authToken 参数\n   (2) 微信V3：新增 银行组件（服务商） 相关接口，详情查看v3文档最下方的接口列表\n\n版本号：Release 1.5.69\n修改记录：\n   (1) 微信V3：修改 client.V3RefundQuery()、增加入参参数，适配 服务商 模式\n   (2) 微信V3：修复 client.V3Apply4SubSubmit()，接口路由修复\n   (3) gopay：BodyMap 新增 Unmarshal() 方法，解析数据到结构体、数组指针\n\n版本号：Release 1.5.68\n修改记录：\n   (1) 微信V3：修复 client.V3ComplaintResponse()、client.V3ComplaintComplete()， complaintId 参数类型错误问题\n   (2) 微信V3：新增 电商收付通（分账）相关接口，详情查看v3文档最下方的接口列表\n   (3) 微信V3：新增 电商收付通（补差）相关接口，详情查看v3文档最下方的接口列表\n   (4) 微信V3：新增 电商收付通（退款）相关接口，详情查看v3文档最下方的接口列表\n   (5) 微信V3：返回参数中字段，ID写法全部改写为Id写法\n\n版本号：Release 1.5.67\n修改记录：\n   (1) 微信V3：配合微信文档修改，拆分服务商 批量转账 相关接口，接口如下：\n   (2) 微信V3：新增 client.V3PartnerTransfer()\n   (3) 微信V3：新增 client.V3PartnerTransferQuery()\n   (4) 微信V3：新增 client.V3PartnerTransferDetail()\n   (5) 微信V3：新增 client.V3PartnerTransferMerchantQuery()\n   (6) 微信V3：新增 client.V3PartnerTransferMerchantDetail()\n   (7) 微信V3：新增 client.V3Withdraw()\n   (8) 微信V3：新增 client.V3WithdrawStatus()\n   (9) 微信V3：新增 client.V3WithdrawDownloadErrBill()\n   (10) 微信V3：修改 V3TransferDetailQuery() => V3TransferDetail()\n   (11) 微信V3：修改 V3TransferMerchantDetailQuery() => V3TransferMerchantDetail()\n\n版本号：Release 1.5.66\n修改记录：\n   (1) 微信V3：fix bug that `{\"code\":\"PARAM_ERROR\",\"message\":\"平台证书序列号Wechatpay-Serial错误\"}`\n\n版本号：Release 1.5.65\n修改记录：\n   (1) 微信V3：新增 client.V3EcommerceApply()，二级商户进件\n   (2) 微信V3：新增 client.V3EcommerceApplyStatus()，查询申请状态\n   (3) 微信V3：新增 client.V3GoldPlanManage()，点金计划管理\n   (4) 微信V3：新增 client.V3GoldPlanBillManage()，商家小票管理\n   (5) 微信V3：新增 client.V3GoldPlanFilterManage()，同业过滤标签管理\n   (6) 微信V3：新增 client.V3GoldPlanOpenAdShow()，开通广告展示\n   (7) 微信V3：新增 client.V3GoldPlanCloseAdShow()，关闭广告展示\n   (8) 微信V3：公有化 wechat.GetReleaseSign()、wechat.GetSandBoxSign() 方法\n   (9) 微信V3：修改 client.V3PartnerCloseOrder() 入参参数\n   (10) GoPay：一些小修改优化\n\n版本号：Release 1.5.64\n修改记录：\n   (1) xhttp：恢复 xhttp\n\n版本号：Release 1.5.63\n修改记录：\n   (1) GoPay：部分代码优化\n   (2) xhttp：xhttp client 优化，支持自定义client，默认还是使用标准 http.Client\n\n版本号：Release 1.5.62\n修改记录：\n   (1) 微信V3：client 内 WxSerialNo、ApiV3Key 公有化\n   (2) 微信V3：client 提供新方法 client.WxPublicKey() 直接获取 微信平台公钥\n   (3) 微信V3：wechat 提供新方法 wechat.V3VerifySignByPK()，不再推荐使用 wechat.V3VerifySign()\n   (4) 微信V3：V3NotifyReq 提供新方法 notify.VerifySignByPK()，不再推荐使用 notify.VerifySign()\n   (5) 微信V3：整理微信v3说明文档\n\n版本号：Release 1.5.61\n修改记录：\n   (1) gopay：更新 xhttp pkg, 方法全部增加 context 传递\n\n版本号：Release 1.5.60\n修改记录：\n   (1) 微信V3：不再推荐使用 client.SetPlatformCert() 方法\n   (2) 微信V3：新增 client.GetAndSelectNewestCert() 方法\n   (3) 微信V3：重构 client.AutoVerifySign() 方法\n   (4) QQ：新增 qq.GetAccessToken() 方法\n   (5) QQ：新增 qq.GetOpenId() 方法\n   (6) QQ：新增 qq.GetUserInfo() 方法\n\n版本号：Release 1.5.59\n修改记录：\n   (1) 微信V3：证书获取方法返回结构体，去除 SignInfo 字段\n   (2) gopay：BodyMap，EncodeURLParams 方法稍作调整\n   (3) PayPal：PayPal支付能力接入（订单、支付）\n\n版本号：Release 1.5.58\n修改记录：\n   (1) 微信V3：新增 client.V3FavorMediaUploadImage() 图片上传(营销专用)\n   (2) 微信V3：新增 client.V3EcommerceIncomeRecord() 特约商户银行来账查询\n   (3) 微信V3：新增 client.V3EcommerceBalance() 查询特约商户账户实时余额\n   (4) 微信V3：新增 client.V3BusiFavorSend() 发放消费卡\n   (5) 微信V3：新增 client.V3PartnershipsBuild() 建立合作关系\n   (6) 微信V3：新增 client.V3PartnershipsTerminate() 终止合作关系\n   (7) 微信V3：新增 client.V3PartnershipsList() 查询合作关系列表\n   (8) 微信V3：修改 client.V3PartnerQueryOrder() 入参参数调整\n   (9) 微信V3：修改 client.V3BillLevel2FundFlowBill() => client.V3BillEcommerceFundFlowBill() 申请特约商户资金账单\n   (10) 支付宝：按照支付宝更新后的文档，修改大量接口返回参数结构体字段\n\n版本号：Release 1.5.57\n修改记录：\n   (1) 微信V3：修复一些已知问题\n   (2) 支付宝：一些细小的修复，部分参数类型更正\n\n版本号：Release 1.5.56\n修改记录：\n   (1) 微信V3：修改 client.V3ProfitShareReturnResult() 接口入参，适配服务商模式\n   (2) 微信V3：部分接口参数需要加密，修复 V3EncryptText() 和 V3DecryptText() 方法\n   (3) 支付宝：修改 alipay.NewClient()，增加error返回值，去除Client内部分字段\n   (4) Apple：新增apple pay的 apple.VerifyReceipt() 校验收据API\n   (5) 优化代码中所有有关证书的解析操作\n\n版本号：Release 1.5.55\n修改记录：\n   (1) 微信V3：wechat.NewClientV3()，去掉初始化参数 appid，所以方法中需要 appid 或sp_appid 的，需要自行传参\n   (2) 微信V3：新增 代金券 相关接口\n   (3) 微信V3：新增 商家券 相关接口\n   (4) 微信V2、V3：修复部分接口发现的Bug\n\n版本号：Release 1.5.54\n修改记录：\n   (1) 微信V3：新增微信支付分回调参数解密方法 notifyReq.DecryptScoreCipherText()\n   (2) 微信V3：新增分账接口 client.V3ProfitShareMerchantConfigs()\n   (3) Readme：更新Readme\n\n版本号：Release 1.5.53\n修改记录：\n   (1) 支付宝：补充接口\n   (2) 微信V3：修改支付分相关接口的返回参数字段， out_trade_no 为 out_order_no\n\n版本号：Release 1.5.52\n修改记录：\n   (1) 支付宝：补充 支付API 相关接口\n   (2) pkg：xhttp.Client 的 Transport 默认配置：Proxy: http.ProxyFromEnvironment\n\n版本号：Release 1.5.51\n修改记录：\n   (1) 微信：新增 特约商户进件（服务商平台） 相关接口\n   (2) 支付宝：补充完整 芝麻分 相关接口\n   (3) 支付宝：补充 会员API 相关接口\n\n版本号：Release 1.5.50\n修改记录：\n   (1) 支付宝：新增 芝麻分 相关接口\n   (2) 支付宝：当判断 Response 中 code!=\"10000\" 时，不再返回nil，而是返回 aliRsp 结果\n\n版本号：Release 1.5.49\n修改记录：\n   (1) 微信V3：新增 wechat.GetPlatformCerts()，无需初始化V3client，直接获取微信平台证书和序列号等信息\n   (2) gopay：更新 go mod version\n   (3) 微信V2：新增 client.CustomsDeclareOrder()，订单附加信息提交（正式环境）\n   (4) 微信V2：新增 client.CustomsDeclareQuery()，订单附加信息查询（正式环境）\n   (5) 微信V2：新增 client.CustomsReDeclareOrder()，订单附加信息重推（正式环境）\n   (6) 支付宝：新增 client.TradeCustomsDeclare()，统一收单报关接口（正式环境）\n   (7) 支付宝：新增 client.AcquireCustoms()，报关接口（正式环境），未经测试\n   (8) 支付宝：新增 client.AcquireCustomsQuery()，报关查询接口（正式环境），未经测试\n\n版本号：Release 1.5.48\n修改记录：\n   (1) 微信V3：修复 平台证书序列号Wechatpay-Serial错误 问题\n   (2) 微信V3：新增 client.SetPlatformCert()，设置 微信支付平台证书 和 证书序列号 方法\n   (3) 微信V3：新增 client.V3EncryptText()，请求参数 敏感信息 加密方法\n   (4) 微信V3：新增 client.V3DecryptText()，返回参数 敏感信息 解密方法\n   (5) 微信V3：修改 client.AutoVerifySign() 方法无需传参，但需要提前调用 client.SetPlatformCert() 设置 微信支付平台证书 和 证书序列号\n\n版本号：Release 1.5.47\n修改记录：\n   (1) 微信V3：新增 转账相关 相关接口\n   (2) 微信V3：新增 账户余额查询 相关接口\n   (3) 微信V3：新增 来账识别 相关接口\n\n版本号：Release 1.5.46\n修改记录：\n   (1) 微信V3：新增敏感信息加解密方法，wechat.V3EncryptText() 加密数据，wechat.V3DecryptText() 解密数据\n   (2) 微信V3：新增 微信先享卡 相关接口\n   (3) 微信V3：新增 支付即服务 相关接口\n   (4) 微信V3：新增 智慧商圈 相关接口\n\n版本号：Release 1.5.45\n修改记录：\n   (1) 支付宝：优化现有代码，修复公钥证书模式下，同步验签失败的问题\n   (2) 支付宝：新增 client.AutoVerifySign()，自动同步验签设置（公钥证书模式）\n   (3) 支付宝：新增 client.PublicCertDownload()，应用支付宝公钥证书下载\n   (4) 支付宝：新增 client.FundTransPayeeBindQuery()，资金收款账号绑定关系查询\n   (5) 支付宝：新增 client.OpenAppQrcodeCreate()，小程序生成推广二维码接口\n   (6) 支付宝：新增 client.UserAgreementPageSign()，支付宝个人协议页面签约接口\n   (7) 支付宝：新增 client.UserAgreementPageUnSign()，支付宝个人代扣协议解约接口\n   (8) 支付宝：新增 client.UserAgreementQuery()，支付宝个人代扣协议查询接口\n   (9) 支付宝：新增 client.TradeOrderInfoSync()，支付宝订单信息同步接口\n   (10) 支付宝：新增 client.TradeAdvanceConsult()，订单咨询服务\n\n版本号：Release 1.5.44\n修改记录：\n   (1) 微信V3：新增 图片上传 接口\n   (2) 微信V3：新增 视频上传 接口\n   (3) 微信V3：修复消费者投诉接口中的图片上传失败问题\n\n版本号：Release 1.5.42\n修改记录：\n   (1) 迁移新仓库 https://github.com/go-pay/gopay\n\n版本号：Release 1.5.41\n修改记录：\n   (1) 微信V3：新增 消费者投诉2.0 相关接口\n   (2) 微信V3：新增 分账 相关接口\n\n版本号：Release 1.5.40\n修改记录：\n   (1) 微信V3：新增微信支付分（免确认模式）相关接口\n   (2) 微信V3：新增微信支付分（免确认预授权模式）相关接口\n\n版本号：Release 1.5.39\n修改记录：\n   (1) 微信V3：新增微信支付分（公共API）相关接口\n\n版本号：Release 1.5.38\n修改记录：\n   (1) 微信：去掉所以微信 client 方法中需要传证书的参数，请统一在初始化client时，添加证书\n   (2) 微信：使用方法请参考 wechat/client_test.go 下的初始化，以及各个方法使用\n\n版本号：Release 1.5.37\n修改记录：\n   (1) 支付宝：修改 client.FundAuthOrderAppFreeze() 接口返回参数\n   (2) 支付宝：新增 client.GetRequestSignParam()，获取已签名的完整请求参数\n   (3) 微信V3：增加 client.GetPlatformCerts()，获取微信平台证书公钥，增加注释说明\n   (4) 支付宝：拆分 _test.go 文件\n\n版本号：Release 1.5.36\n修改记录：\n   (1) 支付宝：新增 资金API 类别 接口实现\n   (2) 微信V3：修复银行转账接口，银行卡号和收款人的 RSA 加密bug\n   (3) 一些其他小修复调整\n\n版本号：Release 1.5.35\n修改记录：\n   (1) 微信V3：修复 普通支付回调通知 解密后的结构体问题\n   (2) 微信V3：新增 合单支付回调通知\n   (3) 微信V3：修复 退款回调通知 解密后的结构体问题\n\n版本号：Release 1.5.34\n修改记录：\n   (1) 微信V3：修复 client.GetPlatformCerts() 的返回值 code 问题\n   (2) ReadMe：补充 README.md 说明\n   (3) 微信V3：修复 PaySignOfApp() 签名出错的问题\n   (4) 微信V2：部分文件调整\n\n版本号：Release 1.5.32\n修改记录：\n   (1) xhttp：Fix bug about Transport\n\n版本号：Release 1.5.31\n修改记录：\n   (1) 微信：新增服务商支付接口\n\n版本号：Release 1.5.30\n修改记录：\n   (1) BodyMap：恢复 bm.Get() 方法获取的是string类型，增加 bm.GetInterface()\n   (2) 微信：新增V3版本退款查询接口\n\n版本号：Release 1.5.29\n发布时间：2021/02/27 22:49\n修改记录：\n   (1) 支付宝：新增 client.PostAliPayAPISelfV2()，比非V2版本更灵活化，具体参考 client_test.go 内的 TestClient_PostAliPayAPISelfV2() 方法\n   (2) BodyMap：新增 bm.SetFormFile() 的部分方法，修改 bm.Get() 方法，新增bm.GetString() 方法\n   (3) xHttp：更新 httpClient， httpClient.Type() 支持 TypeMultipartFormData 类型\n   (4) go mod 版本改为 1.14\n\n版本号：Release 1.5.28\n发布时间：2021/02/19 18:48\n修改记录：\n   (1) QQ：新增 client.AddCertFileContent()，解决无证书文件，只有证书内容的问题\n   (2) 支付宝：新增 alipay.VerifySyncSignWithCert()，同步证书验签\n   (3) 支付宝：新增 client.SetCertSnByContent()，通过应用公钥证书内容设置 app_cert_sn、alipay_root_cert_sn、alipay_cert_sn\n   (4) 支付宝：删除废弃接口 client.FundTransToaccountTransfer()\n   (5) fix BodyMap 的部分方法\n\n版本号：Release 1.5.27\n发布时间：2021/02/03 18:50\n修改记录：\n   (1) GoPay：去掉对 gotil 的强依赖\n\n版本号：Release 1.5.26\n发布时间：2021/01/29 19:38\n修改记录：\n   (1) 微信：重新整理文件分级，商户分账模块增加test方法说明\n   (2) BodyMap: 去除 GetArrayBodyMap()、GetBodyMap() 方法\n\n版本号：Release 1.5.25\n发布时间：2020/12/31 18:38\n修改记录：\n   (1) 微信：v3 基础支付接口完成，使用请参考：gopay/wechat/v3/client_test.go\n\n版本号：Release 1.5.24\n发布时间：2020/12/21 18:58\n修改记录：\n   (1) 微信：证书支持二选一，只传 apiclient_cert.pem 和 apiclient_key.pem 或者只传 apiclient_cert.p12\n\n版本号：Release 1.5.23\n发布时间：2020/12/15 17:58\n修改记录：\n   (1) 微信：新增 client.AddCertFileContent()，解决无证书文件，只有证书内容的问题\n\n版本号：Release 1.5.22\n发布时间：2020/12/04 02:58\n修改记录：\n   (1) 更新 gotil，修复xlog导致 go 1.14 以下版本报bug问题\n   (2) 采纳 WenyXu 的意见，优化BodyMap的用法\n\n版本号：Release 1.5.20\n发布时间：2020/09/30 23:58\n修改记录：\n   (1) 微信：client 添加 DebugSwitch 开关，默认关闭，不输出 请求参数和返回参数，通过 client.DebugSwitch = gopay.DebugOn 打开\n   (2) 支付宝：client 添加 DebugSwitch 开关，默认关闭，不输出 请求参数和返回参数，通过 client.DebugSwitch = gopay.DebugOn 打开\n   (3) QQ：client 添加 DebugSwitch 开关，默认关闭，不输出 请求参数和返回参数，通过 client.DebugSwitch = gopay.DebugOn 打开\n   (4) 更新 Gotil\n\n版本号：Release 1.5.19\n发布时间：2020/09/20 23:58\n修改记录：\n   (1) 微信：修复 client.ProfitSharingQuery() 接口的Bug，https://github.com/iGoogle-ink/gopay/issues/68\n   (2) 微信：优化 client.doProdPost()\n   (3) 支付宝：优化 client.doAliPay()\n   (4) 微信：项目文件区分改动，开放平台接口和微信公众号区分\n   (5) 微信：替换 wechat.GetAppLoginAccessToken() = > wechat.GetOauth2AccessToken()\n   (6) 微信：替换 wechat.RefreshAppLoginAccessToken() = > wechat.RefreshOauth2AccessToken()\n   (7) 微信：替换 wechat.GetUserInfoOpen() = > wechat.GetOauth2UserInfo()\n   (8) 微信：替换 wechat.GetUserInfo() = > wechat.GetPublicUserInfo()\n   (9) 微信：新增 wechat.CheckOauth2AccessToken() 检验授权凭证（access_token）是否有效\n   (10) 微信：新增 wechat.GetPublicUserInfoBatch() 批量获取用户基本信息（微信公众号）\n   (11) 微信：新增 client.SendCashRed() 发放现金红包\n   (12) 微信：新增 client.SendGroupCashRed() 发放现金裂变红包\n   (13) 微信：新增 client.SendAppletRed() 发放小程序红包\n   (14) 微信：新增 client.QueryRedRecord() 查询红包记录\n   (15) QQ：新增 client.SendCashRed() 创建现金红包，（未经测试，有条件的帮忙测一下吧，有问题提PR）\n   (16) QQ：新增 client.DownloadRedListFile() 对账单下载，（未经测试，有条件的帮忙测一下吧，有问题提PR）\n   (17) QQ：新增 client.QueryRedInfo() 查询红包详情，（未经测试，有条件的帮忙测一下吧，有问题提PR）\n\n版本号：Release 1.5.18\n发布时间：2020/08/29 18:30\n修改记录：\n   (1) 微信：修复 client.AddCertFilePath() 无效的Bug\n   (2) QQ：修复 client.AddCertFilePath() 无效的Bug\n   (3) Gotil：升级 gotil 到 v1.0.7-beta2 版本\n   (4) 支付宝：OpenAuthTokenAppResponse 结构体中 ExpiresIn、ReExpiresIn 字段改为int64（有用户反馈返回的是int类型，但文档写的是string），如果此处有问题，请立马联系改回去。\n\n版本号：Release 1.5.17\n发布时间：2020/08/23 15:30\n修改记录：\n   (1) 微信：Response model 增加字段\n   (2) ReadMe：修改部分遗留未更改的文档内容\n   (3) 支付宝：添加证书由只支持证书路径，改为支持证书路径或者这书Byte数组\n   (4) 支付宝：修复SystemOauthToken()方法未添加 AppCertSN 和 AliPayRootCertSN 的问题\n\n版本号：Release 1.5.16\n发布时间：2020/07/29 18:30\n修改记录：\n   (1) 微信：新增公共方法：wechat.GetUserInfoOpen()，微信开放平台：获取用户个人信息(UnionID机制)\n   (2) Gotil：升级 gotil 到 v1.0.4 版本\n   (3) 微信：新增ReadMe说明，微信支付下单等操作可用沙箱环境测试是否成功，但真正支付时，请使用正式环境，isProd = true，不然会报错\n\n版本号：Release 1.5.15\n发布时间：2020/07/09 18:30\n修改记录：\n   (1) 微信：新增client方法：client.ProfitSharing()，请求单次分账\n   (2) 微信：新增client方法：client.MultiProfitSharing()，请求多次分账\n   (3) 微信：新增client方法：client.ProfitSharingQuery()，查询分账结果\n   (4) 微信：新增client方法：client.ProfitSharingAddReceiver()，添加分账接收方\n   (5) 微信：新增client方法：client.ProfitSharingRemoveReceiver()，删除分账接收方\n   (6) 微信：新增client方法：client.ProfitSharingFinish()，完结分账\n   (7) 微信：新增client方法：client.ProfitSharingReturn()，分账回退\n   (8) 微信：新增client方法：client.ProfitSharingReturnQuery()，分账回退结果查询\n   (9) 微信：新增client方法：client.PayBank()，企业付款到银行卡API\n   (10) 微信：新增client方法：client.QueryBank()，查询企业付款到银行卡API\n   (11) 微信：新增client方法：client.GetRSAPublicKey()，获取RSA加密公钥API\n   (12) 微信：修改client方法名：client.PostRequest() -> client.PostWeChatAPISelf()\n   (13) QQ：修改client方法名：client.PostRequest() -> client.PostQQAPISelf()\n   (14) 说明：方法未经严格测试，还请开发者在开始使用时确认是否正常使用，有问题请提 issue\n\n版本号：Release 1.5.14\n发布时间：2020/06/27 3:30\n修改记录：\n   (1) 引入 github.com/iGoogle-ink/gotil 包\n   (2) 替换 log 输出样式\n   (3) 支付宝：新增client方法：client.PostAliPayAPISelf()，支付宝接口自行实现方法\n\n版本号：Release 1.5.12\n发布时间：2020/05/20 02:10\n修改记录：\n   (1) http_client：增加默认请求的超时时间 60s，增加 SetTimeout() 方法，可自定义超时时间\n   (2) 微信：修改 申请退款、退款查询、订单查询 接口的返回结构体，增加带下标的部分字段\n   (3) 微信：增加 申请退款、退款查询、订单查询 接口的返回值，新增了 resBm BodyMap 类型，方便接收结构体中未定义到的下标字段\n   (4) 微信：新增client方法：client.GetTransferInfo()，查询企业退款，此方法实际暂未测试，请自行测试，有问题提issue\n\n版本号：Release 1.5.11\n发布时间：2020/05/13 17:15\n修改记录：\n   (1) 支付宝：修复rsp解析出错的问题 client.SystemOauthToken()\n   (2) 微信：修改部分公共方法Rsp结构体参数问题，同步微信文档\n\n版本号：Release 1.5.10\n发布时间：2020/05/06 20:15\n修改记录：\n   (1) 微信：修改部分公共方法返回值结构体字段类型\n   (2) drone fix\n\n版本号：Release 1.5.9\n发布时间：2020/04/25 15:32\n修改记录：\n   (1) 支付宝：异步验签，推荐使用 alipay.ParseNotifyToBodyMap()，解析参数后参数在Verify验签时，推荐传入参数BodyMap bm。\n   (2) 支付宝：修改公共方法：alipay.ParseNotifyResultToBodyMap() 为 alipay.ParseNotifyToBodyMap()\n   (3) 支付宝：修改公共方法：alipay.ParseNotifyResultByURLValues() 为 alipay.ParseNotifyByURLValues()\n   (4) 支付宝：废弃公共方法：alipay.ParseNotifyResult()，因为异步通知有参数因为支付接口不同，返回的字段不同，无法使用结构体全部定义好\n   (5) 支付宝：调整了部分接口的文档地址\n   (6) 微信：修改公共方法：wechat.ParseNotifyResultToBodyMap() 为 wechat.ParseNotifyToBodyMap()\n   (7) 微信：修改公共方法：wechat.ParseNotifyResult() 为 wechat.ParseNotify()\n   (8) 微信：修改公告方法：wechat.ParseRefundNotifyResult() 为 wechat.ParseRefundNotify()\n\n版本号：Release 1.5.8\n发布时间：2020/04/18 21:32\n修改记录：\n   (1) 微信：新增Client方法：client.PostRequest()，向微信发送Post请求，对于本库未提供的微信API，可自行实现，通过此方法发送请求\n   (2) 微信：微信同步返回结构体类型全部修改为string类型，验签出错的问题\n   (3) 微信：Client方法，需要传证书的接口方法，入参类型统一改为any,无需传证书地址时，由 \"\" 改为 nil\n   (4) QQ：同微信改动\n   (5) 支付宝：model结构体参数全部修改为string类型\n\n版本号：Release 1.5.7\n发布时间：2020/03/25 20:32\n修改记录：\n   (1) 支付宝：修改 client.UserCertifyOpenQuery() 方法的返回值解析类型报错问题，官方文档类型实例有误\n\n版本号：Release 1.5.6\n发布时间：2020/03/06 17:32\n修改记录：\n   (1) 支付宝：新增Client方法：client.SetPrivateKeyType()，设置 支付宝 私钥类型，alipay.PKCS1 或 alipay.PKCS8，默认 PKCS1。\n   (2) 支付宝：修改公共方法：alipay.GetRsaSign()，增加了私钥类型参数，并将私钥的格式化操作，移动到该方法内，传入的私钥无需事先格式化。\n\n版本号：Release 1.5.5\n发布时间：2020/03/05 18:32\n修改记录：\n   (1) 支付宝：新增Client方法：client.DataBillBalanceQuery()，支付宝商家账户当前余额查询。\n   (2) 支付宝：新增Client方法：client.DataBillDownloadUrlQuery()，查询对账单下载地址。\n   (3) 支付宝：开放公共方法：alipay.GetRsaSign()，获取支付宝参数签名（参数sign值）。\n   (4) 支付宝：开放公共方法：alipay.FormatURLParam()，格式化支付宝请求URL参数。\n   (5) 支付宝：新增公共方法：alipay.ParseNotifyResultByURLValues()，通过 url.Values 解析支付宝支付异步通知的参数到Struct。\n\n版本号：Release 1.5.4\n发布时间：2020/02/29 14:32\n修改记录：\n   (1) 支付宝：新增Client方法：client.UserInfoAuth()，用户登陆授权。（方法未测试通过，待有测试条件的同学测试一下吧）\n   (2) 支付宝：新增公共方法：alipay.MonitorHeartbeatSyn()，验签接口。（方法未测试通过，待有测试条件的同学测试一下吧）\n\n版本号：Release 1.5.3\n发布时间：2020/02/19 11:32\n修改记录：\n   (1) 支付宝：修改公共方法：SystemOauthToken()，添加参数 signType\n\n版本号：Release 1.5.2\n发布时间：2020/02/14 13:32\n修改记录：\n   (1) 支付宝：官方单笔转账接口更新，新增Client方法：client.FundTransUniTransfer()，单笔转账接口\n   (2) 支付宝：新增Client方法：client.FundTransCommonQuery()，转账业务单据查询接口\n   (3) 支付宝：新增Client放大：client.FundAccountQuery()，支付宝资金账户资产查询接口\n   (3) 支付宝：Client的方法，必选参数校验\n\n版本号：Release 1.5.1\n发布时间：2020/01/03 17:32\n修改记录：\n   (1) 由于下载包需要 /v2 的问题，替换版本号到 1.x，代码不变，只改变版本号记录\n\n版本号：Release 2.0.5\n发布时间：2020/01/01 22:55\n修改记录：\n   (1) 添加一些函数参数判空操作，避免Panic\n   (2) 去掉不用的结构体 ReturnMessage\n   (3) 去掉 go mod v1.4.8版本的依赖\n\n版本号：Release 2.0.4\n发布时间：2019/12/24 14:29\n修改记录：\n   (1) 支付宝：新增支付宝公钥文件验证签方法（公钥证书模式）：client.VerifySignWithCert()\n\n版本号：Release 2.0.3\n发布时间：2019/12/18 19:25\n修改记录：\n   (1) 微信：新增Client方法：client.AuthCodeToOpenId()，授权码查询OpenId（正式）\n   (2) 微信：新增Client方法：client.Report()，交易保障\n   (3) 微信：新增Client方法：client.EntrustPublic()，公众号纯签约（正式）\n   (4) 微信：新增Client方法：client.EntrustAppPre()，APP纯签约-预签约接口-获取预签约ID（正式）\n   (5) 微信：新增Client方法：client.EntrustH5()，H5纯签约（正式）\n   (5) 微信：新增Client方法：client.EntrustPaying()，支付中签约（正式）\n\n版本号：Release 2.0.2\n发布时间：2019/12/13 23:25\n修改记录：\n   (1) 微信：删除Client方法：client.AddCertFileByte()\n   (2) 版本限制 golang 1.13，fmt.Errorf() 使用 %w 格式化 error，1.13新特性\n\n版本号：Release 2.0.1\n发布时间：2019/12/13 17:20\n修改记录：\n   (1) 处理 go mod 包，go get github.com/iGoogle-ink/gopay/v2\n\n版本号：Release 2.0.0\n发布时间：2019/12/12 18:22\n修改记录：\n   (1) 按支付渠道模块分包大调整\n   (2) 一大推细小改动，不一一描述了\n   (3) 支付宝：修改公共API方法：alipay.GetCertSN()，不再支持支付宝根证书的SN获取\n   (4) 支付宝：新增公共API方法：alipay.GetRootCertSN()，获取root证书序列号SN\n   (5) 支付宝：新增Client方法：alipay.SetLocation()，设置时区，不设置或出错均为默认服务器时间\n\n版本号：Release 1.4.8\n发布时间：2019/12/11 16:40\n修改记录：\n   (1) 1.几 最后一个版本\n   (2) 修复一些问题\n   (3) 支付宝：修改公共API方法：gopay.GetCertSN()，不再支持支付宝根证书的SN获取\n   (4) 支付宝：新增公共API方法：gopay.GetRootCertSN()，获取root证书序列号SN\n   (5) 微信：修改公共API方法：gopay.GetWeChatSanBoxParamSign()，修复 沙箱验签出错问题\n\n版本号：Release 1.4.6\n发布时间：2019/12/09 18:37\n修改记录：\n   (1) 移除第三方http请求库，自己封装了一个请求库使用，解决不会设置 goproxy 无法下载包的问题\n   (2) 使用中如有问题，请微信联系作者处理 或 提issue\n\n版本号：Release 1.4.5\n发布时间：2019/12/07 21:56\n修改记录：\n   (1) 支付宝：修复 公钥证书模式 下，同步返回参数接收问题，返回接收结构体增加参数 alipay_cert_sn，同步返回证书模式验签，暂时未解决\n   (2) 支付宝：修改公共API方法：gopay.VerifyAliPaySign()，不再支持同步验签，只做异步通知验签\n   (3) 支付宝：新增公共API方法：gopay.VerifyAliPaySyncSign()，支付宝同步返回验签\n   (4) 支付宝：新增Client方法：client.SetAliPayPublicCertSN()，设置 支付宝公钥证书SN，通过 gopay.GetCertSN() 获取 alipay_cert_sn\n   (5) 支付宝：新增Client方法：client.SetAppCertSnByPath()，设置 app_cert_sn 通过应用公钥证书路径\n   (6) 支付宝：新增Client方法：client.SetAliPayPublicCertSnByPath()，设置 alipay_cert_sn 通过 支付宝公钥证书文件路径\n   (7) 支付宝：新增Client方法：client.SetAliPayRootCertSnByPath()，设置 alipay_root_cert_sn 通过支付宝CA根证书文件路径\n\n版本号：Release 1.4.4\n发布时间：2019/11/16 15:56\n修改记录：\n   (1) 支付宝：新增公共API方法：gopay.ParseAliPayNotifyResultToBodyMap()，解析支付宝支付异步通知的参数到BodyMap\n   (2) 支付宝：修改公共API方法：gopay.VerifyAliPaySign()，支付宝异步验签支持传入 BodyMap\n   (3) 微信：新增Client方法：client.AddCertFileByte()，添加微信证书 Byte 数组\n   (4) 微信：新增Client方法：client.AddCertFilePath()，添加微信证书 Path 路径\n   (5) 微信：微信Client需要证书的方法，如已使用client.AddCertFilePath()或client.AddCertFileByte()添加过证书，参数certFilePath、keyFilePath、pkcs12FilePath全传空字符串 \"\"，否则，3证书Path均不可空\n   (6) BodyMap 的Set方法去掉switch判断，直接赋值\n   (7) WeChatClient、AliPayClient 加锁\n   (8) 修改部分小问题和部分样式\n\n版本号：Release 1.4.3\n发布时间：2019/11/12 01:15\n修改记录：\n   (1) 微信：新增公共API方法：gopay.ParseWeChatRefundNotifyResult()，解析微信退款异步通知的请求参数\n   (2) 微信：新增公共API方法：gopay.DecryptRefundNotifyReqInfo()，解密微信退款异步通知的加密数据\n   (3) 支付宝：修改Client方法：client.AliPayUserCertifyOpenCertify()，身份认证开始认证（获取认证链接）\n   (4) 修改部分小问题\n\n版本号：Release 1.4.2\n发布时间：2019/11/11 16:43\n修改记录：\n   (1) 支付宝：新增Client方法：client.AliPayUserCertifyOpenInit()，身份认证初始化服务\n   (2) 支付宝：新增Client方法：client.AliPayUserCertifyOpenCertify()，身份认证开始认证\n   (3) 支付宝：新增Client方法：client.AliPayUserCertifyOpenQuery()，身份认证记录查询\n   (4) 支付宝：所有方法的返回结构体下的 XxxResponse 字段，统一修改为 Response，如：\n       type AliPayTradeCreateResponse struct {\n        Response createResponse `json:\"alipay_trade_create_response,omitempty\"`\n        SignData string         `json:\"-\"`\n        Sign     string         `json:\"sign\"`\n       }\n   (5) 支付宝：修改一些代码格式问题\n   (6) 支付宝：client.AlipayOpenAuthTokenApp() 修改为 client.AliPayOpenAuthTokenApp()\n\n版本号：Release 1.4.1\n发布时间：2019/11/04 14:28\n修改记录：\n   (1) 支付宝：修改公共API方法：GetCertSN()，修复获取支付宝根证书获取 sn 的问题（wziww）\n   (2) 支付宝：新增Client方法：client.SetAppCertSN()，可自行获取公钥 sn 并赋值\n   (3) 支付宝：新增Client方法：client.SetAliPayRootCertSN()，可自行获取根证书 sn 并赋值\n\n版本号：Release 1.4.0\n发布时间：2019/10/10 13:51\n修改记录：\n   (1) AliPayNotifyRequest 结构体，新增加两个字段：method、timestamp，修复电脑网站支付，配置 return_url 支付成功后，支付宝请求该 return_url 返回参数验签失败的问题\n   (2) 去除支付宝老验签方法 VerifyAliPayResultSign()\n   (3) 去除微信老验签方法 VerifyWeChatResultSign()\n\n版本号：Release 1.3.9\n发布时间：2019/09/30 00:01\n修改记录：\n   (1) 修复支付宝支付验签出错的问题！\n\n版本号：Release 1.3.8\n发布时间：2019/09/24 17:51\n修改记录：\n   (1) 代码风格修改更新\n\n版本号：Release 1.3.7\n发布时间：2019/09/22 11:41\n修改记录：\n   (1) README 增加 go mod 安装gopay的方法指导\n\n版本号：Release 1.3.6\n发布时间：2019/09/09 23:51\n修改记录：\n   (1) 新增支付宝Client方法：client.AlipayUserInfoShare() => 支付宝会员授权信息查询接口（App支付宝登录）\n\n版本号：Release 1.3.6\n发布时间：2019/09/05 02:55\n修改记录：\n   (1) 更改微信公共API方法名称：gopay.GetAccessToken() to gopay.GetWeChatAppletAccessToken() => 获取微信小程序全局唯一后台接口调用凭据\n   (2) 更改微信公共API方法名称：gopay.GetPaidUnionId() to gopay.GetWeChatAppletPaidUnionId() => 微信小程序用户支付完成后，获取该用户的 UnionId，无需用户授权\n   (3) 新增微信公共API方法：gopay.GetAppWeChatLoginAccessToken() => App应用微信第三方登录，code换取access_token\n   (4) 新增微信公共API方法：gopay.RefreshAppWeChatLoginAccessToken() => 刷新App应用微信第三方登录后，获取的 access_token\n\n版本号：Release 1.3.5\n发布时间：2019/09/05 02:10\n修改记录：\n   (1) 支付宝、微信Client 由私有改为公有\n\n版本号：Release 1.3.4\n发布时间：2019/09/03 19:26\n修改记录：\n   (1) 新增支付宝公共API方法：gopay.GetCertSN() => 获取证书SN号（app_cert_sn、alipay_root_cert_sn、alipay_cert_sn）\n   (2) 新增支付宝Client方法：client.SetAliPayRootCertSN() => 设置支付宝根证书SN，通过 gopay.GetCertSN() 获取\n   (3) 新增支付宝Client方法：client.SetAppCertSN() => 设置应用公钥证书SN，通过 gopay.GetCertSN() 获取\n"
        },
        {
          "name": "saobei",
          "type": "tree",
          "content": null
        },
        {
          "name": "support_note.txt",
          "type": "blob",
          "size": 0.453125,
          "content": "赞助者皆为 微信 或 支付宝 用户名\n\n平台  ----    用户  ----    金额\n\n微信  ----    燃烧的发丝   ----    50\n微信  ----    三五五七ᴳᴼ  ----    100\n微信  ----    沐修      ----    50\n微信  ----    深度学习    ----    100\n支付宝  ----    **旺    ----    50\n微信  ----    开博黄工    ----    88\n微信  ----    每天都有新旋律    ----    100\n微信  ----    *冉  ----    50\n微信  ----    *萧  ----    80"
        },
        {
          "name": "wechat",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}