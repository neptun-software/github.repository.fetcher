{
  "metadata": {
    "timestamp": 1736566600270,
    "page": 153,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "terraform-docs/terraform-docs",
      "stars": 4319,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.7705078125,
          "content": "# http://editorconfig.org\n\n# this file is the top-most editorconfig file\nroot = true\n\n# all files\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.go]\nindent_style = tab\nindent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = true\n\n[examples/doc.{adoc,md,tf,txt};examples/footer.md]\ntrim_trailing_whitespace = false\ninsert_final_newline = false\n\n[*.{golden,tmpl}]\ntrim_trailing_whitespace = false\ninsert_final_newline = false\n\n[*.expected]\ntrim_trailing_whitespace = false\ninsert_final_newline = false\n\n[*.{yaml,yml}]\nindent_size = 2\n\n[*.tf]\ntrim_trailing_whitespace = false\n\n[**/inputs-crlf/variables.tf]\nend_of_line = crlf\n\n[**/outputs-crlf/outputs.tf]\nend_of_line = crlf\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.517578125,
          "content": "# Build binaries\nterraform-docs\n/bin\n/.tfdocs.d\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\ncoverage.out\ncoverage.txt\n\n# Dependency directories\n/vendor/\n\n# ignore GoLand files (debug config etc...)\n/.idea\n\n# ignore vscode files (debug config etc...)\n/.vscode\n\n# ignore asdf local versions\n/.tool-versions\n\n# goreleaser\ndist/\n\n# website\nsite/\n\n# contributors.list\ncontributors.list\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 4.763671875,
          "content": "run:\n  timeout: 10m\n  tests: false\n\noutput:\n  formats:\n    - format: tab\n\nlinters-settings:\n  # govet:\n  #   # report about shadowed variables\n  #   check-shadowing: true\n\n  # golint:\n  #   # minimal confidence for issues, default is 0.8\n  #   min-confidence: 0.8\n\n  gofmt:\n    # simplify code: gofmt with `-s` option, true by default\n    simplify: true\n\n  goimports:\n    # put imports beginning with prefix after 3rd-party packages;\n    # it's a comma-separated list of prefixes\n    local-prefixes: github.com/terraform-docs/\n\n  gocyclo:\n    # minimal code complexity to report, 30 by default (but we recommend 10-20)\n    min-complexity: 10\n\n  # maligned:\n  #   # print struct with more effective memory layout or not, false by default\n  #   suggest-new: true\n\n  dupl:\n    # tokens count to trigger issue, 150 by default\n    threshold: 100\n\n  goconst:\n    # minimal length of string constant, 3 by default\n    min-len: 3\n    # minimal occurrences count to trigger, 3 by default\n    min-occurrences: 5\n\n  lll:\n    # tab width in spaces. Default to 1.\n    tab-width: 1\n\n  unused:\n    # treat code as a program (not a library) and report unused exported identifiers; default is false.\n    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    exported-fields-are-used: false\n\n  unparam:\n    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.\n    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    check-exported: false\n\n  nakedret:\n    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30\n    max-func-lines: 30\n\n  prealloc:\n    # XXX: we don't recommend using this linter before doing performance profiling.\n    # For most programs usage of prealloc will be a premature optimization.\n\n    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.\n    # True by default.\n    simple: true\n    range-loops: true # Report preallocation suggestions on range loops, true by default\n    for-loops: false # Report preallocation suggestions on for loops, false by default\n\n  gocritic:\n    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint` run to see all tags and checks.\n    # Empty list by default. See https://github.com/go-critic/go-critic#usage -> section \"Tags\".\n    enabled-tags:\n      - performance\n\n    settings: # settings passed to gocritic\n      captLocal: # must be valid enabled check name\n        paramsOnly: true\n      rangeValCopy:\n        sizeThreshold: 32\n\n  misspell:\n    locale: US\n\nlinters:\n  disable-all: true\n  enable:\n    - megacheck\n    - govet\n    - gocyclo\n    - gocritic\n    - goconst\n    - goimports\n    - gofmt  # We enable this as well as goimports for its simplify mode.\n    - prealloc\n    # - golint # deprecated as of upgrading to 1.55.2\n    - unconvert\n    - misspell\n    - nakedret\n\n  presets:\n    - bugs\n    - unused\n  fast: false\n\nissues:\n  # Excluding configuration per-path and per-linter\n  exclude-rules:\n    # Exclude some linters from running on tests files.\n    - path: _test(ing)?\\.go\n      linters:\n        - gocyclo\n        - errcheck\n        - dupl\n        - gosec\n        - scopelint\n        - unparam\n        - goconst\n    - path: (.*).go\n      linters:\n        - typecheck\n\n    # G306: Expect WriteFile permissions to be 0600 or less\n    # mainly seen in internal/cli/wrtier.go\n    - text: \"G306:\"\n      linters:\n        - gosec\n\n    # - text: \"should have a package comment\"\n    #   linters:\n    #     - golint\n\n  # Independently from option `exclude` we use default exclude patterns,\n  # it can be disabled by this option. To list all\n  # excluded by default patterns execute `golangci-lint run --help`.\n  # Default value for this option is true.\n  exclude-use-default: false\n\n  # Show only new issues: if there are unstaged changes or untracked files,\n  # only those changes are analyzed, else only changes in HEAD~ are analyzed.\n  # It's a super-useful option for integration of golangci-lint into existing\n  # large codebase. It's not practical to fix all existing issues at the moment\n  # of integration: much better don't allow issues in new code.\n  # Default is false.\n  new: false\n\n  # # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  # max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 3.1572265625,
          "content": "project_name: terraform-docs\n\nbuilds:\n  - main: .\n    env:\n      - CGO_ENABLED=0\n    ldflags:\n      - -s -w\n      - -X github.com/terraform-docs/terraform-docs/internal/version.commit={{ .ShortCommit }}\n    goos:\n      - darwin\n      - linux\n      - freebsd\n      - windows\n    goarch:\n      - amd64\n      - arm64\n      - arm\n    ignore:\n      - goos: darwin\n        goarch: arm\n      - goos: windows\n        goarch: arm\n\narchives:\n  - format: tar.gz\n    name_template: \"{{ .Binary }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}\"\n    format_overrides:\n      - goos: windows\n        format: zip\n    files:\n      - LICENSE\n      - README.md\n\nchecksum:\n  name_template: \"{{ .ProjectName }}-{{ .Tag }}.sha256sum\"\n\nsnapshot:\n  name_template: \"{{ .Tag }}-dev\"\n\nrelease:\n  github:\n    owner: terraform-docs\n    name: terraform-docs\n  header: |\n    ## Notable Updates\n  footer: |\n    ## Docker images\n\n    - `docker pull quay.io/terraform-docs/terraform-docs:latest`\n    - `docker pull quay.io/terraform-docs/terraform-docs:{{ .RawVersion }}`\n\n    ## Contributors\n\n    Very special thanks to the contributors.\n\n    {{ .Env.Contributors }}\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - \"^docs:\"\n      - \"^test:\"\n      - \"^Merge pull request\"\n  groups:\n    - title: Dependency updates\n      regexp: '^.*?(.+)\\(deps\\)!?:.+$'\n      order: 300\n    - title: \"Features\"\n      regexp: '^.*?feat(\\(.+\\))??!?:.+$'\n      order: 100\n    - title: \"Security updates\"\n      regexp: '^.*?sec(\\(.+\\))??!?:.+$'\n      order: 150\n    - title: \"Bug Fixes\"\n      regexp: '^.*?(fix|refactor)(\\(.+\\))??!?:.+$'\n      order: 200\n    - title: \"Chores\"\n      order: 9999\n\ndockers:\n  - dockerfile: scripts/release/Dockerfile\n    image_templates:\n      - \"quay.io/terraform-docs/terraform-docs:latest-amd64\"\n      - \"quay.io/terraform-docs/terraform-docs:{{ .RawVersion }}-amd64\"\n    use: buildx\n    build_flag_templates:\n    - \"--pull\"\n    - \"--platform=linux/amd64\"\n  - dockerfile: scripts/release/Dockerfile\n    image_templates:\n      - \"quay.io/terraform-docs/terraform-docs:latest-arm64\"\n      - \"quay.io/terraform-docs/terraform-docs:{{ .RawVersion }}-arm64\"\n    use: buildx\n    build_flag_templates:\n    - \"--pull\"\n    - \"--platform=linux/arm64\"\n    goarch: arm64\n\nbrews:\n  - repository:\n      owner: terraform-docs\n      name: homebrew-tap\n    commit_author:\n      name: terraform-docs-bot\n      email: bot@terraform-docs.io\n    url_template: \"https://github.com/terraform-docs/terraform-docs/releases/download/{{ .Tag }}/{{ .ArtifactName }}\"\n    homepage: \"https://github.com/terraform-docs/\"\n    description: \"Generate documentation from Terraform modules in various output formats\"\n    test: |\n      system \"#{bin}/terraform-docs version\"\n\nscoops:\n  - repository:\n      owner: terraform-docs\n      name: scoop-bucket\n    commit_author:\n      name: terraform-docs-bot\n      email: bot@terraform-docs.io\n    commit_msg_template: \"Scoop update for {{ .ProjectName }} version {{ .Tag }}\"\n    url_template: \"https://github.com/terraform-docs/terraform-docs/releases/download/{{ .Tag }}/{{ .ArtifactName }}\"\n    homepage: \"https://github.com/terraform-docs/\"\n    description: \"Generate documentation from Terraform modules in various output formats\"\n    license: MIT\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.9462890625,
          "content": "---\n# Build and run the Go binary from the repo\n# REQUIRES: Go v1.16+ installed\n- id: terraform-docs-go\n  name: terraform-docs\n  description: Generate documentation for Terraform modules (via Go binary)\n  language: golang\n  entry: terraform-docs\n  pass_filenames: false\n  types: [terraform]\n\n# Build and run `terraform-docs` assuming it was installed manually\n# or via package manager\n# REQUIRES: terraform-docs to be installed and on the $PATH\n- id: terraform-docs-system\n  name: terraform-docs\n  description: Generate documentation for Terraform modules (via locally-installed CLI)\n  language: system\n  entry: terraform-docs\n  pass_filenames: false\n  types: [terraform]\n\n# Builds and runs the Docker image from the repo\n# REQUIRES: Docker installed\n- id: terraform-docs-docker\n  name: terraform-docs\n  description: Generate documentation for Terraform modules (via Docker build)\n  language: docker\n  entry: terraform-docs\n  pass_filenames: false\n  types: [terraform]\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.5107421875,
          "content": "# Contributing to terraform-docs\n\nWelcome, and thank you for considering contributing to terraform-docs. We\nencourage you to help out by raising issues, improving documentation, fixing\nbugs, or adding new features.\n\nIf you're interested in contributing please start by reading this document. If\nyou have any questions at all, or don't know where to start, please reach out to\nus on [Slack].\n\n## Development Requirements\n\n- [Go] 1.22+\n- [goimports]\n- [golangci-lint]\n\nFor releasing:\n\n- [goreleaser]\n\nYou can install all the required tools with `make tools` or individually with\ntheir own make targets. (please refer to Makefile for more details)\n\n## Contributing Code\n\nTo contribute bug fixes or features to terraform-docs:\n\n1. Communicate your intent.\n1. Make your changes.\n1. Test your changes.\n1. Update documentation and examples.\n1. Open a Pull Request (PR).\n\nCommunicating your intent lets the terraform-docs maintainers know that you intend\nto contribute, and how. This sets you up for success - you can avoid duplicating\nan effort that may already be underway, adding a feature that may be rejected,\nor heading down a path that you would be steered away from at review time. The\nbest way to communicate your intent is via a detailed GitHub issue. Take a look\nfirst to see if there's already an issue relating to the thing you'd like to\ncontribute. If there isn't, please raise a new one! Let us know what you'd like\nto work on, and why.\n\nBe sure to practice [good git commit hygiene] as you make your changes. All but\nthe smallest changes should be broken up into a few commits that tell a story.\nUse your git commits to provide context for the folks who will review PR, and\nthe folks who will be spelunking the codebase in the months and years to come.\nEnsure each of your commits is signed-off in compliance with the [Developer\nCertificate of Origin] by using `git commit -s`.\n\nAll codes must be formatted properly, we use `goimports` which wrappes around\n[gofmt] to keep the code in unified format. You can use `make goimports` to install\nand `make fmt` to format your code. Make sure your code doesn't have issues with\n`make checkfmt` and `make lint` before submission.\n\nFormatter tests are separated into different groups in order to be able to improve\nand maintain the code coverage and also prevent duplicating and running redundant\ntest cases. For example there are `OnlyXXX` tests which makes sure all sections are\nhidden and only one is visible. This removes the need to test for `NotXXX` (which is\nno deprecated and removed). Please make sure when a new feature is added or an issue\nis fixed the corresponding `.golden` files and test cases are also update accordingly.\n\nOnce your change is written, tested, and documented the final step is to have it\nreviewed! You'll be presented with a template and a small checklist when you\nopen a PR. Please read the template and fill out the checklist. Please make all\nPR request changes in subsequent commits. This allows your reviewers to see what\nhas changed as you address their comments. Be mindful of your commit history as\nyou do this - avoid commit messages like \"Address review feedback\" if possible.\nIf doing so is difficult a good alternative is to rewrite your commit history to\nclean them up after your PR is approved but before it is merged.\n\nIn summary, please:\n\n* Discuss your change in a GitHub issue before you start.\n* Use your Git commit messages to communicate your intent to your reviewers.\n* Sign-off on all Git commits by running `git commit -s`\n* Add or update tests for all changes.\n* Preempt common [code review comments] and [test review comments].\n* Update all relevant documentation and examples.\n* Don't force push to address review feedback. Your commits should tell a story.\n* If necessary, tidy up your git commit history once your PR is approved.\n\nThank you for reading through our contributing guide! We appreciate you taking\nthe time to ensure your contributions are high quality and easy for our community\nto review and accept.\n\n[Slack]: https://slack.terraform-docs.io/\n[Go]: https://golang.org/\n[goimports]: https://pkg.go.dev/golang.org/x/tools/cmd/goimports\n[golangci-lint]: https://github.com/golangci/golangci-lint\n[goreleaser]: https://goreleaser.com/\n[good git commit hygiene]: https://www.futurelearn.com/info/blog/telling-stories-with-your-git-history\n[Developer Certificate of Origin]: https://github.com/apps/dco\n[gofmt]: https://blog.golang.org/go-fmt-your-code\n[code review comments]: https://github.com/golang/go/wiki/CodeReviewComments\n[test review comments]: https://github.com/golang/go/wiki/TestComments\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.388671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7060546875,
          "content": "# Copyright 2021 The terraform-docs Authors.\n#\n# Licensed under the MIT license (the \"License\"); you may not\n# use this file except in compliance with the License.\n#\n# You may obtain a copy of the License at the LICENSE file in\n# the root directory of this source tree.\n\nFROM docker.io/library/golang:1.23.4-alpine AS builder\n\nRUN apk add --update --no-cache make\n\nWORKDIR /go/src/terraform-docs\n\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\nCOPY . .\nRUN make build\n\n################\n\nFROM docker.io/library/alpine:3.20.3\n\n# Mitigate CVE-2023-5363\nRUN apk add --no-cache --upgrade \"openssl>=3.1.4-r1\"\n\nCOPY --from=builder /go/src/terraform-docs/bin/linux-*/terraform-docs /usr/local/bin/\n\nENTRYPOINT [\"terraform-docs\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "MIT License\n\nCopyright (c) 2018 The terraform-docs Authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.4423828125,
          "content": "# Copyright 2021 The terraform-docs Authors.\n#\n# Licensed under the MIT license (the \"License\"); you may not\n# use this file except in compliance with the License.\n#\n# You may obtain a copy of the License at the LICENSE file in\n# the root directory of this source tree.\n\n# Project variables\nPROJECT_NAME  := terraform-docs\nPROJECT_OWNER := terraform-docs\nDESCRIPTION   := generate documentation from Terraform modules in various output formats\nPROJECT_URL   := https://github.com/$(PROJECT_OWNER)/$(PROJECT_NAME)\nLICENSE       := MIT\n\n# Build variables\nBUILD_DIR    := bin\nCOMMIT_HASH  ?= $(shell git rev-parse --short HEAD 2>/dev/null)\nCUR_VERSION  ?= $(shell git describe --tags --exact-match 2>/dev/null || git describe --tags 2>/dev/null || echo \"v0.0.0-$(COMMIT_HASH)\")\nCOVERAGE_OUT := coverage.out\n\n# Go variables\nGO          ?= go\nGO_PACKAGE  := github.com/$(PROJECT_OWNER)/$(PROJECT_NAME)\nGOOS        ?= $(shell $(GO) env GOOS)\nGOARCH      ?= $(shell $(GO) env GOARCH)\n\nGOLDFLAGS   += -X $(GO_PACKAGE)/internal/version.commit=$(COMMIT_HASH)\n\nGOBUILD     ?= CGO_ENABLED=0 $(GO) build -ldflags=\"$(GOLDFLAGS)\"\nGORUN       ?= GOOS=$(GOOS) GOARCH=$(GOARCH) $(GO) run\n\nGOIMPORTS_LOCAL_ARG := -local github.com/terraform-docs\n\n# Docker variables\nDEFAULT_TAG  ?= $(shell echo \"$(CUR_VERSION)\" | tr -d 'v')\nDOCKER_IMAGE := quay.io/$(PROJECT_OWNER)/$(PROJECT_NAME)\nDOCKER_TAG   ?= $(DEFAULT_TAG)\n\n# Binary versions\nGOLANGCI_VERSION  := v1.55.2\n\n.PHONY: all\nall: clean verify checkfmt lint test build\n\n###############\n##@ Development\n\n.PHONY: checkfmt\ncheckfmt:   ## Check formatting of all go files\n\t@ $(MAKE) --no-print-directory log-$@\n\t@ goimports -l $(GOIMPORTS_LOCAL_ARG) main.go cmd/ internal/ scripts/docs/ && echo \"OK\"\n\n.PHONY: clean\nclean:   ## Clean workspace\n\t@ $(MAKE) --no-print-directory log-$@\n\trm -rf ./$(BUILD_DIR) ./$(COVERAGE_OUT)\n\n.PHONY: fmt\nfmt:   ## Format all go files\n\t@ $(MAKE) --no-print-directory log-$@\n\tgoimports -w $(GOIMPORTS_LOCAL_ARG) main.go cmd/ internal/ scripts/docs/\n\n.PHONY: lint\nlint:   ## Run linter\n\t@ $(MAKE) --no-print-directory log-$@\n\tgolangci-lint run ./...\n\n.PHONY: staticcheck\nstaticcheck:   ## Run staticcheck\n\t@ $(MAKE) --no-print-directory log-$@\n\t$(GO) run honnef.co/go/tools/cmd/staticcheck@2024.1.1 -- ./...\n\n.PHONY: test\ntest:   ## Run tests\n\t@ $(MAKE) --no-print-directory log-$@\n\t$(GO) test -coverprofile=$(COVERAGE_OUT) -covermode=atomic -v ./...\n\n.PHONY: verify\nverify:   ## Verify 'vendor' dependencies\n\t@ $(MAKE) --no-print-directory log-$@\n\t$(GO) mod verify\n\n# removed and gitignoreed 'vendor/', not needed anymore #\n.PHONY: vendor deps\nvendor:\ndeps:\n\n#########\n##@ Build\n\n.PHONY: build\nbuild: clean ## Build binary for current OS/ARCH\n\t@ $(MAKE) --no-print-directory log-$@\n\t$(GOBUILD) -o ./$(BUILD_DIR)/$(GOOS)-$(GOARCH)/$(PROJECT_NAME)\n\n.PHONY: docker\ndocker:   ## Build Docker image\n\t@ $(MAKE) --no-print-directory log-$@\n\tdocker build --pull --tag $(DOCKER_IMAGE):$(DOCKER_TAG) --file Dockerfile .\n\n.PHONY: push\npush:   ## Push Docker image\n\t@ $(MAKE) --no-print-directory log-$@\n\tdocker push $(DOCKER_IMAGE):$(DOCKER_TAG)\n\n.PHONY: docs\ndocs:   ## Generate document of formatter commands\n\t@ $(MAKE) --no-print-directory log-$@\n\t$(GORUN) ./scripts/docs/generate.go\n\n###########\n##@ Helpers\n\n.PHONY: goimports\ngoimports:   ## Install goimports\nifeq (, $(shell which goimports))\n\t$(GO) install golang.org/x/tools/cmd/goimports@latest\nendif\n\n.PHONY: golangci\ngolangci:   ## Install golangci\nifeq (, $(shell which golangci-lint))\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell $(GO) env GOPATH)/bin $(GOLANGCI_VERSION)\nendif\n\n.PHONY: tools\ntools:   ## Install required tools\n\t@ $(MAKE) --no-print-directory log-$@\n\t@ $(MAKE) --no-print-directory goimports golangci\n\n########################################################################\n## Self-Documenting Makefile Help                                     ##\n## https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html ##\n########################################################################\n\n########\n##@ Help\n\n.PHONY: help\nhelp:   ## Display this help\n\t@awk -v \"col=\\033[36m\" -v \"nocol=\\033[0m\" ' BEGIN { FS = \":.*##\" ; printf \"Usage:\\n  make %s<target>%s\\n\", col, nocol } /^[a-zA-Z_-]+:.*?##/ { printf \"  %s%-12s%s %s\\n\", col, $$1, nocol, $$2 } /^##@/ { printf \"\\n%s%s%s\\n\", nocol, substr($$0, 5), nocol } ' $(MAKEFILE_LIST)\n\nlog-%:\n\t@grep -h -E '^$*:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN { FS = \":.*?## \" }; { printf \"\\033[36m==> %s\\033[0m\\n\", $$2 }'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.2158203125,
          "content": "# terraform-docs\n\n[![Build Status](https://github.com/terraform-docs/terraform-docs/workflows/ci/badge.svg)](https://github.com/terraform-docs/terraform-docs/actions) [![GoDoc](https://pkg.go.dev/badge/github.com/terraform-docs/terraform-docs)](https://pkg.go.dev/github.com/terraform-docs/terraform-docs) [![Go Report Card](https://goreportcard.com/badge/github.com/terraform-docs/terraform-docs)](https://goreportcard.com/report/github.com/terraform-docs/terraform-docs) [![Codecov Report](https://codecov.io/gh/terraform-docs/terraform-docs/branch/master/graph/badge.svg)](https://codecov.io/gh/terraform-docs/terraform-docs) [![License](https://img.shields.io/github/license/terraform-docs/terraform-docs)](https://github.com/terraform-docs/terraform-docs/blob/master/LICENSE) [![Latest release](https://img.shields.io/github/v/release/terraform-docs/terraform-docs)](https://github.com/terraform-docs/terraform-docs/releases)\n\n![terraform-docs-teaser](./images/terraform-docs-teaser.png)\n\n## What is terraform-docs\n\nA utility to generate documentation from Terraform modules in various output formats.\n\n## Installation\n\nmacOS users can install using [Homebrew]:\n\n```bash\nbrew install terraform-docs\n```\n\nor\n\n```bash\nbrew install terraform-docs/tap/terraform-docs\n```\n\nWindows users can install using [Scoop]:\n\n```bash\nscoop bucket add terraform-docs https://github.com/terraform-docs/scoop-bucket\nscoop install terraform-docs\n```\n\nor [Chocolatey]:\n\n```bash\nchoco install terraform-docs\n```\n\nStable binaries are also available on the [releases] page. To install, download the\nbinary for your platform from \"Assets\" and place this into your `$PATH`:\n\n```bash\ncurl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.19.0/terraform-docs-v0.19.0-$(uname)-amd64.tar.gz\ntar -xzf terraform-docs.tar.gz\nchmod +x terraform-docs\nmv terraform-docs /usr/local/bin/terraform-docs\n```\n\n**NOTE:** Windows releases are in `ZIP` format.\n\nThe latest version can be installed using `go install` or `go get`:\n\n```bash\n# go1.17+\ngo install github.com/terraform-docs/terraform-docs@v0.19.0\n```\n\n```bash\n# go1.16\nGO111MODULE=\"on\" go get github.com/terraform-docs/terraform-docs@v0.19.0\n```\n\n**NOTE:** please use the latest Go to do this, minimum `go1.16` is required.\n\nThis will put `terraform-docs` in `$(go env GOPATH)/bin`. If you encounter the error\n`terraform-docs: command not found` after installation then you may need to either add\nthat directory to your `$PATH` as shown [here] or do a manual installation by cloning\nthe repo and run `make build` from the repository which will put `terraform-docs` in:\n\n```bash\n$(go env GOPATH)/src/github.com/terraform-docs/terraform-docs/bin/$(uname | tr '[:upper:]' '[:lower:]')-amd64/terraform-docs\n```\n\n## Usage\n\n### Running the binary directly\n\nTo run and generate documentation into README within a directory:\n\n```bash\nterraform-docs markdown table --output-file README.md --output-mode inject /path/to/module\n```\n\nCheck [`output`] configuration for more details and examples.\n\n### Using docker\n\nterraform-docs can be run as a container by mounting a directory with `.tf`\nfiles in it and run the following command:\n\n```bash\ndocker run --rm --volume \"$(pwd):/terraform-docs\" -u $(id -u) quay.io/terraform-docs/terraform-docs:0.19.0 markdown /terraform-docs\n```\n\nIf `output.file` is not enabled for this module, generated output can be redirected\nback to a file:\n\n```bash\ndocker run --rm --volume \"$(pwd):/terraform-docs\" -u $(id -u) quay.io/terraform-docs/terraform-docs:0.19.0 markdown /terraform-docs > doc.md\n```\n\n**NOTE:** Docker tag `latest` refers to _latest_ stable released version and `edge`\nrefers to HEAD of `master` at any given point in time.\n\n### Using GitHub Actions\n\nTo use terraform-docs GitHub Action, configure a YAML workflow file (e.g.\n`.github/workflows/documentation.yml`) with the following:\n\n```yaml\nname: Generate terraform docs\non:\n  - pull_request\n\njobs:\n  docs:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n      with:\n        ref: ${{ github.event.pull_request.head.ref }}\n\n    - name: Render terraform docs and push changes back to PR\n      uses: terraform-docs/gh-actions@main\n      with:\n        working-dir: .\n        output-file: README.md\n        output-method: inject\n        git-push: \"true\"\n```\n\nRead more about [terraform-docs GitHub Action] and its configuration and\nexamples.\n\n### pre-commit hook\n\nWith pre-commit, you can ensure your Terraform module documentation is kept\nup-to-date each time you make a commit.\n\nFirst [install pre-commit] and then create or update a `.pre-commit-config.yaml`\nin the root of your Git repo with at least the following content:\n\n```yaml\nrepos:\n  - repo: https://github.com/terraform-docs/terraform-docs\n    rev: \"v0.19.0\"\n    hooks:\n      - id: terraform-docs-go\n        args: [\"markdown\", \"table\", \"--output-file\", \"README.md\", \"./mymodule/path\"]\n```\n\nThen run:\n\n```bash\npre-commit install\npre-commit install-hooks\n```\n\nFurther changes to your module's `.tf` files will cause an update to documentation\nwhen you make a commit.\n\n## Configuration\n\nterraform-docs can be configured with a yaml file. The default name of this file is\n`.terraform-docs.yml` and the path order for locating it is:\n\n1. root of module directory\n1. `.config/` folder at root of module directory\n1. current directory\n1. `.config/` folder at current directory\n1. `$HOME/.tfdocs.d/`\n\n```yaml\nformatter: \"\" # this is required\n\nversion: \"\"\n\nheader-from: main.tf\nfooter-from: \"\"\n\nrecursive:\n  enabled: false\n  path: modules\n  include-main: true\n\nsections:\n  hide: []\n  show: []\n\ncontent: \"\"\n\noutput:\n  file: \"\"\n  mode: inject\n  template: |-\n    <!-- BEGIN_TF_DOCS -->\n    {{ .Content }}\n    <!-- END_TF_DOCS -->\n\noutput-values:\n  enabled: false\n  from: \"\"\n\nsort:\n  enabled: true\n  by: name\n\nsettings:\n  anchor: true\n  color: true\n  default: true\n  description: false\n  escape: true\n  hide-empty: false\n  html: true\n  indent: 2\n  lockfile: true\n  read-comments: true\n  required: true\n  sensitive: true\n  type: true\n```\n\n## Content Template\n\nGenerated content can be customized further away with `content` in configuration.\nIf the `content` is empty the default order of sections is used.\n\nCompatible formatters for customized content are `asciidoc` and `markdown`. `content`\nwill be ignored for other formatters.\n\n`content` is a Go template with following additional variables:\n\n- `{{ .Header }}`\n- `{{ .Footer }}`\n- `{{ .Inputs }}`\n- `{{ .Modules }}`\n- `{{ .Outputs }}`\n- `{{ .Providers }}`\n- `{{ .Requirements }}`\n- `{{ .Resources }}`\n\nand following functions:\n\n- `{{ include \"relative/path/to/file\" }}`\n\nThese variables are the generated output of individual sections in the selected\nformatter. For example `{{ .Inputs }}` is Markdown Table representation of _inputs_\nwhen formatter is set to `markdown table`.\n\nNote that sections visibility (i.e. `sections.show` and `sections.hide`) takes\nprecedence over the `content`.\n\nAdditionally there's also one extra special variable avaialble to the `content`:\n\n- `{{ .Module }}`\n\nAs opposed to the other variables mentioned above, which are generated sections\nbased on a selected formatter, the `{{ .Module }}` variable is just a `struct`\nrepresenting a [Terraform module].\n\n````yaml\ncontent: |-\n  Any arbitrary text can be placed anywhere in the content\n\n  {{ .Header }}\n\n  and even in between sections\n\n  {{ .Providers }}\n\n  and they don't even need to be in the default order\n\n  {{ .Outputs }}\n\n  include any relative files\n\n  {{ include \"relative/path/to/file\" }}\n\n  {{ .Inputs }}\n\n  # Examples\n\n  ```hcl\n  {{ include \"examples/foo/main.tf\" }}\n  ```\n\n  ## Resources\n\n  {{ range .Module.Resources }}\n  - {{ .GetMode }}.{{ .Spec }} ({{ .Position.Filename }}#{{ .Position.Line }})\n  {{- end }}\n````\n\n## Build on top of terraform-docs\n\nterraform-docs primary use-case is to be utilized as a standalone binary, but\nsome parts of it is also available publicly and can be imported in your project\nas a library.\n\n```go\nimport (\n    \"github.com/terraform-docs/terraform-docs/format\"\n    \"github.com/terraform-docs/terraform-docs/print\"\n    \"github.com/terraform-docs/terraform-docs/terraform\"\n)\n\n// buildTerraformDocs for module root `path` and provided content `tmpl`.\nfunc buildTerraformDocs(path string, tmpl string) (string, error) {\n    config := print.DefaultConfig()\n    config.ModuleRoot = path // module root path (can be relative or absolute)\n\n    module, err := terraform.LoadWithOptions(config)\n    if err != nil {\n        return \"\", err\n    }\n\n    // Generate in Markdown Table format\n    formatter := format.NewMarkdownTable(config)\n\n    if err := formatter.Generate(module); err != nil {\n        return \"\", err\n    }\n\n    // // Note: if you don't intend to provide additional template for the generated\n    // // content, or the target format doesn't provide templating (e.g. json, yaml,\n    // // xml, or toml) you can use `Content()` function instead of `Render()`.\n    // // `Content()` returns all the sections combined with predefined order.\n    // return formatter.Content(), nil\n\n    return formatter.Render(tmpl)\n}\n```\n\n## Plugin\n\nGenerated output can be heavily customized with [`content`], but if using that\nis not enough for your use-case, you can write your own plugin.\n\nIn order to install a plugin the following steps are needed:\n\n- download the plugin and place it in `~/.tfdocs.d/plugins` (or `./.tfdocs.d/plugins`)\n- make sure the plugin file name is `tfdocs-format-<NAME>`\n- modify [`formatter`] of `.terraform-docs.yml` file to be `<NAME>`\n\n**Important notes:**\n\n- if the plugin file name is different than the example above, terraform-docs won't\nbe able to to pick it up nor register it properly\n- you can only use plugin thorough `.terraform-docs.yml` file and it cannot be used\nwith CLI arguments\n\nTo create a new plugin create a new repository called `tfdocs-format-<NAME>` with\nfollowing `main.go`:\n\n```go\npackage main\n\nimport (\n    _ \"embed\" //nolint\n\n    \"github.com/terraform-docs/terraform-docs/plugin\"\n    \"github.com/terraform-docs/terraform-docs/print\"\n    \"github.com/terraform-docs/terraform-docs/template\"\n    \"github.com/terraform-docs/terraform-docs/terraform\"\n)\n\nfunc main() {\n    plugin.Serve(&plugin.ServeOpts{\n        Name:    \"<NAME>\",\n        Version: \"0.1.0\",\n        Printer: printerFunc,\n    })\n}\n\n//go:embed sections.tmpl\nvar tplCustom []byte\n\n// printerFunc the function being executed by the plugin client.\nfunc printerFunc(config *print.Config, module *terraform.Module) (string, error) {\n    tpl := template.New(config,\n        &template.Item{Name: \"custom\", Text: string(tplCustom)},\n    )\n\n    rendered, err := tpl.Render(\"custom\", module)\n    if err != nil {\n        return \"\", err\n    }\n\n    return rendered, nil\n}\n```\n\nPlease refer to [tfdocs-format-template] for more details. You can create a new\nrepository from it by clicking on `Use this template` button.\n\n## Documentation\n\n- **Users**\n  - Read the [User Guide] to learn how to use terraform-docs\n  - Read the [Formats Guide] to learn about different output formats of terraform-docs\n  - Refer to [Config File Reference] for all the available configuration options\n- **Developers**\n  - Read [Contributing Guide] before submitting a pull request\n\nVisit [our website] for all documentation.\n\n## Community\n\n- Discuss terraform-docs on [Slack]\n\n## License\n\nMIT License - Copyright (c) 2021 The terraform-docs Authors.\n\n[Chocolatey]: https://www.chocolatey.org\n[Config File Reference]: https://terraform-docs.io/user-guide/configuration/\n[`content`]: https://terraform-docs.io/user-guide/configuration/content/\n[Contributing Guide]: CONTRIBUTING.md\n[Formats Guide]: https://terraform-docs.io/reference/terraform-docs/\n[`formatter`]: https://terraform-docs.io/user-guide/configuration/formatter/\n[here]: https://golang.org/doc/code.html#GOPATH\n[Homebrew]: https://brew.sh\n[install pre-commit]: https://pre-commit.com/#install\n[`output`]: https://terraform-docs.io/user-guide/configuration/output/\n[releases]: https://github.com/terraform-docs/terraform-docs/releases\n[Scoop]: https://scoop.sh/\n[Slack]: https://slack.terraform-docs.io/\n[terraform-docs GitHub Action]: https://github.com/terraform-docs/gh-actions\n[Terraform module]: https://pkg.go.dev/github.com/terraform-docs/terraform-docs/terraform#Module\n[tfdocs-format-template]: https://github.com/terraform-docs/tfdocs-format-template\n[our website]: https://terraform-docs.io/\n[User Guide]: https://terraform-docs.io/user-guide/introduction/\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.427734375,
          "content": "comment: false\ngithub_checks:\n  annotations: false\ncoverage:\n  status:\n    project:\n      default:\n        # basic\n        target: auto\n        threshold: 0%\n        base: auto\n        flags:\n          - unit\n        paths:\n          - \"src\"\n        # advanced settings\n        branches:\n          - master\n        if_ci_failed: error #success, failure, error, ignore\n        informational: false\n        only_pulls: false\n    patch: off\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "format",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.052734375,
          "content": "module github.com/terraform-docs/terraform-docs\n\ngo 1.23\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.4.0\n\tgithub.com/Masterminds/sprig/v3 v3.3.0\n\tgithub.com/hashicorp/go-hclog v1.6.3\n\tgithub.com/hashicorp/go-plugin v1.6.1\n\tgithub.com/hashicorp/go-version v1.7.0\n\tgithub.com/hashicorp/hcl/v2 v2.22.0\n\tgithub.com/iancoleman/orderedmap v0.3.0\n\tgithub.com/imdario/mergo v0.3.16\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.19.0\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/terraform-docs/terraform-config-inspect v0.0.0-20210728164355-9c1f178932fa\n\tgolang.org/x/exp v0.0.0-20240909161429-701f63a606c0\n\tgopkg.in/yaml.v3 v3.0.1\n\thonnef.co/go/tools v0.3.2\n\tmvdan.cc/xurls/v2 v2.5.0\n)\n\nrequire (\n\tdario.cat/mergo v1.0.1 // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.3.0 // indirect\n\tgithub.com/agext/levenshtein v1.2.3 // indirect\n\tgithub.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/fatih/color v1.17.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/hashicorp/yamux v0.1.1 // indirect\n\tgithub.com/huandu/xstrings v1.5.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/go-testing-interface v1.14.1 // indirect\n\tgithub.com/mitchellh/go-wordwrap v1.0.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/oklog/run v1.1.0 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.3 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/sagikazarmark/locafero v0.6.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/shopspring/decimal v1.4.0 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.7.0 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/zclconf/go-cty v1.15.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/crypto v0.27.0 // indirect\n\tgolang.org/x/exp/typeparams v0.0.0-20220722155223-a9213eeb770e // indirect\n\tgolang.org/x/mod v0.21.0 // indirect\n\tgolang.org/x/net v0.29.0 // indirect\n\tgolang.org/x/sync v0.8.0 // indirect\n\tgolang.org/x/sys v0.25.0 // indirect\n\tgolang.org/x/text v0.18.0 // indirect\n\tgolang.org/x/tools v0.25.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 // indirect\n\tgoogle.golang.org/grpc v1.66.2 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 18.2509765625,
          "content": "dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.3.0 h1:B8LGeaivUe71a5qox1ICM/JLl0NqZSW5CHyL+hmvYS0=\ngithub.com/Masterminds/semver/v3 v3.3.0/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Masterminds/sprig/v3 v3.3.0 h1:mQh0Yrg1XPo6vjYXgtf5OtijNAKJRNcTdOOGZe3tPhs=\ngithub.com/Masterminds/sprig/v3 v3.3.0/go.mod h1:Zy1iXRYNqNLUolqCpL4uhk6SHUMAOSCzdgBfDb35Lz0=\ngithub.com/agext/levenshtein v1.2.1/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/agext/levenshtein v1.2.2/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/agext/levenshtein v1.2.3 h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=\ngithub.com/agext/levenshtein v1.2.3/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/apparentlymart/go-dump v0.0.0-20180507223929-23540a00eaa3/go.mod h1:oL81AME2rN47vu18xqj1S1jPIPuN7afo62yKTNn3XMM=\ngithub.com/apparentlymart/go-textseg v1.0.0/go.mod h1:z96Txxhf3xSFMPmb5X/1W05FF/Nj9VFpLOpjS5yuumk=\ngithub.com/apparentlymart/go-textseg/v15 v15.0.0 h1:uYvfpb3DyLSCGWnctWKGj857c6ew1u1fNQOlOtuGxQY=\ngithub.com/apparentlymart/go-textseg/v15 v15.0.0/go.mod h1:K8XmNZdhEBkdlyDdvbmmsvpAG721bKi0joRfFdHIWJ4=\ngithub.com/bufbuild/protocompile v0.4.0 h1:LbFKd2XowZvQ/kajzguUp2DC9UEIQhIq77fZZlaQsNA=\ngithub.com/bufbuild/protocompile v0.4.0/go.mod h1:3v93+mbWn/v3xzN+31nwkJfrEpAUwp+BagBSZWx+TP8=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/fatih/color v1.17.0 h1:GlRw1BRJxkpqUCBKzKOw098ed57fEsKeNjpTe3cSjK4=\ngithub.com/fatih/color v1.17.0/go.mod h1:YZ7TlrGPkiz6ku9fK3TLD/pl3CpsiFyu8N92HLgmosI=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-test/deep v1.0.3 h1:ZrJSEWsXzPOxaZnFteGEfooLba+ju3FYIbOrS+rQd68=\ngithub.com/go-test/deep v1.0.3/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/golang/protobuf v1.1.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-plugin v1.6.1 h1:P7MR2UP6gNKGPp+y7EZw2kOiq4IR9WiqLvp0XOsVdwI=\ngithub.com/hashicorp/go-plugin v1.6.1/go.mod h1:XPHFku2tFo3o3QKFgSYo+cghcUhw1NA1hZyMK0PWAw0=\ngithub.com/hashicorp/go-version v1.7.0 h1:5tqGy27NaOTB8yJKUZELlFAS/LTKJkrmONwQKeRZfjY=\ngithub.com/hashicorp/go-version v1.7.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/hcl v0.0.0-20170504190234-a4b07c25de5f/go.mod h1:oZtUIOe8dh44I2q6ScRibXws4Ajl+d+nod3AaR9vL5w=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/hcl/v2 v2.0.0/go.mod h1:oVVDG71tEinNGYCxinCYadcmKU9bglqW9pV3txagJ90=\ngithub.com/hashicorp/hcl/v2 v2.22.0 h1:hkZ3nCtqeJsDhPRFz5EA9iwcG1hNWGePOTw6oyul12M=\ngithub.com/hashicorp/hcl/v2 v2.22.0/go.mod h1:62ZYHrXgPoX8xBnzl8QzbWq4dyDsDtfCRgIq1rbJEvA=\ngithub.com/hashicorp/yamux v0.1.1 h1:yrQxtgseBDrq9Y652vSRDvsKCJKOUD+GzTS4Y0Y8pvE=\ngithub.com/hashicorp/yamux v0.1.1/go.mod h1:CtWFDAQgb7dxtzFs4tWbplKIe2jSi3+5vKbgIO0SLnQ=\ngithub.com/huandu/xstrings v1.5.0 h1:2ag3IFq9ZDANvthTwTiqSSZLjDc+BedvHPAp5tJy2TI=\ngithub.com/huandu/xstrings v1.5.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/iancoleman/orderedmap v0.3.0 h1:5cbR2grmZR/DiVt+VJopEhtVs9YGInGIxAoMJn+Ichc=\ngithub.com/iancoleman/orderedmap v0.3.0/go.mod h1:XuLcCUkdL5owUCQeF2Ue9uuw1EptkJDkXXS7VoV7XGE=\ngithub.com/imdario/mergo v0.3.16 h1:wwQJbIsHYGMUyLSPrEq1CT16AhnhNJQ51+4fdHUnCl4=\ngithub.com/imdario/mergo v0.3.16/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jhump/protoreflect v1.15.1 h1:HUMERORf3I3ZdX05WaQ6MIpd/NJ434hTp5YiKgfCL6c=\ngithub.com/jhump/protoreflect v1.15.1/go.mod h1:jD/2GMKKE6OqX8qTjhADU1e6DShO+gavG9e0Q693nKo=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v0.0.0-20170820004349-d65d576e9348/go.mod h1:B69LEHPfb2qLo0BaaOLcbitczOKLWTsrBG9LczfCD4k=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.14.1 h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=\ngithub.com/mitchellh/go-testing-interface v1.14.1/go.mod h1:gfgS7OtZj6MA4U1UrDRp04twqAjfvlZyCfX3sDjEym8=\ngithub.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=\ngithub.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagikazarmark/locafero v0.6.0 h1:ON7AQg37yzcRPU69mt7gwhFEBwxI6P9T4Qu3N51bwOk=\ngithub.com/sagikazarmark/locafero v0.6.0/go.mod h1:77OmuIc6VTraTXKXIs/uvUxKGUXjE1GbemJYHqdNjX0=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/shopspring/decimal v1.4.0 h1:bxl37RwXBklmTi0C79JfXCEBD1cqqHt0bbgBAGFp81k=\ngithub.com/shopspring/decimal v1.4.0/go.mod h1:gawqmDU56v4yIKSwfBSFip1HdCCXN8/+DMd9qYNcwME=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.7.0 h1:ntdiHjuueXFgm5nzDRdOS4yfT43P5Fnud6DH50rz/7w=\ngithub.com/spf13/cast v1.7.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.2/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/terraform-docs/terraform-config-inspect v0.0.0-20210728164355-9c1f178932fa h1:wdyf3TobwYFwsqnUGJcjdNHxKfwHPFbaOknBJehnF1M=\ngithub.com/terraform-docs/terraform-config-inspect v0.0.0-20210728164355-9c1f178932fa/go.mod h1:GtanFwTsRRXScYHOMb5h4K18XQBFeS2tXat9/LrPtPc=\ngithub.com/vmihailenco/msgpack v3.3.3+incompatible/go.mod h1:fy3FlTQTDXWkZ7Bh6AcGMlsjHatGryHQYUTf1ShIgkk=\ngithub.com/zclconf/go-cty v1.1.0/go.mod h1:xnAOWiHeOqg2nWS62VtQ7pbOu17FtxJNW8RLEih+O3s=\ngithub.com/zclconf/go-cty v1.15.0 h1:tTCRWxsexYUmtt/wVxgDClUe+uQusuI443uL6e+5sXQ=\ngithub.com/zclconf/go-cty v1.15.0/go.mod h1:VvMs5i0vgZdhYawQNq5kePSpLAoz8u1xvZgrPIxfnZE=\ngithub.com/zclconf/go-cty-debug v0.0.0-20240509010212-0d6042c53940 h1:4r45xpDWB6ZMSMNJFMOjqrGHynW3DIBuR2H9j0ug+Mo=\ngithub.com/zclconf/go-cty-debug v0.0.0-20240509010212-0d6042c53940/go.mod h1:CmBdvvj3nqzfzJ6nTCIwDTPZ56aVGvDrmztiO5g3qrM=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190426145343-a29dc8fdc734/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=\ngolang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=\ngolang.org/x/exp/typeparams v0.0.0-20220722155223-a9213eeb770e h1:7Xs2YCOpMlNqSQSmrrnhlzBXIE/bpMecZplbLePTJvE=\ngolang.org/x/exp/typeparams v0.0.0-20220722155223-a9213eeb770e/go.mod h1:AbB0pIl9nAr9wVwH+Z2ZpaocVmF5I4GyWCDIsVjR0bk=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180811021610-c39426892332/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\ngolang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502175342-a43fa875dd82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.18.0 h1:XvMDiNzPAl0jr17s6W9lcaIhGUfUORdGCNsuLmPG224=\ngolang.org/x/text v0.18.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.25.0 h1:oFU9pkj/iJgs+0DT+VMHrx+oBKs/LJMV+Uvg78sl+fE=\ngolang.org/x/tools v0.25.0/go.mod h1:/vtpO8WL1N9cQC3FN5zPqb//fRXskFHbLKk4OW1Q7rg=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 h1:pPJltXNxVzT4pK9yD8vR9X75DaWYYmLGMsEvBfFQZzQ=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:UqMtugtsSgubUsoxbuAoiCXvqvErP7Gf0so0mK9tHxU=\ngoogle.golang.org/grpc v1.66.2 h1:3QdXkuq3Bkh7w+ywLdLvM56cmGvQHUMZpiCzt6Rqaoo=\ngoogle.golang.org/grpc v1.66.2/go.mod h1:s3/l6xSSCURdVfAnL+TqCNMyTDAGN6+lZeVxnZR128Y=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.3.2 h1:ytYb4rOqyp1TSa2EPvNVwtPQJctSELKaMyLfqNP4+34=\nhonnef.co/go/tools v0.3.2/go.mod h1:jzwdWgg7Jdq75wlfblQxO4neNaFFSvgc1tD5Wv8U0Yw=\nmvdan.cc/xurls/v2 v2.5.0 h1:lyBNOm8Wo71UknhUs4QTFUNNMyxy2JEIaKKo0RWOh+8=\nmvdan.cc/xurls/v2 v2.5.0/go.mod h1:yQgaGQ1rFtJUzkmKiHYSSfuQxqfYmd//X6PxvholpeE=\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.4072265625,
          "content": "/*\nCopyright 2021 The terraform-docs Authors.\n\nLicensed under the MIT license (the \"License\"); you may not\nuse this file except in compliance with the License.\n\nYou may obtain a copy of the License at the LICENSE file in\nthe root directory of this source tree.\n*/\n\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/terraform-docs/terraform-docs/cmd\"\n)\n\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.2724609375,
          "content": "[build]\n  publish = \"site/public\"\n\n[build.environment]\n  HUGO_VERSION = \"0.87.0\"\n  NODE_VERSION = \"15.5.1\"\n  NPM_VERSION = \"7.3.0\"\n\n[context.deploy-preview]\n  command = \"\"\"\n    ./scripts/docs/prepare-site.sh\n    cd site\n    npm install\n    hugo -b ${DEPLOY_PRIME_URL} --gc\n  \"\"\"\n"
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "print",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "template",
          "type": "tree",
          "content": null
        },
        {
          "name": "terraform",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}