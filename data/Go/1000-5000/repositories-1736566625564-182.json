{
  "metadata": {
    "timestamp": 1736566625564,
    "page": 182,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Ackites/KillWxapkg",
      "stars": 4143,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.9365234375,
          "content": "### GoLand+all template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# AWS User-specific\n.idea/**/aws.xml\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/artifacts\n# .idea/compiler.xml\n# .idea/jarRepositories.xml\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# SonarLint plugin\n.idea/sonarlint/\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### Go template\n# If you prefer the allow list template instead of the deny list, see community template:\n# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore\n#\n# Binaries for programs and plugins\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\nout/*\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n\n# Go workspace file\ngo.work\n\n### GoLand template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n\n# AWS User-specific\n\n# Generated files\n\n# Sensitive or high-churn files\n\n# Gradle\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/artifacts\n# .idea/compiler.xml\n# .idea/jarRepositories.xml\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\n\n# Mongo Explorer plugin\n\n# File-based project format\n\n# IntelliJ\n\n# mpeltonen/sbt-idea plugin\n\n# JIRA plugin\n\n# Cursive Clojure plugin\n\n# SonarLint plugin\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\n\n# Editor-based Rest Client\n\n# Android studio 3.1+ serialized cache file\n\n### GoLand+iml template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n\n# AWS User-specific\n\n# Generated files\n\n# Sensitive or high-churn files\n\n# Gradle\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/artifacts\n# .idea/compiler.xml\n# .idea/jarRepositories.xml\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\n\n# Mongo Explorer plugin\n\n# File-based project format\n\n# IntelliJ\n\n# mpeltonen/sbt-idea plugin\n\n# JIRA plugin\n\n# Cursive Clojure plugin\n\n# SonarLint plugin\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\n\n# Editor-based Rest Client\n\n# Android studio 3.1+ serialized cache file\n\n\ndist/\n.idea/\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 0.87890625,
          "content": "# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\n\n# The lines below are called `modelines`. See `:help modeline`\n# Feel free to remove those if you don't want/need to use them.\n# yaml-language-server: $schema=https://goreleaser.com/static/schema.json\n# vim: set ts=2 sw=2 tw=0 fo=cnqoj\n\nversion: 2\n\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n    - go mod tidy\n\nupx:\n  - enabled: true\n    compress: best\n    lzma: true\n\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    goos:\n      - windows\n      - darwin\n\narchives:\n  - format: binary\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - \"^docs:\"\n      - \"^test:\"\n      - \"^style:\"\n      - \"^ci:\"\n      - \"^perf:\"\n      - \"^build:\"\n      - \"^deps:\"\n      - \"^vendor:\"\n      - \"^internal:\"\n      - \"^examples:\"\n\nchecksum:\n  algorithm: md5"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2024 Antkites\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6748046875,
          "content": "# KillWxapkg\n\n> 纯Golang实现，一个用于自动化反编译微信小程序的工具，小程序安全利器，\n> 自动解密，解包，可还原工程目录，支持微信开发者工具运行\n\n[![stable](https://img.shields.io/badge/stable-stable-green.svg)](https://github.com/Ackites/KillWxapkg)\n[![license](https://img.shields.io/github/license/Ackites/KillWxapkg)]()\n[![download](https://img.shields.io/github/downloads/Ackites/KillWxapkg/total)]()\n[![release](https://img.shields.io/github/v/release/Ackites/KillWxapkg)]()\n[![commit](https://img.shields.io/github/last-commit/Ackites/KillWxapkg)]()\n[![issues](https://img.shields.io/github/issues/Ackites/KillWxapkg)]()\n[![pull](https://img.shields.io/github/issues-pr/Ackites/KillWxapkg)]()\n[![fork](https://img.shields.io/github/forks/Ackites/KillWxapkg)]()\n[![star](https://img.shields.io/github/stars/Ackites/KillWxapkg)]()\n[![go](https://img.shields.io/github/go-mod/go-version/Ackites/KillWxapkg)]()\n[![size](https://img.shields.io/github/repo-size/Ackites/KillWxapkg)]()\n[![contributors](https://img.shields.io/github/contributors/Ackites/KillWxapkg)]()\n------------------\n## 声明\n\n**本程序仅供于学习交流，请使用者遵守《中华人民共和国网络安全法》，勿将此工具用于非授权的测试，开发者不负任何连带法律责任。**\n\n## 介绍\n\n**因为采用了UPX压缩了软件体积，工具运行时可能会出现误报，可以放心使用，工具不会对您的电脑造成任何损害。**\n\n- [x] 小程序自动解密\n- [x] 小程序自动解包，支持代码美化输出\n  - [x] Json美化\n  - [x] JavaScript美化\n  - [x] Html美化\n- [x] 支持还原源代码工程目录结构\n  - [x] Json配置文件还原\n  - [x] JavaScript代码还原\n  - [x] Wxml代码还原\n  - [x] Wxss代码还原\n- [x] Hook小程序，动态调试，开启小程序F12\n- [x] 重新打包wxapkg\n  - [x] 监听将要打包的文件夹，并自动打包\n- [x] 敏感数据导出\n- [ ] 支持小游戏\n\n### 工程结构还原\n\n<div style=\"display: flex \">\n  <div>\n    <h4>还原前</h4>\n    <img src=\"./images/img4.png\" width=\"30%\">\n  </div>\n  <div>\n    <h4>还原后</h4>\n    <img src=\"./images/img5.png\" width=\"30%\"> \n  </div>\n</div>\n\n#### 微信开发者工具运行\n\n<img src=\"./images/img6.png\" width=\"30%\">\n\n### Hook支持版本列表\n\n| 小程序版本     |\n|-----------|\n| 11275_x64 |\n| 11253_x64 |\n| 11205_x64 |\n| 9193_x64  |\n| 11159_x64 |\n| 9185_x64  |\n| 9129_x64  |\n| 9115_x64  |\n| 8555_x64  |\n| 9105_x64  |\n| 8555_x64  |\n| 9079_x64  |\n| 8531_x64  |\n| 8529_x64  |\n| 8519_x64  |\n| 8501_x64  |\n| 8461_x64  |\n| 8447_x64  |\n\n#### 如何查看当前运行版本？\n\n<div style=\"display: flex \">\n  <img src=\"./images/img7.png\" width=\"30%\">\n  <img src=\"./images/img8.png\" width=\"30%\">\n</div>\n\n#### 开启小程序F12\n\n> **运行前先启动微信（建议小号，有被封号风险）**\n\n```shell\n<本程序> -hook\n ```\n\n<img src=\"./images/img9.jpg\" width=\"60%\">\n\n### 重新打包运行\n\n```shell\n<本程序> -repack=<输入目录> [-out=<输出目录或文件>] [-watch]\n ```\n\n<img src=\"./images/img10.png\" width=\"70%\">\n\n#### 效果示例\n\n<div style=\"display: flex \">\n  <img src=\"./images/img11.png\" width=\"30%\">\n  <img src=\"./images/img12.png\" width=\"30%\">\n</div>\n\n## 安装\n\n- 下载最新版本的[release](https://github.com/Ackites/KillWxapkg/releases)包\n- 自行编译\n  ```shell\n  # 克隆项目\n  git clone https://github.com/Ackites/KillWxapkg.git\n  \n  # 进入项目目录\n  cd ./KillWxapkg\n  \n  # 下载依赖\n  go mod tidy\n  \n  # 编译\n  go build\n  ```\n\n## 用法\n\n> -id=<输入AppID> -in=<输入文件1,输入文件2> 或 -in=<输入目录> -out=<输出目录> \n> [-ext=<文件后缀>] [-restore] [-pretty] [-noClean] [-help] [-hook] [-save] [-repack=<输入目录>] [-watch] [-sensitive]\n\n### 参数说明\n- `-id string`\n    - 微信小程序的AppID\n    - 包已解密，可不指定\n    - 例：-id=wx7627e1630485288d\n- `-in string`\n    - 输入文件路径（多个文件用逗号分隔）或输入目录路径\n    - 自动检测，已解密的包，自动解包，未解密的包，自动解密后解包\n    - 解密后的包会保存到输入目录下以AppID命名的文件夹\n    - 例：-in=\"app.wxpkg,app1.wxapkg\"\n    - 例：-in=\"C:\\Users\\mi\\Desktop\\Applet\\64\"\n- `-out string`\n    -  输出目录路径（如果未指定，则默认保存到输入目录下以AppID命名的文件夹）\n- `-restore`\n    -  是否还原源代码工程目录结构，默认不还原\n- `-pretty`\n    - 是否美化输出，默认不美化，美化需较长时间\n- `-ext string`\n    - 处理的文件后缀 (default \".wxapkg\")\n    - 例：-ext=.wxapkg\n- `-noClean`\n    - 是否清理反编译的中间文件，默认清理\n- `-hook`\n    - 是否Hook小程序，动态调试，开启F12，默认不Hook\n    - **注意：目前仅支持Windows，建议小号，有封号风险**\n- `-save`\n    - 是否保存解密后的文件，默认不保存\n- `-repack string`\n    - 重新打包目录路径\n    - 例：-repack=\"C:\\Users\\mi\\Desktop\\Applet\\64\"\n    - **注意：目前仅支持一次打包一个文件，同时仅支持未被解析的源文件（未使用-restore）**\n- `-watch`\n    - 是否监听将要打包的文件夹，并自动打包，默认不监听\n- `-sensitive`\n    - 是否导出敏感数据，默认不导出，导出后会在工具目录下生成sensitive_data.json文件，支持自定义规则\n- `-help`\n    - 显示帮助信息\n\n### 获取微信小程序AppID\n\n<img src=\"./images/img2.png\" width=\"70%\">\n\n#### 文件夹名即为AppID\n\n<img src=\"./images/img3.png\" width=\"70%\">\n\n进入文件夹下，即可找到.wxapkg文件\n\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=Ackites/KillWxapkg&type=Date)](https://star-history.com/#Ackites/KillWxapkg&Date)"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.654296875,
          "content": "module github.com/Ackites/KillWxapkg\n\ngo 1.23\n\nrequire (\n\tgithub.com/ditashi/jsbeautifier-go v0.0.0-20141206144643-2520a8026a9c\n\tgithub.com/dop251/goja v0.0.0-20240822155948-fa6d1ed5e4b6\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/tdewolff/parse/v2 v2.7.15\n\tgithub.com/yosssi/gohtml v0.0.0-20201013000340-ee4748c638f4\n\tgolang.org/x/crypto v0.26.0\n\tgolang.org/x/net v0.28.0\n\tgolang.org/x/text v0.17.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/dlclark/regexp2 v1.11.4 // indirect\n\tgithub.com/go-sourcemap/sourcemap v2.1.3+incompatible // indirect\n\tgithub.com/google/pprof v0.0.0-20230207041349-798e818bf904 // indirect\n\tgolang.org/x/sys v0.23.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.1103515625,
          "content": "github.com/Masterminds/semver/v3 v3.2.1 h1:RN9w6+7QoMeJVGyfmbcgs28Br8cvmnucEXnY0rYXWg0=\ngithub.com/Masterminds/semver/v3 v3.2.1/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/ditashi/jsbeautifier-go v0.0.0-20141206144643-2520a8026a9c h1:+Zo5Ca9GH0RoeVZQKzFJcTLoAixx5s5Gq3pTIS+n354=\ngithub.com/ditashi/jsbeautifier-go v0.0.0-20141206144643-2520a8026a9c/go.mod h1:HJGU9ULdREjOcVGZVPB5s6zYmHi1RxzT71l2wQyLmnE=\ngithub.com/dlclark/regexp2 v1.11.4 h1:rPYF9/LECdNymJufQKmri9gV604RvvABwgOA8un7yAo=\ngithub.com/dlclark/regexp2 v1.11.4/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/dop251/goja v0.0.0-20240822155948-fa6d1ed5e4b6 h1:0x8Sh2rKCTVUQnRTJFIwtRWAp91VMsnATQEsMAg14kM=\ngithub.com/dop251/goja v0.0.0-20240822155948-fa6d1ed5e4b6/go.mod h1:MxLav0peU43GgvwVgNbLAj1s/bSGboKkhuULvq/7hx4=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-sourcemap/sourcemap v2.1.3+incompatible h1:W1iEw64niKVGogNgBN3ePyLFfuisuzeidWPMPWmECqU=\ngithub.com/go-sourcemap/sourcemap v2.1.3+incompatible/go.mod h1:F8jJfvm2KbVjc5NqelyYJmf/v5J0dwNLS2mL4sNA1Jg=\ngithub.com/google/pprof v0.0.0-20230207041349-798e818bf904 h1:4/hN5RUoecvl+RmJRE2YxKWtnnQls6rQjjW5oV7qg2U=\ngithub.com/google/pprof v0.0.0-20230207041349-798e818bf904/go.mod h1:uglQLonpP8qtYCYyzA+8c/9qtqgA3qsXGYqCPKARAFg=\ngithub.com/tdewolff/parse/v2 v2.7.15 h1:hysDXtdGZIRF5UZXwpfn3ZWRbm+ru4l53/ajBRGpCTw=\ngithub.com/tdewolff/parse/v2 v2.7.15/go.mod h1:3FbJWZp3XT9OWVN3Hmfp0p/a08v4h8J9W1aghka0soA=\ngithub.com/tdewolff/test v1.0.11-0.20231101010635-f1265d231d52 h1:gAQliwn+zJrkjAHVcBEYW/RFvd2St4yYimisvozAYlA=\ngithub.com/tdewolff/test v1.0.11-0.20231101010635-f1265d231d52/go.mod h1:6DAvZliBAAnD7rhVgwaM7DE5/d9NMOAJ09SqYqeK4QE=\ngithub.com/yosssi/gohtml v0.0.0-20201013000340-ee4748c638f4 h1:0sw0nJM544SpsihWx1bkXdYLQDlzRflMgFJQ4Yih9ts=\ngithub.com/yosssi/gohtml v0.0.0-20201013000340-ee4748c638f4/go.mod h1:+ccdNT0xMY1dtc5XBxumbYfOUhmduiGudqaDgD2rVRE=\ngolang.org/x/crypto v0.26.0 h1:RrRspgV4mU+YwB4FYnuBoKsUapNIL5cohGAmSH3azsw=\ngolang.org/x/crypto v0.26.0/go.mod h1:GY7jblb9wI+FOo5y8/S2oY4zWP07AkOJ4+jxCqdqn54=\ngolang.org/x/net v0.28.0 h1:a9JDOJc5GMUJ0+UDqmLT86WiEy7iWyIhz8gz8E4e5hE=\ngolang.org/x/net v0.28.0/go.mod h1:yqtgsTWOOnlGLG9GFRrK3++bGOUEkNBoHZc8MEDWPNg=\ngolang.org/x/sys v0.23.0 h1:YfKFowiIMvtgl1UERQoTPPToxltDeZfbj4H7dVUCwmM=\ngolang.org/x/sys v0.23.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.17.0 h1:XtiM5bkSOt+ewxlOE/aE/AKEHibwj/6gvWMl9Rsh0Qc=\ngolang.org/x/text v0.17.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 2.4248046875,
          "content": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\n\t\"github.com/Ackites/KillWxapkg/internal/pack\"\n\n\t\"github.com/Ackites/KillWxapkg/cmd\"\n\thook2 \"github.com/Ackites/KillWxapkg/internal/hook\"\n)\n\nvar (\n\tappID      string\n\tinput      string\n\toutputDir  string\n\tfileExt    string\n\trestoreDir bool\n\tpretty     bool\n\tnoClean    bool\n\thook       bool\n\tsave       bool\n\trepack     string\n\twatch      bool\n\tsensitive  bool\n)\n\nfunc init() {\n\tflag.StringVar(&appID, \"id\", \"\", \"微信小程序的AppID\")\n\tflag.StringVar(&input, \"in\", \"\", \"输入文件路径（多个文件用逗号分隔）或输入目录路径\")\n\tflag.StringVar(&outputDir, \"out\", \"\", \"输出目录路径（如果未指定，则默认保存到输入目录下以AppID命名的文件夹）\")\n\tflag.StringVar(&fileExt, \"ext\", \".wxapkg\", \"处理的文件后缀\")\n\tflag.BoolVar(&restoreDir, \"restore\", false, \"是否还原工程目录结构\")\n\tflag.BoolVar(&pretty, \"pretty\", false, \"是否美化输出\")\n\tflag.BoolVar(&noClean, \"noClean\", false, \"是否清理中间文件\")\n\tflag.BoolVar(&hook, \"hook\", false, \"是否开启动态调试\")\n\tflag.BoolVar(&save, \"save\", false, \"是否保存解密后的文件\")\n\tflag.StringVar(&repack, \"repack\", \"\", \"重新打包wxapkg文件\")\n\tflag.BoolVar(&watch, \"watch\", false, \"是否监听将要打包的文件夹，并自动打包\")\n\tflag.BoolVar(&sensitive, \"sensitive\", false, \"是否获取敏感数据\")\n}\n\nfunc main() {\n\t// 解析命令行参数\n\tflag.Parse()\n\n\tbanner := `\n _   __ _ _ _  __      __                 _         \n| | / /(_) | | \\ \\    / /                | |        \n| |/ /  _| | |  \\ \\  / /   __  ____ _ ___| | ____ _ \n|    \\ | | | |   \\ \\/ /   / / / / _  / __| |/ /  ' \\\n| |\\  \\| | | |    \\  /   / /_/ / (_| \\__ \\   <| | | |\n\\_| \\_/_|_|_|     \\/    \\__,_|\\__,_|___/_|\\_\\_| |_|\n                                                    \n             Wxapkg Decompiler Tool v2.4.1\n    `\n\tfmt.Println(banner)\n\n\t// 动态调试\n\tif hook {\n\t\thook2.Hook()\n\t\treturn\n\t}\n\n\t// 重新打包\n\tif repack != \"\" {\n\t\tpack.Repack(repack, watch, outputDir)\n\t\treturn\n\t}\n\n\tif appID == \"\" || input == \"\" {\n\t\tfmt.Println(\"使用方法: program -id=<AppID> -in=<输入文件1,输入文件2> 或 -in=<输入目录> -out=<输出目录> [-ext=<文件后缀>] [-restore] [-pretty] [-noClean] [-hook] [-save] [-repack=<输入目录>] [-watch] [-sensitive]\")\n\t\tflag.PrintDefaults()\n\t\tfmt.Println()\n\t\treturn\n\t}\n\n\t// 执行命令\n\tcmd.Execute(appID, input, outputDir, fileExt, restoreDir, pretty, noClean, save, sensitive)\n}\n"
        }
      ]
    }
  ]
}