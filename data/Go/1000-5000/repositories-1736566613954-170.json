{
  "metadata": {
    "timestamp": 1736566613954,
    "page": 170,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ory/dockertest",
      "stars": 4220,
      "defaultBranch": "v3",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09765625,
          "content": ".bin/\n.idea/\nnode_modules/\n*.iml\n*.exe\n.cover/\nvendor/\ngo.list\ncover.out\ncoverage.out\n.vscode\n.bin/\n"
        },
        {
          "name": ".nancy-ignore",
          "type": "blob",
          "size": 0.080078125,
          "content": "CVE-2023-27561 # see https://github.com/sonatype-nexus-community/nancy/issues/273\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": ".github/pull_request_template.md\nCONTRIBUTING.md\n"
        },
        {
          "name": ".reference-ignore",
          "type": "blob",
          "size": 0.033203125,
          "content": "**/node_modules\ndocs\nCHANGELOG.md\n"
        },
        {
          "name": ".reports",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 6.064453125,
          "content": "<!-- AUTO-GENERATED, DO NOT EDIT! -->\n<!-- Please edit the original at https://github.com/ory/meta/blob/master/templates/repository/common/CODE_OF_CONDUCT.md -->\n\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Open Source Community Support\n\nOry Open source software is collaborative and based on contributions by\ndevelopers in the Ory community. There is no obligation from Ory to help with\nindividual problems. If Ory open source software is used in production in a\nfor-profit company or enterprise environment, we mandate a paid support contract\nwhere Ory is obligated under their service level agreements (SLAs) to offer a\ndefined level of availability and responsibility. For more information about\npaid support please contact us at sales@ory.sh.\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[office@ory.sh](mailto:office@ory.sh). All complaints will be reviewed and\ninvestigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder][mozilla coc].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][faq]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[mozilla coc]: https://github.com/mozilla/diversity\n[faq]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.2646484375,
          "content": "<!-- AUTO-GENERATED, DO NOT EDIT! -->\n<!-- Please edit the original at https://github.com/ory/meta/blob/master/templates/repository/common/CONTRIBUTING.md -->\n\n# Contribute to Ory Dockertest<!-- omit in toc -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Introduction](#introduction)\n- [FAQ](#faq)\n- [How can I contribute?](#how-can-i-contribute)\n- [Communication](#communication)\n- [Contribute examples](#contribute-examples)\n- [Contribute code](#contribute-code)\n- [Contribute documentation](#contribute-documentation)\n- [Disclosing vulnerabilities](#disclosing-vulnerabilities)\n- [Code style](#code-style)\n  - [Working with forks](#working-with-forks)\n- [Conduct](#conduct)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Introduction\n\n_Please note_: We take Ory Dockertest's security and our users' trust very\nseriously. If you believe you have found a security issue in Ory Dockertest,\nplease disclose it by contacting us at security@ory.sh.\n\nThere are many ways in which you can contribute. The goal of this document is to\nprovide a high-level overview of how you can get involved in Ory.\n\nAs a potential contributor, your changes and ideas are welcome at any hour of\nthe day or night, on weekdays, weekends, and holidays. Please do not ever\nhesitate to ask a question or send a pull request.\n\nIf you are unsure, just ask or submit the issue or pull request anyways. You\nwon't be yelled at for giving it your best effort. The worst that can happen is\nthat you'll be politely asked to change something. We appreciate any sort of\ncontributions and don't want a wall of rules to get in the way of that.\n\nThat said, if you want to ensure that a pull request is likely to be merged,\ntalk to us! You can find out our thoughts and ensure that your contribution\nwon't clash with Ory\nDockertest's direction. A great way to\ndo this is via\n[Ory Dockertest Discussions](https://github.com/orgs/ory/discussions)\nor the [Ory Chat](https://www.ory.sh/chat).\n\n## FAQ\n\n- I am new to the community. Where can I find the\n  [Ory Community Code of Conduct?](https://github.com/ory/dockertest/blob/master/CODE_OF_CONDUCT.md)\n\n- I have a question. Where can I get\n  [answers to questions regarding Ory Dockertest?](#communication)\n\n- I would like to contribute but I am not sure how. Are there\n  [easy ways to contribute?](#how-can-i-contribute)\n  [Or good first issues?](https://github.com/search?l=&o=desc&q=label%3A%22help+wanted%22+label%3A%22good+first+issue%22+is%3Aopen+user%3Aory+user%3Aory-corp&s=updated&type=Issues)\n\n- I want to talk to other Ory Dockertest users.\n  [How can I become a part of the community?](#communication)\n\n- I would like to know what I am agreeing to when I contribute to Ory\n  Dockertest.\n  Does Ory have\n  [a Contributors License Agreement?](https://cla-assistant.io/ory/dockertest)\n\n- I would like updates about new versions of Ory Dockertest.\n  [How are new releases announced?](https://www.ory.sh/l/sign-up-newsletter)\n\n## How can I contribute?\n\nIf you want to start to contribute code right away, take a look at the\n[list of good first issues](https://github.com/ory/dockertest/labels/good%20first%20issue).\n\nThere are many other ways you can contribute. Here are a few things you can do\nto help out:\n\n- **Give us a star.** It may not seem like much, but it really makes a\n  difference. This is something that everyone can do to help out Ory Dockertest.\n  Github stars help the project gain visibility and stand out.\n\n- **Join the community.** Sometimes helping people can be as easy as listening\n  to their problems and offering a different perspective. Join our Slack, have a\n  look at discussions in the forum and take part in community events. More info\n  on this in [Communication](#communication).\n\n- **Answer discussions.** At all times, there are several unanswered discussions\n  on GitHub. You can see an\n  [overview here](https://github.com/discussions?discussions_q=is%3Aunanswered+org%3Aory+sort%3Aupdated-desc).\n  If you think you know an answer or can provide some information that might\n  help, please share it! Bonus: You get GitHub achievements for answered\n  discussions.\n\n- **Help with open issues.** We have a lot of open issues for Ory Dockertest and\n  some of them may lack necessary information, some are duplicates of older\n  issues. You can help out by guiding people through the process of filling out\n  the issue template, asking for clarifying information or pointing them to\n  existing issues that match their description of the problem.\n\n- **Review documentation changes.** Most documentation just needs a review for\n  proper spelling and grammar. If you think a document can be improved in any\n  way, feel free to hit the `edit` button at the top of the page. More info on\n  contributing to the documentation [here](#contribute-documentation).\n\n- **Help with tests.** Pull requests may lack proper tests or test plans. These\n  are needed for the change to be implemented safely.\n\n## Communication\n\nWe use [Slack](https://www.ory.sh/chat). You are welcome to drop in and ask\nquestions, discuss bugs and feature requests, talk to other users of Ory, etc.\n\nCheck out [Ory Dockertest Discussions](https://github.com/orgs/ory/discussions). This is a great place for\nin-depth discussions and lots of code examples, logs and similar data.\n\nYou can also join our community calls if you want to speak to the Ory team\ndirectly or ask some questions. You can find more info and participate in\n[Slack](https://www.ory.sh/chat) in the #community-call channel.\n\nIf you want to receive regular notifications about updates to Ory Dockertest,\nconsider joining the mailing list. We will _only_ send you vital information on\nthe projects that you are interested in.\n\nAlso, [follow us on Twitter](https://twitter.com/orycorp).\n\n## Contribute examples\n\nOne of the most impactful ways to contribute is by adding examples. You can find\nan overview of examples using Ory services on the\n[documentation examples page](https://www.ory.sh/docs/examples). Source code for\nexamples can be found in most cases in the\n[ory/examples](https://github.com/ory/examples) repository.\n\n_If you would like to contribute a new example, we would love to hear from you!_\n\nPlease [open an issue](https://github.com/ory/examples/issues/new/choose) to\ndescribe your example before you start working on it. We would love to provide\nguidance to make for a pleasant contribution experience. Go through this\nchecklist to contribute an example:\n\n1. Create a GitHub issue proposing a new example and make sure it's different\n   from an existing one.\n1. Fork the repo and create a feature branch off of `master` so that changes do\n   not get mixed up.\n1. Add a descriptive prefix to commits. This ensures a uniform commit history\n   and helps structure the changelog. Please refer to this\n   [Convential Commits configuration](https://github.com/ory/dockertest/blob/master/.github/workflows/conventional_commits.yml)\n   for the list of accepted prefixes. You can read more about the Conventional\n   Commit specification\n   [at their site](https://www.conventionalcommits.org/en/v1.0.0/).\n1. Create a `README.md` that explains how to use the example. (Use\n   [the README template](https://github.com/ory/examples/blob/master/_common/README.md)).\n1. Open a pull request and maintainers will review and merge your example.\n\n## Contribute code\n\nUnless you are fixing a known bug, we **strongly** recommend discussing it with\nthe core team via a GitHub issue or [in our chat](https://www.ory.sh/chat)\nbefore getting started to ensure your work is consistent with Ory Dockertest's\nroadmap and architecture.\n\nAll contributions are made via pull requests. To make a pull request, you will\nneed a GitHub account; if you are unclear on this process, see GitHub's\ndocumentation on [forking](https://help.github.com/articles/fork-a-repo) and\n[pull requests](https://help.github.com/articles/using-pull-requests). Pull\nrequests should be targeted at the `master` branch. Before creating a pull\nrequest, go through this checklist:\n\n1. Create a feature branch off of `master` so that changes do not get mixed up.\n1. [Rebase](http://git-scm.com/book/en/Git-Branching-Rebasing) your local\n   changes against the `master` branch.\n1. Run the full project test suite with the `go test -tags sqlite ./...` (or\n   equivalent) command and confirm that it passes.\n1. Run `make format`\n1. Add a descriptive prefix to commits. This ensures a uniform commit history\n   and helps structure the changelog. Please refer to this\n   [Convential Commits configuration](https://github.com/ory/dockertest/blob/master/.github/workflows/conventional_commits.yml)\n   for the list of accepted prefixes. You can read more about the Conventional\n   Commit specification\n   [at their site](https://www.conventionalcommits.org/en/v1.0.0/).\n\nIf a pull request is not ready to be reviewed yet\n[it should be marked as a \"Draft\"](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request).\n\nBefore your contributions can be reviewed you need to sign our\n[Contributor License Agreement](https://cla-assistant.io/ory/dockertest).\n\nThis agreement defines the terms under which your code is contributed to Ory.\nMore specifically it declares that you have the right to, and actually do, grant\nus the rights to use your contribution. You can see the Apache 2.0 license under\nwhich our projects are published\n[here](https://github.com/ory/meta/blob/master/LICENSE).\n\nWhen pull requests fail the automated testing stages (for example unit or E2E\ntests), authors are expected to update their pull requests to address the\nfailures until the tests pass.\n\nPull requests eligible for review\n\n1. follow the repository's code formatting conventions;\n2. include tests that prove that the change works as intended and does not add\n   regressions;\n3. document the changes in the code and/or the project's documentation;\n4. pass the CI pipeline;\n5. have signed our\n   [Contributor License Agreement](https://cla-assistant.io/ory/dockertest);\n6. include a proper git commit message following the\n   [Conventional Commit Specification](https://www.conventionalcommits.org/en/v1.0.0/).\n\nIf all of these items are checked, the pull request is ready to be reviewed and\nyou should change the status to \"Ready for review\" and\n[request review from a maintainer](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review).\n\nReviewers will approve the pull request once they are satisfied with the patch.\n\n## Contribute documentation\n\nPlease provide documentation when changing, removing, or adding features. All\nOry Documentation resides in the\n[Ory documentation repository](https://github.com/ory/docs/). For further\ninstructions please head over to the Ory Documentation\n[README.md](https://github.com/ory/docs/blob/master/README.md).\n\n## Disclosing vulnerabilities\n\nPlease disclose vulnerabilities exclusively to\n[security@ory.sh](mailto:security@ory.sh). Do not use GitHub issues.\n\n## Code style\n\nPlease run `make format` to format all source code following the Ory standard.\n\n### Working with forks\n\n```bash\n# First you clone the original repository\ngit clone git@github.com:ory/ory/dockertest.git\n\n# Next you add a git remote that is your fork:\ngit remote add fork git@github.com:<YOUR-GITHUB-USERNAME-HERE>/ory/dockertest.git\n\n# Next you fetch the latest changes from origin for master:\ngit fetch origin\ngit checkout master\ngit pull --rebase\n\n# Next you create a new feature branch off of master:\ngit checkout my-feature-branch\n\n# Now you do your work and commit your changes:\ngit add -A\ngit commit -a -m \"fix: this is the subject line\" -m \"This is the body line. Closes #123\"\n\n# And the last step is pushing this to your fork\ngit push -u fork my-feature-branch\n```\n\nNow go to the project's GitHub Pull Request page and click \"New pull request\"\n\n## Conduct\n\nWhether you are a regular contributor or a newcomer, we care about making this\ncommunity a safe place for you and we've got your back.\n\n[Ory Community Code of Conduct](https://github.com/ory/dockertest/blob/master/CODE_OF_CONDUCT.md)\n\nWe welcome discussion about creating a welcoming, safe, and productive\nenvironment for the community. If you have any questions, feedback, or concerns\n[please let us know](https://www.ory.sh/chat).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.798828125,
          "content": "format: .bin/ory node_modules   # formats the source code\n\t.bin/ory dev headers copyright --type=open-source\n\tgofmt -l -s -w .\n\tnpm exec -- prettier --write .\n\nhelp:\n\tcat Makefile | grep '^[^ ]*:' | grep -v '^\\.bin/' | grep -v '.SILENT:' | grep -v '^node_modules:' | grep -v help | sed 's/:.*#/#/' | column -s \"#\" -t\n\nlicenses: .bin/licenses node_modules  # checks open-source licenses\n\t.bin/licenses\n\n.bin/licenses: Makefile\n\tcurl https://raw.githubusercontent.com/ory/ci/master/licenses/install | sh\n\n.bin/ory: Makefile\n\tcurl https://raw.githubusercontent.com/ory/meta/master/install.sh | bash -s -- -b .bin ory v0.3.2\n\ttouch .bin/ory\n\nnode_modules: package-lock.json\n\tnpm install\n\ttouch node_modules\n\ntest:\n\tgo mod tidy\n\tgo vet -x .\n\tgo test -covermode=atomic -coverprofile=\"coverage.out\" .\n\n\n.DEFAULT_GOAL := help\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2646484375,
          "content": "<h1 align=\"center\"><img src=\"./docs/images/banner_dockertest.png\" alt=\"ORY Dockertest\"></h1>\n\n[![Build Status](https://travis-ci.org/ory/dockertest.svg)](https://travis-ci.org/ory/dockertest?branch=master)\n[![Coverage Status](https://coveralls.io/repos/github/ory/dockertest/badge.svg?branch=v3)](https://coveralls.io/github/ory/dockertest?branch=v3)\n\nUse Docker to run your Golang integration tests against third party services on\n**Microsoft Windows, Mac OSX and Linux**!\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n**Table of Contents**\n\n- [Why should I use Dockertest?](#why-should-i-use-dockertest)\n- [Installing and using Dockertest](#installing-and-using-dockertest)\n  - [Using Dockertest](#using-dockertest)\n  - [Examples](#examples)\n- [Troubleshoot & FAQ](#troubleshoot--faq)\n  - [Out of disk space](#out-of-disk-space)\n  - [Removing old containers](#removing-old-containers)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Why should I use Dockertest?\n\nWhen developing applications, it is often necessary to use services that talk to\na database system. Unit Testing these services can be cumbersome because mocking\ndatabase/DBAL is strenuous. Making slight changes to the schema implies\nrewriting at least some, if not all of the mocks. The same goes for API changes\nin the DBAL. To avoid this, it is smarter to test these specific services\nagainst a real database that is destroyed after testing. Docker is the perfect\nsystem for running unit tests as you can spin up containers in a few seconds and\nkill them when the test completes. The Dockertest library provides easy to use\ncommands for spinning up Docker containers and using them for your tests.\n\n## Installing and using Dockertest\n\nUsing Dockertest is straightforward and simple. Check the\n[releases tab](https://github.com/ory/dockertest/releases) for available\nreleases.\n\nTo install dockertest, run\n\n```\ngo get -u github.com/ory/dockertest/v3\n```\n\n### Using Dockertest\n\n```go\npackage dockertest_test\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"testing\"\n\n\t_ \"github.com/go-sql-driver/mysql\"\n\t\"github.com/ory/dockertest/v3\"\n)\n\nvar db *sql.DB\n\nfunc TestMain(m *testing.M) {\n\t// uses a sensible default on windows (tcp/http) and linux/osx (socket)\n\tpool, err := dockertest.NewPool(\"\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not construct pool: %s\", err)\n\t}\n\n\t// uses pool to try to connect to Docker\n\terr = pool.Client.Ping()\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not connect to Docker: %s\", err)\n\t}\n\n\t// pulls an image, creates a container based on it and runs it\n\tresource, err := pool.Run(\"mysql\", \"5.7\", []string{\"MYSQL_ROOT_PASSWORD=secret\"})\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not start resource: %s\", err)\n\t}\n\n\t// exponential backoff-retry, because the application in the container might not be ready to accept connections yet\n\tif err := pool.Retry(func() error {\n\t\tvar err error\n\t\tdb, err = sql.Open(\"mysql\", fmt.Sprintf(\"root:secret@(localhost:%s)/mysql\", resource.GetPort(\"3306/tcp\")))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.Ping()\n\t}); err != nil {\n\t\tlog.Fatalf(\"Could not connect to database: %s\", err)\n\t}\n\n\t// as of go1.15 testing.M returns the exit code of m.Run(), so it is safe to use defer here\n    defer func() {\n      if err := pool.Purge(resource); err != nil {\n        log.Fatalf(\"Could not purge resource: %s\", err)\n      }\n\n    }()\n\n\tm.Run()\n}\n\nfunc TestSomething(t *testing.T) {\n\t// db.Query()\n}\n```\n\n### Examples\n\nWe provide code examples for well known services in the [examples](examples/)\ndirectory, check them out!\n\n## Troubleshoot & FAQ\n\n### Out of disk space\n\nTry cleaning up the images with\n[docker-cleanup-volumes](https://github.com/chadoe/docker-cleanup-volumes).\n\n### Removing old containers\n\nSometimes container clean up fails. Check out\n[this stackoverflow question](http://stackoverflow.com/questions/21398087/how-to-delete-dockers-images)\non how to fix this. You may also set an absolute lifetime on containers:\n\n```go\nresource.Expire(60) // Tell docker to hard kill the container in 60 seconds\n```\n\nTo let stopped containers removed from file system automatically, use\n`pool.RunWithOptions()` instead of `pool.Run()` with `config.AutoRemove` set to\ntrue, e.g.:\n\n```go\npostgres, err := pool.RunWithOptions(&dockertest.RunOptions{\n\tRepository: \"postgres\",\n\tTag:        \"11\",\n\tEnv: []string{\n\t\t\"POSTGRES_USER=test\",\n\t\t\"POSTGRES_PASSWORD=test\",\n\t\t\"listen_addresses = '*'\",\n\t},\n}, func(config *docker.HostConfig) {\n\t// set AutoRemove to true so that stopped container goes away by itself\n\tconfig.AutoRemove = true\n\tconfig.RestartPolicy = docker.RestartPolicy{\n\t\tName: \"no\",\n\t}\n})\n```\n\n## Running dockertest in Gitlab CI\n\n### How to run dockertest on shared gitlab runners?\n\nYou should add docker dind service to your job which starts in sibling\ncontainer. That means database will be available on host `docker`.  \nYou app should be able to change db host through environment variable.\n\nHere is the simple example of `gitlab-ci.yml`:\n\n```yaml\nstages:\n  - test\ngo-test:\n  stage: test\n  image: golang:1.15\n  services:\n    - docker:dind\n  variables:\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_DRIVER: overlay2\n    YOUR_APP_DB_HOST: docker\n  script:\n    - go test ./...\n```\n\nPlus in the `pool.Retry` method that checks for connection readiness, you need\nto use `$YOUR_APP_DB_HOST` instead of localhost.\n\n### How to run dockertest on group(custom) gitlab runners?\n\nGitlab runner can be run in docker executor mode to save compatibility with\nshared runners.  \nHere is the simple register command:\n\n```shell script\ngitlab-runner register -n \\\n --url https://gitlab.com/ \\\n --registration-token $YOUR_TOKEN \\\n --executor docker \\\n --description \"My Docker Runner\" \\\n --docker-image \"docker:19.03.12\" \\\n --docker-privileged\n```\n\nYou only need to instruct docker dind to start with disabled tls.  \nAdd variable `DOCKER_TLS_CERTDIR: \"\"` to `gitlab-ci.yml` above. It will tell\ndocker daemon to start on 2375 port over http.\n\n## Running Dockertest Using GitHub Actions\n\n```yaml\nname: Test with Docker\n\non: [push]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    services:\n      dind:\n        image: docker:23.0-rc-dind-rootless\n        ports:\n          - 2375:2375\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      - name: Set up Go\n        uses: actions/setup-go@v4\n        with:\n          go-version: \"1.21\"\n\n      - name: Test with Docker\n        run: go test -v ./...\n```\n\n### How to run dockertest with remote Docker\n\nUse-case: locally installed docker CLI (client), docker daemon somewhere\nremotely, environment properly set (ie: `DOCKER_HOST`, etc..). For example,\nremote docker can be provisioned by docker-machine.\n\nCurrently, dockertest in case of `resource.GetHostPort()` will return docker\nhost binding address (commonly - `localhost`) instead of remote docker host.\nUniversal solution is:\n\n```go\nfunc getHostPort(resource *dockertest.Resource, id string) string {\n\tdockerURL := os.Getenv(\"DOCKER_HOST\")\n\tif dockerURL == \"\" {\n\t\treturn resource.GetHostPort(id)\n\t}\n\tu, err := url.Parse(dockerURL)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn u.Hostname() + \":\" + resource.GetPort(id)\n}\n```\n\nIt will return the remote docker host concatenated with the allocated port in\ncase `DOCKER_HOST` env is defined. Otherwise, it will fall back to the embedded\nbehavior.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.4453125,
          "content": "<!-- AUTO-GENERATED, DO NOT EDIT! -->\n<!-- Please edit the original at https://github.com/ory/meta/blob/master/templates/repository/common/SECURITY.md -->\n\n# Ory Security Policy\n\nThis policy outlines Ory's security commitments and practices for users across\ndifferent licensing and deployment models.\n\nTo learn more about Ory's security service level agreements (SLAs) and\nprocesses, please [contact us](https://www.ory.sh/contact/).\n\n## Ory Network Users\n\n- **Security SLA:** Ory addresses vulnerabilities in the Ory Network according\n  to the following guidelines:\n  - Critical: Typically addressed within 14 days.\n  - High: Typically addressed within 30 days.\n  - Medium: Typically addressed within 90 days.\n  - Low: Typically addressed within 180 days.\n  - Informational: Addressed as necessary.  \n    These timelines are targets and may vary based on specific circumstances.\n- **Release Schedule:** Updates are deployed to the Ory Network as\n  vulnerabilities are resolved.\n- **Version Support:** The Ory Network always runs the latest version, ensuring\n  up-to-date security fixes.\n\n## Ory Enterprise License Customers\n\n- **Security SLA:** Ory addresses vulnerabilities based on their severity:\n  - Critical: Typically addressed within 14 days.\n  - High: Typically addressed within 30 days.\n  - Medium: Typically addressed within 90 days.\n  - Low: Typically addressed within 180 days.\n  - Informational: Addressed as necessary.  \n    These timelines are targets and may vary based on specific circumstances.\n- **Release Schedule:** Updates are made available as vulnerabilities are\n  resolved. Ory works closely with enterprise customers to ensure timely updates\n  that align with their operational needs.\n- **Version Support:** Ory may provide security support for multiple versions,\n  depending on the terms of the enterprise agreement.\n\n## Apache 2.0 License Users\n\n- **Security SLA:** Ory does not provide a formal SLA for security issues under\n  the Apache 2.0 License.\n- **Release Schedule:** Releases prioritize new functionality and include fixes\n  for known security vulnerabilities at the time of release. While major\n  releases typically occur one to two times per year, Ory does not guarantee a\n  fixed release schedule.\n- **Version Support:** Security patches are only provided for the latest release\n  version.\n\n## Reporting a Vulnerability\n\nFor details on how to report security vulnerabilities, visit our\n[security policy documentation](https://www.ory.sh/docs/ecosystem/security).\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockertest.go",
          "type": "blob",
          "size": 18.1611328125,
          "content": "// Copyright © 2024 Ory Corp\n// SPDX-License-Identifier: Apache-2.0\n\npackage dockertest\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"net\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/cenkalti/backoff/v4\"\n\tdc \"github.com/ory/dockertest/v3/docker\"\n\toptions \"github.com/ory/dockertest/v3/docker/opts\"\n)\n\nvar (\n\tErrNotInContainer = errors.New(\"not running in container\")\n)\n\n// Pool represents a connection to the docker API and is used to create and remove docker images.\ntype Pool struct {\n\tClient  *dc.Client\n\tMaxWait time.Duration\n}\n\n// Network represents a docker network.\ntype Network struct {\n\tpool    *Pool\n\tNetwork *dc.Network\n}\n\n// Close removes network by calling pool.RemoveNetwork.\nfunc (n *Network) Close() error {\n\treturn n.pool.RemoveNetwork(n)\n}\n\n// Resource represents a docker container.\ntype Resource struct {\n\tpool      *Pool\n\tContainer *dc.Container\n}\n\n// GetPort returns a resource's published port. You can use it to connect to the service via localhost, e.g. tcp://localhost:1231/\nfunc (r *Resource) GetPort(id string) string {\n\tif r.Container == nil || r.Container.NetworkSettings == nil {\n\t\treturn \"\"\n\t}\n\n\tm, ok := r.Container.NetworkSettings.Ports[dc.Port(id)]\n\tif !ok || len(m) == 0 {\n\t\treturn \"\"\n\t}\n\n\treturn m[0].HostPort\n}\n\n// GetBoundIP returns a resource's published IP address.\nfunc (r *Resource) GetBoundIP(id string) string {\n\tif r.Container == nil || r.Container.NetworkSettings == nil {\n\t\treturn \"\"\n\t}\n\n\tm, ok := r.Container.NetworkSettings.Ports[dc.Port(id)]\n\tif !ok || len(m) == 0 {\n\t\treturn \"\"\n\t}\n\n\tip := m[0].HostIP\n\tif ip == \"0.0.0.0\" || ip == \"\" {\n\t\treturn \"localhost\"\n\t}\n\treturn ip\n}\n\n// GetHostPort returns a resource's published port with an address.\nfunc (r *Resource) GetHostPort(portID string) string {\n\tif r.Container == nil || r.Container.NetworkSettings == nil {\n\t\treturn \"\"\n\t}\n\n\tm, ok := r.Container.NetworkSettings.Ports[dc.Port(portID)]\n\tif !ok || len(m) == 0 {\n\t\treturn \"\"\n\t}\n\n\tip := m[0].HostIP\n\tif ip == \"0.0.0.0\" || ip == \"\" {\n\t\tip = \"localhost\"\n\t}\n\treturn net.JoinHostPort(ip, m[0].HostPort)\n}\n\ntype ExecOptions struct {\n\t// Command environment, optional.\n\tEnv []string\n\n\t// StdIn will be attached as command stdin if provided.\n\tStdIn io.Reader\n\n\t// StdOut will be attached as command stdout if provided.\n\tStdOut io.Writer\n\n\t// StdErr will be attached as command stdout if provided.\n\tStdErr io.Writer\n\n\t// Allocate TTY for command or not.\n\tTTY bool\n}\n\n// Exec executes command within container.\nfunc (r *Resource) Exec(cmd []string, opts ExecOptions) (exitCode int, err error) {\n\texec, err := r.pool.Client.CreateExec(dc.CreateExecOptions{\n\t\tContainer:    r.Container.ID,\n\t\tCmd:          cmd,\n\t\tEnv:          opts.Env,\n\t\tAttachStderr: true,\n\t\tAttachStdout: true,\n\t\tAttachStdin:  opts.StdIn != nil,\n\t\tTty:          opts.TTY,\n\t})\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"Create exec failed: %w\", err)\n\t}\n\n\t// Always attach stderr/stdout, even if not specified, to ensure that exec\n\t// waits with opts.Detach as false (default)\n\t// ref: https://github.com/fsouza/go-dockerclient/issues/838\n\tif opts.StdErr == nil {\n\t\topts.StdErr = io.Discard\n\t}\n\tif opts.StdOut == nil {\n\t\topts.StdOut = io.Discard\n\t}\n\n\terr = r.pool.Client.StartExec(exec.ID, dc.StartExecOptions{\n\t\tInputStream:  opts.StdIn,\n\t\tOutputStream: opts.StdOut,\n\t\tErrorStream:  opts.StdErr,\n\t\tTty:          opts.TTY,\n\t})\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"Start exec failed: %w\", err)\n\t}\n\n\tinspectExec, err := r.pool.Client.InspectExec(exec.ID)\n\tif err != nil {\n\t\treturn -1, fmt.Errorf(\"Inspect exec failed: %w\", err)\n\t}\n\n\treturn inspectExec.ExitCode, nil\n}\n\n// GetIPInNetwork returns container IP address in network.\nfunc (r *Resource) GetIPInNetwork(network *Network) string {\n\tif r.Container == nil || r.Container.NetworkSettings == nil {\n\t\treturn \"\"\n\t}\n\n\tnetCfg, ok := r.Container.NetworkSettings.Networks[network.Network.Name]\n\tif !ok {\n\t\treturn \"\"\n\t}\n\n\treturn netCfg.IPAddress\n}\n\n// ConnectToNetwork connects container to network.\nfunc (r *Resource) ConnectToNetwork(network *Network) error {\n\terr := r.pool.Client.ConnectNetwork(\n\t\tnetwork.Network.ID,\n\t\tdc.NetworkConnectionOptions{Container: r.Container.ID},\n\t)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to connect container to network: %w\", err)\n\t}\n\n\t// refresh internal representation\n\tr.Container, err = r.pool.Client.InspectContainer(r.Container.ID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to refresh container information: %w\", err)\n\t}\n\n\tnetwork.Network, err = r.pool.Client.NetworkInfo(network.Network.ID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to refresh network information: %w\", err)\n\t}\n\n\treturn nil\n}\n\n// DisconnectFromNetwork disconnects container from network.\nfunc (r *Resource) DisconnectFromNetwork(network *Network) error {\n\terr := r.pool.Client.DisconnectNetwork(\n\t\tnetwork.Network.ID,\n\t\tdc.NetworkConnectionOptions{Container: r.Container.ID},\n\t)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to connect container to network: %w\", err)\n\t}\n\n\t// refresh internal representation\n\tr.Container, err = r.pool.Client.InspectContainer(r.Container.ID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to refresh container information: %w\", err)\n\t}\n\n\tnetwork.Network, err = r.pool.Client.NetworkInfo(network.Network.ID)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Failed to refresh network information: %w\", err)\n\t}\n\n\treturn nil\n}\n\n// Close removes a container and linked volumes from docker by calling pool.Purge.\nfunc (r *Resource) Close() error {\n\treturn r.pool.Purge(r)\n}\n\n// Expire sets a resource's associated container to terminate after a period has passed\nfunc (r *Resource) Expire(seconds uint) error {\n\tgo func() {\n\t\tif err := r.pool.Client.StopContainer(r.Container.ID, seconds); err != nil {\n\t\t\t// Error handling?\n\t\t}\n\t}()\n\treturn nil\n}\n\n// NewTLSPool creates a new pool given an endpoint and the certificate path. This is required for endpoints that\n// require TLS communication.\nfunc NewTLSPool(endpoint, certpath string) (*Pool, error) {\n\tca := fmt.Sprintf(\"%s/ca.pem\", certpath)\n\tcert := fmt.Sprintf(\"%s/cert.pem\", certpath)\n\tkey := fmt.Sprintf(\"%s/key.pem\", certpath)\n\n\tclient, err := dc.NewTLSClient(endpoint, cert, key, ca)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &Pool{\n\t\tClient: client,\n\t}, nil\n}\n\n// NewPool creates a new pool. You can pass an empty string to use the default, which is taken from the environment\n// variable DOCKER_HOST and DOCKER_URL, or from docker-machine if the environment variable DOCKER_MACHINE_NAME is set,\n// or if neither is defined a sensible default for the operating system you are on.\n// TLS pools are automatically configured if the DOCKER_CERT_PATH environment variable exists.\nfunc NewPool(endpoint string) (*Pool, error) {\n\tif endpoint == \"\" {\n\t\tif os.Getenv(\"DOCKER_MACHINE_NAME\") != \"\" {\n\t\t\tclient, err := dc.NewClientFromEnv()\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"failed to create client from environment: %w\", err)\n\t\t\t}\n\n\t\t\treturn &Pool{Client: client}, nil\n\t\t}\n\t\tif os.Getenv(\"DOCKER_HOST\") != \"\" {\n\t\t\tendpoint = os.Getenv(\"DOCKER_HOST\")\n\t\t} else if os.Getenv(\"DOCKER_URL\") != \"\" {\n\t\t\tendpoint = os.Getenv(\"DOCKER_URL\")\n\t\t} else if runtime.GOOS == \"windows\" {\n\t\t\tif _, err := os.Stat(`\\\\.\\pipe\\docker_engine`); err == nil {\n\t\t\t\tendpoint = \"npipe:////./pipe/docker_engine\"\n\t\t\t} else {\n\t\t\t\tendpoint = \"http://localhost:2375\"\n\t\t\t}\n\t\t} else {\n\t\t\tendpoint = options.DefaultHost\n\t\t}\n\t}\n\n\tif os.Getenv(\"DOCKER_CERT_PATH\") != \"\" && shouldPreferTLS(endpoint) {\n\t\treturn NewTLSPool(endpoint, os.Getenv(\"DOCKER_CERT_PATH\"))\n\t}\n\n\tclient, err := dc.NewClient(endpoint)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &Pool{\n\t\tClient: client,\n\t}, nil\n}\n\nfunc shouldPreferTLS(endpoint string) bool {\n\treturn !strings.HasPrefix(endpoint, \"http://\") && !strings.HasPrefix(endpoint, \"unix://\")\n}\n\n// RunOptions is used to pass in optional parameters when running a container.\ntype RunOptions struct {\n\tHostname     string\n\tName         string\n\tRepository   string\n\tTag          string\n\tEnv          []string\n\tEntrypoint   []string\n\tCmd          []string\n\tMounts       []string\n\tLinks        []string\n\tExposedPorts []string\n\tExtraHosts   []string\n\tCapAdd       []string\n\tSecurityOpt  []string\n\tDNS          []string\n\tWorkingDir   string\n\tNetworkID    string\n\tNetworks     []*Network // optional networks to join\n\tLabels       map[string]string\n\tAuth         dc.AuthConfiguration\n\tPortBindings map[dc.Port][]dc.PortBinding\n\tPrivileged   bool\n\tUser         string\n\tTty          bool\n\tPlatform     string\n}\n\n// BuildOptions is used to pass in optional parameters when building a container\ntype BuildOptions struct {\n\tDockerfile string\n\tContextDir string\n\tBuildArgs  []dc.BuildArg\n\tPlatform   string\n\t// Version specifies the builder to use. \"1\" for classic, \"2\" for BuildKit\n\tVersion string\n\tAuth    dc.AuthConfigurations\n}\n\n// BuildAndRunWithBuildOptions builds and starts a docker container.\n// Optional modifier functions can be passed in order to change the hostconfig values not covered in RunOptions\nfunc (d *Pool) BuildAndRunWithBuildOptions(buildOpts *BuildOptions, runOpts *RunOptions, hcOpts ...func(*dc.HostConfig)) (*Resource, error) {\n\terr := d.Client.BuildImage(dc.BuildImageOptions{\n\t\tName:         runOpts.Name,\n\t\tDockerfile:   buildOpts.Dockerfile,\n\t\tOutputStream: io.Discard,\n\t\tContextDir:   buildOpts.ContextDir,\n\t\tBuildArgs:    buildOpts.BuildArgs,\n\t\tPlatform:     buildOpts.Platform,\n\t\tVersion:      buildOpts.Version,\n\t\tAuthConfigs:  buildOpts.Auth,\n\t})\n\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\trunOpts.Repository = runOpts.Name\n\n\treturn d.RunWithOptions(runOpts, hcOpts...)\n}\n\n// BuildAndRunWithOptions builds and starts a docker container.\n// Optional modifier functions can be passed in order to change the hostconfig values not covered in RunOptions\nfunc (d *Pool) BuildAndRunWithOptions(dockerfilePath string, opts *RunOptions, hcOpts ...func(*dc.HostConfig)) (*Resource, error) {\n\t// Set the Dockerfile folder as build context\n\tdir, file := filepath.Split(dockerfilePath)\n\tbuildOpts := BuildOptions{Dockerfile: file, ContextDir: dir}\n\treturn d.BuildAndRunWithBuildOptions(&buildOpts, opts, hcOpts...)\n}\n\n// BuildAndRun builds and starts a docker container\nfunc (d *Pool) BuildAndRun(name, dockerfilePath string, env []string) (*Resource, error) {\n\treturn d.BuildAndRunWithOptions(dockerfilePath, &RunOptions{Name: name, Env: env})\n}\n\n// RunWithOptions starts a docker container.\n// Optional modifier functions can be passed in order to change the hostconfig values not covered in RunOptions\n//\n//\t pool.RunWithOptions(&RunOptions{Repository: \"mongo\", Cmd: []string{\"mongod\", \"--smallfiles\"}})\n//\t pool.RunWithOptions(&RunOptions{Repository: \"mongo\", Cmd: []string{\"mongod\", \"--smallfiles\"}}, func(hostConfig *dc.HostConfig) {\n//\t\t\t\thostConfig.ShmSize = shmemsize\n//\t\t\t})\nfunc (d *Pool) RunWithOptions(opts *RunOptions, hcOpts ...func(*dc.HostConfig)) (*Resource, error) {\n\trepository := opts.Repository\n\ttag := opts.Tag\n\tenv := opts.Env\n\tcmd := opts.Cmd\n\tep := opts.Entrypoint\n\twd := opts.WorkingDir\n\tvar exp map[dc.Port]struct{}\n\n\tif len(opts.ExposedPorts) > 0 {\n\t\texp = map[dc.Port]struct{}{}\n\t\tfor _, p := range opts.ExposedPorts {\n\t\t\texp[dc.Port(p)] = struct{}{}\n\t\t}\n\t}\n\n\tmounts := []dc.Mount{}\n\n\tfor _, m := range opts.Mounts {\n\t\ts, d, err := options.MountParser(m)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tmounts = append(mounts, dc.Mount{\n\t\t\tSource:      s,\n\t\t\tDestination: d,\n\t\t\tRW:          true,\n\t\t})\n\t}\n\n\tif tag == \"\" {\n\t\ttag = \"latest\"\n\t}\n\n\tnetworkingConfig := dc.NetworkingConfig{\n\t\tEndpointsConfig: map[string]*dc.EndpointConfig{},\n\t}\n\tif opts.NetworkID != \"\" {\n\t\tnetworkingConfig.EndpointsConfig[opts.NetworkID] = &dc.EndpointConfig{}\n\t}\n\tfor _, network := range opts.Networks {\n\t\tnetworkingConfig.EndpointsConfig[network.Network.ID] = &dc.EndpointConfig{}\n\t}\n\n\t_, err := d.Client.InspectImage(fmt.Sprintf(\"%s:%s\", repository, tag))\n\tif err != nil {\n\t\tvar (\n\t\t\tauth  = opts.Auth\n\t\t\tparts = strings.SplitN(repository, \"/\", 3)\n\t\t\tempty = opts.Auth == dc.AuthConfiguration{}\n\t\t)\n\t\tif empty && len(parts) == 3 {\n\t\t\tres, err := dc.NewAuthConfigurationsFromCredsHelpers(parts[0])\n\t\t\tif err == nil {\n\t\t\t\tauth = *res\n\t\t\t}\n\t\t}\n\n\t\tif err := d.Client.PullImage(dc.PullImageOptions{\n\t\t\tRepository: repository,\n\t\t\tTag:        tag,\n\t\t\tPlatform:   opts.Platform,\n\t\t}, auth); err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\thostConfig := dc.HostConfig{\n\t\tPublishAllPorts: true,\n\t\tBinds:           opts.Mounts,\n\t\tLinks:           opts.Links,\n\t\tPortBindings:    opts.PortBindings,\n\t\tExtraHosts:      opts.ExtraHosts,\n\t\tCapAdd:          opts.CapAdd,\n\t\tSecurityOpt:     opts.SecurityOpt,\n\t\tPrivileged:      opts.Privileged,\n\t\tDNS:             opts.DNS,\n\t}\n\n\tfor _, hostConfigOption := range hcOpts {\n\t\thostConfigOption(&hostConfig)\n\t}\n\n\tc, err := d.Client.CreateContainer(dc.CreateContainerOptions{\n\t\tName: opts.Name,\n\t\tConfig: &dc.Config{\n\t\t\tHostname:     opts.Hostname,\n\t\t\tImage:        fmt.Sprintf(\"%s:%s\", repository, tag),\n\t\t\tEnv:          env,\n\t\t\tEntrypoint:   ep,\n\t\t\tCmd:          cmd,\n\t\t\tMounts:       mounts,\n\t\t\tExposedPorts: exp,\n\t\t\tWorkingDir:   wd,\n\t\t\tLabels:       opts.Labels,\n\t\t\tStopSignal:   \"SIGWINCH\", // to support timeouts\n\t\t\tUser:         opts.User,\n\t\t\tTty:          opts.Tty,\n\t\t},\n\t\tHostConfig:       &hostConfig,\n\t\tNetworkingConfig: &networkingConfig,\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif err := d.Client.StartContainer(c.ID, nil); err != nil {\n\t\treturn nil, err\n\t}\n\n\tc, err = d.inspectContainerWithRetries(c.ID)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tfor _, network := range opts.Networks {\n\t\tnetwork.Network, err = d.Client.NetworkInfo(network.Network.ID)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\treturn &Resource{\n\t\tpool:      d,\n\t\tContainer: c,\n\t}, nil\n}\n\n// inspectContainerWithRetries will repeat the inspect call until the container has port bindings assigned.\nfunc (d *Pool) inspectContainerWithRetries(id string) (*dc.Container, error) {\n\tconst maxRetries = 10\n\tvar (\n\t\tretryNum int\n\t\tc        *dc.Container\n\t\terr      error\n\t)\n\tfor retryNum <= maxRetries {\n\t\tif retryNum > 0 {\n\t\t\ttime.Sleep(100 * time.Millisecond)\n\t\t}\n\t\tc, err = d.Client.InspectContainer(id)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tif hasEmptyPortBindings := func() bool {\n\t\t\tfor _, bindings := range c.NetworkSettings.Ports {\n\t\t\t\tif len(bindings) == 0 {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}(); !hasEmptyPortBindings {\n\t\t\treturn c, nil\n\t\t}\n\t\tretryNum++\n\t}\n\treturn c, err\n}\n\n// Run starts a docker container.\n//\n//\tpool.Run(\"mysql\", \"5.3\", []string{\"FOO=BAR\", \"BAR=BAZ\"})\nfunc (d *Pool) Run(repository, tag string, env []string) (*Resource, error) {\n\treturn d.RunWithOptions(&RunOptions{Repository: repository, Tag: tag, Env: env})\n}\n\n// ContainerByName finds a container with the given name and returns it if present\nfunc (d *Pool) ContainerByName(containerName string) (*Resource, bool) {\n\tcontainers, err := d.Client.ListContainers(dc.ListContainersOptions{\n\t\tAll: true,\n\t\tFilters: map[string][]string{\n\t\t\t\"name\": {containerName},\n\t\t},\n\t})\n\n\tif err != nil {\n\t\treturn nil, false\n\t}\n\n\tif len(containers) == 0 {\n\t\treturn nil, false\n\t}\n\n\tc, err := d.Client.InspectContainer(containers[0].ID)\n\tif err != nil {\n\t\treturn nil, false\n\t}\n\n\treturn &Resource{\n\t\tpool:      d,\n\t\tContainer: c,\n\t}, true\n}\n\n// RemoveContainerByName find a container with the given name and removes it if present\nfunc (d *Pool) RemoveContainerByName(containerName string) error {\n\tcontainers, err := d.Client.ListContainers(dc.ListContainersOptions{\n\t\tAll: true,\n\t\tFilters: map[string][]string{\n\t\t\t\"name\": {containerName},\n\t\t},\n\t})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Error while listing containers with name %s: %w\", containerName, err)\n\t}\n\n\tif len(containers) == 0 {\n\t\treturn nil\n\t}\n\n\terr = d.Client.RemoveContainer(dc.RemoveContainerOptions{\n\t\tID:            containers[0].ID,\n\t\tForce:         true,\n\t\tRemoveVolumes: true,\n\t})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Error while removing container with name %s: %w\", containerName, err)\n\t}\n\n\treturn nil\n}\n\n// Purge removes a container and linked volumes from docker.\nfunc (d *Pool) Purge(r *Resource) error {\n\tif err := d.Client.RemoveContainer(dc.RemoveContainerOptions{ID: r.Container.ID, Force: true, RemoveVolumes: true}); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// Retry is an exponential backoff retry helper. You can use it to wait for e.g. mysql to boot up.\nfunc (d *Pool) Retry(op func() error) error {\n\tif d.MaxWait == 0 {\n\t\td.MaxWait = time.Minute\n\t}\n\tbo := backoff.NewExponentialBackOff()\n\tbo.MaxInterval = time.Second * 5\n\tbo.MaxElapsedTime = d.MaxWait\n\tif err := backoff.Retry(op, bo); err != nil {\n\t\tif bo.NextBackOff() == backoff.Stop {\n\t\t\treturn fmt.Errorf(\"reached retry deadline: %w\", err)\n\t\t}\n\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// CurrentContainer returns current container descriptor if this function called within running container.\n// It returns ErrNotInContainer as error if this function running not in container.\nfunc (d *Pool) CurrentContainer() (*Resource, error) {\n\t// docker daemon puts short container id into hostname\n\thostname, err := os.Hostname()\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"Get hostname failed: %w\", err)\n\t}\n\n\tcontainer, err := d.Client.InspectContainer(hostname)\n\tswitch err.(type) {\n\tcase nil:\n\t\treturn &Resource{\n\t\t\tpool:      d,\n\t\t\tContainer: container,\n\t\t}, nil\n\tcase *dc.NoSuchContainer:\n\t\treturn nil, ErrNotInContainer\n\tdefault:\n\t\treturn nil, err\n\t}\n}\n\n// CreateNetwork creates docker network. It's useful for linking multiple containers.\nfunc (d *Pool) CreateNetwork(name string, opts ...func(config *dc.CreateNetworkOptions)) (*Network, error) {\n\tvar cfg dc.CreateNetworkOptions\n\tcfg.Name = name\n\tfor _, opt := range opts {\n\t\topt(&cfg)\n\t}\n\n\tnetwork, err := d.Client.CreateNetwork(cfg)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &Network{\n\t\tpool:    d,\n\t\tNetwork: network,\n\t}, nil\n}\n\n// NetworksByName returns a list of docker networks filtered by name\nfunc (d *Pool) NetworksByName(name string) ([]Network, error) {\n\tnetworks, err := d.Client.ListNetworks()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar foundNetworks []Network\n\tfor idx := range networks {\n\t\tif networks[idx].Name == name {\n\t\t\tfoundNetworks = append(foundNetworks,\n\t\t\t\tNetwork{\n\t\t\t\t\tpool:    d,\n\t\t\t\t\tNetwork: &networks[idx],\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n\n\treturn foundNetworks, nil\n}\n\n// RemoveNetwork disconnects containers and removes provided network.\nfunc (d *Pool) RemoveNetwork(network *Network) error {\n\tfor container := range network.Network.Containers {\n\t\t_ = d.Client.DisconnectNetwork(\n\t\t\tnetwork.Network.ID,\n\t\t\tdc.NetworkConnectionOptions{Container: container, Force: true},\n\t\t)\n\t}\n\n\treturn d.Client.RemoveNetwork(network.Network.ID)\n}\n"
        },
        {
          "name": "dockertest_test.go",
          "type": "blob",
          "size": 13.3212890625,
          "content": "// Copyright © 2024 Ory Corp\n// SPDX-License-Identifier: Apache-2.0\n\npackage dockertest_test\n\nimport (\n\t\"bytes\"\n\t\"database/sql\"\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t_ \"github.com/go-sql-driver/mysql\"\n\t_ \"github.com/lib/pq\"\n\t\"github.com/ory/dockertest/v3\"\n\tdc \"github.com/ory/dockertest/v3/docker\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nvar (\n\tdocker = os.Getenv(\"DOCKER_URL\")\n\tpool   *dockertest.Pool\n)\n\nfunc TestMain(m *testing.M) {\n\tvar err error\n\tpool, err = dockertest.NewPool(docker)\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not construct pool: %s\", err)\n\t}\n\terr = pool.Client.Ping()\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not connect to Docker: %s\", err)\n\t}\n\tos.Exit(m.Run())\n}\n\nfunc TestPostgres(t *testing.T) {\n\tresource, err := pool.Run(\"postgres\", \"9.5\", []string{\"POSTGRES_PASSWORD=secret\"})\n\trequire.NoError(t, err)\n\tassert.NotEmpty(t, resource.GetPort(\"5432/tcp\"))\n\n\tassert.NotEmpty(t, resource.GetBoundIP(\"5432/tcp\"))\n\n\terr = pool.Retry(func() error {\n\t\tdb, err := sql.Open(\"postgres\", fmt.Sprintf(\"postgres://postgres:secret@localhost:%s/postgres?sslmode=disable\", resource.GetPort(\"5432/tcp\")))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.Ping()\n\t})\n\trequire.NoError(t, err)\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestMongo(t *testing.T) {\n\toptions := &dockertest.RunOptions{\n\t\tRepository: \"mongo\",\n\t\tTag:        \"3.3.12\",\n\t\tCmd:        []string{\"mongod\", \"--smallfiles\", \"--port\", \"3000\"},\n\t\t// expose a different port\n\t\tExposedPorts: []string{\"3000\"},\n\t}\n\tresource, err := pool.RunWithOptions(options)\n\trequire.NoError(t, err)\n\tport := resource.GetPort(\"3000/tcp\")\n\tassert.NotEmpty(t, port)\n\n\terr = pool.Retry(func() error {\n\t\tresponse, err := http.Get(fmt.Sprintf(\"http://127.0.0.1:%s\", port))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer response.Body.Close()\n\n\t\tif response.StatusCode != http.StatusOK {\n\t\t\treturn fmt.Errorf(\"could not connect to resource\")\n\t\t}\n\n\t\treturn nil\n\t})\n\trequire.NoError(t, err)\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestMysqlWithPlatform(t *testing.T) {\n\tresource, err := pool.RunWithOptions(&dockertest.RunOptions{\n\t\tRepository: \"mysql\",\n\t\tTag:        \"8.0\",\n\t\tEnv:        []string{\"MYSQL_ROOT_PASSWORD=secret\"},\n\t\tPlatform:   \"\", // Platform in the format os[/arch[/variant]] (e.g. linux/amd64). Default: \"\"\n\t})\n\trequire.NoError(t, err)\n\tassert.NotEmpty(t, resource.GetPort(\"3306/tcp\"))\n\n\terr = pool.Retry(func() error {\n\t\tvar err error\n\t\tdb, err := sql.Open(\"mysql\", fmt.Sprintf(\"root:secret@(localhost:%s)/mysql\", resource.GetPort(\"3306/tcp\")))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.Ping()\n\t})\n\trequire.NoError(t, err)\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithName(t *testing.T) {\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t})\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"/db\", resource.Container.Name)\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithLabels(t *testing.T) {\n\tlabels := map[string]string{\n\t\t\"my\": \"label\",\n\t}\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tLabels:     labels,\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t})\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, labels, resource.Container.Config.Labels, \"labels don't match\")\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithUser(t *testing.T) {\n\tuser := \"1001:1001\"\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tUser:       user,\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t})\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, user, resource.Container.Config.User, \"users don't match\")\n\n\tres, err := pool.Client.InspectContainer(resource.Container.ID)\n\trequire.NoError(t, err)\n\tassert.Equal(t, user, res.Config.User)\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithTty(t *testing.T) {\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t\tTty:        true,\n\t\t})\n\trequire.NoError(t, err)\n\tassert.True(t, resource.Container.Config.Tty, \"tty is false\")\n\n\tres, err := pool.Client.InspectContainer(resource.Container.ID)\n\trequire.NoError(t, err)\n\tassert.True(t, res.Config.Tty)\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithPortBinding(t *testing.T) {\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tPortBindings: map[dc.Port][]dc.PortBinding{\n\t\t\t\t\"5432/tcp\": {{HostIP: \"\", HostPort: \"5433\"}},\n\t\t\t},\n\t\t\tEnv: []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t})\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"5433\", resource.GetPort(\"5432/tcp\"))\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestBuildImage(t *testing.T) {\n\t// Create Dockerfile in temp dir\n\tdir := t.TempDir()\n\n\tdockerfilePath := dir + \"/Dockerfile\"\n\trequire.NoError(t, os.WriteFile(dockerfilePath,\n\t\t[]byte(\"FROM postgres:9.5\"),\n\t\t0o644,\n\t))\n\n\tresource, err := pool.BuildAndRun(\"postgres-test\", dockerfilePath, nil)\n\trequire.NoError(t, err)\n\n\tassert.Equal(t, \"/postgres-test\", resource.Container.Name)\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestBuildImageWithBuildArg(t *testing.T) {\n\t// Create Dockerfile in temp dir\n\tdir := t.TempDir()\n\n\tdockerfilePath := dir + \"/Dockerfile\"\n\trequire.NoError(t, os.WriteFile(dockerfilePath,\n\t\t[]byte((`FROM busybox\nARG foo\nRUN echo -n $foo > /build-time-value\nCMD sleep 10\n`)),\n\t\t0o644,\n\t))\n\n\tresource, err := pool.BuildAndRunWithBuildOptions(\n\t\t&dockertest.BuildOptions{\n\t\t\tContextDir: dir,\n\t\t\tDockerfile: \"Dockerfile\",\n\t\t\tBuildArgs: []dc.BuildArg{\n\t\t\t\t{Name: \"foo\", Value: \"bar\"},\n\t\t\t},\n\t\t},\n\t\t&dockertest.RunOptions{\n\t\t\tName: \"buildarg-test\",\n\t\t}, func(hc *dc.HostConfig) {\n\t\t\thc.AutoRemove = true\n\t\t})\n\trequire.NoError(t, err)\n\n\tvar stdout bytes.Buffer\n\texitCode, err := resource.Exec(\n\t\t[]string{\"cat\", \"/build-time-value\"},\n\t\tdockertest.ExecOptions{StdOut: &stdout},\n\t)\n\trequire.NoError(t, err)\n\trequire.Zero(t, exitCode)\n\trequire.Equal(t, \"bar\", stdout.String())\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestExpire(t *testing.T) {\n\tresource, err := pool.Run(\"postgres\", \"9.5\", []string{\"POSTGRES_PASSWORD=secret\"})\n\trequire.NoError(t, err)\n\tassert.NotEmpty(t, resource.GetPort(\"5432/tcp\"))\n\n\tassert.NotEmpty(t, resource.GetBoundIP(\"5432/tcp\"))\n\n\terr = pool.Retry(func() error {\n\t\tdb, err := sql.Open(\"postgres\", fmt.Sprintf(\"postgres://postgres:secret@localhost:%s/postgres?sslmode=disable\", resource.GetPort(\"5432/tcp\")))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\terr = db.Ping()\n\t\tif err != nil {\n\t\t\treturn nil\n\t\t}\n\t\terr = resource.Expire(1)\n\t\trequire.NoError(t, err)\n\t\ttime.Sleep(5 * time.Second)\n\t\terr = db.Ping()\n\t\trequire.Error(t, err)\n\t\treturn nil\n\t})\n\trequire.NoError(t, err)\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerWithShMzSize(t *testing.T) {\n\tshmemsize := int64(1024 * 1024)\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t}, func(hostConfig *dc.HostConfig) {\n\t\t\thostConfig.ShmSize = shmemsize\n\t\t})\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, shmemsize, resource.Container.HostConfig.ShmSize, \"shmsize don't match\")\n\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestContainerByName(t *testing.T) {\n\tgot, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t})\n\trequire.NoError(t, err)\n\n\twant, ok := pool.ContainerByName(\"db\")\n\trequire.True(t, ok)\n\n\trequire.Equal(t, want, got)\n\n\trequire.NoError(t, pool.Purge(got))\n}\n\nfunc TestRemoveContainerByName(t *testing.T) {\n\t_, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t})\n\trequire.NoError(t, err)\n\n\terr = pool.RemoveContainerByName(\"db\")\n\trequire.NoError(t, err)\n\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tName:       \"db\",\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t})\n\trequire.NoError(t, err)\n\trequire.NoError(t, pool.Purge(resource))\n}\n\nfunc TestExec(t *testing.T) {\n\tresource, err := pool.Run(\"postgres\", \"9.5\", []string{\"POSTGRES_PASSWORD=secret\"})\n\trequire.NoError(t, err)\n\tassert.NotEmpty(t, resource.GetPort(\"5432/tcp\"))\n\tassert.NotEmpty(t, resource.GetBoundIP(\"5432/tcp\"))\n\n\tdefer resource.Close()\n\n\tvar pgVersion string\n\terr = pool.Retry(func() error {\n\t\tdb, err := sql.Open(\"postgres\", fmt.Sprintf(\"postgres://postgres:secret@localhost:%s/postgres?sslmode=disable\", resource.GetPort(\"5432/tcp\")))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.QueryRow(\"SHOW server_version\").Scan(&pgVersion)\n\t})\n\trequire.NoError(t, err)\n\n\tvar stdout bytes.Buffer\n\texitCode, err := resource.Exec(\n\t\t[]string{\"psql\", \"-qtAX\", \"-U\", \"postgres\", \"-c\", \"SHOW server_version\"},\n\t\tdockertest.ExecOptions{StdOut: &stdout},\n\t)\n\trequire.NoError(t, err)\n\trequire.Zero(t, exitCode)\n\n\trequire.Equal(t, pgVersion, strings.TrimRight(stdout.String(), \"\\n\"))\n}\n\nfunc TestNetworking_on_start(t *testing.T) {\n\tnetwork, err := pool.CreateNetwork(\"test-on-start\")\n\trequire.NoError(t, err)\n\tdefer network.Close()\n\n\tresourceFirst, err := pool.RunWithOptions(&dockertest.RunOptions{\n\t\tRepository: \"postgres\",\n\t\tTag:        \"9.5\",\n\t\tNetworks:   []*dockertest.Network{network},\n\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t})\n\trequire.NoError(t, err)\n\tdefer resourceFirst.Close()\n\n\tresourceSecond, err := pool.RunWithOptions(&dockertest.RunOptions{\n\t\tRepository: \"postgres\",\n\t\tTag:        \"11\",\n\t\tNetworks:   []*dockertest.Network{network},\n\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t})\n\trequire.NoError(t, err)\n\tdefer resourceSecond.Close()\n\n\tvar expectedVersion string\n\terr = pool.Retry(func() error {\n\t\tdb, err := sql.Open(\n\t\t\t\"postgres\",\n\t\t\tfmt.Sprintf(\n\t\t\t\t\"postgres://postgres:secret@localhost:%s/postgres?sslmode=disable\",\n\t\t\t\tresourceSecond.GetPort(\"5432/tcp\"),\n\t\t\t),\n\t\t)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.QueryRow(\"SHOW server_version\").Scan(&expectedVersion)\n\t})\n\trequire.NoError(t, err)\n}\n\nfunc TestNetworking_after_start(t *testing.T) {\n\tnetwork, err := pool.CreateNetwork(\"test-after-start\")\n\trequire.NoError(t, err)\n\tdefer network.Close()\n\n\tresourceFirst, err := pool.Run(\"postgres\", \"9.6\", []string{\"POSTGRES_PASSWORD=secret\"})\n\trequire.NoError(t, err)\n\tdefer resourceFirst.Close()\n\n\terr = resourceFirst.ConnectToNetwork(network)\n\trequire.NoError(t, err)\n\n\tresourceSecond, err := pool.Run(\"postgres\", \"11\", []string{\"POSTGRES_PASSWORD=secret\"})\n\trequire.NoError(t, err)\n\tdefer resourceSecond.Close()\n\n\terr = resourceSecond.ConnectToNetwork(network)\n\trequire.NoError(t, err)\n\n\tvar expectedVersion string\n\terr = pool.Retry(func() error {\n\t\tdb, err := sql.Open(\n\t\t\t\"postgres\",\n\t\t\tfmt.Sprintf(\n\t\t\t\t\"postgres://postgres:secret@localhost:%s/postgres?sslmode=disable\",\n\t\t\t\tresourceSecond.GetPort(\"5432/tcp\"),\n\t\t\t),\n\t\t)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn db.QueryRow(\"SHOW server_version\").Scan(&expectedVersion)\n\t})\n\trequire.NoError(t, err)\n\n\tvar stdout bytes.Buffer\n\texitCode, err := resourceFirst.Exec(\n\t\t[]string{\"psql\", \"-qtAX\", \"-h\", resourceSecond.GetIPInNetwork(network), \"-U\", \"postgres\", \"-c\", \"SHOW server_version\"},\n\t\tdockertest.ExecOptions{StdOut: &stdout, Env: []string{\"PGPASSWORD=secret\"}},\n\t)\n\trequire.NoError(t, err)\n\trequire.Zero(t, exitCode)\n\n\trequire.Equal(t, expectedVersion, strings.TrimRight(stdout.String(), \"\\n\"))\n}\n\nfunc TestClientRaceCondition(t *testing.T) {\n\t// Shadow pool so that we can have a fresh client with nil pool.Client.serverAPIVersion\n\tpool, err := dockertest.NewPool(docker)\n\trequire.NoError(t, err)\n\n\tfor i := 0; i < 10; i++ {\n\t\tt.Run(strconv.Itoa(i), func(t *testing.T) {\n\t\t\t// Tests must be run in parallel to recreate the issue\n\t\t\tt.Parallel()\n\t\t\tresource, _ := pool.RunWithOptions(\n\t\t\t\t&dockertest.RunOptions{\n\t\t\t\t\tRepository: \"postgres\",\n\t\t\t\t\tTag:        \"13.4\",\n\t\t\t\t},\n\t\t\t)\n\t\t\tdefer pool.Purge(resource)\n\t\t})\n\t}\n}\n\nfunc TestExecStatus(t *testing.T) {\n\tresource, err := pool.RunWithOptions(&dockertest.RunOptions{\n\t\tRepository: \"alpine\",\n\t\tTag:        \"3.16\",\n\t\tCmd:        []string{\"tail\", \"-f\", \"/dev/null\"},\n\t})\n\trequire.NoError(t, err)\n\tdefer resource.Close()\n\texitCode, err := resource.Exec([]string{\"/bin/false\"}, dockertest.ExecOptions{})\n\trequire.NoError(t, err)\n\trequire.Equal(t, 1, exitCode)\n\texitCode, err = resource.Exec([]string{\"/bin/sh\", \"-c\", \"/bin/sleep 2 && exit 42\"}, dockertest.ExecOptions{})\n\trequire.NoError(t, err)\n\trequire.Equal(t, 42, exitCode)\n}\n\nfunc TestOutboundIPPortBinding(t *testing.T) {\n\toutboundIP := func() string {\n\t\tconn, err := net.Dial(\"udp\", \"8.8.8.8:80\")\n\t\trequire.NoError(t, err)\n\t\tdefer conn.Close()\n\t\tlocalAddr := conn.LocalAddr().(*net.UDPAddr)\n\t\treturn localAddr.IP.String()\n\t}()\n\tresource, err := pool.RunWithOptions(\n\t\t&dockertest.RunOptions{\n\t\t\tRepository: \"postgres\",\n\t\t\tTag:        \"9.5\",\n\t\t\tEnv:        []string{\"POSTGRES_PASSWORD=secret\"},\n\t\t\tPortBindings: map[dc.Port][]dc.PortBinding{\n\t\t\t\t\"5432/tcp\": {{HostIP: outboundIP, HostPort: \"0\"}},\n\t\t\t},\n\t\t})\n\trequire.NoError(t, err)\n\tmappedPort := resource.GetPort(\"5432/tcp\")\n\trequire.NotEmpty(t, mappedPort)\n\tboundIP := resource.GetBoundIP(\"5432/tcp\")\n\trequire.Equal(t, outboundIP, boundIP)\n\trequire.NoError(t, pool.Purge(resource))\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.6728515625,
          "content": "module github.com/ory/dockertest/v3\n\ngo 1.22\n\nrequire (\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5\n\tgithub.com/cenkalti/backoff/v4 v4.3.0\n\tgithub.com/containerd/continuity v0.4.5\n\tgithub.com/docker/cli v27.4.1+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/go-sql-driver/mysql v1.8.1\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/moby/term v0.5.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/opencontainers/runc v1.2.3\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.10.0\n\tgolang.org/x/sys v0.28.0\n)\n\nrequire (\n\tdario.cat/mergo v1.0.0 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/docker/docker v27.1.1+incompatible // indirect\n)\n\nrequire (\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/go-viper/mapstructure/v2 v2.1.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/moby/sys/user v0.3.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgithub.com/xeipuuv/gojsonschema v1.2.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tgotest.tools/v3 v3.5.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 10.1943359375,
          "content": "dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 h1:TngWCqHvy9oXAN6lEVMRuU21PR1EtLVZJmdB18Gu3Rw=\ngithub.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=\ngithub.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=\ngithub.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=\ngithub.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/docker/cli v27.4.1+incompatible h1:VzPiUlRJ/xh+otB75gva3r05isHMo5wXDfPRi5/b4hI=\ngithub.com/docker/cli v27.4.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/docker v27.1.1+incompatible h1:hO/M4MtV36kzKldqnA37IWhebRA+LnqqcqDja6kVaKY=\ngithub.com/docker/docker v27.1.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/go-viper/mapstructure/v2 v2.1.0 h1:gHnMa2Y/pIxElCH2GlZZ1lZSsn6XMtufpGyP1XxdC/w=\ngithub.com/go-viper/mapstructure/v2 v2.1.0/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runc v1.2.3 h1:fxE7amCzfZflJO2lHXf4y/y8M1BoAqp+FVmG19oYB80=\ngithub.com/opencontainers/runc v1.2.3/go.mod h1:nSxcWUydXrsBZVYNSkTjoQ/N6rcyTtn+1SD5D4+kRIM=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 41.4833984375,
          "content": "{\n  \"name\": \"dockertest\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"devDependencies\": {\n        \"license-checker\": \"^25.0.1\",\n        \"ory-prettier-styles\": \"1.3.0\",\n        \"prettier\": \"2.7.1\"\n      }\n    },\n    \"node_modules/abbrev\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\",\n      \"dev\": true\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^1.9.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/array-find-index\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz\",\n      \"integrity\": \"sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/asap\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/asap/-/asap-2.0.6.tgz\",\n      \"integrity\": \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\",\n      \"dev\": true\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"node_modules/debuglog\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz\",\n      \"integrity\": \"sha512-syBZ+rnAK3EgMsH2aYEOLUW7mZSY9Gb+0wUMCFsZvcmiz+HigA0LOcq/HoQqVuGG+EKykunc7QG2bzrponfaSw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/dezalgo\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.4.tgz\",\n      \"integrity\": \"sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"asap\": \"^2.0.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.0\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\",\n      \"dev\": true\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz\",\n      \"integrity\": \"sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==\",\n      \"dev\": true\n    },\n    \"node_modules/has\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/hosted-git-info\": {\n      \"version\": \"2.8.9\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n      \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n      \"dev\": true\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz\",\n      \"integrity\": \"sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has\": \"^1.0.3\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"node_modules/license-checker\": {\n      \"version\": \"25.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/license-checker/-/license-checker-25.0.1.tgz\",\n      \"integrity\": \"sha512-mET5AIwl7MR2IAKYYoVBBpV0OnkKQ1xGj2IMMeEFIs42QAkEVjRtFZGWmQ28WeU7MP779iAgOaOy93Mn44mn6g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^2.4.1\",\n        \"debug\": \"^3.1.0\",\n        \"mkdirp\": \"^0.5.1\",\n        \"nopt\": \"^4.0.1\",\n        \"read-installed\": \"~4.0.3\",\n        \"semver\": \"^5.5.0\",\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-satisfies\": \"^4.0.0\",\n        \"treeify\": \"^1.1.0\"\n      },\n      \"bin\": {\n        \"license-checker\": \"bin/license-checker\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.7.tgz\",\n      \"integrity\": \"sha512-bzfL1YUZsP41gmu/qjrEk0Q6i2ix/cVeAhbCbqH9u3zYutS1cLg00qhrD0M2MVdCcx4Sc0UpP2eBWo9rotpq6g==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"minimist\": \"^1.2.6\"\n      },\n      \"bin\": {\n        \"mkdirp\": \"bin/cmd.js\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/nopt\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz\",\n      \"integrity\": \"sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"abbrev\": \"1\",\n        \"osenv\": \"^0.1.4\"\n      },\n      \"bin\": {\n        \"nopt\": \"bin/nopt.js\"\n      }\n    },\n    \"node_modules/normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n      \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"node_modules/npm-normalize-package-bin\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz\",\n      \"integrity\": \"sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==\",\n      \"dev\": true\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/ory-prettier-styles\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ory-prettier-styles/-/ory-prettier-styles-1.3.0.tgz\",\n      \"integrity\": \"sha512-Vfn0G6CyLaadwcCamwe1SQCf37ZQfBDgMrhRI70dE/2fbE3Q43/xu7K5c32I5FGt/EliroWty5yBjmdkj0eWug==\",\n      \"dev\": true\n    },\n    \"node_modules/os-homedir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n      \"integrity\": \"sha512-B5JU3cabzk8c67mRRd3ECmROafjYMXbuzlwtqdM8IbS8ktlTix8aFGb2bAGKrSRIlnfKwovGUUr72JUPyOb6kQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/osenv\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz\",\n      \"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"os-homedir\": \"^1.0.0\",\n        \"os-tmpdir\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/prettier\": {\n      \"version\": \"2.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.7.1.tgz\",\n      \"integrity\": \"sha512-ujppO+MkdPqoVINuDFDRLClm7D78qbDt0/NR+wp5FqEZOoTNAjPHWj17QRhu7geIHJfcNhRk1XVQmF8Bp3ye+g==\",\n      \"dev\": true,\n      \"bin\": {\n        \"prettier\": \"bin-prettier.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n      }\n    },\n    \"node_modules/read-installed\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/read-installed/-/read-installed-4.0.3.tgz\",\n      \"integrity\": \"sha512-O03wg/IYuV/VtnK2h/KXEt9VIbMUFbk3ERG0Iu4FhLZw0EP0T9znqrYDGn6ncbEsXUFaUjiVAWXHzxwt3lhRPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debuglog\": \"^1.0.1\",\n        \"read-package-json\": \"^2.0.0\",\n        \"readdir-scoped-modules\": \"^1.0.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"slide\": \"~1.1.3\",\n        \"util-extend\": \"^1.0.1\"\n      },\n      \"optionalDependencies\": {\n        \"graceful-fs\": \"^4.1.2\"\n      }\n    },\n    \"node_modules/read-package-json\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.2.tgz\",\n      \"integrity\": \"sha512-D1KmuLQr6ZSJS0tW8hf3WGpRlwszJOXZ3E8Yd/DNRaM5d+1wVRZdHlpGBLAuovjr28LbWvjpWkBHMxpRGGjzNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"glob\": \"^7.1.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"normalize-package-data\": \"^2.0.0\",\n        \"npm-normalize-package-bin\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/readdir-scoped-modules\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdir-scoped-modules/-/readdir-scoped-modules-1.1.0.tgz\",\n      \"integrity\": \"sha512-asaikDeqAQg7JifRsZn1NJZXo9E+VwlyCfbkZhwyISinqk5zNS6266HS5kah6P0SaQKGF6SkNnZVHUzHFYxYDw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debuglog\": \"^1.0.1\",\n        \"dezalgo\": \"^1.0.0\",\n        \"graceful-fs\": \"^4.1.2\",\n        \"once\": \"^1.3.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.1\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz\",\n      \"integrity\": \"sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.9.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.1.tgz\",\n      \"integrity\": \"sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver\"\n      }\n    },\n    \"node_modules/slide\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/slide/-/slide-1.1.6.tgz\",\n      \"integrity\": \"sha512-NwrtjCg+lZoqhFU8fOwl4ay2ei8PaqCBOUV3/ektPY9trO1yQ1oXEfmHAhKArUVUr/hOHvy5f6AdP17dCM0zMw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/spdx-compare\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-compare/-/spdx-compare-1.0.0.tgz\",\n      \"integrity\": \"sha512-C1mDZOX0hnu0ep9dfmuoi03+eOdDoz2yvK79RxbcrVEG1NO1Ph35yW102DHWKN4pk80nwCgeMmSY5L25VE4D9A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-find-index\": \"^1.0.2\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/spdx-correct\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz\",\n      \"integrity\": \"sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-exceptions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz\",\n      \"integrity\": \"sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz\",\n      \"integrity\": \"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/spdx-license-ids\": {\n      \"version\": \"3.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.12.tgz\",\n      \"integrity\": \"sha512-rr+VVSXtRhO4OHbXUiAF7xW3Bo9DuuF6C5jH+q/x15j2jniycgKbxU09Hr0WqlSLUs4i4ltHGXqTe7VHclYWyA==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-ranges\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-ranges/-/spdx-ranges-2.1.1.tgz\",\n      \"integrity\": \"sha512-mcdpQFV7UDAgLpXEE/jOMqvK4LBoO0uTQg0uvXUewmEFhpiZx5yJSZITHB8w1ZahKdhfZqP5GPEOKLyEq5p8XA==\",\n      \"dev\": true\n    },\n    \"node_modules/spdx-satisfies\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-satisfies/-/spdx-satisfies-4.0.1.tgz\",\n      \"integrity\": \"sha512-WVzZ/cXAzoNmjCWiEluEA3BjHp5tiUmmhn9MK+X0tBbR9sOqtC6UQwmgCNrAIZvNlMuBUYAaHYfb2oqlF9SwKA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-compare\": \"^1.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/treeify\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz\",\n      \"integrity\": \"sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/util-extend\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/util-extend/-/util-extend-1.0.3.tgz\",\n      \"integrity\": \"sha512-mLs5zAK+ctllYBj+iAQvlDCwoxU/WDOUaJkcFudeiAX6OajC6BKXJUa9a+tbtkC11dz2Ufb7h0lyvIOVn4LADA==\",\n      \"dev\": true\n    },\n    \"node_modules/validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    }\n  },\n  \"dependencies\": {\n    \"abbrev\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"3.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^1.9.0\"\n      }\n    },\n    \"array-find-index\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz\",\n      \"integrity\": \"sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==\",\n      \"dev\": true\n    },\n    \"asap\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/asap/-/asap-2.0.6.tgz\",\n      \"integrity\": \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\",\n      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^3.2.1\",\n        \"escape-string-regexp\": \"^1.0.5\",\n        \"supports-color\": \"^5.3.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"1.9.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"1.1.3\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\n      \"dev\": true\n    },\n    \"concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"debug\": {\n      \"version\": \"3.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\",\n      \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"^2.1.1\"\n      }\n    },\n    \"debuglog\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz\",\n      \"integrity\": \"sha512-syBZ+rnAK3EgMsH2aYEOLUW7mZSY9Gb+0wUMCFsZvcmiz+HigA0LOcq/HoQqVuGG+EKykunc7QG2bzrponfaSw==\",\n      \"dev\": true\n    },\n    \"dezalgo\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.4.tgz\",\n      \"integrity\": \"sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==\",\n      \"dev\": true,\n      \"requires\": {\n        \"asap\": \"^2.0.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"function-bind\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\",\n      \"dev\": true\n    },\n    \"glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      }\n    },\n    \"graceful-fs\": {\n      \"version\": \"4.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.10.tgz\",\n      \"integrity\": \"sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==\",\n      \"dev\": true\n    },\n    \"has\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"function-bind\": \"^1.1.1\"\n      }\n    },\n    \"has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"dev\": true\n    },\n    \"hosted-git-info\": {\n      \"version\": \"2.8.9\",\n      \"resolved\": \"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz\",\n      \"integrity\": \"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==\",\n      \"dev\": true\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"is-core-module\": {\n      \"version\": \"2.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz\",\n      \"integrity\": \"sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has\": \"^1.0.3\"\n      }\n    },\n    \"json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"license-checker\": {\n      \"version\": \"25.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/license-checker/-/license-checker-25.0.1.tgz\",\n      \"integrity\": \"sha512-mET5AIwl7MR2IAKYYoVBBpV0OnkKQ1xGj2IMMeEFIs42QAkEVjRtFZGWmQ28WeU7MP779iAgOaOy93Mn44mn6g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^2.4.1\",\n        \"debug\": \"^3.1.0\",\n        \"mkdirp\": \"^0.5.1\",\n        \"nopt\": \"^4.0.1\",\n        \"read-installed\": \"~4.0.3\",\n        \"semver\": \"^5.5.0\",\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-satisfies\": \"^4.0.0\",\n        \"treeify\": \"^1.1.0\"\n      }\n    },\n    \"minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^1.1.7\"\n      }\n    },\n    \"minimist\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.7.tgz\",\n      \"integrity\": \"sha512-bzfL1YUZsP41gmu/qjrEk0Q6i2ix/cVeAhbCbqH9u3zYutS1cLg00qhrD0M2MVdCcx4Sc0UpP2eBWo9rotpq6g==\",\n      \"dev\": true\n    },\n    \"mkdirp\": {\n      \"version\": \"0.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n      \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"minimist\": \"^1.2.6\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"nopt\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz\",\n      \"integrity\": \"sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"abbrev\": \"1\",\n        \"osenv\": \"^0.1.4\"\n      }\n    },\n    \"normalize-package-data\": {\n      \"version\": \"2.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz\",\n      \"integrity\": \"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"hosted-git-info\": \"^2.1.4\",\n        \"resolve\": \"^1.10.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"validate-npm-package-license\": \"^3.0.1\"\n      }\n    },\n    \"npm-normalize-package-bin\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz\",\n      \"integrity\": \"sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==\",\n      \"dev\": true\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"ory-prettier-styles\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ory-prettier-styles/-/ory-prettier-styles-1.3.0.tgz\",\n      \"integrity\": \"sha512-Vfn0G6CyLaadwcCamwe1SQCf37ZQfBDgMrhRI70dE/2fbE3Q43/xu7K5c32I5FGt/EliroWty5yBjmdkj0eWug==\",\n      \"dev\": true\n    },\n    \"os-homedir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n      \"integrity\": \"sha512-B5JU3cabzk8c67mRRd3ECmROafjYMXbuzlwtqdM8IbS8ktlTix8aFGb2bAGKrSRIlnfKwovGUUr72JUPyOb6kQ==\",\n      \"dev\": true\n    },\n    \"os-tmpdir\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n      \"integrity\": \"sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==\",\n      \"dev\": true\n    },\n    \"osenv\": {\n      \"version\": \"0.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz\",\n      \"integrity\": \"sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"os-homedir\": \"^1.0.0\",\n        \"os-tmpdir\": \"^1.0.0\"\n      }\n    },\n    \"path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true\n    },\n    \"path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"prettier\": {\n      \"version\": \"2.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.7.1.tgz\",\n      \"integrity\": \"sha512-ujppO+MkdPqoVINuDFDRLClm7D78qbDt0/NR+wp5FqEZOoTNAjPHWj17QRhu7geIHJfcNhRk1XVQmF8Bp3ye+g==\",\n      \"dev\": true\n    },\n    \"read-installed\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/read-installed/-/read-installed-4.0.3.tgz\",\n      \"integrity\": \"sha512-O03wg/IYuV/VtnK2h/KXEt9VIbMUFbk3ERG0Iu4FhLZw0EP0T9znqrYDGn6ncbEsXUFaUjiVAWXHzxwt3lhRPQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debuglog\": \"^1.0.1\",\n        \"graceful-fs\": \"^4.1.2\",\n        \"read-package-json\": \"^2.0.0\",\n        \"readdir-scoped-modules\": \"^1.0.0\",\n        \"semver\": \"2 || 3 || 4 || 5\",\n        \"slide\": \"~1.1.3\",\n        \"util-extend\": \"^1.0.1\"\n      }\n    },\n    \"read-package-json\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.2.tgz\",\n      \"integrity\": \"sha512-D1KmuLQr6ZSJS0tW8hf3WGpRlwszJOXZ3E8Yd/DNRaM5d+1wVRZdHlpGBLAuovjr28LbWvjpWkBHMxpRGGjzNA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"glob\": \"^7.1.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"normalize-package-data\": \"^2.0.0\",\n        \"npm-normalize-package-bin\": \"^1.0.0\"\n      }\n    },\n    \"readdir-scoped-modules\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdir-scoped-modules/-/readdir-scoped-modules-1.1.0.tgz\",\n      \"integrity\": \"sha512-asaikDeqAQg7JifRsZn1NJZXo9E+VwlyCfbkZhwyISinqk5zNS6266HS5kah6P0SaQKGF6SkNnZVHUzHFYxYDw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"debuglog\": \"^1.0.1\",\n        \"dezalgo\": \"^1.0.0\",\n        \"graceful-fs\": \"^4.1.2\",\n        \"once\": \"^1.3.0\"\n      }\n    },\n    \"resolve\": {\n      \"version\": \"1.22.1\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz\",\n      \"integrity\": \"sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-core-module\": \"^2.9.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      }\n    },\n    \"semver\": {\n      \"version\": \"5.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.1.tgz\",\n      \"integrity\": \"sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==\",\n      \"dev\": true\n    },\n    \"slide\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/slide/-/slide-1.1.6.tgz\",\n      \"integrity\": \"sha512-NwrtjCg+lZoqhFU8fOwl4ay2ei8PaqCBOUV3/ektPY9trO1yQ1oXEfmHAhKArUVUr/hOHvy5f6AdP17dCM0zMw==\",\n      \"dev\": true\n    },\n    \"spdx-compare\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-compare/-/spdx-compare-1.0.0.tgz\",\n      \"integrity\": \"sha512-C1mDZOX0hnu0ep9dfmuoi03+eOdDoz2yvK79RxbcrVEG1NO1Ph35yW102DHWKN4pk80nwCgeMmSY5L25VE4D9A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"array-find-index\": \"^1.0.2\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"spdx-correct\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz\",\n      \"integrity\": \"sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"spdx-exceptions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz\",\n      \"integrity\": \"sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==\",\n      \"dev\": true\n    },\n    \"spdx-expression-parse\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz\",\n      \"integrity\": \"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-exceptions\": \"^2.1.0\",\n        \"spdx-license-ids\": \"^3.0.0\"\n      }\n    },\n    \"spdx-license-ids\": {\n      \"version\": \"3.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.12.tgz\",\n      \"integrity\": \"sha512-rr+VVSXtRhO4OHbXUiAF7xW3Bo9DuuF6C5jH+q/x15j2jniycgKbxU09Hr0WqlSLUs4i4ltHGXqTe7VHclYWyA==\",\n      \"dev\": true\n    },\n    \"spdx-ranges\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-ranges/-/spdx-ranges-2.1.1.tgz\",\n      \"integrity\": \"sha512-mcdpQFV7UDAgLpXEE/jOMqvK4LBoO0uTQg0uvXUewmEFhpiZx5yJSZITHB8w1ZahKdhfZqP5GPEOKLyEq5p8XA==\",\n      \"dev\": true\n    },\n    \"spdx-satisfies\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/spdx-satisfies/-/spdx-satisfies-4.0.1.tgz\",\n      \"integrity\": \"sha512-WVzZ/cXAzoNmjCWiEluEA3BjHp5tiUmmhn9MK+X0tBbR9sOqtC6UQwmgCNrAIZvNlMuBUYAaHYfb2oqlF9SwKA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-compare\": \"^1.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\",\n        \"spdx-ranges\": \"^2.0.0\"\n      }\n    },\n    \"supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^3.0.0\"\n      }\n    },\n    \"supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true\n    },\n    \"treeify\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/treeify/-/treeify-1.1.0.tgz\",\n      \"integrity\": \"sha512-1m4RA7xVAJrSGrrXGs0L3YTwyvBs2S8PbRHaLZAkFw7JR8oIFwYtysxlBZhYIa7xSyiYJKZ3iGrrk55cGA3i9A==\",\n      \"dev\": true\n    },\n    \"util-extend\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/util-extend/-/util-extend-1.0.3.tgz\",\n      \"integrity\": \"sha512-mLs5zAK+ctllYBj+iAQvlDCwoxU/WDOUaJkcFudeiAX6OajC6BKXJUa9a+tbtkC11dz2Ufb7h0lyvIOVn4LADA==\",\n      \"dev\": true\n    },\n    \"validate-npm-package-license\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz\",\n      \"integrity\": \"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\",\n      \"dev\": true,\n      \"requires\": {\n        \"spdx-correct\": \"^3.0.0\",\n        \"spdx-expression-parse\": \"^3.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.1767578125,
          "content": "{\n  \"private\": true,\n  \"prettier\": \"ory-prettier-styles\",\n  \"devDependencies\": {\n    \"license-checker\": \"^25.0.1\",\n    \"ory-prettier-styles\": \"1.3.0\",\n    \"prettier\": \"2.7.1\"\n  }\n}\n"
        }
      ]
    }
  ]
}