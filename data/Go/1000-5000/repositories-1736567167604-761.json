{
  "metadata": {
    "timestamp": 1736567167604,
    "page": 761,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "genuinetools/binctr",
      "stars": 2515,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5654296875,
          "content": "###Go###\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n\n\n###OSX###\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must ends with two \\r.\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\nbinctr\ncross/\n\n# Go coverage results\ncoverage.txt\nprofile.out\n\n!go.mod\n\nrootfs\nconfig.json\n.ip\n*.tar\n/alpine\n/busybox\n/cl-k8s\nbindata.go\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4736328125,
          "content": "language: go\nsudo: required\nservices:\n  - docker\ngo:\n  - 1.11.x\nbefore_install:\n  - go get golang.org/x/lint/golint\n  - go get honnef.co/go/tools/cmd/staticcheck\n  - echo \"deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse\" | sudo tee /etc/apt/sources.list.d/backports.list\n  - sudo apt update && sudo apt install -y -t trusty-backports libapparmor-dev libseccomp-dev\njobs:\n  include:\n    - script: make everything\n    - stage: Run Test Coverage\n"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 17.0380859375,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:6978a38432a017763a148afbc7ce6491734b54292af7d3e969d84d2e9dd242e2\"\n  name = \"github.com/Azure/go-ansiterm\"\n  packages = [\n    \".\",\n    \"winterm\",\n  ]\n  pruneopts = \"\"\n  revision = \"d6e3b3328b783f23731bc4d058875b0371ff8109\"\n\n[[projects]]\n  digest = \"1:c7937d6337f88193ad8aade88c92d7e72b3d5fc6e5002a9515dabca5802624cd\"\n  name = \"github.com/Microsoft/go-winio\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"97e4973ce50b2ff5f09635a57e2b88a037aae829\"\n  version = \"v0.4.11\"\n\n[[projects]]\n  digest = \"1:edf2114ec7e427928d0d1770b8d28b4dddacdda51585a350e7f3cfc73a1f9c7d\"\n  name = \"github.com/Microsoft/hcsshim\"\n  packages = [\n    \".\",\n    \"internal/guid\",\n    \"internal/hcs\",\n    \"internal/hcserror\",\n    \"internal/hns\",\n    \"internal/interop\",\n    \"internal/longpath\",\n    \"internal/mergemaps\",\n    \"internal/safefile\",\n    \"internal/schema1\",\n    \"internal/timeout\",\n    \"internal/wclayer\",\n  ]\n  pruneopts = \"\"\n  revision = \"e44e499d29527b244d6858772f1b9090eeaddc4e\"\n  version = \"v0.7.4\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:3721a10686511b80c052323423f0de17a8c06d417dbdd3b392b1578432a33aae\"\n  name = \"github.com/Nvveen/Gotty\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"cd527374f1e5bff4938207604a14f2e38a9cf512\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:c0bec5f9b98d0bc872ff5e834fac186b807b656683bd29cb82fb207a1513fabb\"\n  name = \"github.com/beorn7/perks\"\n  packages = [\"quantile\"]\n  pruneopts = \"\"\n  revision = \"3a771d992973f24aa725d07868b467d1ddfceafb\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:31817d6449400588f48405146b985d00d5e39f44464e507f8fe47428dec53eb9\"\n  name = \"github.com/containerd/console\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"c12b1e7919c14469339a5d38f2f8ed9b64a9de23\"\n\n[[projects]]\n  digest = \"1:0da3c6890fd5430e095b71ac5be07989d4608dd36a9051529d662549384d8054\"\n  name = \"github.com/containerd/containerd\"\n  packages = [\n    \"containers\",\n    \"content\",\n    \"contrib/seccomp\",\n    \"errdefs\",\n    \"images\",\n    \"log\",\n    \"mount\",\n    \"namespaces\",\n    \"oci\",\n    \"platforms\",\n    \"snapshots\",\n    \"sys\",\n  ]\n  pruneopts = \"\"\n  revision = \"9f2e07b1fc1342d1c48fe4d7bbb94cb6d1bf278b\"\n  version = \"v1.1.4\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:4e242e28ed8346b7b50123a5a9da45a94bf1c9f944477f875c671b597621bf3b\"\n  name = \"github.com/containerd/continuity\"\n  packages = [\n    \"fs\",\n    \"pathdriver\",\n    \"syscallx\",\n    \"sysx\",\n  ]\n  pruneopts = \"\"\n  revision = \"7f53d412b9eb1cbf744c2063185d703a0ee34700\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:095f17afd0e48bc37402121d2659d1f26d9ec6b12a172c2afa7fcba951f25f18\"\n  name = \"github.com/coreos/go-systemd\"\n  packages = [\n    \"activation\",\n    \"dbus\",\n    \"util\",\n  ]\n  pruneopts = \"\"\n  revision = \"eee3db372b31153ca0b90702e165948699803fd0\"\n\n[[projects]]\n  digest = \"1:b168b5f54103bbb328987b268867f656c4536b70f7b6fec4726a4619b0ebb5f0\"\n  name = \"github.com/coreos/pkg\"\n  packages = [\"dlopen\"]\n  pruneopts = \"\"\n  revision = \"97fdf19511ea361ae1c100dd393cc47f8dcfa1e1\"\n  version = \"v4\"\n\n[[projects]]\n  digest = \"1:a9854984bc40330dde2125537b7f46d0a8d7860b3750de2e7cd0a6f904506212\"\n  name = \"github.com/cyphar/filepath-securejoin\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"a261ee33d7a517f054effbf451841abaafe3e0fd\"\n  version = \"v0.2.2\"\n\n[[projects]]\n  digest = \"1:36c23f8fb2b292fe262016cf2af469fc0d9e46ed4f74a7c4f94e0eccd5ee564a\"\n  name = \"github.com/docker/cli\"\n  packages = [\n    \"cli/config/configfile\",\n    \"cli/config/credentials\",\n    \"opts\",\n  ]\n  pruneopts = \"\"\n  revision = \"44371c7c34d5cd202e6f186288cf2cf045c531cc\"\n  version = \"v18.09.0-ce-tp6\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:c03803df39af7cd3459c99d0f7979b4f12dbdac876277918ba5cd9c441a12288\"\n  name = \"github.com/docker/distribution\"\n  packages = [\n    \".\",\n    \"context\",\n    \"digestset\",\n    \"manifest\",\n    \"manifest/manifestlist\",\n    \"manifest/ocischema\",\n    \"manifest/schema1\",\n    \"manifest/schema2\",\n    \"metrics\",\n    \"reference\",\n    \"registry/api/errcode\",\n    \"registry/api/v2\",\n    \"registry/client\",\n    \"registry/client/auth\",\n    \"registry/client/auth/challenge\",\n    \"registry/client/transport\",\n    \"registry/storage\",\n    \"registry/storage/cache\",\n    \"registry/storage/cache/memory\",\n    \"registry/storage/driver\",\n    \"registry/storage/driver/base\",\n    \"registry/storage/driver/factory\",\n    \"registry/storage/driver/filesystem\",\n    \"uuid\",\n  ]\n  pruneopts = \"\"\n  revision = \"16128bbac47f75050e82f7e91b04df33775e0c23\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:ee9323ecc4fd0f65324085347b47e054cb72d87231ada9046656765a3dc9ad8d\"\n  name = \"github.com/docker/docker\"\n  packages = [\n    \"api/types\",\n    \"api/types/blkiodev\",\n    \"api/types/container\",\n    \"api/types/filters\",\n    \"api/types/mount\",\n    \"api/types/network\",\n    \"api/types/registry\",\n    \"api/types/strslice\",\n    \"api/types/swarm\",\n    \"api/types/swarm/runtime\",\n    \"api/types/versions\",\n    \"errdefs\",\n    \"pkg/aaparser\",\n    \"pkg/archive\",\n    \"pkg/fileutils\",\n    \"pkg/homedir\",\n    \"pkg/idtools\",\n    \"pkg/ioutils\",\n    \"pkg/jsonmessage\",\n    \"pkg/longpath\",\n    \"pkg/mount\",\n    \"pkg/pools\",\n    \"pkg/stringid\",\n    \"pkg/system\",\n    \"pkg/tarsum\",\n    \"pkg/term\",\n    \"pkg/term/windows\",\n    \"profiles/apparmor\",\n    \"registry\",\n    \"registry/resumable\",\n  ]\n  pruneopts = \"\"\n  revision = \"a9c061deec0f8d452e4feb7258046d5e32a1143b\"\n  source = \"github.com/moby/moby\"\n\n[[projects]]\n  digest = \"1:c08bbcc3d25c9a0216d8ef8e53190c0c19d959f64ff8111c336d5b8cf562df0f\"\n  name = \"github.com/docker/docker-ce\"\n  packages = [\"components/cli/cli/config\"]\n  pruneopts = \"\"\n  revision = \"7989718c3006f24f5e9f4d6ce39ab1ed78c39d94\"\n  version = \"v18.09.0-ce-tp6\"\n\n[[projects]]\n  digest = \"1:52cce0aa5ae3ff98cd9fdc5561aa7f896d3f9e1f5c68dc1bbe43ade0540e33c3\"\n  name = \"github.com/docker/docker-credential-helpers\"\n  packages = [\n    \"client\",\n    \"credentials\",\n  ]\n  pruneopts = \"\"\n  revision = \"5241b46610f2491efdf9d1c85f1ddf5b02f6d962\"\n  version = \"v0.6.1\"\n\n[[projects]]\n  digest = \"1:ebe593d8b65a2947b78b6e164a2dac1a230b977a700b694da3a398b03b7afb04\"\n  name = \"github.com/docker/go-connections\"\n  packages = [\n    \"nat\",\n    \"sockets\",\n    \"tlsconfig\",\n  ]\n  pruneopts = \"\"\n  revision = \"7395e3f8aa162843a74ed6d48e79627d9792ac55\"\n  version = \"v0.4.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:de36553de33bd184804130ac8e34c454c35a7517ec149cd041fb1073be576e73\"\n  name = \"github.com/docker/go-metrics\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"399ea8c73916000c64c2c76e8da00ca82f8387ab\"\n\n[[projects]]\n  digest = \"1:582d54fcb7233da8dde1dfd2210a5b9675d0685f84246a8d317b07d680c18b1b\"\n  name = \"github.com/docker/go-units\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"47565b4f722fb6ceae66b95f853feed578a4a51c\"\n  version = \"v0.3.3\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:1d0c4a7f7d52eb8da75993ab0526467360795e9dfdd559020a15bfb53a028809\"\n  name = \"github.com/docker/libtrust\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"aabc10ec26b754e797f9028f4589c5b7bd90dc20\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:168a1591b33a1ed1b936560b9129c98d14d25d237f4472a0cf7b45ee53a69906\"\n  name = \"github.com/genuinetools/reg\"\n  packages = [\n    \"registry\",\n    \"repoutils\",\n  ]\n  pruneopts = \"\"\n  revision = \"b57209439c10071864cc1461a6d73083dbba25b8\"\n\n[[projects]]\n  digest = \"1:e772845668c277db6fcc8c6fcf31664c74851f6cce4d225be4f4adbee3861057\"\n  name = \"github.com/godbus/dbus\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"a389bdde4dd695d414e47b755e95e72b7826432c\"\n  version = \"v4.1.0\"\n\n[[projects]]\n  digest = \"1:6e73003ecd35f4487a5e88270d3ca0a81bc80dc88053ac7e4dcfec5fba30d918\"\n  name = \"github.com/gogo/protobuf\"\n  packages = [\n    \"proto\",\n    \"sortkeys\",\n    \"types\",\n  ]\n  pruneopts = \"\"\n  revision = \"636bf0302bc95575d69441b25a2603156ffdddf1\"\n  version = \"v1.1.1\"\n\n[[projects]]\n  digest = \"1:3dd078fda7500c341bc26cfbc6c6a34614f295a2457149fc1045cab767cbcf18\"\n  name = \"github.com/golang/protobuf\"\n  packages = [\n    \"proto\",\n    \"ptypes\",\n    \"ptypes/any\",\n    \"ptypes/duration\",\n    \"ptypes/timestamp\",\n  ]\n  pruneopts = \"\"\n  revision = \"aa810b61a9c79d51363740d207bb46cf8e620ed5\"\n  version = \"v1.2.0\"\n\n[[projects]]\n  digest = \"1:dbbeb8ddb0be949954c8157ee8439c2adfd8dc1c9510eb44a6e58cb68c3dce28\"\n  name = \"github.com/gorilla/context\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"08b5f424b9271eedf6f9f0ce86cb9396ed337a42\"\n  version = \"v1.1.1\"\n\n[[projects]]\n  digest = \"1:c2c8666b4836c81a1d247bdf21c6a6fc1ab586538ab56f74437c2e0df5c375e1\"\n  name = \"github.com/gorilla/mux\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"e3702bed27f0d39777b0b37b664b6280e8ef8fbf\"\n  version = \"v1.6.2\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:17a07b60ea50bffc1e8bd84cf4f1e5fcc07f9a5f1c50bbbe3baebc91664fb772\"\n  name = \"github.com/jteeuwen/go-bindata\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"6025e8de665b31fa74ab1a66f2cddd8c0abf887e\"\n\n[[projects]]\n  digest = \"1:63722a4b1e1717be7b98fc686e0b30d5e7f734b9e93d7dee86293b6deab7ea28\"\n  name = \"github.com/matttproud/golang_protobuf_extensions\"\n  packages = [\"pbutil\"]\n  pruneopts = \"\"\n  revision = \"c12348ce28de40eed0136aa2b644d0ee0650e56c\"\n  version = \"v1.0.1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:5e225ac38ad9552fc63d40a2a6e20dbf074e1cb237cdc70461b67581b82b0fbd\"\n  name = \"github.com/mrunalp/fileutils\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"7d4729fb36185a7c1719923406c9d40e54fb93c7\"\n\n[[projects]]\n  digest = \"1:5d9b668b0b4581a978f07e7d2e3314af18eb27b3fb5d19b70185b7c575723d11\"\n  name = \"github.com/opencontainers/go-digest\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"279bed98673dd5bef374d3b6e4b09e2af76183bf\"\n  version = \"v1.0.0-rc1\"\n\n[[projects]]\n  digest = \"1:f26c8670b11e29a49c8e45f7ec7f2d5bac62e8fd4e3c0ae1662baa4a697f984a\"\n  name = \"github.com/opencontainers/image-spec\"\n  packages = [\n    \"specs-go\",\n    \"specs-go/v1\",\n  ]\n  pruneopts = \"\"\n  revision = \"d60099175f88c47cd379c4738d158884749ed235\"\n  version = \"v1.0.1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:4c1af6c12ad326642566d5d8d3272d9da0a7980ac74243d82a24cc03b1365c22\"\n  name = \"github.com/opencontainers/runc\"\n  packages = [\n    \"libcontainer\",\n    \"libcontainer/apparmor\",\n    \"libcontainer/cgroups\",\n    \"libcontainer/cgroups/fs\",\n    \"libcontainer/cgroups/systemd\",\n    \"libcontainer/configs\",\n    \"libcontainer/configs/validate\",\n    \"libcontainer/criurpc\",\n    \"libcontainer/intelrdt\",\n    \"libcontainer/keys\",\n    \"libcontainer/mount\",\n    \"libcontainer/nsenter\",\n    \"libcontainer/seccomp\",\n    \"libcontainer/specconv\",\n    \"libcontainer/stacktrace\",\n    \"libcontainer/system\",\n    \"libcontainer/user\",\n    \"libcontainer/utils\",\n  ]\n  pruneopts = \"\"\n  revision = \"00dc70017d222b178a002ed30e9321b12647af2d\"\n\n[[projects]]\n  digest = \"1:531ba73ef0f436a52f4b11ff915505ae92e0cca7eb110088e3ecc23fb7ba4b4f\"\n  name = \"github.com/opencontainers/runtime-spec\"\n  packages = [\"specs-go\"]\n  pruneopts = \"\"\n  revision = \"4e3b9264a330d094b0386c3703c5f379119711e8\"\n  version = \"v1.0.1\"\n\n[[projects]]\n  digest = \"1:bcdb2ae63dc0801f6ffe3e83fb65055d441d3b5875104ee4f638d870f2ec7ac8\"\n  name = \"github.com/opencontainers/selinux\"\n  packages = [\n    \"go-selinux\",\n    \"go-selinux/label\",\n  ]\n  pruneopts = \"\"\n  revision = \"ba1aefe8057f1d0cfb8e88d0ec1dc85925ef987d\"\n  version = \"v1.0.0-rc1\"\n\n[[projects]]\n  digest = \"1:bd684c17e4d8f611ebfeb473e1dcd43b493cb6306ee64010412e378db69e5a4a\"\n  name = \"github.com/peterhellberg/link\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"d1cebc7ea14a5fc0de7cb4a45acae773161642c6\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  digest = \"1:7365acd48986e205ccb8652cc746f09c8b7876030d53710ea6ef7d0bd0dcd7ca\"\n  name = \"github.com/pkg/errors\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"645ef00459ed84a119197bfb8d8205042c6df63d\"\n  version = \"v0.8.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:7f4e395c8036aab1e13afc7bad18f4b4b741ba4a9cc641831072c241d148cdf7\"\n  name = \"github.com/prometheus/client_golang\"\n  packages = [\n    \"prometheus\",\n    \"prometheus/internal\",\n    \"prometheus/promhttp\",\n  ]\n  pruneopts = \"\"\n  revision = \"f69c853d21c15596929fa9126ba211247e7dca95\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:185cf55b1f44a1bf243558901c3f06efa5c64ba62cfdcbb1bf7bbe8c3fb68561\"\n  name = \"github.com/prometheus/client_model\"\n  packages = [\"go\"]\n  pruneopts = \"\"\n  revision = \"5c3871d89910bfb32f5fcab2aa4b9ec68e65a99f\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:f477ef7b65d94fb17574fc6548cef0c99a69c1634ea3b6da248b63a61ebe0498\"\n  name = \"github.com/prometheus/common\"\n  packages = [\n    \"expfmt\",\n    \"internal/bitbucket.org/ww/goautoneg\",\n    \"model\",\n  ]\n  pruneopts = \"\"\n  revision = \"c7de2306084e37d54b8be01f3541a8464345e9a5\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:5a57ea878c9a40657ebe7916eca6bea7c76808f5acb68fd42ea5e204dd35f6f7\"\n  name = \"github.com/prometheus/procfs\"\n  packages = [\n    \".\",\n    \"internal/util\",\n    \"nfs\",\n    \"xfs\",\n  ]\n  pruneopts = \"\"\n  revision = \"418d78d0b9a7b7de3a6bbc8a23def624cc977bb2\"\n\n[[projects]]\n  digest = \"1:c33a9df696cf7750a2551bbbde9454adb7c649fe0ae6a0c5fef9efeed2c3f96c\"\n  name = \"github.com/seccomp/libseccomp-golang\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"e3496e3a417d1dc9ecdceca5af2513271fed37a0\"\n  version = \"v0.9.0\"\n\n[[projects]]\n  digest = \"1:3fcbf733a8d810a21265a7f2fe08a3353db2407da052b233f8b204b5afc03d9b\"\n  name = \"github.com/sirupsen/logrus\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"3e01752db0189b9157070a0e1668a620f9a85da2\"\n  version = \"v1.0.6\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:19bf29e038c97132efbcb6f6bfe85b8e1631976e127fc0e8103c17d40a2a1489\"\n  name = \"github.com/syndtr/gocapability\"\n  packages = [\"capability\"]\n  pruneopts = \"\"\n  revision = \"d98352740cb2c55f81556b63d4a1ec64c5a319c2\"\n\n[[projects]]\n  digest = \"1:dc7dae4a4ee322cb9852ba4cec6a0a61815cc2870d79b0c25edfb75e3bd618ec\"\n  name = \"github.com/vishvananda/netlink\"\n  packages = [\n    \".\",\n    \"nl\",\n  ]\n  pruneopts = \"\"\n  revision = \"a2ad57a690f3caf3015351d2d6e1c0b95c349752\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:c09fddfdd491edaa4383396503e57023a26e5a824283a78c2310613a1252c649\"\n  name = \"github.com/vishvananda/netns\"\n  packages = [\".\"]\n  pruneopts = \"\"\n  revision = \"13995c7128ccc8e51e9a6bd2b551020a27180abd\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:61a86f0be8b466d6e3fbdabb155aaa4006137cb5e3fd3b949329d103fa0ceb0f\"\n  name = \"golang.org/x/crypto\"\n  packages = [\"ssh/terminal\"]\n  pruneopts = \"\"\n  revision = \"0e37d006457bf46f9e6692014ba72ef82c33022c\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:6846191f608c0dd6109f37ca46b784f9630191ff13f86ae974135c05a4c92971\"\n  name = \"golang.org/x/net\"\n  packages = [\n    \"context\",\n    \"internal/socks\",\n    \"proxy\",\n  ]\n  pruneopts = \"\"\n  revision = \"f04abc6bdfa7a0171a8a0c9fd2ada9391044d056\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:b2ea75de0ccb2db2ac79356407f8a4cd8f798fe15d41b381c00abf3ae8e55ed1\"\n  name = \"golang.org/x/sync\"\n  packages = [\"errgroup\"]\n  pruneopts = \"\"\n  revision = \"1d60e4601c6fd243af51cc01ddf169918a5407ca\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:18ebd6e65d5223778b5fc92bbf2afffb54c6ac3889bbc362df692b965f932fae\"\n  name = \"golang.org/x/sys\"\n  packages = [\n    \"unix\",\n    \"windows\",\n  ]\n  pruneopts = \"\"\n  revision = \"b09afc3d579e346c4a7e4705953acaf6f9e551bd\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:36b9e78a171b849928b686bcf8ba7d6036d8f6132bbe22044af0ec5e7ba60d23\"\n  name = \"google.golang.org/genproto\"\n  packages = [\"googleapis/rpc/status\"]\n  pruneopts = \"\"\n  revision = \"221a8d4f74948678f06caaa13c9d41d22e069ae8\"\n\n[[projects]]\n  digest = \"1:15656947b87a6a240e61dcfae9e71a55a8d5677f240d12ab48f02cdbabf1e309\"\n  name = \"google.golang.org/grpc\"\n  packages = [\n    \"codes\",\n    \"metadata\",\n    \"status\",\n  ]\n  pruneopts = \"\"\n  revision = \"8dea3dc473e90c8179e519d91302d0597c0ca1d1\"\n  version = \"v1.15.0\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  input-imports = [\n    \"github.com/containerd/console\",\n    \"github.com/containerd/containerd/contrib/seccomp\",\n    \"github.com/coreos/go-systemd/activation\",\n    \"github.com/docker/distribution\",\n    \"github.com/docker/distribution/manifest/manifestlist\",\n    \"github.com/docker/distribution/manifest/schema1\",\n    \"github.com/docker/distribution/manifest/schema2\",\n    \"github.com/docker/distribution/reference\",\n    \"github.com/docker/distribution/registry/storage\",\n    \"github.com/docker/distribution/registry/storage/driver/filesystem\",\n    \"github.com/docker/docker/pkg/archive\",\n    \"github.com/docker/docker/profiles/apparmor\",\n    \"github.com/genuinetools/reg/registry\",\n    \"github.com/genuinetools/reg/repoutils\",\n    \"github.com/jteeuwen/go-bindata\",\n    \"github.com/opencontainers/go-digest\",\n    \"github.com/opencontainers/runc/libcontainer\",\n    \"github.com/opencontainers/runc/libcontainer/apparmor\",\n    \"github.com/opencontainers/runc/libcontainer/cgroups/systemd\",\n    \"github.com/opencontainers/runc/libcontainer/configs\",\n    \"github.com/opencontainers/runc/libcontainer/nsenter\",\n    \"github.com/opencontainers/runc/libcontainer/specconv\",\n    \"github.com/opencontainers/runc/libcontainer/system\",\n    \"github.com/opencontainers/runc/libcontainer/utils\",\n    \"github.com/opencontainers/runtime-spec/specs-go\",\n    \"github.com/seccomp/libseccomp-golang\",\n    \"github.com/sirupsen/logrus\",\n    \"golang.org/x/sys/unix\",\n  ]\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 1.328125,
          "content": "# Gopkg.toml example\n#\n# Refer to https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md\n# for detailed Gopkg.toml documentation.\n#\n# required = [\"github.com/user/thing/cmd/thing\"]\n# ignored = [\"github.com/user/project/pkgX\", \"bitbucket.org/user/project/pkgA/pkgY\"]\n#\n# [[constraint]]\n#   name = \"github.com/user/project\"\n#   version = \"1.0.0\"\n#\n# [[constraint]]\n#   name = \"github.com/user/project2\"\n#   branch = \"dev\"\n#   source = \"github.com/myfork/project2\"\n#\n# [[override]]\n#  name = \"github.com/x/y\"\n#  version = \"2.4.0\"\n\n\n[[override]]\n  name = \"github.com/Sirupsen/logrus\"\n  source = \"github.com/sirupsen/logrus\"\n\n[[override]]\n  name = \"github.com/docker/docker\"\n  source = \"github.com/moby/moby\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/opencontainers/runc\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/opencontainers/runtime-spec\"\n  version = \"v1.0.1\"\n\n[[constraint]]\n  name = \"github.com/containerd/console\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/coreos/go-systemd\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/jteeuwen/go-bindata\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/genuinetools/reg\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/docker/distribution\"\n  branch = \"master\"\n\n[[override]]\n  name = \"github.com/prometheus/client_golang\"\n  branch = \"master\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0654296875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2018 The Genuinetools Authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.083984375,
          "content": "# Setup name variables for the package/tool\nNAME := binctr\nPKG := github.com/genuinetools/$(NAME)\n\nCGO_ENABLED := 1\n\n# Set any default go build tags.\nBUILDTAGS := seccomp apparmor\n\n.PHONY: everything\neverything: clean alpine busybox cl-k8s fmt lint test staticcheck vet ## Builds a static executable or package.\n\ninclude basic.mk\n\n.PHONY: prebuild\nprebuild:\n\n.PHONY: alpine\nalpine:\n\t@echo \"+ $@\"\n\tgo generate ./examples/$@/...\n\tCGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t\t\t\t-tags \"$(BUILDTAGS) static_build\" \\\n\t\t\t\t${GO_LDFLAGS_STATIC} -o $@ ./examples/$@/...\n\t@echo \"Static container for $@ created at: ./$@\"\n\n.PHONY: busybox\nbusybox:\n\t@echo \"+ $@\"\n\tgo generate ./examples/$@/...\n\tCGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t\t\t\t-tags \"$(BUILDTAGS) static_build\" \\\n\t\t\t\t${GO_LDFLAGS_STATIC} -o $@ ./examples/$@/...\n\t@echo \"Static container for $@ created at: ./$@\"\n\n.PHONY: cl-k8s\ncl-k8s:\n\t@echo \"+ $@\"\n\tgo generate ./examples/$@/...\n\tCGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t\t\t\t-tags \"$(BUILDTAGS) static_build\" \\\n\t\t\t\t${GO_LDFLAGS_STATIC} -o $@ ./examples/$@/...\n\t@echo \"Static container for $@ created at: ./$@\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.083984375,
          "content": "# binctr\n\n[![Build Status](https://travis-ci.org/genuinetools/binctr.svg?branch=master)](https://travis-ci.org/genuinetools/binctr)\n[![Go Report Card](https://goreportcard.com/badge/github.com/genuinetools/binctr)](https://goreportcard.com/report/github.com/genuinetools/binctr)\n[![GoDoc](https://godoc.org/github.com/genuinetools/binctr?status.svg)](https://godoc.org/github.com/genuinetools/binctr)\n\nCreate fully static, including rootfs embedded, binaries that pop you directly\ninto a container. **Can be run by an unprivileged user.**\n\nCheck out the blog post: [blog.jessfraz.com/post/getting-towards-real-sandbox-containers](https://blog.jessfraz.com/post/getting-towards-real-sandbox-containers/).\n\nThis is based off a crazy idea from [@crosbymichael](https://github.com/crosbymichael)\nwho first embedded an image in a binary :D\n\n**HISTORY:** This project used to use a POC fork of libcontainer until [@cyphar](https://github.com/cyphar)\ngot rootless containers into upstream! Woohoo!\nCheck out the original thread on the \n[mailing list](https://groups.google.com/a/opencontainers.org/forum/#!topic/dev/yutVaSLcqWI).\n\n**Table of Contents**\n\n<!-- toc -->\n\n  * [Checking out this repo](#checking-out-this-repo)\n  * [Building](#building)\n  * [Running](#running)\n- [Cool things](#cool-things)\n\n<!-- tocstop -->\n\n### Checking out this repo\n\n```console\n$ git clone git@github.com:genuinetools/binctr.git\n```\n\n### Building\n\nYou will need `libapparmor-dev` and `libseccomp-dev`.\n\nMost importantly you need userns in your kernel (`CONFIG_USER_NS=y`)\nor else this won't even work.\n\n```console\n# building the alpine example\n$ make alpine\nStatic container created at: ./alpine\n\n# building the busybox example\n$ make busybox\nStatic container created at: ./busybox\n\n# building the cl-k8s example\n$ make cl-k8s\nStatic container created at: ./cl-k8s\n```\n\n### Running\n\n```console\n$ ./alpine\n$ ./busybox\n$ ./cl-k8s\n```\n\n## Cool things\n\nThe binary spawned does NOT need to oversee the container process if you\nrun in detached mode with a PID file. You can have it watched by the user mode\nsystemd so that this binary is really just the launcher :)"
        },
        {
          "name": "VERSION.txt",
          "type": "blob",
          "size": 0.0068359375,
          "content": "v0.0.0\n"
        },
        {
          "name": "basic.mk",
          "type": "blob",
          "size": 6.701171875,
          "content": "# Set the shell\nSHELL := /bin/bash\n\n# Set an output prefix, which is the local directory if not specified\nPREFIX?=$(shell pwd)\n\n# Set the build dir, where built cross-compiled binaries will be output\nBUILDDIR := ${PREFIX}/cross\n\n# Populate version variables\n# Add to compile time flags\nVERSION := $(shell cat VERSION.txt)\nGITCOMMIT := $(shell git rev-parse --short HEAD)\nGITUNTRACKEDCHANGES := $(shell git status --porcelain --untracked-files=no)\nifneq ($(GITUNTRACKEDCHANGES),)\n\tGITCOMMIT := $(GITCOMMIT)-dirty\nendif\nifeq ($(GITCOMMIT),)\n    GITCOMMIT := ${GITHUB_SHA}\nendif\nCTIMEVAR=-X $(PKG)/version.GITCOMMIT=$(GITCOMMIT) -X $(PKG)/version.VERSION=$(VERSION)\nGO_LDFLAGS=-ldflags \"-w $(CTIMEVAR)\"\nGO_LDFLAGS_STATIC=-ldflags \"-w $(CTIMEVAR) -extldflags -static\"\n\n# Set our default go compiler\nGO := go\n\n# List the GOOS and GOARCH to build\nGOOSARCHES = $(shell cat .goosarch)\n\n# Set the graph driver as the current graphdriver if not set.\nDOCKER_GRAPHDRIVER := $(if $(DOCKER_GRAPHDRIVER),$(DOCKER_GRAPHDRIVER),$(shell docker info 2>&1 | grep \"Storage Driver\" | sed 's/.*: //'))\nexport DOCKER_GRAPHDRIVER\n\n# If this session isn't interactive, then we don't want to allocate a\n# TTY, which would fail, but if it is interactive, we do want to attach\n# so that the user can send e.g. ^C through.\nINTERACTIVE := $(shell [ -t 0 ] && echo 1 || echo 0)\nifeq ($(INTERACTIVE), 1)\n\tDOCKER_FLAGS += -t\nendif\n\n.PHONY: build\nbuild: prebuild $(NAME) ## Builds a dynamic executable or package.\n\n$(NAME): $(wildcard *.go) $(wildcard */*.go) VERSION.txt\n\t@echo \"+ $@\"\n\t$(GO) build -tags \"$(BUILDTAGS)\" ${GO_LDFLAGS} -o $(NAME) .\n\n.PHONY: static\nstatic: prebuild ## Builds a static executable.\n\t@echo \"+ $@\"\n\tCGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t\t\t\t-tags \"$(BUILDTAGS) static_build\" \\\n\t\t\t\t${GO_LDFLAGS_STATIC} -o $(NAME) .\n\nall: clean build fmt lint test staticcheck vet install ## Runs a clean, build, fmt, lint, test, staticcheck, vet and install.\n\n.PHONY: fmt\nfmt: ## Verifies all files have been `gofmt`ed.\n\t@echo \"+ $@\"\n\t@if [[ ! -z \"$(shell gofmt -s -l . | grep -v '.pb.go' | grep -v '.twirp.go' | grep -v 'bindata.go' | grep -v vendor | tee /dev/stderr)\" ]]; then \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: lint\nlint: ## Verifies `golint` passes.\n\t@echo \"+ $@\"\n\t@if [[ ! -z \"$(shell golint ./... | grep -v '.pb.go:' | grep -v '.twirp.go:' | grep -v vendor | tee /dev/stderr)\" ]]; then \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: test\ntest: prebuild ## Runs the go tests.\n\t@echo \"+ $@\"\n\t@$(GO) test -v -tags \"$(BUILDTAGS) cgo\" $(shell $(GO) list ./... | grep -v vendor)\n\n.PHONY: vet\nvet: ## Verifies `go vet` passes.\n\t@echo \"+ $@\"\n\t@if [[ ! -z \"$(shell $(GO) vet $(shell $(GO) list ./... | grep -v vendor) | tee /dev/stderr)\" ]]; then \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: staticcheck\nstaticcheck: ## Verifies `staticcheck` passes.\n\t@echo \"+ $@\"\n\t@if [[ ! -z \"$(shell staticcheck $(shell $(GO) list ./... | grep -v vendor) | grep -v 'bindata.go:' | tee /dev/stderr)\" ]]; then \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: cover\ncover: prebuild ## Runs go test with coverage.\n\t@echo \"\" > coverage.txt\n\t@for d in $(shell $(GO) list ./... | grep -v vendor); do \\\n\t\t$(GO) test -race -coverprofile=profile.out -covermode=atomic \"$$d\"; \\\n\t\tif [ -f profile.out ]; then \\\n\t\t\tcat profile.out >> coverage.txt; \\\n\t\t\trm profile.out; \\\n\t\tfi; \\\n\tdone;\n\n.PHONY: install\ninstall: prebuild ## Installs the executable or package.\n\t@echo \"+ $@\"\n\t$(GO) install -a -tags \"$(BUILDTAGS)\" ${GO_LDFLAGS} .\n\ndefine buildpretty\nmkdir -p $(BUILDDIR)/$(1)/$(2);\nGOOS=$(1) GOARCH=$(2) CGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t -o $(BUILDDIR)/$(1)/$(2)/$(NAME) \\\n\t -a -tags \"$(BUILDTAGS) static_build netgo\" \\\n\t -installsuffix netgo ${GO_LDFLAGS_STATIC} .;\nmd5sum $(BUILDDIR)/$(1)/$(2)/$(NAME) > $(BUILDDIR)/$(1)/$(2)/$(NAME).md5;\nsha256sum $(BUILDDIR)/$(1)/$(2)/$(NAME) > $(BUILDDIR)/$(1)/$(2)/$(NAME).sha256;\nendef\n\n.PHONY: cross\ncross: *.go VERSION.txt prebuild ## Builds the cross-compiled binaries, creating a clean directory structure (eg. GOOS/GOARCH/binary).\n\t@echo \"+ $@\"\n\t$(foreach GOOSARCH,$(GOOSARCHES), $(call buildpretty,$(subst /,,$(dir $(GOOSARCH))),$(notdir $(GOOSARCH))))\n\ndefine buildrelease\nGOOS=$(1) GOARCH=$(2) CGO_ENABLED=$(CGO_ENABLED) $(GO) build \\\n\t -o $(BUILDDIR)/$(NAME)-$(1)-$(2) \\\n\t -a -tags \"$(BUILDTAGS) static_build netgo\" \\\n\t -installsuffix netgo ${GO_LDFLAGS_STATIC} .;\nmd5sum $(BUILDDIR)/$(NAME)-$(1)-$(2) > $(BUILDDIR)/$(NAME)-$(1)-$(2).md5;\nsha256sum $(BUILDDIR)/$(NAME)-$(1)-$(2) > $(BUILDDIR)/$(NAME)-$(1)-$(2).sha256;\nendef\n\n.PHONY: release\nrelease: *.go VERSION.txt prebuild ## Builds the cross-compiled binaries, naming them in such a way for release (eg. binary-GOOS-GOARCH).\n\t@echo \"+ $@\"\n\t$(foreach GOOSARCH,$(GOOSARCHES), $(call buildrelease,$(subst /,,$(dir $(GOOSARCH))),$(notdir $(GOOSARCH))))\n\n.PHONY: bump-version\nBUMP := patch\nbump-version: ## Bump the version in the version file. Set BUMP to [ patch | major | minor ].\n\t@$(GO) get -u github.com/jessfraz/junk/sembump # update sembump tool\n\t$(eval NEW_VERSION = $(shell sembump --kind $(BUMP) $(VERSION)))\n\t@echo \"Bumping VERSION.txt from $(VERSION) to $(NEW_VERSION)\"\n\techo $(NEW_VERSION) > VERSION.txt\n\t@echo \"Updating links to download binaries in README.md\"\n\tsed -i s/$(VERSION)/$(NEW_VERSION)/g README.md\n\tgit add VERSION.txt README.md\n\tgit commit -vsam \"Bump version to $(NEW_VERSION)\"\n\t@echo \"Run make tag to create and push the tag for new version $(NEW_VERSION)\"\n\n.PHONY: tag\ntag: ## Create a new git tag to prepare to build a release.\n\tgit tag -sa $(VERSION) -m \"$(VERSION)\"\n\t@echo \"Run git push origin $(VERSION) to push your new tag to GitHub and trigger a travis build.\"\n\nREGISTRY := r.j3ss.co\n.PHONY: image\nimage: ## Create the docker image from the Dockerfile.\n\t@docker build --rm --force-rm -t $(REGISTRY)/$(NAME) .\n\n.PHONY: image-dev\nimage-dev:\n\t@docker build --rm --force-rm -f Dockerfile.dev -t $(REGISTRY)/$(NAME):dev .\n\n.PHONY: AUTHORS\nAUTHORS:\n\t@$(file >$@,# This file lists all individuals having contributed content to the repository.)\n\t@$(file >>$@,# For how it is generated, see `make AUTHORS`.)\n\t@echo \"$(shell git log --format='\\n%aN <%aE>' | LC_ALL=C.UTF-8 sort -uf)\" >> $@\n\n.PHONY: vendor\nvendor: ## Updates the vendoring directory.\n\t@$(RM) go.sum\n\t@$(RM) -r vendor\n\tGO111MODULE=on $(GO) mod init || true\n\tGO111MODULE=on $(GO) mod tidy\n\tGO111MODULE=on $(GO) mod vendor\n\t@$(RM) Gopkg.toml Gopkg.lock\n\n.PHONY: clean\nclean: ## Cleanup any build binaries or packages.\n\t@echo \"+ $@\"\n\t$(RM) $(NAME)\n\t$(RM) -r $(BUILDDIR)\n\n.PHONY: help\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | sed 's/^[^:]*://g' | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\ncheck_defined = \\\n    $(strip $(foreach 1,$1, \\\n\t$(call __check_defined,$1,$(strip $(value 2)))))\n\n__check_defined = \\\n    $(if $(value $1),, \\\n    $(error Undefined $1$(if $2, ($2))$(if $(value @), \\\n    required by target `$@')))\n"
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}