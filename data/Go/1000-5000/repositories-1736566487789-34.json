{
  "metadata": {
    "timestamp": 1736566487789,
    "page": 34,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "actions/actions-runner-controller",
      "stars": 4865,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": "Makefile\nacceptance\nrunner\nhack\ntest-assets\nconfig\ncharts\n.github\n.envrc\n.env\n*.md\n*.txt\n*.sh\ntest/e2e/.docker-build\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.041015625,
          "content": "*.png filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.474609375,
          "content": "# Deploy Assets\nrelease\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\nbin\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Kubernetes Generated files - skip generated files, except for vendored files\n!vendor/**/zz_generated.*\n\n# editor and IDE paraphernalia\n.vscode\n.idea\n*.swp\n*.swo\n*~\n\n.envrc\n.env\n.test.env\n*.pem\n!github/actions/testdata/*.pem\n\n# OS\n.DS_STORE\n\n/test-assets\n/.tools\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 0.48828125,
          "content": "run:\n  timeout: 3m\noutput:\n  formats:\n    - format: github-actions\n      path: stdout\nlinters-settings:\n  errcheck:\n    exclude-functions:\n      - (net/http.ResponseWriter).Write\n      - (*net/http.Server).Shutdown\n      - (*github.com/actions/actions-runner-controller/simulator.VisibleRunnerGroups).Add\n      - (*github.com/actions/actions-runner-controller/testing.Kind).Stop\nissues:\n  exclude-rules:\n    - path: controllers/suite_test.go\n      linters:\n        - staticcheck\n      text: \"SA1019\"\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.109375,
          "content": "# actions-runner-controller maintainers\n* @mumoshu @toast-gear @actions/actions-launch @nikola-jokic @rentziass\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.15234375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at opensource@github.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 26.52734375,
          "content": "# Contribution Guide\n\n- [Contribution Guide](#contribution-guide)\n  - [Welcome](#welcome)\n  - [Before contributing code](#before-contributing-code)\n  - [How to Contribute a Patch](#how-to-contribute-a-patch)\n    - [Developing the Controller](#developing-the-controller)\n    - [Developing the Runners](#developing-the-runners)\n      - [Tests](#tests)\n      - [Running Ginkgo Tests](#running-ginkgo-tests)\n    - [Running End to End Tests](#running-end-to-end-tests)\n      - [Rerunning a failed test](#rerunning-a-failed-test)\n      - [Testing in a non-kind cluster](#testing-in-a-non-kind-cluster)\n    - [Code conventions](#code-conventions)\n    - [Opening the Pull Request](#opening-the-pull-request)\n  - [Helm Version Changes](#helm-version-changes)\n  - [Testing Controller Built from a Pull Request](#testing-controller-built-from-a-pull-request)\n  - [Release process](#release-process)\n    - [Workflow structure](#workflow-structure)\n      - [Releasing legacy actions-runner-controller image and helm charts](#releasing-legacy-actions-runner-controller-image-and-helm-charts)\n      - [Release actions-runner-controller runner images](#release-actions-runner-controller-runner-images)\n      - [Release gha-runner-scale-set-controller image and helm charts](#release-gha-runner-scale-set-controller-image-and-helm-charts)\n      - [Release actions/runner image](#release-actionsrunner-image)\n      - [Canary releases](#canary-releases)\n\n## Welcome\n\nThis document is the single source of truth for how to contribute to the code base.\nFeel free to browse the [open issues](https://github.com/actions/actions-runner-controller/issues) or file a new one, all feedback is welcome!\nBy reading this guide, we hope to give you all of the information you need to be able to pick up issues, contribute new features, and get your work\nreviewed and merged.\n\n## Before contributing code\n\nWe welcome code patches, but to make sure things are well coordinated you should discuss any significant change before starting the work. The maintainers ask that you signal your intention to contribute to the project using the issue tracker. If there is an existing issue that you want to work on, please let us know so we can get it assigned to you. If you noticed a bug or want to add a new feature, there are issue templates you can fill out.\n\nWhen filing a feature request, the maintainers will review the change and give you a decision on whether we are willing to accept the feature into the project.\n\nFor significantly large and/or complex features, we may request that you write up an architectural decision record ([ADR](https://github.blog/2020-08-13-why-write-adrs/)) detailing the change.\n\nPlease use the [template](/docs/adrs/yyyy-mm-dd-TEMPLATE) as guidance.\n\n<!-- \n  TODO: Add a pre-requisite section describing what developers should\n  install in order get started on ARC.\n-->\n\n## How to Contribute a Patch\n\nDepending on what you are patching depends on how you should go about it.\nBelow are some guides on how to test patches locally as well as develop the controller and runners.\n\nWhen submitting a PR for a change please provide evidence that your change works as we still need to work on improving the CI of the project.\n\nSome resources are provided for helping achieve this, see this guide for details.\n\n### Developing the Controller\n\nRerunning the whole acceptance test suite from scratch on every little change to the controller, the runner, and the chart would be counter-productive.\n\nTo make your development cycle faster, use the below command to update deploy and update all the three:\n\n```shell\n# Let assume we have all other envvars like DOCKER_USER, GITHUB_TOKEN already set,\n# The below command will (re)build `actions-runner-controller:controller1` and `actions-runner:runner1`,\n# load those into kind nodes, and then rerun kubectl or helm to install/upgrade the controller,\n# and finally upgrade the runner deployment to use the new runner image.\n#\n# As helm 3 and kubectl is unable to recreate a pod when no tag change,\n# you either need to bump VERSION and RUNNER_TAG on each run,\n# or manually run `kubectl delete pod $POD` on respective pods for changes to actually take effect.\n\n# Makefile\nVERSION=controller1 \\\n  RUNNER_TAG=runner1 \\\n  make acceptance/pull acceptance/kind docker-buildx acceptance/load acceptance/deploy\n```\n\nIf you've already deployed actions-runner-controller and only want to recreate pods to use the newer image, you can run:\n\n```shell\n# Makefile\nNAME=$DOCKER_USER/actions-runner-controller \\\n  make docker-build acceptance/load && \\\n  kubectl -n actions-runner-system delete po $(kubectl -n actions-runner-system get po -ojsonpath={.items[*].metadata.name})\n```\n\nSimilarly, if you'd like to recreate runner pods with the newer runner image you can use the runner specific [Makefile](runner/Makefile) to build and / or push new runner images\n\n```shell\n# runner/Makefile\nNAME=$DOCKER_USER/actions-runner make \\\n  -C runner docker-{build,push}-ubuntu && \\\n  (kubectl get po -ojsonpath={.items[*].metadata.name} | xargs -n1 kubectl delete po)\n```\n\n### Developing the Runners\n\n#### Tests\n\nA set of example pipelines (./acceptance/pipelines) are provided in this repository which you can use to validate your runners are working as expected.\nWhen raising a PR please run the relevant suites to prove your change hasn't broken anything.\n\n#### Running Ginkgo Tests\n\nYou can run the integration test suite that is written in Ginkgo with:\n\n```shell\nmake test-with-deps\n```\n\nThis will firstly install a few binaries required to setup the integration test environment and then runs `go test` to start the Ginkgo test.\n\nIf you don't want to use `make`, like when you're running tests from your IDE, install required binaries to `/usr/local/kubebuilder/bin`.\nThat's the directory in which controller-runtime's `envtest` framework locates the binaries.\n\n```shell\nsudo mkdir -p /usr/local/kubebuilder/bin\nmake kube-apiserver etcd\nsudo mv test-assets/{etcd,kube-apiserver} /usr/local/kubebuilder/bin/\ngo test -v -run TestAPIs github.com/actions/actions-runner-controller/controllers/actions.summerwind.net\n```\n\nTo run Ginkgo tests selectively, set the pattern of target test names to `GINKGO_FOCUS`.\nAll the Ginkgo test that matches `GINKGO_FOCUS` will be run.\n\n```shell\nGINKGO_FOCUS='[It] should create a new Runner resource from the specified template, add a another Runner on replicas increased, and removes all the replicas when set to 0' \\\n  go test -v -run TestAPIs github.com/actions/actions-runner-controller/controllers/actions.summerwind.net\n```\n\n### Running End to End Tests\n\n> **Notes for Ubuntu 20.04+ users**\n>\n> If you're using Ubuntu 20.04 or greater, you might have installed `docker` with `snap`.\n>\n> If you want to stick with `snap`-provided `docker`, do not forget to set `TMPDIR` to somewhere under `$HOME`.\n> Otherwise `kind load docker-image` fail while running `docker save`.\n> See <https://kind.sigs.k8s.io/docs/user/known-issues/#docker-installed-with-snap> for more information.\n\nTo test your local changes against both PAT and App based authentication please run the `acceptance` make target with the authentication configuration details provided:\n\n```shell\n# This sets `VERSION` envvar to some appropriate value\n. hack/make-env.sh\n\nDOCKER_USER=*** \\\n  GITHUB_TOKEN=*** \\\n  APP_ID=*** \\\n  PRIVATE_KEY_FILE_PATH=path/to/pem/file \\\n  INSTALLATION_ID=*** \\\n  make acceptance\n```\n\n#### Rerunning a failed test\n\nWhen one of tests run by `make acceptance` failed, you'd probably like to rerun only the failed one.\n\nIt can be done by `make acceptance/run` and by setting the combination of `ACCEPTANCE_TEST_DEPLOYMENT_TOOL=helm|kubectl` and `ACCEPTANCE_TEST_SECRET_TYPE=token|app` values that failed (note, you just need to set the corresponding authentication configuration in this circumstance)\n\nIn the example below, we rerun the test for the combination `ACCEPTANCE_TEST_DEPLOYMENT_TOOL=helm ACCEPTANCE_TEST_SECRET_TYPE=token` only:\n\n```shell\nDOCKER_USER=*** \\\n  GITHUB_TOKEN=*** \\\n  ACCEPTANCE_TEST_DEPLOYMENT_TOOL=helm \\\n  ACCEPTANCE_TEST_SECRET_TYPE=token \\\n  make acceptance/run\n```\n\n#### Testing in a non-kind cluster\n\nIf you prefer to test in a non-kind cluster, you can instead run:\n\n```shell\nKUBECONFIG=path/to/kubeconfig \\\n  DOCKER_USER=*** \\\n  GITHUB_TOKEN=*** \\\n  APP_ID=*** \\\n  PRIVATE_KEY_FILE_PATH=path/to/pem/file \\\n  INSTALLATION_ID=*** \\\n  ACCEPTANCE_TEST_SECRET_TYPE=token \\\n  make docker-build acceptance/setup \\\n       acceptance/deploy \\\n       acceptance/tests\n```\n\n### Code conventions\n\nBefore shipping your PR, please check the following items to make sure CI passes.\n\n- Run `go mod tidy` if you made changes to dependencies.\n- Format the code using `gofmt`\n- Run the `golangci-lint` tool locally.\n  - We recommend you use `make lint` to run the tool using a Docker container matching the CI version.\n\n### Opening the Pull Request\n\nSend PR, add issue number to description\n\n## Helm Version Changes\n\nIn general we ask you not to bump the version in your PR.\nThe maintainers will manage releases and publishing new charts.\n\n## Testing Controller Built from a Pull Request\n\nWe always appreciate your help in testing open pull requests by deploying custom builds of actions-runner-controller onto your own environment, so that we are extra sure we didn't break anything.\n\nIt is especially true when the pull request is about GitHub Enterprise, both GHEC and GHES, as [maintainers don't have GitHub Enterprise environments for testing](docs/about-arc.md#github-enterprise-support).\n\nThe process would look like the below:\n\n- Clone this repository locally\n- Checkout the branch. If you use the `gh` command, run `gh pr checkout $PR_NUMBER`\n- Run `NAME=$DOCKER_USER/actions-runner-controller VERSION=canary make docker-build docker-push` for a custom container image build\n- Update your actions-runner-controller's controller-manager deployment to use the new image, `$DOCKER_USER/actions-runner-controller:canary`\n\nPlease also note that you need to replace `$DOCKER_USER` with your own DockerHub account name.\n\n## Release process\n\nOnly the maintainers can release a new version of actions-runner-controller, publish a new version of the helm charts, and runner images.\n\nAll release workflows have been moved to [actions-runner-controller/releases](https://github.com/actions-runner-controller/releases) since the packages are owned by the former organization.\n\n### Workflow structure\n\nFollowing the migration of actions-runner-controller into GitHub actions, all the workflows had to be modified to accommodate the move to a new organization. The following table describes the workflows, their purpose and dependencies.\n\n| Filename                          | Workflow name                        | Purpose                                                                                                                                                                                                                                                         |\n|-----------------------------------|--------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| gha-e2e-tests.yaml                | (gha) E2E Tests                      | Tests the Autoscaling Runner Set mode end to end. Coverage is restricted to this mode. Legacy modes are not tested.                                                                                                                                          |\n| go.yaml                           | Format, Lint, Unit Tests             | Formats, lints and runs unit tests for the entire codebase.                                                                                                                                                                                                     |\n| arc-publish.yaml                  | Publish ARC Image                    | Uploads release/actions-runner-controller.yaml as an artifact to the newly created release and triggers the [build and publication of the controller image](https://github.com/actions-runner-controller/releases/blob/main/.github/workflows/publish-arc.yaml) |\n| global-publish-canary.yaml        | Publish Canary Images                | Builds and publishes canary controller container images for both new and legacy modes.                                                                                                                                                                          |\n| arc-publish-chart.yaml            | Publish ARC Helm Charts              | Packages and publishes charts/actions-runner-controller (via GitHub Pages)                                                                                                                                                                                      |\n| gha-publish-chart.yaml            | (gha) Publish Helm Charts            | Packages and publishes charts/gha-runner-scale-set-controller and charts/gha-runner-scale-set charts (OCI to GHCR)                                                                                                                                              |\n| arc-release-runners.yaml          | Release ARC Runner Images            | Triggers [release-runners.yaml](https://github.com/actions-runner-controller/releases/blob/main/.github/workflows/release-runners.yaml) which will build and push new runner images used with the legacy ARC modes.                                             |\n| global-run-codeql.yaml            | Run CodeQL                           | Run CodeQL on all the codebase                                                                                                                                                                                                                                  |\n| global-run-first-interaction.yaml | First Interaction                    | Informs first time contributors what to expect when they open a new issue / PR                                                                                                                                                                                  |\n| global-run-stale.yaml             | Run Stale Bot                        | Closes issues / PRs without activity                                                                                                                                                                                                                            |\n| arc-update-runners-scheduled.yaml | Runner Updates Check (Scheduled Job) | Polls [actions/runner](https://github.com/actions/runner) and [actions/runner-container-hooks](https://github.com/actions/runner-container-hooks) for new releases. If found, a PR is created to publish new runner images                                      |\n| arc-validate-chart.yaml           | Validate Helm Chart                  | Run helm chart validators for charts/actions-runner-controller                                                                                                                                                                                                  |\n| gha-validate-chart.yaml           | (gha) Validate Helm Charts           | Run helm chart validators for charts/gha-runner-scale-set-controller and charts/gha-runner-scale-set charts                                                                                                                                                     |\n| arc-validate-runners.yaml         | Validate ARC Runners                 | Run validators for runners                                                                                                                                                                                                                                      |\n\nThere are 7 components that we release regularly:\n\n1. legacy [actions-runner-controller controller image](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller)\n2. legacy [actions-runner-controller helm charts](https://actions-runner-controller.github.io/actions-runner-controller/)\n3. legacy actions-runner-controller runner images\n   1. [ubuntu-20.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner)\n   2. [ubuntu-22.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner)\n   3. [dind-ubuntu-20.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner-dind)\n   4. [dind-ubuntu-22.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner-dind)\n   5. [dind-rootless-ubuntu-20.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner-dind-rootless)\n   6. [dind-rootless-ubuntu-22.04](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner-dind-rootless)\n4. [gha-runner-scale-set-controller image](https://github.com/actions/actions-runner-controller/pkgs/container/gha-runner-scale-set-controller)\n5. [gha-runner-scale-set-controller helm charts](https://github.com/actions/actions-runner-controller/pkgs/container/actions-runner-controller-charts%2Fgha-runner-scale-set-controller)\n6. [gha-runner-scale-set runner helm charts](https://github.com/actions/actions-runner-controller/pkgs/container/actions-runner-controller-charts%2Fgha-runner-scale-set)\n7. [actions/runner image](https://github.com/actions/actions-runner-controller/pkgs/container/actions-runner-controller%2Factions-runner)\n\n#### Releasing legacy actions-runner-controller image and helm charts\n\n1. Start by making sure the master branch is stable and all CI jobs are passing\n2. Create a new release in <https://github.com/actions/actions-runner-controller/releases> (Draft a new release)\n3. Bump up the `version` and `appVersion` in charts/actions-runner-controller/Chart.yaml - make sure the `version` matches the release version you just created. (Example: <https://github.com/actions/actions-runner-controller/pull/2577>)\n4. When the workflows finish execution, you will see:\n   1. A new controller image published to: <https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller>\n   2. Helm charts published to: <https://github.com/actions-runner-controller/actions-runner-controller.github.io/tree/master/actions-runner-controller> (the index.yaml file is updated)\n\nWhen a new release is created, the [Publish ARC Image](https://github.com/actions/actions-runner-controller/blob/master/.github/workflows/arc-publish.yaml) workflow is triggered.\n\n```mermaid\nflowchart LR\n    subgraph repository: actions/actions-runner-controller\n    event_a{{\"release: published\"}} -- triggers --> workflow_a[\"arc-publish.yaml\"]\n    event_b{{\"workflow_dispatch\"}} -- triggers --> workflow_a[\"arc-publish.yaml\"]\n    workflow_a[\"arc-publish.yaml\"] -- uploads --> package[\"actions-runner-controller.tar.gz\"]\n    end\n    subgraph repository: actions-runner-controller/releases\n    workflow_a[\"arc-publish.yaml\"] -- triggers --> event_d{{\"repository_dispatch\"}} --> workflow_b[\"publish-arc.yaml\"]\n    workflow_b[\"publish-arc.yaml\"] -- push --> A[\"GHCR: \\nactions-runner-controller/actions-runner-controller:*\"]\n    workflow_b[\"publish-arc.yaml\"] -- push --> B[\"DockerHub: \\nsummerwind/actions-runner-controller:*\"]\n    end\n```\n\n#### Release actions-runner-controller runner images\n\n**Manual steps:**\n\n1. Navigate to the [actions-runner-controller/releases](https://github.com/actions-runner-controller/releases) repository\n2. Trigger [the release-runners.yaml](https://github.com/actions-runner-controller/releases/actions/workflows/release-runners.yaml) workflow.\n   1. The list of input prameters for this workflow is defined in the table below (always inspect the workflow file for the latest version)\n\n<!-- Table of Paramters -->\n| Parameter                        | Description                                                                                                                                                                                                                         | Default       |\n|----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------|\n| `runner_version`                 | The version of the [actions/runner](https://github.com/actions/runner) to use                                                                                                                                                       | `2.300.2`     |\n| `docker_version`                 | The version of docker to use                                                                                                                                                                                                        | `20.10.12`    |\n| `runner_container_hooks_version` | The version of [actions/runner-container-hooks](https://github.com/actions/runner-container-hooks) to use                                                                                                                           | `0.2.0`       |\n| `sha`                            | The commit sha from [actions/actions-runner-controller](https://github.com/actions/actions-runner-controller) to be used to build the runner images. This will be provided to `actions/checkout` & used to tag the container images | Empty string. |\n| `push_to_registries`             | Whether to push the images to the registries. Use false to test the build                                                                                                                                                           | false         |\n\n**Automated steps:**\n\n```mermaid\nflowchart LR\n    workflow[\"release-runners.yaml\"] -- workflow_dispatch* --> workflow_b[\"release-runners.yaml\"]\n    subgraph repository: actions/actions-runner-controller\n    runner_updates_check[\"arc-update-runners-scheduled.yaml\"] -- \"polls (daily)\" --> runner_releases[\"actions/runner/releases\"]\n    runner_updates_check -- creates --> runner_update_pr[\"PR: update /runner/VERSION\"]****\n    runner_update_pr --> runner_update_pr_merge{{\"merge\"}}\n    runner_update_pr_merge -- triggers --> workflow[\"release-runners.yaml\"]\n    end\n    subgraph repository: actions-runner-controller/releases\n    workflow_b[\"release-runners.yaml\"] -- push --> A[\"GHCR: \\n actions-runner-controller/actions-runner:* \\n actions-runner-controller/actions-runner-dind:* \\n actions-runner-controller/actions-runner-dind-rootless:*\"]\n    workflow_b[\"release-runners.yaml\"] -- push --> B[\"DockerHub: \\n summerwind/actions-runner:* \\n summerwind/actions-runner-dind:* \\n summerwind/actions-runner-dind-rootless:*\"]\n    event_b{{\"workflow_dispatch\"}} -- triggers --> workflow_b[\"release-runners.yaml\"]\n    end\n```\n\n#### Release gha-runner-scale-set-controller image and helm charts\n\n1. Make sure the master branch is stable and all CI jobs are passing\n1. Prepare a release PR (example: <https://github.com/actions/actions-runner-controller/pull/2467>)\n   1. Bump up the version of the chart in: charts/gha-runner-scale-set-controller/Chart.yaml\n   2. Bump up the version of the chart in: charts/gha-runner-scale-set/Chart.yaml\n      1. Make sure that `version`, `appVersion` of both charts are always the same. These versions cannot diverge.\n   3. Update the quickstart guide to reflect the latest versions: docs/preview/gha-runner-scale-set-controller/README.md\n   4. Add changelog to the PR as well as the quickstart guide\n1. Merge the release PR\n1. Manually trigger the [(gha) Publish Helm Charts](https://github.com/actions/actions-runner-controller/actions/workflows/gha-publish-chart.yaml) workflow\n1. Manually create a tag and release in [actions/actions-runner-controller](https://github.com/actions/actions-runner-controller/releases) with the format: `gha-runner-scale-set-x.x.x` where the version (x.x.x) matches that of the Helm chart\n\n| Parameter                                       | Description                                                                                            | Default        |\n|-------------------------------------------------|--------------------------------------------------------------------------------------------------------|----------------|\n| `ref`                                           | The branch, tag or SHA to cut a release from.                                                          | default branch |\n| `release_tag_name`                              | The tag of the controller image. This is not a git tag.                                                | canary         |\n| `push_to_registries`                            | Push images to registries. Use false to test the build process.                                        | false          |\n| `publish_gha_runner_scale_set_controller_chart` | Publish new helm chart for gha-runner-scale-set-controller. This will push the new OCI archive to GHCR | false          |\n| `publish_gha_runner_scale_set_chart`            | Publish new helm chart for gha-runner-scale-set. This will push the new OCI archive to GHCR            | false          |\n\n#### Release actions/runner image\n\nA new runner image is built and published to <https://github.com/actions/runner/pkgs/container/actions-runner> whenever a new runner binary has been released. There's nothing to do here.\n\n#### Canary releases\n\nWe publish canary images for both the legacy actions-runner-controller and gha-runner-scale-set-controller images.\n\n```mermaid\nflowchart LR\n    subgraph org: actions\n    event_a{{\"push: [master]\"}} -- triggers --> workflow_a[\"publish-canary.yaml\"]\n    end\n    subgraph org: actions-runner-controller\n    workflow_a[\"publish-canary.yaml\"] -- triggers --> event_d{{\"repository_dispatch\"}} --> workflow_b[\"publish-canary.yaml\"]\n    workflow_b[\"publish-canary.yaml\"] -- push --> A[\"GHCR: \\nactions-runner-controller/actions-runner-controller:canary\"]\n    workflow_b[\"publish-canary.yaml\"] -- push --> B[\"DockerHub: \\nsummerwind/actions-runner-controller:canary\"]\n    end\n```\n\n1. [actions-runner-controller canary image](https://github.com/actions-runner-controller/actions-runner-controller/pkgs/container/actions-runner-controller)\n2. [gha-runner-scale-set-controller image](https://github.com/actions/actions-runner-controller/pkgs/container/gha-runner-scale-set-controller)\n\nThese canary images are automatically built and released on each push to the master branch.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.87109375,
          "content": "# Build the manager binary\nFROM --platform=$BUILDPLATFORM golang:1.22.4 as builder\n\nWORKDIR /workspace\n\n# Make it runnable on a distroless image/without libc\nENV CGO_ENABLED=0\n# Copy the Go Modules manifests\nCOPY go.mod go.sum ./\n\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer.\n#\n# Also, we need to do this before setting TARGETPLATFORM/TARGETOS/TARGETARCH/TARGETVARIANT\n# so that go mod cache is shared across platforms.\nRUN go mod download\n\n# Copy the go source\n# COPY . .\n\n# Usage:\n#   docker buildx build --tag repo/img:tag -f ./Dockerfile . --platform linux/amd64,linux/arm64,linux/arm/v7\n#\n# With the above commmand,\n# TARGETOS can be \"linux\", TARGETARCH can be \"amd64\", \"arm64\", and \"arm\", TARGETVARIANT can be \"v7\".\n\nARG TARGETPLATFORM TARGETOS TARGETARCH TARGETVARIANT VERSION=dev COMMIT_SHA=dev\n\n# We intentionally avoid `--mount=type=cache,mode=0777,target=/go/pkg/mod` in the `go mod download` and the `go build` runs\n# to avoid https://github.com/moby/buildkit/issues/2334\n# We can use docker layer cache so the build is fast enogh anyway\n# We also use per-platform GOCACHE for the same reason.\nENV GOCACHE /build/${TARGETPLATFORM}/root/.cache/go-build\n\n# Build\nRUN --mount=target=. \\\n  --mount=type=cache,mode=0777,target=${GOCACHE} \\\n  export GOOS=${TARGETOS} GOARCH=${TARGETARCH} GOARM=${TARGETVARIANT#v} && \\\n  go build -trimpath -ldflags=\"-s -w -X 'github.com/actions/actions-runner-controller/build.Version=${VERSION}' -X 'github.com/actions/actions-runner-controller/build.CommitSHA=${COMMIT_SHA}'\" -o /out/manager main.go && \\\n  go build -trimpath -ldflags=\"-s -w -X 'github.com/actions/actions-runner-controller/build.Version=${VERSION}' -X 'github.com/actions/actions-runner-controller/build.CommitSHA=${COMMIT_SHA}'\" -o /out/github-runnerscaleset-listener ./cmd/githubrunnerscalesetlistener && \\\n  go build -trimpath -ldflags=\"-s -w -X 'github.com/actions/actions-runner-controller/build.Version=${VERSION}' -X 'github.com/actions/actions-runner-controller/build.CommitSHA=${COMMIT_SHA}'\" -o /out/ghalistener ./cmd/ghalistener && \\\n  go build -trimpath -ldflags=\"-s -w\" -o /out/github-webhook-server ./cmd/githubwebhookserver && \\\n  go build -trimpath -ldflags=\"-s -w\" -o /out/actions-metrics-server ./cmd/actionsmetricsserver && \\\n  go build -trimpath -ldflags=\"-s -w\" -o /out/sleep ./cmd/sleep\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:nonroot\n\nWORKDIR /\n\nCOPY --from=builder /out/manager .\nCOPY --from=builder /out/github-webhook-server .\nCOPY --from=builder /out/actions-metrics-server .\nCOPY --from=builder /out/github-runnerscaleset-listener .\nCOPY --from=builder /out/ghalistener .\nCOPY --from=builder /out/sleep .\n\nUSER 65532:65532\n\nENTRYPOINT [\"/manager\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5830078125,
          "content": "\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2019 Moto Ishizawa\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 25.7421875,
          "content": "ifdef DOCKER_USER\n\tDOCKER_IMAGE_NAME ?= ${DOCKER_USER}/actions-runner-controller\nelse\n\tDOCKER_IMAGE_NAME ?= summerwind/actions-runner-controller\nendif\nDOCKER_USER ?= $(shell echo ${DOCKER_IMAGE_NAME} | cut -d / -f1)\nVERSION ?= dev\nCOMMIT_SHA = $(shell git rev-parse HEAD)\nRUNNER_VERSION ?= 2.321.0\nTARGETPLATFORM ?= $(shell arch)\nRUNNER_NAME ?= ${DOCKER_USER}/actions-runner\nRUNNER_TAG  ?= ${VERSION}\nTEST_REPO ?= ${DOCKER_USER}/actions-runner-controller\nTEST_ORG ?=\nTEST_ORG_REPO ?=\nTEST_EPHEMERAL ?= false\nSYNC_PERIOD ?= 1m\nUSE_RUNNERSET ?=\nKUBECONTEXT ?= kind-acceptance\nCLUSTER ?= acceptance\nCERT_MANAGER_VERSION ?= v1.1.1\nKUBE_RBAC_PROXY_VERSION ?= v0.11.0\nSHELLCHECK_VERSION ?= 0.8.0\n\n# Produce CRDs that work back to Kubernetes 1.11 (no version conversion)\nCRD_OPTIONS ?= \"crd:generateEmbeddedObjectMeta=true\"\n\n# Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)\nifeq (,$(shell go env GOBIN))\nGOBIN=$(shell go env GOPATH)/bin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\n\nTEST_ASSETS=$(PWD)/test-assets\nTOOLS_PATH=$(PWD)/.tools\n\nOS_NAME := $(shell uname -s | tr A-Z a-z)\n\n# The etcd packages that coreos maintain use different extensions for each *nix OS on their github release page.\n# ETCD_EXTENSION: the storage format file extension listed on the release page.\n# EXTRACT_COMMAND: the  appropriate CLI command for extracting this file format.\nifeq ($(OS_NAME), darwin)\nETCD_EXTENSION:=zip\nEXTRACT_COMMAND:=unzip\nelse\nETCD_EXTENSION:=tar.gz\nEXTRACT_COMMAND:=tar -xzf\nendif\n\n# default list of platforms for which multiarch image is built\nifeq (${PLATFORMS}, )\n\texport PLATFORMS=\"linux/amd64,linux/arm64\"\nendif\n\n# if IMG_RESULT is unspecified, by default the image will be pushed to registry\nifeq (${IMG_RESULT}, load)\n\texport PUSH_ARG=\"--load\"\n\t# if load is specified, image will be built only for the build machine architecture.\n\texport PLATFORMS=\"local\"\nelse ifeq (${IMG_RESULT}, cache)\n\t# if cache is specified, image will only be available in the build cache, it won't be pushed or loaded\n\t# therefore no PUSH_ARG will be specified\nelse\n\texport PUSH_ARG=\"--push\"\nendif\n\nall: manager\n\nlint:\n\tdocker run --rm -v $(PWD):/app -w /app golangci/golangci-lint:v1.57.2 golangci-lint run\n\nGO_TEST_ARGS ?= -short\n\n# Run tests\ntest: generate fmt vet manifests shellcheck\n\tgo test $(GO_TEST_ARGS) `go list ./... | grep -v ./test_e2e_arc` -coverprofile cover.out\n\tgo test -fuzz=Fuzz -fuzztime=10s -run=Fuzz* ./controllers/actions.summerwind.net\n\ntest-with-deps: kube-apiserver etcd kubectl\n\t# See https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/envtest#pkg-constants\n\tTEST_ASSET_KUBE_APISERVER=$(KUBE_APISERVER_BIN) \\\n\tTEST_ASSET_ETCD=$(ETCD_BIN) \\\n\tTEST_ASSET_KUBECTL=$(KUBECTL_BIN) \\\n\t  make test\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o bin/manager main.go\n\tgo build -o bin/github-runnerscaleset-listener ./cmd/githubrunnerscalesetlistener\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go\n\nrun-scaleset: generate fmt vet\n\tCONTROLLER_MANAGER_POD_NAMESPACE=default \\\n\tCONTROLLER_MANAGER_CONTAINER_IMAGE=\"${DOCKER_IMAGE_NAME}:${VERSION}\" \\\n\tgo run -ldflags=\"-s -w -X 'github.com/actions/actions-runner-controller/build.Version=$(VERSION)'\" \\\n\t./main.go --auto-scaling-runner-set-only\n\n# Install CRDs into a cluster\ninstall: manifests\n\tkustomize build config/crd | kubectl apply --server-side -f -\n\n# Uninstall CRDs from a cluster\nuninstall: manifests\n\tkustomize build config/crd | kubectl delete -f -\n\n# Deploy controller in the configured Kubernetes cluster in ~/.kube/config\ndeploy: manifests\n\tcd config/manager && kustomize edit set image controller=${DOCKER_IMAGE_NAME}:${VERSION}\n\tkustomize build config/default | kubectl apply --server-side -f -\n\n# Generate manifests e.g. CRD, RBAC etc.\nmanifests: manifests-gen-crds chart-crds\n\nmanifests-gen-crds: controller-gen yq\n\t$(CONTROLLER_GEN) $(CRD_OPTIONS) rbac:roleName=manager-role webhook paths=\"./...\" output:crd:artifacts:config=config/crd/bases\n\tfor YAMLFILE in config/crd/bases/actions*.yaml; do \\\n\t\t$(YQ) '.spec.preserveUnknownFields = false' --inplace \"$$YAMLFILE\" ; \\\n\tdone\n\tmake manifests-gen-crds-fix DELETE_KEY=x-kubernetes-list-type\n\tmake manifests-gen-crds-fix DELETE_KEY=x-kubernetes-list-map-keys\n\nmanifests-gen-crds-fix: DELETE_KEY ?=\nmanifests-gen-crds-fix:\n\t#runners\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.sidecarContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.dockerdContainerResources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.workVolumeClaimTemplate.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runners.yaml\n\t#runnerreplicasets\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.sidecarContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.dockerdContainerResources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.workVolumeClaimTemplate.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerreplicasets.yaml\n\t#runnerdeployments\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.sidecarContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.dockerdContainerResources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.workVolumeClaimTemplate.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnerdeployments.yaml\n\t#runnersets\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.volumeClaimTemplates.items.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.workVolumeClaimTemplate.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.summerwind.dev_runnersets.yaml\n\t#autoscalingrunnersets\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_autoscalingrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_autoscalingrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_autoscalingrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_autoscalingrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_autoscalingrunnersets.yaml\n\t#ehemeralrunnersets\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.template.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.ephemeralRunnerSpec.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.ephemeralRunnerSpec.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.ephemeralRunnerSpec.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.ephemeralRunnerSpec.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunnersets.yaml\n\t# ephemeralrunners\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.spec.properties.ephemeralContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.spec.properties.containers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.spec.properties.initContainers.items.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunners.yaml\n\t$(YQ) 'del(.spec.versions[].schema.openAPIV3Schema.properties.spec.properties.spec.properties.volumes.items.properties.ephemeral.properties.volumeClaimTemplate.properties.spec.properties.resources.properties.claims.$(DELETE_KEY))' --inplace config/crd/bases/actions.github.com_ephemeralrunners.yaml\n\nchart-crds:\n\tcp config/crd/bases/*.yaml charts/actions-runner-controller/crds/\n\tcp config/crd/bases/actions.github.com_autoscalingrunnersets.yaml charts/gha-runner-scale-set-controller/crds/\n\tcp config/crd/bases/actions.github.com_autoscalinglisteners.yaml charts/gha-runner-scale-set-controller/crds/\n\tcp config/crd/bases/actions.github.com_ephemeralrunnersets.yaml charts/gha-runner-scale-set-controller/crds/\n\tcp config/crd/bases/actions.github.com_ephemeralrunners.yaml charts/gha-runner-scale-set-controller/crds/\n\trm charts/actions-runner-controller/crds/actions.github.com_autoscalingrunnersets.yaml\n\trm charts/actions-runner-controller/crds/actions.github.com_autoscalinglisteners.yaml\n\trm charts/actions-runner-controller/crds/actions.github.com_ephemeralrunnersets.yaml\n\trm charts/actions-runner-controller/crds/actions.github.com_ephemeralrunners.yaml\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\n# Run go vet against code\nvet:\n\tgo vet ./...\n\n# Generate code\ngenerate: controller-gen\n\t$(CONTROLLER_GEN) object:headerFile=./hack/boilerplate.go.txt paths=\"./...\"\n\n# Run shellcheck on runner scripts\nshellcheck: shellcheck-install\n\t$(TOOLS_PATH)/shellcheck --shell bash --source-path runner runner/*.sh hack/*.sh\n\ndocker-buildx:\n\texport DOCKER_CLI_EXPERIMENTAL=enabled ;\\\n\texport DOCKER_BUILDKIT=1\n\t@if ! docker buildx ls | grep -q container-builder; then\\\n\t\tdocker buildx create --platform ${PLATFORMS} --name container-builder --use;\\\n\tfi\n\tdocker buildx build --platform ${PLATFORMS} \\\n\t\t--build-arg RUNNER_VERSION=${RUNNER_VERSION} \\\n\t\t--build-arg DOCKER_VERSION=${DOCKER_VERSION} \\\n\t\t--build-arg VERSION=${VERSION} \\\n\t\t--build-arg COMMIT_SHA=${COMMIT_SHA} \\\n\t\t-t \"${DOCKER_IMAGE_NAME}:${VERSION}\" \\\n\t\t-f Dockerfile \\\n\t\t. ${PUSH_ARG}\n\n# Push the docker image\ndocker-push:\n\tdocker push ${DOCKER_IMAGE_NAME}:${VERSION}\n\tdocker push ${RUNNER_NAME}:${RUNNER_TAG}\n\n# Generate the release manifest file\nrelease: manifests\n\tcd config/manager && kustomize edit set image controller=${DOCKER_IMAGE_NAME}:${VERSION}\n\tmkdir -p release\n\tkustomize build config/default > release/actions-runner-controller.yaml\n\n.PHONY: release/clean\nrelease/clean:\n\trm -rf release\n\n.PHONY: acceptance\nacceptance: release/clean acceptance/pull docker-build release\n\tACCEPTANCE_TEST_SECRET_TYPE=token make acceptance/run\n\tACCEPTANCE_TEST_SECRET_TYPE=app make acceptance/run\n\tACCEPTANCE_TEST_DEPLOYMENT_TOOL=helm ACCEPTANCE_TEST_SECRET_TYPE=token make acceptance/run\n\tACCEPTANCE_TEST_DEPLOYMENT_TOOL=helm ACCEPTANCE_TEST_SECRET_TYPE=app make acceptance/run\n\nacceptance/run: acceptance/kind acceptance/load acceptance/setup acceptance/deploy acceptance/tests acceptance/teardown\n\nacceptance/kind:\n\tkind create cluster --name ${CLUSTER} --config acceptance/kind.yaml\n\n# Set TMPDIR to somewhere under $HOME when you use docker installed with Ubuntu snap\n# Otherwise `load docker-image` fail while running `docker save`.\n# See https://kind.sigs.k8s.io/docs/user/known-issues/#docker-installed-with-snap\nacceptance/load:\n\tkind load docker-image ${DOCKER_IMAGE_NAME}:${VERSION} --name ${CLUSTER}\n\tkind load docker-image quay.io/brancz/kube-rbac-proxy:$(KUBE_RBAC_PROXY_VERSION) --name ${CLUSTER}\n\tkind load docker-image ${RUNNER_NAME}:${RUNNER_TAG} --name ${CLUSTER}\n\tkind load docker-image docker:dind --name ${CLUSTER}\n\tkind load docker-image quay.io/jetstack/cert-manager-controller:$(CERT_MANAGER_VERSION) --name ${CLUSTER}\n\tkind load docker-image quay.io/jetstack/cert-manager-cainjector:$(CERT_MANAGER_VERSION) --name ${CLUSTER}\n\tkind load docker-image quay.io/jetstack/cert-manager-webhook:$(CERT_MANAGER_VERSION) --name ${CLUSTER}\n\tkubectl cluster-info --context ${KUBECONTEXT}\n\n# Pull the docker images for acceptance\nacceptance/pull:\n\tdocker pull quay.io/brancz/kube-rbac-proxy:$(KUBE_RBAC_PROXY_VERSION)\n\tdocker pull docker:dind\n\tdocker pull quay.io/jetstack/cert-manager-controller:$(CERT_MANAGER_VERSION)\n\tdocker pull quay.io/jetstack/cert-manager-cainjector:$(CERT_MANAGER_VERSION)\n\tdocker pull quay.io/jetstack/cert-manager-webhook:$(CERT_MANAGER_VERSION)\n\nacceptance/setup:\n\tkubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/$(CERT_MANAGER_VERSION)/cert-manager.yaml\t#kubectl create namespace actions-runner-system\n\tkubectl -n cert-manager wait deploy/cert-manager-cainjector --for condition=available --timeout 90s\n\tkubectl -n cert-manager wait deploy/cert-manager-webhook --for condition=available --timeout 60s\n\tkubectl -n cert-manager wait deploy/cert-manager --for condition=available --timeout 60s\n\tkubectl create namespace actions-runner-system || true\n\t# Adhocly wait for some time until cert-manager's admission webhook gets ready\n\tsleep 5\n\nacceptance/teardown:\n\tkind delete cluster --name ${CLUSTER}\n\nacceptance/deploy:\n\tDOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME} DOCKER_USER=${DOCKER_USER} VERSION=${VERSION} RUNNER_NAME=${RUNNER_NAME} RUNNER_TAG=${RUNNER_TAG} TEST_REPO=${TEST_REPO} \\\n\tTEST_ORG=${TEST_ORG} TEST_ORG_REPO=${TEST_ORG_REPO} SYNC_PERIOD=${SYNC_PERIOD} \\\n\tUSE_RUNNERSET=${USE_RUNNERSET} \\\n\tTEST_EPHEMERAL=${TEST_EPHEMERAL} \\\n\tacceptance/deploy.sh\n\nacceptance/tests:\n\tacceptance/checks.sh\n\nacceptance/runner/startup:\n\tcd test/startup/ && bash test.sh\n\n# We use -count=1 instead of `go clean -testcache`\n# See https://terratest.gruntwork.io/docs/testing-best-practices/avoid-test-caching/\n.PHONY: e2e\ne2e:\n\tgo test -count=1 -v -timeout 600s -run '^TestE2E$$' ./test/e2e\n\n# Upload release file to GitHub.\ngithub-release: release\n\tghr ${VERSION} release/\n\n# Find or download controller-gen\n#\n# Note that controller-gen newer than 0.4.1 is needed for https://github.com/kubernetes-sigs/controller-tools/issues/444#issuecomment-680168439\n# Otherwise we get errors like the below:\n#   Error: failed to install CRD crds/actions.summerwind.dev_runnersets.yaml: CustomResourceDefinition.apiextensions.k8s.io \"runnersets.actions.summerwind.dev\" is invalid: [spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[spec].properties[containers].items.properties[ports].items.properties[protocol].default: Required value: this property is in x-kubernetes-list-map-keys, so it must have a default or be a required property, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[spec].properties[initContainers].items.properties[ports].items.properties[protocol].default: Required value: this property is in x-kubernetes-list-map-keys, so it must have a default or be a required property]\n#\n# Note that controller-gen newer than 0.6.2 is needed due to https://github.com/kubernetes-sigs/controller-tools/issues/448\n# Otherwise ObjectMeta embedded in Spec results in empty on the storage.\ncontroller-gen:\nifeq (, $(shell which controller-gen))\nifeq (, $(wildcard $(GOBIN)/controller-gen))\n\t@{ \\\n\tset -e ;\\\n\tCONTROLLER_GEN_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$CONTROLLER_GEN_TMP_DIR ;\\\n\tgo mod init tmp ;\\\n\tgo install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.14.0 ;\\\n\trm -rf $$CONTROLLER_GEN_TMP_DIR ;\\\n\t}\nendif\nCONTROLLER_GEN=$(GOBIN)/controller-gen\nelse\nCONTROLLER_GEN=$(shell which controller-gen)\nendif\n\n# find or download yq\n# download yq if necessary\n# Use always go-version to get consistent line wraps etc.\nyq:\nifeq (, $(wildcard $(GOBIN)/yq))\n\techo \"Downloading yq\"\n\t@{ \\\n\tset -e ;\\\n\tYQ_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$YQ_TMP_DIR ;\\\n\tgo mod init tmp ;\\\n\tgo install github.com/mikefarah/yq/v4@v4.25.3 ;\\\n\trm -rf $$YQ_TMP_DIR ;\\\n\t}\nendif\nYQ=$(GOBIN)/yq\n\n# find or download shellcheck\n# download shellcheck if necessary\nshellcheck-install:\nifeq (, $(wildcard $(TOOLS_PATH)/shellcheck))\n\techo \"Downloading shellcheck\"\n\t@{ \\\n\tset -e ;\\\n\tSHELLCHECK_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$SHELLCHECK_TMP_DIR ;\\\n\tcurl -LO https://github.com/koalaman/shellcheck/releases/download/v$(SHELLCHECK_VERSION)/shellcheck-v$(SHELLCHECK_VERSION).$(OS_NAME).x86_64.tar.xz ;\\\n\ttar Jxvf shellcheck-v$(SHELLCHECK_VERSION).$(OS_NAME).x86_64.tar.xz ;\\\n\tcd $(CURDIR) ;\\\n\tmkdir -p $(TOOLS_PATH) ;\\\n\tmv $$SHELLCHECK_TMP_DIR/shellcheck-v$(SHELLCHECK_VERSION)/shellcheck $(TOOLS_PATH)/ ;\\\n\trm -rf $$SHELLCHECK_TMP_DIR ;\\\n\t}\nendif\nSHELLCHECK=$(TOOLS_PATH)/shellcheck\n\n# find or download etcd\netcd:\nifeq (, $(shell which etcd))\nifeq (, $(wildcard $(TEST_ASSETS)/etcd))\n\t@{ \\\n\tset -xe ;\\\n\tINSTALL_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$INSTALL_TMP_DIR ;\\\n\twget https://github.com/coreos/etcd/releases/download/v3.4.22/etcd-v3.4.22-$(OS_NAME)-amd64.$(ETCD_EXTENSION);\\\n\tmkdir -p $(TEST_ASSETS) ;\\\n\t$(EXTRACT_COMMAND) etcd-v3.4.22-$(OS_NAME)-amd64.$(ETCD_EXTENSION) ;\\\n\tmv etcd-v3.4.22-$(OS_NAME)-amd64/etcd $(TEST_ASSETS)/etcd ;\\\n\trm -rf $$INSTALL_TMP_DIR ;\\\n\t}\nETCD_BIN=$(TEST_ASSETS)/etcd\nelse\nETCD_BIN=$(TEST_ASSETS)/etcd\nendif\nelse\nETCD_BIN=$(shell which etcd)\nendif\n\n# find or download kube-apiserver\nkube-apiserver:\nifeq (, $(shell which kube-apiserver))\nifeq (, $(wildcard $(TEST_ASSETS)/kube-apiserver))\n\t@{ \\\n\tset -xe ;\\\n\tINSTALL_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$INSTALL_TMP_DIR ;\\\n\twget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_$(OS_NAME)_amd64.tar.gz ;\\\n\tmkdir -p $(TEST_ASSETS) ;\\\n\ttar zxvf kubebuilder_2.3.2_$(OS_NAME)_amd64.tar.gz ;\\\n\tmv kubebuilder_2.3.2_$(OS_NAME)_amd64/bin/kube-apiserver $(TEST_ASSETS)/kube-apiserver ;\\\n\trm -rf $$INSTALL_TMP_DIR ;\\\n\t}\nKUBE_APISERVER_BIN=$(TEST_ASSETS)/kube-apiserver\nelse\nKUBE_APISERVER_BIN=$(TEST_ASSETS)/kube-apiserver\nendif\nelse\nKUBE_APISERVER_BIN=$(shell which kube-apiserver)\nendif\n\n# find or download kubectl\nkubectl:\nifeq (, $(shell which kubectl))\nifeq (, $(wildcard $(TEST_ASSETS)/kubectl))\n\t@{ \\\n\tset -xe ;\\\n\tINSTALL_TMP_DIR=$$(mktemp -d) ;\\\n\tcd $$INSTALL_TMP_DIR ;\\\n\twget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_$(OS_NAME)_amd64.tar.gz ;\\\n\tmkdir -p $(TEST_ASSETS) ;\\\n\ttar zxvf kubebuilder_2.3.2_$(OS_NAME)_amd64.tar.gz ;\\\n\tmv kubebuilder_2.3.2_$(OS_NAME)_amd64/bin/kubectl $(TEST_ASSETS)/kubectl ;\\\n\trm -rf $$INSTALL_TMP_DIR ;\\\n\t}\nKUBECTL_BIN=$(TEST_ASSETS)/kubectl\nelse\nKUBECTL_BIN=$(TEST_ASSETS)/kubectl\nendif\nelse\nKUBECTL_BIN=$(shell which kubectl)\nendif\n"
        },
        {
          "name": "PROJECT",
          "type": "blob",
          "size": 0.517578125,
          "content": "domain: summerwind.dev\nrepo: github.com/actions/actions-runner-controller\nresources:\n- group: actions\n  kind: Runner\n  version: v1alpha1\n- group: actions\n  kind: RunnerReplicaSet\n  version: v1alpha1\n- group: actions\n  kind: RunnerDeployment\n  version: v1alpha1\n- group: actions\n  kind: AutoscalingRunnerSet\n  version: v1alpha1\n- group: actions\n  kind: EphemeralRunnerSet\n  version: v1alpha1\n- group: actions\n  kind: EphemeralRunner\n  version: v1alpha1\n- group: actions\n  kind: AutoscalingListener\n  version: v1alpha1\nversion: \"2\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.2568359375,
          "content": "# Actions Runner Controller (ARC)\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/6061/badge)](https://bestpractices.coreinfrastructure.org/projects/6061)\n[![awesome-runners](https://img.shields.io/badge/listed%20on-awesome--runners-blue.svg)](https://github.com/jonico/awesome-runners)\n[![Artifact Hub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/actions-runner-controller)](https://artifacthub.io/packages/search?repo=actions-runner-controller)\n\n## About\n\nActions Runner Controller (ARC) is a Kubernetes operator that orchestrates and scales self-hosted runners for GitHub Actions.\n\nWith ARC, you can create runner scale sets that automatically scale based on the number of workflows running in your repository, organization, or enterprise. Because controlled runners can be ephemeral and based on containers, new runner instances can scale up or down rapidly and cleanly. For more information about autoscaling, see [\"Autoscaling with self-hosted runners.\"](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/autoscaling-with-self-hosted-runners)\n\nYou can set up ARC on Kubernetes using Helm, then create and run a workflow that uses runner scale sets. For more information about runner scale sets, see [\"Deploying runner scale sets with Actions Runner Controller.\"](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/deploying-runner-scale-sets-with-actions-runner-controller#runner-scale-set)\n## People\n\nActions Runner Controller (ARC) is an open-source project currently developed and maintained in collaboration with the GitHub Actions team, external maintainers @mumoshu and @toast-gear, various [contributors](https://github.com/actions/actions-runner-controller/graphs/contributors), and the [awesome community](https://github.com/actions/actions-runner-controller/discussions).\n\nIf you think the project is awesome and is adding value to your business, please consider directly sponsoring [community maintainers](https://github.com/sponsors/actions-runner-controller) and individual contributors via GitHub Sponsors.\n\nIn case you are already the employer of one of contributors, sponsoring via GitHub Sponsors might not be an option. Just support them in other means!\n\nSee [the sponsorship dashboard](https://github.com/sponsors/actions-runner-controller) for the former and the current sponsors.\n\n## Getting Started\n\nTo give ARC a try with just a handful of commands, Please refer to the [Quickstart guide](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/quickstart-for-actions-runner-controller).\n\nFor an overview of ARC, please refer to [About ARC](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/about-actions-runner-controller)\n\nWith the introduction of [autoscaling runner scale sets](https://github.com/actions/actions-runner-controller/discussions/2775), the existing [autoscaling modes](./docs/automatically-scaling-runners.md) are now legacy. The legacy modes have certain use cases and will continue to be maintained by the community only.\n\nFor further information on what is supported by GitHub and what's managed by the community, please refer to [this announcement discussion.](https://github.com/actions/actions-runner-controller/discussions/2775)\n\n### Documentation\n\nARC documentation is available on [docs.github.com](https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/quickstart-for-actions-runner-controller).\n\n### Legacy documentation\n\nThe following documentation is for the legacy autoscaling modes that continue to be maintained by the community\n\n- [Quickstart guide](/docs/quickstart.md)\n- [About ARC](/docs/about-arc.md)\n- [Installing ARC](/docs/installing-arc.md)\n- [Authenticating to the GitHub API](/docs/authenticating-to-the-github-api.md)\n- [Deploying ARC runners](/docs/deploying-arc-runners.md)\n- [Adding ARC runners to a repository, organization, or enterprise](/docs/choosing-runner-destination.md)\n- [Automatically scaling runners](/docs/automatically-scaling-runners.md)\n- [Using custom volumes](/docs/using-custom-volumes.md)\n- [Using ARC runners in a workflow](/docs/using-arc-runners-in-a-workflow.md)\n- [Managing access with runner groups](/docs/managing-access-with-runner-groups.md)\n- [Configuring Windows runners](/docs/configuring-windows-runners.md)\n- [Using ARC across organizations](/docs/using-arc-across-organizations.md)\n- [Using entrypoint features](/docs/using-entrypoint-features.md)\n- [Deploying alternative runners](/docs/deploying-alternative-runners.md)\n- [Monitoring and troubleshooting](/docs/monitoring-and-troubleshooting.md)\n\n## Contributing\n\nWe welcome contributions from the community. For more details on contributing to the project (including requirements), please refer to \"[Getting Started with Contributing](https://github.com/actions/actions-runner-controller/blob/master/CONTRIBUTING.md).\"\n\n## Troubleshooting\n\nWe are very happy to help you with any issues you have. Please refer to the \"[Troubleshooting](https://github.com/actions/actions-runner-controller/blob/master/TROUBLESHOOTING.md)\" section for common issues.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.6923828125,
          "content": "Thanks for helping make GitHub safe for everyone.\n\n## Security\n\nGitHub takes the security of our software products and services seriously, including all of the open source code repositories managed through our GitHub organizations, such as [GitHub](https://github.com/GitHub).\n\nEven though [open source repositories are outside of the scope of our bug bounty program](https://bounty.github.com/index.html#scope) and therefore not eligible for bounty rewards, we will ensure that your finding gets passed along to the appropriate maintainers for remediation. \n\n## Reporting Security Issues\n\nIf you believe you have found a security vulnerability in any GitHub-owned repository, please report it to us through coordinated disclosure.\n\n**Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**\n\nInstead, please send an email to opensource-security[@]github.com.\n\nPlease include as much of the information listed below as you can to help us better understand and resolve the issue:\n\n  * The type of issue (e.g., buffer overflow, SQL injection, or cross-site scripting)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\n## Policy\n\nSee [GitHub's Safe Harbor Policy](https://docs.github.com/en/github/site-policy/github-bug-bounty-program-legal-safe-harbor#1-safe-harbor-terms)"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 15.5322265625,
          "content": "# Troubleshooting\n\n* [Tools](#tools)\n* [Installation](#installation)\n  * [InternalError when calling webhook: context deadline exceeded](#internalerror-when-calling-webhook-context-deadline-exceeded)\n  * [Invalid header field value](#invalid-header-field-value)\n  * [Helm chart install failure: certificate signed by unknown authority](#helm-chart-install-failure-certificate-signed-by-unknown-authority)\n* [Operations](#operations)\n  * [Stuck runner kind or backing pod](#stuck-runner-kind-or-backing-pod)\n  * [Delay in jobs being allocated to runners](#delay-in-jobs-being-allocated-to-runners)\n  * [Runner coming up before network available](#runner-coming-up-before-network-available)\n  * [Outgoing network action hangs indefinitely](#outgoing-network-action-hangs-indefinitely)\n  * [Unable to scale to zero with TotalNumberOfQueuedAndInProgressWorkflowRuns](#unable-to-scale-to-zero-with-totalnumberofqueuedandinprogressworkflowruns)\n  * [Slow / failure to boot dind sidecar (default runner)](#slow--failure-to-boot-dind-sidecar-default-runner)\n\n## Tools\n\nA list of tools which are helpful for troubleshooting\n\n* [Kubernetes resources hierarchy parsing tool `kubectl-fields`](https://github.com/rewanthtammana/kubectl-fields)\n* [Multi pod and container log tailing for Kubernetes `stern`](https://github.com/stern/stern)\n\n## Installation\n\nTroubeshooting runbooks that relate to ARC installation problems\n\n### InternalError when calling webhook: context deadline exceeded\n\n**Problem**\n\nThis issue can come up for various reasons like leftovers from previous installations or not being able to access the K8s service's clusterIP associated with the admission webhook server (of ARC).\n\n```text\nInternal error occurred: failed calling webhook \"mutate.runnerdeployment.actions.summerwind.dev\":\nPost \"https://actions-runner-controller-webhook.actions-runner-system.svc:443/mutate-actions-summerwind-dev-v1alpha1-runnerdeployment?timeout=10s\": context deadline exceeded\n```\n\n**Solution**\n\nFirst we will try the common solution of checking webhook leftovers from previous installations:\n\n1. ```bash\n   kubectl get validatingwebhookconfiguration -A\n   kubectl get mutatingwebhookconfiguration -A\n   ```\n\n2. If you see any webhooks related to actions-runner-controller, delete them:\n\n    ```bash\n    kubectl delete mutatingwebhookconfiguration actions-runner-controller-mutating-webhook-configuration\n    kubectl delete validatingwebhookconfiguration actions-runner-controller-validating-webhook-configuration\n    ```\n\nIf that didn't work then probably your K8s control-plane is somehow unable to access the K8s service's clusterIP associated with the admission webhook server:\n\n1. You're running apiserver as a binary and you didn't make service cluster IPs available to the host network. \n2. You're running the apiserver in the pod but your pod network (i.e. CNI plugin installation and config) is not good so your pods(like kube-apiserver) in the K8s control-plane nodes can't access ARC's admission webhook server pod(s) in probably data-plane nodes.\n\nAnother reason could be due to GKEs firewall settings you may run into the following errors when trying to deploy runners on a private GKE cluster:\n\nTo fix this, you may either:\n\n1. Configure the webhook to use another port, such as 443 or 10250, [each of\n   which allow traffic by default](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#add_firewall_rules).\n\n   ```sh\n   # With helm, you'd set `webhookPort` to the port number of your choice\n   # See https://github.com/actions/actions-runner-controller/pull/1410/files for more information\n   helm upgrade --install --namespace actions-runner-system --create-namespace \\\n                --wait actions-runner-controller actions-runner-controller/actions-runner-controller \\\n                --set webhookPort=10250\n   ```\n\n2. Set up a firewall rule to allow the master node to connect to the default\n   webhook port. The exact way to do this may vary, but the following script\n   should point you in the right direction:\n\n   ```sh\n   # 1) Retrieve the network tag automatically given to the worker nodes\n   # NOTE: this only works if you have only one cluster in your GCP project. You will have to manually inspect the result of this command to find the tag for the cluster you want to target\n   WORKER_NODES_TAG=$(gcloud compute instances list --format='text(tags.items[0])' --filter='metadata.kubelet-config:*' | grep tags | awk '{print $2}' | sort | uniq)\n\n   # 2) Take note of the VPC network in which you deployed your cluster\n   # NOTE this only works if you have only one network in which you deploy your clusters\n   NETWORK=$(gcloud compute instances list --format='text(networkInterfaces[0].network)' --filter='metadata.kubelet-config:*' | grep networks | awk -F'/' '{print $NF}' | sort | uniq)\n\n   # 3) Get the master source ip block\n   SOURCE=$(gcloud container clusters describe <cluster-name> --region <region> | grep masterIpv4CidrBlock| cut -d ':' -f 2 | tr -d ' ')\n\n   gcloud compute firewall-rules create k8s-cert-manager --source-ranges $SOURCE --target-tags $WORKER_NODES_TAG  --allow TCP:9443 --network $NETWORK\n   ```\n\n### Invalid header field value\n\n**Problem**\n\n```json\n2020-11-12T22:17:30.693Z ERROR controller-runtime.controller Reconciler error \n{\n  \"controller\": \"runner\",\n  \"request\": \"actions-runner-system/runner-deployment-dk7q8-dk5c9\",\n  \"error\": \"failed to create registration token: Post \\\"https://api.github.com/orgs/$YOUR_ORG_HERE/actions/runners/registration-token\\\": net/http: invalid header field value \\\"Bearer $YOUR_TOKEN_HERE\\\\n\\\" for key Authorization\"\n}\n```\n\n**Solution**\n\nYour base64'ed PAT token has a new line at the end, it needs to be created without a `\\n` added, either:\n\n* `echo -n $TOKEN | base64`\n* Create the secret as described in the docs using the shell and documented flags\n\n### Helm chart install failure: certificate signed by unknown authority\n\n**Problem**\n\n```text\nError: UPGRADE FAILED: failed to create resource: Internal error occurred: failed calling webhook \"webhook.cert-manager.io\": failed to call webhook: Post \"https://cert-manager-webhook.cert-manager.svc:443/mutate?timeout=10s\": x509: certificate signed by unknown authority\n```\n\nApparently, it's failing while `helm` is creating one of resources defined in the ARC chart and the cause was that cert-manager's webhook is not working correctly, due to the missing or the invalid CA certficate.\n\nYou'd try to tail logs from the `cert-manager-cainjector` and see it's failing with an error like:\n\n```text\n$ kubectl -n cert-manager logs cert-manager-cainjector-7cdbb9c945-g6bt4\nI0703 03:31:55.159339       1 start.go:91] \"starting\" version=\"v1.1.1\" revision=\"3ac7418070e22c87fae4b22603a6b952f797ae96\"\nI0703 03:31:55.615061       1 leaderelection.go:243] attempting to acquire leader lease  kube-system/cert-manager-cainjector-leader-election...\nI0703 03:32:10.738039       1 leaderelection.go:253] successfully acquired lease kube-system/cert-manager-cainjector-leader-election\nI0703 03:32:10.739941       1 recorder.go:52] cert-manager/controller-runtime/manager/events \"msg\"=\"Normal\"  \"message\"=\"cert-manager-cainjector-7cdbb9c945-g6bt4_88e4bc70-eded-4343-a6fb-0ddd6434eb55 became leader\" \"object\"={\"kind\":\"ConfigMap\",\"namespace\":\"kube-system\",\"name\":\"cert-manager-cainjector-leader-election\",\"uid\":\"942a021e-364c-461a-978c-f54a95723cdc\",\"apiVersion\":\"v1\",\"resourceVersion\":\"1576\"} \"reason\"=\"LeaderElection\"\nE0703 03:32:11.192128       1 start.go:119] cert-manager/ca-injector \"msg\"=\"manager goroutine exited\" \"error\"=null\nI0703 03:32:12.339197       1 request.go:645] Throttling request took 1.047437675s, request: GET:https://10.96.0.1:443/apis/storage.k8s.io/v1beta1?timeout=32s\nE0703 03:32:13.143790       1 start.go:151] cert-manager/ca-injector \"msg\"=\"Error registering certificate based controllers. Retrying after 5 seconds.\" \"error\"=\"no matches for kind \\\"MutatingWebhookConfiguration\\\" in version \\\"admissionregistration.k8s.io/v1beta1\\\"\"\nError: error registering secret controller: no matches for kind \"MutatingWebhookConfiguration\" in version \"admissionregistration.k8s.io/v1beta1\"\n```\n\n**Solution**\n\nYour cluster is based on a new enough Kubernetes of version 1.22 or greater which does not support the legacy `admissionregistration.k8s.io/v1beta1` API anymore, and your `cert-manager` is not up-to-date hence it's still trying to use the leagcy Kubernetes API.\n\nIn many cases, it's not an option to downgrade Kubernetes. So, just upgrade `cert-manager` to a more recent version that does have have the support for the specific Kubernetes version you're using.\n\nSee <https://cert-manager.io/docs/installation/supported-releases/> for the list of available cert-manager versions.\n\n## Operations\n\nTroubeshooting runbooks that relate to ARC operational problems\n\n### Stuck runner kind or backing pod\n\n**Problem**\n\nSometimes either the runner kind (`kubectl get runners`) or it's underlying pod can get stuck in a terminating state for various reasons. You can get the kind unstuck by removing its finaliser using something like this:\n\n**Solution**\n\nRemove the finaliser from the relevent runner kind or pod\n\n```text\n# Get all kind runners and remove the finalizer\n$ kubectl get runners --no-headers | awk {'print $1'} | xargs kubectl patch runner --type merge -p '{\"metadata\":{\"finalizers\":null}}'\n\n# Get all pods that are stuck terminating and remove the finalizer\n$ kubectl -n get pods | grep Terminating | awk {'print $1'} | xargs kubectl patch pod -p '{\"metadata\":{\"finalizers\":null}}'\n```\n\n_Note the code assumes you have already selected the namespace your runners are in and that they \nare in a namespace not shared with anything else_\n\n### Delay in jobs being allocated to runners\n\n**Problem**\n\nARC isn't involved in jobs actually getting allocated to a runner. ARC is responsible for orchestrating runners and the runner lifecycle. Why some people see large delays in job allocation is not clear however it has been confirmed https://github.com/actions/actions-runner-controller/issues/1387#issuecomment-1122593984 that this is caused from the self-update process somehow.\n\n**Solution**\n\nDisable the self-update process in your runner manifests\n\n```yaml\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: example-runnerdeployment-with-sleep\nspec:\n  template:\n    spec:\n      ...\n      env:\n        - name: DISABLE_RUNNER_UPDATE\n          value: \"true\"\n```\n\n### Runner coming up before network available\n\n**Problem**\n\nIf you're running your action runners on a service mesh like Istio, you might\nhave problems with runner configuration accompanied by logs like:\n\n```text\n....\nrunner Starting Runner listener with startup type: service\nrunner Started listener process\nrunner An error occurred: Not configured\nrunner Runner listener exited with error code 2\nrunner Runner listener exit with retryable error, re-launch runner in 5 seconds.\n....\n```\n\nThis is because the `istio-proxy` has not completed configuring itself when the\nconfiguration script tries to communicate with the network.\n\nMore broadly, there are many other circumstances where the runner pod coming up first can cause issues.\n\n**Solution**\n\n> Added originally to help users with older istio instances.\n> Newer Istio instances can use Istio's `holdApplicationUntilProxyStarts` attribute ([istio/istio#11130](https://github.com/istio/istio/issues/11130)) to avoid having to delay starting up the runner.\n> Please read the discussion in [#592](https://github.com/actions/actions-runner-controller/pull/592) for more information.\n\nYou can add a delay to the runner's entrypoint script by setting the `STARTUP_DELAY_IN_SECONDS` environment variable for the runner pod. This will cause the script to sleep X seconds, this works with any runner kind.\n\n```yaml\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: example-runnerdeployment-with-sleep\nspec:\n  template:\n    spec:\n      ...\n      env:\n        - name: STARTUP_DELAY_IN_SECONDS\n          value: \"5\"\n```\n\n### Outgoing network action hangs indefinitely\n\n**Problem**\n\nSome random outgoing network actions hangs indefinitely. This could be because your cluster does not give Docker the standard MTU of 1500, you can check this out by running `ip link` in a pod that encounters the problem and reading the outgoing interface's MTU value. If it is smaller than 1500, then try the following.\n\n**Solution**\n\nAdd a `dockerMTU` key in your runner's spec with the value you read on the outgoing interface. For instance:\n\n```yaml\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: github-runner\n  namespace: github-system\nspec:\n  replicas: 6\n  template:\n    spec:\n      dockerMTU: 1400\n      repository: $username/$repo\n      env: []\n```\n\nIf the issue still persists, you can set the `ARC_DOCKER_MTU_PROPAGATION` to propagate the host MTU to networks created\nby the GitHub Runner. For instance:\n\n```yaml\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: github-runner\n  namespace: github-system\nspec:\n  replicas: 6\n  template:\n    spec:\n      dockerMTU: 1400\n      repository: $username/$repo\n      env:\n        - name: ARC_DOCKER_MTU_PROPAGATION\n          value: \"true\"\n```\n\nYou can read the discussion regarding this issue in\n[#1406](https://github.com/actions/actions-runner-controller/issues/1046).\n\n### Unable to scale to zero with TotalNumberOfQueuedAndInProgressWorkflowRuns\n\n**Problem**\n\nHRA doesn't scale the RunnerDeployment to zero, even though you did configure HRA correctly, to have a pull-based scaling metric `TotalNumberOfQueuedAndInProgressWorkflowRuns`, and set `minReplicas: 0`.\n\n**Solution**\n\nYou very likely have some dangling workflow jobs stuck in `queued` or `in_progress` as seen in [#1057](https://github.com/actions/actions-runner-controller/issues/1057#issuecomment-1133439061).\n\nManually call [the \"list workflow runs\" API](https://docs.github.com/en/rest/actions/workflow-runs#list-workflow-runs-for-a-repository), and [remove the dangling workflow job(s)](https://docs.github.com/en/rest/actions/workflow-runs#delete-a-workflow-run).\n\n### Slow / failure to boot dind sidecar (default runner)\n\n**Problem**\n\nIf you noticed that it takes several minutes for sidecar dind container to be created or it exits with with error just after being created it might indicate that you are experiencing disk performance issue. You might see message `failed to reserve container name` when scaling up multiple runners at once. When you ssh on kubernetes node that problematic pods were scheduled on you can use tools like `atop`, `htop` or `iotop` to check IO usage and cpu time percentage used on iowait. If you see that disk usage is high (80-100%) and iowaits are taking a significant chunk of you cpu time (normally it should not be higher than 10%) it means that performance is being bottlenecked by slow disk.\n\n**Solution**\n\nThe solution is to switch to using faster storage, if you are experiencing this issue you are probably using HDD storage. Switching to SSD storage fixed the problem in my case. Most cloud providers have a list of storage options to use just pick something faster that your current disk, for on prem clusters you will need to invest in some SSDs.\n\n### Dockerd no space left on device\n\n**Problem**\n\nIf you are running many containers on your runner you might encounter an issue where docker daemon is unable to start new containers and you see error `no space left on device`.  \n\n**Solution**\n\nAdd a `dockerVarRunVolumeSizeLimit` key in your runner's spec with a higher size limit (the default is 1M) For instance:\n\n```yaml\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: github-runner\n  namespace: github-system\nspec:\n  replicas: 6\n  template:\n    spec:\n      dockerVarRunVolumeSizeLimit: 50M\n      env: []\n```"
        },
        {
          "name": "acceptance",
          "type": "tree",
          "content": null
        },
        {
          "name": "apis",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "github",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.8818359375,
          "content": "module github.com/actions/actions-runner-controller\n\ngo 1.22.4\n\nrequire (\n\tgithub.com/bradleyfalzon/ghinstallation/v2 v2.12.0\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/evanphx/json-patch v5.9.0+incompatible\n\tgithub.com/go-logr/logr v1.4.1\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-github/v52 v52.0.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/gregjones/httpcache v0.0.0-20190611155906-901d90724c79\n\tgithub.com/gruntwork-io/terratest v0.46.7\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7\n\tgithub.com/kelseyhightower/envconfig v1.4.0\n\tgithub.com/onsi/ginkgo v1.16.5\n\tgithub.com/onsi/ginkgo/v2 v2.17.1\n\tgithub.com/onsi/gomega v1.33.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/prometheus/client_golang v1.17.0\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/teambition/rrule-go v1.8.2\n\tgo.uber.org/multierr v1.11.0\n\tgo.uber.org/zap v1.27.0\n\tgolang.org/x/net v0.25.0\n\tgolang.org/x/oauth2 v0.19.0\n\tgolang.org/x/sync v0.10.0\n\tgomodules.xyz/jsonpatch/v2 v2.4.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/api v0.28.4\n\tk8s.io/apimachinery v0.28.4\n\tk8s.io/client-go v0.28.4\n\tsigs.k8s.io/controller-runtime v0.16.3\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c // indirect\n\tgithub.com/aws/aws-sdk-go v1.44.122 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/boombuler/barcode v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/cloudflare/circl v1.3.7 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.0 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/evanphx/json-patch/v5 v5.7.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/ghodss/yaml v1.0.0 // indirect\n\tgithub.com/go-errors/errors v1.0.2-0.20180813162953-d98b870cc4e0 // indirect\n\tgithub.com/go-logr/zapr v1.3.0 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.20.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.22.4 // indirect\n\tgithub.com/go-sql-driver/mysql v1.4.1 // indirect\n\tgithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/google/gnostic-models v0.6.9-0.20230804172637-c7be7c783f49 // indirect\n\tgithub.com/google/go-github/v66 v66.0.0 // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a // indirect\n\tgithub.com/gruntwork-io/go-commons v0.8.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.0.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.0 // indirect\n\tgithub.com/imdario/mergo v0.3.16 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions/v2 v2.0.0 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/moby/spdystream v0.2.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/pquerna/otp v1.2.0 // indirect\n\tgithub.com/prometheus/client_model v0.5.0 // indirect\n\tgithub.com/prometheus/common v0.45.0 // indirect\n\tgithub.com/prometheus/procfs v0.12.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgithub.com/urfave/cli v1.22.2 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.4.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tgoogle.golang.org/appengine v1.6.8 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/apiextensions-apiserver v0.28.3 // indirect\n\tk8s.io/component-base v0.28.3 // indirect\n\tk8s.io/klog/v2 v2.110.1 // indirect\n\tk8s.io/kube-openapi v0.0.0-20231113174909-778a5567bc1e // indirect\n\tk8s.io/utils v0.0.0-20230726121419-3b25d923346b // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n)\n\nreplace github.com/gregjones/httpcache => github.com/actions-runner-controller/httpcache v0.2.0\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 34.330078125,
          "content": "github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c h1:kMFnB0vCcX7IL/m9Y5LO+KQYv+t1CQOiFe6+SV2J7bE=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c/go.mod h1:EjAoLdwvbIOoOQr3ihjnSoLZRtE8azugULFRteWMNc0=\ngithub.com/actions-runner-controller/httpcache v0.2.0 h1:hCNvYuVPJ2xxYBymqBvH0hSiQpqz4PHF/LbU3XghGNI=\ngithub.com/actions-runner-controller/httpcache v0.2.0/go.mod h1:JLu9/2M/btPz1Zu/vTZ71XzukQHn2YeISPmJoM5exBI=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/aws/aws-sdk-go v1.44.122 h1:p6mw01WBaNpbdP2xrisz5tIkcNwzj/HysobNoaAHjgo=\ngithub.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/boombuler/barcode v1.0.1 h1:NDBbPmhS+EqABEs5Kg3n/5ZNjy73Pz7SIV+KCeqyXcs=\ngithub.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/bradleyfalzon/ghinstallation/v2 v2.12.0 h1:k8oVjGhZel2qmCUsYwSE34jPNT9DL2wCBOtugsHv26g=\ngithub.com/bradleyfalzon/ghinstallation/v2 v2.12.0/go.mod h1:V4gJcNyAftH0rXpRp1SUVUuh+ACxOH1xOk/ZzkRHltg=\ngithub.com/bwesterb/go-ristretto v1.2.3/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cloudflare/circl v1.3.3/go.mod h1:5XYMA4rFBvNIrhs50XuiBJ15vF2pZn4nnUKZrLbUZFA=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0 h1:EoUDS0afbrsXAZ9YQ9jdu/mZ2sXgT1/2yyNng4PGlyM=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/evanphx/json-patch v5.9.0+incompatible h1:fBXyNpNMuTTDdquAq/uisOr2lShz4oaXpDTX2bLe7ls=\ngithub.com/evanphx/json-patch v5.9.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/evanphx/json-patch/v5 v5.7.0 h1:nJqP7uwL84RJInrohHfW0Fx3awjbm8qZeFv0nW9SYGc=\ngithub.com/evanphx/json-patch/v5 v5.7.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=\ngithub.com/go-errors/errors v1.0.2-0.20180813162953-d98b870cc4e0 h1:skJKxRtNmevLqnayafdLe2AsenqRupVmzZSqrvb5caU=\ngithub.com/go-errors/errors v1.0.2-0.20180813162953-d98b870cc4e0/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=\ngithub.com/go-logr/logr v1.3.0/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/zapr v1.3.0 h1:XGdV8XW8zdwFiwOA2Dryh1gj2KRQyOOoNmBy4EplIcQ=\ngithub.com/go-logr/zapr v1.3.0/go.mod h1:YKepepNBd1u/oyhd/yQmtjVXmm9uML4IXUgMOwR8/Gg=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonpointer v0.20.0 h1:ESKJdU9ASRfaPNOPRx12IUyA1vn3R9GiE3KYD14BXdQ=\ngithub.com/go-openapi/jsonpointer v0.20.0/go.mod h1:6PGzBjjIIumbLYysB73Klnms1mwnU4G3YHOECG3CedA=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=\ngithub.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-sql-driver/mysql v1.4.1 h1:g24URVg0OFbNUTx9qqY1IRZ9D9z3iPyi5zKhQZpNwpA=\ngithub.com/go-sql-driver/mysql v1.4.1/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/gnostic-models v0.6.9-0.20230804172637-c7be7c783f49 h1:0VpGH+cDhbDtdcweoyCVsF3fhN8kejK6rFe/2FFX2nU=\ngithub.com/google/gnostic-models v0.6.9-0.20230804172637-c7be7c783f49/go.mod h1:BkkQ4L1KS1xMt2aWSPStnn55ChGC0DPOn2FQYj+f25M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github/v52 v52.0.0 h1:uyGWOY+jMQ8GVGSX8dkSwCzlehU3WfdxQ7GweO/JP7M=\ngithub.com/google/go-github/v52 v52.0.0/go.mod h1:WJV6VEEUPuMo5pXqqa2ZCZEdbQqua4zAk2MZTIo+m+4=\ngithub.com/google/go-github/v66 v66.0.0 h1:ADJsaXj9UotwdgK8/iFZtv7MLc8E8WBl62WLd/D/9+M=\ngithub.com/google/go-github/v66 v66.0.0/go.mod h1:+4SO9Zkuyf8ytMj0csN1NR/5OTR+MfqPp8P8dVlcvY4=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a h1:fEBsGL/sjAuJrgah5XqmmYsTLzJp/TO9Lhy39gkverk=\ngithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a/go.mod h1:czg5+yv1E0ZGTi6S6vVK1mke0fV+FaUhNGcd6VRS9Ik=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gruntwork-io/go-commons v0.8.0 h1:k/yypwrPqSeYHevLlEDmvmgQzcyTwrlZGRaxEM6G0ro=\ngithub.com/gruntwork-io/go-commons v0.8.0/go.mod h1:gtp0yTtIBExIZp7vyIV9I0XQkVwiQZze678hvDXof78=\ngithub.com/gruntwork-io/terratest v0.46.7 h1:oqGPBBO87SEsvBYaA0R5xOq+Lm2Xc5dmFVfxEolfZeU=\ngithub.com/gruntwork-io/terratest v0.46.7/go.mod h1:6gI5MlLeyF+SLwqocA5GBzcTix+XiuxCy1BPwKuT+WM=\ngithub.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-multierror v1.1.0 h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/imdario/mergo v0.3.16 h1:wwQJbIsHYGMUyLSPrEq1CT16AhnhNJQ51+4fdHUnCl4=\ngithub.com/imdario/mergo v0.3.16/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\ngithub.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-zglob v0.0.1/go.mod h1:9fxibJccNxU2cnpIKLRRFA7zX7qhkJIQWBb449FYHOo=\ngithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326 h1:ofNAzWCcyTALn2Zv40+8XitdzCgXY6e9qvXwN9W0YXg=\ngithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326/go.mod h1:9fxibJccNxU2cnpIKLRRFA7zX7qhkJIQWBb449FYHOo=\ngithub.com/matttproud/golang_protobuf_extensions/v2 v2.0.0 h1:jWpvCLoY8Z/e3VKvlsiIGKtc+UG6U5vzxaoagmhXfyg=\ngithub.com/matttproud/golang_protobuf_extensions/v2 v2.0.0/go.mod h1:QUyp042oQthUoa9bqDv0ER0wrtXnBruoNd7aNjkbP+k=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/moby/spdystream v0.2.0 h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=\ngithub.com/moby/spdystream v0.2.0/go.mod h1:f7i0iNDQJ059oMTcWxx8MA/zKFIuD/lY+0GqbN2Wy8c=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.17.1 h1:V++EzdbhI4ZV4ev0UTIj0PzhzOcReJFyJaLjtSF55M8=\ngithub.com/onsi/ginkgo/v2 v2.17.1/go.mod h1:llBI3WDLL9Z6taip6f33H76YcWtJv+7R3HigUjbIBOs=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.33.0 h1:snPCflnZrpMsy94p4lXVEkHo12lmPnc3vY5XBbreexE=\ngithub.com/onsi/gomega v1.33.0/go.mod h1:+925n5YtiFsLzzafLUHzVMBpvvRAzrydIBiSIxjX3wY=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pquerna/otp v1.2.0 h1:/A3+Jn+cagqayeR3iHs/L62m5ue7710D35zl1zJ1kok=\ngithub.com/pquerna/otp v1.2.0/go.mod h1:dkJfzwRKNiegxyNb54X/3fLwhCynbMspSyWKnvi1AEg=\ngithub.com/prometheus/client_golang v1.17.0 h1:rl2sfwZMtSthVU752MqfjQozy7blglC+1SOtjMAMh+Q=\ngithub.com/prometheus/client_golang v1.17.0/go.mod h1:VeL+gMmOAxkS2IqfCq0ZmHSL+LjWfWDUmp1mBz9JgUY=\ngithub.com/prometheus/client_model v0.5.0 h1:VQw1hfvPvk3Uv6Qf29VrPF32JB6rtbgI6cYPYQjL0Qw=\ngithub.com/prometheus/client_model v0.5.0/go.mod h1:dTiFglRmd66nLR9Pv9f0mZi7B7fk5Pm3gvsjB5tr+kI=\ngithub.com/prometheus/common v0.45.0 h1:2BGz0eBc2hdMDLnO/8n0jeB3oPrt2D08CekT0lneoxM=\ngithub.com/prometheus/common v0.45.0/go.mod h1:YJmSTw9BoKxJplESWWxlbyttQR4uaEcGyv9MZjVOJsY=\ngithub.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=\ngithub.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/teambition/rrule-go v1.8.2 h1:lIjpjvWTj9fFUZCmuoVDrKVOtdiyzbzc93qTmRVe/J8=\ngithub.com/teambition/rrule-go v1.8.2/go.mod h1:Ieq5AbrKGciP1V//Wq8ktsTXwSwJHDD5mD/wLBGl3p4=\ngithub.com/urfave/cli v1.22.2 h1:gsqYFH8bb9ekPA12kRo0hfjngWQjkJPlN9R0N78BoUo=\ngithub.com/urfave/cli v1.22.2/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.3.1-0.20221117191849-2c476679df9a/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa h1:FRnLl4eNAQl8hwxVVC17teOw8kdjVDVAiFMtgUdTSRQ=\ngolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa/go.mod h1:zk2irFbV9DP96SEBUUAy67IdHUaZuSnrz1n472HUCLE=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/oauth2 v0.19.0 h1:9+E/EZBCbTLNrbN35fHv/a/d/mOBatymz1zbtQrXpIg=\ngolang.org/x/oauth2 v0.19.0/go.mod h1:vYi7skDa1x015PmRRYZ7+s1cWyPgrPiSYRe4rnsexc8=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.4.0 h1:Z81tqI5ddIoXDPvVQ7/7CC9TnLM7ubaFG2qXYd5BbYY=\ngolang.org/x/time v0.4.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngomodules.xyz/jsonpatch/v2 v2.4.0 h1:Ci3iUJyx9UeRx7CeFN8ARgGbkESwJK+KB9lLcWxY/Zw=\ngomodules.xyz/jsonpatch/v2 v2.4.0/go.mod h1:AH3dM2RI6uoBZxn3LVrfvJ3E0/9dG4cSrbuBJT4moAY=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.28.4 h1:8ZBrLjwosLl/NYgv1P7EQLqoO8MGQApnbgH8tu3BMzY=\nk8s.io/api v0.28.4/go.mod h1:axWTGrY88s/5YE+JSt4uUi6NMM+gur1en2REMR7IRj0=\nk8s.io/apiextensions-apiserver v0.28.3 h1:Od7DEnhXHnHPZG+W9I97/fSQkVpVPQx2diy+2EtmY08=\nk8s.io/apiextensions-apiserver v0.28.3/go.mod h1:NE1XJZ4On0hS11aWWJUTNkmVB03j9LM7gJSisbRt8Lc=\nk8s.io/apimachinery v0.28.4 h1:zOSJe1mc+GxuMnFzD4Z/U1wst50X28ZNsn5bhgIIao8=\nk8s.io/apimachinery v0.28.4/go.mod h1:wI37ncBvfAoswfq626yPTe6Bz1c22L7uaJ8dho83mgg=\nk8s.io/client-go v0.28.4 h1:Np5ocjlZcTrkyRJ3+T3PkXDpe4UpatQxj85+xjaD2wY=\nk8s.io/client-go v0.28.4/go.mod h1:0VDZFpgoZfelyP5Wqu0/r/TRYcLYuJ2U1KEeoaPa1N4=\nk8s.io/component-base v0.28.3 h1:rDy68eHKxq/80RiMb2Ld/tbH8uAE75JdCqJyi6lXMzI=\nk8s.io/component-base v0.28.3/go.mod h1:fDJ6vpVNSk6cRo5wmDa6eKIG7UlIQkaFmZN2fYgIUD8=\nk8s.io/klog/v2 v2.110.1 h1:U/Af64HJf7FcwMcXyKm2RPM22WZzyR7OSpYj5tg3cL0=\nk8s.io/klog/v2 v2.110.1/go.mod h1:YGtd1984u+GgbuZ7e08/yBuAfKLSO0+uR1Fhi6ExXjo=\nk8s.io/kube-openapi v0.0.0-20231113174909-778a5567bc1e h1:snPmy96t93RredGRjKfMFt+gvxuVAncqSAyBveJtr4Q=\nk8s.io/kube-openapi v0.0.0-20231113174909-778a5567bc1e/go.mod h1:AsvuZPBlUDVuCdzJ87iajxtXuR9oktsTctW/R9wwouA=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/controller-runtime v0.16.3 h1:2TuvuokmfXvDUamSx1SuAOO3eTyye+47mJCigwG62c4=\nsigs.k8s.io/controller-runtime v0.16.3/go.mod h1:j7bialYoSn142nv9sCOJmQgDXQXxnroFU4VnX/brVJ0=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "hash",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 20.0029296875,
          "content": "/*\nCopyright 2020 The actions-runner-controller authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n\n\tgithubv1alpha1 \"github.com/actions/actions-runner-controller/apis/actions.github.com/v1alpha1\"\n\tsummerwindv1alpha1 \"github.com/actions/actions-runner-controller/apis/actions.summerwind.net/v1alpha1\"\n\t\"github.com/actions/actions-runner-controller/build\"\n\tactionsgithubcom \"github.com/actions/actions-runner-controller/controllers/actions.github.com\"\n\tactionsgithubcommetrics \"github.com/actions/actions-runner-controller/controllers/actions.github.com/metrics\"\n\tactionssummerwindnet \"github.com/actions/actions-runner-controller/controllers/actions.summerwind.net\"\n\t\"github.com/actions/actions-runner-controller/github\"\n\t\"github.com/actions/actions-runner-controller/github/actions\"\n\t\"github.com/actions/actions-runner-controller/logging\"\n\t\"github.com/kelseyhightower/envconfig\"\n\tcorev1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime\"\n\tclientgoscheme \"k8s.io/client-go/kubernetes/scheme\"\n\t_ \"k8s.io/client-go/plugin/pkg/client/auth/gcp\"\n\tctrl \"sigs.k8s.io/controller-runtime\"\n\t\"sigs.k8s.io/controller-runtime/pkg/cache\"\n\t\"sigs.k8s.io/controller-runtime/pkg/client\"\n\tmetricsserver \"sigs.k8s.io/controller-runtime/pkg/metrics/server\"\n\t\"sigs.k8s.io/controller-runtime/pkg/webhook\"\n\t// +kubebuilder:scaffold:imports\n)\n\nconst (\n\tdefaultRunnerImage = \"summerwind/actions-runner:latest\"\n\tdefaultDockerImage = \"docker:dind\"\n\tdefaultDockerGID   = \"1001\"\n)\n\nvar scheme = runtime.NewScheme()\n\nfunc init() {\n\t_ = clientgoscheme.AddToScheme(scheme)\n\t_ = githubv1alpha1.AddToScheme(scheme)\n\t_ = summerwindv1alpha1.AddToScheme(scheme)\n\t// +kubebuilder:scaffold:scheme\n}\n\ntype stringSlice []string\n\nfunc (i *stringSlice) String() string {\n\treturn fmt.Sprintf(\"%v\", *i)\n}\n\nfunc (i *stringSlice) Set(value string) error {\n\t*i = append(*i, value)\n\treturn nil\n}\n\nfunc main() {\n\tvar (\n\t\terr      error\n\t\tghClient *github.Client\n\n\t\t// metrics server configuration for AutoscalingListener\n\t\tlistenerMetricsAddr     string\n\t\tlistenerMetricsEndpoint string\n\n\t\tmetricsAddr              string\n\t\tautoScalingRunnerSetOnly bool\n\t\tenableLeaderElection     bool\n\t\tdisableAdmissionWebhook  bool\n\t\tupdateStrategy           string\n\t\tleaderElectionId         string\n\t\tport                     int\n\t\tsyncPeriod               time.Duration\n\n\t\tdefaultScaleDownDelay time.Duration\n\n\t\trunnerImagePullSecrets stringSlice\n\t\trunnerPodDefaults      actionssummerwindnet.RunnerPodDefaults\n\n\t\tnamespace                       string\n\t\tlogLevel                        string\n\t\tlogFormat                       string\n\t\twatchSingleNamespace            string\n\t\texcludeLabelPropagationPrefixes stringSlice\n\n\t\tautoScalerImagePullSecrets stringSlice\n\n\t\topts = actionsgithubcom.OptionsWithDefault()\n\n\t\tcommonRunnerLabels commaSeparatedStringSlice\n\n\t\tk8sClientRateLimiterQPS   int\n\t\tk8sClientRateLimiterBurst int\n\t)\n\tvar c github.Config\n\terr = envconfig.Process(\"github\", &c)\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Error: processing environment variables: %v\\n\", err)\n\t\tos.Exit(1)\n\t}\n\n\tflag.StringVar(&listenerMetricsAddr, \"listener-metrics-addr\", \":8080\", \"The address applied to AutoscalingListener metrics server\")\n\tflag.StringVar(&listenerMetricsEndpoint, \"listener-metrics-endpoint\", \"/metrics\", \"The AutoscalingListener metrics server endpoint from which the metrics are collected\")\n\tflag.StringVar(&metricsAddr, \"metrics-addr\", \":8080\", \"The address the metric endpoint binds to.\")\n\tflag.BoolVar(&enableLeaderElection, \"enable-leader-election\", false,\n\t\t\"Enable leader election for controller manager. Enabling this will ensure there is only one active controller manager.\")\n\tflag.StringVar(&leaderElectionId, \"leader-election-id\", \"actions-runner-controller\", \"Controller id for leader election.\")\n\tflag.StringVar(&runnerPodDefaults.RunnerImage, \"runner-image\", defaultRunnerImage, \"The image name of self-hosted runner container to use by default if one isn't defined in yaml.\")\n\tflag.StringVar(&runnerPodDefaults.DockerImage, \"docker-image\", defaultDockerImage, \"The image name of docker sidecar container to use by default if one isn't defined in yaml.\")\n\tflag.StringVar(&runnerPodDefaults.DockerGID, \"docker-gid\", defaultDockerGID, \"The default GID of docker group in the docker sidecar container. Use 1001 for dockerd sidecars of Ubuntu 20.04 runners 121 for Ubuntu 22.04.\")\n\tflag.Var(&runnerImagePullSecrets, \"runner-image-pull-secret\", \"The default image-pull secret name for self-hosted runner container.\")\n\tflag.StringVar(&runnerPodDefaults.DockerRegistryMirror, \"docker-registry-mirror\", \"\", \"The default Docker Registry Mirror used by runners.\")\n\tflag.StringVar(&c.Token, \"github-token\", c.Token, \"The personal access token of GitHub.\")\n\tflag.StringVar(&c.EnterpriseURL, \"github-enterprise-url\", c.EnterpriseURL, \"Enterprise URL to be used for your GitHub API calls\")\n\tflag.Int64Var(&c.AppID, \"github-app-id\", c.AppID, \"The application ID of GitHub App.\")\n\tflag.Int64Var(&c.AppInstallationID, \"github-app-installation-id\", c.AppInstallationID, \"The installation ID of GitHub App.\")\n\tflag.StringVar(&c.AppPrivateKey, \"github-app-private-key\", c.AppPrivateKey, \"The path of a private key file to authenticate as a GitHub App\")\n\tflag.StringVar(&c.URL, \"github-url\", c.URL, \"GitHub URL to be used for GitHub API calls\")\n\tflag.StringVar(&c.UploadURL, \"github-upload-url\", c.UploadURL, \"GitHub Upload URL to be used for GitHub API calls\")\n\tflag.StringVar(&c.BasicauthUsername, \"github-basicauth-username\", c.BasicauthUsername, \"Username for GitHub basic auth to use instead of PAT or GitHub APP in case it's running behind a proxy API\")\n\tflag.StringVar(&c.BasicauthPassword, \"github-basicauth-password\", c.BasicauthPassword, \"Password for GitHub basic auth to use instead of PAT or GitHub APP in case it's running behind a proxy API\")\n\tflag.StringVar(&c.RunnerGitHubURL, \"runner-github-url\", c.RunnerGitHubURL, \"GitHub URL to be used by runners during registration\")\n\tflag.BoolVar(&runnerPodDefaults.UseRunnerStatusUpdateHook, \"runner-status-update-hook\", false, \"Use custom RBAC for runners (role, role binding and service account).\")\n\tflag.DurationVar(&defaultScaleDownDelay, \"default-scale-down-delay\", actionssummerwindnet.DefaultScaleDownDelay, \"The approximate delay for a scale down followed by a scale up, used to prevent flapping (down->up->down->... loop)\")\n\tflag.IntVar(&port, \"port\", 9443, \"The port to which the admission webhook endpoint should bind\")\n\tflag.DurationVar(&syncPeriod, \"sync-period\", 1*time.Minute, \"Determines the minimum frequency at which K8s resources managed by this controller are reconciled.\")\n\tflag.IntVar(&opts.RunnerMaxConcurrentReconciles, \"runner-max-concurrent-reconciles\", opts.RunnerMaxConcurrentReconciles, \"The maximum number of concurrent reconciles which can be run by the EphemeralRunner controller. Increase this value to improve the throughput of the controller, but it may also increase the load on the API server and the external service (e.g. GitHub API).\")\n\tflag.Var(&commonRunnerLabels, \"common-runner-labels\", \"Runner labels in the K1=V1,K2=V2,... format that are inherited all the runners created by the controller. See https://github.com/actions/actions-runner-controller/issues/321 for more information\")\n\tflag.StringVar(&namespace, \"watch-namespace\", \"\", \"The namespace to watch for custom resources. Set to empty for letting it watch for all namespaces.\")\n\tflag.StringVar(&watchSingleNamespace, \"watch-single-namespace\", \"\", \"Restrict to watch for custom resources in a single namespace.\")\n\tflag.Var(&excludeLabelPropagationPrefixes, \"exclude-label-propagation-prefix\", \"The list of prefixes that should be excluded from label propagation\")\n\tflag.StringVar(&logLevel, \"log-level\", logging.LogLevelDebug, `The verbosity of the logging. Valid values are \"debug\", \"info\", \"warn\", \"error\". Defaults to \"debug\".`)\n\tflag.StringVar(&logFormat, \"log-format\", \"text\", `The log format. Valid options are \"text\" and \"json\". Defaults to \"text\"`)\n\tflag.BoolVar(&autoScalingRunnerSetOnly, \"auto-scaling-runner-set-only\", false, \"Make controller only reconcile AutoRunnerScaleSet object.\")\n\tflag.StringVar(&updateStrategy, \"update-strategy\", \"immediate\", `Resources reconciliation strategy on upgrade with running/pending jobs. Valid values are: \"immediate\", \"eventual\". Defaults to \"immediate\".`)\n\tflag.Var(&autoScalerImagePullSecrets, \"auto-scaler-image-pull-secrets\", \"The default image-pull secret name for auto-scaler listener container.\")\n\tflag.IntVar(&k8sClientRateLimiterQPS, \"k8s-client-rate-limiter-qps\", 20, \"The QPS value of the K8s client rate limiter.\")\n\tflag.IntVar(&k8sClientRateLimiterBurst, \"k8s-client-rate-limiter-burst\", 30, \"The burst value of the K8s client rate limiter.\")\n\tflag.Parse()\n\n\trunnerPodDefaults.RunnerImagePullSecrets = runnerImagePullSecrets\n\n\tlog, err := logging.NewLogger(logLevel, logFormat)\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Error: creating logger: %v\\n\", err)\n\t\tos.Exit(1)\n\t}\n\tc.Log = &log\n\n\tlog.Info(\"Using options\", \"runner-max-concurrent-reconciles\", opts.RunnerMaxConcurrentReconciles)\n\n\tif !autoScalingRunnerSetOnly {\n\t\tghClient, err = c.NewClient()\n\t\tif err != nil {\n\t\t\tlog.Error(err, \"unable to create client\")\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n\n\tctrl.SetLogger(log)\n\n\tmanagerNamespace := \"\"\n\tvar defaultNamespaces map[string]cache.Config\n\tif namespace != \"\" {\n\t\tdefaultNamespaces = map[string]cache.Config{\n\t\t\tnamespace: {},\n\t\t}\n\t}\n\n\tif autoScalingRunnerSetOnly {\n\t\tmanagerNamespace = os.Getenv(\"CONTROLLER_MANAGER_POD_NAMESPACE\")\n\t\tif managerNamespace == \"\" {\n\t\t\tlog.Error(err, \"unable to obtain manager pod namespace\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif len(watchSingleNamespace) > 0 {\n\t\t\tif defaultNamespaces == nil {\n\t\t\t\tdefaultNamespaces = make(map[string]cache.Config)\n\t\t\t}\n\n\t\t\tdefaultNamespaces[watchSingleNamespace] = cache.Config{}\n\t\t\tdefaultNamespaces[managerNamespace] = cache.Config{}\n\t\t}\n\n\t\tswitch updateStrategy {\n\t\tcase \"eventual\", \"immediate\":\n\t\t\tlog.Info(`Update strategy set to:`, \"updateStrategy\", updateStrategy)\n\t\tdefault:\n\t\t\tlog.Info(`Update strategy not recognized. Defaulting to \"immediately\"`, \"updateStrategy\", updateStrategy)\n\t\t\tupdateStrategy = \"immediate\"\n\t\t}\n\t}\n\n\tif actionsgithubcom.SetListenerLoggingParameters(logLevel, logFormat) {\n\t\tlog.Info(\"AutoscalingListener logging parameters changed\", \"LogLevel\", logLevel, \"LogFormat\", logFormat)\n\t} else {\n\t\tlog.Info(\"Using default AutoscalingListener logging parameters\", \"LogLevel\", actionsgithubcom.DefaultScaleSetListenerLogLevel, \"LogFormat\", actionsgithubcom.DefaultScaleSetListenerLogFormat)\n\t}\n\n\tactionsgithubcom.SetListenerEntrypoint(os.Getenv(\"LISTENER_ENTRYPOINT\"))\n\n\tvar webhookServer webhook.Server\n\tif port != 0 {\n\t\twebhookServer = webhook.NewServer(webhook.Options{\n\t\t\tPort: port,\n\t\t})\n\t}\n\n\tcfg := ctrl.GetConfigOrDie()\n\tcfg.QPS = float32(k8sClientRateLimiterQPS)\n\tcfg.Burst = k8sClientRateLimiterBurst\n\n\tmgr, err := ctrl.NewManager(cfg, ctrl.Options{\n\t\tScheme: scheme,\n\t\tMetrics: metricsserver.Options{\n\t\t\tBindAddress: metricsAddr,\n\t\t},\n\t\tCache: cache.Options{\n\t\t\tSyncPeriod:        &syncPeriod,\n\t\t\tDefaultNamespaces: defaultNamespaces,\n\t\t},\n\t\tWebhookServer:    webhookServer,\n\t\tLeaderElection:   enableLeaderElection,\n\t\tLeaderElectionID: leaderElectionId,\n\t\tClient: client.Options{\n\t\t\tCache: &client.CacheOptions{\n\t\t\t\tDisableFor: []client.Object{\n\t\t\t\t\t&corev1.Secret{},\n\t\t\t\t\t&corev1.ConfigMap{},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\tif err != nil {\n\t\tlog.Error(err, \"unable to start manager\")\n\t\tos.Exit(1)\n\t}\n\n\tif autoScalingRunnerSetOnly {\n\t\tif err := actionsgithubcom.SetupIndexers(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to setup indexers\")\n\t\t\tos.Exit(1)\n\t\t}\n\t\tmanagerImage := os.Getenv(\"CONTROLLER_MANAGER_CONTAINER_IMAGE\")\n\t\tif managerImage == \"\" {\n\t\t\tlog.Error(err, \"unable to obtain listener image\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif metricsAddr != \"\" {\n\t\t\tlog.Info(\"Registering scale set metrics\")\n\t\t\tactionsgithubcommetrics.RegisterMetrics()\n\t\t}\n\n\t\tactionsMultiClient := actions.NewMultiClient(\n\t\t\tlog.WithName(\"actions-clients\"),\n\t\t)\n\n\t\trb := actionsgithubcom.ResourceBuilder{\n\t\t\tExcludeLabelPropagationPrefixes: excludeLabelPropagationPrefixes,\n\t\t}\n\n\t\tif err = (&actionsgithubcom.AutoscalingRunnerSetReconciler{\n\t\t\tClient:                             mgr.GetClient(),\n\t\t\tLog:                                log.WithName(\"AutoscalingRunnerSet\").WithValues(\"version\", build.Version),\n\t\t\tScheme:                             mgr.GetScheme(),\n\t\t\tControllerNamespace:                managerNamespace,\n\t\t\tDefaultRunnerScaleSetListenerImage: managerImage,\n\t\t\tActionsClient:                      actionsMultiClient,\n\t\t\tUpdateStrategy:                     actionsgithubcom.UpdateStrategy(updateStrategy),\n\t\t\tDefaultRunnerScaleSetListenerImagePullSecrets: autoScalerImagePullSecrets,\n\t\t\tResourceBuilder: rb,\n\t\t}).SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"AutoscalingRunnerSet\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = (&actionsgithubcom.EphemeralRunnerReconciler{\n\t\t\tClient:          mgr.GetClient(),\n\t\t\tLog:             log.WithName(\"EphemeralRunner\").WithValues(\"version\", build.Version),\n\t\t\tScheme:          mgr.GetScheme(),\n\t\t\tActionsClient:   actionsMultiClient,\n\t\t\tResourceBuilder: rb,\n\t\t}).SetupWithManager(mgr, actionsgithubcom.WithMaxConcurrentReconciles(opts.RunnerMaxConcurrentReconciles)); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"EphemeralRunner\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = (&actionsgithubcom.EphemeralRunnerSetReconciler{\n\t\t\tClient:          mgr.GetClient(),\n\t\t\tLog:             log.WithName(\"EphemeralRunnerSet\").WithValues(\"version\", build.Version),\n\t\t\tScheme:          mgr.GetScheme(),\n\t\t\tActionsClient:   actionsMultiClient,\n\t\t\tPublishMetrics:  metricsAddr != \"0\",\n\t\t\tResourceBuilder: rb,\n\t\t}).SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"EphemeralRunnerSet\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = (&actionsgithubcom.AutoscalingListenerReconciler{\n\t\t\tClient:                  mgr.GetClient(),\n\t\t\tLog:                     log.WithName(\"AutoscalingListener\").WithValues(\"version\", build.Version),\n\t\t\tScheme:                  mgr.GetScheme(),\n\t\t\tListenerMetricsAddr:     listenerMetricsAddr,\n\t\t\tListenerMetricsEndpoint: listenerMetricsEndpoint,\n\t\t\tResourceBuilder:         rb,\n\t\t}).SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"AutoscalingListener\")\n\t\t\tos.Exit(1)\n\t\t}\n\t} else {\n\t\tmultiClient := actionssummerwindnet.NewMultiGitHubClient(\n\t\t\tmgr.GetClient(),\n\t\t\tghClient,\n\t\t)\n\n\t\trunnerReconciler := &actionssummerwindnet.RunnerReconciler{\n\t\t\tClient:            mgr.GetClient(),\n\t\t\tLog:               log.WithName(\"runner\"),\n\t\t\tScheme:            mgr.GetScheme(),\n\t\t\tGitHubClient:      multiClient,\n\t\t\tRunnerPodDefaults: runnerPodDefaults,\n\t\t}\n\n\t\tif err = runnerReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"Runner\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\trunnerReplicaSetReconciler := &actionssummerwindnet.RunnerReplicaSetReconciler{\n\t\t\tClient: mgr.GetClient(),\n\t\t\tLog:    log.WithName(\"runnerreplicaset\"),\n\t\t\tScheme: mgr.GetScheme(),\n\t\t}\n\n\t\tif err = runnerReplicaSetReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerReplicaSet\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\trunnerDeploymentReconciler := &actionssummerwindnet.RunnerDeploymentReconciler{\n\t\t\tClient:             mgr.GetClient(),\n\t\t\tLog:                log.WithName(\"runnerdeployment\"),\n\t\t\tScheme:             mgr.GetScheme(),\n\t\t\tCommonRunnerLabels: commonRunnerLabels,\n\t\t}\n\n\t\tif err = runnerDeploymentReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerDeployment\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\trunnerSetReconciler := &actionssummerwindnet.RunnerSetReconciler{\n\t\t\tClient:             mgr.GetClient(),\n\t\t\tLog:                log.WithName(\"runnerset\"),\n\t\t\tScheme:             mgr.GetScheme(),\n\t\t\tCommonRunnerLabels: commonRunnerLabels,\n\t\t\tGitHubClient:       multiClient,\n\t\t\tRunnerPodDefaults:  runnerPodDefaults,\n\t\t}\n\n\t\tif err = runnerSetReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerSet\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tlog.Info(\n\t\t\t\"Initializing actions-runner-controller\",\n\t\t\t\"version\", build.Version,\n\t\t\t\"default-scale-down-delay\", defaultScaleDownDelay,\n\t\t\t\"sync-period\", syncPeriod,\n\t\t\t\"default-runner-image\", runnerPodDefaults.RunnerImage,\n\t\t\t\"default-docker-image\", runnerPodDefaults.DockerImage,\n\t\t\t\"default-docker-gid\", runnerPodDefaults.DockerGID,\n\t\t\t\"common-runnner-labels\", commonRunnerLabels,\n\t\t\t\"leader-election-enabled\", enableLeaderElection,\n\t\t\t\"leader-election-id\", leaderElectionId,\n\t\t\t\"watch-namespace\", namespace,\n\t\t)\n\n\t\thorizontalRunnerAutoscaler := &actionssummerwindnet.HorizontalRunnerAutoscalerReconciler{\n\t\t\tClient:                mgr.GetClient(),\n\t\t\tLog:                   log.WithName(\"horizontalrunnerautoscaler\"),\n\t\t\tScheme:                mgr.GetScheme(),\n\t\t\tGitHubClient:          multiClient,\n\t\t\tDefaultScaleDownDelay: defaultScaleDownDelay,\n\t\t}\n\n\t\trunnerPodReconciler := &actionssummerwindnet.RunnerPodReconciler{\n\t\t\tClient:       mgr.GetClient(),\n\t\t\tLog:          log.WithName(\"runnerpod\"),\n\t\t\tScheme:       mgr.GetScheme(),\n\t\t\tGitHubClient: multiClient,\n\t\t}\n\n\t\trunnerPersistentVolumeReconciler := &actionssummerwindnet.RunnerPersistentVolumeReconciler{\n\t\t\tClient: mgr.GetClient(),\n\t\t\tLog:    log.WithName(\"runnerpersistentvolume\"),\n\t\t\tScheme: mgr.GetScheme(),\n\t\t}\n\n\t\trunnerPersistentVolumeClaimReconciler := &actionssummerwindnet.RunnerPersistentVolumeClaimReconciler{\n\t\t\tClient: mgr.GetClient(),\n\t\t\tLog:    log.WithName(\"runnerpersistentvolumeclaim\"),\n\t\t\tScheme: mgr.GetScheme(),\n\t\t}\n\n\t\tif err = runnerPodReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerPod\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = horizontalRunnerAutoscaler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"HorizontalRunnerAutoscaler\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = runnerPersistentVolumeReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerPersistentVolume\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif err = runnerPersistentVolumeClaimReconciler.SetupWithManager(mgr); err != nil {\n\t\t\tlog.Error(err, \"unable to create controller\", \"controller\", \"RunnerPersistentVolumeClaim\")\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tif !disableAdmissionWebhook {\n\t\t\tif err = (&summerwindv1alpha1.Runner{}).SetupWebhookWithManager(mgr); err != nil {\n\t\t\t\tlog.Error(err, \"unable to create webhook\", \"webhook\", \"Runner\")\n\t\t\t\tos.Exit(1)\n\t\t\t}\n\t\t\tif err = (&summerwindv1alpha1.RunnerDeployment{}).SetupWebhookWithManager(mgr); err != nil {\n\t\t\t\tlog.Error(err, \"unable to create webhook\", \"webhook\", \"RunnerDeployment\")\n\t\t\t\tos.Exit(1)\n\t\t\t}\n\t\t\tif err = (&summerwindv1alpha1.RunnerReplicaSet{}).SetupWebhookWithManager(mgr); err != nil {\n\t\t\t\tlog.Error(err, \"unable to create webhook\", \"webhook\", \"RunnerReplicaSet\")\n\t\t\t\tos.Exit(1)\n\t\t\t}\n\t\t\tinjector := &actionssummerwindnet.PodRunnerTokenInjector{\n\t\t\t\tClient:       mgr.GetClient(),\n\t\t\t\tGitHubClient: multiClient,\n\t\t\t\tLog:          ctrl.Log.WithName(\"webhook\").WithName(\"PodRunnerTokenInjector\"),\n\t\t\t}\n\t\t\tif err = injector.SetupWithManager(mgr); err != nil {\n\t\t\t\tlog.Error(err, \"unable to create webhook server\", \"webhook\", \"PodRunnerTokenInjector\")\n\t\t\t\tos.Exit(1)\n\t\t\t}\n\t\t}\n\t}\n\n\tlog.Info(\"starting manager\", \"version\", build.Version)\n\tif err := mgr.Start(ctrl.SetupSignalHandler()); err != nil {\n\t\tlog.Error(err, \"problem running manager\")\n\t\tos.Exit(1)\n\t}\n}\n\ntype commaSeparatedStringSlice []string\n\nfunc (s *commaSeparatedStringSlice) String() string {\n\treturn fmt.Sprintf(\"%v\", *s)\n}\n\nfunc (s *commaSeparatedStringSlice) Set(value string) error {\n\tfor _, v := range strings.Split(value, \",\") {\n\t\tif v == \"\" {\n\t\t\tcontinue\n\t\t}\n\n\t\t*s = append(*s, v)\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "runner",
          "type": "tree",
          "content": null
        },
        {
          "name": "simulator",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_e2e_arc",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}