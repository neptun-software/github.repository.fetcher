{
  "metadata": {
    "timestamp": 1736567379021,
    "page": 983,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thoas/picfit",
      "stars": 2157,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": "Dockerfile\nDockerfile.*\nLICENSE\n.travis.yml\n.gitignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2099609375,
          "content": "# Folders\n_obj\n_test\n.idea\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n.DS_Store\n/*.json\nconf\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.3408203125,
          "content": "FROM golang:1.23-bookworm AS builder\nLABEL stage=builder\n\nENV REPO=thoas/picfit\n\nADD . /go/src/github.com/${REPO}\n\nWORKDIR /go/src/github.com/${REPO}\n\nRUN make docker-build-static && mv bin/picfit /picfit\n\n###\n\nFROM debian:bookworm-slim\n\nRUN apt-get update && apt-get install -y ca-certificates\n\nCOPY --from=builder /picfit /picfit\n\nCMD [\"/picfit\"]\n"
        },
        {
          "name": "Dockerfile.build",
          "type": "blob",
          "size": 0.1328125,
          "content": "FROM golang:1.23-bookworm\n\nADD . /go/src/github.com/thoas/picfit\n\nWORKDIR /go/src/github.com/thoas/picfit\n\nCMD make docker-build-static\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Florent Messa\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.966796875,
          "content": "ROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\nVERSION=$(awk '/Version/ { gsub(\"\\\"\", \"\"); print $NF }' ${ROOT_DIR}/application/constants.go)\n\nbranch = $(shell git rev-parse --abbrev-ref HEAD)\ncommitMessage = $(shell git log -1 --pretty=%B)\ncommit = $(shell git log --pretty=format:'%h' -n 1)\nnow = $(shell date \"+%Y-%m-%d %T UTC%z\")\ncompiler = $(shell go version)\n\nBIN_DIR = $(ROOT_DIR)/bin\nPICFIT_CONFIG_PATH ?= `pwd`/config.json\nBIN = $(BIN_DIR)/picfit\nSSL_DIR = $(ROOT_DIR)/ssl\nAPP_DIR = /go/src/github.com/thoas/picfit\n\nexport GO111MODULE=on\n\ntest: unit\n\nrun-server:\n\t@PICFIT_CONFIG_PATH=$(PICFIT_CONFIG_PATH) $(BIN)\n\nserve:\n\t@modd\n\nunit:\n\tgo test -v -cover ./...\n\nall: picfit\n\t@(mkdir -p $(BIN_DIR))\n\nmemory-analysis:\n\tgo  build -gcflags=\"-m -m\" .\n\nbuild:\n\t@(echo \"-> Compiling picfit binary\")\n\t@(mkdir -p $(BIN_DIR))\n\tgo build -ldflags \"\\\n\t\t-X github.com/thoas/picfit/constants.Branch=$(branch) \\\n\t\t-X github.com/thoas/picfit/constants.Revision=$(commit) \\\n\t\t-X 'github.com/thoas/picfit/constants.BuildTime=$(now)' \\\n\t\t-X 'github.com/thoas/picfit/constants.Compiler=$(compiler)'\" -o $(BIN_DIR)/picfit ./cmd/picfit/main.go\n\t@(echo \"-> picfit binary created\")\n\nformat:\n\t@(go fmt ./...)\n\t@(go vet ./...)\n\nbuild-static:\n\t@(echo \"-> Creating statically linked binary...\")\n\tmkdir -p $(BIN_DIR)\n\tgo build -ldflags \"\\\n\t\t-X github.com/thoas/picfit/constants.Branch=$(branch) \\\n\t\t-X github.com/thoas/picfit/constants.Revision=$(commit) \\\n\t\t-X 'github.com/thoas/picfit/constants.BuildTime=$(now)' \\\n\t\t-X 'github.com/thoas/picfit/constants.LatestCommitMessage=$(commitMessage)' \\\n\t\t-X 'github.com/thoas/picfit/constants.Compiler=$(compiler)'\" -a -installsuffix cgo -o $(BIN_DIR)/picfit ./cmd/picfit/main.go\n\ndocker-build-static:\n\tmake build-static\n\n\n.PNONY: all test format\n\ndocker-build:\n\t@(echo \"-> Preparing builder...\")\n\t@(docker build -t picfit-builder -f Dockerfile.build .)\n\t@(mkdir -p $(BIN_DIR))\n\t@(docker run --rm -v $(BIN_DIR):$(APP_DIR)/bin picfit-builder)\n\nlint:\n\tgolangci-lint run .\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 24.818359375,
          "content": "picfit\n======\n\n.. image:: https://d262ilb51hltx0.cloudfront.net/max/800/1*oR04S6Ie7s1JctwjsDsN0w.png\n\npicfit is a reusable Go server to manipulate images (resize, thumbnail, etc.).\n\nIt will act as a proxy on your storage engine and will be\nserved ideally behind an HTTP cache system like varnish_.\n\nIt supports multiple `storage backends <https://github.com/ulule/gostorages>`_\nand multiple `key/value stores <https://github.com/ulule/gokvstores>`_.\n\nInstallation\n============\n\nBuild it\n--------\n\n1. Make sure you have a Go language compiler and git installed.\n2. Make sure you have the following go system dependencies in your $PATH: bzr, svn, hg, git\n3. Ensure your GOPATH_ is properly set.\n4. Download it:\n\n::\n\n    git clone https://github.com/thoas/picfit.git\n\n4. Run ``make build``\n\nYou have now a binary version of picfit in the ``bin`` directory which\nfits perfectly with your architecture.\n\npicfit has also a Docker integration to built a unix binary without having to install it\n\n::\n\n    make docker-build\n\nDebian and Ubuntu\n-----------------\n\nWe will provide Debian package when we will be completely stable ;)\n\nConfiguration\n=============\n\nConfiguration should be stored in a readable file and in JSON format.\n\nThe location of the configuration is specified by --config or the PICFIT_CONFIG_PATH environment variable.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"kvstore\": {\n        \"type\": \"[KVSTORE]\"\n      },\n      \"storage\": {\n        \"src\": {\n          \"type\": \"[STORAGE]\"\n        }\n      }\n    }\n\n``[KVSTORE]`` can be:\n\n- **redis** - generated keys stored in Redis_, see `below <#store-images-on-amazon-s3-keys-in-redis-and-shard-filename>`_ how you can customize connection parameters\n- **cache** - generated keys stored in an in-memory cache\n- **redis-cluster** - generated keys stored in `Redis cluster <https://redis.io/topics/cluster-tutorial>`_\n- **redis-roundrobin** - generated keys stored in Redis_, using multiple replicas to read keys, picfit will automatically detects a write error and round robin to the primary\n\n``[STORAGE]`` can be:\n\n- **fs** - generated images stored in your File system\n- **http+fs** - generated images stored in your File system and loaded using HTTP protocol\n- **s3** - generated images stored in Amazon S3\n- **dos3** - generated images stored in DigitalOcean S3\n- **gcs** - generated images stored in Google Cloud Storage\n- **http+s3** - generated images stored in Amazon S3 and loaded using HTTP protocol\n- **http+dos3** - generated images stored in DigitalOcean S3 and loaded using HTTP protocol\n\nBasic\n-----\n\n* no key/value store\n* no image storage\n* images are given in absolute url\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"port\": 3001\n    }\n\nImages are generated on the fly at each request.\n\nStore images on file system and keys in an in-memory cache\n----------------------------------------------------------\n\n* key/value in-memory store\n* file system storage\n\nAn image is generated from your source storage (``src``) and uploaded\nasynchronously to this storage.\n\nA unique key is generated and stored in a in-memory key/value store to process\na request only once.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"port\": 3001,\n      \"storage\": {\n        \"src\": {\n          \"type\": \"fs\",\n          \"location\": \"/path/to/directory/\"\n        }\n      },\n      \"kvstore\": {\n        \"type\": \"cache\"\n      }\n    }\n\nStore images on DigitalOcean S3\n-----------------------------------------------------------\n\nIt's mostly the same as Amazon S3 storage, the difference are accepted regions\nSo, regions can be:\n\n- nyc1\n- nyc2\n- nyc3\n- ams2\n- ams3\n- sfo1\n- sfo2\n- sgp1\n- lon1\n- fra1\n- tor1\n- blr1\n\nStore images on Amazon S3, keys in Redis and shard filename\n-----------------------------------------------------------\n\n* key/value store provided by Redis\n* Amazon S3 storage\n* shard filename\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"kvstore\": {\n        \"type\": \"redis\",\n        \"redis\": {\n          \"host\": \"127.0.0.1\",\n          \"port\": 6379,\n          \"password\": \"\",\n          \"db\": 0\n        }\n      },\n      \"port\": 3001,\n      \"storage\": {\n        \"src\": {\n          \"type\": \"s3\",\n          \"access_key_id\": \"[ACCESS_KEY_ID]\",\n          \"secret_access_key\": \"[SECRET_ACCESS_KEY]\",\n          \"bucket_name\": \"[BUCKET_NAME]\",\n          \"acl\": \"[ACL]\",\n          \"region\": \"[REGION_NAME]\",\n          \"location\": \"path/to/directory\",\n          \"endpoint\": \"[protocol://service-code.region-code.amazonaws.com]\"\n        }\n      },\n      \"shard\": {\n        \"width\": 1,\n        \"depth\": 2,\n        \"restonly\": true\n      }\n    }\n\nKeys will be stored on Redis_, (you better need to setup persistence_).\n\nImage files will be loaded and stored on Amazon S3 at the location ``path/to/directory``\nin the bucket ``[BUCKET_NAME]``.\n\n``[ACL]`` can be:\n\n- private\n- public-read\n- public-read-write\n- authenticated-read\n- bucket-owner-read\n- bucket-owner-full-control\n\n``[REGION_NAME]`` can be:\n\n- us-gov-west-1\n- us-east-1\n- us-west-1\n- us-west-2\n- eu-west-1\n- eu-central-1\n- ap-southeast-1\n- ap-southeast-2\n- ap-northeast-1\n- sa-east-1\n- cn-north-1\n\n**Filename** will be sharded:\n\n- ``depth`` - 2 directories\n- ``width`` - 1 letter for each directory\n- ``restonly`` - true, filename won't contain characters in sharding path\n\nExample:\n\n``06102586671300cd02ae90f1faa16897.png`` will become ``0/6/102586671300cd02ae90f1faa16897.jpg``\n\nwith restonly=false it would become ``0/6/06102586671300cd02ae90f1faa16897.jpg``\n\nIt would be useful if you are using the file system storage backend.\n\nLoad images from file system and store them in Amazon S3, keys on Redis cluster\n-------------------------------------------------------------------------------\n\n* key/value store provided by Redis cluster\n* File system to load images\n* Amazon S3 storage to process images\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"kvstore\": {\n        \"type\": \"redis-cluster\",\n        \"redis\": {\n          \"addrs\": [\n            \"127.0.0.1:6379\"\n          ],\n          \"password\": \"\",\n        }\n      },\n      \"port\": 3001,\n      \"storage\": {\n        \"src\": {\n          \"type\": \"fs\",\n          \"location\": \"path/to/directory\"\n        },\n        \"dst\": {\n          \"type\": \"s3\",\n          \"access_key_id\": \"[ACCESS_KEY_ID]\",\n          \"secret_access_key\": \"[SECRET_ACCESS_KEY]\",\n          \"bucket_name\": \"[BUCKET_NAME]\",\n          \"acl\": \"[ACL]\",\n          \"region\": \"[REGION_NAME]\",\n          \"location\": \"path/to/directory\",\n          \"endpoint\": \"[protocol://service-code.region-code.amazonaws.com]\"\n        }\n      }\n    }\n\nYou will be able to load and store your images from different storages backend.\n\nIn this example, images will be loaded from the file system storage\nand generated to the Amazon S3 storage.\n\nKeys stored in Redis with multiple replicas\n-------------------------------------------\n\n* key/value store provided by Redis with replicas\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"kvstore\": {\n        \"type\": \"redis-roundrobin\",\n        \"redis-roundrobin\": {\n          \"addrs\": [\n            \"redis://127.0.0.1:6379?db=0\",\n            \"redis://127.0.0.1:6380?db=0\"\n          ]\n        }\n      },\n      \"port\": 3001\n    }\n\nLoad images from storage backend base url, store them in Amazon S3, keys prefixed on Redis\n------------------------------------------------------------------------------------------\n\n* key/value store provided by Redis\n* File system to load images using HTTP method\n* Amazon S3 storage to process images\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"kvstore\": {\n        \"type\": \"redis\",\n        \"redis\": {\n          \"host\": \"127.0.0.1\",\n          \"port\": 6379,\n          \"password\": \"\",\n          \"db\": 0\n        },\n        \"prefix\": \"dummy:\"\n      },\n      \"port\": 3001,\n      \"storage\": {\n        \"src\": {\n          \"type\": \"http+fs\",\n          \"base_url\": \"http://media.example.com\",\n          \"location\": \"path/to/directory\"\n        },\n        \"dst\": {\n          \"type\": \"s3\",\n          \"access_key_id\": \"[ACCESS_KEY_ID]\",\n          \"secret_access_key\": \"[SECRET_ACCESS_KEY]\",\n          \"bucket_name\": \"[BUCKET_NAME]\",\n          \"acl\": \"[ACL]\",\n          \"region\": \"[REGION_NAME]\",\n          \"location\": \"path/to/directory\"\n        }\n      }\n    }\n\nIn this example, images will be loaded from the file system storage\nusing HTTP with ``base_url`` option and generated to the Amazon S3 storage.\n\nKeys will be stored on Redis_ using the prefix ``dummy:``.\n\nRunning\n=======\n\nTo run the application, issue the following command:\n\n::\n\n    $ picfit -c config.json\n\nBy default, this will run the application on port 3001 and\ncan be accessed by visiting:\n\n::\n\n    http://localhost:3001\n\nThe port number can be configured with ``port`` option in your config file.\n\nTo see a list of all available options, run:\n\n::\n\n    $ picfit --help\n\nUsage\n=====\n\nGeneral parameters\n------------------\n\nParameters to call the picfit service are:\n\n.. code-block:: html\n\n    <img src=\"http://localhost:3001/{method}?url={url}&path={path}&w={width}&h={height}&upscale={upscale}&sig={sig}&op={operation}&fmt={format}&q={quality}&deg={degree}&pos={position}&filter={filter}\"\n\n- **path** - The filepath to load the image using your source storage\n- **operation** - The operation to perform, see Operations_\n- **sig** - The signature key which is the representation of your query string and your secret key, see Security_\n- **method** - The method to perform, see Methods_\n- **url** - The url of the image to generate (not required if ``path`` provided)\n- **width** - The desired width of the image, if ``0`` is provided the service will calculate the ratio with ``height``\n- **height** - The desired height of the image, if ``0`` is provided the service will calculate the ratio with ``width``\n- **upscale** - If your image is smaller than your desired dimensions, the service will upscale it by default to fit your dimensions, you can disable this behavior by providing ``0``\n- **format** - The output format to save the image, by default the format will be the source format (a ``GIF`` image source will be saved as ``GIF``),  see Formats_\n- **quality** - The quality to save the image, by default the quality will be the highest possible, it will be only applied on ``JPEG`` format\n- **degree** - The degree (``90``, ``180``, ``270``) to rotate the image\n- **position** - The position to flip the image\n- **filter** - The filter for the effect operation (``blur``)\n\nTo use this service, include the service url as replacement\nfor your images, for example:\n\n.. code-block:: html\n\n    <img src=\"https://www.google.fr/images/srpr/logo11w.png\" />\n\nwill become:\n\n.. code-block:: html\n\n    <img src=\"http://localhost:3001/display?url=https%3A%2F%2Fwww.google.fr%2Fimages%2Fsrpr%2Flogo11w.png&w=100&h=100&op=resize&upscale=0\"\n\nThis will retrieve the image used in the ``url`` parameter and resize it\nto 100x100.\n\nUsing source storage\n--------------------\n\nIf an image is stored in your source storage at the location ``path/to/file.png``,\nthen you can call the service to load this file:\n\n.. code-block:: html\n\n    <img src=\"http://localhost:3001/display?w=100&h=100&path=path/to/file.png&op=resize\"\n\n    or\n\n    <img src=\"http://localhost:3001/display/resize/100x100/path/to/file.png\"\n\nFormats\n=======\n\npicfit currently supports the following image formats:\n\n- ``image/jpeg`` with the keyword ``jpg`` or ``jpeg``\n- ``image/png`` with the keyword ``png``\n- ``image/gif`` with the keyword ``gif``\n- ``image/bmp`` with the keyword ``bmp``\n- ``image/webp`` with the keyword ``webp``\n\nOperations\n==========\n\nNoop\n----\n\nThis operation will keep the actual size of the image without doing anything.\n\nYou have to pass the ``noop`` value to the ``op`` parameter to use this operation.\n\nResize\n------\n\nThis operation will able you to resize the image to the specified width and height.\n\nIf width or height value is 0, the image aspect ratio is preserved.\n\n-  **w** - The desired image's width\n-  **h** - The desired image's height\n\nYou have to pass the ``resize`` value to the ``op`` parameter to use this operation.\n\nThumbnail\n---------\n\nThumbnail scales the image up or down using the specified resample filter,\ncrops it to the specified width and height and returns the transformed image.\n\n-  **w** - The desired width of the image\n-  **h** - The desired height of the image\n\nYou have to pass the ``thumbnail`` value to the ``op`` parameter\nto use this operation.\n\nFlip\n----\n\nFlip flips the image vertically (from top to bottom) or\nhorizontally (from left to right) and returns the transformed image.\n\n-  **pos** - The desired position to flip the image, ``h`` will flip the image horizontally, ``v`` will flip the image vertically\n\nYou have to pass the ``flip`` value to the ``op`` parameter\nto use this operation.\n\nRotate\n------\n\nRotate rotates the image to the desired degree and returns the transformed image.\n\n-  **deg** - The desired degree to rotate the image\n\nYou have to pass the ``rotate`` value to the ``op`` parameter\nto use this operation.\n\nFlat\n----\n\nFlat draws a given image on the image resulted by the previous operation.\nFlat can be used only with the [multiple operation system].\n\n- **path** - the foreground image path\n- **color** - the foreground color in Hex (without ``#``), default is transparent\n- **pos** - the destination rectangle\n\nIn order to understand the Flat operation, please read the following `docs <https://github.com/thoas/picfit/blob/main/docs/flat.md>`_.\n\nEffect\n------\n\nAdd effect to the given image.\n\n-  **filter** - The desired effect : ``blur``\n\nYou have to pass the ``effect`` value to the ``op`` parameter\nto use this operation.\n\nMethods\n=======\n\nDisplay\n-------\n\nDisplay the image, useful when you are using an ``img`` tag.\n\nThe generated image will be stored asynchronously on your\ndestination storage backend.\n\nA couple of headers (``Content-Type``, ``If-Modified-Since``) will be set\nto allow you to use an http cache system.\n\n\nRedirect\n--------\n\nRedirect to an image.\n\nYour file will be generated synchronously then the redirection\nwill be performed.\n\nThe first query will be slower but next ones will be faster because the name\nof the generated file will be stored in your key/value store.\n\nGet\n---\n\nRetrieve information about an image.\n\nYour file will be generated synchronously then you will get the following information:\n\n* **filename** - Filename of your generated file\n* **path** - Path of your generated file\n* **url** - Absolute url of your generated file (only if ``base_url`` is available on your destination storage)\n\nThe first query will be slower but next ones will be faster because the name\nof the generated file will be stored in your key/value store.\n\nExpect the following result:\n\n.. code-block:: json\n\n    {\n        \"filename\":\"a661f8d197a42d21d0190d33e629e4.png\",\n        \"path\":\"cache/6/7/a661f8d197a42d21d0190d33e629e4.png\",\n        \"url\":\"https://ds9xhxfkunhky.cloudfront.net/cache/6/7/a661f8d197a42d21d0190d33e629e4.png\"\n    }\n\nUpload\n------\n\nUpload is disabled by default for security reason.\nBefore enabling it, you must understand you have to secure yourself\nthis endpoint like only allowing the /upload route in your nginx\nor apache webserver for the local network.\n\nExposing the **/upload** endpoint without a security mechanism is not **SAFE**.\n\nYou can enable it by adding the option and a source\nstorage to your configuration file.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"storage\": {\n        \"src\": {\n          \"type\": \"[STORAGE]\"\n        }\n      },\n      \"options\": {\n        \"enable_upload\": true\n      }\n    }\n\nTo work properly, the input field must be named \"data\"\n\nTest it with the excellent httpie_:\n\n::\n\n    http -f POST localhost:3000/upload data@myupload\n\nYou will retrieve the uploaded image information in ``JSON`` format.\n\nMultiple operations\n===================\n\nMultiple operations can be done on the same image following a given order.\n\nFirst operation must be described as above then other operation are described in parameters ``op``.\nThe order of ``op`` parameters is the order used.\n\nEach options of the operation must be described with subparameters separated by\n``:`` with the operation name as argument to ``op``.\n\nExample of a resize followed by a rotation:\n\n.. code-block:: html\n\n    <img src=\"http://localhost:3001/display?w=100&h=100&path=path/to/file.png&op=resize&op=op:rotate+deg:180\"\n\nSecurity\n========\n\nRequest signing\n---------------\n\nIn order to secure requests and avoid unknown third parties to\nuse the service, the application can require a request to provide a signature.\nTo enable this feature, set the ``secret_key`` option in your config file.\n\nThe signature is an hexadecimal digest generated from the client\nkey and the query string using the HMAC-SHA1 message authentication code\n(MAC) algorithm.\n\nThe below python code provides an implementation example:\n\n.. code-block:: python\n\n    import hashlib\n    import hmac\n    import six\n    import urllib\n\n    def sign(key, *args, **kwargs):\n        m = hmac.new(key, None, hashlib.sha1)\n\n        for arg in args:\n            if isinstance(arg, dict):\n                m.update(urllib.urlencode(arg))\n            elif isinstance(arg, six.string_types):\n                m.update(arg)\n\n        return m.hexdigest()\n\nThe implementation has to sort keys in alphabetical order and encodes query string to generate a proper signature.\n\nThe signature is passed to the application by appending the ``sig``\nparameter to the query string; e.g.\n``w=100&h=100&sig=c9516346abf62876b6345817dba2f9a0c797ef26``.\n\nNote, the application does not include the leading question mark when verifying\nthe supplied signature. To verify your signature implementation, see the\n``signature`` command described in the `Tools`_ section.\n\nLimiting allowed sizes\n----------------------\n\nDepending on your use case it may be more appropriate to simply restrict the\nimage sizes picfit is allowed to generate. See the `Allowed sizes`_ section for\nmore information on this configuration.\n\nTools\n=====\n\nTo verify that your client application is generating correct signatures,\nuse the command::\n\n    $ picfit signature --key=abcdef \"w=100&h=100&op=resize\"\n    Query String: w=100&h=100&op=resize\n    Signature: 6f7a667559990dee9c30fb459b88c23776fad25e\n    Signed Query String: w=100&h=100&op=resize&sig=6f7a667559990dee9c30fb459b88c23776fad25e\n\nError reporting\n===============\n\npicfit logs events by default in ``stderr`` and ``stdout``. You can implement sentry_\nto log errors using raven_.\n\nTo enable this feature, set ``sentry`` option in your config file.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"sentry\": {\n        \"dsn\": \"[YOUR_SENTRY_DSN]\",\n        \"tags\": {\n          \"foo\": \"bar\"\n        }\n      }\n    }\n\nDebug\n=====\n\nDebug is disabled by default.\n\nTo enable this feature set ``debug`` option to ``true`` in your config file:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"debug\": true\n    }\n\nCORS\n====\n\npicfit supports CORS headers customization in your config file.\n\nTo enable this feature, set ``allowed_origins``, ``allowed_headers`` and ``allowed_methods``,\nfor example:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"allowed_headers\": [\"Content-Type\", \"Authorization\", \"Accept\", \"Accept-Encoding\", \"Accept-Language\"],\n      \"allowed_origins\": [\"*.ulule.com\"],\n      \"allowed_methods\": [\"GET\", \"HEAD\"]\n    }\n\nImage engine\n============\n\nQuality\n-------\n\nThe quality rendering of the image engine can be controlled\nglobally without adding it at each request:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"engine\": {\n        \"quality\": 70\n      }\n    }\n\nWith this option, each image will be saved in ``70`` quality.\n\nBy default the quality is the highest possible: ``95``\n\nFormat\n------\n\nThe format can be forced globally without adding it at each request:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"engine\": {\n        \"format\": \"png\"\n      }\n    }\n\nWith this option, each image will be forced to be saved in ``.png``.\n\nBy default the format will be chosen in this order:\n\n* The ``fmt`` parameter if exists in query string\n* The original image format\n* The default format provided in the `application <https://github.com/thoas/picfit/blob/master/application/constants.go#L6>`_\n\nOptions\n=======\n\nDeletion\n--------\n\nDeletion is disabled by default for security reason, you can enable\nit in your config:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_delete\": true\n      }\n    }\n\nYou will be able to delete root image and its children, for example if you upload an image with\nthe file path `/foo/bar.png`, you can delete the main image on stockage by sending the following HTTP request:\n\n\n::\n\n   DELETE https://localhost:3001/foo/bar.png\n\nor delete a child:\n\n::\n\n   DELETE https://localhost:3001/display/thumbnail/100x100/foo/bar.png\n\nIf you want to delete the main image and cascade its children, you can enable it in your config:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_delete\": true,\n        \"enable_cascade_delete\": true\n      }\n    }\n\nwhen a new image will be processed, it will be linked to the main image and stored in the kvstore.\n\nUpload\n------\n\nUpload is disabled by default for security reason, you can enable\nit in your config:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_upload\": true\n      }\n    }\n\nStats\n-----\n\nStats are disabled by default, you can enable them in your config.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_stats\": true\n      }\n    }\n\nIt will store various information about your web application (response time, status code count, etc.).\n\nTo access these information, you can visit: http://localhost:3001/sys/stats\n\nHealth\n------\n\nHealth is disabled by default, you can enable it in your config.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_stats\": true\n      }\n    }\n\nIt will show various internal information about the Go runtime (memory, allocations, etc.).\n\nTo access these information, you can visit: http://localhost:3001/sys/health\n\nProfiler\n--------\n\nProfiler is disabled by default, you can enable it in your config.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"enable_pprof\": true\n      }\n    }\n\nIt will start pprof_ then use the pprof tool to look at the heap profile:\n\n::\n\n   go tool pprof http://localhost:3001/debug/pprof/heap\n\nOr to look at a 30-second CPU profile:\n\n::\n\n   go tool pprof http://localhost:3001/debug/pprof/profile\n\nOr to look at the goroutine blocking profile, after calling runtime.SetBlockProfileRate in your program:\n\n::\n\n   go tool pprof http://localhost:3001/debug/pprof/block\n\nOr to collect a 5-second execution trace:\n\n::\n\n   wget http://localhost:3001/debug/pprof/trace?seconds=5\n\nLogging\n-------\n\nBy default the logger level is `debug`, you can change it in your config:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"logger\": {\n        \"level\": \"info\"\n      }\n    }\n\nLevels available are:\n\n* debug\n* info\n* error\n* warning\n\nAllowed sizes\n-------------\n\nTo restrict the sizes picfit is allowed to generate you may specify the\n``allowed_sizes`` option as an array of sizes. Note that if you omit a width or\nheight from a size it will allow requests that exclude height or width to\npreserve aspect ratio.\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"allowed_sizes\": [\n          {\"width\": 1920, \"height\": 1080},\n          {\"width\": 720, \"height\": 480},\n          {\"width\": 480}\n        ]\n      }\n    }\n\nIP Address restriction\n----------------------\n\nYou can restrict access to upload, stats, health, delete and pprof endpoints by enabling\nrestriction in your config:\n\n``config.json``\n\n.. code-block:: json\n\n    {\n      \"options\": {\n        \"allowed_ip_addresses\": [\n          \"127.0.0.1\"\n        ]\n      }\n    }\n\nDeployment\n==========\n\nIt's recommended that the application run behind a CDN for larger applications\nor behind varnish for smaller ones.\n\nProvisioning is handled by Ansible_, you will find files in\nthe `repository <https://github.com/thoas/picfit/tree/master/provisioning>`_.\n\nYou must have Ansible_ installed on your laptop, basically if you have python\nalready installed you can do ::\n\n    $ pip install ansible\n\nRoadmap\n=======\n\nsee `issues <https://github.com/thoas/picfit/issues>`_\n\nDon't hesitate to send patch or improvements.\n\n\nClients\n=======\n\nClient libraries will help you generate picfit urls with your secret key.\n\n* `picfit-go <https://github.com/ulule/picfit-go>`_: a Go client library\n\nIn production\n=============\n\n- Ulule_: an european crowdfunding platform\n\nInspirations\n============\n\n* pilbox_\n* `thumbor <https://github.com/thumbor/thumbor>`_\n* `trousseau <https://github.com/oleiade/trousseau>`_\n\nThanks to these beautiful projects.\n\n.. _GOPATH: http://golang.org/doc/code.html#GOPATH\n.. _Redis: http://redis.io/\n.. _Redis cluster: https://redis.io/topics/cluster-tutorial\n.. _pilbox: https://github.com/agschwender/pilbox\n.. _varnish: https://www.varnish-cache.org/\n.. _persistence: http://redis.io/topics/persistence\n.. _Ansible: http://www.ansible.com/home\n.. _Ulule: http://www.ulule.com\n.. _sentry: https://github.com/getsentry/sentry\n.. _raven: https://github.com/getsentry/raven-go\n.. _httpie: https://github.com/jakubroztocil/httpie\n.. _pprof: https://blog.golang.org/profiling-go-programs\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "constants",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "failure",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.9033203125,
          "content": "module github.com/thoas/picfit\n\nrequire (\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/cstockton/go-conv v0.0.0-20170524002450-66a2b2ba36e1\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/getsentry/sentry-go v0.19.0\n\tgithub.com/gin-gonic/contrib v0.0.0-20201101042839-6a891bf89f19\n\tgithub.com/gin-gonic/gin v1.9.1\n\tgithub.com/go-playground/validator/v10 v10.15.4 // indirect\n\tgithub.com/go-spectest/imaging v1.0.6\n\tgithub.com/k0kubun/pp v3.0.1+incompatible\n\tgithub.com/lucasb-eyer/go-colorful v0.0.0-20180709185858-c7842319cf3a\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/mholt/binding v0.0.0-20170917043419-f4f58459f5f7\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible // indirect\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/rubenfonseca/fastimage v0.0.0-20170112075114-7e006a27a95b\n\tgithub.com/rwcarlsen/goexif v0.0.0-20180518182100-8d986c03457a\n\tgithub.com/spf13/cast v1.4.0 // indirect\n\tgithub.com/spf13/viper v1.8.1\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/thoas/go-funk v0.9.3\n\tgithub.com/thoas/stats v0.0.0-20160726120248-152b5d051953\n\tgithub.com/ulule/gokvstores v0.1.1-0.20221229151109-3bd12fb72ebe\n\tgithub.com/ulule/gostorages v0.2.5\n\tgithub.com/urfave/cli v1.22.10\n\tgolang.org/x/image v0.18.0\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/DATA-DOG/go-sqlmock.v1 v1.3.0 // indirect\n\tgopkg.in/fukata/golang-stats-api-handler.v1 v1.0.0\n)\n\nrequire (\n\tgithub.com/chai2010/webp v1.1.1\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/prometheus/client_golang v1.14.0\n\tgolang.org/x/sync v0.7.0\n)\n\nrequire (\n\tcloud.google.com/go v0.110.0 // indirect\n\tcloud.google.com/go/compute v1.19.1 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tcloud.google.com/go/iam v0.13.0 // indirect\n\tcloud.google.com/go/storage v1.28.1 // indirect\n\tgithub.com/aws/aws-sdk-go v1.34.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bytedance/sonic v1.10.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d // indirect\n\tgithub.com/chenzhuoyu/iasm v0.9.0 // indirect\n\tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n\tgithub.com/fsnotify/fsnotify v1.4.9 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.2 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-redis/redis/v8 v8.11.5 // indirect\n\tgithub.com/goccy/go-json v0.10.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/google/go-cmp v0.5.9 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.2.3 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.7.1 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.3.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.5 // indirect\n\tgithub.com/kr/pretty v0.3.0 // indirect\n\tgithub.com/leodido/go-urn v1.2.4 // indirect\n\tgithub.com/magiconair/properties v1.8.5 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.4.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml v1.9.3 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.1.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.3.0 // indirect\n\tgithub.com/prometheus/common v0.37.0 // indirect\n\tgithub.com/prometheus/procfs v0.8.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.8.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/spf13/afero v1.6.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/subosito/gotenv v1.2.0 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.11 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgolang.org/x/arch v0.5.0 // indirect\n\tgolang.org/x/crypto v0.21.0 // indirect\n\tgolang.org/x/net v0.23.0 // indirect\n\tgolang.org/x/oauth2 v0.7.0 // indirect\n\tgolang.org/x/sys v0.18.0 // indirect\n\tgolang.org/x/text v0.16.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2 // indirect\n\tgoogle.golang.org/api v0.114.0 // indirect\n\tgoogle.golang.org/appengine v1.6.7 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1 // indirect\n\tgoogle.golang.org/grpc v1.56.3 // indirect\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\ngo 1.21\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 85.5146484375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go v0.110.0 h1:Zc8gqp3+a9/Eyph2KDmcGaPtbKRIoqq4YTlL4NMD0Ys=\ncloud.google.com/go v0.110.0/go.mod h1:SJnCLqQ0FCFGSZMUNUf84MV3Aia54kn7pi8st7tMzaY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/compute v1.19.1 h1:am86mquDUgjGNWxiGn+5PGLbmgiWXlE/yNWpIpNvuXY=\ncloud.google.com/go/compute v1.19.1/go.mod h1:6ylj3a05WF8leseCdIf77NK0g1ey+nj5IKd5/kvShxE=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=\ncloud.google.com/go/iam v0.13.0 h1:+CmB+K0J/33d0zSQ9SlFWUeCCEn5XJA0ZMZ3pHE9u8k=\ncloud.google.com/go/iam v0.13.0/go.mod h1:ljOg+rcNfzZ5d6f1nAUJ8ZIxOaZUVoS14bKCtaLZ/D0=\ncloud.google.com/go/longrunning v0.4.1 h1:v+yFJOfKC3yZdY6ZUI933pIYdhyhV8S3NpWrXWmg7jM=\ncloud.google.com/go/longrunning v0.4.1/go.mod h1:4iWDqhBZ70CvZ6BfETbvam3T8FMvLK+eFj0E6AaRQTo=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.3.0/go.mod h1:9IAwXhoyBJ7z9LcAwkj0/7NnPzYaPeZxxVp3zm+5IqA=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncloud.google.com/go/storage v1.28.1 h1:F5QDG5ChchaAVQhINh24U99OWHURqrW8OmQcGKXcbgI=\ncloud.google.com/go/storage v1.28.1/go.mod h1:Qnisd4CqDdo6BGs2AD5LLnEsmSQ80wQ5ogcBBKhU86Y=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/aws/aws-sdk-go v1.34.0 h1:brux2dRrlwCF5JhTL7MUT3WUwo9zfDHZZp3+g3Mvlmo=\ngithub.com/aws/aws-sdk-go v1.34.0/go.mod h1:5zCpMtNQVjRREroY7sYe8lOMRSxkhG6MZveU8YkpAk0=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bketelsen/crypt v0.0.4/go.mod h1:aI6NrJ0pMGgvZKL1iVgXLnfIFJtfV+bKCoqOes/6LfM=\ngithub.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=\ngithub.com/bytedance/sonic v1.10.0-rc/go.mod h1:ElCzW+ufi8qKqNW0FY314xriJhyJhuoJ3gFZdAHF7NM=\ngithub.com/bytedance/sonic v1.10.1 h1:7a1wuFXL1cMy7a3f7/VFcEtriuXQnUBhtoVfOZiaysc=\ngithub.com/bytedance/sonic v1.10.1/go.mod h1:iZcSUejdk5aukTND/Eu/ivjQuEL0Cu9/rf50Hi0u/g4=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chai2010/webp v1.1.1 h1:jTRmEccAJ4MGrhFOrPMpNGIJ/eybIgwKpcACsrTEapk=\ngithub.com/chai2010/webp v1.1.1/go.mod h1:0XVwvZWdjjdxpUEIf7b9g9VkHFnInUSYujwqTLEuldU=\ngithub.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=\ngithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=\ngithub.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d h1:77cEq6EriyTZ0g/qfRdp61a3Uu/AWrgIq2s0ClJV1g0=\ngithub.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d/go.mod h1:8EPpVsBuRksnlj1mLy4AWzRNQYxauNi62uWcE3to6eA=\ngithub.com/chenzhuoyu/iasm v0.9.0 h1:9fhXjVzq5hUy2gkhhgHl95zG2cEAhw9OSGs8toWWAwo=\ngithub.com/chenzhuoyu/iasm v0.9.0/go.mod h1:Xjy2NpN3h7aUqeqM+woSuuvxmIe6+DDsiNLIrkAmYog=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd/v22 v22.3.2/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cstockton/go-conv v0.0.0-20170524002450-66a2b2ba36e1 h1:h4OgDocdYHGiUh+zUEe4nFlb9ShoHUllqDefGaRoZFg=\ngithub.com/cstockton/go-conv v0.0.0-20170524002450-66a2b2ba36e1/go.mod h1:MBKpQ5HV5wcT/nQYoEqjSMiXwxPouaReOs2f4kj70SQ=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9 h1:hsms1Qyu0jgnwNXIxa+/V/PDsU6CfLf6CNO8H7IWoS4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=\ngithub.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=\ngithub.com/getsentry/sentry-go v0.19.0 h1:BcCH3CN5tXt5aML+gwmbFwVptLLQA+eT866fCO9wVOM=\ngithub.com/getsentry/sentry-go v0.19.0/go.mod h1:y3+lGEFEFexZtpbG1GUE2WD/f9zGyKYwpEqryTOC/nE=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/contrib v0.0.0-20201101042839-6a891bf89f19 h1:J2LPEOcQmWaooBnBtUDV9KHFEnP5LYTZY03GiQ0oQBw=\ngithub.com/gin-gonic/contrib v0.0.0-20201101042839-6a891bf89f19/go.mod h1:iqneQ2Df3omzIVTkIfn7c1acsVnMGiSLn4XF5Blh3Yg=\ngithub.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=\ngithub.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-kit/log v0.2.0/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logfmt/logfmt v0.5.1/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.15.4 h1:zMXza4EpOdooxPel5xDqXEdXG5r+WggpvnAKMsalBjs=\ngithub.com/go-playground/validator/v10 v10.15.4/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=\ngithub.com/go-redis/redis/v8 v8.11.5 h1:AcZZR7igkdvfVmQTPnu9WE37LRrO/YrBH5zWyjDC0oI=\ngithub.com/go-redis/redis/v8 v8.11.5/go.mod h1:gREzHqY1hg6oD9ngVRbLStwAWKhA0FEgq8Jd4h5lpwo=\ngithub.com/go-spectest/imaging v1.0.6 h1:b7qzcXLs1p9uZMjAKO+oe+a6EGo5JbwPDkcWafmTnX8=\ngithub.com/go-spectest/imaging v1.0.6/go.mod h1:/AyhBt5HEFGDPy2AxP+hcV5NH8QQpftJP9g3yGOVtvs=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=\ngithub.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e h1:1r7pUrabqp18hOBcwBwiTsbnFeTZHV9eER/QT5JVZxY=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible h1:/CP5g8u/VJHijgedC/Legn3BAbAaWPgecwXBIDzw5no=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.3.2 h1:IqNFLAmvJOgVlpdEBiQbDc2EwKW77amAycfTuWKdfvw=\ngithub.com/google/martian/v3 v3.3.2/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.3 h1:yk9/cqRKtT9wXZSsRH9aurXEpJX+U6FLtpYTdC3R06k=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.3/go.mod h1:AwSRAtLfXpU5Nm3pW+v7rGDHp09LsPtGY9MduiEsR9k=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/gax-go/v2 v2.7.1 h1:gF4c0zjUP2H/s/hEGyLA3I0fA2ZWjzYiONAD6cvPr8A=\ngithub.com/googleapis/gax-go/v2 v2.7.1/go.mod h1:4orTrqY6hXxxaUL4LHIPl6lGo8vAE38/qKbhSAKP6QI=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1 h1:EGx4pi6eqNxGaHF6qqu48+N2wcFQ5qg5FXgOdqsJ5d8=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=\ngithub.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/jmespath/go-jmespath v0.3.0 h1:OS12ieG61fsCg5+qLJ+SsW9NicxNkg3b25OyT2yCeUc=\ngithub.com/jmespath/go-jmespath v0.3.0/go.mod h1:9QtRXoHjLGCJ5IBSaohpXITPlowMeeYCZ7fLUTSywik=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88 h1:uC1QfSlInpQF+M0ao65imhwqKnz3Q2z/d8PWZRMQvDM=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\ngithub.com/k0kubun/pp v3.0.1+incompatible h1:3tqvf7QgUnZ5tXO6pNAZlrvHgl6DvifjDrd9g2S9Z40=\ngithub.com/k0kubun/pp v3.0.1+incompatible/go.mod h1:GWse8YhT0p8pT4ir3ZgBbfZild3tgzSScAn6HmfYukg=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.5 h1:0E5MSMDEoAulmXNFquVs//DdoomxaoTY1kUhbc/qbZg=\ngithub.com/klauspost/cpuid/v2 v2.2.5/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=\ngithub.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=\ngithub.com/lucasb-eyer/go-colorful v0.0.0-20180709185858-c7842319cf3a h1:B2QfFRl5yGVGGcyEVFzfdXlC1BBvszsIAsCeef2oD0k=\ngithub.com/lucasb-eyer/go-colorful v0.0.0-20180709185858-c7842319cf3a/go.mod h1:NXg0ArsFk0Y01623LgUqoqcouGDB+PwCCQlrwrG6xJ4=\ngithub.com/magiconair/properties v1.8.5 h1:b6kJs+EmPFMYGkow9GiUyCyOvIwYetYJ3fSaWak/Gls=\ngithub.com/magiconair/properties v1.8.5/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1 h1:4hp9jkHxhMHkqkrB3Ix0jegS5sx/RkqARlsWZ6pIwiU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mholt/binding v0.0.0-20170917043419-f4f58459f5f7 h1:zhiBfYg+pc9TsJ44kTQDQox+Mrqq+Yd3rFliBdWSJks=\ngithub.com/mholt/binding v0.0.0-20170917043419-f4f58459f5f7/go.mod h1:fdTUY9qwc5FrbACIVqskE2Yjb3O/Kt9cPJ6TauRzkjw=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1 h1:CpVNEelQCZBooIPDn+AR3NpivK/TIKU8bDxdASFVQag=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.0.0/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=\ngithub.com/onsi/gomega v1.18.1 h1:M1GfJqGRrBrrGGsbxzV5dqM2U2ApXefZCQpkukxYRLE=\ngithub.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pelletier/go-toml v1.9.3 h1:zeC5b1GviRUyKYd6OJPvBU/mcVDVoL1OhT17FCt5dSQ=\ngithub.com/pelletier/go-toml v1.9.3/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.1.0 h1:FnwAJ4oYMvbT/34k9zzHuZNrhlz48GB3/s6at6/MHO4=\ngithub.com/pelletier/go-toml/v2 v2.1.0/go.mod h1:tJU2Z3ZkXwnxa4DPO899bsyIoywizdUvyaeZurnPPDc=\ngithub.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=\ngithub.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_golang v1.12.1/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=\ngithub.com/prometheus/client_golang v1.14.0 h1:nJdhIvne2eSX/XRAFV9PcvFFRbrjbcTUj0VP62TMhnw=\ngithub.com/prometheus/client_golang v1.14.0/go.mod h1:8vpkKitgIVNcqrRBWh1C4TIUQgYNtG/XQE4E/Zae36Y=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.3.0 h1:UBgGFHqYdG/TPFD1B1ogZywDqEkwp3fBMvqdiQ7Xew4=\ngithub.com/prometheus/client_model v0.3.0/go.mod h1:LDGWKZIo7rky3hgvBe+caln+Dr3dPggB5dvjtD7w9+w=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=\ngithub.com/prometheus/common v0.37.0 h1:ccBbHCgIiT9uSoFY0vX8H3zsNR5eLt17/RQLUvn8pXE=\ngithub.com/prometheus/common v0.37.0/go.mod h1:phzohg0JFMnBEFGxTDbfu3QyL5GI8gTQJFhYO5B3mfA=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.7.3/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.8.0 h1:ODq8ZFEaYeCaZOJlZZdJA2AbQR98dSHSM1KW/You5mo=\ngithub.com/prometheus/procfs v0.8.0/go.mod h1:z7EfXMXOkbkqb9IINtpCn86r/to3BnA0uaxHdg830/4=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/rubenfonseca/fastimage v0.0.0-20170112075114-7e006a27a95b h1:F8SRXk6Ahld/UDZqhM5XFNsGRRjMYhpNz5mxe5bjSKI=\ngithub.com/rubenfonseca/fastimage v0.0.0-20170112075114-7e006a27a95b/go.mod h1:za/FM5/4JjuNHv6y8CdQrGuxtnJP4NBVauNR05i/0HQ=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/rwcarlsen/goexif v0.0.0-20180518182100-8d986c03457a h1:ZDZdsnbMuRSoVbq1gR47o005lfn2OwODNCr23zh9gSk=\ngithub.com/rwcarlsen/goexif v0.0.0-20180518182100-8d986c03457a/go.mod h1:hPqNNc0+uJM6H+SuU8sEs5K5IQeKccPqeSjfgcKGgPk=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d h1:zE9ykElWQ6/NYmHa3jpm/yHnI4xSofP+UP6SpjHcSeM=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4 h1:fv0U8FUIMPNf1L9lnHLvLhgicrIVChEkdzIKYqbNC9s=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/spf13/afero v1.6.0 h1:xoax2sJ2DT8S8xA2paPFjDCScCNeWsg75VG0DLRreiY=\ngithub.com/spf13/afero v1.6.0/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.4.0 h1:WhlbjwB9EGCc8W5Rxdkus+wmH2ASRwwTJk6tgHKwdqQ=\ngithub.com/spf13/cast v1.4.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.8.1 h1:Kq1fyeebqsBfbjZj4EL7gj2IO0mMaiyjYUWcUsl2O44=\ngithub.com/spf13/viper v1.8.1/go.mod h1:o0Pch8wJ9BVSWGQMbra6iw0oQ5oktSIBaujf1rJH9Ns=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/subosito/gotenv v1.2.0 h1:Slr1R9HxAlEKefgq5jn9U+DnETlIUa6HfgEzj0g5d7s=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/thoas/go-funk v0.9.3 h1:7+nAEx3kn5ZJcnDm2Bh23N2yOtweO14bi//dvRtgLpw=\ngithub.com/thoas/go-funk v0.9.3/go.mod h1:+IWnUfUmFO1+WVYQWQtIJHeRRdaIyyYglZN7xzUPe4Q=\ngithub.com/thoas/stats v0.0.0-20160726120248-152b5d051953 h1:PD6HdaGc9tn2a8W/33zxcA6DTq1D1K0O/PKWOGz3Lxo=\ngithub.com/thoas/stats v0.0.0-20160726120248-152b5d051953/go.mod h1:GkZsNBOco11YY68OnXUARbSl26IOXXAeYf6ZKmSZR2M=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=\ngithub.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/ulule/gokvstores v0.1.1-0.20221229151109-3bd12fb72ebe h1:ayWYvm5FWr78c8RYS32fXoZ5DM+sn3ngVeE3CHY3beM=\ngithub.com/ulule/gokvstores v0.1.1-0.20221229151109-3bd12fb72ebe/go.mod h1:2buRSW9ZL73BFOkRwBSOVcPJG/JQxcbZPs8fo0TD5X0=\ngithub.com/ulule/gostorages v0.2.5 h1:BY+/uq74+VRG83coKHFs3II3k7sxIkgkh+pBRZlvWyk=\ngithub.com/ulule/gostorages v0.2.5/go.mod h1:7yGiGHJ9mE+He6sB42cJaRE4zcselRo4g2GBd8NGEMU=\ngithub.com/urfave/cli v1.22.10 h1:p8Fspmz3iTctJstry1PYS3HVdllxnEzTEsgIgtxTrCk=\ngithub.com/urfave/cli v1.22.10/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngo.etcd.io/etcd/api/v3 v3.5.0/go.mod h1:cbVKeC6lCfl7j/8jBhAK6aIYO9XOjdptoxU/nLQcPvs=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.0/go.mod h1:IJHfcCEKxYu1Os13ZdwCwIUTUVGYTSAM3YSwc9/Ac1g=\ngo.etcd.io/etcd/client/v2 v2.305.0/go.mod h1:h9puh54ZTgAKtEbut2oe9P4L/oqKCVB6xsXlzd7alYQ=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/arch v0.5.0 h1:jpGode6huXQxcskEIpOCvrU+tzo81b6+oFLUYXWtH/Y=\ngolang.org/x/arch v0.5.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\ngolang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210402161424-2e8d93401602/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.7.0 h1:qe6s0zUXlPX80/dITx3440hWZ7GwMwgDDyrSGTPJG/g=\ngolang.org/x/oauth2 v0.7.0/go.mod h1:hPLQkd9LyjfXTiRohC/41GhcFqxisoUQ99sCUOHO9x4=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191111182352-50fa39b762bc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2 h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=\ngolang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.44.0/go.mod h1:EBOGZqzyhtvMDoxwS97ctnh0zUmYY6CxqXsc1AvkYD8=\ngoogle.golang.org/api v0.114.0 h1:1xQPji6cO2E2vLiI+C/XiFAnsn1WV3mjaEwGLhi3grE=\ngoogle.golang.org/api v0.114.0/go.mod h1:ifYI2ZsFK6/uGddGfAD5BMxlnkBqCmqHSDUVi45N5Yg=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1 h1:KpwkzHKEF7B9Zxg18WzOa7djJ+Ha5DzthMyZYQfEn2A=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1/go.mod h1:nKE/iIaLqn2bQwXBg8f1g2Ylh6r5MN5CmZvuzZCgsCU=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.56.3 h1:8I4C0Yq1EjstUzUJzpcRVbuYA2mODtEmpWiQoN/b2nc=\ngoogle.golang.org/grpc v1.56.3/go.mod h1:I9bI3vqKfayGqPUAwGdOSu7kt6oIJLixfffKrpXqQ9s=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/DATA-DOG/go-sqlmock.v1 v1.3.0 h1:FVCohIoYO7IJoDDVpV2pdq7SgrMH6wHnuTyrdrxJNoY=\ngopkg.in/DATA-DOG/go-sqlmock.v1 v1.3.0/go.mod h1:OdE7CF6DbADk7lN8LIKRzRJTTZXIjtWgA5THM5lhBAw=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/fukata/golang-stats-api-handler.v1 v1.0.0 h1:UR6t2xlnAa3nDYeT+akxO31opz8bUDkswQ8tWd4E754=\ngopkg.in/fukata/golang-stats-api-handler.v1 v1.0.0/go.mod h1:GUgEemw8P+egdtLtzGsN/STzYt5kI76HPw4JWg7gDvw=\ngopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nnullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "hash",
          "type": "tree",
          "content": null
        },
        {
          "name": "http",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "logger",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics.go",
          "type": "blob",
          "size": 0.4404296875,
          "content": "package picfit\n\nimport (\n\t\"github.com/prometheus/client_golang/prometheus\"\n)\n\nvar defaultMetrics = newMetrics()\n\ntype metrics struct {\n\thistogram *prometheus.HistogramVec\n}\n\nfunc newMetrics() *metrics {\n\treturn &metrics{\n\t\thistogram: prometheus.NewHistogramVec(\n\t\t\tprometheus.HistogramOpts{Name: \"picfit_action_seconds\"},\n\t\t\t[]string{\"picfit_method\", \"picfit_image_type\"},\n\t\t),\n\t}\n}\n\nfunc init() {\n\tprometheus.MustRegister(defaultMetrics.histogram)\n}\n"
        },
        {
          "name": "middleware",
          "type": "tree",
          "content": null
        },
        {
          "name": "modd.conf",
          "type": "blob",
          "size": 0.099609375,
          "content": "**/*.go **/*.json !**/*_test.go !vendor {\n    prep: make build\n    daemon +sigterm: make run-server\n}\n"
        },
        {
          "name": "options.go",
          "type": "blob",
          "size": 0.4072265625,
          "content": "package picfit\n\n// Option is a functional option.\ntype Option func(*Options)\n\n// Options are server options.\ntype Options struct {\n\tLoad bool\n}\n\n// NewOptions initializes server options.\nfunc newOptions(opts ...Option) Options {\n\topt := Options{}\n\tfor _, o := range opts {\n\t\to(&opt)\n\t}\n\treturn opt\n}\n\n// WithLoad overrides load value.\nfunc WithLoad(load bool) Option {\n\treturn func(o *Options) {\n\t\to.Load = load\n\t}\n}\n"
        },
        {
          "name": "parameters.go",
          "type": "blob",
          "size": 5.46875,
          "content": "package picfit\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"slices\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/pkg/errors\"\n\t\"github.com/ulule/gostorages\"\n\n\t\"github.com/thoas/picfit/constants\"\n\t\"github.com/thoas/picfit/engine\"\n\t\"github.com/thoas/picfit/engine/backend\"\n\t\"github.com/thoas/picfit/failure\"\n\t\"github.com/thoas/picfit/image\"\n)\n\nconst (\n\tdefaultDegree  = 90\n\tdefaultHeight  = 0\n\tdefaultUpscale = true\n\tdefaultWidth   = 0\n)\n\nvar formats = map[string]image.Format{\n\t\"bmp\":  image.BMP,\n\t\"gif\":  image.GIF,\n\t\"jpeg\": image.JPEG,\n\t\"jpg\":  image.JPEG,\n\t\"png\":  image.PNG,\n\t\"tiff\": image.TIFF,\n\t\"webp\": image.WEBP,\n}\n\ntype Parameters struct {\n\toutput     *image.ImageFile\n\toperations []engine.EngineOperation\n}\n\n// newParameters returns Parameters for engine.\nfunc (p *Processor) NewParameters(ctx context.Context, input *image.ImageFile, qs map[string]interface{}) (*Parameters, error) {\n\tformat, ok := qs[\"fmt\"].(string)\n\tfilepath := input.Filepath\n\n\tif ok {\n\t\tif _, ok := engine.ContentTypes[format]; !ok {\n\t\t\treturn nil, fmt.Errorf(\"Unknown format %s\", format)\n\t\t}\n\n\t}\n\n\tif format == \"\" && p.engine.Format != \"\" {\n\t\tformat = p.engine.Format\n\t}\n\n\tif format == \"\" {\n\t\tformat = input.Format()\n\t}\n\n\tif format == \"\" {\n\t\tformat = p.engine.DefaultFormat\n\t}\n\n\tif format != input.Format() {\n\t\tindex := len(filepath) - len(input.Format())\n\n\t\tfilepath = filepath[:index] + format\n\n\t\tif contentType, ok := engine.ContentTypes[format]; ok {\n\t\t\tinput.Headers[\"Content-Type\"] = contentType\n\t\t}\n\t}\n\n\toutput := &image.ImageFile{\n\t\tSource:   input.Source,\n\t\tKey:      input.Key,\n\t\tHeaders:  input.Headers,\n\t\tFilepath: filepath,\n\t}\n\n\tvar operations []engine.EngineOperation\n\n\top, ok := qs[\"op\"].(string)\n\tif ok {\n\t\toperation := engine.Operation(op)\n\t\topts, err := p.newBackendOptionsFromParameters(operation, qs)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\topts.Format = formats[format]\n\t\toperations = append(operations, engine.EngineOperation{\n\t\t\tOptions:   opts,\n\t\t\tOperation: operation,\n\t\t})\n\t}\n\n\tops, ok := qs[\"op\"].([]string)\n\tif ok {\n\t\tfor i := range ops {\n\t\t\tvar err error\n\t\t\tengineOperation := &engine.EngineOperation{}\n\t\t\toperation, k := engine.Operations[ops[i]]\n\t\t\tif k {\n\t\t\t\tengineOperation.Operation = operation\n\t\t\t\tengineOperation.Options, err = p.newBackendOptionsFromParameters(operation, qs)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn nil, err\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tengineOperation, err = p.NewEngineOperationFromQuery(ctx, ops[i])\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn nil, err\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif engineOperation != nil {\n\t\t\t\tengineOperation.Options.Format = formats[format]\n\t\t\t\toperations = append(operations, *engineOperation)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn &Parameters{\n\t\toutput:     output,\n\t\toperations: operations,\n\t}, nil\n}\n\nfunc (p Processor) NewEngineOperationFromQuery(ctx context.Context, op string) (*engine.EngineOperation, error) {\n\tparams := make(map[string]interface{})\n\tvar imagePaths []string\n\tfor _, p := range strings.Split(op, \" \") {\n\t\tl := strings.Split(p, \":\")\n\t\tif len(l) > 1 {\n\t\t\tif l[0] == \"path\" {\n\t\t\t\timagePaths = append(imagePaths, l[1])\n\t\t\t} else {\n\t\t\t\tparams[l[0]] = l[1]\n\t\t\t}\n\t\t}\n\t}\n\n\top, ok := params[\"op\"].(string)\n\tif !ok {\n\t\treturn nil, nil\n\t}\n\n\toperation := engine.Operation(op)\n\topts, err := p.newBackendOptionsFromParameters(operation, params)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tfor i := range imagePaths {\n\t\tif _, err := p.sourceStorage.Stat(ctx, imagePaths[i]); errors.Is(err, gostorages.ErrNotExist) {\n\t\t\treturn nil, errors.Wrapf(failure.ErrFileNotExists, \"file does not exist: %s\", imagePaths[i])\n\t\t}\n\n\t\tfile, err := image.FromStorage(ctx, p.sourceStorage, imagePaths[i])\n\t\tif err != nil {\n\t\t\treturn nil, errors.Wrapf(err, \"unable to load file from storage: %s\", imagePaths[i])\n\t\t}\n\t\topts.Images = append(opts.Images, *file)\n\t}\n\n\treturn &engine.EngineOperation{\n\t\tOptions:   opts,\n\t\tOperation: operation,\n\t}, nil\n}\n\nfunc (p Processor) newBackendOptionsFromParameters(operation engine.Operation, qs map[string]interface{}) (*backend.Options, error) {\n\tvar (\n\t\terr     error\n\t\tquality = p.engine.DefaultQuality\n\t\tupscale = defaultUpscale\n\t\theight  = defaultHeight\n\t\twidth   = defaultWidth\n\t\tdegree  = defaultDegree\n\t)\n\n\tq, ok := qs[\"q\"].(string)\n\tif ok {\n\t\tquality, err = strconv.Atoi(q)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tif quality > 100 {\n\t\t\treturn nil, failure.ErrQuality\n\t\t}\n\t}\n\n\tposition, ok := qs[\"pos\"].(string)\n\tif !ok && operation == engine.Flip {\n\t\treturn nil, fmt.Errorf(\"Parameter \\\"pos\\\" not found in query string\")\n\t}\n\n\tstick, ok := qs[\"stick\"].(string)\n\tif ok {\n\t\tif !slices.Contains(constants.StickPositions, stick) {\n\t\t\treturn nil, fmt.Errorf(\"parameter \\\"stick\\\" has wrong value. Available values are: %v\", constants.StickPositions)\n\t\t}\n\t}\n\n\tcolor, _ := qs[\"color\"].(string)\n\n\tif deg, ok := qs[\"deg\"].(string); ok {\n\t\tdegree, err = strconv.Atoi(deg)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tif up, ok := qs[\"upscale\"].(string); ok {\n\t\tupscale, err = strconv.ParseBool(up)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tif w, ok := qs[\"w\"].(string); ok {\n\t\twidth, err = strconv.Atoi(w)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tif h, ok := qs[\"h\"].(string); ok {\n\t\theight, err = strconv.Atoi(h)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tfilter, ok := qs[\"filter\"].(string)\n\tif ok && !slices.Contains(constants.Filters, filter) {\n\t\treturn nil, fmt.Errorf(\"parameter \\\"filter\\\" has wrong value. Available values are: %v\", constants.Filters)\n\t}\n\n\treturn &backend.Options{\n\t\tColor:    color,\n\t\tDegree:   degree,\n\t\tFilter:   filter,\n\t\tHeight:   height,\n\t\tPosition: position,\n\t\tQuality:  quality,\n\t\tStick:    stick,\n\t\tUpscale:  upscale,\n\t\tWidth:    width,\n\t}, nil\n}\n"
        },
        {
          "name": "parameters_test.go",
          "type": "blob",
          "size": 0.6787109375,
          "content": "package picfit_test\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/thoas/picfit/tests\"\n)\n\nfunc TestEngineOperationFromQuery(t *testing.T) {\n\top := \"op:resize w:123 h:321 upscale:true pos:top q:99\"\n\tprocessor := tests.NewDummyProcessor(context.Background())\n\toperation, err := processor.NewEngineOperationFromQuery(context.Background(), op)\n\tassert.Nil(t, err)\n\n\tassert.Equal(t, operation.Operation.String(), \"resize\")\n\tassert.Equal(t, operation.Options.Height, 321)\n\tassert.Equal(t, operation.Options.Width, 123)\n\tassert.Equal(t, operation.Options.Position, \"top\")\n\tassert.Equal(t, operation.Options.Quality, 99)\n\tassert.True(t, operation.Options.Upscale)\n}\n"
        },
        {
          "name": "payload",
          "type": "tree",
          "content": null
        },
        {
          "name": "picfit.go",
          "type": "blob",
          "size": 1.125,
          "content": "package picfit\n\nimport (\n\t\"context\"\n\t\"log/slog\"\n\n\t\"github.com/thoas/picfit/constants\"\n\n\t\"github.com/thoas/picfit/config\"\n\t\"github.com/thoas/picfit/engine\"\n\t\"github.com/thoas/picfit/logger\"\n\t\"github.com/thoas/picfit/storage\"\n\t\"github.com/thoas/picfit/store\"\n)\n\n// NewProcessor returns a Processor instance from a config.Config instance\nfunc NewProcessor(ctx context.Context, cfg *config.Config) (*Processor, error) {\n\tcfg.Logger.ContextKeys = []string{constants.RequestIDCtx}\n\tlog := logger.New(cfg.Logger)\n\n\tsourceStorage, destinationStorage, err := storage.New(ctx,\n\t\tlog.With(slog.String(\"logger\", \"storage\")), cfg.Storage)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\ts, err := store.New(ctx,\n\t\tlog.With(slog.String(\"logger\", \"store\")),\n\t\tcfg.KVStore)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\te := engine.New(*cfg.Engine, log.With(slog.String(\"logger\", \"engine\")))\n\n\tlog.InfoContext(ctx, \"Image engine configured\",\n\t\tslog.String(\"engine\", e.String()))\n\n\treturn &Processor{\n\t\tLogger: log,\n\n\t\tconfig:             cfg,\n\t\tdestinationStorage: destinationStorage,\n\t\tengine:             e,\n\t\tsourceStorage:      sourceStorage,\n\t\tstore:              s,\n\t}, nil\n}\n"
        },
        {
          "name": "processor.go",
          "type": "blob",
          "size": 11.1318359375,
          "content": "package picfit\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"io\"\n\t\"log/slog\"\n\t\"net/url\"\n\t\"os\"\n\tfilepathpkg \"path/filepath\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/cstockton/go-conv\"\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/pkg/errors\"\n\t\"github.com/thoas/picfit/storage\"\n\t\"github.com/thoas/picfit/util\"\n\t\"github.com/ulule/gostorages\"\n\n\t\"github.com/thoas/picfit/config\"\n\t\"github.com/thoas/picfit/engine\"\n\t\"github.com/thoas/picfit/failure\"\n\t\"github.com/thoas/picfit/hash\"\n\t\"github.com/thoas/picfit/image\"\n\t\"github.com/thoas/picfit/payload\"\n\t\"github.com/thoas/picfit/store\"\n)\n\ntype Processor struct {\n\tLogger *slog.Logger\n\n\tconfig             *config.Config\n\tdestinationStorage *storage.Storage\n\tengine             *engine.Engine\n\tsourceStorage      *storage.Storage\n\tstore              store.Store\n}\n\n// Upload uploads a file to its storage\nfunc (p *Processor) Upload(ctx context.Context, payload *payload.Multipart) (*image.ImageFile, error) {\n\tvar fh io.ReadCloser\n\n\tfh, err := payload.Data.Open()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tfilepath := payload.Data.Filename\n\tif err := p.sourceStorage.Save(ctx, fh, filepath); err != nil {\n\t\treturn nil, errors.Wrapf(err, \"unable to save data on storage as: %s\", filepath)\n\t}\n\tif err := fh.Close(); err != nil {\n\t\treturn nil, errors.WithStack(err)\n\t}\n\treturn &image.ImageFile{\n\t\tFilepath: payload.Data.Filename,\n\t\tStorage:  p.sourceStorage,\n\t}, nil\n}\n\n// Store stores an image file with the defined filepath\nfunc (p *Processor) Store(ctx context.Context, log *slog.Logger, filepath string, i *image.ImageFile) error {\n\tstarttime := time.Now()\n\tif err := i.Save(ctx); err != nil {\n\t\treturn err\n\t}\n\n\tendtime := time.Now()\n\tlog.InfoContext(ctx, \"Save file to storage\",\n\t\tslog.Duration(\"duration\", endtime.Sub(starttime)),\n\t)\n\n\tstarttime = time.Now()\n\tif err := p.store.Set(ctx, i.Key, i.Filepath); err != nil {\n\t\treturn errors.WithStack(err)\n\t}\n\tendtime = time.Now()\n\tdefaultMetrics.histogram.WithLabelValues(\n\t\t\"store\",\n\t\tstrings.ToLower(filepathpkg.Ext(filepath)),\n\t).Observe(endtime.Sub(starttime).Seconds())\n\n\tlog.InfoContext(ctx, \"Save key to store\",\n\t\tslog.Duration(\"duration\", endtime.Sub(starttime)),\n\t)\n\n\t// Write children info only when we actually want to be able to delete things.\n\tif p.config.Options.EnableCascadeDelete {\n\t\tparentKey := hash.Tokey(filepath)\n\n\t\tparentKey = fmt.Sprintf(\"%s:children\", parentKey)\n\n\t\tif err := p.store.AppendSlice(ctx, parentKey, i.Key); err != nil {\n\t\t\treturn errors.WithStack(err)\n\t\t}\n\n\t\tlog.InfoContext(ctx, \"Put key into set in store\",\n\t\t\tslog.String(\"set\", parentKey),\n\t\t\tslog.String(\"value\", filepath),\n\t\t)\n\t}\n\n\treturn nil\n}\n\n// DeleteChild remove a child from store and storage\nfunc (p *Processor) DeleteChild(ctx context.Context, key string) error {\n\t// Now, every child is a hash which points to a key/value pair in\n\t// Store which in turn points to a file in dst storage.\n\tdstfileRaw, err := p.store.Get(ctx, key)\n\tif err != nil {\n\t\treturn errors.Wrapf(err, \"unable to retrieve key %s\", key)\n\t}\n\n\tif dstfileRaw != nil {\n\t\tdstfile, err := conv.String(dstfileRaw)\n\t\tif err != nil {\n\t\t\treturn errors.Wrapf(err, \"unable to cast %v to string\", dstfileRaw)\n\t\t}\n\n\t\t// And try to delete it all.\n\t\terr = p.destinationStorage.Delete(ctx, dstfile)\n\t\tif err != nil {\n\t\t\treturn errors.Wrapf(err, \"unable to delete %s on storage\", dstfile)\n\t\t}\n\t}\n\n\tif err := p.store.Delete(ctx, key); err != nil {\n\t\treturn errors.Wrapf(err, \"unable to delete key %s\", key)\n\t}\n\n\tp.Logger.InfoContext(ctx, \"Deleting child\",\n\t\tslog.String(\"key\", key))\n\n\treturn nil\n}\n\n// Delete removes a file from store and storage\nfunc (p *Processor) Delete(ctx context.Context, filepath string) error {\n\tp.Logger.InfoContext(ctx, \"Deleting file on source storage\",\n\t\tslog.String(\"file\", filepath))\n\n\tif !p.FileExists(ctx, filepath) {\n\t\tp.Logger.InfoContext(ctx, \"File does not exist anymore on source storage\",\n\t\t\tslog.String(\"file\", filepath))\n\n\t\treturn errors.Wrapf(failure.ErrFileNotExists, \"unable to delete, file does not exist: %s\", filepath)\n\t}\n\n\terr := p.sourceStorage.Delete(ctx, filepath)\n\tif err != nil {\n\t\treturn errors.Wrapf(err, \"unable to delete %s on source storage\", filepath)\n\t}\n\n\tparentKey := hash.Tokey(filepath)\n\n\tchildrenKey := fmt.Sprintf(\"%s:children\", parentKey)\n\n\texists, err := p.store.Exists(ctx, childrenKey)\n\tif err != nil {\n\t\treturn errors.Wrapf(err, \"unable to verify if %s exists\", childrenKey)\n\t}\n\n\tif !exists {\n\t\tp.Logger.InfoContext(ctx, \"Children key does not exist in set\",\n\t\t\tslog.String(\"key\", childrenKey),\n\t\t\tslog.String(\"set\", parentKey))\n\n\t\treturn nil\n\t}\n\n\t// Get the list of items to cleanup.\n\tchildren, err := p.store.GetSlice(ctx, childrenKey)\n\tif err != nil {\n\t\treturn errors.Wrapf(err, \"unable to retrieve children set %s\", childrenKey)\n\t}\n\n\tif children == nil {\n\t\tp.Logger.InfoContext(ctx, \"No children to delete in set\",\n\t\t\tslog.String(\"set\", parentKey))\n\n\t\treturn nil\n\t}\n\n\tfor _, s := range children {\n\t\tkey, err := conv.String(s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\terr = p.DeleteChild(ctx, key)\n\t\tif err != nil {\n\t\t\treturn errors.Wrapf(err, \"unable to delete child %s\", key)\n\t\t}\n\t}\n\n\t// Delete them right away, we don't care about them anymore.\n\tp.Logger.InfoContext(ctx, \"Delete set %s\",\n\t\tslog.String(\"set\", childrenKey))\n\n\tif err := p.store.Delete(ctx, childrenKey); err != nil {\n\t\treturn errors.Wrapf(err, \"unable to delete key %s\", childrenKey)\n\t}\n\n\treturn nil\n}\n\n// ProcessContext processes a gin.Context generates and retrieves an ImageFile\nfunc (p *Processor) ProcessContext(c *gin.Context, opts ...Option) (*image.ImageFile, error) {\n\tvar (\n\t\tstoreKey = c.MustGet(\"key\").(string)\n\t\tforce    = c.Query(\"force\")\n\t\toptions  = newOptions(opts...)\n\t\tctx      = c.Request.Context()\n\t\tlog      = p.Logger.With(slog.String(\"key\", storeKey))\n\t)\n\n\tmodifiedSince := c.Request.Header.Get(\"If-Modified-Since\")\n\tif modifiedSince != \"\" && force == \"\" {\n\t\texists, err := p.store.Exists(ctx, storeKey)\n\t\tif err != nil {\n\t\t\treturn nil, errors.WithStack(err)\n\t\t}\n\n\t\tif exists {\n\t\t\tlog.InfoContext(ctx, \"Key already exists on store, file not modified\",\n\t\t\t\tslog.String(\"modified-since\", modifiedSince))\n\n\t\t\treturn nil, failure.ErrFileNotModified\n\t\t}\n\t}\n\n\tif force == \"\" {\n\t\t// try to retrieve image from the k/v rtore\n\t\tfilepathRaw, err := p.store.Get(ctx, storeKey)\n\t\tif err != nil {\n\t\t\treturn nil, errors.WithStack(err)\n\t\t}\n\n\t\tif filepathRaw != nil {\n\t\t\tfilepath, err := conv.String(filepathRaw)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, errors.WithStack(err)\n\t\t\t}\n\n\t\t\tlog.InfoContext(ctx, \"Key found in store\",\n\t\t\t\tslog.String(\"filepath\", filepath))\n\n\t\t\tstarttime := time.Now()\n\t\t\timg, err := p.fileFromStorage(ctx, storeKey, filepath, options.Load)\n\t\t\t// no such file, just reprocess (maybe file cache was purged)\n\t\t\tif err != nil {\n\t\t\t\tif os.IsNotExist(err) {\n\t\t\t\t\treturn p.processImage(c, storeKey)\n\t\t\t\t}\n\n\t\t\t\treturn nil, errors.WithStack(err)\n\t\t\t}\n\n\t\t\tfilesize := util.ByteCountDecimal(int64(len(img.Content())))\n\t\t\tendtime := time.Now()\n\t\t\tlog.InfoContext(ctx, \"Image retrieved from storage\",\n\t\t\t\tslog.Duration(\"duration\", endtime.Sub(starttime)),\n\t\t\t\tslog.String(\"size\", filesize),\n\t\t\t\tslog.String(\"image\", img.Filepath))\n\n\t\t\tdefaultMetrics.histogram.WithLabelValues(\n\t\t\t\t\"load\",\n\t\t\t\tstrings.ToLower(filepathpkg.Ext(filepath)),\n\t\t\t).Observe(endtime.Sub(starttime).Seconds())\n\n\t\t\treturn img, nil\n\t\t}\n\n\t\t// Image not found from the Store, we need to process it\n\t\t// URL available in Query String\n\t\tlog.InfoContext(ctx, \"Key not found in store\")\n\t} else {\n\t\tlog.InfoContext(ctx, \"Force activated, key will be re-processed\")\n\t}\n\n\treturn p.processImage(c, storeKey)\n}\n\nfunc (p *Processor) fileFromStorage(ctx context.Context, key string, filepath string, load bool) (*image.ImageFile, error) {\n\tvar (\n\t\tfile = &image.ImageFile{\n\t\t\tKey:      key,\n\t\t\tStorage:  p.destinationStorage,\n\t\t\tFilepath: filepath,\n\t\t\tHeaders:  map[string]string{},\n\t\t}\n\t\terr error\n\t)\n\n\tif load {\n\t\tfile, err = image.FromStorage(ctx, p.destinationStorage, filepath)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tfile.Headers[\"ETag\"] = key\n\treturn file, nil\n}\n\nfunc (p *Processor) processImage(c *gin.Context, storeKey string) (*image.ImageFile, error) {\n\tvar (\n\t\tfilepath string\n\t\terr      error\n\t\tctx      = c.Request.Context()\n\t\tlog      = p.Logger.With(slog.String(\"key\", storeKey))\n\t)\n\n\tfile := &image.ImageFile{\n\t\tKey:     storeKey,\n\t\tStorage: p.destinationStorage,\n\t\tHeaders: map[string]string{},\n\t}\n\n\tqs := c.MustGet(\"parameters\").(map[string]interface{})\n\tstarttime := time.Now()\n\tu, exists := c.Get(\"url\")\n\tif exists {\n\t\tfile, err = image.FromURL(ctx, u.(*url.URL), p.config.Options.DefaultUserAgent)\n\t} else {\n\t\t// URL provided we use http protocol to retrieve it\n\t\tfilepath = qs[\"path\"].(string)\n\t\tif !p.FileExists(ctx, filepath) {\n\t\t\treturn nil, errors.Wrapf(failure.ErrFileNotExists, \"unable to process image, file does exist: %s\", filepath)\n\t\t}\n\n\t\tfile, err = image.FromStorage(ctx, p.sourceStorage, filepath)\n\t}\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"unable to process image\")\n\t}\n\tendtime := time.Now()\n\n\tdefaultMetrics.histogram.WithLabelValues(\n\t\t\"load\",\n\t\tstrings.ToLower(filepathpkg.Ext(filepath)),\n\t).Observe(endtime.Sub(starttime).Seconds())\n\n\tfilesize := util.ByteCountDecimal(int64(len(file.Content())))\n\n\tlog = log.With(\n\t\tslog.String(\"image\", file.Filepath),\n\t\tslog.String(\"size\", filesize),\n\t)\n\n\tlog.InfoContext(ctx, \"Retrieved image to process from storage\",\n\t\tslog.Duration(\"duration\", endtime.Sub(starttime)))\n\n\tparameters, err := p.NewParameters(ctx, file, qs)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"unable to process image\")\n\t}\n\n\tstarttime = time.Now()\n\tctxtimeout, cancel := context.WithTimeout(ctx, time.Second*time.Duration(p.config.Options.TransformTimeout))\n\tdefer cancel()\n\tfile, err = p.engine.Transform(ctxtimeout, parameters.output, parameters.operations)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"unable to process image\")\n\t}\n\tendtime = time.Now()\n\tdefaultMetrics.histogram.WithLabelValues(\n\t\t\"transform\",\n\t\tstrings.ToLower(filepathpkg.Ext(filepath)),\n\t).Observe(endtime.Sub(starttime).Seconds())\n\n\tfilesize = util.ByteCountDecimal(int64(len(file.Content())))\n\tfilename := p.ShardFilename(storeKey)\n\tfile.Filepath = fmt.Sprintf(\"%s.%s\", filename, file.Format())\n\tfile.Storage = p.destinationStorage\n\tfile.Key = storeKey\n\tfile.Headers[\"ETag\"] = storeKey\n\n\tlog = log.With(\n\t\tslog.String(\"image\", file.Filepath),\n\t\tslog.String(\"size\", filesize),\n\t)\n\n\tlog.InfoContext(ctx, \"Image processed\",\n\t\tslog.Duration(\"duration\", endtime.Sub(starttime)))\n\n\tif err := p.Store(ctx, log, filepath, file); err != nil {\n\t\treturn nil, errors.Wrapf(err, \"unable to store processed image: %s\", filepath)\n\t}\n\n\treturn file, nil\n}\n\n// ShardFilename shards a filename based on config\nfunc (p *Processor) ShardFilename(filename string) string {\n\tcfg := p.config\n\n\tresults := hash.Shard(filename, cfg.Shard.Width, cfg.Shard.Depth, cfg.Shard.RestOnly)\n\n\treturn strings.Join(results, \"/\")\n}\n\nfunc (p *Processor) GetKey(ctx context.Context, key string) (interface{}, error) {\n\treturn p.store.Get(ctx, key)\n}\n\nfunc (p *Processor) KeyExists(ctx context.Context, key string) (bool, error) {\n\treturn p.store.Exists(ctx, key)\n}\n\nfunc (p *Processor) FileExists(ctx context.Context, name string) bool {\n\t_, err := p.sourceStorage.Stat(ctx, name)\n\treturn !errors.Is(err, gostorages.ErrNotExist)\n}\n\nfunc (p *Processor) OpenFile(ctx context.Context, name string) (io.ReadCloser, error) {\n\treturn p.sourceStorage.Open(ctx, name)\n}\n"
        },
        {
          "name": "processor_test.go",
          "type": "blob",
          "size": 15.3837890625,
          "content": "package picfit_test\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"mime\"\n\t\"mime/multipart\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"net/url\"\n\t\"os\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/cstockton/go-conv\"\n\n\t\"github.com/go-spectest/imaging\"\n\n\t\"github.com/stretchr/testify/assert\"\n\n\t\"github.com/thoas/picfit/config\"\n\t\"github.com/thoas/picfit/server\"\n\t\"github.com/thoas/picfit/signature\"\n\t\"github.com/thoas/picfit/tests\"\n)\n\nfunc TestSignatureApplicationNotAuthorized(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"secret_key\": \"dummy\"\n\t}`\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tu, _ := url.Parse(ts.URL + \"/avatar.png\")\n\n\t\tparams := fmt.Sprintf(\"url=%s&w=100&h=100&op=resize\", u.String())\n\n\t\tlocation := fmt.Sprintf(\"http://example.com/display?%s\", params)\n\n\t\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\t\tserver, err := server.New(context.Background(), suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 401, res.Code)\n\t}, tests.WithConfig(content))\n}\n\nfunc TestSignatureApplicationAuthorized(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"secret_key\": \"dummy\"\n\t}`\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tu, _ := url.Parse(ts.URL + \"/avatar.png\")\n\n\t\tparams := fmt.Sprintf(\"h=100&op=resize&url=%s&w=100\", u.String())\n\n\t\tvalues, err := url.ParseQuery(params)\n\t\tassert.Nil(t, err)\n\n\t\tsig := signature.Sign(\"dummy\", values.Encode())\n\n\t\tlocation := fmt.Sprintf(\"http://example.com/display?%s&sig=%s\", params, sig)\n\n\t\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\t\tserver, err := server.New(context.Background(), suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 200, res.Code)\n\t}, tests.WithConfig(content))\n\n}\n\nfunc TestSizeRestrictedApplicationNotAuthorized(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"options\": {\n\t    \"allowed_sizes\": [\n\t      {\"width\": 100, \"height\": 100}\n\t    ]\n\t  }\n\t}`\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tserver, err := server.New(context.Background(), suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tu, _ := url.Parse(ts.URL + \"/avatar.png\")\n\n\t\t// unallowed size\n\t\tparams := fmt.Sprintf(\"url=%s&w=50&h=50&op=resize\", u.String())\n\n\t\tlocation := fmt.Sprintf(\"http://example.com/display?%s\", params)\n\n\t\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 403, res.Code)\n\n\t\t// allowed size\n\t\tparams = fmt.Sprintf(\"url=%s&w=100&h=100&op=resize\", u.String())\n\n\t\tlocation = fmt.Sprintf(\"http://example.com/display?%s\", params)\n\n\t\trequest, _ = http.NewRequest(\"GET\", location, nil)\n\n\t\tres = httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 200, res.Code)\n\t}, tests.WithConfig(content))\n}\n\nfunc TestUploadHandler(t *testing.T) {\n\ttmp := os.TempDir()\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"options\": {\n\t\t  \"enable_upload\": true\n\t  },\n\t  \"storage\": {\n\t\t\"src\": {\n\t\t  \"type\": \"fs\",\n\t\t  \"location\": \"%s\",\n\t\t  \"base_url\": \"http://img.example.com\"\n\t\t}\n\t  }\n\t}`\n\n\tcontent = fmt.Sprintf(content, tmp)\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tserver, err := server.New(context.Background(), suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tf, err := os.Open(\"tests/fixtures/avatar.png\")\n\t\tassert.Nil(t, err)\n\t\tdefer f.Close()\n\n\t\tbody := new(bytes.Buffer)\n\t\tw := multipart.NewWriter(body)\n\n\t\tassert.Nil(t, err)\n\n\t\tstats, err := f.Stat()\n\n\t\tassert.Nil(t, err)\n\n\t\tfileContent, err := io.ReadAll(f)\n\n\t\tassert.Nil(t, err)\n\n\t\twriter, err := w.CreateFormFile(\"data\", \"avatar.png\")\n\n\t\tassert.Nil(t, err)\n\n\t\t_, err = writer.Write(fileContent)\n\t\tassert.NoError(t, err)\n\n\t\tif err := w.Close(); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t\treq, err := http.NewRequest(\"POST\", \"http://www.example.com/upload\", body)\n\n\t\tassert.Nil(t, err)\n\n\t\treq.Header.Add(\"Content-Type\", w.FormDataContentType())\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, req)\n\n\t\tassert.Equal(t, 200, res.Code)\n\n\t\texists := suite.Processor.FileExists(context.Background(), \"avatar.png\")\n\t\tassert.True(t, exists)\n\n\t\tfile, err := suite.Processor.OpenFile(context.Background(), \"avatar.png\")\n\t\tassert.NoError(t, err)\n\t\tfilebyte, err := io.ReadAll(file)\n\t\tassert.NoError(t, err)\n\t\tassert.Equal(t, int64(len(filebyte)), stats.Size())\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", res.Header().Get(\"Content-Type\"))\n\t}, tests.WithConfig(content))\n}\n\nfunc TestDeleteHandler(t *testing.T) {\n\ttmp := os.TempDir()\n\n\ttmpSrcStorage := filepath.Join(tmp, \"src\")\n\ttmpDstStorage := filepath.Join(tmp, \"dst\")\n\n\tassert.NoError(t, os.MkdirAll(tmpSrcStorage, 0755))\n\tassert.NoError(t, os.MkdirAll(tmpDstStorage, 0755))\n\n\timg, err := os.ReadFile(\"tests/fixtures/schwarzy.jpg\")\n\tassert.Nil(t, err)\n\n\t// copy 5 images to src storage\n\tfor i := 0; i < 5; i++ {\n\t\tfn := fmt.Sprintf(\"image%d.jpg\", i+1)\n\t\tfilepath := filepath.Join(tmpSrcStorage, fn)\n\t\terr = os.WriteFile(filepath, img, 0644)\n\t\tassert.Nil(t, err)\n\t}\n\n\tcheckDirCount := func(dir string, count int, context string) {\n\t\tdircontents, err := os.ReadDir(dir)\n\t\tassert.Nil(t, err)\n\t\tassert.Equal(t, count, len(dircontents), \"%s (%s)\", context, dir)\n\t}\n\tcheckDirCount(tmpSrcStorage, 5, \"initial copy\")\n\tcheckDirCount(tmpDstStorage, 0, \"initial copy\")\n\n\tcfg := `\n{\n\t\"debug\": true,\n\t\"port\": 3001,\n\t\"options\": {\n\t\t\"enable_delete\": true,\n\t\t\"enable_cascade_delete\": true\n\t},\n\t\"kvstore\": {\"type\": \"cache\"},\n\t\"storage\": {\n\t\t\"src\": {\n\t\t\t\"type\": \"fs\",\n\t\t\t\"location\": \"%s\"\n\t\t},\n\t\t\"dst\": {\n\t\t\t\"type\": \"fs\",\n\t\t\t\"location\": \"%s\"\n\t\t}\n\t}\n}\n\t`\n\n\tcfg = fmt.Sprintf(cfg, tmpSrcStorage, tmpDstStorage)\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tserver, err := server.New(context.Background(), suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\t// generate 5 resized image1.jpg\n\t\tfor i := 0; i < 5; i++ {\n\t\t\t// use \"get\" instead of \"display\" here to force synchronized behaviour\n\t\t\turl := fmt.Sprintf(\"http://www.example.com/get/resize/100x%d/image1.jpg\", 100+i*10)\n\t\t\treq, err := http.NewRequest(\"GET\", url, nil)\n\t\t\tassert.Nil(t, err)\n\n\t\t\tres := httptest.NewRecorder()\n\t\t\tserver.ServeHTTP(res, req)\n\t\t\tassert.Equal(t, 200, res.Code)\n\t\t}\n\n\t\tcheckDirCount(tmpDstStorage, 5, \"after resize requests\")\n\n\t\t// generate 2 resized image2.jpg\n\t\tfor i := 0; i < 2; i++ {\n\t\t\t// use \"get\" instead of \"display\" here to force synchronized behaviour\n\t\t\turl := fmt.Sprintf(\"http://www.example.com/get/resize/100x%d/image2.jpg\", 100+i*10)\n\t\t\treq, err := http.NewRequest(\"GET\", url, nil)\n\t\t\tassert.Nil(t, err)\n\n\t\t\tres := httptest.NewRecorder()\n\t\t\tserver.ServeHTTP(res, req)\n\t\t\tassert.Equal(t, 200, res.Code)\n\t\t}\n\n\t\tcheckDirCount(tmpSrcStorage, 5, \"after resize requests\")\n\t\tcheckDirCount(tmpDstStorage, 7, \"after resize requests\")\n\t\tassert.True(t, suite.Processor.FileExists(context.Background(), \"image1.jpg\"))\n\n\t\t// Delete image1.jpg and all of the derived images\n\t\treq, err := http.NewRequest(\"DELETE\", \"http://www.example.com/image1.jpg\", nil)\n\t\tassert.Nil(t, err)\n\n\t\tres := httptest.NewRecorder()\n\t\tserver.ServeHTTP(res, req)\n\t\tassert.Equal(t, 200, res.Code)\n\n\t\tcheckDirCount(tmpSrcStorage, 4, \"after 1st delete request\")\n\t\tcheckDirCount(tmpDstStorage, 2, \"after 1st delete request\")\n\t\tassert.False(t, suite.Processor.FileExists(context.Background(), \"image1.jpg\"))\n\n\t\t// Try to delete image1.jpg again\n\t\treq, err = http.NewRequest(\"DELETE\", \"http://www.example.com/image1.jpg\", nil)\n\t\tassert.Nil(t, err)\n\n\t\tres = httptest.NewRecorder()\n\t\tserver.ServeHTTP(res, req)\n\t\tassert.Equal(t, 404, res.Code)\n\n\t\tcheckDirCount(tmpSrcStorage, 4, \"after 2nd delete request\")\n\t\tcheckDirCount(tmpDstStorage, 2, \"after 2nd delete request\")\n\n\t\tassert.False(t, suite.Processor.FileExists(context.Background(), \"image1.jpg\"))\n\n\t\tassert.True(t, suite.Processor.FileExists(context.Background(), \"image2.jpg\"))\n\n\t\t// Delete image2.jpg and all of the derived images\n\t\treq, err = http.NewRequest(\"DELETE\", \"http://www.example.com/image2.jpg\", nil)\n\t\tassert.Nil(t, err)\n\n\t\tres = httptest.NewRecorder()\n\t\tserver.ServeHTTP(res, req)\n\t\tassert.Equal(t, 200, res.Code)\n\n\t\tcheckDirCount(tmpSrcStorage, 3, \"after 3rd delete request\")\n\t\tcheckDirCount(tmpDstStorage, 0, \"after 3rd delete request\")\n\t\tassert.False(t, suite.Processor.FileExists(context.Background(), \"image2.jpg\"))\n\t}, tests.WithConfig(cfg))\n}\n\nfunc TestStorageApplicationWithPath(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\ttmp := os.TempDir()\n\n\tf, err := os.Open(\"tests/fixtures/avatar.png\")\n\tassert.Nil(t, err)\n\tdefer f.Close()\n\n\tbody, err := io.ReadAll(f)\n\tassert.Nil(t, err)\n\n\t// We store the image at the tmp location to access it\n\t// with the SourceStorage\n\tassert.NoError(t, os.WriteFile(path.Join(tmp, \"avatar.png\"), body, 0755))\n\n\tvar (\n\t\tredisHost = os.Getenv(\"REDIS_HOST\")\n\t)\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"kvstore\": {\n\t\t\"prefix\": \"picfit:\",\n\t\t\"type\": \"redis\",\n\t\t\"redis\": {\n\t\t\t\"host\": \"%s\",\n\t\t\t\"db\": 0,\n\t\t\t\"password\": \"\",\n\t\t\t\"port\": 6379\n\t\t}\n\t  },\n\t  \"storage\": {\n\t\t\"src\": {\n\t\t  \"type\": \"fs\",\n\t\t  \"location\": \"%s\",\n\t\t  \"base_url\": \"http://img.example.com\"\n\t\t}\n\t  },\n\t  \"shard\": {\n\t\t\"width\": 1,\n\t\t\"depth\": 2\n\t  }\n\t}`\n\n\tcontent = fmt.Sprintf(content, redisHost, tmp)\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tctx := context.Background()\n\t\tserver, err := server.New(ctx, suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tlocation := \"http://example.com/display/resize/100x100/avatar.png\"\n\n\t\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 200, res.Code)\n\n\t\t// We wait until the goroutine to save the file on disk is finished\n\t\ttimer1 := time.NewTimer(time.Second * 2)\n\t\t<-timer1.C\n\n\t\tetag := res.Header().Get(\"ETag\")\n\n\t\texists, err := suite.Processor.KeyExists(ctx, etag)\n\t\tassert.Nil(t, err)\n\t\tassert.True(t, exists)\n\n\t\traw, err := suite.Processor.GetKey(ctx, etag)\n\t\tassert.Nil(t, err)\n\n\t\tfilepath, err := conv.String(raw)\n\t\tassert.Nil(t, err)\n\n\t\tparts := strings.Split(filepath, \"/\")\n\n\t\tassert.Equal(t, len(parts), 3)\n\t\tassert.Equal(t, len(parts[0]), 1)\n\t\tassert.Equal(t, len(parts[1]), 1)\n\n\t\tassert.True(t, suite.Processor.FileExists(context.Background(), filepath))\n\n\t\tlocation = \"http://example.com/get/resize/100x100/avatar.png\"\n\n\t\trequest, _ = http.NewRequest(\"GET\", location, nil)\n\n\t\tres = httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, 200, res.Code)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", res.Header().Get(\"Content-Type\"))\n\n\t\tvar dat map[string]interface{}\n\n\t\terr = json.Unmarshal(res.Body.Bytes(), &dat)\n\t\tassert.Nil(t, err)\n\n\t\texpected := \"http://img.example.com/\" + filepath\n\n\t\tassert.Equal(t, expected, dat[\"url\"].(string))\n\n\t\tlocation = \"http://example.com/redirect/resize/100x100/avatar.png\"\n\n\t\trequest, _ = http.NewRequest(\"GET\", location, nil)\n\n\t\tres = httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, expected, res.Header().Get(\"Location\"))\n\t\tassert.Equal(t, 301, res.Code)\n\n\t}, tests.WithConfig(content))\n}\n\nfunc TestStorageApplicationWithURL(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\ttmp := os.TempDir()\n\n\tvar (\n\t\tredisHost = os.Getenv(\"REDIS_HOST\")\n\t)\n\n\tcontent := `{\n\t  \"debug\": true,\n\t  \"port\": 3001,\n\t  \"kvstore\": {\n\t\t\"prefix\": \"picfit:\",\n\t\t\"type\": \"redis\",\n\t\t\"redis\": {\n\t\t\t\"host\": \"%s\",\n\t\t\t\"db\": 0,\n\t\t\t\"password\": \"\",\n\t\t\t\"port\": 6379\n\t\t}\n\t  },\n\t  \"storage\": {\n\t\t\"src\": {\n\t\t  \"type\": \"fs\",\n\t\t  \"location\": \"%s\"\n\t\t}\n\t  }\n\t}`\n\n\tcontent = fmt.Sprintf(content, redisHost, tmp)\n\tfmt.Println(content)\n\n\ttests.Run(t, func(t *testing.T, suite *tests.Suite) {\n\t\tctx := context.Background()\n\t\tserver, err := server.New(ctx, suite.Config)\n\t\tassert.Nil(t, err)\n\n\t\tfilename := \"avatar.png\"\n\n\t\tu, _ := url.Parse(ts.URL + \"/\" + filename)\n\n\t\tlocation := fmt.Sprintf(\"http://example.com/display?url=%s&w=100&h=100&op=resize\", u.String())\n\n\t\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\t\tres := httptest.NewRecorder()\n\n\t\tserver.ServeHTTP(res, request)\n\n\t\tassert.Equal(t, res.Code, 200)\n\n\t\t// We wait until the goroutine to save the file on disk is finished\n\t\ttimer1 := time.NewTimer(time.Second * 2)\n\t\t<-timer1.C\n\n\t\tetag := res.Header().Get(\"ETag\")\n\n\t\texists, err := suite.Processor.KeyExists(ctx, etag)\n\t\tassert.Nil(t, err)\n\t\tassert.True(t, exists)\n\n\t\traw, err := suite.Processor.GetKey(ctx, etag)\n\t\tassert.Nil(t, err)\n\n\t\tfilepath, err := conv.String(raw)\n\t\tassert.Nil(t, err)\n\n\t\tparts := strings.Split(filepath, \"/\")\n\n\t\tassert.Equal(t, len(parts), 1)\n\n\t\tassert.True(t, suite.Processor.FileExists(context.Background(), filepath))\n\t}, tests.WithConfig(content))\n}\n\nfunc TestDummyApplicationErrors(t *testing.T) {\n\tlocation := \"http://example.com/display/resize/100x100/avatar.png\"\n\n\trequest, _ := http.NewRequest(\"GET\", location, nil)\n\n\tres := httptest.NewRecorder()\n\tctx := context.Background()\n\n\tserver, err := server.New(ctx, config.DefaultConfig())\n\tassert.Nil(t, err)\n\n\tserver.ServeHTTP(res, request)\n\tassert.Equal(t, 404, res.Code)\n}\n\nfunc TestDummyApplication(t *testing.T) {\n\tts := tests.NewImageServer()\n\tdefer ts.Close()\n\tdefer ts.CloseClientConnections()\n\n\tctx := context.Background()\n\tserver, err := server.New(ctx, config.DefaultConfig())\n\tassert.Nil(t, err)\n\n\tfor _, filename := range []string{\"avatar.png\", \"schwarzy.jpg\", \"giphy.gif\"} {\n\t\tu, _ := url.Parse(ts.URL + \"/\" + filename)\n\n\t\tcontentType := mime.TypeByExtension(path.Ext(filename))\n\n\t\ttests := []*tests.TestRequest{\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&w=50&h=50&op=resize\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  50,\n\t\t\t\t\tHeight: 50,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&w=100&h=30&op=resize\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  100,\n\t\t\t\t\tHeight: 30,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&w=50&h=50&op=thumbnail\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  50,\n\t\t\t\t\tHeight: 50,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&w=50&h=50&op=thumbnail&fmt=jpg\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  50,\n\t\t\t\t\tHeight: 50,\n\t\t\t\t},\n\t\t\t\tContentType: \"image/jpeg\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&op=op:resize+w:100+h:50&op=op:rotate+deg:90\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  50,\n\t\t\t\t\tHeight: 100,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tURL: fmt.Sprintf(\"http://example.com/display?url=%s&op=resize&w=100&h=50&op=op:rotate+deg:90\", u.String()),\n\t\t\t\tDimensions: &tests.Dimension{\n\t\t\t\t\tWidth:  50,\n\t\t\t\t\tHeight: 100,\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\n\t\tfor _, test := range tests {\n\t\t\trequest, _ := http.NewRequest(\"GET\", test.URL, nil)\n\n\t\t\tres := httptest.NewRecorder()\n\n\t\t\tserver.ServeHTTP(res, request)\n\n\t\t\timg, err := imaging.Decode(res.Body)\n\n\t\t\tassert.Nil(t, err)\n\n\t\t\tif test.ContentType != \"\" {\n\t\t\t\tassert.Equal(t, res.Header().Get(\"Content-Type\"), test.ContentType)\n\t\t\t} else {\n\t\t\t\tassert.Equal(t, res.Header().Get(\"Content-Type\"), contentType)\n\t\t\t}\n\n\t\t\tassert.Equal(t, res.Code, 200)\n\n\t\t\tif img.Bounds().Max.X != test.Dimensions.Width {\n\t\t\t\tt.Fatalf(\"Invalid width for %s: %d != %d\", filename, img.Bounds().Max.X, test.Dimensions.Width)\n\t\t\t}\n\n\t\t\tif img.Bounds().Max.Y != test.Dimensions.Height {\n\t\t\t\tt.Fatalf(\"Invalid width for %s: %d != %d\", filename, img.Bounds().Max.Y, test.Dimensions.Height)\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "provisioning",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "signature",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "store",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}