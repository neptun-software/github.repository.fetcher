{
  "metadata": {
    "timestamp": 1736567176628,
    "page": 772,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "glauth/glauth",
      "stars": 2492,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.248046875,
          "content": ".*.swp\nv2/certs/\nv2/bin\nv2/docker/assets/linux\nv2/gl.db\nv2/buildlogs\n.vscode/\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n### Go Patch ###\n/vendor/\n/Godeps/\n\n# Various\ngo.work.sum\n\n# gomocks auto-generated\n**/mock_*.go\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.474609375,
          "content": "[submodule \"v2/pkg/plugins/glauth-sqlite\"]\n\tpath = v2/pkg/plugins/glauth-sqlite\n\turl = git@github.com:glauth/glauth-sqlite\n[submodule \"v2/pkg/plugins/glauth-mysql\"]\n\tpath = v2/pkg/plugins/glauth-mysql\n\turl = git@github.com:glauth/glauth-mysql\n[submodule \"v2/pkg/plugins/glauth-postgres\"]\n\tpath = v2/pkg/plugins/glauth-postgres\n\turl = git@github.com:glauth/glauth-postgres\n[submodule \"v2/pkg/plugins/glauth-pam\"]\n\tpath = v2/pkg/plugins/glauth-pam\n\turl = git@github.com:glauth/glauth-pam\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "MIT License\n\nCopyright (c) 2018 Ned McClain & Ben Yanke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.7373046875,
          "content": "# GLAuth: LDAP authentication server for developers\nGo-lang LDAP Authentication (GLAuth) is a secure, easy-to-use, LDAP server w/ configurable backends.\n\n[![Gitter](https://badges.gitter.im/glauth/community.svg)](https://gitter.im/glauth/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Matrix](https://img.shields.io/badge/chat-%2fjoin%20%23glauth_community:gitter.im-green)](hey)\n\n![GitHub all releases](https://img.shields.io/github/downloads/glauth/glauth/total)\n![Docker pulls](https://badgen.net/docker/pulls/glauth/glauth)\n\n![GitHub last commit (branch)](https://img.shields.io/github/last-commit/glauth/glauth/master)\n![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability-percentage/glauth/glauth)\n\n* Centrally manage accounts across your infrastructure\n* Centrally manage SSH keys, Linux accounts, and passwords for cloud servers.\n* Lightweight alternative to OpenLDAP and Active Directory for development, or a homelab.\n* Store your user directory in a file, local or in S3; SQL database; or proxy to existing LDAP servers.\n* Two Factor Authentication (transparent to applications)\n* Multiple backends can be chained to inject features\n\nUse it to centralize account management across your Linux servers, your OSX machines, and your support applications (Jenkins, Apache/Nginx, Graylog2, and many more!).\n\n### Contributing\n- Please base all Pull Requests on [dev](https://github.com/glauth/glauth/tree/dev), not master.\n- Format your code autonmatically using `gofmt -d ./` before committing\n\n### Quickstart\nThis quickstart is a great way to try out GLAuth in a non-production environment.  *Be warned that you should take the extra steps to setup SSL (TLS) for production use!*\n\n1. Download a precompiled binary from the [releases](https://github.com/glauth/glauth/releases) page.\n2. Download the [example config file](https://github.com/glauth/glauth/blob/master/v2/sample-simple.cfg).\n3. Start the GLAuth server, referencing the path to the desired config file with `-c`.\n   - `./glauth64 -c sample-simple.cfg`\n4. Test with traditional LDAP tools\n   - For example: `ldapsearch -LLL -H ldap://localhost:3893 -D cn=serviceuser,ou=svcaccts,dc=glauth,dc=com -w mysecret -x -bdc=glauth,dc=com cn=hackers`\n\n### Make Commands\n\nNote - makefile uses git data to inject build-time variables. For best results, run in the context of the git repo.\n\n### Documentation\n\n<h4 align=\"center\">:point_right: The latest version of GLauth's documentation is available at https://glauth.github.io/ :point_left:</h4>\n\n<hr>\n\n### Quickstart\n\nGet started in three short [steps](https://glauth.github.io/docs/quickstart.html)\n\n### Usage:\n```\nglauth: securely expose your LDAP for external auth\n\nUsage:\n  glauth [options] -c <file|s3url>\n  glauth -h --help\n  glauth --version\n\nOptions:\n  -c, --config <file>       Config file.\n  -K <aws_key_id>           AWS Key ID.\n  -S <aws_secret_key>       AWS Secret Key.\n  -r <aws_region>           AWS Region [default: us-east-1].\n  --ldap <address>          Listen address for the LDAP server.\n  --ldaps <address>         Listen address for the LDAPS server.\n  --ldaps-cert <cert-file>  Path to cert file for the LDAPS server.\n  --ldaps-key <key-file>    Path to key file for the LDAPS server.\n  -h, --help                Show this screen.\n  --version                 Show version.\n```\n\n### Configuration:\nGLAuth can be deployed as a single server using only a local configuration file.  This is great for testing, or for production if you use a tool like Puppet/Chef/Ansible:\n```unix\nglauth -c glauth.cfg\n```\nHere's a sample config wth hardcoded users and groups:\n```toml\n[backend]\n  datastore = \"config\"\n  baseDN = \"dc=glauth,dc=com\"\n[[users]]\n  name = \"hackers\"\n  uidnumber = 5001\n  primarygroup = 5501\n  passsha256 = \"6478579e37aff45f013e14eeb30b3cc56c72ccdc310123bcdf53e0333e3f416a\"   # dogood\n  sshkeys = [ \"ssh-dss AAAAB3...\" ]\n[[users]]\n  name = \"uberhackers\"\n  uidnumber = 5006\n  primarygroup = 5501\n  passbcrypt = \"243261243130244B62463462656F7265504F762E794F324957746D656541326B4B46596275674A79336A476845764B616D65446169784E41384F4432\"   # dogood\n[[groups]]\n  name = \"superheros\"\n  gidnumber = 5501\n```\n\nMore configuration options are documented [here](https://glauth.github.io/docs/file.html) and in this [sample file](https://github.com/glauth/glauth/blob/master/v2/sample-simple.cfg)\n\n### Backends:\n\nFor advanced users, GLAuth supports pluggable backends.  Currently, it can use a local file, S3 or an existing LDAP infrastructure.  Through the use of optional plugins, you can connect SQL databases, PAM, and other datastores.\n\n```toml\n[backend]\n  datastore = \"ldap\"\n  servers = [ \"ldaps://server1:636\", \"ldaps://server2:636\" ]\n```\n\n# Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/glauth/glauth.svg)](https://starchart.cc/glauth/glauth)\n\n"
        },
        {
          "name": "go.work",
          "type": "blob",
          "size": 0.017578125,
          "content": "go 1.21\n\nuse ./v2\n"
        },
        {
          "name": "v2",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}