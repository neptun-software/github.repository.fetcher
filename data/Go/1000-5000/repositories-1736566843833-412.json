{
  "metadata": {
    "timestamp": 1736566843833,
    "page": 412,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TarsCloud/TarsGo",
      "stars": 3335,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.068359375,
          "content": ".vscode\n.idea\n*.tar.gz\n*.tgz\ntars-protocol\nexamples/*/go.sum\n.DS_Store"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 0.404296875,
          "content": "run:\n  timeout: 30m\n  skip-dirs:\n  - tars/protocol/res\n\nlinters:\n  disable-all: true\n  enable:\n  - unused\n  - ineffassign\n  - goimports\n  - gofmt\n  - misspell\n  - unparam\n  - unconvert\n  - govet\n  # - errcheck\n  - staticcheck\n\nlinters-settings:\n  staticcheck:\n    go: \"1.17\"\n    checks:\n    - \"all\"\n    # TODO(fix) Using a deprecated function, variable, constant or field\n    - \"-SA1019\"\n\n  unused:\n    go: \"1.17\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2236328125,
          "content": "language: go\ngo:\n  - '1.9'\n  - 1.10.x\n  - 1.11.x\n  - 1.12.x\n  - 1.13.x\n  - 1.14.x\n  - 1.15.x\n  - 1.16.x\n  - 1.17.x\n  - 1.18.x\n  - 1.19.x\n  - 1.20.x\ninstall:\n  - echo \"$GOPATH\"\nscript:\n  - go build github.com/TarsCloud/TarsGo/tars"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.8017578125,
          "content": "# This file lists all individuals having contributed content to the repository.\n# For how it is generated, see `hack/generate-authors.sh`.\n\n0xflotus <0xflotus@gmail.com>\nCHAO YIN <agchrys@qq.com>\nChen Mingjie <chenmingjie0828@163.com>\nChenMingjie <15210875043@sina.cn>\nDefoo Li <defool@foxmail.com>\nErjan Kalybek <erjanmx@gmail.com>\nJiechao Wu <wujiechaox@qq.com>\nMichael Henderson <mdhender@users.noreply.github.com>\nMonkeyLi <ligai199206@gmail.com>\nNick Wanninger <nickwanninger@users.noreply.github.com>\nRamon Barros <contato@ramon-barros.com>\nrikewang <rikewang@163.com>\nsandyskies <chenmingjie0828@163.com>\nTauWoo <tauwoo@seuxw.cc>\nTerry Ding <terryding77@gmail.com>\nTim Xu <xiaoxubeii@gmail.com>\ntitustian <titustian@tencent.com>\nxuri <xuri.me@gmail.com>\nYaffaBeauty <30791158+YaffaBeauty@users.noreply.github.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6923828125,
          "content": "# Contributing to TarsGo\n\n## 0 All pull request must go to dev branch, not master.\nAll pull request must use dev branch as base branch, not master , master is used for publishing.\n\n## 1 Create an issue \nUse English as u can.\n  \nif you want to report a bug, use this template in issue:\n```\n**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n \n** Version info \nWhich go version :\nWhich tars version (git commit id or branch name):\nWhich  os:\n\n**Expected behavior**\nA clear and concise description of what you expected to happen.\n\n**Additional context**\nAdd any other context about the problem here.\n```\n if you want to propose a feature ,use this template in issue :\n```\n**Is your feature request related to a problem? Please describe.**\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\nA clear and concise description of what you want to happen.\n\n**Describe alternatives you've considered**\nA clear and concise description of any alternative solutions or features you've considered.\n\n**Additional context**\nAdd any other context or screenshots about the feature request here.\n\n```\n\n## 2 Fork the project\nclick the fork button on the right top of the project.\n![fork button](docs/images/fork_button.png)\n\n## 3 Create a pull request\nif you want to create a pull request, you must create a issue first. \nIn the pr, you should give the related issue.  \nAll pull request must go to dev branch, not master.\n\n## 4 Code standards\nALL go file must be formated by gofmt and  must be fixed after golint.\n\n\n## 5 Create pull request\n\nPlease feel free to create request in github for TarsGo.\n\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 5.3310546875,
          "content": "# Changelog\r\n\r\n## 1.2.0 (2022/03/07)\r\n- Support tars-trace @lbbniu #326\r\n- support rpc keepalive @BeyondWUXF #3\r\n\r\n## 1.1.9 (2022/01/24)\r\n- 避免tarsgo每次创建项目都安装tars2go协议生成程序 by @lbbniu in #322\r\n- 配置文件client objQueueMax不生效 by @BeyondWUXF in #323\r\n\r\n## 1.1.8(2022/01/13)\r\n- TarsGo客户端独立运行时支持stat和property自动上报 by @lbbniu in #314\r\n- update tars version in setting.go by @lbbniu in #321\r\n\r\n## 1.1.7 (2022/01/12)\r\n- fix: JSON number loss of precision by @chenhengqi in #270\r\n- Feature remotelog by @lanhy in #269\r\n- fix: close fd when close connection by @chenhengqi in #274\r\n- Support dispatch reporter by @defool in #282\r\n- Set GOOS in make upload by @defool in #281\r\n- Support setting the stater by @defool in #287\r\n- Set default for json req value by @defool in #288\r\n- 修正map没有初始化而直接使用时报assignment to entry in nil map错误的问题 by @tzwsoho in #286\r\n- fix index by @BaBahsq in #293\r\n- fix handletimeout ineffective by @Isites in #295\r\n- Improve performance of codec by @defool in #301\r\n- support call by set by @wgfxcu in #303\r\n- correcting error output 'endoint' -> 'endpoint' by @Benjamin142857 in #308\r\n- tars2go支持include参数 和 单文件定义多个模块 by @lbbniu in #296\r\n- 优化单个tars文件中定义多个module处理 by @lbbniu in #316\r\n- go 1.16+ 版本 创建项目使用脚手架tarsgo命令 by @lbbniu in #311\r\n- 支持ssl拆分PR：对标c++支持https by @lbbniu in #319\r\n- 一致性hash优化 by @lbbniu in #320\r\n\r\n## 1.1.6 (2021/02/09)\r\n- support rpc error code\r\n- Support registering multiple filter for TarsServer and TarsClient.\r\n- tars2go support: include support relative path\r\n- add DoClose callback\r\n- Fix panic when invoke timeout\r\n- fixed response occasionally timeout\r\n- fix missing formatting directives\r\n- Do not show error when using tars as client\r\n- support parent directory of outdir in tars2go\r\n- fix timeout for recv\r\n- mem use optimization\r\n- replace expired page links with new links\r\n- fix readme and setting.go comment typo\r\n- fix report max numInvoke bug\r\n- fix avoid create request id == 0\r\n- fix md format\r\n## 1.1.5 (2020/07/19)\r\n- improve some features\r\n- export `newServantProxy` function as public\r\n\r\n## 1.1.4 (2020/06/15)\r\n### ChangLogs\r\n- merge from feature/tars-gateway branch (add tup && json protocol support)\r\n\r\n\r\n## 1.1.3 (2020/06/02)\r\n### ChangLogs\r\n- fixed RequestPacket not set timeout bug\r\n- fix README\r\n\r\n## 1.1.2 (2020/04/23)\r\n### ChangLogs\r\n- merge from tars internal version\r\n\r\n## 1.1.1 (2020/04/06)\r\n### ChangLogs\r\n- zipkin plugin version update (#172)\r\n- fix reader missing on empty parameter list\r\n- fixed the compile error package name upperFirstLatter (#179)\r\n- fix(remotelogger): fix the issue that sync log to remote cause CPU usage too high.\r\n- util/rogger: 1.showing func name without pkg name when logLevel is debug; 2.supported colored logLevel string when use console writer;\r\n- style: goimports .\r\n- style: make each line shorter\r\n- style: fix typo\r\n- style: gofmt .\r\n- Fix empty-stringed-error when object gets Tars eroror code without messages.\r\n- export method to get config and notify of ServerConfig (#150)\r\n- Add Go-module (#135)\r\n- statf: fix memory leak by removing mStatCount\r\n- terminate tars decoding when missing required field\r\n- ignore case when reading enableset config (#134)\r\n- add configurable package length (#127)\r\n- avoid compiling test code into application executable (#124)\r\n- call flag.Parse if necessary, add udp client IP/port to context (#123)\r\n- flag.Parse() must not be called during init. Instead, register flags during init, and call flag.Parse() in main(). (#113)\r\n- fix nil config (#116)\r\n- fix GetConfig fail on tars public cloud env (#104)\r\n- fix create_tars_server.sh error @ubuntu (#98)\r\n-  support grace restart (#95)\r\n- modify logger for enable prefix (#97)\r\n- tars2go support enum type\r\n- get conf from template (#92)\r\n- Fixed tars.reportNotifyInfo is not available;  and pull again (#86)\r\n- fix deadlock\r\n- fix ineffassign\r\n- fix property nil panic\r\n- add remote logger report interval\r\n- Fix admin servant don't report notify msgs. (#80)\r\n- Fix endpoint manager find activeEps error. (#79)\r\n- fix golint for appprotocol.go\r\n- Fixed a bug that make cleanall does not remove *.tgz files (#81)\r\n- Fix endpoint manager find activeEps error. (#79)\r\n- Fix adminservant don't report notify msgs. (#80)\r\n- fix ineffectual assignment\r\n- Modified # for config value that inside a line, only regard # as comment at the beginning. (#78)\r\n- makefile support multi GOPATH (#76)\r\n- Modified taf to tars in examples/EchoTestServer and added a client for it. (#75)\r\n- go lint examples\r\n- change error report\r\n- fix gpool nil panic\r\n- gofmt -s -w all\r\n\r\n## 1.1.0 (2018/11/13)\r\n### Feature\r\n- Add contex support , put tarscurrent in context,for getting client ip ,port and so on.\r\n- Add optional parameter for put context in request pacakge\r\n- Add filter for writing plugin of tars service\r\n- Add zipkin opentracing plugin\r\n- Add support for protocol buffers\r\n\r\n\r\n### Fix and enhancement.\r\n\r\n- Change request package sbuffer field from vector<unsigned byte> to vector<byte>\r\n- Fix stat report bug\r\n- Getting Loglevel for remote configration\r\n- Fix deadlock of getting routing infomation in extreme situation\r\n- Improve goroutine pool \r\n- Fix occasionally panic problem because of the starting sequence of goroutines\r\n- Golint most of the codes\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4833984375,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2020, THE TARS FOUNDATION\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3369140625,
          "content": "# TarsGo\n\nEnglish | [简体中文](README.zh.md)\n\n- Document：[TarsGo Document](https://doc.tarsyun.com/#/dev/tarsgo/README.md)\n- Twitter: [@TarsCloud](https://twitter.com/TarsCloud)\n- [Mailing List](https://groups.google.com/g/tars-foundation-information)\n\n## About\n\n- TarsGo is high performance RPC framework in Golang programing language using the tars protocol.\n- Go has become popular for programming with the rise of containerization technology such as docker, k8s, and etcd.\n- Go's goroutine concurrency mechanism means Go is very suitable for large-scale high-concurrency back-end server program development. The Go language has nearly C/C++ performance and near Python productivity.\n- In Tencent, part of the existing C++ development team has gradually turned into Go developers. Tars, a widely used RPC framework, supports C++, Java, NodeJS, and PHP, and now Go. The combination with Go language has become a general trend. Therefore, in the voice of users, we launched TarsGo, and we have applied to Tencent map application, YingYongbao application, Internet plus and other projects.\n- Learn more about the whole Tars architecture and design at [Introduction](https://doc.tarsyun.com/#/base/tars-intro.md).\n\n## Quick start \n\n[Quick Start Guide](https://doc.tarsyun.com/#/hello-world/tarsgo.md).\n\n## How to Contribute\n\n[Contribution Guide](CONTRIBUTING.md).\n"
        },
        {
          "name": "README.zh.md",
          "type": "blob",
          "size": 1.4296875,
          "content": "# TarsGo\n\n[English](README.md) | 简体中文\n- 文档主页：[https://doc.tarsyun.com/](https://doc.tarsyun.com/#/dev/tarsgo/README.md)\n- Twitter: [@TarsCloud](https://twitter.com/TarsCloud)\n- [Mailing List](https://groups.google.com/g/tars-foundation-information)\n- [官网](http://tarscloud.org/)\n- [新闻](https://tarscloud.org/feed/newsroom)\n- QQ 技术交流群群：515945105, 579079160(满), 669339903(满)\n- 微信公众号: TarsCloud\n- 微信 ID: TARS01\n- [联系我们](https://tarscloud.org/about/contacts)\n\n## 关于\n\n- TarsGo是基于Golang编程语言使用Tars协议的高性能RPC框架。随着docker,k8s,etcd等容器化技术的兴起，Go语言变得流行起来。Go的goroutine并发机制使Go非常适合用于大规模高并发后端服务程序的开发。 Go语言具有接近C/C++的性能和接近python的生产力。在腾讯，一部分现有的C++开发人员正逐渐向Go转型，Tars作为广泛使用的RPC框架，现已支持C++/Java/Nodejs/Php，其与Go语言的结合已成为大势所趋。因此，在广大用户的呼声中我们推出了Tarsgo,并且已经将它应用于腾讯地图、应用宝、互联网+以及其他项目中。\n- 关于Tars的整体架构和设计理念，请阅读 [Tars官方文档](https://doc.tarsyun.com/#/base/tars-intro.md)。\n\n## 快速开始\n\n请查看[相关文档](https://doc.tarsyun.com/#/hello-world/tarsgo.md)。\n\n## 如何贡献\n\n请先阅读[说明文档](CONTRIBUTING.md)。"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2783203125,
          "content": "module github.com/TarsCloud/TarsGo\n\ngo 1.14\n\nrequire (\n\tgithub.com/kr/pretty v0.3.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.8.0 // indirect\n\tgithub.com/stretchr/testify v1.8.4\n\tgo.uber.org/automaxprocs v1.5.2\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.275390625,
          "content": "github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngo.uber.org/automaxprocs v1.5.2 h1:2LxUOGiR3O6tw8ui5sZa2LAaHnsviZdVOUZw4fvbnME=\ngo.uber.org/automaxprocs v1.5.2/go.mod h1:eRbA25aqJrxAbsLO0xy5jVwPt7FQnRgjW+efnwa1WM0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "tars",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}