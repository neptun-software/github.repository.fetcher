{
  "metadata": {
    "timestamp": 1736567270821,
    "page": 869,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "babyname/fate",
      "stars": 2342,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.32421875,
          "content": "vendor/\n#Ignore thumbnails created by Windows\nThumbs.db\n#Ignore files built by Visual Studio\n*.obj\n*.exe\n*.pdb\n*.user\n*.aps\n*.pch\n*.vspscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.cache\n*.ilk\n*.log\n[Bb]in\n#[Dd]ebug*/\n*.lib\n*.sbr\nobj/\n[Rr]elease*/\n_ReSharper*/\n[Tt]est[Rr]esult*\n.vs/\n#Nuget packages folder\npackages/\n/.idea\ngo.sum"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2017 godcong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.208984375,
          "content": "# 命运起名(Fate)\n\n![FATE](docs/fate.png)\n\n![Go](https://github.com/babyname/fate/workflows/Go/badge.svg)\n[![GoDoc](https://godoc.org/github.com/babyname/fate?status.svg)](http://godoc.org/github.com/babyname/fate)\n[![license](https://img.shields.io/github/license/babyname/fate.svg)](https://github.com/babyname/fate/blob/master/LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/github.com/babyname/fate)](https://goreportcard.com/report/github.com/babyname/fate)\n\n## 现代科学取名工具(A modern science chinese name create tool)\n\nGithub上第一个开源的中文取名项目(The first chinese name create tool in `github`)\n\n## 目录\n\n[TOR]\n\n### 简介\n\n本程序适用于单个姓或双个姓, 起2个名的情况. （如：独孤**, 李张**, 张**, 王**）  \n一个好名字伴随人的一生, FATE让你取一个好名字.\n\n### 关于版本\n\n特定版本会单独出release,以后每次提交都会生成二进制文件的pre_release提供下载.  \n最新版使用Sqlite3数据库,不在需要导入数据库文件了. 直接下载下面的Sqlite3数据库到本地就能使用.\n\n【[v3.5.5下载](https://github.com/babyname/fate/releases/tag/v3.5.5)】\n【[Sqlite3数据库](https://github.com/babyname/fate/releases/download/v3.5.4/fate_sqlite3_database.zip)】\n\n【[最新自编译版本](https://github.com/babyname/fate/releases/tag/auto_build)】\n【[旧版SQL数据库文件:20200331](https://github.com/babyname/fate/releases/download/v3.5.1/fate_db_200331.7z)】\n\n### 使用方法\n\n1. 编写运行go代码,接口调用生成姓名\n\n    ```go\n    // 使用前请导入database的数据（测试字库已基本完善, 保险起见生成姓名后可以去一些测名网站验证下）\n    // 加载配置（具体参数参考example/create_a_name）\n    cfg := config.Default()\n    // 生日：\n    born := chronos.New(\"2020/01/23 11:31\")\n    // 姓氏：\n    lastName := \"张\"\n    // 第一参数：姓氏\n    // 第二参数：生日 \n    f := fate.NewFate(lastName, born.Solar().Time(), fate.ConfigOption(cfg))\n    \n    e := f.MakeName(context.Background())\n    if e != nil {\n      t.Fatal(e)\n    }\n\n    ```\n\n2. 使用预编译二进制文件生成姓名\n\n    ```shell\n    #没有安装go环境的请下载master下的zoneinfo文件和fate二进制文件放一起\n    #生成配置文件, 可修改数据库, 及一些基本参数\n    fate.exe init\n    #输出姓名\n    fate.exe name -l 张 -b \"2020/02/06 15:04\"\n    ```\n\n3. ~~针对没有安装Go环境的用户,使用二进制文件在运行前务必把zoneinfo.zip下载并和二进制文件放在一起(不要解压),不然会报错.~~\n   ~~[zoneinfo文件](https://github.com/babyname/fate/blob/master/zoneinfo.zip)~~\n   最新编译的版本使用了Go新版编译, 已经不再需要手动下载`zoneinfo.zip`文件了.\n\n### 常见问题\n\n1. 报错: count total error:The system cannot find the path specified\n\n    ```docs\n    zoneinfo缺失导致的时间转换失败问题(一般发生在windows环境下),\n    下载上面的zoneinfo文件并放到执行文件相同的目录下即可解决.\n    最新版会检查根目录,已无需重新init.\n    地址:https://github.com/babyname/fate/blob/master/zoneinfo.zip\n    ```\n\n2. 如何导入数据(Mysql)\n\n    ```docs\n    //链接到mysql数据库\n    mysql -u用户名 -p密码\n    //创建数据库\n    CREATE schema `fate` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\n    //使用fate数据库\n    use fate;\n    //导入数据库文件\n    source /path/to/sql/file;\n    PS:建议使用Navicat等工具导入,导入速度较快\n    ```\n\n3. 数据库配置, 替换config.json中相关部分\n    - MYSQL配置:\n        - host填写mysql数据库的地址\n        - user填写mysql数据库的用户名\n        - pwd填写mysql数据库的密码\n        - name填写mysql数据库的库名\n\n   ```json\n    \"database\": {\n      \"host\": \"127.0.0.1\",\n      \"port\": \"3306\",\n      \"user\": \"root\",\n      \"pwd\": \"111111\",\n      \"name\": \"fate\",\n      \"max_idle_con\": 0,\n      \"max_open_con\": 0,\n      \"driver\": \"mysql\",\n      \"file\": \"\",\n      \"dsn\": \"\",\n      \"show_sql\": false,\n      \"show_exec_time\": false\n    },   \n   ```\n\n    - SQLITE3配置:\n        - name填写本地sqlite的数据库名字, 放在fate同一目录下\n\n   ```json\n    \"database\": {\n      \"name\": \"fate\",\n      \"driver\": \"sqlite3\",\n    },\n   ```\n\n## 版本计划\n\n第一版:\n大部分是手动工作,现已废弃\n\n第二版:\n可自动生成名字字符 + 手工筛选\n\n第三版(开发中):\n\n1. 添加API接口查询(后期可能需要一些WEB方面的工作, 如果有兴趣的可以报名).\n2. 完善精简字典库, 并迁移到EntORM.\n3. 更完善的查询规则定义.\n\n第四版(计划中):\n优化算法,调整接口,数据库,完善文档以及修复一些bug.\n\n第七版(计划中):\n通过AI,大数据匹配算法,取出更好更佳的名字.\n\n### 关于FATE\n\nFATE使用了以下算法,查询字典库自动生成匹配规则的名字.\n按照每种算法的准确度,使用程度也有高有低,不会一概而否,也不会偏向单独某种算法.\n不会按照个人喜好做出选择.\n\n- 周易卦象\n- 大衍之数\n- 三才五格\n- 喜用神（平衡用神）\n- 生肖用字\n- 八字吉凶\n\n目前Fate以六大派为基准综合计算生成名字:\n\n- 笔划派: 认为笔划全吉, 人生就大吉. 准确度12.5 %\n- 三才派: 完全不管笔划吉凶, 只认为天地人三才五行相生, 人生就大吉. 准确度56.6 %.\n- 补八字: 完全不管笔划吉凶, 只认为名字补到先天八字命盘欠缺, 人生就大吉. 其实准确度非常低.\n- 卦象派: 完全不管笔划吉凶, 只认为名字求出卦象漂亮, 人生就大吉. 准确度40.26 %.\n- 天运派: 完全不管笔划吉凶, 只认为名字不要被出生年天运五行所剋, 人生就大吉. 准确度25.32 %.\n- 生肖派: 完全不管笔划吉凶, 只认为生肖用对字形, 人生就大吉. 准确度27.55 %.\n\n目前使用到的一些库:\n\n- 八字计算(用于计算生辰): <https://github.com/godcong/chronos>\n- 字典数据(一个爬虫工具填充字典数据库): <https://github.com/godcong/excavator>\n  如果谁有更好用的可以告诉我.\n\n### 资料查询\n\n1. 全国及各省重名查询网址汇总\n\n   网友提供：`https://zhuanlan.zhihu.com/p/89654568`(**请谨慎访问非本站点地址**)\n   [本仓库地址](./docs/chinese_name_query.md)\n\n## 一些废话\n\n在过去的几年中虽然Fate经过了好几个版本的改进, 但是仍然有许多不足之处.\n包括生成的名字太多不容易筛选,\n有些用户遇到了一些和Go相关的问题,\n一些用户不知道如何导入数据库等.\n这些问题都只能慢慢想办法去解决.\n\n还有些用户因为字典库生成的名字中有些字的寓意不好, 你可以手动删掉你不喜欢字, 却来恶意中伤作者.\n我想说的是这个字也不是我造的, 你如果有问题可以去找造那个字的人.\n如果觉得这个工具不好你可以不用.\n\n最近一年中因为作者个人原因导致Fate更新缓慢, 在这里向大家道个歉.\n大家也知道现在国内的IT环境, 毕竟我也要生活, 生活所迫没有太多时间放在业余的项目上.\n我只能尽量抽出时间来完善Fate的规则和代码.\n在这里同样要感谢支持我的朋友们, 大家的出发点我相信是一样的.\n用这个工具目的都是为了给孩子取一个好名字."
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 0.64453125,
          "content": "# Fate\n\n![FATE](docs/fate.png)\n\n![Go](https://github.com/babyname/fate/workflows/Go/badge.svg)\n[![GoDoc](https://godoc.org/github.com/babyname/fate?status.svg)](http://godoc.org/github.com/babyname/fate)\n[![license](https://img.shields.io/github/license/babyname/fate.svg)](https://github.com/babyname/fate/blob/master/LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/github.com/babyname/fate)](https://goreportcard.com/report/github.com/babyname/fate)\n\n## Introduce\n\nA modern science chinese name create tool.\nThe first chinese name create tool in github\nIt uses some traditional Chinese algorithms. It is used to get a good name for a newborn baby."
        },
        {
          "name": "bazi.go",
          "type": "blob",
          "size": 5.681640625,
          "content": "package fate\n\nimport (\n\t\"strings\"\n\n\t\"github.com/godcong/chronos\"\n)\n\nvar diIndex = map[string]int{\n\t\"子\": 0, \"丑\": 1, \"寅\": 2, \"卯\": 3, \"辰\": 4, \"巳\": 5, \"午\": 6, \"未\": 7, \"申\": 8, \"酉\": 9, \"戌\": 10, \"亥\": 11,\n}\n\nvar tianIndex = map[string]int{\n\t\"甲\": 0, \"乙\": 1, \"丙\": 2, \"丁\": 3, \"戊\": 4, \"己\": 5, \"庚\": 6, \"辛\": 7, \"壬\": 8, \"癸\": 9,\n}\n\n// 天干强度表\nvar tiangan = [][]int{\n\t{1200, 1200, 1000, 1000, 1000, 1000, 1000, 1000, 1200, 1200},\n\t{1060, 1060, 1000, 1000, 1100, 1100, 1140, 1140, 1100, 1100},\n\t{1140, 1140, 1200, 1200, 1060, 1060, 1000, 1000, 1000, 1000},\n\t{1200, 1200, 1200, 1200, 1000, 1000, 1000, 1000, 1000, 1000},\n\t{1100, 1100, 1060, 1060, 1100, 1100, 1100, 1100, 1040, 1040},\n\t{1000, 1000, 1140, 1140, 1140, 1140, 1060, 1060, 1060, 1060},\n\t{1000, 1000, 1200, 1200, 1200, 1200, 1000, 1000, 1000, 1000},\n\t{1040, 1040, 1100, 1100, 1160, 1160, 1100, 1100, 1000, 1000},\n\t{1060, 1060, 1000, 1000, 1000, 1000, 1140, 1140, 1200, 1200},\n\t{1000, 1000, 1000, 1000, 1000, 1000, 1200, 1200, 1200, 1200},\n\t{1000, 1000, 1040, 1040, 1140, 1140, 1160, 1160, 1060, 1060},\n\t{1200, 1200, 1000, 1000, 1000, 1000, 1000, 1000, 1140, 1140},\n}\n\n// 地支强度表\nvar dizhi = []map[string][]int{\n\t{\n\t\t\"癸\": {1200, 1100, 1000, 1000, 1040, 1060, 1000, 1000, 1200, 1200, 1060, 1140},\n\t}, {\n\t\t\"癸\": {360, 330, 300, 300, 312, 318, 300, 300, 360, 360, 318, 342},\n\t\t\"辛\": {200, 228, 200, 200, 230, 212, 200, 220, 228, 248, 232, 200},\n\t\t\"己\": {500, 550, 530, 500, 550, 570, 600, 580, 500, 500, 570, 500},\n\t}, {\n\t\t\"丙\": {300, 300, 360, 360, 318, 342, 360, 330, 300, 300, 342, 318},\n\t\t\"甲\": {840, 742, 798, 840, 770, 700, 700, 728, 742, 700, 700, 840},\n\t}, {\n\t\t\"乙\": {1200, 1060, 1140, 1200, 1100, 1000, 1000, 1040, 1060, 1000, 1000, 1200},\n\t}, {\n\t\t\"乙\": {360, 318, 342, 360, 330, 300, 300, 312, 318, 300, 300, 360},\n\t\t\"癸\": {240, 220, 200, 200, 208, 200, 200, 200, 240, 240, 212, 228},\n\t\t\"戊\": {500, 550, 530, 500, 550, 600, 600, 580, 500, 500, 570, 500},\n\t}, {\n\t\t\"庚\": {300, 342, 300, 300, 330, 300, 300, 330, 342, 360, 348, 300},\n\t\t\"丙\": {700, 700, 840, 840, 742, 840, 840, 798, 700, 700, 728, 742},\n\t}, {\n\t\t\"丁\": {1000, 1000, 1200, 1200, 1060, 1140, 1200, 1100, 1000, 1000, 1040, 1060},\n\t}, {\n\t\t\"丁\": {300, 300, 360, 360, 318, 342, 360, 330, 300, 300, 312, 318},\n\t\t\"乙\": {240, 212, 228, 240, 220, 200, 200, 208, 212, 200, 200, 240},\n\t\t\"己\": {500, 550, 530, 500, 550, 570, 600, 580, 500, 500, 570, 500},\n\t}, {\n\t\t\"壬\": {360, 330, 300, 300, 312, 318, 300, 300, 360, 360, 318, 342},\n\t\t\"庚\": {700, 798, 700, 700, 770, 742, 700, 770, 798, 840, 812, 700},\n\t}, {\n\t\t\"辛\": {1000, 1140, 1000, 1000, 1100, 1060, 1000, 1100, 1140, 1200, 1160, 1000},\n\t}, {\n\t\t\"辛\": {300, 342, 300, 300, 330, 318, 300, 330, 342, 360, 348, 300},\n\t\t\"丁\": {200, 200, 240, 240, 212, 228, 240, 220, 200, 200, 208, 212},\n\t\t\"戊\": {500, 550, 530, 500, 550, 570, 600, 580, 500, 500, 570, 500},\n\t}, {\n\t\t\"甲\": {360, 318, 342, 360, 330, 300, 300, 312, 318, 300, 300, 360},\n\t\t\"壬\": {840, 770, 700, 700, 728, 742, 700, 700, 840, 840, 724, 798},\n\t},\n}\n\nvar wuXingTianGan = map[string]string{\n\t\"甲\": \"木\",\n\t\"乙\": \"木\",\n\t\"丙\": \"火\",\n\t\"丁\": \"火\",\n\t\"戊\": \"土\",\n\t\"己\": \"土\",\n\t\"庚\": \"金\",\n\t\"辛\": \"金\",\n\t\"壬\": \"水\",\n\t\"癸\": \"水\",\n}\n\nvar wuXingDiZhi = map[string]string{\n\t\"子\": \"水\",\n\t\"丑\": \"土\",\n\t\"寅\": \"木\",\n\t\"卯\": \"木\",\n\t\"辰\": \"土\",\n\t\"巳\": \"火\",\n\t\"午\": \"火\",\n\t\"未\": \"土\",\n\t\"申\": \"金\",\n\t\"酉\": \"金\",\n\t\"戌\": \"土\",\n\t\"亥\": \"水\",\n}\n\n// WuXingTianGan 五行天干\nfunc WuXingTianGan(s string) string {\n\treturn wuXingTianGan[s]\n}\n\n// WuXingDiZhi 五行地支\nfunc WuXingDiZhi(s string) string {\n\treturn wuXingDiZhi[s]\n}\n\n// BaZi ...\ntype BaZi struct {\n\tbaZi   []string\n\twuXing []string\n\txiyong *XiYong\n}\n\n// NewBazi 创建八字\nfunc NewBazi(calendar chronos.Calendar) *BaZi {\n\tec := calendar.Lunar().EightCharacter()\n\treturn &BaZi{\n\t\tbaZi:   ec,\n\t\twuXing: baziToWuXing(ec),\n\t}\n}\n\n// String ...\nfunc (z *BaZi) String() string {\n\treturn strings.Join(z.baZi, \"\")\n}\n\n// RiZhu 日主\nfunc (z *BaZi) RiZhu() string {\n\treturn z.baZi[4]\n}\n\nfunc (z *BaZi) calcXiYong() {\n\tz.xiyong = &XiYong{}\n\t// TODO:need fix\n\tz.point().calcSimilar().calcHeterogeneous() // .yongShen().xiShen()\n}\n\n// XiYong 喜用神\nfunc (z *BaZi) XiYong() *XiYong {\n\tif z.xiyong == nil {\n\t\tz.calcXiYong()\n\t}\n\treturn z.xiyong\n}\n\n// XiYongShen 平衡用神\nfunc (z *BaZi) XiYongShen() string {\n\treturn z.XiYong().Shen()\n}\n\nfunc (z *BaZi) point() *BaZi {\n\tdi := diIndex[z.baZi[3]]\n\tfor idx, v := range z.baZi {\n\t\tif idx%2 == 0 {\n\t\t\tz.xiyong.AddFen(WuXingTianGan(v), tiangan[di][tianIndex[v]])\n\t\t} else {\n\t\t\tdz := dizhi[diIndex[v]]\n\t\t\tfor k := range dz {\n\t\t\t\tz.xiyong.AddFen(WuXingTianGan(k), dz[k][di])\n\t\t\t}\n\t\t}\n\t}\n\treturn z\n}\n\nfunc baziToWuXing(bazi []string) []string {\n\tvar wx []string\n\tfor idx, v := range bazi {\n\t\tif idx%2 == 0 {\n\t\t\twx = append(wx, WuXingTianGan(v))\n\t\t} else {\n\t\t\twx = append(wx, WuXingDiZhi(v))\n\t\t}\n\t}\n\treturn wx\n}\n\n// 计算同类\nfunc (z *BaZi) calcSimilar() *BaZi {\n\tfor i := range sheng {\n\t\tif wuXingTianGan[z.RiZhu()] == sheng[i] {\n\t\t\tz.xiyong.Similar = append(z.xiyong.Similar, sheng[i])\n\t\t\tz.xiyong.SimilarPoint = z.xiyong.GetFen(sheng[i])\n\t\t\tif i == 0 {\n\t\t\t\ti = len(sheng) - 1\n\t\t\t\tz.xiyong.Similar = append(z.xiyong.Similar, sheng[i])\n\t\t\t\tz.xiyong.SimilarPoint += z.xiyong.GetFen(sheng[i])\n\t\t\t} else {\n\t\t\t\tz.xiyong.Similar = append(z.xiyong.Similar, sheng[i-1])\n\t\t\t\tz.xiyong.SimilarPoint += z.xiyong.GetFen(sheng[i-1])\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\treturn z\n}\n\n// 计算异类\nfunc (z *BaZi) calcHeterogeneous() *BaZi {\n\tfor i := range sheng {\n\t\tfor ti := range z.xiyong.Similar {\n\t\t\tif z.xiyong.Similar[ti] == sheng[i] {\n\t\t\t\tgoto EndSimilar\n\t\t\t}\n\t\t}\n\t\tz.xiyong.Heterogeneous = append(z.xiyong.Heterogeneous, sheng[i])\n\t\tz.xiyong.HeterogeneousPoint += z.xiyong.GetFen(sheng[i])\n\tEndSimilar:\n\t\tcontinue\n\n\t}\n\treturn z\n}\n"
        },
        {
          "name": "bazi_test.go",
          "type": "blob",
          "size": 0.28515625,
          "content": "package fate_test\n\nimport (\n\t\"log\"\n\t\"testing\"\n\n\t\"github.com/godcong/chronos\"\n\n\t\"github.com/babyname/fate\"\n)\n\nfunc TestPoint(t *testing.T) {\n\tt1 := chronos.New(\"2020/01/24 15:30\")\n\tlog.Println(t1.Lunar().EightCharacter())\n\n\tbz := fate.NewBazi(t1)\n\tt.Log(bz.XiYong())\n\tt.Log(bz.XiYongShen())\n}\n"
        },
        {
          "name": "character.go",
          "type": "blob",
          "size": 4.5927734375,
          "content": "package fate\n\nimport (\n\t\"crypto/sha256\"\n\t\"fmt\"\n\n\t\"github.com/xormsharp/builder\"\n\t\"github.com/xormsharp/xorm\"\n)\n\n// Character 字符\ntype Character struct {\n\tHash                     string   `xorm:\"pk hash\"`\n\tPinYin                   []string `xorm:\"default() notnull pin_yin\"`                               // 拼音\n\tCh                       string   `xorm:\"default() notnull ch\"`                                    // 字符\n\tScienceStroke            int      `xorm:\"default(0) notnull science_stroke\" json:\"science_stroke\"` // 科学笔画\n\tRadical                  string   `xorm:\"default() notnull radical\"`                               // 部首\n\tRadicalStroke            int      `xorm:\"default(0) notnull radical_stroke\"`                       // 部首笔画\n\tStroke                   int      `xorm:\"default() notnull stroke\"`                                // 总笔画数\n\tIsKangXi                 bool     `xorm:\"default(0) notnull is_kang_xi\"`                           // 是否康熙字典\n\tKangXi                   string   `xorm:\"default() notnull kang_xi\"`                               // 康熙\n\tKangXiStroke             int      `xorm:\"default(0) notnull kang_xi_stroke\"`                       // 康熙笔画\n\tSimpleRadical            string   `xorm:\"default() notnull simple_radical\"`                        // 简体部首\n\tSimpleRadicalStroke      int      `xorm:\"default(0) notnull simple_radical_stroke\"`                // 简体部首笔画\n\tSimpleTotalStroke        int      `xorm:\"default(0) notnull simple_total_stroke\"`                  // 简体笔画\n\tTraditionalRadical       string   `xorm:\"default() notnull traditional_radical\"`                   // 繁体部首\n\tTraditionalRadicalStroke int      `xorm:\"default(0) notnull traditional_radical_stroke\"`           // 繁体部首笔画\n\tTraditionalTotalStroke   int      `xorm:\"default(0) notnull traditional_total_stroke\"`             // 简体部首笔画\n\tNameScience              bool     `xorm:\"default(0) notnull name_science\"`                         // 姓名学\n\tWuXing                   string   `xorm:\"default() notnull wu_xing\"`                               // 五行\n\tLucky                    string   `xorm:\"default() notnull lucky\"`                                 // 吉凶寓意\n\tRegular                  bool     `xorm:\"default(0) notnull regular\"`                              // 常用\n\tTraditionalCharacter     []string `xorm:\"default() notnull traditional_character\"`                 // 繁体字\n\tVariantCharacter         []string `xorm:\"default() notnull variant_character\"`                     // 异体字\n\tComment                  []string `xorm:\"default() notnull comment\"`                               // 解释\n}\n\n// InsertOrUpdateCharacter ...\nfunc InsertOrUpdateCharacter(engine *xorm.Engine, c *Character) (i int64, e error) {\n\ttmp := new(Character)\n\tb, e := engine.Where(\"hash = ?\", Hash(c.Ch)).Get(tmp)\n\tif e != nil {\n\t\treturn 0, e\n\t}\n\tif !b {\n\t\ti, e = engine.InsertOne(c)\n\t\treturn\n\t}\n\ti, e = engine.Where(\"ch = ?\", c.Ch).Update(c)\n\treturn\n}\n\nfunc getCharacters(engine *xorm.Engine, fn func(engine *xorm.Engine) *xorm.Session) ([]*Character, error) {\n\ts := fn(engine)\n\tvar c []*Character\n\te := s.Find(&c)\n\tif e == nil {\n\t\treturn c, nil\n\t}\n\treturn nil, fmt.Errorf(\"character list get error:%w\", e)\n}\n\nfunc getCharacter(eng *xorm.Engine, fn func(engine *xorm.Engine) *xorm.Session) (*Character, error) {\n\ts := fn(eng)\n\tvar c Character\n\tb, e := s.Get(&c)\n\tif e == nil && b {\n\t\treturn &c, nil\n\t}\n\treturn nil, fmt.Errorf(\"character get error:%w\", e)\n}\n\n// CharacterOptions ...\ntype CharacterOptions func(session *xorm.Session) *xorm.Session\n\n// Regular ...\nfunc Regular() CharacterOptions {\n\treturn func(session *xorm.Session) *xorm.Session {\n\t\treturn session.And(\"regular = ?\", 1)\n\t}\n}\n\n// Stoker ...\nfunc Stoker(s int, options ...CharacterOptions) func(engine *xorm.Engine) *xorm.Session {\n\treturn func(engine *xorm.Engine) *xorm.Session {\n\t\tsession := engine.Where(\"pin_yin IS NOT NULL\").\n\t\t\tAnd(builder.Eq{\"science_stroke\": s})\n\t\t// Or(builder.Eq{\"stroke\": s}).\n\t\t// Or(builder.Eq{\"kang_xi_stroke\": s}).\n\t\t// Or(builder.Eq{\"simple_total_stroke\": s}).\n\t\t// Or(builder.Eq{\"traditional_total_stroke\": s}))\n\t\tfor _, option := range options {\n\t\t\tsession = option(session)\n\t\t}\n\t\treturn session\n\t}\n\n}\n\n// Char ...\nfunc Char(name string) func(engine *xorm.Engine) *xorm.Session {\n\treturn func(engine *xorm.Engine) *xorm.Session {\n\t\treturn engine.Where(builder.Eq{\"ch\": name}.\n\t\t\tOr(builder.Eq{\"kang_xi\": name}).\n\t\t\tOr(builder.Eq{\"traditional_character\": name}))\n\t}\n}\n\n// Hash ...\nfunc Hash(url string) string {\n\tsum256 := sha256.Sum256([]byte(url))\n\treturn fmt.Sprintf(\"%x\", sum256)\n}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "database.go",
          "type": "blob",
          "size": 3.294921875,
          "content": "package fate\n\nimport (\n\t\"fmt\"\n\t\"net/url\"\n\n\t\"github.com/go-sql-driver/mysql\"\n\t\"github.com/goextension/log\"\n\t\"github.com/mattn/go-sqlite3\"\n\n\t\"github.com/babyname/fate/config\"\n\n\t\"github.com/xormsharp/xorm\"\n)\n\nconst mysqlSource = \"%s:%s@tcp(%s)/%s?loc=%s&charset=utf8mb4&parseTime=true\"\nconst sqliteSource = \"file:%v?cache=shared\\u0026_journal=WAL\\u0026_fk=1\"\nconst createDatabase = \"CREATE DATABASE `%s` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_bin'\"\n\nvar _ = mysql.MySQLDriver{}\nvar _ = sqlite3.SQLiteDriver{}\n\n// DefaultTableName ...\nvar DefaultTableName = \"fate\"\n\n// Database ...\ntype Database interface {\n\tSync(v ...interface{}) error\n\tCountWuGeLucky() (n int64, e error)\n\tInsertOrUpdateWuGeLucky(lucky *WuGeLucky) (n int64, e error)\n\tGetCharacter(fn func(engine *xorm.Engine) *xorm.Session) (*Character, error)\n\tGetCharacters(fn func(engine *xorm.Engine) *xorm.Session) ([]*Character, error)\n\tFilterWuGe(last []*Character, wg chan<- *WuGeLucky) error\n\tDatabase() interface{}\n}\n\ntype xormDatabase struct {\n\t*xorm.Engine\n}\n\n// Database ...\nfunc (db *xormDatabase) Database() interface{} {\n\treturn db.Engine\n}\n\n// FilterWuGe ...\nfunc (db *xormDatabase) FilterWuGe(last []*Character, wg chan<- *WuGeLucky) error {\n\treturn filterWuGe(db.Engine, last, wg)\n}\n\n// GetCharacters ...\nfunc (db *xormDatabase) GetCharacters(fn func(engine *xorm.Engine) *xorm.Session) ([]*Character, error) {\n\treturn getCharacters(db.Engine, fn)\n}\n\n// Sync ...\nfunc (db *xormDatabase) Sync(v ...interface{}) error {\n\treturn db.Engine.Sync2(v...)\n}\n\n// GetCharacter ...\nfunc (db *xormDatabase) GetCharacter(fn func(engine *xorm.Engine) *xorm.Session) (*Character, error) {\n\treturn getCharacter(db.Engine, fn)\n}\n\n// InsertOrUpdateWuGeLucky ...\nfunc (db *xormDatabase) InsertOrUpdateWuGeLucky(lucky *WuGeLucky) (n int64, e error) {\n\treturn insertOrUpdateWuGeLucky(db.Engine, lucky)\n}\n\n// CountWuGeLucky ...\nfunc (db *xormDatabase) CountWuGeLucky() (n int64, e error) {\n\treturn countWuGeLucky(db.Engine)\n}\n\n// InitDatabaseWithConfig ...\nfunc InitDatabaseWithConfig(cfg config.Config) Database {\n\treturn initDatabaseWithConfig(cfg.Database)\n}\n\nfunc initDatabaseWithConfig(db config.Database) Database {\n\tengine := initSQL(db)\n\treturn &xormDatabase{\n\t\tEngine: engine,\n\t}\n}\n\nfunc databaseLink(database config.Database, schema bool) string {\n\tname := database.Name\n\tif !schema && database.Name != \"\" {\n\t\tname = database.Name\n\t}\n\tswitch database.Driver {\n\tcase \"mysql\":\n\t\treturn fmt.Sprintf(mysqlSource, database.User, database.Pwd, database.Addr(), name, url.QueryEscape(\"Asia/Shanghai\"))\n\tcase \"sqlite3\":\n\t\treturn fmt.Sprintf(sqliteSource, name)\n\tdefault:\n\t\tpanic(\"unsupported database\")\n\t}\n}\n\nfunc initSQL(database config.Database) *xorm.Engine {\n\tlink := databaseLink(database, true)\n\tdbEngine, e := xorm.NewEngine(database.Driver, link)\n\tif e != nil {\n\t\tlog.Panicw(\"connect database failed\", \"error\", e)\n\t}\n\tsql := fmt.Sprintf(createDatabase, database.Name)\n\t_, e = dbEngine.DB().Exec(sql)\n\tif e == nil {\n\t\tlog.Infow(\"create database failed\", \"database\", DefaultTableName)\n\t\tdbEngine.Close()\n\t\treturn nil\n\t}\n\tdbEngine.Close()\n\tlink = databaseLink(database, false)\n\teng, e := xorm.NewEngine(database.Driver, link)\n\tif e != nil {\n\t\tlog.Panicw(\"connect table failed\", \"error\", e)\n\t}\n\tif database.ShowSQL {\n\t\teng.ShowSQL(true)\n\t}\n\n\t// if database.ShowExecTime {\n\t//\teng.ShowExecTime(true)\n\t// }\n\treturn eng\n}\n"
        },
        {
          "name": "dayan.go",
          "type": "blob",
          "size": 10.67578125,
          "content": "package fate\n\n// Sex ...\ntype Sex bool\n\n// SexBoy ...\nconst (\n\tSexBoy  Sex = false\n\tSexGirl Sex = true\n)\n\nvar daYanList = [81]DaYan{\n\t{Number: 1, Lucky: \"吉\", SkyNine: \"太极之数\", Comment: \"太极之数，万物开泰，生发无穷，利禄亨通。\"},\n\t{Number: 2, Lucky: \"凶\", SkyNine: \"两仪之数\", Comment: \"两仪之数，混沌未开，进退保守，志望难达。\"},\n\t{Number: 3, Lucky: \"吉\", SkyNine: \"三才之数\", Comment: \"三才之数，天地人和，大事大业，繁荣昌隆。\"},\n\t{Number: 4, Lucky: \"凶\", SkyNine: \"四象之数\", Comment: \"四象之数，待于生发，万事慎重，不具营谋。\"},\n\t{Number: 5, Lucky: \"吉\", SkyNine: \"五行之数\", Comment: \"五行俱权，循环相生，圆通畅达，福祉无穷。\"},\n\t{Number: 6, Lucky: \"吉\", SkyNine: \"六爻之数\", Comment: \"六爻之数，发展变化，天赋美德，吉祥安泰。\"},\n\t{Number: 7, Lucky: \"吉\", SkyNine: \"七政之数\", Comment: \"七政之数，精悍严谨，天赋之力，吉星照耀。\"},\n\t{Number: 8, Lucky: \"半吉\", SkyNine: \"八卦之数\", Comment: \"八卦之数，乾坎艮震，巽离坤兑，无穷无尽。\"},\n\t{Number: 9, Lucky: \"凶\", SkyNine: \"大成之数\", Comment: \"大成之数，蕴涵凶险，或成或败，难以把握。\"},\n\t{Number: 10, Lucky: \"凶\", SkyNine: \"终结之数\", Comment: \"终结之数，雪暗飘零，偶或有成，回顾茫然。\"},\n\t{Number: 11, Lucky: \"吉\", SkyNine: \"旱苗逢雨\", Comment: \"万物更新，调顺发达，恢弘泽世，繁荣富贵。\"},\n\t{Number: 12, Lucky: \"凶\", SkyNine: \"掘井无泉\", Comment: \"无理之数，发展薄弱，虽生不足，难酬志向。\"},\n\t{Number: 13, Lucky: \"吉\", SkyNine: \"春日牡丹\", Comment: \"才艺多能，智谋奇略，忍柔当事，鸣奏大功。\"},\n\t{Number: 14, Lucky: \"凶\", SkyNine: \"破兆\", Comment: \"家庭缘薄，孤独遭难，谋事不达，悲惨不测。\"},\n\t{Number: 15, Lucky: \"吉\", SkyNine: \"福寿\", Comment: \"福寿圆满，富贵荣誉，涵养雅量，德高望重。\"},\n\t{Number: 16, Lucky: \"吉\", SkyNine: \"厚重\", Comment: \"厚重载德，安富尊荣，财官双美，功成名就。\"},\n\t{Number: 17, Lucky: \"半吉\", SkyNine: \"刚强\", Comment: \"权威刚强，突破万难，如能容忍，必获成功。\"},\n\t{Number: 18, Lucky: \"半吉\", SkyNine: \"铁镜重磨\", Comment: \"权威显达，博得名利，且养柔德，功成名就。\"},\n\t{Number: 19, Lucky: \"凶\", SkyNine: \"多难\", Comment: \"风云蔽日，辛苦重来，虽有智谋，万事挫折。\"},\n\t{Number: 20, Lucky: \"凶\", SkyNine: \"屋下藏金\", Comment: \"非业破运，灾难重重，进退维谷，万事难成。\"},\n\t{Number: 21, Lucky: \"吉\", Sex: true, SkyNine: \"明月中天\", Comment: \"光风霁月，万物确立，官运亨通，大搏名利。女性不宜此数。\"},\n\t{Number: 22, Lucky: \"凶\", SkyNine: \"秋草逢霜\", Comment: \"秋草逢霜，困难疾弱，虽出豪杰，人生波折。\"},\n\t{Number: 23, Lucky: \"吉\", Sex: true, SkyNine: \"壮丽\", Comment: \"旭日东升，壮丽壮观，权威旺盛，功名荣达。女性不宜此数。\"},\n\t{Number: 24, Lucky: \"吉\", SkyNine: \"掘藏得金\", Comment: \"家门余庆，金钱丰盈，白手成家，财源广进。\"},\n\t{Number: 25, Lucky: \"半吉\", SkyNine: \"荣俊\", Comment: \"资性英敏，才能奇特，克服傲慢，尚可成功。\"},\n\t{Number: 26, Lucky: \"凶\", SkyNine: \"变怪\", Comment: \"变怪之谜，英雄豪杰，波澜重叠，而奏大功。\"},\n\t{Number: 27, Lucky: \"凶\", SkyNine: \"增长\", Comment: \"欲望无止，自我强烈，多受毁谤，尚可成功。\"},\n\t{Number: 28, Lucky: \"凶\", Sex: true, SkyNine: \"阔水浮萍\", Comment: \"遭难之数，豪杰气概，四海漂泊，终世浮躁。女性不宜此数。\"},\n\t{Number: 29, Lucky: \"吉\", SkyNine: \"智谋\", Comment: \"智谋优秀，财力归集，名闻海内，成就大业。\"},\n\t{Number: 30, Lucky: \"半吉\", SkyNine: \"非运\", Comment: \"沉浮不定，凶吉难变，若明若暗，大成大败。\"},\n\t{Number: 31, Lucky: \"吉\", SkyNine: \"春日花开\", Comment: \"智勇得志，博得名利，统领众人，繁荣富贵。\"},\n\t{Number: 32, Lucky: \"吉\", SkyNine: \"宝马金鞍\", Comment: \"侥幸多望，贵人得助，财帛如裕，繁荣至上。\"},\n\t{Number: 33, Lucky: \"吉\", Sex: true, SkyNine: \"旭日升天\", Comment: \"旭日升天，鸾凤相会，名闻天下，隆昌至极。女性不宜此数。\"},\n\t{Number: 34, Lucky: \"凶\", SkyNine: \"破家\", Comment: \"破家之身，见识短小，辛苦遭逢，灾祸至极。\"},\n\t{Number: 35, Lucky: \"吉\", SkyNine: \"高楼望月\", Comment: \"温和平静，智达通畅，文昌技艺，奏功洋洋。\"},\n\t{Number: 36, Lucky: \"半吉\", SkyNine: \"波澜重叠\", Comment: \"波澜重叠，沉浮万状，侠肝义胆，舍己成仁。\"},\n\t{Number: 37, Lucky: \"吉\", SkyNine: \"猛虎出林\", Comment: \"权威显达，热诚忠信，宜着雅量，终身荣富。\"},\n\t{Number: 38, Lucky: \"半吉\", SkyNine: \"磨铁成针\", Comment: \"意志薄弱，刻意经营，才识不凡，技艺有成。\"},\n\t{Number: 39, Lucky: \"半吉\", SkyNine: \"富贵荣华\", Comment: \"富贵荣华，财帛丰盈，暗藏险象，德泽四方。\"},\n\t{Number: 40, Lucky: \"凶\", SkyNine: \"退安\", Comment: \"智谋胆力，冒险投机，沉浮不定，退保平安。\"},\n\t{Number: 41, Lucky: \"吉\", Max: true, SkyNine: \"有德\", Comment: \"纯阳独秀，德高望重，和顺畅达，博得名利。此数为最大好运数。\"},\n\t{Number: 42, Lucky: \"凶\", SkyNine: \"寒蝉在柳\", Comment: \"博识多能，精通世情，如能专心，尚可成功。\"},\n\t{Number: 43, Lucky: \"凶\", SkyNine: \"散财破产\", Comment: \"散财破产，诸事不遂，虽有智谋，财来财去。\"},\n\t{Number: 44, Lucky: \"凶\", SkyNine: \"烦闷\", Comment: \"破家亡身，暗藏惨淡，事不如意，乱世怪杰。\"},\n\t{Number: 45, Lucky: \"吉\", SkyNine: \"顺风\", Comment: \"新生泰和，顺风扬帆，智谋经纬，富贵繁荣。\"},\n\t{Number: 46, Lucky: \"凶\", SkyNine: \"浪里淘金\", Comment: \"载宝沉舟，浪里淘金，大难尝尽，大功有成。\"},\n\t{Number: 47, Lucky: \"吉\", SkyNine: \"点石成金\", Comment: \"花开之象，万事如意，祯祥吉庆，天赋幸福。\"},\n\t{Number: 48, Lucky: \"吉\", SkyNine: \"古松立鹤\", Comment: \"智谋兼备，德量荣达，威望成师，洋洋大观。\"},\n\t{Number: 49, Lucky: \"半吉\", SkyNine: \"转变\", Comment: \"吉临则吉，凶来则凶，转凶为吉，配好三才。\"},\n\t{Number: 50, Lucky: \"半吉\", SkyNine: \"小舟入海\", Comment: \"一成一败，吉凶参半，先得庇荫，后遭凄惨。\"},\n\t{Number: 51, Lucky: \"半吉\", SkyNine: \"沉浮\", Comment: \"盛衰交加，波澜重叠，如能慎始，必获成功。\"},\n\t{Number: 52, Lucky: \"吉\", SkyNine: \"达眼\", Comment: \"卓识达眼，先见之明，智谋超群，名利双收。\"},\n\t{Number: 53, Lucky: \"凶\", SkyNine: \"曲卷难星\", Comment: \"外祥内患，外祸内安，先富后贫，先贫后富。\"},\n\t{Number: 54, Lucky: \"凶\", SkyNine: \"石上栽花\", Comment: \"石上栽花，难得有活，忧闷烦来，辛惨不绝。\"},\n\t{Number: 55, Lucky: \"半吉\", SkyNine: \"善恶\", Comment: \"善善得恶，恶恶得善，吉到极限，反生凶险。\"},\n\t{Number: 56, Lucky: \"凶\", SkyNine: \"浪里行舟\", Comment: \"历尽艰辛，四周障碍，万事龃龌，做事难成。\"},\n\t{Number: 57, Lucky: \"吉\", SkyNine: \"日照春松\", Comment: \"寒雪青松，夜莺吟春，必遭一过，繁荣白事。\"},\n\t{Number: 58, Lucky: \"半吉\", SkyNine: \"晚行遇月\", Comment: \"沉浮多端，先苦后甜，宽宏扬名，富贵繁荣。\"},\n\t{Number: 59, Lucky: \"凶\", SkyNine: \"寒蝉悲风\", Comment: \"寒蝉悲风，意志衰退，缺乏忍耐，苦难不休。\"},\n\t{Number: 60, Lucky: \"凶\", SkyNine: \"无谋\", Comment: \"无谋之人，漂泊不定，晦暝暗黑，动摇不安。\"},\n\t{Number: 61, Lucky: \"吉\", SkyNine: \"牡丹芙蓉\", Comment: \"牡丹芙蓉，花开富贵，名利双收，定享天赋。\"},\n\t{Number: 62, Lucky: \"凶\", SkyNine: \"衰败\", Comment: \"衰败之象，内外不和，志望难达，灾祸频来。\"},\n\t{Number: 63, Lucky: \"吉\", SkyNine: \"舟归平海\", Comment: \"富贵荣华，身心安泰，雨露惠泽，万事亨通。\"},\n\t{Number: 64, Lucky: \"凶\", SkyNine: \"非命\", Comment: \"骨肉分离，孤独悲愁，难得心安，做事不成。\"},\n\t{Number: 65, Lucky: \"吉\", SkyNine: \"巨流归海\", Comment: \"天长地久，家运隆昌，福寿绵长，事事成就。\"},\n\t{Number: 66, Lucky: \"凶\", SkyNine: \"岩头步马\", Comment: \"进退维谷，艰难不堪，等待时机，一跃而起。\"},\n\t{Number: 67, Lucky: \"吉\", SkyNine: \"顺风通达\", Comment: \"天赋幸运，四通八达，家道繁昌，富贵东来。\"},\n\t{Number: 68, Lucky: \"吉\", SkyNine: \"顺风吹帆\", Comment: \"智虑周密，集众信达，发明能智，拓展昂进。\"},\n\t{Number: 69, Lucky: \"凶\", SkyNine: \"非业\", Comment: \"非业非力，精神迫滞，灾害交至，遍偿痛苦。\"},\n\t{Number: 70, Lucky: \"凶\", SkyNine: \"残菊逢霜\", Comment: \"残菊逢霜，寂寞无碍，惨淡忧愁，晚景凄凉。\"},\n\t{Number: 71, Lucky: \"半吉\", SkyNine: \"石上金花\", Comment: \"石上金花，内心劳苦，贯彻始终，定可昌隆。\"},\n\t{Number: 72, Lucky: \"半吉\", SkyNine: \"劳苦\", Comment: \"荣苦相伴，阴云覆月，外表吉祥，内实凶祸。\"},\n\t{Number: 73, Lucky: \"半吉\", SkyNine: \"无勇\", Comment: \"盛衰交加，徒有高志，天王福祉，终世平安。\"},\n\t{Number: 74, Lucky: \"凶\", SkyNine: \"残菊经霜\", Comment: \"残菊经霜，秋叶寂寞，无能无智，辛苦繁多。\"},\n\t{Number: 75, Lucky: \"凶\", SkyNine: \"退守\", Comment: \"退守保吉，发迹甚迟，虽有吉象，无谋难成。\"},\n\t{Number: 76, Lucky: \"凶\", SkyNine: \"离散\", Comment: \"倾覆离散，骨肉分离，内外不和，虽劳无功。\"},\n\t{Number: 77, Lucky: \"半吉\", SkyNine: \"半吉\", Comment: \"家庭有悦，半吉半凶，能获援护，陷落不幸。\"},\n\t{Number: 78, Lucky: \"凶\", SkyNine: \"晚苦\", Comment: \"祸福参半，先天智能，中年发达，晚景困苦。\"},\n\t{Number: 79, Lucky: \"凶\", SkyNine: \"云头望月\", Comment: \"云头望月，身疲力尽，穷迫不伸，精神不定。\"},\n\t{Number: 80, Lucky: \"凶\", SkyNine: \"遁吉\", Comment: \"辛苦不绝，早入隐遁，安心立命，化凶转吉。\"},\n\t{Number: 81, Lucky: \"吉\", SkyNine: \"万物回春\", Comment: \"最吉之数，还本归元，吉祥重叠，富贵尊荣。\"},\n}\n\n// DaYan ...\ntype DaYan struct {\n\tNumber  int\n\tLucky   string\n\tMax     bool\n\tSex     Sex // male(false),female(true)\n\tSkyNine string\n\tComment string\n}\n\n// IsNotSuitableSex 女性不宜此数\nfunc (dy DaYan) IsNotSuitableSex() bool {\n\treturn dy.Sex == SexGirl\n}\n\n// IsMax 是否最大好运数\nfunc (dy DaYan) IsMax() bool {\n\treturn dy.Max\n}\n\n// GetDaYan 获取大衍之数\nfunc GetDaYan(idx int) DaYan {\n\tif idx <= 0 {\n\t\tpanic(\"wrong idx\")\n\t}\n\ti := (idx - 1) % 81\n\treturn daYanList[i]\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "error.go",
          "type": "blob",
          "size": 0.1962890625,
          "content": "package fate\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\n// Wrap ...\nfunc Wrap(err error, msg ...string) error {\n\tif err != nil {\n\t\tm := strings.Join(msg, \" \")\n\t\treturn fmt.Errorf(\"%s:%w\", m, err)\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "fate.go",
          "type": "blob",
          "size": 7.3720703125,
          "content": "package fate\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/goextension/log\"\n\t\"github.com/xormsharp/xorm\"\n\n\t\"github.com/babyname/fate/config\"\n\n\t\"github.com/godcong/chronos\"\n\t\"github.com/godcong/yi\"\n)\n\n// HandleOutputFunc ...\ntype HandleOutputFunc func(name Name)\n\n// HelpContent ...\nconst HelpContent = \"正在使用Fate生成姓名列表，如遇到问题请访问项目地址：https://github.com/babyname/fate获取帮助!\"\n\n// Fate ...\ntype Fate interface {\n\tMakeName(ctx context.Context) (e error)\n\tXiYong() *XiYong\n\tRunInit() (e error)\n\tRegisterHandle(outputFunc HandleOutputFunc)\n}\n\ntype fateImpl struct {\n\tconfig   *config.Config\n\tdb       Database\n\tout      Information\n\tborn     chronos.Calendar\n\tlast     []string\n\tlastChar []*Character\n\tnames    []*Name\n\tnameType int\n\tsex      Sex\n\tdebug    bool\n\tbaZi     *BaZi\n\tzodiac   *Zodiac\n\thandle   HandleOutputFunc\n}\n\n// RunInit ...\nfunc (f *fateImpl) RunInit() (e error) {\n\tif f.config.RunInit {\n\t\tif err := f.db.Sync(WuGeLucky{}); err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tlucky := make(chan *WuGeLucky)\n\t\tgo initWuGe(lucky)\n\t\tfor la := range lucky {\n\t\t\t_, e = f.db.InsertOrUpdateWuGeLucky(la)\n\t\t\tif e != nil {\n\t\t\t\treturn Wrap(e, \"insert failed\")\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n\n// Options ...\ntype Options func(f *fateImpl)\n\n// ConfigOption ...\nfunc ConfigOption(cfg *config.Config) Options {\n\treturn func(f *fateImpl) {\n\t\tf.config = cfg\n\t}\n}\n\n// SexOption ...\nfunc SexOption(sex Sex) Options {\n\treturn func(f *fateImpl) {\n\t\tf.sex = sex\n\t}\n}\n\n// Debug ...\nfunc Debug() Options {\n\treturn func(f *fateImpl) {\n\t\tf.debug = true\n\t}\n}\n\n// NewFate 所有的入口,新建一个fate对象\nfunc NewFate(lastName string, born time.Time, options ...Options) Fate {\n\tf := &fateImpl{\n\t\tlast: strings.Split(lastName, \"\"),\n\t\tborn: chronos.New(born),\n\t}\n\tf.lastChar = make([]*Character, len(f.last))\n\tif len(f.last) > 2 {\n\t\tpanic(\"last name was bigger than 2 characters\")\n\t}\n\n\tfor _, op := range options {\n\t\top(f)\n\t}\n\n\tf.init()\n\n\treturn f\n}\n\n// RegisterHandle ...\nfunc (f *fateImpl) RegisterHandle(outputFunc HandleOutputFunc) {\n\tf.handle = outputFunc\n}\n\nfunc (f *fateImpl) getLastCharacter() error {\n\tsize := len(f.last)\n\tif size == 0 {\n\t\treturn errors.New(\"last name was not inputted\")\n\t} else if size > 2 {\n\t\treturn fmt.Errorf(\"%d characters last name was not supported\", size)\n\t} else {\n\t\t// ok\n\t}\n\n\tfor i, c := range f.last {\n\t\tcharacter, e := f.db.GetCharacter(Char(c))\n\t\tif e != nil {\n\t\t\treturn e\n\t\t}\n\t\tf.lastChar[i] = character\n\t}\n\treturn nil\n}\n\n// MakeName ...\nfunc (f *fateImpl) MakeName(ctx context.Context) (e error) {\n\tlog.Info(HelpContent)\n\te = f.out.Head(f.config.FileOutput.Heads...)\n\tif e != nil {\n\t\treturn Wrap(e, \"write head failed\")\n\t}\n\tdefer f.out.Finish()\n\te = f.RunInit()\n\tif e != nil {\n\t\treturn Wrap(e, \"init failed\")\n\t}\n\tn, e := f.db.CountWuGeLucky()\n\tif e != nil || n == 0 {\n\t\treturn Wrap(e, \"count total error\")\n\t}\n\n\te = f.getLastCharacter()\n\tif e != nil {\n\t\treturn Wrap(e, \"get char failed\")\n\t}\n\tname := make(chan *Name)\n\tgo func() {\n\t\te := f.getWugeName(name)\n\t\tif e != nil {\n\t\t\tlog.Error(e)\n\t\t}\n\t}()\n\n\tvar tmpChar []*Character\n\t// supplyFilter := false\n\tfor n := range name {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(\"end\")\n\t\t\treturn\n\t\tdefault:\n\t\t}\n\n\t\ttmpChar = n.FirstName\n\t\ttmpChar = append(tmpChar, n.LastName...)\n\t\t// filter bazi\n\t\tif f.config.SupplyFilter && !filterXiYong(f.XiYong().Shen(), tmpChar...) {\n\t\t\t// log.Infow(\"supply\", \"name\", n.String())\n\t\t\tcontinue\n\t\t}\n\t\t// filter zodiac\n\t\tif f.config.ZodiacFilter && !filterZodiac(f.born, n.FirstName...) {\n\t\t\t// log.Infow(\"zodiac\", \"name\", n.String())\n\t\t\tcontinue\n\t\t}\n\t\t// filter bagua\n\t\tif f.config.BaguaFilter && !filterYao(n.BaGua(), \"凶\") {\n\t\t\t// log.Infow(\"bagua\", \"name\", n.String())\n\t\t\tcontinue\n\t\t}\n\t\tben := n.BaGua().Get(yi.BenGua)\n\t\tbian := n.BaGua().Get(yi.BianGua)\n\t\tif f.debug {\n\t\t\tlog.Infow(\"bazi\", \"born\", f.born.LunarDate(), \"time\", f.born.Lunar().EightCharacter())\n\t\t\tlog.Infow(\"xiyong\", \"wuxing\", n.WuXing(), \"god\", f.XiYong().Shen(), \"pinheng\", f.XiYong())\n\t\t\tlog.Infow(\"ben\", \"ming\", ben.GuaMing, \"chu\", ben.ChuYaoJiXiong, \"er\", ben.ErYaoJiXiong, \"san\", ben.SanYaoJiXiong, \"si\", ben.SiYaoJiXiong, \"wu\", ben.WuYaoJiXiong, \"liu\", ben.ShangYaoJiXiong)\n\t\t\tlog.Infow(\"bian\", \"ming\", bian.GuaMing, \"chu\", bian.ChuYaoJiXiong, \"er\", bian.ErYaoJiXiong, \"san\", bian.SanYaoJiXiong, \"si\", bian.SiYaoJiXiong, \"wu\", bian.WuYaoJiXiong, \"liu\", bian.ShangYaoJiXiong)\n\t\t}\n\n\t\tif err := f.out.Write(*n); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif f.debug {\n\t\t\tlog.Infow(n.String(), \"笔画\", n.Strokes(), \"拼音\", n.PinYin(), \"八字\", f.born.Lunar().EightCharacter(), \"喜用神\", f.XiYong().Shen(), \"本卦\", ben.GuaMing, \"变卦\", bian.GuaMing)\n\t\t}\n\t}\n\treturn nil\n}\n\n// XiYong ...\nfunc (f *fateImpl) XiYong() *XiYong {\n\tif f.baZi == nil {\n\t\tf.baZi = NewBazi(f.born)\n\t}\n\treturn f.baZi.XiYong()\n}\n\nfunc (f *fateImpl) init() {\n\tif f.config == nil {\n\t\tf.config = config.DefaultConfig()\n\t}\n\n\tif f.config.FileOutput.Heads == nil {\n\t\tf.config.FileOutput.Heads = config.DefaultHeads\n\t}\n\n\tf.db = initDatabaseWithConfig(f.config.Database)\n\tf.out = initOutputWithConfig(f.config.FileOutput)\n}\n\n// SetBornData 设定生日\nfunc (f *fateImpl) SetBornData(t time.Time) {\n\tf.born = chronos.New(t)\n}\n\nfunc (f *fateImpl) getWugeName(name chan<- *Name) (e error) {\n\tdefer func() {\n\t\tclose(name)\n\t}()\n\tlucky := make(chan *WuGeLucky)\n\tgo func() {\n\t\te = f.db.FilterWuGe(f.lastChar, lucky)\n\t\tif e != nil {\n\t\t\tlog.Error(e)\n\t\t\treturn\n\t\t}\n\t}()\n\tvar f1s []*Character\n\tvar f2s []*Character\n\tfsa := map[int][]*Character{}\n\tbazi := NewBazi(f.born)\n\tfor l := range lucky {\n\t\tif f.config.FilterMode == config.FilterModeCustom {\n\t\t\t// TODO\n\t\t}\n\n\t\tif bool(f.sex) && filterSex(l) {\n\t\t\tcontinue\n\t\t}\n\n\t\tif f.config.HardFilter && hardFilter(l) {\n\t\t\tsc := NewSanCai(l.TianGe, l.RenGe, l.DiGe)\n\t\t\tif !Check(f.db.Database().(*xorm.Engine), sc, 5) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\n\t\tif f.config.StrokeMin > l.FirstStroke1 || f.config.StrokeMin > l.FirstStroke2 || f.config.StrokeMax < l.FirstStroke1 || f.config.StrokeMax < l.FirstStroke2 {\n\t\t\tcontinue\n\t\t}\n\n\t\tif f.debug {\n\t\t\tlog.Infow(\"lucky\", \"l1\", l.LastStroke1, \"l2\", l.LastStroke2, \"f1\", l.FirstStroke1, \"f2\", l.FirstStroke2)\n\t\t}\n\t\tif fsa[l.FirstStroke1] == nil {\n\t\t\tif f.config.Regular {\n\t\t\t\tf1s, e = f.db.GetCharacters(Stoker(l.FirstStroke1, Regular()))\n\t\t\t} else {\n\t\t\t\tf1s, e = f.db.GetCharacters(Stoker(l.FirstStroke1))\n\t\t\t}\n\n\t\t\tif e != nil {\n\t\t\t\treturn Wrap(e, \"first stroke1 error\")\n\t\t\t}\n\n\t\t\tfsa[l.FirstStroke1] = f1s\n\t\t} else {\n\t\t\tf1s = fsa[l.FirstStroke1]\n\t\t}\n\n\t\tif fsa[l.FirstStroke2] == nil {\n\t\t\tif f.config.Regular {\n\t\t\t\tf2s, e = f.db.GetCharacters(Stoker(l.FirstStroke2, Regular()))\n\t\t\t} else {\n\t\t\t\tf2s, e = f.db.GetCharacters(Stoker(l.FirstStroke2))\n\t\t\t}\n\n\t\t\tif e != nil {\n\t\t\t\treturn Wrap(e, \"first stoke2 error\")\n\t\t\t}\n\n\t\t\tfsa[l.FirstStroke2] = f2s\n\t\t} else {\n\t\t\tf2s = fsa[l.FirstStroke2]\n\t\t}\n\n\t\tfor _, f1 := range f1s {\n\t\t\tif len(f1.PinYin) == 0 {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tfor _, f2 := range f2s {\n\t\t\t\tif len(f2.PinYin) == 0 {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tn := createName(f, f1, f2)\n\t\t\t\tn.baZi = bazi\n\t\t\t\tname <- n\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc filterSex(lucky *WuGeLucky) bool {\n\treturn lucky.ZongSex == true\n}\n\nfunc isLucky(s string) bool {\n\tif strings.Compare(s, \"吉\") == 0 || strings.Compare(s, \"半吉\") == 0 {\n\t\treturn true\n\t}\n\treturn false\n}\n\nfunc hardFilter(lucky *WuGeLucky) bool {\n\tif !isLucky(GetDaYan(lucky.DiGe).Lucky) ||\n\t\t!isLucky(GetDaYan(lucky.RenGe).Lucky) ||\n\t\t!isLucky(GetDaYan(lucky.WaiGe).Lucky) ||\n\t\t!isLucky(GetDaYan(lucky.ZongGe).Lucky) {\n\t\treturn true\n\t}\n\treturn false\n}\n"
        },
        {
          "name": "fate_test.go",
          "type": "blob",
          "size": 1.9970703125,
          "content": "package fate_test\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n\t\"github.com/godcong/chronos\"\n\n\t\"github.com/babyname/fate\"\n\t\"github.com/babyname/fate/config\"\n)\n\nfunc init() {\n\t// trait.NewZapFileSugar(\"fate.log\")\n}\n\nfunc TestFate_RunMakeName(t *testing.T) {\n\tborn := chronos.New(\"2020/02/06 15:45\").Solar().Time()\n\tlast := \"张\"\n\tcfg := config.DefaultConfig()\n\tcfg.BaguaFilter = true\n\tcfg.ZodiacFilter = true\n\tcfg.SupplyFilter = true\n\tcfg.HardFilter = true\n\tcfg.StrokeMin = 3\n\tcfg.StrokeMax = 24\n\tcfg.Regular = true\n\tcfg.RunInit = false\n\tcfg.FileOutput = config.FileOutput{\n\t\tOutputMode: config.OutputModeLog,\n\t\tPath:       \"name.log\",\n\t}\n\tcfg.Database = config.Database{\n\t\tHost:         \"localhost\",\n\t\tPort:         \"3306\",\n\t\tUser:         \"root\",\n\t\tPwd:          \"111111\",\n\t\tName:         \"fate\",\n\t\tMaxIdleCon:   0,\n\t\tMaxOpenCon:   0,\n\t\tDriver:       \"mysql\",\n\t\tFile:         \"\",\n\t\tDsn:          \"\",\n\t\tShowSQL:      false,\n\t\tShowExecTime: false,\n\t}\n\tf := fate.NewFate(last, born, fate.ConfigOption(cfg), fate.SexOption(fate.SexGirl))\n\n\t// f.SetDB(eng)\n\te := f.MakeName(context.Background())\n\tif e != nil {\n\t\tt.Fatal(e)\n\t}\n}\n\nfunc TestFate_RunMakeNameWithLocalDatabase(t *testing.T) {\n\tborn := chronos.New(\"2020/02/06 15:45\").Solar().Time()\n\tlast := \"张\"\n\tcfg := config.DefaultConfig()\n\tcfg.BaguaFilter = true\n\tcfg.ZodiacFilter = true\n\tcfg.SupplyFilter = true\n\tcfg.HardFilter = true\n\tcfg.StrokeMin = 3\n\tcfg.StrokeMax = 24\n\tcfg.Regular = true\n\tcfg.RunInit = false\n\tcfg.FileOutput = config.FileOutput{\n\t\tOutputMode: config.OutputModelJSON,\n\t\tPath:       \"name.log\",\n\t}\n\tcfg.Database = config.Database{\n\t\tHost:         \"localhost\",\n\t\tPort:         \"3306\",\n\t\tUser:         \"root\",\n\t\tPwd:          \"111111\",\n\t\tName:         \"fate\",\n\t\tMaxIdleCon:   0,\n\t\tMaxOpenCon:   0,\n\t\tDriver:       \"sqlite3\",\n\t\tFile:         \"\",\n\t\tDsn:          \"\",\n\t\tShowSQL:      false,\n\t\tShowExecTime: false,\n\t}\n\tf := fate.NewFate(last, born, fate.ConfigOption(cfg), fate.SexOption(fate.SexGirl))\n\n\t// f.SetDB(eng)\n\te := f.MakeName(context.Background())\n\tif e != nil {\n\t\tt.Fatal(e)\n\t}\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.412109375,
          "content": "module github.com/babyname/fate\n\nrequire (\n\tgithub.com/go-sql-driver/mysql v1.7.1\n\tgithub.com/godcong/chronos v0.0.3\n\tgithub.com/godcong/yi v1.0.2\n\tgithub.com/goextension/log v0.0.2\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/mattn/go-sqlite3 v1.14.17\n\tgithub.com/rakyll/statik v0.1.6\n\tgithub.com/spf13/cobra v1.7.0\n\tgithub.com/xormsharp/builder v0.3.8\n\tgithub.com/xormsharp/xorm v1.0.4\n\tgo.uber.org/zap v1.24.0\n)\n\ngo 1.16\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 13.0126953125,
          "content": "github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/PuerkitoBio/goquery v1.5.1/go.mod h1:GsLWisAFVj4WgDibEWF4pvYnkVQBpKBKeU+7zCJoLcc=\ngithub.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\ngithub.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denisenkom/go-mssqldb v0.0.0-20200428022330-06a60b6afbbc/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-sql-driver/mysql v1.7.1 h1:lUIinVbN1DY0xBg0eMOzmmtGoHwWBbvnWubQUrtU8EI=\ngithub.com/go-sql-driver/mysql v1.7.1/go.mod h1:OXbVy3sEdcQ2Doequ6Z5BW6fXNQTmx+9S1MCJN5yJMI=\ngithub.com/godcong/chronos v0.0.3 h1:zIV7UuAeN9t/pYpa0oqu3xs8w7+YZTmAWi2uHliNeLg=\ngithub.com/godcong/chronos v0.0.3/go.mod h1:4OsnZGNIqlutzCmguDKhDcM4Vk9E4IU1FgIW+LJer3o=\ngithub.com/godcong/yi v1.0.2 h1:WdaiL78ftYir3f1ITbmJDQR8MR8LDb0wVR2osWoSE9I=\ngithub.com/godcong/yi v1.0.2/go.mod h1:Zml4Arf7CaGyf+VqWtvD2WsozNs6Vi0eyk6zXZbZpR8=\ngithub.com/goextension/log v0.0.2 h1:/KMuT22zzIMHe4qD7rR8dnfXWSFAyp+10pTC4fWLztI=\ngithub.com/goextension/log v0.0.2/go.mod h1:fz72q/d4Iw05nbRSbxgGkGNTne3jxrq2Td5ogfunZak=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/snappy v0.0.0-20180518054509-2e65f85255db h1:woRePGFeVFfLKN/pOkfl+p/TAqKOfFu+7KPlMVpok/w=\ngithub.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hpcloud/tail v1.0.0 h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/lib/pq v1.7.0/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/mattn/go-sqlite3 v1.14.0/go.mod h1:JIl7NbARA7phWnGvh0LKTyg7S9BA+6gx71ShQilpsus=\ngithub.com/mattn/go-sqlite3 v1.14.17 h1:mCRHCLDUBXgpKAqIKsaAaAsrAlbkeomtRFKXh2L6YIM=\ngithub.com/mattn/go-sqlite3 v1.14.17/go.mod h1:2eHXhiwb8IkHr+BDWZGa96P6+rkvnG63S2DGjv9HUNg=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0 h1:WSHQ+IS43OoUrWtD1/bbclrwK8TTH5hzp+umCiuxHgs=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/gomega v1.4.3 h1:RE1xgDvH7imwFD45h+u2SgIfERHlS2yNG4DObb5BSKU=\ngithub.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/pkg/errors v0.8.1 h1:iURUrRGxPUNPdy5/HRSm+Yj6okJ6UtLINN0Q9M4+h3I=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rakyll/statik v0.1.6 h1:uICcfUXpgqtw2VopbIncslhAmE5hwc4g20TEyEENBNs=\ngithub.com/rakyll/statik v0.1.6/go.mod h1:OEi9wJV/fMUAGx1eNjq75DKDsJVuEv1U0oYdX6GX8Zs=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/syndtr/goleveldb v1.0.0 h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=\ngithub.com/syndtr/goleveldb v1.0.0/go.mod h1:ZVVdQEZoIme9iO1Ch2Jdy24qqXrMMOU6lpPAyBWyWuQ=\ngithub.com/xormsharp/builder v0.3.7/go.mod h1:uu4Je618Wz3Qgiu6J20jJQnwEKMLdnN78pV/fsMorgU=\ngithub.com/xormsharp/builder v0.3.8 h1:i0SMthzm4IzbGOxBmI3E7XUE5lVq26aZNWA88Xa69zM=\ngithub.com/xormsharp/builder v0.3.8/go.mod h1:uu4Je618Wz3Qgiu6J20jJQnwEKMLdnN78pV/fsMorgU=\ngithub.com/xormsharp/sqlfiddle v0.0.0-20180821085327-62ce714f951a h1:Kq+iDJoMwJOlEhVjPXG6LPtwI9CTcU5mRnJ7U/pO/Yg=\ngithub.com/xormsharp/sqlfiddle v0.0.0-20180821085327-62ce714f951a/go.mod h1:QCBxYu0JaE9AxIva2NkyKAG5oUb9joj6MGehz1PJ1Xw=\ngithub.com/xormsharp/xorm v1.0.4 h1:0t8r9qrgfgz8l+6RiBRsbLiycaIMliMwrpeprwRXA3c=\ngithub.com/xormsharp/xorm v1.0.4/go.mod h1:0hDxtKDWAuaqpiEJpkiyloTzVWaUl9/TR+P031O69KY=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/ziutek/mymysql v1.5.4/go.mod h1:LMSpPZ6DbqWFxNCHW77HeMg9I646SAhApZ/wKdgO/C0=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.7.0 h1:ADUqmZGgLDDfbSL9ZmPxKTybcoEYHgpYfELNoN+7hsw=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.11 h1:wy28qYRKZgnJTxGxvye5/wgWr1EKjmUDGYox5mGlRlI=\ngo.uber.org/goleak v1.1.11/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.6.0 h1:y6IPFStTAIT5Ytl7/XYmHvzXQ7S3g/IeZW9hyZ5thw4=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngo.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=\ngo.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4 h1:4nGaVu0QrbjT/AK2PRLuQfQuh6DJve+pELhqTdAj3x0=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007 h1:gG67DSER+11cZvqIMb8S8bt0vZtiN6xWYARwirrOSfE=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3 h1:cokOdA+Jmi5PJGXLlLllQSgYigAEfHXJAERHVMaCc2k=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\n"
        },
        {
          "name": "god.go",
          "type": "blob",
          "size": 0.2548828125,
          "content": "package fate\n\n// LikeUseGod ...\ntype LikeUseGod struct {\n\tLikeGod string // 喜神\n\tUseGod  string // 用神\n\tGold    string // 五行:金\n\tWood    string // 五行:木\n\tWater   string // 五行:水\n\tFire    string // 五行:火\n\tSoil    string // 五行:土\n}\n"
        },
        {
          "name": "information.go",
          "type": "blob",
          "size": 5.19140625,
          "content": "package fate\n\nimport (\n\t\"bufio\"\n\t\"encoding/csv\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/babyname/fate/config\"\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n\t\"os\"\n)\n\n// Information ...\ntype Information interface {\n\tGroup(b bool)\n\tWrite(names ...Name) error\n\tHead(heads ...string) error\n\tFinish() error\n}\n\ntype jsonInformation struct {\n\thead []string\n\tpath string\n\tfile *os.File\n}\n\n// Group ...\nfunc (j *jsonInformation) Group(b bool) {\n\tpanic(\"implement me\")\n}\n\ntype logInformation struct {\n\tpath  string\n\tsugar *zap.SugaredLogger\n\thead  []string\n}\n\n// Group ...\nfunc (l *logInformation) Group(b bool) {\n\tpanic(\"implement me\")\n}\n\ntype csvInformation struct {\n\thead []string\n\tpath string\n\tfile *os.File\n}\n\n// Group ...\nfunc (c *csvInformation) Group(b bool) {\n\tpanic(\"implement me\")\n}\n\n// Finish ...\nfunc (l *logInformation) Finish() error {\n\treturn l.sugar.Sync()\n}\n\nfunc initOutputWithConfig(output config.FileOutput) Information {\n\tswitch output.OutputMode {\n\t//case config.OutputModelJSON:\n\t//\treturn jsonOutput(output.Path)\n\tcase config.OutputModeCSV:\n\t\treturn csvOutput(output.Path)\n\t}\n\n\treturn logOutput(output.Path)\n}\n\n// Finish ...\nfunc (j *jsonInformation) Finish() error {\n\treturn j.file.Close()\n}\n\n// Write ...\nfunc (j *jsonInformation) Write(names ...Name) error {\n\tw := bufio.NewWriter(j.file)\n\tfor _, n := range names {\n\t\tout := headNameJSONOutput(j.head, n, nil)\n\t\t//output json\n\t\t_, _ = w.Write(out)\n\t\t_, _ = w.WriteString(\",\\n\")\n\t}\n\treturn w.Flush()\n\n}\n\n// Head ...\nfunc (j *jsonInformation) Head(heads ...string) error {\n\tj.head = heads\n\treturn nil\n}\n\nfunc jsonOutput(path string) Information {\n\tfile, e := os.OpenFile(path, os.O_CREATE|os.O_APPEND|os.O_SYNC|os.O_RDWR, 0755)\n\tif e != nil {\n\t\tpanic(fmt.Errorf(\"json output failed:%w\", e))\n\t}\n\treturn &jsonInformation{\n\t\tpath: path,\n\t\tfile: file,\n\t}\n}\n\n// Write ...\nfunc (l *logInformation) Write(names ...Name) error {\n\tfor _, n := range names {\n\t\tout := headNameOutput(l.head, n, func(s string) bool {\n\t\t\treturn s == \"姓名\"\n\t\t})\n\t\tl.sugar.Infow(n.String(), out...)\n\t}\n\treturn nil\n}\n\n// Head ...\nfunc (l *logInformation) Head(heads ...string) error {\n\tl.head = heads\n\treturn nil\n}\nfunc logOutput(path string) Information {\n\tif path == \"\" {\n\t\tpath = \"stdout\"\n\t}\n\tcfg := zap.NewProductionConfig()\n\n\tcfg.EncoderConfig = zapcore.EncoderConfig{\n\t\tMessageKey:     \"name\",\n\t\tLevelKey:       \"\",\n\t\tTimeKey:        \"\",\n\t\tNameKey:        \"\",\n\t\tCallerKey:      \"\",\n\t\tStacktraceKey:  \"\",\n\t\tLineEnding:     \"\",\n\t\tEncodeLevel:    nil,\n\t\tEncodeTime:     nil,\n\t\tEncodeDuration: nil,\n\t\tEncodeCaller:   nil,\n\t\tEncodeName:     nil,\n\t}\n\tcfg.OutputPaths = []string{\n\t\tpath,\n\t}\n\n\tcfg.DisableCaller = true\n\tcfg.DisableStacktrace = true\n\n\tlogger, e := cfg.Build(\n\t\tzap.AddCaller(),\n\t\tzap.AddCallerSkip(1),\n\t)\n\tif e != nil {\n\t\tpanic(e)\n\t}\n\treturn &logInformation{\n\t\tpath:  path,\n\t\tsugar: logger.Sugar(),\n\t}\n}\n\nfunc csvOutput(path string) Information {\n\tfile, e := os.OpenFile(path, os.O_CREATE|os.O_APPEND|os.O_SYNC|os.O_RDWR, 0755)\n\tif e != nil {\n\t\tpanic(fmt.Errorf(\"json output failed:%w\", e))\n\t}\n\n\treturn &csvInformation{\n\t\tpath: path,\n\t\tfile: file,\n\t}\n}\n\n// Write ...\nfunc (c *csvInformation) Write(names ...Name) error {\n\tw := csv.NewWriter(c.file)\n\tfor _, n := range names {\n\t\tout := nameOutputString(c.head, n)\n\t\t_ = w.Write(out)\n\t}\n\tw.Flush()\n\treturn nil\n}\n\n// Finish ...\nfunc (c *csvInformation) Finish() error {\n\treturn c.file.Close()\n}\n\n// Head ...\nfunc (c *csvInformation) Head(heads ...string) (e error) {\n\tc.head = heads\n\tw := csv.NewWriter(c.file)\n\te = w.Write(heads)\n\tif e != nil {\n\t\treturn e\n\t}\n\tw.Flush()\n\treturn nil\n}\n\nfunc headNameOutput(heads []string, name Name, skip func(string) bool) (out []interface{}) {\n\tfor _, h := range heads {\n\t\tif skip != nil && skip(h) {\n\t\t\tcontinue\n\t\t}\n\t\tswitch h {\n\t\tcase \"姓名\":\n\t\t\tout = append(out, h, name.String())\n\t\tcase \"笔画\":\n\t\t\tout = append(out, h, name.Strokes())\n\t\tcase \"拼音\":\n\t\t\tout = append(out, h, name.PinYin())\n\t\tcase \"喜用神\":\n\t\t\tout = append(out, h, name.XiYongShen())\n\t\tcase \"八字\", \"生辰八字\":\n\t\t\tout = append(out, h, name.BaZi())\n\t\t}\n\t}\n\treturn\n}\n\nfunc headNameJSONOutput(heads []string, name Name, skip func(string) bool) (b []byte) {\n\tout := make(map[string]string)\n\tfor _, h := range heads {\n\t\tif skip != nil && skip(h) {\n\t\t\tcontinue\n\t\t}\n\t\tswitch h {\n\t\tcase \"姓名\":\n\t\t\tout[h] = name.String()\n\t\tcase \"笔画\":\n\t\t\tout[h] = name.Strokes()\n\t\tcase \"拼音\":\n\t\t\tout[h] = name.PinYin()\n\t\tcase \"喜用神\":\n\t\t\tout[h] = name.XiYongShen()\n\t\t}\n\t}\n\tby, e := json.Marshal(out)\n\tif e != nil {\n\t\treturn nil\n\t}\n\treturn by\n}\n\nfunc headNameOutputString(heads []string, name Name, skip func(string) bool) (out []string) {\n\tfor _, h := range heads {\n\t\tif skip != nil && skip(h) {\n\t\t\tcontinue\n\t\t}\n\t\tswitch h {\n\t\tcase \"姓名\":\n\t\t\tout = append(out, h, name.String())\n\t\tcase \"笔画\":\n\t\t\tout = append(out, h, name.Strokes())\n\t\tcase \"拼音\":\n\t\t\tout = append(out, h, name.PinYin())\n\t\tcase \"喜用神\":\n\t\t\tout = append(out, h, name.XiYongShen())\n\t\t}\n\t}\n\treturn\n}\nfunc nameOutputString(heads []string, name Name) (out []string) {\n\tfor _, h := range heads {\n\t\tswitch h {\n\t\tcase \"姓名\":\n\t\t\tout = append(out, name.String())\n\t\tcase \"笔画\":\n\t\t\tout = append(out, name.Strokes())\n\t\tcase \"拼音\":\n\t\t\tout = append(out, name.PinYin())\n\t\tcase \"喜用神\":\n\t\t\tout = append(out, name.XiYongShen())\n\t\t}\n\t}\n\treturn\n}\n"
        },
        {
          "name": "iterator.go",
          "type": "blob",
          "size": 0.89453125,
          "content": "package fate\n\n// IteratorFunc ...\ntype IteratorFunc func(v interface{}) error\n\ntype iterator struct {\n\tdata  []interface{}\n\tindex int\n}\n\n// newIterator ...\nfunc newIterator() *iterator {\n\treturn &iterator{\n\t\tdata:  nil,\n\t\tindex: 0,\n\t}\n}\n\n// HasNext check next\nfunc (i *iterator) HasNext() bool {\n\treturn i.index < len(i.data)\n}\n\n// Next get next\nfunc (i *iterator) Next() interface{} {\n\tdefer func() {\n\t\ti.index++\n\t}()\n\tif i.index < len(i.data) {\n\t\treturn i.data[i.index]\n\t}\n\n\treturn nil\n}\n\n// Reset reset index\nfunc (i *iterator) Reset() {\n\ti.index = 0\n}\n\n// Add add radical\nfunc (i *iterator) Add(v interface{}) {\n\ti.data = append(i.data, v)\n}\n\n// Size iterator data size\nfunc (i *iterator) Size() int {\n\treturn len(i.data)\n}\n\n// Iterator an default iterator\nfunc (i *iterator) Iterator(f IteratorFunc) error {\n\ti.Reset()\n\tfor i.HasNext() {\n\t\tif err := f(i.Next()); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "log.go",
          "type": "blob",
          "size": 0.09375,
          "content": "package fate\n\nimport (\n\t\"github.com/goextension/log/zap\"\n)\n\nfunc init() {\n\tzap.InitZapSugar()\n}\n"
        },
        {
          "name": "martial.go",
          "type": "blob",
          "size": 0.435546875,
          "content": "package fate\n\n// Martial six martials\ntype Martial struct {\n\tBiHua     bool `bson:\"bi_hua\" json:\"bi_hua\"`         // 笔画\n\tSanCai    bool `bson:\"san_cai\" json:\"san_cai\"`       // 三才\n\tBaZi      bool `bson:\"ba_zi\" json:\"ba_zi\"`           // 八字\n\tGuaXiang  bool `bson:\"gua_xiang\" json:\"gua_xiang\"`   // 卦象\n\tTianYun   bool `bson:\"tian_yun\" json:\"tian_yun\"`     // 天运\n\tShengXiao bool `bson:\"sheng_xiao\" json:\"sheng_xiao\"` // 生肖\n}\n"
        },
        {
          "name": "name.go",
          "type": "blob",
          "size": 1.9052734375,
          "content": "package fate\n\nimport (\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/godcong/chronos\"\n\t\"github.com/godcong/yi\"\n)\n\n// Name 姓名\ntype Name struct {\n\tFirstName   []*Character // 名姓\n\tLastName    []*Character\n\tborn        *chronos.Calendar\n\tbaZi        *BaZi\n\tbaGua       *yi.Yi // 周易八卦\n\tzodiac      *Zodiac\n\tzodiacPoint int\n}\n\n// String ...\nfunc (n Name) String() string {\n\tvar s string\n\tfor _, l := range n.LastName {\n\t\ts += l.Ch\n\t}\n\tfor _, f := range n.FirstName {\n\t\ts += f.Ch\n\t}\n\treturn s\n}\n\n// Strokes ...\nfunc (n Name) Strokes() string {\n\tvar s []string\n\tfor _, l := range n.LastName {\n\t\ts = append(s, strconv.Itoa(l.ScienceStroke))\n\t}\n\n\tfor _, f := range n.FirstName {\n\t\ts = append(s, strconv.Itoa(f.ScienceStroke))\n\t}\n\treturn strings.Join(s, \",\")\n}\n\n// PinYin ...\nfunc (n Name) PinYin() string {\n\tvar s string\n\tfor _, l := range n.LastName {\n\t\ts += \"[\" + strings.Join(l.PinYin, \",\") + \"]\"\n\t}\n\n\tfor _, f := range n.FirstName {\n\t\ts += \"[\" + strings.Join(f.PinYin, \",\") + \"]\"\n\t}\n\treturn s\n}\n\n// WuXing ...\nfunc (n Name) WuXing() string {\n\tvar s string\n\tfor _, l := range n.LastName {\n\t\ts += l.WuXing\n\t}\n\tfor _, f := range n.FirstName {\n\t\ts += f.WuXing\n\t}\n\treturn s\n}\n\n// XiYongShen ...\nfunc (n Name) XiYongShen() string {\n\treturn n.baZi.XiYongShen()\n}\n\nfunc createName(impl *fateImpl, f1 *Character, f2 *Character) *Name {\n\tlastSize := len(impl.lastChar)\n\tlast := make([]*Character, lastSize, lastSize)\n\tcopy(last, impl.lastChar)\n\tff1 := *f1\n\tff2 := *f2\n\tfirst := []*Character{&ff1, &ff2}\n\n\treturn &Name{\n\t\tFirstName: first,\n\t\tLastName:  last,\n\t}\n}\n\n// BaGua ...\nfunc (n *Name) BaGua() *yi.Yi {\n\tif n.baGua == nil {\n\t\tlastSize := len(n.LastName)\n\t\tshang := getStroke(n.LastName[0])\n\t\tif lastSize > 1 {\n\t\t\tshang += getStroke(n.LastName[1])\n\t\t}\n\t\txia := getStroke(n.FirstName[0]) + getStroke(n.FirstName[1])\n\t\tn.baGua = yi.NumberQiGua(xia, shang, shang+xia)\n\t}\n\n\treturn n.baGua\n}\n\n// BaZi ...\nfunc (n Name) BaZi() string {\n\treturn n.baZi.String()\n}\n"
        },
        {
          "name": "name_stroke.go",
          "type": "blob",
          "size": 0.99609375,
          "content": "package fate\n\n// NameStroke ...\ntype NameStroke struct {\n\t// ID     bson.ObjectId `bson:\"_id,omitempty\"`\n\tLast1  int `bson:\"last_1\"`\n\tLast2  int `bson:\"last_2\"`\n\tFirst1 int `bson:\"first_1\"`\n\tFirst2 int `bson:\"first_2\"`\n}\n\ntype nameStroke struct {\n\t*NameStroke\n\t*SanCai\n\t*WuGe\n}\n\n// SanCaiWuGe ...\ntype SanCaiWuGe interface {\n}\n\n// SanCaiWuGe 三才五格\nfunc (s *NameStroke) SanCaiWuGe() SanCaiWuGe {\n\tl1, l2, f1, f2 := s.Last1, s.Last2, s.First1, s.First2\n\twuGe := &WuGe{\n\t\ttianGe: tianGe(l1, l2, f1, f2),\n\t\trenGe:  renGe(l1, l2, f1, f2),\n\t\tdiGe:   diGe(l1, l2, f1, f2),\n\t\twaiGe:  waiGe(l1, l2, f1, f2),\n\t\tzongGe: zongGe(l1, l2, f1, f2),\n\t}\n\n\tsanCai := &SanCai{\n\t\ttianCai:        sanCaiAttr(wuGe.TianGe()),\n\t\ttianCaiYinYang: yinYangAttr(wuGe.TianGe()),\n\t\trenCai:         sanCaiAttr(wuGe.RenGe()),\n\t\trenCaiYinYang:  yinYangAttr(wuGe.RenGe()),\n\t\tdiCai:          sanCaiAttr(wuGe.DiGe()),\n\t\tdiCaiYingYang:  yinYangAttr(wuGe.DiGe()),\n\t}\n\n\treturn &nameStroke{\n\t\tNameStroke: s,\n\t\tSanCai:     sanCai,\n\t\tWuGe:       wuGe,\n\t}\n}\n"
        },
        {
          "name": "nayin.go",
          "type": "blob",
          "size": 0.2314453125,
          "content": "package fate\n\nimport \"github.com/godcong/chronos\"\n\n// NaYin 纳音\ntype NaYin struct {\n\tcalendar *chronos.Calendar\n}\n\n// NewNaYin 创建纳音\nfunc NewNaYin(calendar *chronos.Calendar) *NaYin {\n\treturn &NaYin{\n\t\tcalendar: calendar,\n\t}\n}\n"
        },
        {
          "name": "regular",
          "type": "tree",
          "content": null
        },
        {
          "name": "sancai.go",
          "type": "blob",
          "size": 1.4052734375,
          "content": "package fate\n\nimport \"github.com/xormsharp/xorm\"\n\nconst sanCai = \"水木木火火土土金金水\"\nconst yinYang = \"阴阳\"\n\n// SanCai ...\ntype SanCai struct {\n\ttianCai        string `bson:\"tian_cai\"`\n\ttianCaiYinYang string `bson:\"tian_cai_yin_yang\"`\n\trenCai         string `bson:\"ren_cai\"`\n\trenCaiYinYang  string `bson:\"ren_cai_yin_yang\"`\n\tdiCai          string `bson:\"di_cai\"`\n\tdiCaiYingYang  string `bson:\"di_cai_ying_yang\"`\n\tfortune        string `bson:\"fortune\"` // 吉凶\n\tcomment        string `bson:\"comment\"` // 说明\n}\n\n// NewSanCai 新建一个三才对象\nfunc NewSanCai(tian, ren, di int) *SanCai {\n\treturn &SanCai{\n\t\ttianCai:        sanCaiAttr(tian),\n\t\ttianCaiYinYang: yinYangAttr(tian),\n\t\trenCai:         sanCaiAttr(ren),\n\t\trenCaiYinYang:  yinYangAttr(ren),\n\t\tdiCai:          sanCaiAttr(di),\n\t\tdiCaiYingYang:  yinYangAttr(di),\n\t}\n}\n\n// Check 检查三才属性\nfunc Check(engine *xorm.Engine, cai *SanCai, point int) bool {\n\twx := FindWuXing(engine, cai.tianCai, cai.renCai, cai.diCai)\n\tif wx.Luck.Point() >= point {\n\t\treturn true\n\t}\n\treturn false\n}\n\n// GenerateThreeTalent 计算字符的三才属性\n// 1-2木：1为阳木，2为阴木   3-4火：3为阳火，4为阴火   5-6土：5为阳土，6为阴土   7-8金：7为阳金，8为阴金   9-10水：9为阳水，10为阴水\nfunc sanCaiAttr(i int) string {\n\treturn string([]rune(sanCai)[i%10])\n}\n\nfunc yinYangAttr(i int) string {\n\treturn string([]rune(yinYang)[i%2])\n}\n"
        },
        {
          "name": "statik",
          "type": "tree",
          "content": null
        },
        {
          "name": "stroke.go",
          "type": "blob",
          "size": 0.580078125,
          "content": "package fate\n\n// Strokes 推荐笔画数\ntype Strokes struct {\n\tSimplifiedChinese  int // 简体中文\n\tTraditionalChinese int // 繁体中文\n\tKangxiDictionary   int // 康熙字典\n\tGodBook            int // 神册\n}\n\n// FindCharacterStrokes 通过文字查询推荐笔画数\nfunc FindCharacterStrokes(char string) int {\n\t// TODO:find\n\ts := &Strokes{}\n\tif s.GodBook > 0 {\n\t\treturn s.GodBook\n\t}\n\tif s.KangxiDictionary > 0 {\n\t\treturn s.KangxiDictionary\n\t}\n\tif s.TraditionalChinese > 0 {\n\t\treturn s.TraditionalChinese\n\t}\n\tif s.SimplifiedChinese > 0 {\n\t\treturn s.SimplifiedChinese\n\t}\n\treturn 0\n}\n"
        },
        {
          "name": "version.go",
          "type": "blob",
          "size": 0.052734375,
          "content": "package fate\n\n// Version ...\nconst Version = \"v3.5.7\"\n"
        },
        {
          "name": "wuge.go",
          "type": "blob",
          "size": 6.42578125,
          "content": "package fate\n\nimport (\n\t\"github.com/goextension/log\"\n\t\"github.com/google/uuid\"\n\t\"github.com/xormsharp/xorm\"\n)\n\n// WuGe ...\ntype WuGe struct {\n\ttianGe int\n\trenGe  int\n\tdiGe   int\n\twaiGe  int\n\tzongGe int\n}\n\n// ZongGe ...\nfunc (ge *WuGe) ZongGe() int {\n\treturn ge.zongGe\n}\n\n// WaiGe ...\nfunc (ge *WuGe) WaiGe() int {\n\treturn ge.waiGe\n}\n\n// DiGe ...\nfunc (ge *WuGe) DiGe() int {\n\treturn ge.diGe\n}\n\n// RenGe ...\nfunc (ge *WuGe) RenGe() int {\n\treturn ge.renGe\n}\n\n// TianGe ...\nfunc (ge *WuGe) TianGe() int {\n\treturn ge.tianGe\n}\n\n// CalcWuGe 计算五格\nfunc CalcWuGe(l1, l2, f1, f2 int) *WuGe {\n\treturn &WuGe{\n\t\ttianGe: tianGe(l1, l2, f1, f2),\n\t\trenGe:  renGe(l1, l2, f1, f2),\n\t\tdiGe:   diGe(l1, l2, f1, f2),\n\t\twaiGe:  waiGe(l1, l2, f1, f2),\n\t\tzongGe: zongGe(l1, l2, f1, f2),\n\t}\n}\n\n// tianGe input the ScienceStrokes with last name\n// 天格（复姓）姓的笔画相加\n// 天格（单姓）姓的笔画上加一\nfunc tianGe(l1, l2, _, _ int) int {\n\tif l2 == 0 {\n\t\treturn l1 + 1\n\t}\n\treturn l1 + l2\n}\n\n// renGe input the ScienceStrokes with name\n// 人格（复姓）姓氏的第二字的笔画加名的第一字\n// 人格（复姓单名）姓的第二字加名\n// 人格（单姓单名）姓加名\n//  人格（单姓复名）姓加名的第一字\nfunc renGe(l1, l2, f1, _ int) int {\n\t// 人格（复姓）姓氏的第二字的笔画加名的第一字\n\t// 人格（复姓单名）姓的第二字加名\n\tif l2 != 0 {\n\t\treturn l2 + f1\n\t}\n\treturn l1 + f1\n}\n\n// diGe input the ScienceStrokes with name\n// 地格（复姓复名，单姓复名）名字相加\n// 地格（复姓单名，单姓单名）名字+1\nfunc diGe(_, _, f1, f2 int) int {\n\tif f2 == 0 {\n\t\treturn f1 + 1\n\t}\n\treturn f1 + f2\n}\n\n// waiGe input the ScienceStrokes with name\n// 外格（复姓单名）姓的第一字加笔画数一\n// 外格（复姓复名）姓的第一字和名的最后一定相加的笔画数\n// 外格（单姓复名）一加名的最后一个字\n// 外格（单姓单名）一加一\nfunc waiGe(l1, l2, _, f2 int) (n int) {\n\t// 单姓单名\n\tif l2 == 0 && f2 == 0 {\n\t\tn = 1 + 1\n\t}\n\t// 单姓复名\n\tif l2 == 0 && f2 != 0 {\n\t\tn = 1 + f2\n\t}\n\t// 复姓单名\n\tif l2 != 0 && f2 == 0 {\n\t\tn = l1 + 1\n\t}\n\t// 复姓复名\n\tif l2 != 0 && f2 != 0 {\n\t\tn = l1 + f2\n\t}\n\treturn n\n}\n\n// zongGe input the ScienceStrokes with name\n// 总格，姓加名的笔画总数  数理五行分类\nfunc zongGe(l1, l2, f1, f2 int) int {\n\t// 归1\n\tzg := (l1 + l2 + f1 + f2) - 1\n\tif zg < 0 {\n\t\tzg = zg + 81\n\t}\n\treturn zg%81 + 1\n}\n\n// Check 格检查\nfunc (ge *WuGe) Check(ss ...string) bool {\n\tv := map[string]bool{}\n\tif ss == nil {\n\t\tss = append(ss, \"吉\", \"半吉\")\n\t}\n\t//ignore:tianGe\n\tv[GetDaYan(ge.diGe).Lucky] = false\n\tv[GetDaYan(ge.renGe).Lucky] = false\n\tv[GetDaYan(ge.waiGe).Lucky] = false\n\tv[GetDaYan(ge.zongGe).Lucky] = false\n\n\tfor l := range v {\n\t\tfor i := range ss {\n\t\t\tif ss[i] == l {\n\t\t\t\tv[l] = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\tfor l := range v {\n\t\tif v[l] == false {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n\n}\n\n// WuGeLucky ...\ntype WuGeLucky struct {\n\tID           string `xorm:\"id pk\"`\n\tLastStroke1  int    `xorm:\"last_stroke_1\"`\n\tLastStroke2  int    `xorm:\"last_stroke_2\"`\n\tFirstStroke1 int    `xorm:\"first_stroke_1\"`\n\tFirstStroke2 int    `xorm:\"first_stroke_2\"`\n\tTianGe       int    `xorm:\"tian_ge\"`\n\tTianDaYan    string `xorm:\"tian_da_yan\"`\n\tRenGe        int    `xorm:\"ren_ge\"`\n\tRenDaYan     string `xorm:\"ren_da_yan\"`\n\tDiGe         int    `xorm:\"di_ge\"`\n\tDiDaYan      string `xorm:\"di_da_yan\"`\n\tWaiGe        int    `xorm:\"wai_ge\"`\n\tWaiDaYan     string `xorm:\"wai_da_yan\"`\n\tZongGe       int    `xorm:\"zong_ge\"`\n\tZongDaYan    string `xorm:\"zong_da_yan\"`\n\tZongLucky    bool   `xorm:\"zong_lucky\"`\n\tZongSex      bool   `xorm:\"zong_sex\"`\n\tZongMax      bool   `xorm:\"zong_max\"`\n}\n\n// BeforeInsert ...\nfunc (w *WuGeLucky) BeforeInsert() {\n\tw.ID = uuid.Must(uuid.NewUUID()).String()\n}\n\nfunc countWuGeLucky(engine *xorm.Engine) (n int64, e error) {\n\treturn engine.Table(&WuGeLucky{}).Count()\n}\n\nfunc insertOrUpdateWuGeLucky(engine *xorm.Engine, lucky *WuGeLucky) (n int64, e error) {\n\tvar session = func() *xorm.Session {\n\t\treturn engine.Where(\"last_stroke_1 = ?\", lucky.LastStroke1).\n\t\t\tWhere(\"last_stroke_2 = ?\", lucky.LastStroke2).\n\t\t\tWhere(\"first_stroke_1 = ?\", lucky.FirstStroke1).\n\t\t\tWhere(\"first_stroke_2 = ?\", lucky.FirstStroke2)\n\t}\n\n\tn, e = session().Count(&WuGeLucky{})\n\tif e != nil {\n\t\treturn n, e\n\t}\n\tlog.Infow(\"lucky\", lucky)\n\tif n == 0 {\n\t\tn, e = engine.InsertOne(lucky)\n\t\treturn\n\t}\n\treturn session().Update(lucky)\n}\n\n// WuGeMax ...\nconst WuGeMax = 32\n\nfunc initWuGe(lucky chan<- *WuGeLucky) {\n\tdefer func() {\n\t\tclose(lucky)\n\t}()\n\tvar wuge *WuGe\n\tfor l1 := 1; l1 <= WuGeMax; l1++ {\n\t\tfor l2 := 0; l2 <= WuGeMax; l2++ {\n\t\t\tfor f1 := 1; f1 <= WuGeMax; f1++ {\n\t\t\t\tfor f2 := 1; f2 <= WuGeMax; f2++ {\n\t\t\t\t\twuge = CalcWuGe(l1, l2, f1, f2)\n\t\t\t\t\tlucky <- &WuGeLucky{\n\t\t\t\t\t\tID:           \"\",\n\t\t\t\t\t\tLastStroke1:  l1,\n\t\t\t\t\t\tLastStroke2:  l2,\n\t\t\t\t\t\tFirstStroke1: f1,\n\t\t\t\t\t\tFirstStroke2: f2,\n\t\t\t\t\t\tTianGe:       wuge.tianGe,\n\t\t\t\t\t\tTianDaYan:    GetDaYan(wuge.tianGe).Lucky,\n\t\t\t\t\t\tRenGe:        wuge.renGe,\n\t\t\t\t\t\tRenDaYan:     GetDaYan(wuge.renGe).Lucky,\n\t\t\t\t\t\tDiGe:         wuge.diGe,\n\t\t\t\t\t\tDiDaYan:      GetDaYan(wuge.diGe).Lucky,\n\t\t\t\t\t\tWaiGe:        wuge.waiGe,\n\t\t\t\t\t\tWaiDaYan:     GetDaYan(wuge.waiGe).Lucky,\n\t\t\t\t\t\tZongGe:       wuge.zongGe,\n\t\t\t\t\t\tZongDaYan:    GetDaYan(wuge.zongGe).Lucky,\n\t\t\t\t\t\tZongLucky:    wuge.Check(),\n\t\t\t\t\t\tZongSex:      isSex(wuge.zongGe, wuge.waiGe, wuge.renGe, wuge.diGe),\n\t\t\t\t\t\tZongMax:      GetDaYan(wuge.zongGe).IsMax(),\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc getStroke(character *Character) int {\n\tif character.ScienceStroke != 0 {\n\t\treturn character.ScienceStroke\n\t} else if character.KangXiStroke != 0 {\n\t\treturn character.KangXiStroke\n\t} else if character.Stroke != 0 {\n\t\treturn character.Stroke\n\t} else if character.SimpleTotalStroke != 0 {\n\t\treturn character.SimpleTotalStroke\n\t} else if character.TraditionalTotalStroke != 0 {\n\t\treturn character.TraditionalTotalStroke\n\t}\n\treturn 0\n}\n\nfunc isSex(dys ...int) bool {\n\tfor _, dy := range dys {\n\t\tif GetDaYan(dy).Sex {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunc filterWuGe(eng *xorm.Engine, last []*Character, wg chan<- *WuGeLucky) error {\n\tdefer func() {\n\t\tclose(wg)\n\t}()\n\tl1 := getStroke(last[0])\n\tl2 := 0\n\tif len(last) == 2 {\n\t\tl2 = getStroke(last[1])\n\t}\n\ts := eng.Where(\"last_stroke_1 =?\", l1).\n\t\tAnd(\"last_stroke_2 =?\", l2).\n\t\tAnd(\"zong_lucky = ?\", 1)\n\trows, e := s.Rows(&WuGeLucky{})\n\tif e != nil {\n\t\treturn e\n\t}\n\tfor rows.Next() {\n\t\tvar tmp WuGeLucky\n\t\te := rows.Scan(&tmp)\n\t\tif e != nil {\n\t\t\treturn e\n\t\t}\n\t\twg <- &tmp\n\t}\n\n\treturn nil\n}\n"
        },
        {
          "name": "wuge_test.go",
          "type": "blob",
          "size": 0.5419921875,
          "content": "package fate_test\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"testing\"\n\n\t\"github.com/babyname/fate\"\n)\n\n// TestWuGe_WaiGe ...\nfunc TestWuGe_WaiGe(t *testing.T) {\n\tl1, l2, f1, f2 := 1, 1, 1, 1\n\tfor i := 0; i < 80000; i++ {\n\t\tif f2 >= fate.WuGeMax {\n\t\t\tf1++\n\t\t\tf2 = 1\n\t\t}\n\t\tif f1 >= fate.WuGeMax {\n\t\t\tl2++\n\t\t\tf1 = 1\n\t\t}\n\t\tif l2 >= fate.WuGeMax {\n\t\t\tl1++\n\t\t\tl2 = 1\n\t\t}\n\t\twg := fate.CalcWuGe(l1, l2, f1, f2)\n\t\tsum := l1 + l2 + f1 + f2\n\t\tif wg.ZongGe() != sum {\n\t\t\tlog.Println(wg.ZongGe() == sum, l1, l2, f1, f2, wg.ZongGe())\n\t\t}\n\t\tfmt.Println(\"result:\", wg.Check())\n\t\tf2++\n\t}\n}\n"
        },
        {
          "name": "wuxing.go",
          "type": "blob",
          "size": 0.861328125,
          "content": "package fate\n\nimport (\n\t\"errors\"\n\n\t\"github.com/xormsharp/xorm\"\n)\n\n// Luck ...\ntype Luck int\n\nvar luckPoint = []string{\"大凶\", \"凶\", \"凶多于吉\", \"吉凶参半\", \"吉多于凶\", \"吉\", \"大吉\"}\n\n// Point ...\nfunc (l *Luck) Point() int {\n\treturn int(*l) + 1\n}\n\n// ToLuck ...\nfunc ToLuck(s string) (l Luck, e error) {\n\tfor i, luck := range luckPoint {\n\t\tif luck == s {\n\t\t\treturn Luck(i), nil\n\t\t}\n\t}\n\treturn Luck(0), errors.New(\"parse error\")\n}\n\n// WuXing 五行：five elements of metal,wood,water,fire and earth\ntype WuXing struct {\n\tWuXing  string `json:\"wu_xing\"`\n\tLuck    Luck   `json:\"luck\"`\n\tComment string `json:\"comment\"`\n}\n\n// FindWuXing find a wuxing\nfunc FindWuXing(engine *xorm.Engine, s ...string) *WuXing {\n\tvar wx WuXing\n\t_, e := engine.Where(\"first = ?\", s[0]).And(\"second = ?\", s[1]).And(\"third = ?\", s[2]).Get(&wx)\n\tif e != nil {\n\t\treturn nil\n\t}\n\treturn &wx\n}\n"
        },
        {
          "name": "xiyong.go",
          "type": "blob",
          "size": 1.4306640625,
          "content": "package fate\n\nimport (\n\t\"math\"\n\t\"strings\"\n)\n\n// XiYong 喜用神\ntype XiYong struct {\n\tWuXingFen          map[string]int\n\tSimilar            []string // 同类\n\tSimilarPoint       int\n\tHeterogeneous      []string // 异类\n\tHeterogeneousPoint int\n}\n\nvar sheng = []string{\"木\", \"火\", \"土\", \"金\", \"水\"}\nvar ke = []string{\"木\", \"土\", \"水\", \"火\", \"金\"}\n\n// AddFen 五行分\nfunc (xy *XiYong) AddFen(s string, point int) {\n\tif xy.WuXingFen == nil {\n\t\txy.WuXingFen = make(map[string]int)\n\t}\n\n\tif v, b := xy.WuXingFen[s]; b {\n\t\txy.WuXingFen[s] = v + point\n\t} else {\n\t\txy.WuXingFen[s] = point\n\t}\n}\n\n// GetFen 取得分\nfunc (xy *XiYong) GetFen(s string) (point int) {\n\tif xy.WuXingFen == nil {\n\t\treturn 0\n\t}\n\tif v, b := xy.WuXingFen[s]; b {\n\t\treturn v\n\t}\n\treturn 0\n}\n\nfunc (xy *XiYong) minFenWuXing(ss ...string) (wx string) {\n\tmin := math.MaxInt32\n\tfor _, s := range ss {\n\t\tif xy.WuXingFen[s] < min {\n\t\t\tmin = xy.WuXingFen[s]\n\t\t\twx = s\n\t\t} else if xy.WuXingFen[s] == min {\n\t\t\twx += s\n\t\t}\n\t}\n\treturn\n}\n\n// Shen 喜用神\nfunc (xy *XiYong) Shen() string {\n\tif !xy.QiangRuo() {\n\t\treturn xy.minFenWuXing(xy.Similar...)\n\t}\n\treturn xy.minFenWuXing(xy.Heterogeneous...)\n}\n\n// QiangRuo 八字偏强（true)弱（false）\nfunc (xy *XiYong) QiangRuo() bool {\n\treturn xy.SimilarPoint > xy.HeterogeneousPoint\n}\n\nfunc filterXiYong(yong string, cs ...*Character) (b bool) {\n\tfor _, c := range cs {\n\t\tif strings.Contains(yong, c.WuXing) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n"
        },
        {
          "name": "yao.go",
          "type": "blob",
          "size": 0.892578125,
          "content": "package fate\n\nimport \"github.com/godcong/yi\"\n\n// GuaYao ...\ntype GuaYao struct {\n\tYao     string `bson:\"er_yao\"`          // 二爻\n\tJiXiong string `bson:\"er_yao_ji_xiong\"` // 二爻吉凶\n}\n\nfunc getYao(xiang *yi.GuaXiang, yao int) GuaYao {\n\tswitch yao {\n\tcase 0:\n\t\treturn GuaYao{Yao: xiang.ChuYao, JiXiong: xiang.ChuYaoJiXiong}\n\tcase 1:\n\t\treturn GuaYao{Yao: xiang.ErYao, JiXiong: xiang.ErYaoJiXiong}\n\tcase 2:\n\t\treturn GuaYao{Yao: xiang.SanYao, JiXiong: xiang.SanYaoJiXiong}\n\tcase 3:\n\t\treturn GuaYao{Yao: xiang.SiYao, JiXiong: xiang.SiYaoJiXiong}\n\tcase 4:\n\t\treturn GuaYao{Yao: xiang.WuYao, JiXiong: xiang.WuYaoJiXiong}\n\tcase 5:\n\t\treturn GuaYao{Yao: xiang.ShangYao, JiXiong: xiang.ShangYaoJiXiong}\n\tdefault:\n\t\tpanic(\"wrong yao\")\n\t}\n}\n\nfunc filterYao(y *yi.Yi, fs ...string) bool {\n\tyao := getYao(y.Get(yi.BianGua), y.BianYao())\n\tfor _, s := range fs {\n\t\tif yao.JiXiong == s {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n"
        },
        {
          "name": "zhouyi.go",
          "type": "blob",
          "size": 0.13671875,
          "content": "package fate\n\nimport (\n\t\"github.com/godcong/yi\"\n)\n\n// QiGua 起卦\nfunc QiGua(xia, shang int) *yi.Yi {\n\treturn yi.NumberQiGua(shang, xia)\n}\n"
        },
        {
          "name": "zhouyi_test.go",
          "type": "blob",
          "size": 0.111328125,
          "content": "package fate\n\nimport \"testing\"\n\nfunc TestQiGua(t *testing.T) {\n\tyi := QiGua(7, 7)\n\tget := yi.Get(0)\n\tt.Log(get)\n}\n"
        },
        {
          "name": "zodiac.go",
          "type": "blob",
          "size": 38.7080078125,
          "content": "package fate\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/godcong/chronos\"\n)\n\n// ZodiacPig ...\nconst (\n\tZodiacRat     = \"鼠\"\n\tZodiacCow     = \"牛\"\n\tZodiacTiger   = \"虎\"\n\tZodiacRabbit  = \"兔\"\n\tZodiacDragon  = \"龙\"\n\tZodiacSnake   = \"蛇\"\n\tZodiacHorse   = \"马\"\n\tZodiacSheep   = \"羊\"\n\tZodiacMonkey  = \"猴\"\n\tZodiacChicken = \"鸡\"\n\tZodiacDog     = \"狗\"\n\tZodiacPig     = \"猪\"\n)\n\n// Zodiac 生肖\ntype Zodiac struct {\n\tName      string\n\tXi        string // 喜\n\tXiRadical string\n\tJi        string // 忌\n\tJiRadical string\n}\n\nvar zodiacList = map[string]Zodiac{\n\tZodiacRat: {\n\t\tName: ZodiacRat,\n\t\tJi:   `丁丛东为义书二亚亞亭亮人亿仁仃仅仇今介仍从仑仕付仙仟代以仪仰仲仳仵件价任份企伂伊伍休优伙会伟传伦伫伯估伴伶伸伺似但佇佈位低住佐佑何余佛作佟佣佩佯佰佳佶佼佾使侄來例侍侑侖供依侠侦侨侬侯係促俊俋俐俗保俞俟俠信俩俭修俱俸俾倆倍倏倖候倚倡倢倨倩倪倫值偃偅假偈偉偌做停健偩偮偵偶偿傅傌傑備傢傧储傭傲傳僅僇像僑僧僵價僾儀儂億儆儉儌儐儒償優儲光免兔全养冕冤冯冻凍刘劉勉勗化午卖南卧卯印卿叢台合吗味命哇唱善喜嗎嚥在圭地场址均坊坍坎块坚坛坜坝坞坠坡坦坪坵垄型垒垠垢垣垦垫埂埃城埒埔埕域埠執基堅堆堡堤堪堯堰報場堵塊塌塑塔塗塘塚塢填境墅墉墊墜增墟墡墩墾壁壅壇壎壑壕壘壟壢壤壩士壮壯壽备复夭央妃妈妹姜姬姿娅娩婚婭媄媽嬉孔孝宋宣宰寺寿封尧岱嶪巫差巴平幸庠张張彻徉律徐得從復微徵德徹志恙悠悻惊意慢执扬抑报拒挽提揚攸教日旦旨早旬旭时旺旻昀昂昆昇昊昌明昏易昙星映春昧昭是昱昶晁時晃晉晋晏晓晖晚晟晤普景晰晴晶智暄暉暖暗暮曆曇曉曙曜曝曦書曹曼曾會未朴杜来杨杩杰東杵柏柠柯柳柴样桓棚楊楠楼榪榴槽樓樣檸次欢欤欧欲欷欸款歇歌歐歟歡氧汀沫洋涂渼漫漾潛潜澲火灿炅炎炫炬炯炳炷為炽烈烊烨烯焉焕焯焰然煜煥照熊熙熹熾燁燕營燦燨牺犧珋珠瓷留监監祀祥禡竹笃篤糕紅綻繒繕繨红绽缮缯署罵羊美羔羕羚羟羡羢群羥羨義羬羯羱羲羶羹翔耀耵耿聊肖肯胡脩腾膳臣臥臺苎苣苧英茆茉荷莘莫菟营蓦蓨薑薘蝴行袁袂袋訂許詳諮議订议许详谘貸賣贷赤赫距路輓輝辉辛辜辞辭达迈迎运进远连迪选造逢連進逸運道達遠選邁邓那邦邬邱邹邺郁郎郑郝都鄒鄔鄧鄭鄯鄴酊酒醒釘鉀鉚鋅鍚鎂鎦鑑钉钾铆锌镁镏阳陈陳陽集鞑韃頂題顶题養香馬馮馳馴駁駐駒駕駛駟駱駿騁騎騏騫騮騰驀驅驊驕驗驚驛驞驟驥驪马驯驰驱驳驶驷驹驻驾驿骂骄骅骆骊骋验骏骐骑骝骞骤骥魯鮭鮮鲁鲑鲜鵬鹏`,\n\t},\n\tZodiacCow: {\n\t\tName: ZodiacCow,\n\t\tJi:   `丁丙业丛丝丬主义习书些亭人亿什仁仃仅仇今介仑仕付仙仟代令以仪仰仲仳仵件价任份企伂伊伍休优伙会伟传伦伫伯估伴伶伸伺似但佇佈佌位低住佐佑佔何余佛作佟佣佩佯佰佳佶佼佾使侄來例侍侑侖供依侦侨侬侯係促俊俋俐俗保俟信俩俪俭修俱俸俾倆倍倏倖候倚倡倢倧倨倩倪倫值偃偅假偈偉偌做停健偩偮偵偶偿傅傌傑備傢傧储傭傲傳僅僇像僑僧僵價僾儀儂億儆儉儌儐儒償優儲儷光全养冈冯准刀刊刑划列刘则刚创初判別别到制刷券刻剀剂則剋前剑剛剧副剴創劃劇劉劍劑劝功加务动励劳势勇動勗勘務勝勞勢勤勵勸匕化午协卓協南占卧县叢古召叱合吗君吟呀味命唬唱善嗎嗣嚥国國场坎坏堤報場增墡壞备夏大天夭央奂奈奎奐奖妈妹姜姝娥婚媄媽嬉它宇宗审宣宰寥審将將岡岱岳峰峻崇崙崟嵘嶪嶸巫差希干年幸庄庇应庠廖式弗弟弥弦弭弯彌彎形彤彥彦彩彪彫彬彭彰影徉御德心必忆忌忍志忙忠快念忻忽怀态怎怔怕怖怜思怡急性怨怪总恃恆恋恐恕恙恢恣恩恬恰恳悄悅悉悍悔悖悟悠悦悬悲悸悻悽情惊惜惟惠惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧慄慇慈態慌慍慎慚慢慣慧慨慰慷慾憎憐憤憩憶憾懂懇應懋懷懸懼戀戈戎戏戕或战戡截戰戲戴扆扎托扬报挂指捺掛採提揚摎支攸教斌斤断斯斷旋日旦旨早旭时旺旻昀昂昆昇昊昌明昏易昕昙星映春昧昭是昱昶晁時晃晉晋晏晒晓晖晚晟晤晨普景晰晴晶智暄暉暖暗暢暮曆曇曉曙曜曝曦曬書曹曼曾會月有朋服朔朗望朝期朧未末朱杆杉来杨杩杰杵枝架柏柔柠柰栈栩样格桨桿梧棉棕棧棹椅楊楠業榪槳槽樣樱檸櫻欢欣欤欧欲欷欸款歇歌歐歟歡此比氧汀沫洋洧浅淺渼湾準漫漻漾潛潜澎澲灣炅炘炽烊烯照熾燕燨爱爿牆片版牋牌牍牒牘牙牺犧状狀獎玉王玕玖玛玟玡玥玨玫玮环现玲玳玺玼珀珊珍珏珑珖珠班珮珺現琁球琅理琉琏琐琥琦琨琪琮琯琳琴琼瑋瑙瑚瑛瑜瑞瑟瑣瑤瑩瑪瑰瑶璀璃璇璉璋璎璞璧璨環璽璿瓊瓏瓔甯畅番疆直矇矛矜矞矢知矩矫短矯碧示礼礽社祀祁祅祇祈祉祐祕祖祜祝神祟祠祥祭祯祷祸祺祿禁禄禅禍禎福禡禦禧禪禮禱禳秘穿竹笃篤米粽糕系糾紀紂約紅紆紇紈紉紋納紐紓純紗紘紙級紛紜素紡索紧紫紮細紳紵紹紼紾終絃組結絕絜絡絢給絨絪絮統絲絹絻綏經綖綜綠綢綦綪綬維綰綱網綴綵綸綺綻綽綾綿緁緆緇緊緋緒緗緘緞締緣編緩緬緯緲練緹緻縈縉縑縕縝縣縱縴縵縷總績繆繒織繕繚繞繡繨繩繪繫繯繳繹繼繽繾續纏纓纖纘纜纠纡红纣纤纥约级纨纪纫纬纭纯纱纲纳纵纶纷纸纹纺纽纾练组绅细织终绋绍绎经绒结绕绘给绚络绝统绢绣绥继绩绪绫续绮绯绰绳维绵绶绸综绽绾绿缀缁缃缄缅缆缇缈缎缓缔缕编缘缙缜缠缣缤缦缨缪缭缮缯缱缳缴缵网罕署罵羊美羔羕羚羟羡羢群羥羨義羬羯羱羲羶羹羿翁翎習翔翕翩翼耀耵耿聆肯育胖胜胞胡胤胥胧胭胶能脈脉脩腾膠膳臆臥臧芯苎苓苧茅茉莊莘莫莹萦蒋蓦蓨蔣蕙蕥薑薘藏蟉行衣补表衫衬衽衾衿袂袋袍袒袖袗被裁裂装裆裕裘裙補裝裟裤裱裴裸製複褊褋褌褐褓褙褚褛褪褫褲褸襁襟襠襯襴視视訂託許診試詳識議订议许识诊试详責貸費質责质贷费赤赫赶趕路躬軫輝轸辉辛辜辞辭达達邪邺郁郝郡鄢鄯鄴酊醒采釘鉀鋅錼鍚鎂鑫钉钾锌镁阳陀际陇陈陳陽際隴集雉零青鞑韃頂須題顏顶须题颜養馬馮馳馴駁駐駒駕駛駟駱駿騁騎騏騫騰驀驅驊驕驗驚驛驞驟驤驥驪马驯驰驱驳驶驷驹驻驾驿骂骄骅骆骊骋验骏骐骑骞骤骥骧魠魯鮮鲁鲜鷚鷸鹨鹬齒齡齿龄`,\n\t},\n\tZodiacTiger: {\n\t\tName: ZodiacTiger,\n\t\tJi:   `一万三严丰临之乏乔乡书二亚亞亨享亭亮人亿仁仅仇今介仍从仑仓仕仗付仙仟代以仪仰仲仳仵件价任份企伂伊伍休优伙会伟传伦伯估伴伶伸伺似佃但佈位低住佐佑何余佛作佟佣佩佰佳佶佼佾使侄來例侍侏侑侖侗供依侠侣侦侨侬侯侶係促俊俋俏俐俗保俞俟俠信俦俩俪俭修俱俸俾倆倉倍倏候倚倡倢倧倨倩倪倫值偃偅假偈偉偌做健偩偮偵偶偿傅傌傑備傢傧储傭傲傳僅僇僎像僑僧僵價僾儀儂億儆儉儌儐儒儔償優儲儷兄光克全兰关兹冉再冏农几凡凤凯凰凱加勗募包化区區华单卖卢卧危卷叠口古句另只召可台史右叶号司各合吉同名后向吕吟含启吳吴吾呂呈告员周味呻命和咕咖咨咸品哈哑員哥哲唐唤售唯唱商啞啟啤善喉喚喜喧喬單嗣嘉嘱器嚥嚴囑回因团园固国图國園圖團圮场坚坤埏堂堅堠堤場增士壹壽处备复夢夭央奈如妃委姬姿娅娇娟婉婚婭媛媴嬌存孙季孫宗宛客宣宸容宾富寿小少尖尚尤尼尾屯岱崇川巡巫已巷巽帆幅幕平庄庭庸延廷建开异弓引弗弘弟张弥弦弭弯弱張強强弼彌彎当彪彭彷役彻往律徐徕得從徠御復循微徵德徹思悠慕慢懂战戰扬拒招挡捐捺提揚搭撰擋攸敦日旦旨早旭时旺旻昀昂昆昇昊昌明昏易昙星映春昧昭是昱昶显晁時晃晉晋晏晒晓晔晖晚晟晤晨普景晰晴晶智暄暉暖暗暢暮暹曄曆曇曉曙曜曝曦曬書曹曼曾替會朵杏来杨杰柏柯柰桐档桥桦梁梦棕棻楊榬槽樺橋檔次欢欤欧欲欷欸款歇歌歐歟歡毕民氾汎沣河治泓泛泡涎渭游湾溒溶漠漫潘潛潜澎灃灣炅炬炯烯照熔熙猿珅琬瑛瓷生甫田由甲申男甸町畅界畏畔留畢略畦番異畴當畸疆疇疊皮皱皺益监監盧知砷示礼礽社祀祁祅祇祈祉祐祕祖祜祝神祟祠祥祭祯祷祸祺祿禁禄禅禍禎福禦禧禪禮禱禳禹禾秀私秉秋种科秒秘租秦秩积称移稀稅程稍税稚稜種稱稳稷稹稼稽稿穆積穗穠穩穫竖米类粟粮粽精糕糖糧素細紳紹結給綜繒绅细绍结给综缯署羡羨耀胡脩臣臥臨臺臻艺艾芃芊芙芝芬芮花芳芷芸芹苍苏苑苒苓苔苗苣若苯英苹苻茂范茉茗茜茱茲茵茶茹荀荃荆草荊荏荐荞荡荷荻莅莆莉莊莎莒莓莘莞莩莫莱莲菁菇菊菖菩華菱菲菽萊萌萍萝萤萧萨萬萱萲落葉著葛董葵蒂蒋蒙蒞蒨蒲蒼蓁蓄蓉蓓蓝蓟蓦蓨蓬蓮蔓蔘蔚蔡蔣蔽蕃蕉蕎蕩蕭蕴薆薇薊薑薛薦薩薪薰薹藉藍藏藝藤藩藻蘇蘊蘋蘩蘭蘴蘿虎虔處虚虛號虫虹蛇蛉蛟蛮蛻蜀蜂蜒蜕蜜蜻蝉蝴蝶螈融螢蟬蠻袁袋袍袖襄視视訊誕誘諮諷謂譁譔讯讽诞诱谓谘谷豆豎豐貝貞財貢責貴貸費貿賀資賈賓賜賢賣賦賴贊贝贞贡财责贤贵贷贸费贺贾资赋赐赖赞起超距躬輝轅辉辕辰農边达迁迅过迈迎运近还进远违连迟迦迪述迷迺送适选逊逑递途逖通速造逢連週進逵逸逻遁遊運過道達違遙遜遞遠遣遥適遲遷選邀邁還邈邊邏邑邓邝邢那邦邬邱邵邹郁郎郝郭都鄉鄒鄔鄞鄧鄺酒酥醒鈿鉀鉅錼鍚鎔鎱鏵鑑钜钾钿铧門閃開閎閑間閔閨閩闆闕關门闪闲闳间闵闺闽阙阳际陈陳陽際靡頁頂項順須頌預頗頡頤題顏顛類顧顯页顶项顺须顾颂预颇颉颐题颜颠風风饌馔香驀驊骅高魯鲁鳳鳴鵑鸣鹃麥麦麵黃黄黍黎鼓龍龙`,\n\t},\n\tZodiacRabbit: {\n\t\tName: ZodiacRabbit,\n\t\tJi:   `主丽乌习书买乾人亿仁仅仇今介仑仕付仙仟代令以仪仰仲仳仵件价任份企伂伊伍休优伙会伟传伥伦伯估伴伶伸伺似但佈位低住佐佑何余佛作佟佣佩佰佳佶佼佾使侄來例侍侑侖供依侠侦侨侬侯係促俊俋俐俗保俟俠信俩俪俭修俱俸俾倀倆倍倏候倚倡倢倨倩倪倫值偃偅假偈偉偌做健偩偮偵偶偿傅傌傑備傢傧储傭傲傳僅僇像僑僧僵價僾儀儂億儆儉儌儐儒償優儲儷光全农冠凤凰勗勝化医卖卧双君命咙唬唱嘱嚁嚥嚨囑场坏堤場增壞备大天太夭头婚婴媜嬰存宇安宝实宣宪宸宾寥實寶尤就山岗岱崔崗崷嵺嶍巫帐帝帳庆应庞廖张張录彪心必忆忌忍志忙忠快念忻忽怀态怅怎怔怕怖怜思怡急性怨怪恃恆恋恐恕恢恣恩恬恭息恰恳悄悅悉悍悒悔悖悟悠悦悬悲悵悸悽情惜惟惠惢惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧愫愿慄慇慈態慌慍慎慕慚慢慣慧慨慰慶慷慾憀憎憐憤憩憲憶憾懂懇應懋懷懸懼懿戀扬振提揚摎攸日旦旨早旬旭时旺旻昀昂昆昇昊昌明昏易昙星映春昧昭是昱显晁時晃晉晋晏晒晓晖晚晟晤晨普景晰晴晶智暄暉暑暖暗暢暮曆曇曉曙曜曝曦曬書曹曼曾會有朔望朝期朧来杨杰柏栖栩桢楊楨槢槽樛欢欤欧欲欷欸款歇歐歙歟歡氏民泷浓涨漉漫漲漻潁潛潜濃瀚瀧炅烏烯照煪熠熤燿爱玉王玖玛玥玫玮环现玲玺珀珊珍珑珝珠班珮珺現球琅理琉琏琐琦琨琪琳琴琼瑋瑙瑚瑛瑜瑞瑟瑣瑤瑩瑪瑰瑶璀璃璇璉璋璎璞璧璨環璽璿瓊瓏瓔甯畅矇碧祀祯禎秘稚穎穠笼簏籠素績繆繒纓纖纤绩缨缪缯署羽羿翁翃翅翊翌翎習翔翕翘翟翠翡翦翮翰翱翳翹翻翼耀聆肯育胖胜胞胡胤胥胧胭胶能脈脉脩腾膠膳臆臥苓苹莫莹莺蓨蔍蕙薑藋蘋袋袖袭裴褶襲西要覃詡譾诩谫豂貝貞財責貴買貸費貽賀賂賄資賈賓賜賠賣質賴賺購賽贝贞财责质购贵贷费贺贻贾贿赂资赐赔赖赚赛趯跃蹟躍輝轆轇辉辘辰農遒遗遺邬郁郑郦鄔鄭酈酉酊酋配酒酗酥酪酬醇醋醍醐醑醒醫醮金釧鈞鈴鉀鉻銀銮銳鋒鋹鋼錄錢錦錯鍊鍚鍵鎮鏡鐘鐵鑑鑽鑾钏钟钢钧钱钾铁铃铬银锋锐错锦键镇镜長长阳陇陽隴雀雄集雙零震青韔順領頤頭題顏願顟顧顯顺顾领颍颐颖题颜飂飛飞駐騛騰驻魯鲁鳥鳳鳴鴒鴗鴛鴦鴻鴿鵑鵠鵡鵬鵰鵲鶖鶧鶯鶴鶼鷚鷥鷲鷸鷹鷺鸐鸕鸚鸝鸞鸟鸣鸬鸯鸳鸶鸽鸾鸿鹂鹃鹄鹉鹊鹏鹣鹤鹦鹨鹫鹬鹭鹰鹿麒麓麗麝麟齡龄龍龐龔龙龚`,\n\t},\n\tZodiacDragon: {\n\t\tName: ZodiacDragon,\n\t\tJi:   `万专东严丬丰临义乔乡二亚些亞亭亮人亿什仁仅仇介仑仕付仙仟代令以仪仰仲仳仵件价任份企伂伊伍休优伙伟传伦伯估伴伶伸伺似佃但佈佌位低住佐佑佔何余佛作佟佣佩佰佳佶佼佾使侄來例侍侑侖供依侦侨侬侯係促俊俋俐俗保俟信俩俪俭修俱俸俾倆倍倏候倚倢倨倩倪倫值偃偅假偈偉偌偏做健偩偮偵偶偿傅傌傑備傢傧储傭傮傲傳僅僇像僑僧僵價僾儀儂億儆儉儌儐儒償優儲儷允元兄充先克免兔兢全兰关兹养兽冈冉冊册再冏冕农冤冻准凍减刀刊刑划列刘则刚创删判別利刪别到制刷券刻剀剂則剋前剑剛剧副剴創劃劇劉劍劑劝功加务动助励劳势勇勉動勘務勞募勢勤勵勸匕化匠匡匮匯匱匹区匿區卉华协卓協单卖博占卢卧卯印卿厂厅厢厦厨叠口古句另召可台叱史右叶号司各合吉同名后向吕吟吠含启吳吴吾呀呂呈告员周味命和咕咖咨咸品哈員哥哭哲唐唤售唯唱商問啟啤善喚喜喧喬單嗣嘈嘉嘱器嚴囑回因团园国图圃國園圖團坏坚城埔域堂堅塞壞士壮壯壹壽处备夢夭央奇奖如姍委姗姜姬姿威娅娇娟娩婭嬌孱宁它宅安宋完宏宓官宙宛宜宝实宠审客宣室宥宪宫宬宮宰宴家宸容宽宾宿寂寄寅密寇富寓寞察寥實寧審寬寰寵寶寻寿專尋小少尖尚尤就尼尾局层居屆屈届屋屏属屠屡屢屣層履屬屯山屹岌岑岗岚岛岡岩岭岱岳岷岸峋峒峙峡峦峨峰島峸峻峽崆崇崑崔崗崙崧崴嵐嵘嵩嶸嶺嶽巍巒巖川州巡巢工巧巫巳巴巷巽席幅幕干平广庄庆庇序库应底庖店庙庚府庞度座庫庭庵庶康庸廂廈廉廊廓廕廖廚廟廠廣廩廪廳延廷建开异式弓引弗弘弟张弥弦弭弯弱張強强弼彌彎当彗彧彪彭心必忆忌忍志忙忠快念忻忽怀态怎怔怕怖怜思怡急性怨怪恃恆恋恐恕恢恣恩恬息恰恳悄悅悉悍悔悖悟悠悦悬悲悶悸悽情惊惑惜惟惠惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧慄慇慈態慌慍慎慕慚慢慣慧慨慰慶慷慾憎憐憤憩憲憶憾懂懇應懋懷懸懼懿戀戈戊戌戍戎戏成戕或战戡截戫戰戲戴戶户房所扁扈扉托抑拒招指挡挽捐捨搭擋支攸敦斌斤断斯新斷旨旮昂春昭晚晟暮曲曹服朗朧木朴权杆杏杜束来杰東松林枝柔柯柳柴柵栅栏桐桓档桥桦桨桿梁梦棚棫棻楚楼榕榴槳槽樓樺橋檔欄權次欢欣欤欧欲欷欸款歇歌歐歟歡此武比毕毧汇沣沪河治泓洞洲浅浔浦涛润淢淺減渭湾準滅滬演漕漠潘潤潯潺澎澜濤瀾灃灣灭炘炯炽然照熔熙熾燃爱爿牆片版牋牌牍牒牘牙牢犀犬状犹狀狂狄狐狗狘狨狩独狮狱猎猛猜猭献猴猶猷猿獂獄獅獎獨獲獵獸獻玕玡玮玼珊珋瑊瑋瑛瓷甫甯田由甲男甸界畎畏畔留畢略異畴當畸疆疇疊益监盛監盧直相矇矛矜矞矢知矩矫短矯礼禅福禪禮禾秀私秉秋种科秒秘租秦秩积称移稀稅程稍税稚稜稢種稱稳稷稹稼稽稿穆積穗穩穫穴究穷空穿突窃窈窍窑窕窗窘窜窟窥窦窮窯窺竄竅竇竊竖竿符箴篇米类粟粮精糊糕糖糟糧細紹結給絨編織纖纤细织绍绒结给编罔罕羊美羚羡羢群羨義羬羲翩聊聞聿肇肖肩胖胞胡胤胥胧胭胶能脈脉脩脯膠膳膺臆臣臥臧臨臺臻舍舒舖艮良艰艱艺艾芃芊芙芝芬花芳芸芽苍苏苑苓苔苗苣若苯英苹苻茂范茅茆茉茙茲茵茶茹荀荆草荊荏荐荞荡荷荻莅莆莉莊莎莒莓莘莞莩莫莱莲获莸菁菇菊菟菩華菱菲萊萌萍萝萤萧萬萱萲落葉葛董葴葵蒂蒋蒙蒞蒲蒼蓁蓄蓉蓓蓝蓦蓨蓬蓮蔓蔘蔚蔡蔣蔽蕃蕉蕊蕎蕕蕙蕥蕩蕭蕴薆薇薑薦薪薰藉藍藏藝藤藩藻蘇蘊蘋蘩蘭蘴蘿虎虔處號虹蜀蜜蝉蝴蝶融螢蟬袋装裕裝襄託試誘誠諮諴謂譁識识试诚诱谓谘谷豆豊豎豐豪貸費資賓賢賣質賽贤质贷费资赛赶超越趕距躬輓輔辅農达迁迈迎运近还进远连迪迷选通造逢連進逵逸運遍道達遠遭遷選邁還邑邓邝邢那邦邪邰邱邵郁郎郑郕郭都鄉鄧鄭鄺酥醴鈿鉀鉅鉚鉞銅鋸鍼鎔鎦鏵鑑钜钺钾钿铆铜铧锯镏門開閎閔閣閨閩閱闆闈闊闕闖關闡闢门问闯闱闳闵闷闺闻闽阁阅阐阔阙陀陇陈陳隇隴雉雪靡頤類颐養馗駥騙騮驀驊驚骅骗骝高魠鳴鷢鷸鷹鸣鹬鹰麥麦麵黃黄黍黎默鼓齒齡齿龄龐`,\n\t},\n\tZodiacSnake: {\n\t\tName: ZodiacSnake,\n\t\tJi:   `万丘丞丬丰久乏书争亏些亥亮人亿什仁仅仇今介仍仑仓仕付仙仟代令以仪仰仲仳仵件价任份企伂伊伍休伕众优伙会伟传伦伯估伴伶伸伺似但佈佌位低住佐佑佔何佘余佛作佟佣佩佰佳佶佼佾使侄來例侍侑侖供依侠侦侨侬侯係促俊俋俏俐俗保俟俠信俩俪俭修俱俸俾倆倉倍倏候倚倡倢倨倩倪倫值偃偅假偈偉偌做健偩偮偵偶偿傅傌傑備傢傧储催傭傲傳僅僇像僑僧僵價僾儀儂億儆儉儌儐儒償優儲儷允光入全公兰兹冈冰冲决况冷冻准凉凌凍几凯凱函刀刊刑划列刘则刚创判別利别到制刷券刻剀剂則剋前剑剛剧副剴創劃劇劉劍劑劝功加务动励劳势動勗勘務勞募勢勤勳勵勸匕化北匯卉华协卓協占卢卧卿参參又及友双叔取受变叛召叱号呀命和咳唬唱嚎场堤場塗增壕壮壯壹处备外多够夠夢夥夭央奖委威婚嫁子孔存孙孝孟季孩孫它宣家寅密将將少尔山岂岑岗岚岛岡岩岭岱岳岸峥峰島峻崇崔崖崗崙崢崧嵐嵘嵩嶸嶺嶽巖巫幏幕干平幹幼幾广庄庇廊廣式引弟弥弦弭弱弼彌录彗彪彭悠愛慕慢慮懂戈戎戏戕或戡截戲戴托扬承披拯指挣据掙提揚搋摧據支收攸改攻救敝敢散数數文斤断斯新斷日旦旨早旬旭时旺旻昀昂昆昇昊昌明昏易昕昙星映春昧昭是昱昶昺晁時晃晉晋晏晒晓晔晖晚晟晤普景晰晴晶智暄暉暖暗暢暮暴曄曆曇曉曙曜曦曬書曹曼曾會朦机杆来杨杰杶枝柏染柔树核根桑桨桿梁梦棻楊槳槽樹機橡檖檬次欢欣欤欧欲欷欸款歇歌歐歟歡此步毅比水永氾求汇汉汎汐汝江池汤汪汯汰汲汴汹決沂沅沈沉沍沐沖沙沛沣沥沧沪河沸油治沼沿況泉泊泓法泛泞泠波注泰泳泽洁洋洗洛洞津洪洲洳洵洶洸洺活洽派流浅浈浊济浒浓浙浚浤浦浩浪浮海浸涂涅消涌涛涟涣涤润涨液涵涼淀淇淋淑淙淞淡淥淦淨淩深淳淵混淺添淼清渊渌渙渡渤温港渱游渺渼湃湄湖湛湞湟湧湯湾湿溎源準溥溪溫溱溶滄滋滌滔滚满滥滨滬滸滾滿漂漆漓演漠漢漣漪漫漲漳潔潘潛潜潢潤潭潮澄澎澤澱澲激濁濃濈濕濘濟濠濡濤濫濬濯濱瀚瀝瀰瀴灃灏灝灣炅炉炖炽烯照熾燉燧爐爭爱父爽爾爿牆片版牋牌牒牟状狀猪猭献獎獻玕玡玼球琅琉琥瑑瑛瑯璲畅皓皮益盧直眾睁睜矛矜矞矢矣知矩矫短矯祀祿禄禠禭禹禾秀私秉秋种科秒秘租秦秩积称移稀稅程稍税稚稜種稱稷稹稻稼稽稿穆積穗穟穠穿立竖端竿笋筍筝箏範篆籙米粉粟粮粲精糕糖糠糧紘級素紫絃絨綱緣繒織纂级纲织绒缘缯罕署羡羨耀聚肤能脩膚臥臧臻艮良艰艱艺艾芃芊芋芙芝芥芦芬芮花芷芸芽苏苑苒苓苔苯英苹苻苾茂范茅茉茗茲茶茹荀荃荆草荊荏荞荡荷荻莅莆莉莊莎莒莓莘莞莩莫菇菊華菱菲萌萍萝萧萬萱萲落葛董葵蒂蒋蒙蒞蒨蒲蓓蓝蓦蓨蓫蓬蔓蔘蔚蔡蔣蔽蕉蕎蕓蕥蕩蕭蕴薰藉藍藏藝藤藩蘆蘇蘊蘋蘩蘭蘴蘿虎虑虔處虚虛虞號虢虧蝝袋袖被装裘裝製襐託註試該誘諍變试诤该诱豆豈豎豐豚象豢豥豪豫豬貸質质贷赶趕躬輝辉迷逐逑递遂遇遊遞遯遽邃邪邱郎酒酥鈍鉀銀鋐鋼錄錚鍚鎵鏵鐌鐩钝钢钾铧铮银镓閎闊闳阔阳陀陟陽隧隶隸雉雙雯頓題顱顿颅题風风香驀骸魠魯鲁鴻鷸鸿鹬麥麦黃黄黍黎黑鼓齒齡齿龄`,\n\t},\n\tZodiacHorse: {\n\t\tName: ZodiacHorse,\n\t\tJi:   `一丑丞严临乃乔书乳予二亚亞产享仁从仔仿伙会佃但倡允公其冀冈冉再冬冰冲决况冷冻准凉凌凍凑几函勃勗勝北匯单卖厚参參又及友双叔取受变叛叠台后吕启呂告咏咖咭品哈哥唱啟喜喬單嘉嘻器嚥嚴场坏坚堅堤場塗增墩壞壮壯壽复夕外多够夠夥好妙妞姓姬姿娅娸婚婭子孔孕字存孙孚孛孜孝孟季孤学孪孫孰孳學孺孿宁宣宥宪富寧寿尊少尔山岌岗岡岭岳岷峒峡峥峭峻峽崇崎崑崗崙崢崧嵩嶺嶽巍幅平年幼幾庆应庸异当录彷役彻彼往征很律後徐徒得從御復循微徵德徹心必忆忌忍志忙忠快念忻忽怀态怎怔怕怖怜思怡急性怨怪恃恆恋恐恕恢恣恩恬恭息恰恳悄悅悉悍悔悖悟悠悦悬悲悸悽情惇惜惟惠惢惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧慄慇慈態慌慍慎慕慚慢慣慧慨慰慶慷慾憎憐憤憩憲憶憾懂懇應懋懷懸懼戀战戰扬扭承抒披拒拯挡提揚擋收改攻救教敝敢散敦数數文日旦旨早旭时旺旻昀昂昆昇昊昌明昏易昙星映春昧昭是昶晁時晃晉晋晏晒晓晖晚晤普景晰晴晶智暄暉暖暗暢暮暴曆曇曉曙曜曝曦曬書曹曼曾會月有朋服朔望朝期朧机李杨柏染柵栅桑档棋椅楊槽機檔次步毕水永氾汀求汇汉汎汐汕汛汝江池汤汪汯汰汲汴汶汹決汽汾沂沅沈沉沍沐沖沙沛沥沧沪河沸油治沼沿況泉泊泓法泛泞泠波注泰泳泽洁洋洗洛津洪洲洳洵洶洺活洽派流浅浈浊济浒浓浙浚浡浤浦浩浪浮海浸涂涅消涌涛涟涣涤润涨液涵涼淀淇淋淑淙淞淡淥淦淨淩淮深淳淵混淺添淼清渊渌渙渡渤温渭港渱游渺渼湃湄湊湖湘湛湞湟湣湧湯湾湿溎源準溥溪溫溱溶滄滋滌滔滚满滤滥滨滬滸滾滿漂漆漓演漢漣漪漫漲漳潔潘潛潜潢潤潭潮澄澎澤澱澲澳激濁濃濈濕濘濟濠濡濤濫濬濯濱濾瀑瀚瀝瀰瀴灏灝灣炅烯煦照燕爱父爽爾牛牟牡牢牧物牲牴牵特牽犀犁犊犒犢玥环球琉琦琪環瓷生產甥甫甯田由甲男甸町画畅界畏畔留畛畢略畫異畴當畸畿疆疇疊皓皮监監眸矇矣碁祀祺福禦禹私秘竑範籐籙米籽粉粒粥粲粹精糠紐紘級細絃繒纂纖纤级纽细缯署羞羡羨翃肯育背胖胜胞胡胤胥胧胭胶能脈脉腾膠膳臆臨臺艾苣范荡莅莎莫蒞蓄蕙蕩薇薑藤藩袋袖被裘註詠誌誥諄諮謂變诰谆谓谘賣距迟逑造遇遊遲郁郜郭酒醇醒醜釐鈕鈿鉀鉅鋐錄鍚鑑钜钮钾钿閎闊闳阔阳陇陈陟陳陽隆隴隶隸雙雯靠預題预题駐駿騎騏騰驥驻骏骐骑骥魯鲁鴻鵠鸿鹄麵黍黎黑`,\n\t},\n\tZodiacSheep: {\n\t\tName: ZodiacSheep,\n\t\tJi:   `一丑丝丞丬主书乳予二些产享什仁今仔代会伯伶但佌佔作例依係修倡倧光冀冬冰冲决况冶冷冻准凉凌凍凑函刀刊刑划列刘则刚创初判別别到制刷券刻剀剂則剋前剑剛剧副剴創劃劇劉劍劑劝功加务动励劳势勃動勗勘務勝勞勢勤勳勵勸匕北匯十协協卖占厚县古召叱吉君呀告咏唐唬唱嚥国國场坎坏堤場塗增墩壞壮壯壹壽大天太夫央夷夹夾奂奇奈奉奋奎奏奐奕奖套奘奚奮好妞姓姬姿娅婚婭子孔孕字存孙孚孛孜孝孟季孤学孩孪孫孰孳學孺孿它宝审宣宪寥寧審寶寿将將尊崇巨巾市布帅帆师希帛帜帝帥帧師席常幀幟干年幹庄庆庇应康廖式弓弗弟张弥弭弯張彌彎录形彤彥彦彩彪彫彬彭彰影御心必忆忌忍忖志忘忙忠忡快忱念忸忻忽怀态怎怔怕怖怜思怡急性怨怩怪总恂恃恆恋恍恐恕恢恣恩恬恭息恰恳悄悅悉悌悍悒悔悖悟悠悦悬悲悸悽情惇惕惜惟惠惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧愫慄慇慈態慌慍慎慕慚慢慣慧慨慰慶慷慾憎憐憤憩憲憶憾懂懇應懋懷懸懼懿戀戈戌戎戏成戕或战戡截戰戲戴扆扎托扬扭承抒拒拯挂指捺掛採提揚摎支救教敦文斤断斯斷旋日旦旨早旭时旺旻昀昂昆昇昊昌明昏易昕昙星映春昧昭是昶晁時晃晉晋晏晒晓晖晚晤晨普景晰晴晶智暄暉暖暗暢暧暮暴曆曇曉曖曙曜曝曦曬書曹曼曾會有朋服朔朗望朝期朧杆杉李杨枝架柏染柔柰栩桨桿棕椅楊槳槽樱櫻次欣此比水永求汇汉汎汐汕汝江池汤汪汯汰汲汴汶汹決汽沂沅沈沉沍沐沖沙沛沣沥沧沪河沸油治沼沿況泉泊泓法泛泞泠波注泰泳泽洁洋洗洛津洪洲洳洵洶洸洺活洽派流浅浈浊济浒浓浙浡浤浦浩浪浮海浸涂涅消涌涛涟涣涤润涨液涵涼淀淇淋淑淙淞淡淥淦淨淩淮深淳淵混淺添淼清渊渌渙渡渤温港渱游渺渼湃湄湊湖湘湛湞湟湣湧湯湾湿溎源準溥溪溫溱溶滄滋滌滔滕满滤滥滨滬滸滿漂漆漓演漢漣漪漫漲漳漻潔潘潛潜潞潢潤潭潮澄澈澎澤澱澲澳激濁濃濈濕濘濟濠濡濤濫濬濯濱濾瀑瀚瀝瀰瀴灃灏灝灣炅炜炬炽烯煒照熾爱爿牆片版牋牌牍牒牘牙牛牟牡牢牧物牲牴牵特牽犀犁犊犒犢状犹狀狄狐独狮猛献猶猷獅獎獨獲獻玉王玕玖玟玠玡玥玦玨玫玮环现玲玳玺玼珀珅珊珍珏珑珠珣珩班珮珲珺現琁球琅理琇琉琏琐琛琥琦琨琪琬琮琰琳琴琼琿瑄瑋瑗瑙瑚瑛瑜瑞瑟瑣瑤瑩瑯瑰瑶瑾璀璃璇璉璋璎璞璟璧璨環璽璿瓊瓏瓔瓷生產甥甯畅番疆皓皿监監直眸矇矛矜矞矢知矩矫短矯碧示礼礽社祀祁祅祇祈祉祐祓祕祖祚祜祝神祟祠祥祭祯祷祸祺祿禀禁禄禅禍禎福禦禧禪禮禱禳秘稟穎穠穿竿等範籙籽粽糠系糾紀紂約紅紆紇紈紉紋納紐紓純紗紘紙級紛紜素紡索紧紫紮細紳紵紹紼紾終絃組結絕絜絡絢給絨絪絮統絲絹絻綏經綖綜綠綢綦綪綬維綰綱網綴綵綸綺綻綽綾綿緁緆緇緊緋緒緘緞締緣編緩緬緯緲練緻縈縉縑縕縝縣縱縴縵縷總績繆繈繒織繕繚繞繡繩繪繫繳繹繼繽繾續纏纓纖纘纜纠纡红纣纤纥约级纨纪纫纬纭纯纱纲纳纵纶纷纸纹纺纽纾练组绅细织终绋绍绎经绒结绕绘给绚络绝统绢绣绥继绩绪绫续绮绯绰绳维绵绶绸综绽绾绿缀缁缄缅缆缈缎缓缔缕编缘缙缜缠缣缤缦缨缪缭缮缯缱缴缵网罕署美羚羞羡群羨羿翁翎翕翩翼耀聆聪聰股肯育肴背胖胜胞胡胤胥胧胭胶能脈脉脩膠膳臆臧苓苣范茅荡莅莉莊莎莫获莹萦蒋蒞蔣蕙蕥蕩薑藏蟉衣补表衫衬衽衾衿袁袂袋袍袒袖袗被裁裂装裆裕裘裙補裝裟裤裱裴裸製複褊褋褌褐褓褙褚褛褪褫褲褸襁襄襟襠襯襴視视託診註詠試誌誥諄諮識识诊试诰谆谘責費賣質责质费赶趕距躬車軫輝车轸辉辰迟逑造遊遲邪郁郑郜郡郭鄭酉酒醇醒醜采釐金鈕鉀鉅錄錼鍚鑑钜钮钾長长閨闊闺阔阳陀际陇陈陳陽隆際隴隶隸雉零靠須預頤題顏须预颐颖题颜魠魯鲁鴻鵠鷚鷸鸿鹄鹨鹬黍黎黑齒齡齿龄`,\n\t},\n\tZodiacMonkey: {\n\t\tName: ZodiacMonkey,\n\t\tJi:   `丘丬丰争亏些亥什仙众佃佌佔佣例傢催傭像冈冉再准凤凯凱刀刊刑划列刘则刚判別利别到制刷券刻剀剂則剋前剑剛剧副剴劃劇劉劍劑劝功加务动助励劳势勇動勘務勞勢勵勸匕医午卉协卓協单占卢卿叠古召叱号呀和咳唬單嚎嚥场場壕壹处奖委威婚嫁孩它家寅密将將屯山岂岑岗岚岛岡岩岭岱岳岸峥峰島峻崇崔崖崗崙崢崧嵐嵩嶺嶽巖幅幏干平幹幼庄庇庐庸廊廬异式弓引弗弘弟张弥弦弭弯張強强弼彌彎当彗彪彭忻思慢慮戈戎戏戕或战戡截戰戲戴托指挡挣据掙提搋摧擋據支斤断斯斷旨旻昕昙晒晓普晰暮曆曇曉曙曜曝曦曬朗朦杆杶枝柔核档桨桿梁槳槽橡檔檖檬欣此毅比毕沣泓浅浪涌淨淺渭湧準滤演漫潘潛潜澎濠濾灃炅炉炖炘炽烯熾燉燧爐爭爿牆片版牋牌牍牒牘牙状狀狮猪猭献獅獎獻玕玡玼琅琥瑑瑯璲甫田由甲申男甸画界畏畔留畢略番畫異畴當畸疆疇疊皮盂监盘盛盟監盤盧眾睁睜矛矜矞矢矩矫短矯祀福禠禭禾秀私秉秋种科秒秘租秩积称移稀稅程稍税稚稜種稱稳稷稹稻稼稽稿穀積穗穟穩穫穿竖竿筝箏篆米类粉粗粟粮粲粹精糕糖糧素紫細絨綱緣繒織繸纲细织绒缘缯罕署耀肤能膚臧臻艮良艰艱芦芽苏茅莉莊莫莺蒋蒙蓄蓫蔣蕥薑薪藏藩蘆蘇蘴虎虑虔處虚虛虞號虢虧蝝袖装裝製襐襚要覃託試該誘諍謂试诤该诱谓豆豈豎豐豚象豢豥豪豫豬豹貂貌費费赶趕躬近迷逐递遂遞遯遽邃邪邱郎郑鄭配酒酥醒醫金釗釧鈍鈔鈞鈴鈺鈿鉀鉛銀銅銘銳鋒鋼錕錚錢錦錫鍛鍵鍼鍾鎮鎵鏈鏔鏗鏞鏡鏢鐌鐘鐩鐵鐸鑑钊钏钝钞钟钢钧钰钱钾钿铁铃铅铎铜铭铮银链铿锋锐锟锡锦键锺锻镇镓镖镛镜阳陀陈陳陽隧雉静靜靡頓題類顱顿颅题風风駐驻骸魠魯鲁鳳鳴鴛鴻鵬鶯鶴鷸鷹鸚鸞鸣鸳鸾鸿鹏鹤鹦鹬鹰麥麦麵黍黎鼓齒齿`,\n\t},\n\tZodiacChicken: {\n\t\tName: ZodiacChicken,\n\t\tJi:   `一东严丬乔乡书些亥亮人什仇代仰伏会伯伶但佌佔例倡兀允元兄充先克兌免兑兔共兽冕冤冻准凍减刀刊刑划列刘则刚创判別利别到制刷券刻剀剂則剋前剑剛剧副剴創劃劇劉劍劑力劝功加务动助劳势勇勉動勗勘務勝勞勢勤勳勸匕北卉协協占卯印卿友古召叱吕君吠启呀呂咸品哑哥哭唬唱啞啟喜喬嘉器嚥嚴国國场坎坏城域場壞壮壯天太夫央夹夾奂奇奉奋奎奏奐奕奖奚奮威娥娩婚子它宋宏宪宬寧将將岳峸崴嶽帝干幹庄庇应异式弗弘弟弥弦弭弯弼彌彎形彧心必忆忌忍志忙忠快念忸忻忽怀态怎怔怕怖怜思怡急性怨怪恃恆恋恐恕恢恣恩恬恭恰恳悄悅悉悍悒悔悖悟悠悦悬悲悸悽情惇惑惜惟惠惧惭惯想惶愁愃愈愉愍意愚愛感愠愤愧慄慇慈態慌慍慎慚慢慣慧慨慰慷慾憎憐憤憩憲憶憾懂懇應懋懷懸懼懿戀戈戊戍戎戏成戕或战戡截戫戰戲戴手托抑指挽提支文斌斤断斯斷旦旨旭旮时旺旻昀昂昆昇昊昌明昏易昙春昧昭晁時晃晉晋晏晒晓晚晟晤普景晰晶智暄暖暗暢暮曇曉曙曝曦曬書曼曾會月有朋服朔朗望朝期朧木本朴权杆杜杨東松枝柏柔柯柳柴栋桓桨桿棚棟棫楊楼榕榴槳槽樓樱樸櫻權欣此武比毧泓浅浤淢淺清減湖湣湾準滅滕漫潛潜灣灭炅炘炽烘烯然照熾燃爱爿牆片版牋牌牍牒牘牙犬状犹狀狂狄狐狗狘狨狩独狮狱猎猛猜猭献猴猶猷猿獂獄獅獎獨獲獵獸獻玉王玕玖玛玟玡玥玫玮环现玲玳玺玼珀珊珋珍珑珠班珺現琁球琅理琉琏琐琥琦琨琪琰琴琼瑀瑊瑋瑙瑚瑛瑜瑞瑟瑣瑤瑩瑪瑯瑰瑶瑷璀璃璇璉璎璞璦璧璨環璽璿瓊瓏瓔甯申畅畎留異盛直相矇矛矜矞矢知矩矫短矯石碧示祀秋秘稢究穿突竿箴糊系素紫絨綻績繒織繕纖纤织绒绩绽缮缯罕署美羚羢群羬聆聊肖肯育肴胖胜胞胡胤胥胧胭胶能脈脉脩腾膠膳臆臧艾芙芽苓茂茅茆茙茯荻莉莊莫获莸莹菟葴蒋蔣蕕蕙蕥薑藏虔蝴袖装裝製託試誌誠諴識识试诚責費質责质费赶越趕躬輓迎逸邪郁郑郕郡鄉鄭酉配酒醍醒金釗鈞鈴鉀鉚鉞銀銘銳鋒錢鍚鍼鍾鎦鎮鐘鑑钊钟钧钱钺钾铃铆铭银锋锐锺镇镏阳陀陇陽隇隴雄雉雯零青題题馗駐駥騮騰驻骝高魠魯鲁鵬鷢鷸鹏鹬鹹默齒齡齿龄`,\n\t},\n\tZodiacDog: {\n\t\tName: ZodiacDog,\n\t\tJi:   `业丞丬丰丽义之乌九习书买云些什仁从代会伥佃但佌佔例侦侬俪倀倡偵僇儂儷光冉农冰冲决况冷冻准凉凌凍凤函刀刊刑划列刘则刚判別利别到制刷券刻剀剂則剋前剑剛剧副剴劃劇劉劍劑劝功加务动劳势動勗勘務勞勢勤勳勸匕北匯医卉协協单卖博占双叠古召叱呀和咏咙唱單嚁嚥嚨场場塗增壹复头奖妹委婚婪婴媜嬰子季它安宝实宠宸宾寥實寵寶尤就岷崔崷嵺嶍帐帳幅干幹广庄庇庞庸廖廣异式弓引弗弟张弥弭弯張強强弼彌彎当录彭彻律徐得從復微德徹怅恭悵愿慢慷憀戈戎戏戕或战戡截戰戲戴托扬批承把拯指挡振提揚摎擋支救文斤断斯新斷日旦旨早旭时旺旻昀昂昆昇昊昌明昏易昕昙星映春昧昭是昱昶显晁時晃晉晋晏晒晖晚晤晨普景晰晴晶智暄暉暖暗暢暮暴曆曇曙曜曝曦曨曬曰書曹曼曾會朧木本机权杆杉李杏材村杖杜杞束杨杭杳极构枋析枚果枝枫架柏柑染柔柚查柯柱柴柿标栊栋栏树栖栗校栩株样核根格桀桂桃桐桑桓桔桢档桥桨桿梁梅梓梗梧梨梭梵检棉棋棕棘棚棟棨棲棹椅植椰楊楓楨業極楷榈榔榕榛榜榞榴構槐槙槟槢槳槽樑標樛樟模樣横樱樵樹橋橙機橫檀檔檢檳櫂櫚櫳櫻欄權次欣欽歙此比毕氏民水永求汇汉汎汐汝江池汤汪汯汰汲汴汹決沂沅沈沉沍沐沖沙沛沣沥沧沪河沸油治沼沿況泉泊泓法泛泞泠波注泰泳泷泽洁洋洗洛津洪洲洳洵洶洺活洽派流浅浈浊济浒浓浙浤浦浩浪浮海浸涂涅消涌涑涛涟涤润涨液涵涼淀淇淋淑淙淞淡淥淨淩深淳淵混淺添淼渊渌渡渤温渭港渱游渺渼湃湄湖湘湛湞湟湧湯湾湿溎源準溥溪溫溱溶滄滋滌滔满滤滥滨滬滸滿漂漆漉漓演漢漣漪漫漲漳漻潁潔潘潛潜潢潤潭潮澄澎澤澱澲激濁濃濈濕濘濟濠濡濤濫濬濯濱濾瀑瀚瀝瀧瀰瀴灃灏灝灣炅炘炽烏烯煪熊熠熤熾燿爿牆片版牋牌牍牒牘牙状犹狀狄狐独狭狹猛猜猶獎獨玕玡玼珑珝球琳璎瓏瓔甫田由甲申男甸画畅界畏畔留畢略番畫異畴當畸疆疇疊皓益直相真矛矜矞矢矩矫短矯祀祯祿禄禎福禾秀私秉秋种科秒秘租秦秩积称移稀稅程稍税稚稜種稱稳稷稹稼稽稿穆積穎穗穠穩穫穿竖竿笼筛範篩簏籙籠类粟粮精糕糖糠糧紫細絨繆繒纓细绒缨缪缯罕署羡群羨義羽羿翁翃翅翊翌翎習翔翕翘翟翠翡翦翮翰翱翳翹翺翻翼耀胧臧臻芽苏苹范茅茜荡莅莉莊莎莫莺蒋蒞蓄蔍蔣蕥蕩薑薪藋藏藩蘇蘋蘴袖袭装裘裝裴製褶襲託註詠詡試詩誘誼諦謂識譾识试诗诩诱谊谓谛谫豂豆豎豐貝貞財貢貫責貴買費貽貿賀賂賄資賈賓賜賠賢賣賦質賴賺購賽贊贝贞贡财责贤质购贯贵贸费贺贻贾贿赂资赋赐赔赖赚赛赞赶趕趯跃蹟躍躬轆轇辘辰辱農近迷逑遊遒遗遺邪邬郑郦鄔鄭酈酉酊酋配酒酗酥酪酬酷醇醋醐醑醒醫醮醴鈿鉀鋹錄鍚钦钾钿長长闊阔阳陀陇陈陳陽隴隶隸雀雄雅集雉雙雨雲震霖靡韔順領頤頭題顏願類顟顧顯顺顾领颍颐颖题颜飂飛飞香騛魠魯鲁鳥鳳鳴鴒鴗鴛鴦鴻鴿鵑鵝鵠鵡鵬鵰鵲鶖鶧鶯鶴鶼鷚鷥鷲鷸鷹鷺鸐鸕鸚鸝鸞鸟鸣鸬鸯鸳鸶鸽鸾鸿鹂鹃鹄鹅鹉鹊鹏鹣鹤鹦鹨鹫鹬鹭鹰鹿麒麓麗麝麟麥麦麵黃黄黍黎黑鼓齒齡齿龄龍龐龔龕龙龚龛`,\n\t},\n\tZodiacPig: {\n\t\tName:      ZodiacPig,\n\t\tXi:        \"\",\n\t\tXiRadical: \"\",\n\t\tJi:        `一乙几刀力匕三上凡也土大川己已巳干弓之仁什今天太巴引戈支斤日比片牙王爿主乏代刊加功包卉占古召叱央它市布平弘弗旦玉申皮矛矢石示氾光列刑危夷妃州帆式戎早旨旭朵此虫血衣圮托汎伸佔但伯伶别判君呀坎壮希庇廷弟彤形杉系邑礽玖些依例刻券刷到制协卓卷呻坤奇奈宗宛延弦或戕旺易昌昆昂明昀昏昕昊昇枝欣版状直知社祀祁纠初采长忻玕佌旻炘炅罕泓泡泛玫表亮侯係前剋则勇垣奐宣巷帝帅建弭彦春昭映昧是星昱架柏矜祉祈祇禹穿竿紂红纪纫紇约紆羿虹衫风玡玠柰祅紈迅巡芝芽指珊玲珍珀玳倡候修刚奚孙家差席师庭时晋晏晃晁书核栩矩砷祕祐祠祟祖神祝祚纺纱纹素索纯纽级紜纳纸纷翁蚩袁袂衽讯託起躬珅倧扆祜紘紓衿衾邪邦那迎返近范茅苓班琉珮珠乾健凰副务勘曼唱唬婉婚将崇常张强彬彩彫旋晚晤晨曹勗桿烯祥票祭絃统扎绍紼细绅组终羚翌翎聆彪蛉被袒袖袍袋责玼珩埏紵紾袗邵述迦迪能情掛採捺涎浅琅球理现剴创劳喉场堤堠媛嵐巽帧弼彭斯普晰晴晶景智曾棕牌番短结绒绝紫絮丝络给绚絳翕蛟裁裂视诊费贵须邰琁珺牋矞絪絜軫陀郎郁送迷迺莫庄莉提扬琪琳琥琴琦琨勤势园戡暗暉暖暄会杨枫照煜牒祺禄禁经绢绥群蜀蛾蜕蜂裟裙补裘装裕试钾雉零琬琰琝媴絻郡通连速造透逢途準猿瑚瑟瑞瑙瑛瑜署僎划寥廖彰截畅碧禎福祸粽绽綰综绰綾绿紧缀网纲綺绸绵綵纶维绪緇綬臧蜜蜻裳裴裹裸製褚豪宾赶闽溒瑄瑋榬綪緁緆緋綖綦蜒裱魠郭都週逸进慢漫瑶琐玛瑰剧刘剑增审影暮槽桨毅奖莹稼缔练纬緻缄缅编缘缎缓緲緹翩蝴蝶褐复褓褊诞赏质辉驻鲁齿摎漻褌褋褙陈乡运游道达违遁撰潜澎璋璃瑾璀剂勋战历晓曇炽御縑縈县縝縉萤融褪裤褫讽醒骇璇璉縕螈錼阳邹远逊遣遥递蒋璟璞励弥戏戴曙墙矫禧禪绩繆缕总纵縴縵翼襄褸辕鍚鄔蟉襁适迁环璦璨断曜璧织缮绕繚绣繒蝉顏题蕥鎱际郑邓选迟薑璿嚥曝牘璽疆祷繫绎绳绘缴襠襟识赞譔还迈邀藏琼劝曦繽继耀腾龄繾饌邈瓏樱缠续边瓔弯禳衬鷚晒缨纤襴鷸蛮纘逻湾缆驪別壯協狀糾長則帥彥紅紀紉約風剛孫師時晉書紡紗紋純紐級納紙紛訊務將張強統紮紹細紳組終責淺現創勞場幀結絨絕絲絡給絢視診費貴須莊揚勢園會楊楓祿經絹綏蛻補裝試鉀連劃暢禍綻綜綽綠緊綴網綱綢綿綸維緒賓趕閩進瑤瑣瑪劇劉劍審槳獎瑩締練緯緘緬編緣緞緩複誕賞質輝駐魯齒陳鄉運遊達違潛劑勳戰曆曉熾禦縣螢褲諷駭陽鄒遠遜遙遞蔣勵彌戲牆矯績縷總縱轅適遷環斷織繕繞繡蟬題際鄭鄧選遲禱繹繩繪繳識贊還邁瓊勸繼騰齡櫻纏續邊彎襯曬纓纖蠻邏灣纜`,\n\t\tJiRadical: \"\",\n\t},\n}\n\nvar zodiacSupportList = map[string]bool{\n\tZodiacRat:     true,\n\tZodiacCow:     true,\n\tZodiacTiger:   true,\n\tZodiacRabbit:  true,\n\tZodiacDragon:  true,\n\tZodiacSnake:   true,\n\tZodiacHorse:   true,\n\tZodiacSheep:   true,\n\tZodiacMonkey:  true,\n\tZodiacChicken: true,\n\tZodiacDog:     true,\n\tZodiacPig:     true,\n}\n\n// GetZodiac ...\nfunc GetZodiac(c chronos.Calendar) *Zodiac {\n\tz := chronos.GetZodiac(c.Lunar())\n\tb := zodiacSupportList[z]\n\tif !b {\n\t\tfmt.Println(\"[Warning]生肖:\", z, \",该生肖库资料尚未补足\")\n\t}\n\tif v, b := zodiacList[z]; b {\n\t\treturn &v\n\t}\n\treturn nil\n}\n\nfunc (z *Zodiac) zodiacJi(character *Character) int {\n\tif strings.IndexRune(z.Ji, []rune(character.Ch)[0]) != -1 {\n\t\treturn -3\n\t}\n\treturn 0\n}\n\nfunc filterZodiac(c chronos.Calendar, chars ...*Character) bool {\n\treturn GetZodiac(c).PointCheck(3, chars...)\n}\n\n// PointCheck 检查point\nfunc (z *Zodiac) PointCheck(limit int, chars ...*Character) bool {\n\tfor _, c := range chars {\n\t\tif z.Point(c) < limit {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\n// Point 喜忌对冲，理论上喜忌都有的话，最好不要选给1，忌给0，喜给5，都没有给3\nfunc (z *Zodiac) Point(character *Character) int {\n\tdp := 3\n\tdp += z.zodiacJi(character)\n\tdp += z.zodiacXi(character)\n\treturn dp\n}\n\nfunc (z *Zodiac) zodiacXi(character *Character) int {\n\tif strings.IndexRune(z.Xi, []rune(character.Ch)[0]) != -1 {\n\t\treturn 2\n\t}\n\treturn 0\n}\n"
        }
      ]
    }
  ]
}