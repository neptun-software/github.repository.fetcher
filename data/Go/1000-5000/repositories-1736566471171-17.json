{
  "metadata": {
    "timestamp": 1736566471171,
    "page": 17,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kardianos/govendor",
      "stars": 4928,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.349609375,
          "content": "language: go\ngo:\n- 1.8.x\n- 1.9.x\n- 1.11.x\ninstall: \nbefore_deploy:\n- GOOS=linux GOARCH=amd64 go build -o govendor_linux_amd64\n- GOOS=linux GOARCH=386 go build -o govendor_linux_386\n- GOOS=linux GOARCH=arm go build -o govendor_linux_arm\n- GOOS=darwin GOARCH=amd64 go build -o govendor_darwin_amd64\n- GOOS=windows GOARCH=amd64 go build -o govendor_windows_amd64.exe\n- GOOS=windows GOARCH=386 go build -o govendor_windows_386.exe\ndeploy:\n  provider: releases\n  api_key:\n    secure: D4zFkClhHZBIGCWK2WkwKW0cgERHqs8cRjYdgAahEwzPKdXwHBkjsTIg58xU6tnnjNbCydAIw8U1mzJaJx6WioknWJKjnfT1MDiScdf1DFBmop6uuNLpE76PtQ3Au7XEKOKeiOs62OVL6ov2Ah/DEx8hRfilENVidKDnRa2uRw2mKn9rLj4T1zif0VDtgmVS75/IFKh469RYUbsVvvmzJsCbMjYvXo1oJQw1iXfUifX5Fawz7G3xAvYoOLWBc72hTdj8383GYOujnhlsM4paWc2blSJ8ImRim5yOnhB1jg022A49BMpyGJtIdXtXWTpkQ5RdOr4CbzgYJQQEIqkl6GjUcDx78Kxt+FLvl4M2MjJhtTjo0XF/SgI45CP5QMEwpw2tRlFH7slmJWv0cDf/K1o3VkIztlWLR6AwNJlMGy0kAf4K94wUpNZm1Z35fa3w1xV59RdSpS940Pz+bOhpR/vI8KDtGOsUX9asRMgW9aEOv6ak3W7DuEE1+LwYXRunTk/5PcyCbee3qDdFaYxbcBIVBYYKwIlTHC3VG9J6vCjlZ9efpEHJ9IVr/BCGhIGNt6Mv0Mfp2Y7zN6R4BvP1F7rZI1hjbPAgum8L3T2cz80O92sToibPBgEGEIoZ7XGPPNuw41aw5IQcQU1nD/mcgQ6JnfuEBKANgT8xGfehxdY=\n  file:\n  - govendor_linux_amd64\n  - govendor_linux_386\n  - govendor_linux_arm\n  - govendor_darwin_amd64\n  - govendor_windows_amd64.exe\n  - govendor_windows_386.exe\n  \n  on:\n    tags: true\n    repo: kardianos/govendor\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4443359375,
          "content": "Copyright (c) 2015 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.2314453125,
          "content": "# Use Go modules\n\n[Go modules](https://blog.golang.org/migrating-to-go-modules)\nWork well now. Go modules is considered production with go1.14, but work well on 1.13 and 1.12.\n\nPlease don't use this tool anymore.\n\nPlease use Go modules.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.5029296875,
          "content": "version: \"{build}\"\n\nos: Windows Server 2012 R2\n\nenvironment:\n  GOPATH: c:\\gopath\n  GOVERSION: 1.7\n\nclone_folder: c:\\gopath\\src\\github.com\\kardianos\\govendor\n\ninstall:\n  - mkdir c:\\tmp\n  - set TMP=C:\\tmp\n  - go version\n  - set PATH=%GOPATH%\\bin;c:\\go\\bin;%PATH%\n  - rmdir c:\\go /s /q\n  - appveyor DownloadFile https://storage.googleapis.com/golang/go%GOVERSION%.windows-amd64.zip\n  - 7z x go%GOVERSION%.windows-amd64.zip -y -oC:\\ > NUL\n  - go version\n  - go env\n\nbuild_script:\n  - go test -i ./...\n  - go test ./...\n"
        },
        {
          "name": "cliprompt",
          "type": "tree",
          "content": null
        },
        {
          "name": "context",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "help",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.1533203125,
          "content": "// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// vendor tool to copy external source code from GOPATH or remote location to the\n// local vendor folder. See README.md for usage.\npackage main\n\nimport (\n\t\"bytes\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/kardianos/govendor/cliprompt\"\n\t\"github.com/kardianos/govendor/help\"\n\t\"github.com/kardianos/govendor/run\"\n)\n\nfunc main() {\n\tprompt := &cliprompt.Prompt{}\n\n\tallArgs := os.Args\n\n\tif allArgs[len(allArgs)-1] == \"-\" {\n\t\tstdin := &bytes.Buffer{}\n\t\tif _, err := io.Copy(stdin, os.Stdin); err == nil {\n\t\t\tstdinArgs := strings.Fields(stdin.String())\n\t\t\tallArgs = append(allArgs[:len(allArgs)-1], stdinArgs...)\n\t\t}\n\t}\n\n\tmsg, err := run.Run(os.Stdout, allArgs, prompt)\n\tif err == flag.ErrHelp {\n\t\terr = nil\n\t}\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Error: %+v\\n\", err)\n\t}\n\tmsgText := msg.String()\n\tif len(msgText) > 0 {\n\t\tfmt.Fprint(os.Stderr, msgText)\n\t}\n\tif err != nil {\n\t\tos.Exit(2)\n\t}\n\tswitch msg {\n\tcase help.MsgNone, help.MsgGovendorVersion, help.MsgGovendorLicense:\n\t\tos.Exit(0)\n\tdefault:\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "migrate",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkgspec",
          "type": "tree",
          "content": null
        },
        {
          "name": "prompt",
          "type": "tree",
          "content": null
        },
        {
          "name": "run",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendorfile",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}